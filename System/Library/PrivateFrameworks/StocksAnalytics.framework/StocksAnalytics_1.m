uint64_t *initializeBufferWithCopyOfBuffer for WebSubscriptionAuthenticationEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    v24 = a3[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    v32 = a3[11];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    v36 = a3[12];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    v40 = a3[13];
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    v44 = a3[14];
    v45 = (char *)a1 + v44;
    v46 = (char *)a2 + v44;
    sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    v48 = a3[15];
    v49 = (char *)a1 + v48;
    v50 = (char *)a2 + v48;
    sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for WebSubscriptionAuthenticationEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);

  return v27(v25, v26);
}

uint64_t initializeWithCopy for WebSubscriptionAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for WebSubscriptionAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for WebSubscriptionAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for WebSubscriptionAuthenticationEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebSubscriptionAuthenticationEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA2A128);
}

uint64_t sub_20AA2A128(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_24:
    return v9(v10, a2, v8);
  }
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_23:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_24;
  }
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a3[15];

  return v25(v27, a2, v26);
}

uint64_t storeEnumTagSinglePayload for WebSubscriptionAuthenticationEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA2A79C);
}

uint64_t sub_20AA2A79C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_24:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_23:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_24;
  }
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_23;
  }
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a4[15];

  return v27(v29, a2, a2, v28);
}

void sub_20AA2AE08()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA25620(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    if (v1 <= 0x3F)
    {
      sub_20AA25620(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
      if (v2 <= 0x3F)
      {
        sub_20AA25620(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
        if (v3 <= 0x3F)
        {
          sub_20AA25620(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
          if (v4 <= 0x3F)
          {
            sub_20AA25620(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
            if (v5 <= 0x3F)
            {
              sub_20AA25620(319, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
              if (v6 <= 0x3F)
              {
                sub_20AA25620(319, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
                if (v7 <= 0x3F)
                {
                  sub_20AA25620(319, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
                  if (v8 <= 0x3F)
                  {
                    sub_20AA25620(319, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
                    if (v9 <= 0x3F)
                    {
                      sub_20AA25620(319, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
                      if (v10 <= 0x3F)
                      {
                        sub_20AA25620(319, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
                        if (v11 <= 0x3F) {
                          swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for WebSubscriptionAuthenticationEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 1);
    if (v11)
    {
      *(void *)unint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v11;
      uint64_t v12 = *((void *)v10 + 3);
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = v12;
      v9[32] = v10[32];
      *((void *)v9 + 5) = *((void *)v10 + 5);
      v9[48] = v10[48];
      *((void *)v9 + 7) = *((void *)v10 + 7);
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v14;
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      long long v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *uint64_t v18 = *v19;
    uint64_t v20 = *((void *)v19 + 2);
    *((void *)v18 + 1) = *((void *)v19 + 1);
    *((void *)v18 + 2) = v20;
    uint64_t v21 = (char *)a1 + v17;
    uint64_t v22 = (char *)a2 + v17;
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = *((void *)v22 + 3);
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v24;
    v21[32] = v22[32];
    v21[33] = v22[33];
    uint64_t v25 = a3[8];
    uint64_t v26 = a3[9];
    uint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    v27[16] = v28[16];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    v27[17] = v28[17];
    uint64_t v30 = (char *)a1 + v26;
    uint64_t v31 = (char *)a2 + v26;
    uint64_t v32 = *(void *)((char *)a2 + v26 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32)
    {
      *uint64_t v30 = *v31;
      *((void *)v30 + 1) = *((void *)v31 + 1);
      *((void *)v30 + 2) = v32;
      *((void *)v30 + 3) = *((void *)v31 + 3);
      uint64_t v33 = *((void *)v31 + 5);
      *((void *)v30 + 4) = *((void *)v31 + 4);
      *((void *)v30 + 5) = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v34 = *((_OWORD *)v31 + 1);
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v34;
      *((_OWORD *)v30 + 2) = *((_OWORD *)v31 + 2);
    }
    uint64_t v35 = a3[10];
    uint64_t v36 = a3[11];
    uint64_t v37 = (void *)((char *)a1 + v35);
    uint64_t v38 = (void *)((char *)a2 + v35);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
    uint64_t v40 = a3[12];
    uint64_t v41 = a3[13];
    uint64_t v42 = (char *)a1 + v40;
    uint64_t v43 = (char *)a2 + v40;
    *uint64_t v42 = *v43;
    uint64_t v44 = *((void *)v43 + 2);
    *((void *)v42 + 1) = *((void *)v43 + 1);
    *((void *)v42 + 2) = v44;
    *((unsigned char *)a1 + v41) = *((unsigned char *)a2 + v41);
    uint64_t v45 = a3[14];
    uint64_t v46 = (char *)a1 + v45;
    uint64_t v47 = (_OWORD *)((char *)a2 + v45);
    uint64_t v48 = *(void *)((char *)a2 + v45 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48 == 1)
    {
      *(_OWORD *)uint64_t v46 = *v47;
    }
    else
    {
      *(void *)uint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = v48;
      swift_bridgeObjectRetain();
    }
    uint64_t v49 = a3[15];
    uint64_t v50 = (void *)((char *)a1 + v49);
    v51 = (void *)((char *)a2 + v49);
    uint64_t v52 = v51[1];
    if (v52)
    {
      *uint64_t v50 = *v51;
      v50[1] = v52;
      uint64_t v53 = v51[3];
      v50[2] = v51[2];
      v50[3] = v53;
      uint64_t v54 = v51[5];
      v50[4] = v51[4];
      v50[5] = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v55 = *((_OWORD *)v51 + 1);
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v55;
      *((_OWORD *)v50 + 2) = *((_OWORD *)v51 + 2);
    }
  }
  return a1;
}

uint64_t destroy for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  if (*(void *)(a1 + a2[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[14] + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + a2[15] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  if (v10)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
    uint64_t v11 = *(void *)(v9 + 24);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = v11;
    *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
    *(void *)(v8 + 40) = *(void *)(v9 + 40);
    *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v12;
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    long long v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  uint64_t v18 = *(void *)(v17 + 16);
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  *(void *)(v16 + 16) = v18;
  uint64_t v19 = a1 + v15;
  uint64_t v20 = a2 + v15;
  uint64_t v21 = *(void *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v21;
  uint64_t v22 = *(void *)(v20 + 24);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(void *)(v19 + 24) = v22;
  *(unsigned char *)(v19 + 32) = *(unsigned char *)(v20 + 32);
  *(unsigned char *)(v19 + 33) = *(unsigned char *)(v20 + 33);
  uint64_t v23 = a3[8];
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(unsigned char *)(v25 + 16) = *(unsigned char *)(v26 + 16);
  uint64_t v27 = *(void *)(v26 + 8);
  *(void *)uint64_t v25 = *(void *)v26;
  *(void *)(v25 + 8) = v27;
  *(unsigned char *)(v25 + 17) = *(unsigned char *)(v26 + 17);
  uint64_t v28 = a1 + v24;
  uint64_t v29 = a2 + v24;
  uint64_t v30 = *(void *)(a2 + v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30)
  {
    *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
    *(void *)(v28 + 8) = *(void *)(v29 + 8);
    *(void *)(v28 + 16) = v30;
    *(void *)(v28 + 24) = *(void *)(v29 + 24);
    uint64_t v31 = *(void *)(v29 + 40);
    *(void *)(v28 + 32) = *(void *)(v29 + 32);
    *(void *)(v28 + 40) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v32;
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  }
  uint64_t v33 = a3[10];
  uint64_t v34 = a3[11];
  uint64_t v35 = (void *)(a1 + v33);
  uint64_t v36 = (void *)(a2 + v33);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  uint64_t v38 = a3[12];
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
  uint64_t v42 = *(void *)(v41 + 16);
  *(void *)(v40 + 8) = *(void *)(v41 + 8);
  *(void *)(v40 + 16) = v42;
  *(unsigned char *)(a1 + v39) = *(unsigned char *)(a2 + v39);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = (_OWORD *)(a2 + v43);
  uint64_t v46 = *(void *)(a2 + v43 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v46 == 1)
  {
    *(_OWORD *)uint64_t v44 = *v45;
  }
  else
  {
    *(void *)uint64_t v44 = *(void *)v45;
    *(void *)(v44 + 8) = v46;
    swift_bridgeObjectRetain();
  }
  uint64_t v47 = a3[15];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  uint64_t v50 = v49[1];
  if (v50)
  {
    *uint64_t v48 = *v49;
    v48[1] = v50;
    uint64_t v51 = v49[3];
    v48[2] = v49[2];
    v48[3] = v51;
    uint64_t v52 = v49[5];
    v48[4] = v49[4];
    v48[5] = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v53 = *((_OWORD *)v49 + 1);
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
    *((_OWORD *)v48 + 1) = v53;
    *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
  }
  return a1;
}

uint64_t assignWithCopy for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a1 + v7 + 8);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  if (v10)
  {
    if (v11)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(void *)(v8 + 24) = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
      uint64_t v12 = *(void *)(v9 + 40);
      *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
      *(void *)(v8 + 40) = v12;
      *(void *)(v8 + 56) = *(void *)(v9 + 56);
      *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
      *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
      *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
      *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
    }
    else
    {
      sub_20A9D6C28(v8);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      long long v15 = *(_OWORD *)(v9 + 32);
      long long v14 = *(_OWORD *)(v9 + 48);
      long long v16 = *(_OWORD *)(v9 + 16);
      *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 32) = v15;
      *(_OWORD *)(v8 + 48) = v14;
      *(_OWORD *)(v8 + 16) = v16;
    }
  }
  else if (v11)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = *(void *)(v9 + 8);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = *(void *)(v9 + 24);
    *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 40);
    *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
    *(void *)(v8 + 40) = v13;
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
    *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
    *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
    *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    long long v17 = *(_OWORD *)(v9 + 16);
    long long v18 = *(_OWORD *)(v9 + 32);
    long long v19 = *(_OWORD *)(v9 + 48);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 32) = v18;
    *(_OWORD *)(v8 + 48) = v19;
    *(_OWORD *)(v8 + 16) = v17;
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[7];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)(a2 + v23);
  *(void *)(v24 + 8) = *(void *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  *(void *)(v24 + 24) = *(void *)(v25 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v24 + 32) = *(unsigned char *)(v25 + 32);
  *(unsigned char *)(v24 + 33) = *(unsigned char *)(v25 + 33);
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)(a2 + v26);
  *(void *)(v27 + 8) = *(void *)(a2 + v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v27 + 16) = *(unsigned char *)(v28 + 16);
  *(unsigned char *)(v27 + 17) = *(unsigned char *)(v28 + 17);
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (long long *)(a2 + v29);
  uint64_t v32 = *(void *)(a1 + v29 + 16);
  uint64_t v33 = *(void *)(a2 + v29 + 16);
  if (v32)
  {
    if (v33)
    {
      *(unsigned char *)uint64_t v30 = *(unsigned char *)v31;
      *(void *)(v30 + 8) = *((void *)v31 + 1);
      *(void *)(v30 + 16) = *((void *)v31 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v30 + 24) = *((_DWORD *)v31 + 6);
      *(_DWORD *)(v30 + 28) = *((_DWORD *)v31 + 7);
      *(void *)(v30 + 32) = *((void *)v31 + 4);
      *(void *)(v30 + 40) = *((void *)v31 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v30);
      long long v35 = v31[1];
      long long v34 = v31[2];
      *(_OWORD *)uint64_t v30 = *v31;
      *(_OWORD *)(v30 + 16) = v35;
      *(_OWORD *)(v30 + 32) = v34;
    }
  }
  else if (v33)
  {
    *(unsigned char *)uint64_t v30 = *(unsigned char *)v31;
    *(void *)(v30 + 8) = *((void *)v31 + 1);
    *(void *)(v30 + 16) = *((void *)v31 + 2);
    *(_DWORD *)(v30 + 24) = *((_DWORD *)v31 + 6);
    *(_DWORD *)(v30 + 28) = *((_DWORD *)v31 + 7);
    *(void *)(v30 + 32) = *((void *)v31 + 4);
    *(void *)(v30 + 40) = *((void *)v31 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v36 = *v31;
    long long v37 = v31[2];
    *(_OWORD *)(v30 + 16) = v31[1];
    *(_OWORD *)(v30 + 32) = v37;
    *(_OWORD *)uint64_t v30 = v36;
  }
  uint64_t v38 = a3[10];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v41 = a3[12];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  *(void *)(v42 + 16) = *(void *)(v43 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v44 = a3[14];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  uint64_t v47 = *(void *)(a1 + v44 + 8);
  uint64_t v48 = *(void *)(a2 + v44 + 8);
  if (v47 == 1)
  {
    if (v48 != 1)
    {
      *uint64_t v45 = *v46;
      v45[1] = v46[1];
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v48 == 1)
  {
    sub_20AA2BFE8((uint64_t)v45);
LABEL_20:
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    goto LABEL_22;
  }
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_22:
  uint64_t v49 = a3[15];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (void *)(a2 + v49);
  uint64_t v52 = *(void *)(a1 + v49 + 8);
  uint64_t v53 = v51[1];
  if (v52)
  {
    if (v53)
    {
      *uint64_t v50 = *v51;
      v50[1] = v51[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v50[2] = v51[2];
      v50[3] = v51[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v50[4] = v51[4];
      v50[5] = v51[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20AA2C03C((uint64_t)v50);
      long long v55 = *((_OWORD *)v51 + 1);
      long long v54 = *((_OWORD *)v51 + 2);
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v55;
      *((_OWORD *)v50 + 2) = v54;
    }
  }
  else if (v53)
  {
    *uint64_t v50 = *v51;
    v50[1] = v51[1];
    v50[2] = v51[2];
    v50[3] = v51[3];
    v50[4] = v51[4];
    v50[5] = v51[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v56 = *(_OWORD *)v51;
    long long v57 = *((_OWORD *)v51 + 2);
    *((_OWORD *)v50 + 1) = *((_OWORD *)v51 + 1);
    *((_OWORD *)v50 + 2) = v57;
    *(_OWORD *)uint64_t v50 = v56;
  }
  return a1;
}

uint64_t sub_20AA2BFE8(uint64_t a1)
{
  return a1;
}

uint64_t sub_20AA2C03C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_WORD *)(v17 + 32) = *(_WORD *)(v18 + 32);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v21 = (long long *)(a2 + v16);
  long long v22 = *v21;
  *(_WORD *)(v20 + 16) = *((_WORD *)v21 + 8);
  *(_OWORD *)uint64_t v20 = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = (_OWORD *)(a1 + v23);
  uint64_t v26 = (_OWORD *)(a2 + v23);
  long long v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  uint64_t v28 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  uint64_t v31 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v31) = *(_OWORD *)(a2 + v31);
  uint64_t v32 = a3[15];
  uint64_t v33 = (_OWORD *)(a1 + v32);
  long long v34 = (_OWORD *)(a2 + v32);
  long long v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  v33[2] = v34[2];
  return a1;
}

uint64_t assignWithTake for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (*(void *)(a1 + v7 + 8))
  {
    uint64_t v10 = *(void *)(v9 + 8);
    if (v10)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(v9 + 24);
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(void *)(v8 + 24) = v11;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
      *(void *)(v8 + 40) = *(void *)(v9 + 40);
      *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
      *(void *)(v8 + 56) = *(void *)(v9 + 56);
      *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
      *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
      *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
      *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
      goto LABEL_6;
    }
    sub_20A9D6C28(v8);
  }
  long long v12 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v12;
  *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
  long long v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
LABEL_6:
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  uint64_t v17 = *(void *)(v16 + 16);
  *(void *)(v15 + 8) = v18;
  *(void *)(v15 + 16) = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(a2 + v19 + 8);
  *(void *)uint64_t v20 = *(void *)(a2 + v19);
  *(void *)(v20 + 8) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v21 + 24);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(void *)(v20 + 24) = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + 32) = *(unsigned char *)(v21 + 32);
  *(unsigned char *)(v20 + 33) = *(unsigned char *)(v21 + 33);
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(a2 + v24 + 8);
  *(void *)uint64_t v25 = *(void *)(a2 + v24);
  *(void *)(v25 + 8) = v27;
  swift_bridgeObjectRelease();
  *(_WORD *)(v25 + 16) = *(_WORD *)(v26 + 16);
  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  if (*(void *)(a1 + v28 + 16))
  {
    uint64_t v31 = *(void *)(v30 + 16);
    if (v31)
    {
      *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
      *(void *)(v29 + 8) = *(void *)(v30 + 8);
      *(void *)(v29 + 16) = v31;
      swift_bridgeObjectRelease();
      *(void *)(v29 + 24) = *(void *)(v30 + 24);
      uint64_t v32 = *(void *)(v30 + 40);
      *(void *)(v29 + 32) = *(void *)(v30 + 32);
      *(void *)(v29 + 40) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A98D5B8(v29);
  }
  long long v33 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v33;
  *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
LABEL_11:
  uint64_t v34 = a3[10];
  long long v35 = (void *)(a1 + v34);
  long long v36 = (uint64_t *)(a2 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  *long long v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
  uint64_t v43 = *(void *)(v41 + 8);
  uint64_t v42 = *(void *)(v41 + 16);
  *(void *)(v40 + 8) = v43;
  *(void *)(v40 + 16) = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  if (*(void *)(a1 + v44 + 8) == 1)
  {
LABEL_14:
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    goto LABEL_16;
  }
  uint64_t v47 = *(void *)(v46 + 8);
  if (v47 == 1)
  {
    sub_20AA2BFE8(a1 + v44);
    goto LABEL_14;
  }
  *(void *)uint64_t v45 = *(void *)v46;
  *(void *)(v45 + 8) = v47;
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v48 = a3[15];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  if (!*(void *)(a1 + v48 + 8))
  {
LABEL_20:
    long long v54 = *(_OWORD *)(v50 + 16);
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v54;
    *(_OWORD *)(v49 + 32) = *(_OWORD *)(v50 + 32);
    return a1;
  }
  uint64_t v51 = *(void *)(v50 + 8);
  if (!v51)
  {
    sub_20AA2C03C(v49);
    goto LABEL_20;
  }
  *(void *)uint64_t v49 = *(void *)v50;
  *(void *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v50 + 24);
  *(void *)(v49 + 16) = *(void *)(v50 + 16);
  *(void *)(v49 + 24) = v52;
  swift_bridgeObjectRelease();
  uint64_t v53 = *(void *)(v50 + 40);
  *(void *)(v49 + 32) = *(void *)(v50 + 32);
  *(void *)(v49 + 40) = v53;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA2C4F0);
}

uint64_t sub_20AA2C4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WebSubscriptionAuthenticationEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA2C5C8);
}

uint64_t sub_20AA2C5C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA2C688()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WebSubscriptionAuthenticationEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA2C844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebSubscriptionAuthenticationEvent.Model.CodingKeys()
{
  return &type metadata for WebSubscriptionAuthenticationEvent.Model.CodingKeys;
}

unint64_t sub_20AA2C880()
{
  unint64_t result = qword_267654ED8;
  if (!qword_267654ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654ED8);
  }
  return result;
}

unint64_t sub_20AA2C8D8()
{
  unint64_t result = qword_267654EE0;
  if (!qword_267654EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654EE0);
  }
  return result;
}

unint64_t sub_20AA2C930()
{
  unint64_t result = qword_267654EE8;
  if (!qword_267654EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654EE8);
  }
  return result;
}

uint64_t sub_20AA2C984(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7920 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6144746C75736572 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7E80 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7272656665526461 && a2 == 0xEE00617461446C61 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t static IssueData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t IssueData.issueID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IssueData.issueID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IssueData.issueID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::IssueData __swiftcall IssueData.init(issueID:)(StocksAnalytics::IssueData issueID)
{
  *uint64_t v1 = issueID;
  return issueID;
}

uint64_t sub_20AA2CF88()
{
  return 0x44496575737369;
}

uint64_t sub_20AA2CFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x44496575737369 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA2D038(uint64_t a1)
{
  unint64_t v2 = sub_20AA2D1FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA2D074(uint64_t a1)
{
  unint64_t v2 = sub_20AA2D1FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IssueData.encode(to:)(void *a1)
{
  sub_20AA2D3D4(0, &qword_26AC4E3A0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA2D1FC();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA2D1FC()
{
  unint64_t result = qword_26AC4E370;
  if (!qword_26AC4E370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E370);
  }
  return result;
}

uint64_t IssueData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AA2D3D4(0, &qword_267654EF0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA2D1FC();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86B40();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA2D3D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA2D1FC();
    unint64_t v7 = a3(a1, &type metadata for IssueData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA2D440@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IssueData.init(from:)(a1, a2);
}

uint64_t sub_20AA2D458(void *a1)
{
  sub_20AA2D3D4(0, &qword_26AC4E3A0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA2D1FC();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for IssueData()
{
  return &type metadata for IssueData;
}

unsigned char *storeEnumTagSinglePayload for IssueData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA2D650);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueData.CodingKeys()
{
  return &type metadata for IssueData.CodingKeys;
}

unint64_t sub_20AA2D68C()
{
  unint64_t result = qword_267654EF8;
  if (!qword_267654EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654EF8);
  }
  return result;
}

unint64_t sub_20AA2D6E4()
{
  unint64_t result = qword_26AC4E380;
  if (!qword_26AC4E380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E380);
  }
  return result;
}

unint64_t sub_20AA2D73C()
{
  unint64_t result = qword_26AC4E378;
  if (!qword_26AC4E378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E378);
  }
  return result;
}

void __swiftcall UserBundleSubscriptionContextData.init(bundleSubscriptionStatus:isBundlePurchaser:isAmplifyUser:bundleSubscriptionPurchaseID:sBundlePurchaseID:isPaidBundleViaOfferTrialist:)(StocksAnalytics::UserBundleSubscriptionContextData *__return_ptr retstr, StocksAnalytics::BundleSubscriptionStatus bundleSubscriptionStatus, Swift::Bool isBundlePurchaser, Swift::Bool isAmplifyUser, Swift::String_optional bundleSubscriptionPurchaseID, Swift::String_optional sBundlePurchaseID, Swift::Bool isPaidBundleViaOfferTrialist)
{
  retstr->bundleSubscriptionStatus = *(unsigned char *)bundleSubscriptionStatus;
  retstr->isBundlePurchaser = isBundlePurchaser;
  retstr->isAmplifyUser = isAmplifyUser;
  retstr->bundleSubscriptionPurchaseID = bundleSubscriptionPurchaseID;
  retstr->sBundlePurchaseID = sBundlePurchaseID;
  retstr->isPaidBundleViaOfferTrialist = isPaidBundleViaOfferTrialist;
}

uint64_t static UserBundleSubscriptionContextData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void UserBundleSubscriptionContextData.bundleSubscriptionStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *UserBundleSubscriptionContextData.bundleSubscriptionStatus.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.bundleSubscriptionStatus.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.isBundlePurchaser.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t UserBundleSubscriptionContextData.isBundlePurchaser.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.isBundlePurchaser.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.isAmplifyUser.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t UserBundleSubscriptionContextData.isAmplifyUser.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.isAmplifyUser.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.bundleSubscriptionPurchaseID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserBundleSubscriptionContextData.bundleSubscriptionPurchaseID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.bundleSubscriptionPurchaseID.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.sBundlePurchaseID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserBundleSubscriptionContextData.sBundlePurchaseID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.sBundlePurchaseID.modify())()
{
  return nullsub_1;
}

uint64_t UserBundleSubscriptionContextData.isPaidBundleViaOfferTrialist.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t UserBundleSubscriptionContextData.isPaidBundleViaOfferTrialist.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

uint64_t (*UserBundleSubscriptionContextData.isPaidBundleViaOfferTrialist.modify())()
{
  return nullsub_1;
}

unint64_t sub_20AA2D990(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x66696C706D417369;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20AA2DA60()
{
  return sub_20AA2D990(*v0);
}

uint64_t sub_20AA2DA68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA2E748(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA2DA90(uint64_t a1)
{
  unint64_t v2 = sub_20AA2DD74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA2DACC(uint64_t a1)
{
  unint64_t v2 = sub_20AA2DD74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UserBundleSubscriptionContextData.encode(to:)(void *a1)
{
  sub_20AA2E14C(0, &qword_26AC51930, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v14 - v7;
  char v9 = *v1;
  int v10 = v1[1];
  int v19 = v1[2];
  int v20 = v10;
  uint64_t v11 = *((void *)v1 + 1);
  uint64_t v17 = *((void *)v1 + 2);
  uint64_t v18 = v11;
  uint64_t v12 = *((void *)v1 + 3);
  uint64_t v15 = *((void *)v1 + 4);
  uint64_t v16 = v12;
  v14[1] = v1[40];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA2DD74();
  sub_20AB86DC0();
  char v27 = v9;
  char v26 = 0;
  sub_20AA2DDC8();
  sub_20AB86C50();
  if (!v2)
  {
    char v25 = 1;
    sub_20AB86C20();
    char v24 = 2;
    sub_20AB86C20();
    char v23 = 3;
    sub_20AB86BC0();
    char v22 = 4;
    sub_20AB86BC0();
    char v21 = 5;
    sub_20AB86C20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AA2DD74()
{
  unint64_t result = qword_26AC50FF0;
  if (!qword_26AC50FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FF0);
  }
  return result;
}

unint64_t sub_20AA2DDC8()
{
  unint64_t result = qword_26AC50A28;
  if (!qword_26AC50A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50A28);
  }
  return result;
}

uint64_t UserBundleSubscriptionContextData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA2E14C(0, &qword_26AC517D8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA2DD74();
  sub_20AB86DA0();
  if (!v2)
  {
    char v30 = 0;
    sub_20AA2E1B0();
    sub_20AB86B80();
    int v10 = v31;
    char v29 = 1;
    int v11 = sub_20AB86B50();
    char v28 = 2;
    int v23 = sub_20AB86B50();
    int v24 = v11;
    char v27 = 3;
    uint64_t v12 = sub_20AB86AF0();
    uint64_t v15 = v14;
    uint64_t v21 = v12;
    int v22 = v10;
    char v26 = 4;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_20AB86AF0();
    uint64_t v18 = v17;
    uint64_t v20 = v16;
    char v25 = 5;
    swift_bridgeObjectRetain();
    char v19 = sub_20AB86B50();
    v23 &= 1u;
    v24 &= 1u;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(unsigned char *)a2 = v22;
    *(unsigned char *)(a2 + 1) = v24;
    *(unsigned char *)(a2 + 2) = v23;
    *(void *)(a2 + 8) = v21;
    *(void *)(a2 + 16) = v15;
    *(void *)(a2 + 24) = v20;
    *(void *)(a2 + 32) = v18;
    *(unsigned char *)(a2 + 40) = v19 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AA2E14C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA2DD74();
    unint64_t v7 = a3(a1, &type metadata for UserBundleSubscriptionContextData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA2E1B0()
{
  unint64_t result = qword_26AC50A38;
  if (!qword_26AC50A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50A38);
  }
  return result;
}

unint64_t sub_20AA2E208()
{
  unint64_t result = qword_26AC51018;
  if (!qword_26AC51018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51018);
  }
  return result;
}

unint64_t sub_20AA2E260()
{
  unint64_t result = qword_26AC51010;
  if (!qword_26AC51010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51010);
  }
  return result;
}

uint64_t sub_20AA2E2B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UserBundleSubscriptionContextData.init(from:)(a1, a2);
}

uint64_t sub_20AA2E2CC(void *a1)
{
  return UserBundleSubscriptionContextData.encode(to:)(a1);
}

uint64_t destroy for UserBundleSubscriptionContextData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserBundleSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserBundleSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for UserBundleSubscriptionContextData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserBundleSubscriptionContextData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UserBundleSubscriptionContextData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserBundleSubscriptionContextData()
{
  return &type metadata for UserBundleSubscriptionContextData;
}

unsigned char *storeEnumTagSinglePayload for UserBundleSubscriptionContextData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA2E608);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserBundleSubscriptionContextData.CodingKeys()
{
  return &type metadata for UserBundleSubscriptionContextData.CodingKeys;
}

unint64_t sub_20AA2E644()
{
  unint64_t result = qword_267654F00;
  if (!qword_267654F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654F00);
  }
  return result;
}

unint64_t sub_20AA2E69C()
{
  unint64_t result = qword_26AC4E218;
  if (!qword_26AC4E218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E218);
  }
  return result;
}

unint64_t sub_20AA2E6F4()
{
  unint64_t result = qword_26AC50FF8;
  if (!qword_26AC50FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FF8);
  }
  return result;
}

uint64_t sub_20AA2E748(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x800000020ABA7EA0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7EC0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x66696C706D417369 && a2 == 0xED00007265735579 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000020ABA7EE0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7F00 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000020ABA7F20)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t static SearchSelectionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t SearchSelectionData.selectedResult.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchSelectionData.selectedResult.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SearchSelectionData.selectedResult.modify())()
{
  return nullsub_1;
}

void SearchSelectionData.selectedResultActionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *SearchSelectionData.selectedResultActionType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*SearchSelectionData.selectedResultActionType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SearchSelectionData __swiftcall SearchSelectionData.init(selectedResult:selectedResultActionType:)(Swift::String selectedResult, StocksAnalytics::SelectedResultActionType selectedResultActionType)
{
  char v3 = *(unsigned char *)selectedResultActionType;
  *(Swift::String *)uint64_t v2 = selectedResult;
  *(unsigned char *)(v2 + 16) = v3;
  result.selectedResult = selectedResult;
  result.selectedResultActionType = selectedResultActionType;
  return result;
}

uint64_t sub_20AA2EA90()
{
  if (*v0) {
    return 0xD000000000000018;
  }
  else {
    return 0x64657463656C6573;
  }
}

uint64_t sub_20AA2EADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA2F450(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA2EB04(uint64_t a1)
{
  unint64_t v2 = sub_20AA2ED1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA2EB40(uint64_t a1)
{
  unint64_t v2 = sub_20AA2ED1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchSelectionData.encode(to:)(void *a1)
{
  sub_20AA2EFD4(0, &qword_267654F08, MEMORY[0x263F8E0C0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v13 - v6;
  int v14 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = a1[3];
  char v9 = a1;
  uint64_t v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_20AA2ED1C();
  sub_20AB86DC0();
  char v17 = 0;
  sub_20AB86C10();
  if (!v2)
  {
    char v16 = v14;
    char v15 = 1;
    sub_20AA2ED70();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

unint64_t sub_20AA2ED1C()
{
  unint64_t result = qword_267654F10;
  if (!qword_267654F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654F10);
  }
  return result;
}

unint64_t sub_20AA2ED70()
{
  unint64_t result = qword_267654F18;
  if (!qword_267654F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654F18);
  }
  return result;
}

uint64_t SearchSelectionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA2EFD4(0, &qword_267654F20, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA2ED1C();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v18 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  char v16 = 1;
  sub_20AA2F038();
  swift_bridgeObjectRetain();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v13 = v17;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_20AA2EFD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA2ED1C();
    unint64_t v7 = a3(a1, &type metadata for SearchSelectionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA2F038()
{
  unint64_t result = qword_267654F28;
  if (!qword_267654F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654F28);
  }
  return result;
}

uint64_t sub_20AA2F094@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchSelectionData.init(from:)(a1, a2);
}

uint64_t sub_20AA2F0AC(void *a1)
{
  return SearchSelectionData.encode(to:)(a1);
}

uint64_t sub_20AA2F0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchSelectionData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SearchSelectionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchSelectionData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchSelectionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSelectionData()
{
  return &type metadata for SearchSelectionData;
}

unsigned char *storeEnumTagSinglePayload for SearchSelectionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA2F310);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchSelectionData.CodingKeys()
{
  return &type metadata for SearchSelectionData.CodingKeys;
}

unint64_t sub_20AA2F34C()
{
  unint64_t result = qword_267654F30;
  if (!qword_267654F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654F30);
  }
  return result;
}

unint64_t sub_20AA2F3A4()
{
  unint64_t result = qword_267654F38;
  if (!qword_267654F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654F38);
  }
  return result;
}

unint64_t sub_20AA2F3FC()
{
  unint64_t result = qword_267654F40;
  if (!qword_267654F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654F40);
  }
  return result;
}

uint64_t sub_20AA2F450(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64657463656C6573 && a2 == 0xEE00746C75736552;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000020ABA7F40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

StocksAnalytics::ArticleSource_optional __swiftcall ArticleSource.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t ArticleSource.rawValue.getter()
{
  uint64_t v1 = 0x656C707061;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F6F686179;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AA2F614(char *a1, unsigned __int8 *a2)
{
  return sub_20AA38528(*a1, *a2);
}

unint64_t sub_20AA2F624()
{
  unint64_t result = qword_267654F48;
  if (!qword_267654F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654F48);
  }
  return result;
}

uint64_t sub_20AA2F678()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA2F714()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA2F79C()
{
  return sub_20AB86D80();
}

StocksAnalytics::ArticleSource_optional sub_20AA2F834(Swift::String *a1)
{
  return ArticleSource.init(rawValue:)(*a1);
}

void sub_20AA2F840(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x656C707061;
  if (v2 != 1) {
    uint64_t v4 = 0x6F6F686179;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (!v5) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_20AA2F898()
{
  return sub_20AB86750();
}

uint64_t sub_20AA2F8F8()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ArticleSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA2FA14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleSource()
{
  return &type metadata for ArticleSource;
}

unint64_t sub_20AA2FA4C()
{
  unint64_t result = qword_267654F50;
  if (!qword_267654F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654F50);
  }
  return result;
}

uint64_t sub_20AA2FAA0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654F58, MEMORY[0x263F24D10]);
}

uint64_t static WatchSymbolEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653420, MEMORY[0x263F24D18], (uint64_t)qword_267654F58, a1);
}

uint64_t static WatchSymbolEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA2FB08(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654F70, MEMORY[0x263F24DC8]);
}

uint64_t static WatchSymbolEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653428, MEMORY[0x263F24DD8], (uint64_t)qword_267654F70, a1);
}

uint64_t sub_20AA2FB68()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654F88);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654F88);
  return sub_20AB85D30();
}

uint64_t static WatchSymbolEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653430, MEMORY[0x263F24DE8], (uint64_t)qword_267654F88, a1);
}

uint64_t WatchSymbolEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t WatchSymbolEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*WatchSymbolEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WatchSymbolEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 20);
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WatchSymbolEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4F728);
}

uint64_t WatchSymbolEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 20);
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WatchSymbolEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t WatchSymbolEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 24);
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WatchSymbolEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 24);
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WatchSymbolEvent.watchedSymbolListData.modify())()
{
  return nullsub_1;
}

uint64_t WatchSymbolEvent.watchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 28);
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WatchSymbolEvent.watchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent(0) + 28);
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WatchSymbolEvent.watchlistData.modify())()
{
  return nullsub_1;
}

uint64_t WatchSymbolEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WatchSymbolEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t WatchSymbolEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t WatchSymbolEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchSymbolEvent.Model(0) + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for WatchSymbolEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4F690);
}

uint64_t WatchSymbolEvent.Model.watchedSymbolListData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for WatchSymbolEvent.Model(0) + 24));

  return swift_bridgeObjectRetain();
}

uint64_t WatchSymbolEvent.Model.watchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WatchSymbolEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

int *WatchSymbolEvent.Model.init(eventData:symbolData:watchedSymbolListData:watchlistData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  char v9 = *((unsigned char *)a2 + 16);
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v12 = *a3;
  char v13 = *a4;
  uint64_t v14 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a5, a1, v14);
  uint64_t result = (int *)type metadata accessor for WatchSymbolEvent.Model(0);
  uint64_t v16 = a5 + result[5];
  *(void *)uint64_t v16 = v7;
  *(void *)(v16 + 8) = v8;
  *(unsigned char *)(v16 + 16) = v9;
  *(void *)(v16 + 24) = v10;
  *(void *)(v16 + 32) = v11;
  *(void *)(a5 + result[6]) = v12;
  *(unsigned char *)(a5 + result[7]) = v13;
  return result;
}

unint64_t sub_20AA30570()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x61446C6F626D7973;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x73696C6863746177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA30618(uint64_t a1)
{
  unint64_t v2 = sub_20AA308FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA30654(uint64_t a1)
{
  unint64_t v2 = sub_20AA308FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WatchSymbolEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA30DC4(0, &qword_267654FA0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA308FC();
  sub_20AB86DC0();
  LOBYTE(v19) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for WatchSymbolEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    char v14 = *((unsigned char *)v11 + 16);
    uint64_t v16 = v11[3];
    uint64_t v15 = v11[4];
    uint64_t v19 = v12;
    uint64_t v20 = v13;
    char v21 = v14;
    uint64_t v22 = v16;
    uint64_t v23 = v15;
    HIBYTE(v18) = 1;
    sub_20A97C61C();
    sub_20AB86C50();
    uint64_t v19 = *(void *)(v3 + v10[6]);
    HIBYTE(v18) = 2;
    sub_20A992474();
    sub_20AB86C50();
    LOBYTE(v19) = *(unsigned char *)(v3 + v10[7]);
    HIBYTE(v18) = 3;
    sub_20A9875D0();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA308FC()
{
  unint64_t result = qword_267654FA8;
  if (!qword_267654FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654FA8);
  }
  return result;
}

uint64_t WatchSymbolEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_20AB85FC0();
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA30DC4(0, &qword_267654FB0, MEMORY[0x263F8E040]);
  uint64_t v25 = v5;
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = (int *)type metadata accessor for WatchSymbolEvent.Model(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA308FC();
  uint64_t v9 = (uint64_t)v26;
  sub_20AB86DA0();
  if (v9) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v26 = a1;
  uint64_t v10 = (uint64_t)v8;
  uint64_t v11 = v23;
  LOBYTE(v27) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v10, v13, v3);
  char v32 = 1;
  sub_20A97C5C8();
  sub_20AB86B80();
  uint64_t v14 = v28;
  char v15 = v29;
  uint64_t v16 = v30;
  uint64_t v17 = v31;
  uint64_t v18 = v10 + v6[5];
  *(void *)uint64_t v18 = v27;
  *(void *)(v18 + 8) = v14;
  *(unsigned char *)(v18 + 16) = v15;
  *(void *)(v18 + 24) = v16;
  *(void *)(v18 + 32) = v17;
  char v32 = 2;
  sub_20A992420();
  sub_20AB86B80();
  *(void *)(v10 + v6[6]) = v27;
  char v32 = 3;
  sub_20A98757C();
  sub_20AB86B80();
  (*(void (**)(void, uint64_t))(v22 + 8))(0, v12);
  *(unsigned char *)(v10 + v6[7]) = v27;
  sub_20AA30E28(v10, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_20AA30E8C(v10);
}

void sub_20AA30DC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA308FC();
    unint64_t v7 = a3(a1, &type metadata for WatchSymbolEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA30E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WatchSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA30E8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WatchSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA30EE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WatchSymbolEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA30F00(void *a1)
{
  return WatchSymbolEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA30F18@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653420, MEMORY[0x263F24D18], (uint64_t)qword_267654F58, a1);
}

uint64_t sub_20AA30F50@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653428, MEMORY[0x263F24DD8], (uint64_t)qword_267654F70, a1);
}

uint64_t sub_20AA30F88@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653430, MEMORY[0x263F24DE8], (uint64_t)qword_267654F88, a1);
}

uint64_t getEnumTagSinglePayload for WatchSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA30FD4);
}

uint64_t sub_20AA30FD4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for WatchSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA31228);
}

uint64_t sub_20AA31228(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

uint64_t getEnumTagSinglePayload for WatchSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA31488);
}

uint64_t sub_20AA31488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for WatchSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA31560);
}

uint64_t sub_20AA31560(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA31620()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WatchSymbolEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA31798);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchSymbolEvent.Model.CodingKeys()
{
  return &type metadata for WatchSymbolEvent.Model.CodingKeys;
}

unint64_t sub_20AA317D4()
{
  unint64_t result = qword_267654FB8;
  if (!qword_267654FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654FB8);
  }
  return result;
}

unint64_t sub_20AA3182C()
{
  unint64_t result = qword_267654FC0;
  if (!qword_267654FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654FC0);
  }
  return result;
}

unint64_t sub_20AA31884()
{
  unint64_t result = qword_267654FC8;
  if (!qword_267654FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654FC8);
  }
  return result;
}

uint64_t static SubscriptionResultData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void SubscriptionResultData.resultType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *SubscriptionResultData.resultType.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*SubscriptionResultData.resultType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SubscriptionResultData __swiftcall SubscriptionResultData.init(resultType:)(StocksAnalytics::SubscriptionResultData resultType)
{
  *unint64_t v1 = *(unsigned char *)resultType.resultType;
  return resultType;
}

uint64_t sub_20AA31924()
{
  return 0x7954746C75736572;
}

uint64_t sub_20AA31940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7954746C75736572 && a2 == 0xEA00000000006570)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA319E4(uint64_t a1)
{
  unint64_t v2 = sub_20AA31BB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA31A20(uint64_t a1)
{
  unint64_t v2 = sub_20AA31BB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SubscriptionResultData.encode(to:)(void *a1)
{
  sub_20AA31DF8(0, &qword_267654FD0, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA31BB8();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AA31C0C();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA31BB8()
{
  unint64_t result = qword_267654FD8;
  if (!qword_267654FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654FD8);
  }
  return result;
}

unint64_t sub_20AA31C0C()
{
  unint64_t result = qword_267654FE0;
  if (!qword_267654FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654FE0);
  }
  return result;
}

uint64_t SubscriptionResultData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA31DF8(0, &qword_267654FE8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA31BB8();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AA31E5C();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA31DF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA31BB8();
    unint64_t v7 = a3(a1, &type metadata for SubscriptionResultData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA31E5C()
{
  unint64_t result = qword_267654FF0;
  if (!qword_267654FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654FF0);
  }
  return result;
}

unint64_t sub_20AA31EB4()
{
  unint64_t result = qword_267654FF8;
  if (!qword_267654FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654FF8);
  }
  return result;
}

unint64_t sub_20AA31F0C()
{
  unint64_t result = qword_267655000;
  if (!qword_267655000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655000);
  }
  return result;
}

uint64_t sub_20AA31F60@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SubscriptionResultData.init(from:)(a1, a2);
}

uint64_t sub_20AA31F78(void *a1)
{
  return SubscriptionResultData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for SubscriptionResultData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA3205CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultData()
{
  return &type metadata for SubscriptionResultData;
}

unsigned char *storeEnumTagSinglePayload for SubscriptionResultData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA32130);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultData.CodingKeys()
{
  return &type metadata for SubscriptionResultData.CodingKeys;
}

unint64_t sub_20AA3216C()
{
  unint64_t result = qword_267655008;
  if (!qword_267655008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655008);
  }
  return result;
}

unint64_t sub_20AA321C4()
{
  unint64_t result = qword_267655010;
  if (!qword_267655010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655010);
  }
  return result;
}

unint64_t sub_20AA3221C()
{
  unint64_t result = qword_267655018;
  if (!qword_267655018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655018);
  }
  return result;
}

uint64_t static VideoAdLoadData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t VideoAdLoadData.duration.getter()
{
  return *(void *)v0;
}

uint64_t VideoAdLoadData.duration.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*VideoAdLoadData.duration.modify())()
{
  return nullsub_1;
}

void VideoAdLoadData.loadState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

unsigned char *VideoAdLoadData.loadState.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*VideoAdLoadData.loadState.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadData.init(duration:loadState:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a2;
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v3;
  return result;
}

uint64_t sub_20AA322F0()
{
  if (*v0) {
    return 0x7461745364616F6CLL;
  }
  else {
    return 0x6E6F697461727564;
  }
}

uint64_t sub_20AA32330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA32C2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA32358(uint64_t a1)
{
  unint64_t v2 = sub_20AA32568();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA32394(uint64_t a1)
{
  unint64_t v2 = sub_20AA32568();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VideoAdLoadData.encode(to:)(void *a1)
{
  sub_20AA327DC(0, &qword_267655020, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - v7;
  int v11 = *(unsigned __int8 *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA32568();
  sub_20AB86DC0();
  char v14 = 0;
  sub_20AB86C70();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_20AA325BC();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AA32568()
{
  unint64_t result = qword_267655028;
  if (!qword_267655028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655028);
  }
  return result;
}

unint64_t sub_20AA325BC()
{
  unint64_t result = qword_267655030;
  if (!qword_267655030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655030);
  }
  return result;
}

uint64_t VideoAdLoadData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA327DC(0, &qword_267655038, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA32568();
  sub_20AB86DA0();
  if (!v2)
  {
    char v16 = 0;
    uint64_t v10 = sub_20AB86BA0();
    char v14 = 1;
    sub_20AA32840();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v12 = v15;
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA327DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA32568();
    unint64_t v7 = a3(a1, &type metadata for VideoAdLoadData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA32840()
{
  unint64_t result = qword_267655040;
  if (!qword_267655040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655040);
  }
  return result;
}

unint64_t sub_20AA32898()
{
  unint64_t result = qword_267655048;
  if (!qword_267655048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655048);
  }
  return result;
}

unint64_t sub_20AA328F0()
{
  unint64_t result = qword_267655050;
  if (!qword_267655050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655050);
  }
  return result;
}

uint64_t sub_20AA32944@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdLoadData.init(from:)(a1, a2);
}

uint64_t sub_20AA3295C(void *a1)
{
  return VideoAdLoadData.encode(to:)(a1);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for VideoAdLoadData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 6;
  int v5 = v3 - 6;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadData()
{
  return &type metadata for VideoAdLoadData;
}

unsigned char *storeEnumTagSinglePayload for VideoAdLoadData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA32AECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadData.CodingKeys()
{
  return &type metadata for VideoAdLoadData.CodingKeys;
}

unint64_t sub_20AA32B28()
{
  unint64_t result = qword_267655058;
  if (!qword_267655058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655058);
  }
  return result;
}

unint64_t sub_20AA32B80()
{
  unint64_t result = qword_267655060;
  if (!qword_267655060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655060);
  }
  return result;
}

unint64_t sub_20AA32BD8()
{
  unint64_t result = qword_267655068;
  if (!qword_267655068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655068);
  }
  return result;
}

uint64_t sub_20AA32C2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461745364616F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static MediaEngagementCompletedData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t MediaEngagementCompletedData.mediaTimePlayed.getter()
{
  return *(void *)v0;
}

uint64_t MediaEngagementCompletedData.mediaTimePlayed.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*MediaEngagementCompletedData.mediaTimePlayed.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngagementCompletedData.init(mediaTimePlayed:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_20AA32D6C()
{
  return 0x6D6954616964656DLL;
}

uint64_t sub_20AA32D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6D6954616964656DLL && a2 == 0xEF646579616C5065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA32E4C(uint64_t a1)
{
  unint64_t v2 = sub_20AA3300C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA32E88(uint64_t a1)
{
  unint64_t v2 = sub_20AA3300C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MediaEngagementCompletedData.encode(to:)(void *a1)
{
  sub_20AA331E0(0, &qword_267655070, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA3300C();
  sub_20AB86DC0();
  sub_20AB86C70();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA3300C()
{
  unint64_t result = qword_267655078;
  if (!qword_267655078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655078);
  }
  return result;
}

uint64_t MediaEngagementCompletedData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AA331E0(0, &qword_267655080, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA3300C();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86BA0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA331E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA3300C();
    unint64_t v7 = a3(a1, &type metadata for MediaEngagementCompletedData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA33248()
{
  unint64_t result = qword_26AC50F40;
  if (!qword_26AC50F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F40);
  }
  return result;
}

unint64_t sub_20AA332A0()
{
  unint64_t result = qword_26AC50F38;
  if (!qword_26AC50F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F38);
  }
  return result;
}

uint64_t sub_20AA332F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MediaEngagementCompletedData.init(from:)(a1, a2);
}

uint64_t sub_20AA3330C(void *a1)
{
  sub_20AA331E0(0, &qword_267655070, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA3300C();
  sub_20AB86DC0();
  sub_20AB86C70();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for MediaEngagementCompletedData()
{
  return &type metadata for MediaEngagementCompletedData;
}

unsigned char *storeEnumTagSinglePayload for MediaEngagementCompletedData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA33500);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementCompletedData.CodingKeys()
{
  return &type metadata for MediaEngagementCompletedData.CodingKeys;
}

unint64_t sub_20AA3353C()
{
  unint64_t result = qword_267655088;
  if (!qword_267655088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655088);
  }
  return result;
}

unint64_t sub_20AA33594()
{
  unint64_t result = qword_267655090;
  if (!qword_267655090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655090);
  }
  return result;
}

unint64_t sub_20AA335EC()
{
  unint64_t result = qword_267655098;
  if (!qword_267655098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655098);
  }
  return result;
}

uint64_t sub_20AA33640(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x676E696B61657262;
      break;
    case 2:
      uint64_t v5 = 0x69706F6C65766564;
      unint64_t v3 = 0xEA0000000000676ELL;
      break;
    case 3:
      uint64_t v5 = 0x64657461647075;
      break;
    case 4:
      uint64_t v5 = 0x6C65527373657270;
      unint64_t v3 = 0xEC00000065736165;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x676E696B61657262) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEA0000000000676ELL;
      if (v5 != 0x69706F6C65766564) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x64657461647075;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEC00000065736165;
      if (v5 != 0x6C65527373657270) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA3381C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1869768058;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1869768058;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7234932;
      break;
    case 2:
      uint64_t v5 = 0x694679746E657774;
      unint64_t v3 = 0xEA00000000006576;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7974666966;
      break;
    case 4:
      uint64_t v5 = 0x4679746E65766573;
      unint64_t v3 = 0xEB00000000657669;
      break;
    case 5:
      uint64_t v5 = 0x72646E7548656E6FLL;
      unint64_t v3 = 0xEA00000000006465;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 7234932) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEA00000000006576;
      if (v5 != 0x694679746E657774) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x7974666966) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x4679746E65766573;
      unint64_t v6 = 0xEB00000000657669;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000006465;
      if (v5 != 0x72646E7548656E6FLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA33A28(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unsigned int v6 = 1634891107;
      goto LABEL_7;
    case 2:
      uint64_t v5 = 0x69726F7453706F74;
      unint64_t v3 = 0xEA00000000007365;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6C6F626D7973;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6D6F724665726F6DLL;
      break;
    case 5:
      unsigned int v6 = 1634493810;
LABEL_7:
      uint64_t v5 = v6 | 0x64657400000000;
      break;
    case 6:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 25697;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x64657461727563) {
        goto LABEL_20;
      }
      goto LABEL_23;
    case 2:
      unint64_t v7 = 0xEA00000000007365;
      if (v5 != 0x69726F7453706F74) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 3:
      unint64_t v7 = 0xE600000000000000;
      if (v5 != 0x6C6F626D7973) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 4:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x6D6F724665726F6DLL) {
        goto LABEL_23;
      }
      goto LABEL_20;
    case 5:
      uint64_t v2 = 0x646574616C6572;
      goto LABEL_19;
    case 6:
      unint64_t v7 = 0xE200000000000000;
      if (v5 != 25697) {
        goto LABEL_23;
      }
      goto LABEL_20;
    default:
LABEL_19:
      if (v5 != v2) {
        goto LABEL_23;
      }
LABEL_20:
      if (v3 == v7) {
        char v8 = 1;
      }
      else {
LABEL_23:
      }
        char v8 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_20AA33C44(uint64_t a1, uint64_t a2)
{
  return sub_20AA38484(a1, a2, EventPath.rawValue.getter);
}

uint64_t sub_20AA33C5C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x676B636142707061;
      unint64_t v3 = 0xED0000646E756F72;
      break;
    case 2:
      uint64_t v5 = 0x6976614E72657375;
      unint64_t v3 = 0xEE006E6F69746167;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6873617263;
      break;
    case 4:
      uint64_t v5 = 0x6975516563726F66;
      unint64_t v3 = 0xE900000000000074;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED0000646E756F72;
      if (v5 == 0x676B636142707061) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEE006E6F69746167;
      if (v5 != 0x6976614E72657375) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x6873617263;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE900000000000074;
      if (v5 != 0x6975516563726F66) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA33E58(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1701736302;
      break;
    case 2:
      unint64_t v3 = 0x800000020ABA64F0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x79726F7473;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1701736302) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x800000020ABA64F0;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x79726F7473) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA33FD8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 1684366694;
    }
    else {
      uint64_t v3 = 0x656C6369747261;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE400000000000000;
    }
    else {
      unint64_t v4 = 0xE700000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 1684366694;
      }
      else {
        uint64_t v6 = 0x656C6369747261;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE400000000000000;
      }
      else {
        unint64_t v7 = 0xE700000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA340E4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 7824750;
    }
    else {
      uint64_t v3 = 0x6E696E7275746572;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE300000000000000;
    }
    else {
      unint64_t v4 = 0xE900000000000067;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 7824750;
      }
      else {
        uint64_t v6 = 0x6E696E7275746572;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE300000000000000;
      }
      else {
        unint64_t v7 = 0xE900000000000067;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA341F8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x72756F5361746164;
  }
  else {
    uint64_t v3 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000006563;
  }
  if (a2) {
    uint64_t v5 = 0x72756F5361746164;
  }
  else {
    uint64_t v5 = 0x6E776F6E6B6E75;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006563;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20AB86CA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20AA342A4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6C6F626D7973;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x756F59726F66;
      break;
    case 3:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 6385509;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x6C6F626D7973) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x756F59726F66;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE300000000000000;
      if (v5 == 6385509) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA34414(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 0x6E776F6E6B6E75;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0x800000020ABA6CC0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 0x6E776F6E6B6E75;
  }
  if (a2) {
    unint64_t v6 = 0x800000020ABA6CC0;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20AB86CA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20AA344C0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6C616974696E69;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6C616974696E69;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x676E69646E6570;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x64656C696166;
      break;
    case 3:
      uint64_t v5 = 0x656C6C69666C7566;
      unint64_t v3 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x676E69646E6570) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x64656C696166;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000064;
      if (v5 == 0x656C6C69666C7566) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA34648(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x800000020ABA6A40;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 2:
      unint64_t v5 = 0x72656C6C65736572;
      unint64_t v3 = 0xEC000000646C6F53;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6573756F68;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x800000020ABA6A40;
      if (v5 == 0xD000000000000013) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x72656C6C65736572;
      unint64_t v6 = 0xEC000000646C6F53;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6573756F68) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA347E8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x656C6369747261;
    }
    else {
      uint64_t v3 = 0x50676E69646E616CLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xEB00000000656761;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x656C6369747261;
      }
      else {
        uint64_t v6 = 0x50676E69646E616CLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xEB00000000656761;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA34914(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7070417377656ELL;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x65726F7453707061;
      break;
    case 3:
      uint64_t v5 = 0x6973626557627570;
      unint64_t v3 = 0xEA00000000006574;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x7070417377656ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x65726F7453707061;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEA00000000006574;
      if (v5 == 0x6973626557627570) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA34AA4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1701147238;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6C61697274;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1684627824;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1701147238) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x6C61697274;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1684627824) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA34C0C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E49646574706FLL;
    }
    else {
      uint64_t v3 = 0x74754F646574706FLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E49646574706FLL;
      }
      else {
        uint64_t v6 = 0x74754F646574706FLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA34D28(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1768319351;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1851881335;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x67356E617777;
      break;
    case 4:
      uint64_t v5 = 0x6863616552746F6ELL;
      unint64_t v3 = 0xEC000000656C6261;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1768319351) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1851881335) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x67356E617777;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEC000000656C6261;
      if (v5 != 0x6863616552746F6ELL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA34EDC(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x800000020ABA6F20;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v5 = 0x7245726576726573;
      unint64_t v3 = 0xEB00000000726F72;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x617461446F6ELL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x800000020ABA6F20;
      if (v5 == 0xD000000000000012) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x7245726576726573;
      unint64_t v6 = 0xEB00000000726F72;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x617461446F6ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA3507C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6573616863727570;
      unint64_t v3 = 0xED00007465656853;
      break;
    case 2:
      uint64_t v5 = 0x50676E69646E616CLL;
      unint64_t v3 = 0xEB00000000656761;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1802398060;
      break;
    case 4:
      uint64_t v5 = 0x65676150706D61;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xED00007465656853;
      if (v5 == 0x6573616863727570) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEB00000000656761;
      if (v5 != 0x50676E69646E616CLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1802398060;
      goto LABEL_12;
    case 4:
      if (v5 != 0x65676150706D61) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA35258(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6863746177;
      break;
    case 2:
      uint64_t v5 = 0x68637461776E75;
      break;
    case 3:
      uint64_t v5 = 0x626D795377656976;
      unint64_t v3 = 0xEE00646565466C6FLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6863746177) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x68637461776E75;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEE00646565466C6FLL;
      if (v5 == 0x626D795377656976) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA353F0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6C61697274;
      break;
    case 2:
      uint64_t v5 = 0x6269726373627573;
      unint64_t v3 = 0xEA00000000006465;
      break;
    case 3:
      uint64_t v5 = 0x6373627553746F6ELL;
      unint64_t v3 = 0xED00006465626972;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6C61697274) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6269726373627573;
      unint64_t v6 = 0xEA00000000006465;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xED00006465626972;
      if (v5 == 0x6373627553746F6ELL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA35598(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x656C6369747261;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1684366694;
      break;
    case 3:
      uint64_t v5 = 0x50676E69646E616CLL;
      unint64_t v3 = 0xEB00000000656761;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x656C6369747261) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1684366694;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEB00000000656761;
      if (v5 == 0x50676E69646E616CLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA35720(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x73736563637573;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1818845542;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x6C65636E6163;
      break;
    case 4:
      unint64_t v3 = 0x800000020ABA6C70;
      unint64_t v5 = 0xD000000000000015;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x73736563637573) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1818845542) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x6C65636E6163;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0x800000020ABA6C70;
      if (v5 != 0xD000000000000015) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA358D4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6563697270;
      break;
    case 2:
      uint64_t v5 = 0x614374656B72616DLL;
      unint64_t v3 = 0xE900000000000070;
      break;
    case 3:
      uint64_t v5 = 0x61746E6563726570;
      unint64_t v3 = 0xEA00000000006567;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6563697270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x614374656B72616DLL;
      unint64_t v6 = 0xE900000000000070;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEA00000000006567;
      if (v5 == 0x61746E6563726570) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA35A6C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6C61697274;
      break;
    case 2:
      unint64_t v5 = 0x6269726373627573;
      unint64_t v3 = 0xEA00000000006465;
      break;
    case 3:
      unint64_t v3 = 0x800000020ABA6DA0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v5 = 0x6373627553746F6ELL;
      unint64_t v3 = 0xED00006465626972;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6C61697274) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEA00000000006465;
      if (v5 != 0x6269726373627573) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0x800000020ABA6DA0;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xED00006465626972;
      if (v5 != 0x6373627553746F6ELL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA35C58(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6269726373627573;
    }
    else {
      uint64_t v3 = 0x6373627553746F6ELL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEA00000000006465;
    }
    else {
      unint64_t v4 = 0xED00006465626972;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6269726373627573;
      }
      else {
        uint64_t v6 = 0x6373627553746F6ELL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEA00000000006465;
      }
      else {
        unint64_t v7 = 0xED00006465626972;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA35D94(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 2036427888;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 2036427888;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6573756170;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656D75736572;
      break;
    case 3:
      uint64_t v5 = 0x6D6F436863746177;
      unint64_t v3 = 0xED00006574656C70;
      break;
    case 4:
      uint64_t v5 = 1885956979;
      break;
    case 5:
      uint64_t v5 = 0x726F4D6E7261656CLL;
      unint64_t v3 = 0xE900000000000065;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6573756170) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x656D75736572) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xED00006574656C70;
      if (v5 != 0x6D6F436863746177) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 1885956979;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE900000000000065;
      if (v5 != 0x726F4D6E7261656CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA35F88(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x64656761676E65;
    }
    else {
      uint64_t v3 = 0x6761676E45746F6ELL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xEA00000000006465;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x64656761676E65;
      }
      else {
        uint64_t v6 = 0x6761676E45746F6ELL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xEA00000000006465;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA360AC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x656C6369747261;
    }
    else {
      uint64_t v3 = 1684366694;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x656C6369747261;
      }
      else {
        uint64_t v6 = 1684366694;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA361B8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x796144656E6FLL;
      break;
    case 2:
      uint64_t v5 = 0x6B656557656E6FLL;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x68746E6F4D656E6FLL;
      break;
    case 4:
      uint64_t v5 = 0x6E6F4D6565726874;
      unint64_t v3 = 0xEB00000000736874;
      break;
    case 5:
      uint64_t v5 = 0x68746E6F4D786973;
      goto LABEL_13;
    case 6:
      uint64_t v5 = 0x72616559656E6FLL;
      break;
    case 7:
      unint64_t v3 = 0xE800000000000000;
      unsigned int v6 = 1500477300;
      goto LABEL_10;
    case 8:
      uint64_t v5 = 0x7261655965766966;
LABEL_13:
      unint64_t v3 = 0xE900000000000073;
      break;
    case 9:
      unint64_t v3 = 0xE800000000000000;
      unsigned int v6 = 1500407156;
LABEL_10:
      uint64_t v5 = v6 | 0x7372616500000000;
      break;
    case 10:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7889261;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      if (v5 == 0x796144656E6FLL) {
        goto LABEL_32;
      }
      goto LABEL_36;
    case 2:
      if (v5 != 0x6B656557656E6FLL) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 3:
      unint64_t v7 = 0xE800000000000000;
      if (v5 != 0x68746E6F4D656E6FLL) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 4:
      unint64_t v7 = 0xEB00000000736874;
      if (v5 != 0x6E6F4D6565726874) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 5:
      uint64_t v8 = 0x68746E6F4D786973;
      goto LABEL_35;
    case 6:
      if (v5 != 0x72616559656E6FLL) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 7:
      unint64_t v7 = 0xE800000000000000;
      unsigned int v9 = 1500477300;
      goto LABEL_28;
    case 8:
      uint64_t v8 = 0x7261655965766966;
LABEL_35:
      unint64_t v7 = 0xE900000000000073;
      if (v5 != v8) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 9:
      unint64_t v7 = 0xE800000000000000;
      unsigned int v9 = 1500407156;
LABEL_28:
      if (v5 != (v9 | 0x7372616500000000)) {
        goto LABEL_36;
      }
      goto LABEL_32;
    case 10:
      unint64_t v7 = 0xE300000000000000;
      uint64_t v2 = 7889261;
      goto LABEL_31;
    default:
LABEL_31:
      if (v5 != v2) {
        goto LABEL_36;
      }
LABEL_32:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_36:
      }
        char v10 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_20AA364CC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0xD000000000000011;
    }
    else {
      unint64_t v3 = 0xD000000000000012;
    }
    if (v2 == 1) {
      unint64_t v4 = 0x800000020ABA6EE0;
    }
    else {
      unint64_t v4 = 0x800000020ABA6F00;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0xD000000000000011;
      }
      else {
        unint64_t v6 = 0xD000000000000012;
      }
      if (v5 == 1) {
        unint64_t v7 = 0x800000020ABA6EE0;
      }
      else {
        unint64_t v7 = 0x800000020ABA6F00;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    unint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA365D0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x7469617274726F70;
      break;
    case 2:
      unint64_t v3 = 0x800000020ABA6AD0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 3:
      unint64_t v5 = 0x70616373646E616CLL;
      unint64_t v3 = 0xED00007466654C65;
      break;
    case 4:
      unint64_t v5 = 0x70616373646E616CLL;
      unint64_t v3 = 0xEE00746867695265;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x7469617274726F70) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0x800000020ABA6AD0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x70616373646E616CLL;
      unint64_t v6 = 0xED00007466654C65;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEE00746867695265;
      if (v5 != 0x70616373646E616CLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA367D4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x776F6C6C61;
  }
  else {
    uint64_t v3 = 2037278052;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE500000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x776F6C6C61;
  }
  else {
    uint64_t v5 = 2037278052;
  }
  if (a2) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20AB86CA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20AA36870(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64657461657263;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x64657461657263;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x64656C696166;
      break;
    case 2:
      uint64_t v5 = 0x676E69646E6570;
      break;
    case 3:
      uint64_t v5 = 0x6564726163736964;
      goto LABEL_7;
    case 4:
      uint64_t v5 = 0x656C6C69666C7566;
      goto LABEL_7;
    case 5:
      uint64_t v5 = 0x65746E6573657270;
LABEL_7:
      unint64_t v3 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x64656C696166;
      break;
    case 2:
      uint64_t v2 = 0x676E69646E6570;
      break;
    case 3:
      uint64_t v2 = 0x6564726163736964;
      goto LABEL_14;
    case 4:
      uint64_t v2 = 0x656C6C69666C7566;
      goto LABEL_14;
    case 5:
      uint64_t v2 = 0x65746E6573657270;
LABEL_14:
      unint64_t v6 = 0xE900000000000064;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20AB86CA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20AA36A48(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000015;
  unint64_t v3 = 0x800000020ABA64B0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000015;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6F5464656C696166;
      unint64_t v3 = 0xEE007265646E6552;
      break;
    case 2:
      unint64_t v5 = 0x4674736575716572;
      unint64_t v3 = 0xED000064656C6961;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x726568746FLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x800000020ABA64B0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEE007265646E6552;
      if (v5 == 0x6F5464656C696166) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x4674736575716572;
      unint64_t v6 = 0xED000064656C6961;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x726568746FLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA36BFC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E49646567676F6CLL;
    }
    else {
      uint64_t v3 = 0x754F646567676F6CLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE900000000000074;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E49646567676F6CLL;
      }
      else {
        uint64_t v6 = 0x754F646567676F6CLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE900000000000074;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA36D20(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 24945;
      break;
    case 2:
      uint64_t v5 = 0x676E6967617473;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1685025392;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 24945) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x676E6967617473;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1685025392) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA36E80(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6C65636E6163;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C65636E6163;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x73736563637573;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1818845542;
      break;
    case 3:
      unint64_t v3 = 0x800000020ABA6870;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x73736563637573) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1818845542;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x800000020ABA6870;
      if (v5 == 0xD000000000000010) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA37000(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6465646E61707865;
      break;
    case 2:
      uint64_t v5 = 0x6C616974726170;
      break;
    case 3:
      uint64_t v5 = 0x657370616C6C6F63;
      unint64_t v3 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x6465646E61707865) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x6C616974726170;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000064;
      if (v5 == 0x657370616C6C6F63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA37190(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x7469617274726F70;
      break;
    case 2:
      unint64_t v3 = 0x800000020ABA6AD0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 3:
      unint64_t v5 = 0x70616373646E616CLL;
      unint64_t v3 = 0xED00007466654C65;
      break;
    case 4:
      unint64_t v5 = 0x70616373646E616CLL;
      unint64_t v3 = 0xEE00746867695265;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x705565636166;
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6E776F4465636166;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x7469617274726F70) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0x800000020ABA6AD0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xED00007466654C65;
      if (v5 != 0x70616373646E616CLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v6 = 0xEE00746867695265;
      if (v5 != 0x70616373646E616CLL) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x705565636166;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6E776F4465636166) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA3740C(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1701147238;
    }
    else {
      uint64_t v2 = 1684627824;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1701147238;
      }
      else {
        uint64_t v5 = 1684627824;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x6E776F6E6B6E75;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    char v7 = sub_20AB86CA0();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20AA37508(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6572676F72506E69;
      unint64_t v3 = 0xEA00000000007373;
      break;
    case 2:
      unint64_t v5 = 0x506F547964616572;
      unint64_t v3 = 0xEB0000000079616CLL;
      break;
    case 3:
      unint64_t v3 = 0x800000020ABA65A0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v5 = 0x54676E6964616F6CLL;
      unint64_t v3 = 0xEE0074756F656D69;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x64656C696166;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000007373;
      if (v5 == 0x6572676F72506E69) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xEB0000000079616CLL;
      if (v5 != 0x506F547964616572) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0x800000020ABA65A0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x54676E6964616F6CLL;
      unint64_t v6 = 0xEE0074756F656D69;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x64656C696166) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA37744(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x6C616E7265746E69;
    }
    else {
      uint64_t v2 = 0x6C616E7265747865;
    }
    unint64_t v3 = 0xE800000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x6C616E7265746E69;
      }
      else {
        uint64_t v5 = 0x6C616E7265747865;
      }
      unint64_t v6 = 0xE800000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x6E776F6E6B6E75;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    char v7 = sub_20AB86CA0();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20AA37838(uint64_t a1, uint64_t a2)
{
  return sub_20AA38484(a1, a2, (uint64_t (*)(void))NetworkEventType.rawValue.getter);
}

uint64_t sub_20AA37850(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6574614C79616C70;
    }
    else {
      uint64_t v3 = 0x7478654E79616C70;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEF7377654E6E4972;
    }
    else {
      unint64_t v4 = 0xEE007377654E6E49;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6574614C79616C70;
      }
      else {
        uint64_t v6 = 0x7478654E79616C70;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEF7377654E6E4972;
      }
      else {
        unint64_t v7 = 0xEE007377654E6E49;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA3799C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x615472656E6E6162;
      goto LABEL_8;
    case 2:
      unint64_t v5 = 0x616C506F65646976;
      unint64_t v3 = 0xE900000000000079;
      break;
    case 3:
      unint64_t v5 = 0x7561506F65646976;
      unint64_t v3 = 0xEA00000000006573;
      break;
    case 4:
      unint64_t v5 = 0x7365526F65646976;
      unint64_t v3 = 0xEB00000000656D75;
      break;
    case 5:
      unint64_t v3 = 0x800000020ABA6550;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 6:
      unint64_t v5 = 0x696B536F65646976;
LABEL_8:
      unint64_t v3 = 0xE900000000000070;
      break;
    case 7:
      unint64_t v5 = 0x6974737265746E69;
      unint64_t v3 = 0xEF7061546C616974;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000070;
      if (v5 == 0x615472656E6E6162) {
        goto LABEL_23;
      }
      goto LABEL_26;
    case 2:
      unint64_t v6 = 0xE900000000000079;
      if (v5 != 0x616C506F65646976) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 3:
      unint64_t v6 = 0xEA00000000006573;
      if (v5 != 0x7561506F65646976) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 4:
      unint64_t v6 = 0xEB00000000656D75;
      if (v5 != 0x7365526F65646976) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 5:
      unint64_t v6 = 0x800000020ABA6550;
      if (v5 != 0xD000000000000012) {
        goto LABEL_26;
      }
      goto LABEL_23;
    case 6:
      uint64_t v2 = 0x696B536F65646976;
      unint64_t v6 = 0xE900000000000070;
      goto LABEL_22;
    case 7:
      unint64_t v6 = 0xEF7061546C616974;
      if (v5 != 0x6974737265746E69) {
        goto LABEL_26;
      }
      goto LABEL_23;
    default:
LABEL_22:
      if (v5 != v2) {
        goto LABEL_26;
      }
LABEL_23:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_26:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA37C80(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x616C506F54706174;
      unint64_t v3 = 0xE900000000000079;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 2036427888;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6573756170;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656D75736572;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x64656C696166;
      break;
    case 6:
      uint64_t v5 = 0x6168436465657073;
      uint64_t v6 = 6645614;
      goto LABEL_10;
    case 7:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6B63614270696B73;
      break;
    case 8:
      uint64_t v5 = 0x77726F4670696B73;
      uint64_t v6 = 6582881;
LABEL_10:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE900000000000079;
      if (v5 == 0x616C506F54706174) {
        goto LABEL_25;
      }
      goto LABEL_29;
    case 2:
      unint64_t v7 = 0xE400000000000000;
      if (v5 != 2036427888) {
        goto LABEL_29;
      }
      goto LABEL_25;
    case 3:
      unint64_t v7 = 0xE500000000000000;
      if (v5 != 0x6573756170) {
        goto LABEL_29;
      }
      goto LABEL_25;
    case 4:
      unint64_t v7 = 0xE600000000000000;
      if (v5 != 0x656D75736572) {
        goto LABEL_29;
      }
      goto LABEL_25;
    case 5:
      unint64_t v7 = 0xE600000000000000;
      if (v5 != 0x64656C696166) {
        goto LABEL_29;
      }
      goto LABEL_25;
    case 6:
      uint64_t v8 = 0x6168436465657073;
      uint64_t v9 = 6645614;
      goto LABEL_28;
    case 7:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v2 = 0x6B63614270696B73;
      goto LABEL_24;
    case 8:
      uint64_t v8 = 0x77726F4670696B73;
      uint64_t v9 = 6582881;
LABEL_28:
      unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 != v8) {
        goto LABEL_29;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_29;
      }
LABEL_25:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_29:
      }
        char v10 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_20AA37F3C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x79616C706F747561;
    }
    else {
      uint64_t v3 = 0x7474754279616C70;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xEF73736572506E6FLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x79616C706F747561;
      }
      else {
        uint64_t v6 = 0x7474754279616C70;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xEF73736572506E6FLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA38070(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x7070416E69;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6C616E7265747865;
      break;
    case 3:
      uint64_t v5 = 0x79616C50726163;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x7070416E69) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x6C616E7265747865;
      goto LABEL_9;
    case 3:
      if (v5 == 0x79616C50726163) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA381F0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x72656E6E6162;
      break;
    case 2:
      uint64_t v5 = 0x566C6C6F52657270;
      uint64_t v6 = 1868915817;
      goto LABEL_6;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x644165766974616ELL;
      break;
    case 4:
      uint64_t v5 = 0x6974737265746E69;
      uint64_t v6 = 1818323316;
LABEL_6:
      unint64_t v3 = v6 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      if (v5 == 0x72656E6E6162) {
        goto LABEL_16;
      }
      goto LABEL_18;
    case 2:
      uint64_t v8 = 0x566C6C6F52657270;
      uint64_t v9 = 1868915817;
      goto LABEL_15;
    case 3:
      unint64_t v7 = 0xE800000000000000;
      uint64_t v2 = 0x644165766974616ELL;
      goto LABEL_12;
    case 4:
      uint64_t v8 = 0x6974737265746E69;
      uint64_t v9 = 1818323316;
LABEL_15:
      unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
      if (v5 == v8) {
        goto LABEL_16;
      }
      goto LABEL_18;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_18;
      }
LABEL_16:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_18:
      }
        char v10 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_20AA383C8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6D6F74737563;
  }
  else {
    uint64_t v3 = 0x746C7561666564;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6D6F74737563;
  }
  else {
    uint64_t v5 = 0x746C7561666564;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_20AB86CA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20AA3846C(uint64_t a1, uint64_t a2)
{
  return sub_20AA38484(a1, a2, (uint64_t (*)(void))StoreKitError.rawValue.getter);
}

uint64_t sub_20AA38484(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_20AB86CA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_20AA38528(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x656C707061;
    }
    else {
      uint64_t v2 = 0x6F6F686179;
    }
    unint64_t v3 = 0xE500000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x656C707061;
      }
      else {
        uint64_t v5 = 0x6F6F686179;
      }
      unint64_t v6 = 0xE500000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x6E776F6E6B6E75;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    char v7 = sub_20AB86CA0();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20AA38634(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x626D79536E65706FLL;
      unint64_t v3 = 0xEA00000000006C6FLL;
      break;
    case 2:
      unint64_t v5 = 0x637461576E65706FLL;
      unint64_t v3 = 0xED00007473696C68;
      break;
    case 3:
      unint64_t v3 = 0x800000020ABA6DD0;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 4:
      unint64_t v5 = 0x697472416E65706FLL;
      unint64_t v3 = 0xEB00000000656C63;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006C6FLL;
      if (v5 == 0x626D79536E65706FLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xED00007473696C68;
      if (v5 != 0x637461576E65706FLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0x800000020ABA6DD0;
      unint64_t v2 = 0xD000000000000010;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xEB00000000656C63;
      if (v5 != 0x697472416E65706FLL) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA38838(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x656C706D6173;
    }
    else {
      uint64_t v3 = 1819047270;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x656C706D6173;
      }
      else {
        uint64_t v6 = 1819047270;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA3893C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6574726143616C61;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656C646E7562;
      break;
    case 3:
      uint64_t v5 = 0x656C646E754273;
      break;
    case 4:
      uint64_t v5 = 0x43656C646E754273;
      unint64_t v3 = 0xEE00726569727261;
      break;
    case 5:
      uint64_t v5 = 0x7748656C646E7562;
      unint64_t v3 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x6574726143616C61) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x656C646E7562) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 0x656C646E754273) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      uint64_t v2 = 0x43656C646E754273;
      unint64_t v6 = 0xEE00726569727261;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x7748656C646E7562) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA38B58(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x776F7272616873;
      break;
    case 2:
      uint64_t v5 = 0x4D747865746E6F63;
      unint64_t v3 = 0xEB00000000756E65;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6570697773;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x776F7272616873) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x4D747865746E6F63;
      unint64_t v6 = 0xEB00000000756E65;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6570697773) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA38CE8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6469577961646F74;
      unint64_t v3 = 0xEB00000000746567;
      break;
    case 2:
      unint64_t v5 = 0x6C616E7265747865;
      unint64_t v3 = 0xEC0000006B6E694CLL;
      break;
    case 3:
      unint64_t v6 = "homeScreenIconTap";
      goto LABEL_7;
    case 4:
      unint64_t v5 = 0x6465725069726973;
      unint64_t v3 = 0xEE006E6F69746369;
      break;
    case 5:
      unint64_t v6 = "siriVoiceShortcut";
LABEL_7:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 6:
      unint64_t v5 = 0xD000000000000020;
      unint64_t v3 = 0x800000020ABA6D60;
      break;
    case 7:
      unint64_t v5 = 0x6867696C746F7073;
      goto LABEL_12;
    case 8:
      unint64_t v5 = 0x66666F646E6168;
      break;
    case 9:
      unint64_t v5 = 0x6E65746E49707061;
LABEL_12:
      unint64_t v3 = 0xE900000000000074;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x6469577961646F74;
      unint64_t v7 = 0xEB00000000746567;
      break;
    case 2:
      unint64_t v2 = 0x6C616E7265747865;
      unint64_t v7 = 0xEC0000006B6E694CLL;
      break;
    case 3:
      char v8 = "homeScreenIconTap";
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0x6465725069726973;
      unint64_t v7 = 0xEE006E6F69746369;
      break;
    case 5:
      char v8 = "siriVoiceShortcut";
LABEL_19:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000011;
      break;
    case 6:
      unint64_t v2 = 0xD000000000000020;
      unint64_t v7 = 0x800000020ABA6D60;
      break;
    case 7:
      unint64_t v2 = 0x6867696C746F7073;
      goto LABEL_24;
    case 8:
      unint64_t v2 = 0x66666F646E6168;
      break;
    case 9:
      unint64_t v2 = 0x6E65746E49707061;
LABEL_24:
      unint64_t v7 = 0xE900000000000074;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_20AB86CA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_20AA38FE8(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1952870259;
    }
    else {
      uint64_t v2 = 1685217640;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1952870259;
      }
      else {
        uint64_t v5 = 1685217640;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE700000000000000;
    uint64_t v2 = 0x6E776F6E6B6E75;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE700000000000000;
  if (v2 != 0x6E776F6E6B6E75)
  {
LABEL_15:
    char v7 = sub_20AB86CA0();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_20AA390E4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x636961736F6DLL;
    }
    else {
      uint64_t v3 = 0x7069727473;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x636961736F6DLL;
      }
      else {
        uint64_t v6 = 0x7069727473;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA391F0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x647261646E617473;
    }
    else {
      uint64_t v3 = 0x6C65527373657270;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEB00000000464E41;
    }
    else {
      unint64_t v4 = 0xEC00000065736165;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x647261646E617473;
      }
      else {
        uint64_t v6 = 0x6C65527373657270;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEB00000000464E41;
      }
      else {
        unint64_t v7 = 0xEC00000065736165;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA3932C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x636E75614C707061;
      unint64_t v3 = 0xE900000000000068;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6570697773;
      break;
    case 3:
      unint64_t v5 = 0x656E696C64616568;
      unint64_t v3 = 0xEB00000000706154;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6B6E696C70656564;
      break;
    case 5:
      unint64_t v5 = 0x6E6164726F666661;
      unint64_t v3 = 0xED00007061546563;
      break;
    case 6:
      uint64_t v6 = "returnFromArticle";
      goto LABEL_10;
    case 7:
      unint64_t v5 = 0x6976614E72657375;
      unint64_t v3 = 0xEE006E6F69746167;
      break;
    case 8:
      uint64_t v6 = "widgetHeadlineTap";
LABEL_10:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000011;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x636E75614C707061;
      unint64_t v7 = 0xE900000000000068;
      break;
    case 2:
      unint64_t v7 = 0xE500000000000000;
      unint64_t v2 = 0x6570697773;
      break;
    case 3:
      unint64_t v2 = 0x656E696C64616568;
      unint64_t v7 = 0xEB00000000706154;
      break;
    case 4:
      unint64_t v7 = 0xE800000000000000;
      unint64_t v2 = 0x6B6E696C70656564;
      break;
    case 5:
      unint64_t v2 = 0x6E6164726F666661;
      unint64_t v7 = 0xED00007061546563;
      break;
    case 6:
      char v8 = "returnFromArticle";
      goto LABEL_20;
    case 7:
      unint64_t v2 = 0x6976614E72657375;
      unint64_t v7 = 0xEE006E6F69746167;
      break;
    case 8:
      char v8 = "widgetHeadlineTap";
LABEL_20:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000011;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_20AB86CA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_20AA395F4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x797469757165;
      break;
    case 2:
      unint64_t v5 = 0x6E75467865646E69;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v5 = 0x75466C617574756DLL;
      unint64_t v3 = 0xEA0000000000646ELL;
      break;
    case 4:
      unint64_t v3 = 0x800000020ABA6970;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 5:
      unint64_t v5 = 0x75636F7470797263;
      unint64_t v3 = 0xEE0079636E657272;
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x79636E6572727563;
      break;
    case 7:
      unint64_t v5 = 0x73657275747566;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x797469757165) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x6E75467865646E69) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xEA0000000000646ELL;
      if (v5 != 0x75466C617574756DLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0x800000020ABA6970;
      if (v5 != 0xD000000000000012) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xEE0079636E657272;
      if (v5 != 0x75636F7470797263) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x79636E6572727563;
      goto LABEL_21;
    case 7:
      if (v5 != 0x73657275747566) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA398A0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x73736563637573;
    }
    else {
      uint64_t v3 = 1818845542;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x73736563637573;
      }
      else {
        uint64_t v6 = 1818845542;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA399AC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 7629160;
    }
    else {
      uint64_t v3 = 1936943469;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE300000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 7629160;
      }
      else {
        uint64_t v6 = 1936943469;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE300000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x6E776F6E6B6E75;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x6E776F6E6B6E75)
  {
LABEL_21:
    char v8 = sub_20AB86CA0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_20AA39AA8(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x56656C6369747261;
      unint64_t v3 = 0xEB00000000776569;
      break;
    case 2:
      uint64_t v5 = 0x656956616964656DLL;
      unint64_t v3 = 0xE900000000000077;
      break;
    case 3:
      uint64_t v5 = 0x6E65704F707061;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB00000000776569;
      if (v5 == 0x56656C6369747261) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x656956616964656DLL;
      unint64_t v6 = 0xE900000000000077;
      goto LABEL_9;
    case 3:
      if (v5 == 0x6E65704F707061) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20AA39C48(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6E776F6E6B6E75;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F65646976;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6567616D69;
      break;
    case 3:
      uint64_t v5 = 0x7972656C6C6167;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F69647561;
      break;
    case 5:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7364973;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6F65646976) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6567616D69) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 0x7972656C6C6167) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x6F69647561;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7364973) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_20AB86CA0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

void sub_20AA39E24(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v90 = a5;
  uint64_t v89 = a4;
  unint64_t v95 = a3;
  unint64_t v94 = a2;
  v96 = a6;
  uint64_t v93 = sub_20AB851F0();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  v91 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20AB850A0();
  uint64_t v99 = *(void *)(v9 - 8);
  uint64_t v100 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  v97 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  v98 = (char *)&v70 - v12;
  uint64_t v101 = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  MEMORY[0x270FA5388](v101);
  uint64_t v102 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA3AB68();
  MEMORY[0x270FA5388](v14 - 8);
  char v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20AB85990();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v70 - v19;
  sub_20AA3ABC0();
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  int v26 = swift_dynamicCast();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if (v26)
  {
    v27(v16, 0, 1, v22);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v16, v22);
    uint64_t v28 = (void *)sub_20AB85960();
    uint64_t v29 = sub_20AB85E30();
    if (v6)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    }
    else
    {
      uint64_t v31 = v29;
      unint64_t v32 = v30;

      sub_20AB85000();
      swift_allocObject();
      sub_20AB84FF0();
      sub_20AA3AC54(&qword_2676550A8, (void (*)(uint64_t))type metadata accessor for MediaEngageCompleteEvent.Model);
      uint64_t v33 = v101;
      sub_20AB84FE0();
      unint64_t v87 = v32;
      uint64_t v86 = v31;
      swift_release();
      uint64_t v34 = v102;
      long long v35 = (uint64_t *)(v102 + *(int *)(v33 + 20));
      int v105 = *((_DWORD *)v35 + 16);
      long long v36 = *((_OWORD *)v35 + 3);
      v104[2] = *((_OWORD *)v35 + 2);
      v104[3] = v36;
      long long v37 = *((_OWORD *)v35 + 1);
      v104[0] = *(_OWORD *)v35;
      v104[1] = v37;
      unint64_t v85 = *v35;
      uint64_t v84 = v35[1];
      uint64_t v83 = v35[2];
      unint64_t v82 = v35[3];
      unint64_t v81 = *((unsigned __int8 *)v35 + 32);
      unint64_t v80 = v35[5];
      unint64_t v79 = *((unsigned __int8 *)v35 + 48);
      unint64_t v78 = v35[7];
      uint64_t v75 = *((unsigned __int8 *)v35 + 64);
      int v74 = *((unsigned __int8 *)v35 + 65);
      uint64_t v77 = *((unsigned __int8 *)v35 + 66);
      int v76 = *((unsigned __int8 *)v35 + 67);
      uint64_t v38 = (unsigned __int8 *)(v102 + *(int *)(v33 + 32));
      uint64_t v39 = *v38;
      uint64_t v40 = *((void *)v38 + 2);
      uint64_t v73 = *((void *)v38 + 1);
      uint64_t v72 = *((unsigned int *)v38 + 6);
      int v71 = v38[28];
      uint64_t v88 = v39;
      switch(v39)
      {
        case 4:
          sub_20AA3AD54((uint64_t)v104);
          swift_bridgeObjectRetain();
LABEL_9:
          swift_bridgeObjectRelease();
          goto LABEL_11;
        default:
          char v41 = sub_20AB86CA0();
          sub_20AA3AD54((uint64_t)v104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v41)
          {
LABEL_11:
            uint64_t v43 = v98;
            sub_20AB85090();
            (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v97, v43, v100);
            unint64_t v44 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
            unint64_t v46 = *(void *)(v44 + 16);
            unint64_t v45 = *(void *)(v44 + 24);
            uint64_t v70 = v40;
            if (v46 >= v45 >> 1) {
              unint64_t v44 = sub_20AA0C290(v45 > 1, v46 + 1, 1, v44);
            }
            *(void *)(v44 + 16) = v46 + 1;
            uint64_t v48 = v99;
            uint64_t v47 = v100;
            (*(void (**)(unint64_t, char *, uint64_t))(v99 + 32))(v44+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v46, v97, v100);
            unint64_t v108 = v44;
            uint64_t v49 = v34 + *(int *)(v101 + 52);
            long long v50 = *(_OWORD *)(v49 + 16);
            v106[0] = *(_OWORD *)v49;
            v106[1] = v50;
            __int16 v107 = *(_WORD *)(v49 + 32);
            sub_20AA3AD54((uint64_t)v106);
            unint64_t v51 = sub_20AA3AF84(v104);
            sub_20AA3AD8C((uint64_t)v106);
            sub_20AA3A988(v51);
            char v103 = v71;
            unint64_t v52 = sub_20AA3B3D0(v88);
            swift_bridgeObjectRelease();
            sub_20AA3A988(v52);
            unint64_t v53 = sub_20AA3ADC4();
            sub_20AA3A988(v53);
            long long v54 = v91;
            sub_20AB851E0();
            uint64_t v55 = sub_20AB851D0();
            unint64_t v57 = v56;
            sub_20AA3AC9C(v86, v87);
            (*(void (**)(char *, uint64_t))(v92 + 8))(v54, v93);
            (*(void (**)(char *, uint64_t))(v48 + 8))(v98, v47);
            sub_20AA3ACF4(v102, type metadata accessor for MediaEngageCompleteEvent.Model);
            (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
            uint64_t v58 = 256;
            if (!v74) {
              uint64_t v58 = 0;
            }
            uint64_t v59 = v58 | v75;
            v60 = v96;
            unint64_t v61 = v85;
            unint64_t *v96 = v108;
            v60[1] = v61;
            uint64_t v62 = v59 | (v77 << 16);
            uint64_t v63 = 0x1000000;
            if (!v76) {
              uint64_t v63 = 0;
            }
            v60[2] = v84;
            uint64_t v64 = v62 | v63;
            unint64_t v65 = v82;
            v60[3] = v83;
            v60[4] = v65;
            unint64_t v66 = v80;
            v60[5] = v81;
            v60[6] = v66;
            unint64_t v67 = v78;
            v60[7] = v79;
            v60[8] = v67;
            v60[9] = v64;
            v60[10] = 2;
            unint64_t v68 = v95;
            v60[11] = v94;
            v60[12] = v68;
            v60[13] = v55;
            v60[14] = v57;
            swift_bridgeObjectRetain();
          }
          else
          {
            switch((int)v88)
            {
              case 1:
                goto LABEL_9;
              default:
                char v42 = sub_20AB86CA0();
                swift_bridgeObjectRelease();
                if (v42) {
                  goto LABEL_11;
                }
                sub_20AA3AC9C(v86, v87);
                sub_20AA3AD8C((uint64_t)v104);
                swift_bridgeObjectRelease();
                sub_20AA3ACF4(v34, type metadata accessor for MediaEngageCompleteEvent.Model);
                (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
                v69 = v96;
                v96[14] = 0;
                *((_OWORD *)v69 + 5) = 0u;
                *((_OWORD *)v69 + 6) = 0u;
                *((_OWORD *)v69 + 3) = 0u;
                *((_OWORD *)v69 + 4) = 0u;
                *((_OWORD *)v69 + 1) = 0u;
                *((_OWORD *)v69 + 2) = 0u;
                *(_OWORD *)v69 = 0u;
                break;
            }
          }
          break;
      }
    }
  }
  else
  {
    v27(v16, 1, 1, v22);
    sub_20AA3ACF4((uint64_t)v16, (uint64_t (*)(void))sub_20AA3AB68);
    sub_20AA0C120();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t sub_20AA3A988(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_20AA0C290(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_20AB850A0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_20AB86AB0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MediaEngageCompletedEventQueryItemsGenerator()
{
  return self;
}

void sub_20AA3AB50(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
}

void sub_20AA3AB68()
{
  if (!qword_2676550A0)
  {
    sub_20AA3ABC0();
    unint64_t v0 = sub_20AB868D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2676550A0);
    }
  }
}

void sub_20AA3ABC0()
{
  if (!qword_26AC4E568)
  {
    type metadata accessor for MediaEngageCompleteEvent(255);
    sub_20AA3AC54(&qword_26AC50B18, (void (*)(uint64_t))type metadata accessor for MediaEngageCompleteEvent);
    unint64_t v0 = sub_20AB85990();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E568);
    }
  }
}

uint64_t sub_20AA3AC54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AA3AC9C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_20AA3ACF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20AA3AD54(uint64_t a1)
{
  return a1;
}

uint64_t sub_20AA3AD8C(uint64_t a1)
{
  return a1;
}

unint64_t sub_20AA3ADC4()
{
  uint64_t v0 = sub_20AB850A0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  int64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_20AB85090();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  unint64_t v7 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v9 = *(void *)(v7 + 16);
  unint64_t v8 = *(void *)(v7 + 24);
  if (v9 >= v8 >> 1) {
    unint64_t v7 = sub_20AA0C290(v8 > 1, v9 + 1, 1, v7);
  }
  *(void *)(v7 + 16) = v9 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v7+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v9, v4, v0);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v7;
}

unint64_t sub_20AA3AF84(void *a1)
{
  uint64_t v2 = sub_20AB850A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v33 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v40 = (char *)&v33 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v39 = (char *)&v33 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v33 - v11;
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v33 - v13;
  uint64_t v16 = *a1;
  uint64_t v15 = a1[1];
  uint64_t v34 = a1;
  uint64_t v41 = v16;
  uint64_t v42 = v15;
  swift_bridgeObjectRetain();
  sub_20AB86720();
  sub_20AB866F0();
  swift_bridgeObjectRelease();
  sub_20AB85090();
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v38(v12, v14, v2);
  unint64_t v17 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v19 = *(void *)(v17 + 16);
  unint64_t v18 = *(void *)(v17 + 24);
  if (v19 >= v18 >> 1) {
    unint64_t v17 = sub_20AA0C290(v18 > 1, v19 + 1, 1, v17);
  }
  *(void *)(v17 + 16) = v19 + 1;
  unint64_t v37 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v35 = *(void *)(v3 + 72);
  BOOL v20 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 32);
  v20(v17 + v37 + v35 * v19, v12, v2);
  uint64_t v21 = v39;
  sub_20AB85090();
  long long v36 = *(void (**)(char *, uint64_t))(v3 + 8);
  v36(v14, v2);
  v20((unint64_t)v14, v21, v2);
  v38(v40, v14, v2);
  unint64_t v23 = *(void *)(v17 + 16);
  unint64_t v22 = *(void *)(v17 + 24);
  if (v23 >= v22 >> 1) {
    unint64_t v17 = sub_20AA0C290(v22 > 1, v23 + 1, 1, v17);
  }
  uint64_t v24 = v35;
  int v25 = *((unsigned __int8 *)v34 + 64);
  *(void *)(v17 + 16) = v23 + 1;
  unint64_t v26 = v17 + v37 + v23 * v24;
  uint64_t v27 = v24;
  v20(v26, v40, v2);
  if (v25 == 1)
  {
    uint64_t v28 = v39;
    sub_20AB85090();
    v36(v14, v2);
    v20((unint64_t)v14, v28, v2);
    uint64_t v29 = v33;
    v38(v33, v14, v2);
    unint64_t v31 = *(void *)(v17 + 16);
    unint64_t v30 = *(void *)(v17 + 24);
    if (v31 >= v30 >> 1) {
      unint64_t v17 = sub_20AA0C290(v30 > 1, v31 + 1, 1, v17);
    }
    *(void *)(v17 + 16) = v31 + 1;
    v20(v17 + v37 + v31 * v27, v29, v2);
  }
  v36(v14, v2);
  return v17;
}

unint64_t sub_20AA3B3D0(unsigned __int8 a1)
{
  uint64_t v2 = sub_20AB850A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  unint64_t v12 = (char *)&v22 - v11;
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v22 - v13;
  int v15 = a1;
  unint64_t v16 = MEMORY[0x263F8EE78];
  if (((1 << v15) & 0x2D) == 0)
  {
    if (v15 == 1)
    {
      sub_20AB85090();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v9, v2);
      unint64_t v16 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v18 = *(void *)(v16 + 16);
      unint64_t v17 = *(void *)(v16 + 24);
      if (v18 >= v17 >> 1) {
        unint64_t v16 = sub_20AA0C290(v17 > 1, v18 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v16+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v18, v6, v2);
      unint64_t v14 = v9;
    }
    else
    {
      sub_20AB85090();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v12, v14, v2);
      unint64_t v16 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v20 = *(void *)(v16 + 16);
      unint64_t v19 = *(void *)(v16 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v16 = sub_20AA0C290(v19 > 1, v20 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v20 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v16+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v20, v12, v2);
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
  }
  return v16;
}

__n128 URLHandlerContext<A>.urlReferralData()@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v84 = a1;
  *(void *)&long long v97 = sub_20AB86370();
  v96.n128_u64[0] = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  unint64_t v94 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_20AB85140();
  uint64_t v107 = *(void *)(v105 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v105);
  uint64_t v86 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  v104 = (char *)&v84 - v5;
  uint64_t v6 = sub_20AB86190();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v95 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v92 = (char *)&v84 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v91 = (char *)&v84 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v84 - v15;
  MEMORY[0x270FA5388](v14);
  unint64_t v18 = (char *)&v84 - v17;
  uint64_t v19 = sub_20AB861C0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v93 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v90 = (char *)&v84 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v89 = (char *)&v84 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v84 - v28;
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  unint64_t v32 = (char *)&v84 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v84 - v33;
  sub_20AA3C31C();
  uint64_t v108 = v35;
  uint64_t v88 = v1;
  sub_20AB86290();
  sub_20AB861B0();
  long long v36 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  uint64_t v109 = v19;
  uint64_t v100 = v36;
  uint64_t v101 = v20 + 8;
  v36((uint64_t)v34, v19);
  uint64_t v37 = sub_20AB861A0();
  uint64_t v39 = v38;
  uint64_t v40 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v102 = v6;
  uint64_t v99 = v40;
  v40(v18, v6);
  uint64_t v103 = v7 + 8;
  uint64_t v87 = (uint64_t)v29;
  if (v39)
  {
    if (v37 == 0x746567646977 && v39 == 0xE600000000000000)
    {
      unint64_t v98 = 0xD000000000000017;
      swift_bridgeObjectRelease();
LABEL_7:
      unint64_t v42 = 0x800000020ABA7230;
      goto LABEL_9;
    }
    char v41 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v41)
    {
      unint64_t v98 = 0xD000000000000017;
      goto LABEL_7;
    }
  }
  unint64_t v98 = 0;
  unint64_t v42 = 0xE000000000000000;
LABEL_9:
  unint64_t v106 = v42;
  uint64_t v43 = (uint64_t)v88;
  uint64_t v44 = v107;
  unint64_t v45 = v86;
  sub_20AB86290();
  sub_20AB86180();
  unint64_t v46 = v32;
  uint64_t v47 = v109;
  uint64_t v48 = v100;
  v100((uint64_t)v46, v109);
  sub_20AB85100();
  uint64_t v88 = *(void (**)(char *, uint64_t))(v44 + 8);
  uint64_t v107 = v44 + 8;
  v88(v45, v105);
  uint64_t v49 = v87;
  sub_20AB86290();
  sub_20AB861B0();
  v48(v49, v47);
  uint64_t v87 = sub_20AB861A0();
  uint64_t v86 = v50;
  uint64_t v51 = v102;
  unint64_t v52 = v99;
  v99(v16, v102);
  unint64_t v53 = v89;
  sub_20AB86290();
  long long v54 = v91;
  sub_20AB861B0();
  uint64_t v55 = v53;
  uint64_t v56 = v109;
  v48((uint64_t)v55, v109);
  uint64_t v89 = (char *)sub_20AB861A0();
  uint64_t v85 = v57;
  v52(v54, v51);
  uint64_t v58 = v90;
  sub_20AB86290();
  uint64_t v59 = v92;
  sub_20AB861B0();
  v48((uint64_t)v58, v56);
  uint64_t v60 = sub_20AB861A0();
  uint64_t v62 = v61;
  v52(v59, v51);
  uint64_t v63 = v94;
  sub_20AB86280();
  uint64_t v64 = sub_20AB86360();
  unint64_t v66 = v65;
  (*(void (**)(char *, void))(v96.n128_u64[0] + 8))(v63, v97);
  v91 = (char *)v60;
  uint64_t v90 = v62;
  if (v66)
  {
    swift_bridgeObjectRelease();
    unint64_t v98 = v64;
    unint64_t v106 = v66;
  }
  uint64_t v67 = v84;
  unint64_t v68 = v104;
  uint64_t v69 = sub_20AB85110();
  uint64_t v71 = v70;
  sub_20AA3BF98(v43, (uint64_t *)v110);
  long long v97 = v110[0];
  __n128 v96 = (__n128)v110[1];
  uint64_t v72 = v111;
  uint64_t v73 = v112;
  int v74 = v93;
  sub_20AB86290();
  uint64_t v75 = v95;
  sub_20AB861B0();
  v100((uint64_t)v74, v109);
  uint64_t v76 = sub_20AB861A0();
  unint64_t v78 = v77;
  v99(v75, v102);
  if (!v78) {
    uint64_t v76 = 0;
  }
  if (v78 <= 1) {
    unint64_t v78 = 1;
  }
  v88(v68, v105);
  unint64_t v79 = v86;
  *(void *)uint64_t v67 = v87;
  *(void *)(v67 + 8) = v79;
  uint64_t v80 = v85;
  *(void *)(v67 + 16) = v89;
  *(void *)(v67 + 24) = v80;
  unint64_t v81 = v90;
  *(void *)(v67 + 32) = v91;
  *(void *)(v67 + 40) = v81;
  unint64_t v82 = v106;
  *(void *)(v67 + 48) = v98;
  *(void *)(v67 + 56) = v82;
  *(void *)(v67 + 64) = v69;
  *(void *)(v67 + 72) = v71;
  __n128 result = v96;
  *(_OWORD *)(v67 + 80) = v97;
  *(__n128 *)(v67 + 96) = result;
  *(void *)(v67 + 112) = v72;
  *(void *)(v67 + 120) = v73;
  *(void *)(v67 + 128) = v76;
  *(void *)(v67 + 136) = v78;
  return result;
}

uint64_t sub_20AA3BF98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v52 = a2;
  uint64_t v3 = sub_20AB86190();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v46 = (char *)&v41 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = sub_20AB861C0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v45 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v41 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v41 - v18;
  sub_20AA3C31C();
  uint64_t v48 = a1;
  sub_20AB86290();
  sub_20AB861B0();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v47 = v11;
  v20(v19, v11);
  uint64_t v44 = sub_20AB861A0();
  uint64_t v22 = v21;
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  uint64_t v50 = v4 + 8;
  uint64_t v51 = v3;
  uint64_t result = v23(v10, v3);
  if (v22)
  {
    sub_20AB86290();
    uint64_t v25 = v46;
    sub_20AB861B0();
    uint64_t v43 = v22;
    uint64_t v26 = v47;
    v20(v17, v47);
    uint64_t v27 = sub_20AB861A0();
    uint64_t v41 = v28;
    uint64_t v42 = v27;
    uint64_t v29 = v25;
    uint64_t v30 = v51;
    v23(v29, v51);
    uint64_t v31 = v45;
    sub_20AB86290();
    unint64_t v32 = v49;
    sub_20AB861B0();
    uint64_t v33 = v26;
    uint64_t v22 = v43;
    v20(v31, v33);
    uint64_t v34 = sub_20AB861A0();
    uint64_t v36 = v35;
    uint64_t result = v23(v32, v30);
    uint64_t v38 = v41;
    uint64_t v37 = v42;
    uint64_t v39 = v44;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    uint64_t v34 = 0;
    uint64_t v36 = 0;
  }
  uint64_t v40 = v52;
  *unint64_t v52 = v39;
  v40[1] = v22;
  v40[2] = v37;
  v40[3] = v38;
  v40[4] = v34;
  v40[5] = v36;
  return result;
}

void sub_20AA3C31C()
{
  if (!qword_26AC4E740)
  {
    sub_20AB86490();
    unint64_t v0 = sub_20AB862A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E740);
    }
  }
}

StocksAnalytics::AdType_optional __swiftcall AdType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t AdType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x72656C6C65736572;
      break;
    case 3:
      unint64_t result = 0x6573756F68;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA3C468(unsigned __int8 *a1, char *a2)
{
  return sub_20AA34648(*a1, *a2);
}

unint64_t sub_20AA3C478()
{
  unint64_t result = qword_2676550B0;
  if (!qword_2676550B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676550B0);
  }
  return result;
}

uint64_t sub_20AA3C4CC()
{
  return sub_20AB4CD74();
}

uint64_t sub_20AA3C4D4()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA3C5A0()
{
  return sub_20AB4F02C();
}

StocksAnalytics::AdType_optional sub_20AA3C5A8(Swift::String *a1)
{
  return AdType.init(rawValue:)(*a1);
}

void sub_20AA3C5B4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  unint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x800000020ABA6A40;
      unint64_t v3 = 0xD000000000000013;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "resellerSold");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x6573756F68;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20AA3C658()
{
  return sub_20AB86750();
}

uint64_t sub_20AA3C6B8()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for AdType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA3C7D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdType()
{
  return &type metadata for AdType;
}

unint64_t sub_20AA3C80C()
{
  unint64_t result = qword_2676550B8;
  if (!qword_2676550B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676550B8);
  }
  return result;
}

uint64_t sub_20AA3C860(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_2676550C0, MEMORY[0x263F24D10]);
}

uint64_t static NonNewsArticleViewResumeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653438, MEMORY[0x263F24D18], (uint64_t)qword_2676550C0, a1);
}

uint64_t static NonNewsArticleViewResumeEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA3C8C8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_2676550D8, MEMORY[0x263F24DC8]);
}

uint64_t static NonNewsArticleViewResumeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653440, MEMORY[0x263F24DD8], (uint64_t)qword_2676550D8, a1);
}

uint64_t sub_20AA3C928()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676550F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676550F0);
  return sub_20AB85D30();
}

uint64_t static NonNewsArticleViewResumeEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653448, MEMORY[0x263F24DE8], (uint64_t)qword_2676550F0, a1);
}

uint64_t NonNewsArticleViewResumeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NonNewsArticleViewResumeEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NonNewsArticleViewResumeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewResumeEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 20);
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NonNewsArticleViewResumeEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655120);
}

uint64_t NonNewsArticleViewResumeEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 20);
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResumeEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewResumeEvent.nonNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 24);
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleViewResumeEvent.nonNewsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 24);
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResumeEvent.nonNewsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewResumeEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 28);
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA3CE6C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t NonNewsArticleViewResumeEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent(0) + 28);
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResumeEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewResumeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NonNewsArticleViewResumeEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t NonNewsArticleViewResumeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NonNewsArticleViewResumeEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NonNewsArticleViewResumeEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655130);
}

uint64_t NonNewsArticleViewResumeEvent.Model.nonNewsArticleData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewResumeEvent.Model(0) + 24));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleViewResumeEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

__n128 NonNewsArticleViewResumeEvent.Model.init(eventData:viewData:nonNewsArticleData:orientationData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, __int16 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  __int16 v9 = *((_WORD *)a2 + 8);
  __n128 v18 = (__n128)a3[1];
  long long v19 = *a3;
  uint64_t v10 = *((void *)a3 + 4);
  uint64_t v11 = *((void *)a3 + 5);
  __int16 v12 = *a4;
  uint64_t v13 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a5, a1, v13);
  uint64_t v14 = (int *)type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
  uint64_t v15 = a5 + v14[5];
  *(void *)uint64_t v15 = v7;
  *(void *)(v15 + 8) = v8;
  *(_WORD *)(v15 + 16) = v9;
  uint64_t v16 = a5 + v14[6];
  __n128 result = v18;
  *(_OWORD *)uint64_t v16 = v19;
  *(__n128 *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = v10;
  *(void *)(v16 + 40) = v11;
  *(_WORD *)(a5 + v14[7]) = v12;
  return result;
}

unint64_t sub_20AA3D3DC()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6174614477656976;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA3D480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA3FCD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA3D4A8(uint64_t a1)
{
  unint64_t v2 = sub_20AA3D794();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA3D4E4(uint64_t a1)
{
  unint64_t v2 = sub_20AA3D794();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NonNewsArticleViewResumeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA3DC74(0, &qword_267655108, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA3D794();
  sub_20AB86DC0();
  LOBYTE(v21) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(void *)&long long v21 = v12;
    *((void *)&v21 + 1) = v13;
    LOWORD(v22) = (_WORD)v11;
    char v25 = 1;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v14 = (long long *)(v3 + v10[6]);
    long long v15 = *v14;
    long long v16 = v14[1];
    uint64_t v18 = *((void *)v14 + 4);
    uint64_t v17 = *((void *)v14 + 5);
    long long v21 = v15;
    long long v22 = v16;
    uint64_t v23 = v18;
    uint64_t v24 = v17;
    char v25 = 2;
    sub_20A9DBEEC();
    sub_20AB86C50();
    LOWORD(v21) = *(_WORD *)(v3 + v10[7]);
    char v25 = 3;
    sub_20A97C86C();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA3D794()
{
  unint64_t result = qword_267655110;
  if (!qword_267655110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655110);
  }
  return result;
}

uint64_t NonNewsArticleViewResumeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA3DC74(0, &qword_267655118, MEMORY[0x263F8E040]);
  uint64_t v30 = v6;
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v24 - v7;
  __int16 v9 = (int *)type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA3D794();
  uint64_t v31 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v28;
  LOBYTE(v32) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v29;
  uint64_t v15 = v30;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v36 = 1;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v16 = *((void *)&v32 + 1);
  __int16 v17 = v33;
  uint64_t v18 = v12 + v9[5];
  *(void *)uint64_t v18 = v32;
  *(void *)(v18 + 8) = v16;
  *(_WORD *)(v18 + 16) = v17;
  char v36 = 2;
  sub_20A9DBE94();
  sub_20AB86B80();
  long long v19 = v33;
  uint64_t v20 = v34;
  uint64_t v21 = v35;
  uint64_t v22 = v12 + v9[6];
  *(_OWORD *)uint64_t v22 = v32;
  *(_OWORD *)(v22 + 16) = v19;
  *(void *)(v22 + 32) = v20;
  *(void *)(v22 + 40) = v21;
  char v36 = 3;
  sub_20A97C818();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v15);
  *(_WORD *)(v12 + v9[7]) = v32;
  sub_20AA3DCD8(v12, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_20AA3DD3C(v12);
}

void sub_20AA3DC74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA3D794();
    unint64_t v7 = a3(a1, &type metadata for NonNewsArticleViewResumeEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA3DCD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA3DD3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NonNewsArticleViewResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA3DD98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NonNewsArticleViewResumeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA3DDB0(void *a1)
{
  return NonNewsArticleViewResumeEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA3DDC8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653438, MEMORY[0x263F24D18], (uint64_t)qword_2676550C0, a1);
}

uint64_t sub_20AA3DE00@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653440, MEMORY[0x263F24DD8], (uint64_t)qword_2676550D8, a1);
}

uint64_t sub_20AA3DE38@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653448, MEMORY[0x263F24DE8], (uint64_t)qword_2676550F0, a1);
}

uint64_t sub_20AA3DE70@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsArticleViewResumeEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    __int16 v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for NonNewsArticleViewResumeEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for NonNewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for NonNewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA3EC78);
}

uint64_t sub_20AA3EC78(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA3EECC);
}

uint64_t sub_20AA3EECC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_20AA3F118()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA3CE6C(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    if (v1 <= 0x3F)
    {
      sub_20AA3CE6C(319, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
      if (v2 <= 0x3F)
      {
        sub_20AA3CE6C(319, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsArticleViewResumeEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v14[3];
    v13[2] = v14[2];
    v13[3] = v16;
    uint64_t v17 = v14[5];
    v13[4] = v14[4];
    v13[5] = v17;
    *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NonNewsArticleViewResumeEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NonNewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  uint64_t v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *(void *)(a2 + v10);
  v11[1] = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[2] = v12[2];
  v11[3] = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[4] = v12[4];
  v11[5] = v12[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  uint64_t v15 = (unsigned char *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = (long long *)(a2 + v7);
  long long v11 = *v10;
  *(_WORD *)(v9 + 16) = *((_WORD *)v10 + 8);
  *(_OWORD *)uint64_t v9 = v11;
  uint64_t v12 = (_OWORD *)(a1 + v8);
  uint64_t v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  v12[2] = v13[2];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for NonNewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *uint64_t v12 = *(void *)(a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = v13[3];
  v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA3F884);
}

uint64_t sub_20AA3F884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA3F95C);
}

uint64_t sub_20AA3F95C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA3FA1C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NonNewsArticleViewResumeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA3FB90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleViewResumeEvent.Model.CodingKeys()
{
  return &type metadata for NonNewsArticleViewResumeEvent.Model.CodingKeys;
}

unint64_t sub_20AA3FBCC()
{
  unint64_t result = qword_267655140;
  if (!qword_267655140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655140);
  }
  return result;
}

unint64_t sub_20AA3FC24()
{
  unint64_t result = qword_267655148;
  if (!qword_267655148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655148);
  }
  return result;
}

unint64_t sub_20AA3FC7C()
{
  unint64_t result = qword_267655150;
  if (!qword_267655150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655150);
  }
  return result;
}

uint64_t sub_20AA3FCD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA79B0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_20AA3FEB4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267655158, MEMORY[0x263F24D10]);
}

uint64_t static SearchEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653450, MEMORY[0x263F24D18], (uint64_t)qword_267655158, a1);
}

uint64_t static SearchEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA3FF1C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267655170, MEMORY[0x263F24DC8]);
}

uint64_t static SearchEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653458, MEMORY[0x263F24DD8], (uint64_t)qword_267655170, a1);
}

uint64_t sub_20AA3FF7C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655188);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655188);
  return sub_20AB85D30();
}

uint64_t static SearchEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653460, MEMORY[0x263F24DE8], (uint64_t)qword_267655188, a1);
}

uint64_t SearchEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SearchEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SearchEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  sub_20AA40138();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676551B8);
}

void sub_20AA40138()
{
  if (!qword_267653D48)
  {
    sub_20A9A37D4();
    sub_20A9A3828();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267653D48);
    }
  }
}

uint64_t SearchEvent.searchData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  sub_20AA40138();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchEvent.searchData.modify())()
{
  return nullsub_1;
}

uint64_t SearchEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for SearchEvent(0) + 20);
  sub_20AA40138();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t SearchEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SearchEvent.Model.searchData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for SearchEvent.Model(0) + 20));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676551C8);
}

uint64_t SearchEvent.Model.init(eventData:searchData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a3, a1, v7);
  uint64_t result = type metadata accessor for SearchEvent.Model(0);
  uint64_t v9 = (void *)(a3 + *(int *)(result + 20));
  *uint64_t v9 = v5;
  v9[1] = v6;
  return result;
}

uint64_t sub_20AA40420()
{
  if (*v0) {
    return 0x6144686372616573;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AA40464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA41C80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA4048C(uint64_t a1)
{
  unint64_t v2 = sub_20AA406D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA404C8(uint64_t a1)
{
  unint64_t v2 = sub_20AA406D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA40A7C(0, &qword_2676551A0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v14[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA406D4();
  sub_20AB86DC0();
  LOBYTE(v15) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    unint64_t v10 = (uint64_t *)(v3 + *(int *)(type metadata accessor for SearchEvent.Model(0) + 20));
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    uint64_t v15 = v12;
    uint64_t v16 = v11;
    v14[15] = 1;
    sub_20A9A3828();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA406D4()
{
  unint64_t result = qword_2676551A8;
  if (!qword_2676551A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676551A8);
  }
  return result;
}

uint64_t SearchEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v25 = sub_20AB85FC0();
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA40A7C(0, &qword_2676551B0, MEMORY[0x263F8E040]);
  uint64_t v26 = v6;
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for SearchEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA406D4();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v23;
  LOBYTE(v27) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v25;
  sub_20AB86B80();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v21 = (uint64_t)v12;
  v15(v12, v5, v14);
  char v29 = 1;
  sub_20A9A37D4();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v26);
  uint64_t v16 = v28;
  uint64_t v18 = v21;
  uint64_t v17 = v22;
  uint64_t v19 = (void *)(v21 + *(int *)(v9 + 20));
  *uint64_t v19 = v27;
  v19[1] = v16;
  sub_20AA40AE0(v18, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AA40B44(v18);
}

void sub_20AA40A7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA406D4();
    unint64_t v7 = a3(a1, &type metadata for SearchEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA40AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA40B44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA40BA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA40BB8(void *a1)
{
  return SearchEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA40BD0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653450, MEMORY[0x263F24D18], (uint64_t)qword_267655158, a1);
}

uint64_t sub_20AA40C08@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653458, MEMORY[0x263F24DD8], (uint64_t)qword_267655170, a1);
}

uint64_t sub_20AA40C40@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653460, MEMORY[0x263F24DE8], (uint64_t)qword_267655188, a1);
}

uint64_t sub_20AA40C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AA40138();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA40138();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for SearchEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AA40138();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA40138();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA40138();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA40138();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA40138();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA411E0);
}

uint64_t sub_20AA411E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20AA40138();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for SearchEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA412EC);
}

uint64_t sub_20AA412EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20AA40138();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_20AA413F0()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA40138();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA41848);
}

uint64_t sub_20AA41848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SearchEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA41920);
}

uint64_t sub_20AA41920(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA419E0()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA41B40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchEvent.Model.CodingKeys()
{
  return &type metadata for SearchEvent.Model.CodingKeys;
}

unint64_t sub_20AA41B7C()
{
  unint64_t result = qword_2676551D8;
  if (!qword_2676551D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676551D8);
  }
  return result;
}

unint64_t sub_20AA41BD4()
{
  unint64_t result = qword_2676551E0;
  if (!qword_2676551E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676551E0);
  }
  return result;
}

unint64_t sub_20AA41C2C()
{
  unint64_t result = qword_2676551E8;
  if (!qword_2676551E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676551E8);
  }
  return result;
}

uint64_t sub_20AA41C80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static WatchlistSummaryData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t WatchlistSummaryData.watchlistSummary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WatchlistSummaryData.watchlistSummary.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*WatchlistSummaryData.watchlistSummary.modify())()
{
  return nullsub_1;
}

StocksAnalytics::WatchlistSummaryData __swiftcall WatchlistSummaryData.init(watchlistSummary:)(StocksAnalytics::WatchlistSummaryData watchlistSummary)
{
  v1->watchlistSummary._rawValue = watchlistSummary.watchlistSummary._rawValue;
  return watchlistSummary;
}

unint64_t sub_20AA41DF0()
{
  return 0xD000000000000010;
}

uint64_t sub_20AA41E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA4265C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AA41E38(uint64_t a1)
{
  unint64_t v2 = sub_20AA42044();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA41E74(uint64_t a1)
{
  unint64_t v2 = sub_20AA42044();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WatchlistSummaryData.encode(to:)(void *a1)
{
  sub_20AA422C0(0, &qword_26AC518E8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA42044();
  sub_20AB86DC0();
  v10[1] = v8;
  sub_20AA42098();
  sub_20AA42324(&qword_26AC516B0, (void (*)(void))sub_20A9D8BD0);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA42044()
{
  unint64_t result = qword_26AC50560;
  if (!qword_26AC50560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50560);
  }
  return result;
}

void sub_20AA42098()
{
  if (!qword_26AC516A8)
  {
    unint64_t v0 = sub_20AB86790();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC516A8);
    }
  }
}

uint64_t WatchlistSummaryData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20AA422C0(0, &qword_26AC517A8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA42044();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AA42098();
    sub_20AA42324(&qword_26AC516B8, (void (*)(void))sub_20A9D8B78);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA422C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA42044();
    unint64_t v7 = a3(a1, &type metadata for WatchlistSummaryData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA42324(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20AA42098();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20AA42394()
{
  unint64_t result = qword_26AC50588;
  if (!qword_26AC50588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50588);
  }
  return result;
}

unint64_t sub_20AA423EC()
{
  unint64_t result = qword_26AC50580;
  if (!qword_26AC50580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50580);
  }
  return result;
}

uint64_t sub_20AA42440@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return WatchlistSummaryData.init(from:)(a1, a2);
}

uint64_t sub_20AA42458(void *a1)
{
  return WatchlistSummaryData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for WatchlistSummaryData()
{
  return &type metadata for WatchlistSummaryData;
}

unsigned char *storeEnumTagSinglePayload for WatchlistSummaryData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA4251CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSummaryData.CodingKeys()
{
  return &type metadata for WatchlistSummaryData.CodingKeys;
}

unint64_t sub_20AA42558()
{
  unint64_t result = qword_2676551F0;
  if (!qword_2676551F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676551F0);
  }
  return result;
}

unint64_t sub_20AA425B0()
{
  unint64_t result = qword_26AC50570;
  if (!qword_26AC50570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50570);
  }
  return result;
}

unint64_t sub_20AA42608()
{
  unint64_t result = qword_26AC50568;
  if (!qword_26AC50568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50568);
  }
  return result;
}

uint64_t sub_20AA4265C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA7FD0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

StocksAnalytics::PaidSubscriberToSourceChannelType_optional __swiftcall PaidSubscriberToSourceChannelType.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

uint64_t PaidSubscriberToSourceChannelType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701147238;
      break;
    case 2:
      uint64_t result = 0x6C61697274;
      break;
    case 3:
      uint64_t result = 1684627824;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA427BC(unsigned __int8 *a1, char *a2)
{
  return sub_20AA34AA4(*a1, *a2);
}

unint64_t sub_20AA427CC()
{
  unint64_t result = qword_2676551F8;
  if (!qword_2676551F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676551F8);
  }
  return result;
}

uint64_t sub_20AA42820()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA428E8()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA42998()
{
  return sub_20AB86D80();
}

StocksAnalytics::PaidSubscriberToSourceChannelType_optional sub_20AA42A5C(Swift::String *a1)
{
  return PaidSubscriberToSourceChannelType.init(rawValue:)(*a1);
}

void sub_20AA42A68(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701147238;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C61697274;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 1684627824;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20AA42AF0()
{
  return sub_20AB86750();
}

uint64_t sub_20AA42B50()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for PaidSubscriberToSourceChannelType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA42C6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidSubscriberToSourceChannelType()
{
  return &type metadata for PaidSubscriberToSourceChannelType;
}

unint64_t sub_20AA42CA4()
{
  unint64_t result = qword_26AC50FE0;
  if (!qword_26AC50FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FE0);
  }
  return result;
}

void sub_20AA42CF8(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v112 = a5;
  uint64_t v111 = a4;
  unint64_t v117 = a3;
  unint64_t v116 = a2;
  v122 = a6;
  uint64_t v115 = sub_20AB851F0();
  uint64_t v114 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  v113 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20AB850A0();
  uint64_t v120 = *(void *)(v9 - 8);
  uint64_t v121 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  v118 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  v119 = (char *)&v88 - v12;
  uint64_t v124 = type metadata accessor for MediaEngageEvent.Model(0);
  MEMORY[0x270FA5388](v124);
  v123 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA4389C();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20AB85990();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v88 - v19;
  sub_20AA438F4();
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  int v26 = swift_dynamicCast();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if (v26)
  {
    v27(v16, 0, 1, v22);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v16, v22);
    uint64_t v28 = (void *)sub_20AB85960();
    uint64_t v29 = sub_20AB85E30();
    if (v6)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    }
    else
    {
      uint64_t v31 = v29;
      unint64_t v32 = v30;

      sub_20AB85000();
      swift_allocObject();
      sub_20AB84FF0();
      sub_20AA43988(&qword_267655208, (void (*)(uint64_t))type metadata accessor for MediaEngageEvent.Model);
      uint64_t v34 = (uint64_t)v123;
      long long v33 = (int *)v124;
      sub_20AB84FE0();
      uint64_t v110 = v31;
      swift_release();
      uint64_t v35 = v34 + v33[6];
      int v127 = *(_DWORD *)(v35 + 64);
      long long v36 = *(_OWORD *)(v35 + 48);
      v126[2] = *(_OWORD *)(v35 + 32);
      v126[3] = v36;
      long long v37 = *(_OWORD *)(v35 + 16);
      v126[0] = *(_OWORD *)v35;
      v126[1] = v37;
      unint64_t v38 = *(void *)v35;
      unint64_t v39 = *(void *)(v35 + 8);
      unint64_t v40 = *(void *)(v35 + 16);
      unint64_t v41 = *(void *)(v35 + 24);
      unint64_t v42 = *(unsigned __int8 *)(v35 + 32);
      unint64_t v43 = *(void *)(v35 + 40);
      unint64_t v44 = *(unsigned __int8 *)(v35 + 48);
      unint64_t v45 = *(void *)(v35 + 56);
      uint64_t v46 = *(unsigned __int8 *)(v35 + 64);
      int v47 = *(unsigned __int8 *)(v35 + 65);
      uint64_t v48 = *(unsigned __int8 *)(v35 + 66);
      int v49 = *(unsigned __int8 *)(v35 + 67);
      uint64_t v50 = v33[10];
      uint64_t v51 = (unsigned __int8 *)(v34 + v33[9]);
      unsigned int v52 = *v51;
      uint64_t v53 = *((void *)v51 + 1);
      uint64_t v54 = *((void *)v51 + 2);
      uint64_t v55 = *((unsigned int *)v51 + 6);
      int v56 = v51[28];
      uint64_t v57 = *(void *)(v34 + v50);
      uint64_t v58 = *(unsigned __int8 *)(v34 + v50 + 8);
      int v59 = *(unsigned __int8 *)(v34 + v50 + 16);
      if (((1 << v52) & 0x2D) != 0)
      {
        sub_20AA3AC9C(v110, v32);
LABEL_11:
        sub_20AA439D0(v34, type metadata accessor for MediaEngageEvent.Model);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
        unint64_t v61 = v122;
        v122[14] = 0;
        *((_OWORD *)v61 + 5) = 0u;
        *((_OWORD *)v61 + 6) = 0u;
        *((_OWORD *)v61 + 3) = 0u;
        *((_OWORD *)v61 + 4) = 0u;
        *((_OWORD *)v61 + 1) = 0u;
        *((_OWORD *)v61 + 2) = 0u;
        *(_OWORD *)unint64_t v61 = 0u;
      }
      else
      {
        uint64_t v106 = *(unsigned int *)(v34 + v50 + 12);
        uint64_t v109 = v58;
        int v107 = v59;
        uint64_t v108 = v57;
        switch(v58)
        {
          case 1:
            sub_20AA3AD54((uint64_t)v126);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_10;
          default:
            int v90 = v56;
            uint64_t v91 = v55;
            unsigned int v92 = v52;
            uint64_t v93 = v53;
            int v94 = v47;
            uint64_t v95 = v46;
            int v96 = v49;
            uint64_t v97 = v48;
            unint64_t v98 = v45;
            unint64_t v99 = v44;
            unint64_t v100 = v43;
            unint64_t v101 = v42;
            unint64_t v102 = v41;
            unint64_t v103 = v40;
            unint64_t v104 = v39;
            unint64_t v105 = v38;
            char v60 = sub_20AB86CA0();
            sub_20AA3AD54((uint64_t)v126);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (v60)
            {
LABEL_10:
              sub_20AA3AC9C(v110, v32);
              sub_20AA3AD8C((uint64_t)v126);
              swift_bridgeObjectRelease();
              goto LABEL_11;
            }
            uint64_t v62 = v54;
            unint64_t v89 = v32;
            uint64_t v63 = v119;
            sub_20AB85090();
            (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v118, v63, v121);
            unint64_t v64 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
            unint64_t v66 = *(void *)(v64 + 16);
            unint64_t v65 = *(void *)(v64 + 24);
            if (v66 >= v65 >> 1) {
              unint64_t v64 = sub_20AA0C290(v65 > 1, v66 + 1, 1, v64);
            }
            *(void *)(v64 + 16) = v66 + 1;
            uint64_t v67 = v120;
            (*(void (**)(unint64_t, char *, uint64_t))(v120 + 32))(v64+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v66, v118, v121);
            unint64_t v130 = v64;
            uint64_t v68 = v34 + *(int *)(v124 + 56);
            long long v69 = *(_OWORD *)(v68 + 16);
            v128[0] = *(_OWORD *)v68;
            v128[1] = v69;
            __int16 v129 = *(_WORD *)(v68 + 32);
            sub_20AA3AD54((uint64_t)v128);
            uint64_t v70 = sub_20AA3AF80(v126, v128, v111, v112);
            sub_20AA3AD8C((uint64_t)v128);
            sub_20AA3A988(v70);
            unint64_t v71 = sub_20AA43A30(v108, v109);
            sub_20AA3A988(v71);
            char v125 = v90;
            uint64_t v72 = sub_20AA3B3CC(v92, v93, v62, v91 | ((unint64_t)v90 << 32));
            swift_bridgeObjectRelease();
            sub_20AA3A988(v72);
            uint64_t v73 = v113;
            sub_20AB851E0();
            uint64_t v74 = sub_20AB851D0();
            unint64_t v76 = v75;
            sub_20AA3AC9C(v110, v89);
            (*(void (**)(char *, uint64_t))(v114 + 8))(v73, v115);
            (*(void (**)(char *, uint64_t))(v67 + 8))(v119, v121);
            sub_20AA439D0(v34, type metadata accessor for MediaEngageEvent.Model);
            (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
            uint64_t v77 = 256;
            if (!v94) {
              uint64_t v77 = 0;
            }
            uint64_t v78 = v77 | v95;
            unint64_t v79 = v122;
            unint64_t v80 = v105;
            unint64_t *v122 = v130;
            v79[1] = v80;
            uint64_t v81 = v78 | (v97 << 16);
            uint64_t v82 = 0x1000000;
            if (!v96) {
              uint64_t v82 = 0;
            }
            v79[2] = v104;
            uint64_t v83 = v81 | v82;
            unint64_t v84 = v102;
            v79[3] = v103;
            v79[4] = v84;
            unint64_t v85 = v100;
            v79[5] = v101;
            v79[6] = v85;
            unint64_t v86 = v98;
            v79[7] = v99;
            v79[8] = v86;
            v79[9] = v83;
            v79[10] = 2;
            unint64_t v87 = v117;
            v79[11] = v116;
            v79[12] = v87;
            v79[13] = v74;
            v79[14] = v76;
            swift_bridgeObjectRetain();
            break;
        }
      }
    }
  }
  else
  {
    v27(v16, 1, 1, v22);
    sub_20AA439D0((uint64_t)v16, (uint64_t (*)(void))sub_20AA4389C);
    sub_20AA0C120();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t type metadata accessor for MediaEngageEventQueryItemsGenerator()
{
  return self;
}

void sub_20AA43884(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
}

void sub_20AA4389C()
{
  if (!qword_267655200)
  {
    sub_20AA438F4();
    unint64_t v0 = sub_20AB868D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267655200);
    }
  }
}

void sub_20AA438F4()
{
  if (!qword_26AC4E558)
  {
    type metadata accessor for MediaEngageEvent(255);
    sub_20AA43988(&qword_26AC4F3C0, (void (*)(uint64_t))type metadata accessor for MediaEngageEvent);
    unint64_t v0 = sub_20AB85990();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E558);
    }
  }
}

uint64_t sub_20AA43988(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AA439D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20AA43A30(uint64_t a1, char a2)
{
  uint64_t v3 = sub_20AB850A0();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v41 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v41 - v23;
  MEMORY[0x270FA5388](v22);
  int v26 = (char *)&v41 - v25;
  unint64_t v27 = MEMORY[0x263F8EE78];
  switch(a2)
  {
    case 1:
    case 5:
    case 6:
    case 7:
    case 8:
      return v27;
    case 2:
      sub_20AB85090();
      uint64_t v28 = v41;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v18, v21, v42);
      unint64_t v27 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v33 = *(void *)(v27 + 16);
      unint64_t v32 = *(void *)(v27 + 24);
      if (v33 >= v32 >> 1) {
        unint64_t v27 = sub_20AA0C290(v32 > 1, v33 + 1, 1, v27);
      }
      *(void *)(v27 + 16) = v33 + 1;
      uint64_t v34 = v18;
      uint64_t v29 = v42;
      (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v27+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v33, v34, v42);
      int v26 = v21;
      goto LABEL_14;
    case 3:
      sub_20AB85090();
      uint64_t v29 = v42;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v6, v9, v42);
      unint64_t v27 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v36 = *(void *)(v27 + 16);
      unint64_t v35 = *(void *)(v27 + 24);
      if (v36 >= v35 >> 1) {
        unint64_t v27 = sub_20AA0C290(v35 > 1, v36 + 1, 1, v27);
      }
      *(void *)(v27 + 16) = v36 + 1;
      uint64_t v37 = v41;
      (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v27+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v36, v6, v29);
      int v26 = v9;
      uint64_t v28 = v37;
      goto LABEL_14;
    case 4:
      sub_20AB85090();
      uint64_t v28 = v41;
      uint64_t v29 = v42;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v12, v15, v42);
      unint64_t v27 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v39 = *(void *)(v27 + 16);
      unint64_t v38 = *(void *)(v27 + 24);
      if (v39 >= v38 >> 1) {
        unint64_t v27 = sub_20AA0C290(v38 > 1, v39 + 1, 1, v27);
      }
      *(void *)(v27 + 16) = v39 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v27+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v39, v12, v29);
      int v26 = v15;
      goto LABEL_14;
    default:
      sub_20AB85090();
      uint64_t v28 = v41;
      uint64_t v29 = v42;
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v24, v26, v42);
      unint64_t v27 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v31 = *(void *)(v27 + 16);
      unint64_t v30 = *(void *)(v27 + 24);
      if (v31 >= v30 >> 1) {
        unint64_t v27 = sub_20AA0C290(v30 > 1, v31 + 1, 1, v27);
      }
      *(void *)(v27 + 16) = v31 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v27+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v31, v24, v29);
LABEL_14:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v29);
      return v27;
  }
}

void __swiftcall ExternalAnalyticsData.init(externalAnalyticsEventType:externalAnalyticsID:externalAnalyticsEventUUID:)(StocksAnalytics::ExternalAnalyticsData *__return_ptr retstr, StocksAnalytics::ExternalAnalyticsEventType externalAnalyticsEventType, Swift::String externalAnalyticsID, Swift::String externalAnalyticsEventUUID)
{
  retstr->externalAnalyticsEventType = *(unsigned char *)externalAnalyticsEventType;
  retstr->externalAnalyticsID = externalAnalyticsID;
  retstr->externalAnalyticsEventUUID = externalAnalyticsEventUUID;
}

uint64_t static ExternalAnalyticsData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void ExternalAnalyticsData.externalAnalyticsEventType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ExternalAnalyticsData.externalAnalyticsEventType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*ExternalAnalyticsData.externalAnalyticsEventType.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAnalyticsData.externalAnalyticsID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExternalAnalyticsData.externalAnalyticsID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ExternalAnalyticsData.externalAnalyticsID.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAnalyticsData.externalAnalyticsEventUUID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExternalAnalyticsData.externalAnalyticsEventUUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ExternalAnalyticsData.externalAnalyticsEventUUID.modify())()
{
  return nullsub_1;
}

unint64_t sub_20AA4411C(char a1)
{
  unint64_t result = 0xD00000000000001ALL;
  if (a1 == 1) {
    return 0xD000000000000013;
  }
  return result;
}

unint64_t sub_20AA44178()
{
  return sub_20AA4411C(*v0);
}

uint64_t sub_20AA44180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA44C58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA441A8(uint64_t a1)
{
  unint64_t v2 = sub_20AA443F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA441E4(uint64_t a1)
{
  unint64_t v2 = sub_20AA443F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ExternalAnalyticsData.encode(to:)(void *a1)
{
  sub_20AA44704(0, &qword_267655210, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v13 - v7;
  char v9 = *v1;
  uint64_t v10 = *((void *)v1 + 1);
  v13[2] = *((void *)v1 + 2);
  v13[3] = v10;
  uint64_t v11 = *((void *)v1 + 3);
  v13[0] = *((void *)v1 + 4);
  v13[1] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA443F8();
  sub_20AB86DC0();
  char v17 = v9;
  char v16 = 0;
  sub_20AA4444C();
  sub_20AB86C50();
  if (!v2)
  {
    char v15 = 1;
    sub_20AB86C10();
    char v14 = 2;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AA443F8()
{
  unint64_t result = qword_267655218;
  if (!qword_267655218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655218);
  }
  return result;
}

unint64_t sub_20AA4444C()
{
  unint64_t result = qword_267655220;
  if (!qword_267655220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655220);
  }
  return result;
}

uint64_t ExternalAnalyticsData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA44704(0, &qword_267655228, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA443F8();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v23 = 0;
  sub_20AA44768();
  sub_20AB86B80();
  int v10 = v24;
  char v22 = 1;
  uint64_t v11 = sub_20AB86B40();
  uint64_t v13 = v12;
  uint64_t v19 = v11;
  int v20 = v10;
  char v21 = 2;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_20AB86B40();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(unsigned char *)a2 = v20;
  *(void *)(a2 + 8) = v19;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AA44704(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA443F8();
    unint64_t v7 = a3(a1, &type metadata for ExternalAnalyticsData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA44768()
{
  unint64_t result = qword_267655230;
  if (!qword_267655230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655230);
  }
  return result;
}

unint64_t sub_20AA447C0()
{
  unint64_t result = qword_267655238;
  if (!qword_267655238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655238);
  }
  return result;
}

unint64_t sub_20AA44818()
{
  unint64_t result = qword_267655240;
  if (!qword_267655240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655240);
  }
  return result;
}

uint64_t sub_20AA4486C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ExternalAnalyticsData.init(from:)(a1, a2);
}

uint64_t sub_20AA44884(void *a1)
{
  return ExternalAnalyticsData.encode(to:)(a1);
}

uint64_t initializeWithCopy for ExternalAnalyticsData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalAnalyticsData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ExternalAnalyticsData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsData()
{
  return &type metadata for ExternalAnalyticsData;
}

unsigned char *storeEnumTagSinglePayload for ExternalAnalyticsData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA44B18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsData.CodingKeys()
{
  return &type metadata for ExternalAnalyticsData.CodingKeys;
}

unint64_t sub_20AA44B54()
{
  unint64_t result = qword_267655248;
  if (!qword_267655248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655248);
  }
  return result;
}

unint64_t sub_20AA44BAC()
{
  unint64_t result = qword_267655250;
  if (!qword_267655250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655250);
  }
  return result;
}

unint64_t sub_20AA44C04()
{
  unint64_t result = qword_267655258;
  if (!qword_267655258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655258);
  }
  return result;
}

uint64_t sub_20AA44C58(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x800000020ABA8030 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA8050 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000020ABA8070)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

StocksAnalytics::MediaPlayMethod_optional __swiftcall MediaPlayMethod.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t MediaPlayMethod.rawValue.getter()
{
  uint64_t v1 = 0x79616C706F747561;
  if (*v0 != 1) {
    uint64_t v1 = 0x7474754279616C70;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AA44E60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA37F3C(*a1, *a2);
}

unint64_t sub_20AA44E70()
{
  unint64_t result = qword_267655260;
  if (!qword_267655260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655260);
  }
  return result;
}

uint64_t sub_20AA44EC4()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA44F74()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA45010()
{
  return sub_20AB86D80();
}

StocksAnalytics::MediaPlayMethod_optional sub_20AA450BC(Swift::String *a1)
{
  return MediaPlayMethod.init(rawValue:)(*a1);
}

void sub_20AA450C8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x79616C706F747561;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7474754279616C70;
    unint64_t v4 = 0xEF73736572506E6FLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AA45134()
{
  return sub_20AB86750();
}

uint64_t sub_20AA45194()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for MediaPlayMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA452B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaPlayMethod()
{
  return &type metadata for MediaPlayMethod;
}

unint64_t sub_20AA452E8()
{
  unint64_t result = qword_267655268;
  if (!qword_267655268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655268);
  }
  return result;
}

StocksAnalytics::GroupType_optional __swiftcall GroupType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t GroupType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1634891107;
      goto LABEL_7;
    case 2:
      uint64_t result = 0x69726F7453706F74;
      break;
    case 3:
      uint64_t result = 0x6C6F626D7973;
      break;
    case 4:
      uint64_t result = 0x6D6F724665726F6DLL;
      break;
    case 5:
      unsigned int v2 = 1634493810;
LABEL_7:
      uint64_t result = v2 | 0x64657400000000;
      break;
    case 6:
      uint64_t result = 25697;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA45460(unsigned __int8 *a1, char *a2)
{
  return sub_20AA33A28(*a1, *a2);
}

unint64_t sub_20AA45470()
{
  unint64_t result = qword_267655270;
  if (!qword_267655270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655270);
  }
  return result;
}

uint64_t sub_20AA454C4()
{
  return sub_20AB4F1DC();
}

uint64_t sub_20AA454D0()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA455CC()
{
  return sub_20AB4F1DC();
}

StocksAnalytics::GroupType_optional sub_20AA455D4(Swift::String *a1)
{
  return GroupType.init(rawValue:)(*a1);
}

void sub_20AA455E0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x64657461727563;
      goto LABEL_3;
    case 2:
      *a1 = 0x69726F7453706F74;
      a1[1] = 0xEA00000000007365;
      break;
    case 3:
      *a1 = 0x6C6F626D7973;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x6D6F724665726F6DLL;
      a1[1] = 0xE800000000000000;
      break;
    case 5:
      *a1 = 0x646574616C6572;
      a1[1] = 0xE700000000000000;
      break;
    case 6:
      *a1 = 25697;
      a1[1] = 0xE200000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t sub_20AA456C8()
{
  return sub_20AB86750();
}

uint64_t sub_20AA45728()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for GroupType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA45844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupType()
{
  return &type metadata for GroupType;
}

unint64_t sub_20AA4587C()
{
  unint64_t result = qword_26AC51608;
  if (!qword_26AC51608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51608);
  }
  return result;
}

uint64_t sub_20AA458D0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC4F5B0, MEMORY[0x263F24D10]);
}

uint64_t static TipExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4F5C8, MEMORY[0x263F24D18], (uint64_t)qword_26AC4F5B0, a1);
}

uint64_t static TipExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA45938(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC4F5D0, MEMORY[0x263F24DC8]);
}

uint64_t static TipExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4F5E8, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4F5D0, a1);
}

uint64_t sub_20AA45998()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655278);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655278);
  return sub_20AB85D30();
}

uint64_t static TipExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653468, MEMORY[0x263F24DE8], (uint64_t)qword_267655278, a1);
}

uint64_t TipExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t TipExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*TipExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t TipExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA466A0(type metadata accessor for TipExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for TipExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4F5F0);
}

uint64_t TipExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TipExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t TipExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 24);
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TipExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 24);
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TipExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t TipExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 28);
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TipExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 28);
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TipExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t TipExposureEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 32);
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t TipExposureEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 32);
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TipExposureEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t TipExposureEvent.tipData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 36);
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA46170(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20AA461EC()
{
  unint64_t result = qword_26AC514A0;
  if (!qword_26AC514A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514A0);
  }
  return result;
}

unint64_t sub_20AA46240()
{
  unint64_t result = qword_26AC51498;
  if (!qword_26AC51498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51498);
  }
  return result;
}

uint64_t TipExposureEvent.tipData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent(0) + 36);
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TipExposureEvent.tipData.modify())()
{
  return nullsub_1;
}

uint64_t TipExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for TipExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = *MEMORY[0x263F24D30];
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v8, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v2, v15);
}

uint64_t TipExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t TipExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA466A0(type metadata accessor for TipExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AA466A0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for TipExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676552A8);
}

uint64_t TipExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TipExposureEvent.Model(0) + 24);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t TipExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TipExposureEvent.Model(0) + 28));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t TipExposureEvent.Model.symbolData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TipExposureEvent.Model(0) + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;

  return sub_20AA46848(v4, v5);
}

uint64_t sub_20AA46848(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t TipExposureEvent.Model.tipData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for TipExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

__n128 TipExposureEvent.Model.init(eventData:timedData:feedData:viewData:symbolData:tipData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t *a4@<X3>, long long *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10 = *((void *)a3 + 2);
  uint64_t v11 = *a4;
  uint64_t v12 = a4[1];
  __int16 v13 = *((_WORD *)a4 + 8);
  long long v26 = *a5;
  long long v24 = *a3;
  __n128 v25 = (__n128)a5[1];
  uint64_t v14 = *((void *)a5 + 4);
  char v15 = *a6;
  uint64_t v16 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a7, a1, v16);
  char v17 = (int *)type metadata accessor for TipExposureEvent.Model(0);
  uint64_t v18 = a7 + v17[5];
  uint64_t v19 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a2, v19);
  uint64_t v20 = a7 + v17[6];
  *(_OWORD *)uint64_t v20 = v24;
  *(void *)(v20 + 16) = v10;
  uint64_t v21 = a7 + v17[7];
  *(void *)uint64_t v21 = v11;
  *(void *)(v21 + 8) = v12;
  *(_WORD *)(v21 + 16) = v13;
  uint64_t v22 = a7 + v17[8];
  __n128 result = v25;
  *(_OWORD *)uint64_t v22 = v26;
  *(__n128 *)(v22 + 16) = v25;
  *(void *)(v22 + 32) = v14;
  *(unsigned char *)(a7 + v17[9]) = v15;
  return result;
}

uint64_t sub_20AA46A08()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unsigned int v2 = 1684366694;
      goto LABEL_5;
    case 3:
      unsigned int v2 = 2003134838;
LABEL_5:
      uint64_t result = v2 | 0x6174614400000000;
      break;
    case 4:
      uint64_t result = 0x61446C6F626D7973;
      break;
    case 5:
      uint64_t result = 0x61746144706974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA46ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA4A278(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA46AF4(uint64_t a1)
{
  unint64_t v2 = sub_20AA46EB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA46B30(uint64_t a1)
{
  unint64_t v2 = sub_20AA46EB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TipExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA4759C(0, &qword_267655290, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA46EB8();
  sub_20AB86DC0();
  LOBYTE(v20) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for TipExposureEvent.Model(0);
    LOBYTE(v20) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (long long *)(v3 + v10[6]);
    uint64_t v12 = *((void *)v11 + 2);
    long long v20 = *v11;
    *(void *)&long long v21 = v12;
    char v23 = 2;
    sub_20A986774();
    sub_20AB86BE0();
    __int16 v13 = (uint64_t *)(v3 + v10[7]);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    LOWORD(v13) = *((_WORD *)v13 + 8);
    *(void *)&long long v20 = v14;
    *((void *)&v20 + 1) = v15;
    LOWORD(v21) = (_WORD)v13;
    char v23 = 3;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v16 = (long long *)(v3 + v10[8]);
    uint64_t v17 = *((void *)v16 + 4);
    long long v18 = v16[1];
    long long v20 = *v16;
    long long v21 = v18;
    uint64_t v22 = v17;
    char v23 = 4;
    sub_20A97C61C();
    sub_20AB86BE0();
    LOBYTE(v20) = *(unsigned char *)(v3 + v10[9]);
    char v23 = 5;
    sub_20AA46240();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA46EB8()
{
  unint64_t result = qword_267655298;
  if (!qword_267655298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655298);
  }
  return result;
}

uint64_t TipExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v33 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA4759C(0, &qword_2676552A0, MEMORY[0x263F8E040]);
  uint64_t v35 = v8;
  uint64_t v30 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = (int *)type metadata accessor for TipExposureEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  __int16 v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA46EB8();
  uint64_t v34 = v10;
  uint64_t v14 = (uint64_t)v36;
  sub_20AB86DA0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v5;
  unint64_t v36 = a1;
  uint64_t v16 = v31;
  uint64_t v17 = v32;
  LOBYTE(v37) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v13, v33, v6);
  LOBYTE(v37) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v13[v11[5]], v15, v17);
  char v40 = 2;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v18 = v38;
  uint64_t v19 = &v13[v11[6]];
  *(_OWORD *)uint64_t v19 = v37;
  *((void *)v19 + 2) = v18;
  char v40 = 3;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v20 = *((void *)&v37 + 1);
  __int16 v21 = v38;
  uint64_t v22 = &v13[v11[7]];
  *(void *)uint64_t v22 = v37;
  *((void *)v22 + 1) = v20;
  *((_WORD *)v22 + 8) = v21;
  char v40 = 4;
  sub_20A97C5C8();
  sub_20AB86B10();
  uint64_t v23 = v39;
  long long v24 = &v13[v11[8]];
  long long v25 = v38;
  *(_OWORD *)long long v24 = v37;
  *((_OWORD *)v24 + 1) = v25;
  *((void *)v24 + 4) = v23;
  char v40 = 5;
  sub_20AA461EC();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v35);
  v13[v11[9]] = v37;
  sub_20AA47644((uint64_t)v13, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_20AA476A8((uint64_t)v13);
}

void sub_20AA4759C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA46EB8();
    unint64_t v7 = a3(a1, &type metadata for TipExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA47600(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20AA47644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TipExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA476A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TipExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA47704@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TipExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA4771C(void *a1)
{
  return TipExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA47734@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4F5C8, MEMORY[0x263F24D18], (uint64_t)qword_26AC4F5B0, a1);
}

uint64_t sub_20AA4776C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4F5E8, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4F5D0, a1);
}

uint64_t sub_20AA477A4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653468, MEMORY[0x263F24DE8], (uint64_t)qword_267655278, a1);
}

uint64_t sub_20AA477DC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = *MEMORY[0x263F24D30];
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v9, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for TipExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    __int16 v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    long long v25 = (char *)a1 + v24;
    long long v26 = (char *)a2 + v24;
    sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for TipExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for TipExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for TipExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for TipExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for TipExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for TipExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA48B58);
}

uint64_t sub_20AA48B58(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for TipExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA48E7C);
}

uint64_t sub_20AA48E7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  sub_20AA46170(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  sub_20AA46170(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  sub_20AA46170(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  sub_20AA46170(0, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_20AA49198()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AA46170(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
      if (v2 <= 0x3F)
      {
        sub_20AA46170(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
        if (v3 <= 0x3F)
        {
          sub_20AA46170(319, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
          if (v4 <= 0x3F)
          {
            sub_20AA46170(319, &qword_26AC4E690, (void (*)(void))sub_20AA461EC, (void (*)(void))sub_20AA46240);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for TipExposureEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *uint64_t v14 = *v15;
    uint64_t v16 = *((void *)v15 + 2);
    *((void *)v14 + 1) = *((void *)v15 + 1);
    *((void *)v14 + 2) = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = *(void *)((char *)a2 + v20 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *((void *)v21 + 1) = v23;
      v21[16] = v22[16];
      uint64_t v24 = *((void *)v22 + 4);
      *((void *)v21 + 3) = *((void *)v22 + 3);
      *((void *)v21 + 4) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v26 = *((_OWORD *)v22 + 1);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *((_OWORD *)v21 + 1) = v26;
      *((void *)v21 + 4) = *((void *)v22 + 4);
    }
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return a1;
}

uint64_t destroy for TipExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 32) + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TipExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  *(void *)(v13 + 16) = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  uint64_t v18 = *(void *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22)
  {
    *(void *)uint64_t v20 = *(void *)v21;
    *(void *)(v20 + 8) = v22;
    *(unsigned char *)(v20 + 16) = *(unsigned char *)(v21 + 16);
    uint64_t v23 = *(void *)(v21 + 32);
    *(void *)(v20 + 24) = *(void *)(v21 + 24);
    *(void *)(v20 + 32) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v24 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 16) = v24;
    *(void *)(v20 + 32) = *(void *)(v21 + 32);
  }
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithCopy for TipExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  *(unsigned char *)(v15 + 17) = *(unsigned char *)(v16 + 17);
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  uint64_t v20 = *(void *)(a1 + v17 + 8);
  uint64_t v21 = *(void *)(a2 + v17 + 8);
  if (v20)
  {
    if (v21)
    {
      *(void *)uint64_t v18 = *(void *)v19;
      *(void *)(v18 + 8) = *((void *)v19 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v18 + 16) = *((unsigned char *)v19 + 16);
      *(void *)(v18 + 24) = *((void *)v19 + 3);
      *(void *)(v18 + 32) = *((void *)v19 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20AA49A4C(v18);
      uint64_t v22 = *((void *)v19 + 4);
      long long v23 = v19[1];
      *(_OWORD *)uint64_t v18 = *v19;
      *(_OWORD *)(v18 + 16) = v23;
      *(void *)(v18 + 32) = v22;
    }
  }
  else if (v21)
  {
    *(void *)uint64_t v18 = *(void *)v19;
    *(void *)(v18 + 8) = *((void *)v19 + 1);
    *(unsigned char *)(v18 + 16) = *((unsigned char *)v19 + 16);
    *(void *)(v18 + 24) = *((void *)v19 + 3);
    *(void *)(v18 + 32) = *((void *)v19 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v24 = *v19;
    long long v25 = v19[1];
    *(void *)(v18 + 32) = *((void *)v19 + 4);
    *(_OWORD *)uint64_t v18 = v24;
    *(_OWORD *)(v18 + 16) = v25;
  }
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_20AA49A4C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for TipExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = (long long *)(a2 + v11);
  long long v15 = *v14;
  *(void *)(v13 + 16) = *((void *)v14 + 2);
  *(_OWORD *)uint64_t v13 = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  return a1;
}

uint64_t assignWithTake for TipExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  uint64_t v14 = *(void *)(v13 + 16);
  *(void *)(v12 + 8) = v15;
  *(void *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  if (!*(void *)(a1 + v20 + 8)) {
    goto LABEL_5;
  }
  uint64_t v23 = *(void *)(v22 + 8);
  if (!v23)
  {
    sub_20AA49A4C(v21);
LABEL_5:
    long long v25 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v25;
    *(void *)(v21 + 32) = *(void *)(v22 + 32);
    goto LABEL_6;
  }
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  uint64_t v24 = *(void *)(v22 + 32);
  *(void *)(v21 + 24) = *(void *)(v22 + 24);
  *(void *)(v21 + 32) = v24;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TipExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA49D3C);
}

uint64_t sub_20AA49D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TipExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA49E68);
}

uint64_t sub_20AA49E68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AA49F7C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TipExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA4A138);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TipExposureEvent.Model.CodingKeys()
{
  return &type metadata for TipExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AA4A174()
{
  unint64_t result = qword_2676552B8;
  if (!qword_2676552B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676552B8);
  }
  return result;
}

unint64_t sub_20AA4A1CC()
{
  unint64_t result = qword_2676552C0;
  if (!qword_2676552C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676552C0);
  }
  return result;
}

unint64_t sub_20AA4A224()
{
  unint64_t result = qword_2676552C8;
  if (!qword_2676552C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676552C8);
  }
  return result;
}

uint64_t sub_20AA4A278(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x61746144706974 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_20AA4A520(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_2676552D0, MEMORY[0x263F24D10]);
}

uint64_t static NonNewsArticleExternalViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653470, MEMORY[0x263F24D18], (uint64_t)qword_2676552D0, a1);
}

uint64_t static NonNewsArticleExternalViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA4A588(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_2676552E8, MEMORY[0x263F24DC8]);
}

uint64_t static NonNewsArticleExternalViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653478, MEMORY[0x263F24DD8], (uint64_t)qword_2676552E8, a1);
}

uint64_t sub_20AA4A5E8()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655300);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655300);
  return sub_20AB85D30();
}

uint64_t static NonNewsArticleExternalViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653480, MEMORY[0x263F24DE8], (uint64_t)qword_267655300, a1);
}

uint64_t NonNewsArticleExternalViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NonNewsArticleExternalViewEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NonNewsArticleExternalViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.nonNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 20);
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NonNewsArticleExternalViewEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655330);
}

uint64_t NonNewsArticleExternalViewEvent.nonNewsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 20);
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleExternalViewEvent.nonNewsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 24);
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleExternalViewEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 24);
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleExternalViewEvent.feedPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 28);
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleExternalViewEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 28);
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleExternalViewEvent.inGroupPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 32);
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleExternalViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 32);
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleExternalViewEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 36);
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA4AE7C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t NonNewsArticleExternalViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent(0) + 36);
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleExternalViewEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleExternalViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NonNewsArticleExternalViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = *MEMORY[0x263F24D30];
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v8, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v8, v15);
}

uint64_t NonNewsArticleExternalViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NonNewsArticleExternalViewEvent.Model.nonNewsArticleData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent.Model(0) + 20));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NonNewsArticleExternalViewEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655340);
}

uint64_t NonNewsArticleExternalViewEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 24));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NonNewsArticleExternalViewEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 28));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NonNewsArticleExternalViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleExternalViewEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsArticleExternalViewEvent.Model(0) + 36));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

__n128 NonNewsArticleExternalViewEvent.Model.init(eventData:nonNewsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, int *a3@<X2>, int *a4@<X3>, long long *a5@<X4>, long long *a6@<X5>, uint64_t a7@<X8>)
{
  long long v25 = a2[1];
  long long v26 = *a2;
  uint64_t v9 = *((void *)a2 + 4);
  uint64_t v10 = *((void *)a2 + 5);
  int v11 = *a3;
  char v12 = *((unsigned char *)a3 + 4);
  int v13 = *a4;
  char v14 = *((unsigned char *)a4 + 4);
  long long v27 = *a5;
  uint64_t v15 = *((void *)a5 + 2);
  __n128 v29 = (__n128)a6[1];
  long long v30 = *a6;
  uint64_t v16 = *((void *)a6 + 4);
  uint64_t v28 = *((void *)a6 + 5);
  uint64_t v17 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a7, a1, v17);
  uint64_t v18 = (int *)type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  uint64_t v19 = a7 + v18[5];
  *(_OWORD *)uint64_t v19 = v26;
  *(_OWORD *)(v19 + 16) = v25;
  *(void *)(v19 + 32) = v9;
  *(void *)(v19 + 40) = v10;
  uint64_t v20 = a7 + v18[6];
  *(_DWORD *)uint64_t v20 = v11;
  *(unsigned char *)(v20 + 4) = v12;
  uint64_t v21 = a7 + v18[7];
  *(_DWORD *)uint64_t v21 = v13;
  *(unsigned char *)(v21 + 4) = v14;
  uint64_t v22 = a7 + v18[8];
  *(_OWORD *)uint64_t v22 = v27;
  *(void *)(v22 + 16) = v15;
  uint64_t v23 = a7 + v18[9];
  __n128 result = v29;
  *(_OWORD *)uint64_t v23 = v30;
  *(__n128 *)(v23 + 16) = v29;
  *(void *)(v23 + 32) = v16;
  *(void *)(v23 + 40) = v28;
  return result;
}

unint64_t sub_20AA4B5F8(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6174614464656566;
      break;
    case 5:
      unint64_t result = 0x74614470756F7267;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20AA4B6D0()
{
  return sub_20AA4B5F8(*v0);
}

uint64_t sub_20AA4B6D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA4ED6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA4B700(uint64_t a1)
{
  unint64_t v2 = sub_20AA4BA94();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA4B73C(uint64_t a1)
{
  unint64_t v2 = sub_20AA4BA94();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NonNewsArticleExternalViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA4C004(0, &qword_267655318, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA4BA94();
  sub_20AB86DC0();
  LOBYTE(v27) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
    int v11 = (long long *)(v3 + v10[5]);
    long long v12 = *v11;
    long long v13 = v11[1];
    uint64_t v15 = *((void *)v11 + 4);
    uint64_t v14 = *((void *)v11 + 5);
    long long v27 = v12;
    long long v28 = v13;
    *(void *)&long long v29 = v15;
    *((void *)&v29 + 1) = v14;
    char v26 = 1;
    sub_20A9DBEEC();
    sub_20AB86C50();
    uint64_t v16 = (int *)(v3 + v10[6]);
    int v17 = *v16;
    LOBYTE(v16) = *((unsigned char *)v16 + 4);
    LODWORD(v27) = v17;
    BYTE4(v27) = (_BYTE)v16;
    char v26 = 2;
    sub_20A9EE598();
    sub_20AB86BE0();
    uint64_t v18 = (int *)(v3 + v10[7]);
    int v19 = *v18;
    LOBYTE(v18) = *((unsigned char *)v18 + 4);
    LODWORD(v27) = v19;
    BYTE4(v27) = (_BYTE)v18;
    char v26 = 3;
    sub_20A9EE7E8();
    sub_20AB86BE0();
    uint64_t v20 = (long long *)(v3 + v10[8]);
    uint64_t v21 = *((void *)v20 + 2);
    long long v27 = *v20;
    *(void *)&long long v28 = v21;
    char v26 = 4;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v22 = (long long *)(v3 + v10[9]);
    long long v23 = v22[1];
    long long v27 = *v22;
    long long v28 = v23;
    long long v29 = v22[2];
    char v26 = 5;
    sub_20A986524();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA4BA94()
{
  unint64_t result = qword_267655320;
  if (!qword_267655320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655320);
  }
  return result;
}

uint64_t NonNewsArticleExternalViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v32 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA4C004(0, &qword_267655328, MEMORY[0x263F8E040]);
  uint64_t v35 = v6;
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = (int *)type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  int v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA4BA94();
  uint64_t v34 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  long long v29 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v14 = v31;
  uint64_t v13 = v32;
  LOBYTE(v36) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v15 = v33;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v4);
  char v39 = 1;
  sub_20A9DBE94();
  sub_20AB86B80();
  long long v16 = v37;
  long long v17 = v38;
  uint64_t v18 = (_OWORD *)(v12 + v9[5]);
  *uint64_t v18 = v36;
  v18[1] = v16;
  v18[2] = v17;
  char v39 = 2;
  sub_20A9EE544();
  sub_20AB86B10();
  char v19 = BYTE4(v36);
  uint64_t v20 = v12 + v9[6];
  *(_DWORD *)uint64_t v20 = v36;
  *(unsigned char *)(v20 + 4) = v19;
  char v39 = 3;
  sub_20A9EE794();
  sub_20AB86B10();
  char v21 = BYTE4(v36);
  uint64_t v22 = v12 + v9[7];
  *(_DWORD *)uint64_t v22 = v36;
  *(unsigned char *)(v22 + 4) = v21;
  char v39 = 4;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v23 = v37;
  uint64_t v24 = v12 + v9[8];
  *(_OWORD *)uint64_t v24 = v36;
  *(void *)(v24 + 16) = v23;
  char v39 = 5;
  sub_20A9864D0();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v35);
  uint64_t v25 = (_OWORD *)(v12 + v9[9]);
  long long v26 = v37;
  *uint64_t v25 = v36;
  v25[1] = v26;
  v25[2] = v38;
  sub_20AA4C068(v12, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_20AA4C0CC(v12);
}

void sub_20AA4C004(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA4BA94();
    unint64_t v7 = a3(a1, &type metadata for NonNewsArticleExternalViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA4C068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA4C0CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NonNewsArticleExternalViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA4C128@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NonNewsArticleExternalViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA4C140(void *a1)
{
  return NonNewsArticleExternalViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA4C158@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653470, MEMORY[0x263F24D18], (uint64_t)qword_2676552D0, a1);
}

uint64_t sub_20AA4C190@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653478, MEMORY[0x263F24DD8], (uint64_t)qword_2676552E8, a1);
}

uint64_t sub_20AA4C1C8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653480, MEMORY[0x263F24DE8], (uint64_t)qword_267655300, a1);
}

uint64_t sub_20AA4C200@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = *MEMORY[0x263F24D30];
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v9, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  long long v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v9, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsArticleExternalViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    long long v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    char v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    long long v26 = (char *)a2 + v24;
    sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for NonNewsArticleExternalViewEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for NonNewsArticleExternalViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleExternalViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleExternalViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for NonNewsArticleExternalViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleExternalViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA4D6FC);
}

uint64_t sub_20AA4D6FC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleExternalViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA4DA58);
}

uint64_t sub_20AA4DA58(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA4AE7C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  sub_20AA4AE7C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  sub_20AA4AE7C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  sub_20AA4AE7C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_20AA4DDAC()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA4AE7C(319, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
    if (v1 <= 0x3F)
    {
      sub_20AA4AE7C(319, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
      if (v2 <= 0x3F)
      {
        sub_20AA4AE7C(319, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
        if (v3 <= 0x3F)
        {
          sub_20AA4AE7C(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
          if (v4 <= 0x3F)
          {
            sub_20AA4AE7C(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsArticleExternalViewEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = v11[3];
    void v10[2] = v11[2];
    v10[3] = v13;
    uint64_t v14 = v11[5];
    v10[4] = v11[4];
    v10[5] = v14;
    uint64_t v15 = (char *)a1 + v9;
    uint64_t v16 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)a1 + v17;
    uint64_t v20 = (char *)a2 + v17;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    uint64_t v21 = (char *)a1 + v18;
    uint64_t v22 = (char *)a2 + v18;
    *uint64_t v21 = *v22;
    uint64_t v23 = *((void *)v22 + 2);
    *((void *)v21 + 1) = *((void *)v22 + 1);
    *((void *)v21 + 2) = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v24 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27)
    {
      *uint64_t v25 = *v26;
      *((void *)v25 + 1) = *((void *)v26 + 1);
      *((void *)v25 + 2) = v27;
      *((void *)v25 + 3) = *((void *)v26 + 3);
      uint64_t v28 = *((void *)v26 + 4);
      uint64_t v29 = *((void *)v26 + 5);
      *((void *)v25 + 4) = v28;
      *((void *)v25 + 5) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v31 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v31;
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
    }
  }
  return a1;
}

uint64_t destroy for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 36) + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  uint64_t v13 = v10[5];
  v9[4] = v10[4];
  v9[5] = v13;
  uint64_t v14 = a1 + v8;
  uint64_t v15 = a2 + v8;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  uint64_t v22 = *(void *)(v21 + 16);
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(void *)(v20 + 16) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)(a2 + v23 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26)
  {
    *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
    *(void *)(v24 + 8) = *(void *)(v25 + 8);
    *(void *)(v24 + 16) = v26;
    *(void *)(v24 + 24) = *(void *)(v25 + 24);
    uint64_t v27 = *(void *)(v25 + 32);
    uint64_t v28 = *(void *)(v25 + 40);
    *(void *)(v24 + 32) = v27;
    *(void *)(v24 + 40) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *(_OWORD *)(v25 + 16);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v29;
    *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (int *)(a2 + v10);
  int v13 = *v12;
  *(unsigned char *)(v11 + 4) = *((unsigned char *)v12 + 4);
  *(_DWORD *)uint64_t v11 = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (int *)(a2 + v14);
  int v17 = *v16;
  *(unsigned char *)(v15 + 4) = *((unsigned char *)v16 + 4);
  *(_DWORD *)uint64_t v15 = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (long long *)(a2 + v21);
  uint64_t v24 = *(void *)(a1 + v21 + 16);
  uint64_t v25 = *((void *)v23 + 2);
  if (v24)
  {
    if (v25)
    {
      *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
      *(void *)(v22 + 8) = *((void *)v23 + 1);
      *(void *)(v22 + 16) = *((void *)v23 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v22 + 24) = *((_DWORD *)v23 + 6);
      *(_DWORD *)(v22 + 28) = *((_DWORD *)v23 + 7);
      *(void *)(v22 + 32) = *((void *)v23 + 4);
      *(void *)(v22 + 40) = *((void *)v23 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v22);
      long long v27 = v23[1];
      long long v26 = v23[2];
      *(_OWORD *)uint64_t v22 = *v23;
      *(_OWORD *)(v22 + 16) = v27;
      *(_OWORD *)(v22 + 32) = v26;
    }
  }
  else if (v25)
  {
    *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
    *(void *)(v22 + 8) = *((void *)v23 + 1);
    *(void *)(v22 + 16) = *((void *)v23 + 2);
    *(_DWORD *)(v22 + 24) = *((_DWORD *)v23 + 6);
    *(_DWORD *)(v22 + 28) = *((_DWORD *)v23 + 7);
    *(void *)(v22 + 32) = *((void *)v23 + 4);
    *(void *)(v22 + 40) = *((void *)v23 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v28 = *v23;
    long long v29 = v23[2];
    *(_OWORD *)(v22 + 16) = v23[1];
    *(_OWORD *)(v22 + 32) = v29;
    *(_OWORD *)uint64_t v22 = v28;
  }
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  v9[2] = v10[2];
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(unsigned char *)(v12 + 4) = *(unsigned char *)(v13 + 4);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  uint64_t v20 = a3[9];
  uint64_t v21 = (_OWORD *)(a1 + v20);
  uint64_t v22 = (long long *)(a2 + v20);
  long long v23 = *v22;
  long long v24 = v22[2];
  v21[1] = v22[1];
  v21[2] = v24;
  *uint64_t v21 = v23;
  return a1;
}

uint64_t assignWithTake for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = *(unsigned char *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  uint64_t v23 = *(void *)(v21 + 8);
  uint64_t v22 = *(void *)(v21 + 16);
  *(void *)(v20 + 8) = v23;
  *(void *)(v20 + 16) = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  if (!*(void *)(a1 + v24 + 16)) {
    goto LABEL_5;
  }
  uint64_t v27 = *(void *)(v26 + 16);
  if (!v27)
  {
    sub_20A98D5B8(v25);
LABEL_5:
    long long v29 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v29;
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
    return a1;
  }
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = v27;
  swift_bridgeObjectRelease();
  *(void *)(v25 + 24) = *(void *)(v26 + 24);
  uint64_t v28 = *(void *)(v26 + 40);
  *(void *)(v25 + 32) = *(void *)(v26 + 32);
  *(void *)(v25 + 40) = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA4E914);
}

uint64_t sub_20AA4E914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleExternalViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA4E9EC);
}

uint64_t sub_20AA4E9EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA4EAAC()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NonNewsArticleExternalViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA4EC2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleExternalViewEvent.Model.CodingKeys()
{
  return &type metadata for NonNewsArticleExternalViewEvent.Model.CodingKeys;
}

unint64_t sub_20AA4EC68()
{
  unint64_t result = qword_267655350;
  if (!qword_267655350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655350);
  }
  return result;
}

unint64_t sub_20AA4ECC0()
{
  unint64_t result = qword_267655358;
  if (!qword_267655358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655358);
  }
  return result;
}

unint64_t sub_20AA4ED18()
{
  unint64_t result = qword_267655360;
  if (!qword_267655360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655360);
  }
  return result;
}

uint64_t sub_20AA4ED6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA79B0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA79D0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA79F0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_20AA4EFE4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267655368, MEMORY[0x263F24D10]);
}

uint64_t static ANFComponentExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653488, MEMORY[0x263F24D18], (uint64_t)qword_267655368, a1);
}

uint64_t static ANFComponentExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA4F04C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267655380, MEMORY[0x263F24DC8]);
}

uint64_t static ANFComponentExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653490, MEMORY[0x263F24DD8], (uint64_t)qword_267655380, a1);
}

uint64_t sub_20AA4F0AC()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655398);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655398);
  return sub_20AB85D30();
}

uint64_t static ANFComponentExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653498, MEMORY[0x263F24DE8], (uint64_t)qword_267655398, a1);
}

uint64_t ANFComponentExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ANFComponentExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ANFComponentExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA4FAD4(type metadata accessor for ANFComponentExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for ANFComponentExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676553C8);
}

uint64_t ANFComponentExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 24);
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 24);
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 28);
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ANFComponentExposureEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 28);
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.anfComponentData.modify())()
{
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 32);
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA4F6DC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t ANFComponentExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent(0) + 32);
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ANFComponentExposureEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t ANFComponentExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ANFComponentExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v2, v12);
}

uint64_t ANFComponentExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ANFComponentExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA4FAD4(type metadata accessor for ANFComponentExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AA4FAD4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for ANFComponentExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676553D8);
}

uint64_t ANFComponentExposureEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ANFComponentExposureEvent.Model.anfComponentData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 28));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t ANFComponentExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ANFComponentExposureEvent.Model(0) + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 ANFComponentExposureEvent.Model.init(eventData:timedData:newsArticleData:anfComponentData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  long long v27 = *a3;
  uint64_t v9 = *((void *)a3 + 2);
  uint64_t v10 = *((void *)a3 + 3);
  char v11 = *((unsigned char *)a3 + 32);
  uint64_t v12 = *((void *)a3 + 5);
  char v13 = *((unsigned char *)a3 + 48);
  uint64_t v14 = *((void *)a3 + 7);
  char v25 = *((unsigned char *)a3 + 65);
  char v26 = *((unsigned char *)a3 + 64);
  char v23 = *((unsigned char *)a3 + 67);
  char v24 = *((unsigned char *)a3 + 66);
  uint64_t v28 = a4[1];
  uint64_t v29 = *a4;
  __n128 v34 = *a5;
  unint64_t v32 = a5[1].n128_u64[1];
  unint64_t v33 = a5[1].n128_u64[0];
  unsigned __int8 v30 = a5[2].n128_u8[1];
  unsigned __int8 v31 = a5[2].n128_u8[0];
  uint64_t v15 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a6, a1, v15);
  uint64_t v16 = (int *)type metadata accessor for ANFComponentExposureEvent.Model(0);
  uint64_t v17 = a6 + v16[5];
  uint64_t v18 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a2, v18);
  uint64_t v19 = a6 + v16[6];
  *(_OWORD *)uint64_t v19 = v27;
  *(void *)(v19 + 16) = v9;
  *(void *)(v19 + 24) = v10;
  *(unsigned char *)(v19 + 32) = v11;
  *(void *)(v19 + 40) = v12;
  *(unsigned char *)(v19 + 48) = v13;
  *(void *)(v19 + 56) = v14;
  *(unsigned char *)(v19 + 64) = v26;
  *(unsigned char *)(v19 + 65) = v25;
  *(unsigned char *)(v19 + 66) = v24;
  *(unsigned char *)(v19 + 67) = v23;
  uint64_t v20 = (void *)(a6 + v16[7]);
  *uint64_t v20 = v29;
  v20[1] = v28;
  uint64_t v21 = (__n128 *)(a6 + v16[8]);
  __n128 result = v34;
  *uint64_t v21 = v34;
  v21[1].n128_u64[0] = v33;
  v21[1].n128_u64[1] = v32;
  v21[2].n128_u8[0] = v31;
  v21[2].n128_u8[1] = v30;
  return result;
}

unint64_t sub_20AA4FE8C()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0x697472417377656ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA4FF50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA530B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA4FF78(uint64_t a1)
{
  unint64_t v2 = sub_20AA5033C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA4FFB4(uint64_t a1)
{
  unint64_t v2 = sub_20AA5033C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ANFComponentExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA509B8(0, &qword_2676553B0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA5033C();
  sub_20AB86DC0();
  LOBYTE(v30) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for ANFComponentExposureEvent.Model(0);
    LOBYTE(v30) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    char v11 = (long long *)(v3 + v10[6]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v30 = v12;
    uint64_t v31 = v13;
    uint64_t v32 = v14;
    char v33 = v15;
    uint64_t v35 = v16;
    char v36 = v17;
    uint64_t v37 = v18;
    char v38 = v19;
    char v39 = v20;
    char v40 = v21;
    char v41 = (char)v11;
    char v29 = 2;
    sub_20A97A1AC();
    sub_20AB86C50();
    long long v30 = *(_OWORD *)(v3 + v10[7]);
    char v29 = 3;
    sub_20A9AE6E4();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[8]);
    long long v23 = *v22;
    uint64_t v24 = *((void *)v22 + 2);
    uint64_t v25 = *((void *)v22 + 3);
    char v26 = *((unsigned char *)v22 + 32);
    LOBYTE(v22) = *((unsigned char *)v22 + 33);
    long long v30 = v23;
    uint64_t v31 = v24;
    uint64_t v32 = v25;
    char v33 = v26;
    char v34 = (char)v22;
    char v29 = 4;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA5033C()
{
  unint64_t result = qword_2676553B8;
  if (!qword_2676553B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676553B8);
  }
  return result;
}

uint64_t ANFComponentExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA509B8(0, &qword_2676553C0, MEMORY[0x263F8E040]);
  uint64_t v44 = v8;
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v36 - v9;
  char v11 = (int *)type metadata accessor for ANFComponentExposureEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA5033C();
  unint64_t v43 = v10;
  uint64_t v14 = (uint64_t)v45;
  sub_20AB86DA0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v15 = v5;
  unint64_t v45 = a1;
  uint64_t v16 = (uint64_t)v13;
  uint64_t v17 = v40;
  uint64_t v18 = v41;
  LOBYTE(v46) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v16, v42, v6);
  LOBYTE(v46) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v16 + v11[5], v15, v18);
  char v58 = 2;
  sub_20A97A154();
  sub_20AB86B80();
  uint64_t v19 = v47;
  uint64_t v20 = v48;
  char v21 = v49;
  uint64_t v22 = v51;
  char v23 = v52;
  uint64_t v24 = v53;
  char v25 = v54;
  char v26 = v55;
  char v27 = v56;
  char v28 = v57;
  uint64_t v29 = v16 + v11[6];
  *(_OWORD *)uint64_t v29 = v46;
  *(void *)(v29 + 16) = v19;
  *(void *)(v29 + 24) = v20;
  *(unsigned char *)(v29 + 32) = v21;
  *(void *)(v29 + 40) = v22;
  *(unsigned char *)(v29 + 48) = v23;
  *(void *)(v29 + 56) = v24;
  *(unsigned char *)(v29 + 64) = v25;
  *(unsigned char *)(v29 + 65) = v26;
  *(unsigned char *)(v29 + 66) = v27;
  *(unsigned char *)(v29 + 67) = v28;
  char v58 = 3;
  sub_20A9AE68C();
  sub_20AB86B80();
  *(_OWORD *)(v16 + v11[7]) = v46;
  char v58 = 4;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v43, v44);
  uint64_t v30 = v47;
  uint64_t v31 = v48;
  char v32 = v49;
  char v33 = v50;
  uint64_t v34 = v16 + v11[8];
  *(_OWORD *)uint64_t v34 = v46;
  *(void *)(v34 + 16) = v30;
  *(void *)(v34 + 24) = v31;
  *(unsigned char *)(v34 + 32) = v32;
  *(unsigned char *)(v34 + 33) = v33;
  sub_20AA50A1C(v16, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return sub_20AA50A80(v16);
}

void sub_20AA509B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA5033C();
    unint64_t v7 = a3(a1, &type metadata for ANFComponentExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA50A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ANFComponentExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA50A80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ANFComponentExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA50ADC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ANFComponentExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA50AF4(void *a1)
{
  return ANFComponentExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA50B0C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653488, MEMORY[0x263F24D18], (uint64_t)qword_267655368, a1);
}

uint64_t sub_20AA50B44@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653490, MEMORY[0x263F24DD8], (uint64_t)qword_267655380, a1);
}

uint64_t sub_20AA50B7C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653498, MEMORY[0x263F24DE8], (uint64_t)qword_267655398, a1);
}

uint64_t sub_20AA50BB4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for ANFComponentExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    char v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for ANFComponentExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA51BA8);
}

uint64_t sub_20AA51BA8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for ANFComponentExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA51E48);
}

uint64_t sub_20AA51E48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  sub_20AA4F6DC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  sub_20AA4F6DC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  sub_20AA4F6DC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_20AA520E0()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AA4F6DC(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
      if (v2 <= 0x3F)
      {
        sub_20AA4F6DC(319, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
        if (v3 <= 0x3F)
        {
          sub_20AA4F6DC(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ANFComponentExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    v14[32] = v15[32];
    *((void *)v14 + 5) = *((void *)v15 + 5);
    v14[48] = v15[48];
    *((void *)v14 + 7) = *((void *)v15 + 7);
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    uint64_t v18 = (uint64_t *)((char *)a1 + v13);
    uint64_t v19 = (uint64_t *)((char *)a2 + v13);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    uint64_t v25 = *((void *)v23 + 3);
    *((void *)v22 + 2) = *((void *)v23 + 2);
    *((void *)v22 + 3) = v25;
    v22[32] = v23[32];
    v22[33] = v23[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(unsigned char *)(v13 + 48) = *(unsigned char *)(v14 + 48);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  uint64_t v17 = (void *)(a1 + v12);
  uint64_t v18 = (void *)(a2 + v12);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = v23;
  uint64_t v24 = *(void *)(v22 + 24);
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  *(void *)(v21 + 24) = v24;
  *(unsigned char *)(v21 + 32) = *(unsigned char *)(v22 + 32);
  *(unsigned char *)(v21 + 33) = *(unsigned char *)(v22 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v14 = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 40) = v14;
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)(a2 + v18);
  *(void *)(v19 + 8) = *(void *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(void *)(v19 + 24) = *(void *)(v20 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 32) = *(unsigned char *)(v20 + 32);
  *(unsigned char *)(v19 + 33) = *(unsigned char *)(v20 + 33);
  return a1;
}

uint64_t initializeWithTake for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  long long v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(_WORD *)(v18 + 32) = *(_WORD *)(v19 + 32);
  long long v20 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v20;
  return a1;
}

uint64_t assignWithTake for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)(v23 + 8);
  *(void *)uint64_t v22 = *(void *)v23;
  *(void *)(v22 + 8) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v23 + 24);
  *(void *)(v22 + 16) = *(void *)(v23 + 16);
  *(void *)(v22 + 24) = v25;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v22 + 32) = *(unsigned char *)(v23 + 32);
  *(unsigned char *)(v22 + 33) = *(unsigned char *)(v23 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA52B80);
}

uint64_t sub_20AA52B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ANFComponentExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA52CAC);
}

uint64_t sub_20AA52CAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AA52DC0()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ANFComponentExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA52F70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ANFComponentExposureEvent.Model.CodingKeys()
{
  return &type metadata for ANFComponentExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AA52FAC()
{
  unint64_t result = qword_2676553E8;
  if (!qword_2676553E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676553E8);
  }
  return result;
}

unint64_t sub_20AA53004()
{
  unint64_t result = qword_2676553F0;
  if (!qword_2676553F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676553F0);
  }
  return result;
}

unint64_t sub_20AA5305C()
{
  unint64_t result = qword_2676553F8;
  if (!qword_2676553F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676553F8);
  }
  return result;
}

uint64_t sub_20AA530B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA7AC0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

StocksAnalytics::InterfaceOrientation_optional __swiftcall InterfaceOrientation.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t InterfaceOrientation.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7469617274726F70;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 4:
      unint64_t result = 0x70616373646E616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA53430(unsigned __int8 *a1, char *a2)
{
  return sub_20AA365D0(*a1, *a2);
}

unint64_t sub_20AA53440()
{
  unint64_t result = qword_267655400;
  if (!qword_267655400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655400);
  }
  return result;
}

uint64_t sub_20AA53494()
{
  return sub_20AB4CE58();
}

uint64_t sub_20AA5349C()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA53588()
{
  return sub_20AB4EABC();
}

StocksAnalytics::InterfaceOrientation_optional sub_20AA53590(Swift::String *a1)
{
  return InterfaceOrientation.init(rawValue:)(*a1);
}

void sub_20AA5359C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x7469617274726F70;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000012;
      a1[1] = 0x800000020ABA6AD0;
      return;
    case 3:
      unint64_t v4 = 0xED00007466654C65;
      goto LABEL_7;
    case 4:
      unint64_t v4 = 0xEE00746867695265;
LABEL_7:
      *a1 = 0x70616373646E616CLL;
      a1[1] = v4;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20AA53660()
{
  return sub_20AB86750();
}

uint64_t sub_20AA536C0()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for InterfaceOrientation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA537DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InterfaceOrientation()
{
  return &type metadata for InterfaceOrientation;
}

unint64_t sub_20AA53814()
{
  unint64_t result = qword_26AC501C0;
  if (!qword_26AC501C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC501C0);
  }
  return result;
}

uint64_t sub_20AA53868(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267655408, MEMORY[0x263F24D10]);
}

uint64_t static SearchExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534A0, MEMORY[0x263F24D18], (uint64_t)qword_267655408, a1);
}

uint64_t static SearchExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA538D0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267655420, MEMORY[0x263F24DC8]);
}

uint64_t static SearchExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534A8, MEMORY[0x263F24DD8], (uint64_t)qword_267655420, a1);
}

uint64_t sub_20AA53930()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655438);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655438);
  return sub_20AB85D30();
}

uint64_t static SearchExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534B0, MEMORY[0x263F24DE8], (uint64_t)qword_267655438, a1);
}

uint64_t SearchExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SearchExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SearchExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA53C64(type metadata accessor for SearchExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for SearchExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655468);
}

uint64_t SearchExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t SearchExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for SearchExposureEvent(0) + 20);
  sub_20A97C0F4();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t SearchExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SearchExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA53C64(type metadata accessor for SearchExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AA53C64@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for SearchExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655478);
}

uint64_t SearchExposureEvent.Model.init(eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for SearchExposureEvent.Model(0) + 20);
  uint64_t v8 = sub_20AB85FE0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t sub_20AA53DD8()
{
  if (*v0) {
    return 0x74614464656D6974;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AA53E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA55550(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA53E38(uint64_t a1)
{
  unint64_t v2 = sub_20AA540C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA53E74(uint64_t a1)
{
  unint64_t v2 = sub_20AA540C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchExposureEvent.Model.encode(to:)(void *a1)
{
  sub_20AA54548(0, &qword_267655450, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA540C4();
  sub_20AB86DC0();
  v9[15] = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v1)
  {
    type metadata accessor for SearchExposureEvent.Model(0);
    v9[14] = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA540C4()
{
  unint64_t result = qword_267655458;
  if (!qword_267655458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655458);
  }
  return result;
}

uint64_t SearchExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v25 = sub_20AB85FE0();
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_20AB85FC0();
  uint64_t v24 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v26 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA54548(0, &qword_267655460, MEMORY[0x263F8E040]);
  uint64_t v29 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = type metadata accessor for SearchExposureEvent.Model(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA540C4();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  char v31 = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  uint64_t v16 = v26;
  sub_20AB86B80();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v20 = (uint64_t)v13;
  v17(v13, v16, v28);
  char v30 = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v29);
  uint64_t v18 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v20 + *(int *)(v21 + 20), v5, v14);
  sub_20AA545AC(v18, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AA54610(v18);
}

void sub_20AA54548(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA540C4();
    unint64_t v7 = a3(a1, &type metadata for SearchExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA545AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA54610(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA5466C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA54684(void *a1)
{
  return SearchExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA5469C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534A0, MEMORY[0x263F24D18], (uint64_t)qword_267655408, a1);
}

uint64_t sub_20AA546D4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534A8, MEMORY[0x263F24DD8], (uint64_t)qword_267655420, a1);
}

uint64_t sub_20AA5470C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534B0, MEMORY[0x263F24DE8], (uint64_t)qword_267655438, a1);
}

uint64_t sub_20AA54744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20A97C0F4();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchExposureEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_20AA549E8(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54, (uint64_t (*)(void))sub_20A97C0F4);
}

uint64_t destroy for SearchExposureEvent(uint64_t a1, uint64_t a2)
{
  return sub_20AA54B28(a1, a2, (uint64_t (*)(void))sub_20A97BF54, (uint64_t (*)(void))sub_20A97C0F4);
}

uint64_t initializeWithCopy for SearchExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA54C10(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54, (uint64_t (*)(void))sub_20A97C0F4);
}

uint64_t assignWithCopy for SearchExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA54D00(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54, (uint64_t (*)(void))sub_20A97C0F4);
}

uint64_t initializeWithTake for SearchExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA54DF0(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54, (uint64_t (*)(void))sub_20A97C0F4);
}

uint64_t assignWithTake for SearchExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA54EE0(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54, (uint64_t (*)(void))sub_20A97C0F4);
}

uint64_t getEnumTagSinglePayload for SearchExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA54924);
}

uint64_t sub_20AA54924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54, (uint64_t (*)(void))sub_20A97C0F4);
}

uint64_t storeEnumTagSinglePayload for SearchExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA54964);
}

uint64_t sub_20AA54964(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A97BF54, (uint64_t (*)(void))sub_20A97C0F4);
}

uint64_t sub_20AA54990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA55270(a1, a2, a3, (uint64_t (*)(uint64_t))sub_20A97BF54, (uint64_t (*)(uint64_t))sub_20A97C0F4);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchExposureEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_20AA549E8(a1, a2, a3, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

uint64_t *sub_20AA549E8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  int v7 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v7 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a4(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = a5(0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for SearchExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  return sub_20AA54B28(a1, a2, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

uint64_t sub_20AA54B28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v7 = a3(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t v9 = a4(0);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

uint64_t initializeWithCopy for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA54C10(a1, a2, a3, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

uint64_t sub_20AA54C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v9 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t assignWithCopy for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA54D00(a1, a2, a3, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

uint64_t sub_20AA54D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v9 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(a1, a2, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA54DF0(a1, a2, a3, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

uint64_t sub_20AA54DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v9 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA54EE0(a1, a2, a3, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

uint64_t sub_20AA54EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v9 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(a1, a2, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = a5(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA54FB8);
}

uint64_t sub_20AA54FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v9 = a4(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == a2)
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v11(a1, a2, v9);
  }
  else
  {
    uint64_t v13 = a5(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + *(int *)(a3 + 20);
    return v14(v16, a2, v15);
  }
}

uint64_t storeEnumTagSinglePayload for SearchExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA550FC);
}

uint64_t sub_20AA550FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v11 = a5(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a3)
  {
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    return v13(a1, a2, a2, v11);
  }
  else
  {
    uint64_t v15 = a6(0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + *(int *)(a4 + 20);
    return v16(v18, a2, a2, v17);
  }
}

uint64_t sub_20AA55244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA55270(a1, a2, a3, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

uint64_t sub_20AA55270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result = a4(319);
  if (v7 <= 0x3F)
  {
    uint64_t result = a5(319);
    if (v8 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA55410);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchExposureEvent.Model.CodingKeys()
{
  return &type metadata for SearchExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AA5544C()
{
  unint64_t result = qword_267655488;
  if (!qword_267655488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655488);
  }
  return result;
}

unint64_t sub_20AA554A4()
{
  unint64_t result = qword_267655490;
  if (!qword_267655490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655490);
  }
  return result;
}

unint64_t sub_20AA554FC()
{
  unint64_t result = qword_267655498;
  if (!qword_267655498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655498);
  }
  return result;
}

uint64_t sub_20AA55550(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static ScrollStartData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

float ScrollStartData.scrollYPosition.getter()
{
  return *(float *)v0;
}

void ScrollStartData.scrollYPosition.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*ScrollStartData.scrollYPosition.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ScrollStartData __swiftcall ScrollStartData.init(scrollYPosition:)(StocksAnalytics::ScrollStartData scrollYPosition)
{
  v1->scrollYPosition = scrollYPosition.scrollYPosition;
  return scrollYPosition;
}

uint64_t sub_20AA5569C()
{
  return 0x50596C6C6F726373;
}

uint64_t sub_20AA556C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x50596C6C6F726373 && a2 == 0xEF6E6F697469736FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA5577C(uint64_t a1)
{
  unint64_t v2 = sub_20AA5593C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA557B8(uint64_t a1)
{
  unint64_t v2 = sub_20AA5593C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ScrollStartData.encode(to:)(void *a1)
{
  sub_20AA55B18(0, &qword_2676554A0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA5593C();
  sub_20AB86DC0();
  sub_20AB86C40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA5593C()
{
  unint64_t result = qword_2676554A8;
  if (!qword_2676554A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676554A8);
  }
  return result;
}

uint64_t ScrollStartData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_20AA55B18(0, &qword_2676554B0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA5593C();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AB86B70();
    int v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA55B18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA5593C();
    unint64_t v7 = a3(a1, &type metadata for ScrollStartData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA55B84@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return ScrollStartData.init(from:)(a1, a2);
}

uint64_t sub_20AA55B9C(void *a1)
{
  sub_20AA55B18(0, &qword_2676554A0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA5593C();
  sub_20AB86DC0();
  sub_20AB86C40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ScrollStartData()
{
  return &type metadata for ScrollStartData;
}

unsigned char *storeEnumTagSinglePayload for ScrollStartData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA55D90);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollStartData.CodingKeys()
{
  return &type metadata for ScrollStartData.CodingKeys;
}

unint64_t sub_20AA55DCC()
{
  unint64_t result = qword_2676554B8;
  if (!qword_2676554B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676554B8);
  }
  return result;
}

unint64_t sub_20AA55E24()
{
  unint64_t result = qword_2676554C0;
  if (!qword_2676554C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676554C0);
  }
  return result;
}

unint64_t sub_20AA55E7C()
{
  unint64_t result = qword_2676554C8;
  if (!qword_2676554C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676554C8);
  }
  return result;
}

uint64_t static VideoAdData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t VideoAdData.duration.getter()
{
  return *v0;
}

uint64_t VideoAdData.duration.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*VideoAdData.duration.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdData.prerollUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VideoAdData.prerollUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*VideoAdData.prerollUrl.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdData.init(duration:prerollUrl:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_20AA55F9C()
{
  if (*v0) {
    return 0x556C6C6F72657270;
  }
  else {
    return 0x6E6F697461727564;
  }
}

uint64_t sub_20AA55FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA56834(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA56004(uint64_t a1)
{
  unint64_t v2 = sub_20AA56204();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA56040(uint64_t a1)
{
  unint64_t v2 = sub_20AA56204();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VideoAdData.encode(to:)(void *a1)
{
  sub_20AA56410(0, &qword_2676554D0, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v11 - v7;
  uint64_t v9 = *(void *)(v1 + 8);
  v11[0] = *(void *)(v1 + 16);
  v11[1] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA56204();
  sub_20AB86DC0();
  char v13 = 0;
  sub_20AB86C60();
  if (!v2)
  {
    char v12 = 1;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AA56204()
{
  unint64_t result = qword_2676554D8;
  if (!qword_2676554D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676554D8);
  }
  return result;
}

uint64_t VideoAdData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA56410(0, &qword_2676554E0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA56204();
  sub_20AB86DA0();
  if (!v2)
  {
    char v17 = 0;
    int v10 = sub_20AB86B90();
    char v16 = 1;
    uint64_t v12 = sub_20AB86B40();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_DWORD *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA56410(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA56204();
    unint64_t v7 = a3(a1, &type metadata for VideoAdData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA56478()
{
  unint64_t result = qword_2676554E8;
  if (!qword_2676554E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676554E8);
  }
  return result;
}

unint64_t sub_20AA564D0()
{
  unint64_t result = qword_2676554F0;
  if (!qword_2676554F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676554F0);
  }
  return result;
}

uint64_t sub_20AA56524@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdData.init(from:)(a1, a2);
}

uint64_t sub_20AA5653C(void *a1)
{
  return VideoAdData.encode(to:)(a1);
}

uint64_t sub_20AA56558(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VideoAdData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VideoAdData(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for VideoAdData()
{
  return &type metadata for VideoAdData;
}

unsigned char *storeEnumTagSinglePayload for VideoAdData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA566F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdData.CodingKeys()
{
  return &type metadata for VideoAdData.CodingKeys;
}

unint64_t sub_20AA56730()
{
  unint64_t result = qword_2676554F8;
  if (!qword_2676554F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676554F8);
  }
  return result;
}

unint64_t sub_20AA56788()
{
  unint64_t result = qword_267655500;
  if (!qword_267655500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655500);
  }
  return result;
}

unint64_t sub_20AA567E0()
{
  unint64_t result = qword_267655508;
  if (!qword_267655508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655508);
  }
  return result;
}

uint64_t sub_20AA56834(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x556C6C6F72657270 && a2 == 0xEA00000000006C72)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AA56934(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267655510, MEMORY[0x263F24D10]);
}

uint64_t static HeartbeatEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534B8, MEMORY[0x263F24D18], (uint64_t)qword_267655510, a1);
}

uint64_t static HeartbeatEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA5699C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267655528, MEMORY[0x263F24DC0]);
}

uint64_t static HeartbeatEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534C0, MEMORY[0x263F24DD8], (uint64_t)qword_267655528, a1);
}

uint64_t sub_20AA569FC()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655540);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655540);
  return sub_20AB85D30();
}

uint64_t static HeartbeatEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534C8, MEMORY[0x263F24DE8], (uint64_t)qword_267655540, a1);
}

uint64_t HeartbeatEvent.heartbeatData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_20AA56AE8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

void sub_20AA56AE8()
{
  if (!qword_267655558)
  {
    type metadata accessor for HeartbeatData();
    sub_20AA56B98(&qword_267655560);
    sub_20AA56B98(&qword_26AC51B90);
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267655558);
    }
  }
}

uint64_t sub_20AA56B98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HeartbeatData();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HeartbeatEvent.heartbeatData.setter(uint64_t a1)
{
  sub_20AA56AE8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*HeartbeatEvent.heartbeatData.modify())()
{
  return nullsub_1;
}

uint64_t HeartbeatEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20AA56AE8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t HeartbeatEvent.Model.heartbeatData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA56CE4(v1, a1);
}

uint64_t sub_20AA56CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeartbeatData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t HeartbeatEvent.Model.init(heartbeatData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20AA573A4(a1, a2, (uint64_t (*)(void))type metadata accessor for HeartbeatData);
}

uint64_t sub_20AA56D78()
{
  return 0x6165627472616568;
}

uint64_t sub_20AA56D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6165627472616568 && a2 == 0xED00006174614474)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA56E58(uint64_t a1)
{
  unint64_t v2 = sub_20AA57044();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA56E94(uint64_t a1)
{
  unint64_t v2 = sub_20AA57044();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HeartbeatEvent.Model.encode(to:)(void *a1)
{
  sub_20AA57320(0, &qword_26AC51E78, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA57044();
  sub_20AB86DC0();
  type metadata accessor for HeartbeatData();
  sub_20AA56B98(&qword_26AC51B90);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA57044()
{
  unint64_t result = qword_26AC51C38;
  if (!qword_26AC51C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51C38);
  }
  return result;
}

uint64_t HeartbeatEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for HeartbeatData();
  MEMORY[0x270FA5388](v4);
  uint64_t v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA57320(0, &qword_267655568, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v17 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for HeartbeatEvent.Model(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA57044();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v13 = v17;
    sub_20AA56B98(&qword_267655560);
    uint64_t v14 = (uint64_t)v18;
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    sub_20AA573A4(v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for HeartbeatData);
    sub_20AA573A4((uint64_t)v12, v16, type metadata accessor for HeartbeatEvent.Model);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA57320(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA57044();
    unint64_t v7 = a3(a1, &type metadata for HeartbeatEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for HeartbeatEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_26AC51C58);
}

uint64_t sub_20AA573A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20AA5740C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HeartbeatEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA57424(void *a1)
{
  sub_20AA57320(0, &qword_26AC51E78, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA57044();
  sub_20AB86DC0();
  type metadata accessor for HeartbeatData();
  sub_20AA56B98(&qword_26AC51B90);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20AA57598@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534B8, MEMORY[0x263F24D18], (uint64_t)qword_267655510, a1);
}

uint64_t sub_20AA575D0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534C0, MEMORY[0x263F24DD8], (uint64_t)qword_267655528, a1);
}

uint64_t sub_20AA57608@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534C8, MEMORY[0x263F24DE8], (uint64_t)qword_267655540, a1);
}

uint64_t sub_20AA57640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20AA56AE8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  sub_20AA56AE8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for HeartbeatEvent(uint64_t a1)
{
  sub_20AA56AE8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  sub_20AA56AE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  sub_20AA56AE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  sub_20AA56AE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HeartbeatEvent(uint64_t a1, uint64_t a2)
{
  sub_20AA56AE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA57928);
}

uint64_t sub_20AA57928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_1(a1, a2, a3, (uint64_t (*)(void))sub_20AA56AE8);
}

uint64_t storeEnumTagSinglePayload for HeartbeatEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA57954);
}

uint64_t sub_20AA57954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_1(a1, a2, a3, a4, (uint64_t (*)(void))sub_20AA56AE8);
}

uint64_t type metadata accessor for HeartbeatEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655570);
}

uint64_t sub_20AA5798C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA580D8(a1, a2, a3, (uint64_t (*)(uint64_t))sub_20AA56AE8);
}

uint64_t *initializeBufferWithCopyOfBuffer for HeartbeatEvent.Model(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for HeartbeatData();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v6 = (int *)v4;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(v4 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB851C0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = v6[6];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v6[7];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = v6[8];
    uint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for HeartbeatEvent.Model(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for HeartbeatData() + 20);
  uint64_t v3 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HeartbeatEvent.Model(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  int v5 = (int *)type metadata accessor for HeartbeatData();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20AB851C0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v5[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = v5[8];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HeartbeatEvent.Model(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for HeartbeatData();
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_20AB851C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  uint64_t v9 = v4[6];
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v4[7];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v4[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for HeartbeatEvent.Model(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t v4 = (int *)type metadata accessor for HeartbeatData();
  uint64_t v5 = v4[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_20AB851C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  *(_OWORD *)((char *)a1 + v4[6]) = *(_OWORD *)((char *)a2 + v4[6]);
  *(_OWORD *)((char *)a1 + v4[7]) = *(_OWORD *)((char *)a2 + v4[7]);
  *(_OWORD *)((char *)a1 + v4[8]) = *(_OWORD *)((char *)a2 + v4[8]);
  return a1;
}

void *assignWithTake for HeartbeatEvent.Model(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for HeartbeatData();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20AB851C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = v5[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = v5[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = v5[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA57F98);
}

uint64_t sub_20AA57F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_1(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for HeartbeatData);
}

uint64_t __swift_get_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for HeartbeatEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA58034);
}

uint64_t sub_20AA58034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_1(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for HeartbeatData);
}

uint64_t __swift_store_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t sub_20AA580C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AA580D8(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for HeartbeatData);
}

uint64_t sub_20AA580D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HeartbeatEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA58204);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartbeatEvent.Model.CodingKeys()
{
  return &type metadata for HeartbeatEvent.Model.CodingKeys;
}

unint64_t sub_20AA58240()
{
  unint64_t result = qword_267655580;
  if (!qword_267655580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655580);
  }
  return result;
}

unint64_t sub_20AA58298()
{
  unint64_t result = qword_26AC51C48;
  if (!qword_26AC51C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51C48);
  }
  return result;
}

unint64_t sub_20AA582F0()
{
  unint64_t result = qword_26AC51C40;
  if (!qword_26AC51C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51C40);
  }
  return result;
}

uint64_t sub_20AA58344()
{
  uint64_t v0 = sub_20AB859A0();
  __swift_allocate_value_buffer(v0, qword_267655588);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_267655588);
  *(void *)uint64_t v1 = 0x7364612E6D6F63;
  *(void *)(v1 + 8) = 0xE700000000000000;
  *(void *)(v1 + 16) = 3;
  *(unsigned char *)(v1 + 24) = 0;
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v2();
}

uint64_t static VideoAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534D0, MEMORY[0x263F24D18], (uint64_t)qword_267655588, a1);
}

uint64_t static VideoAdImpressionEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA58430()
{
  uint64_t v0 = sub_20AB85C70();
  __swift_allocate_value_buffer(v0, qword_2676555A0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2676555A0);
  uint64_t v2 = *MEMORY[0x263F24DC0];
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static VideoAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534D8, MEMORY[0x263F24DD8], (uint64_t)qword_2676555A0, a1);
}

uint64_t sub_20AA584F0()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676555B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676555B8);
  return sub_20AB85D30();
}

uint64_t static VideoAdImpressionEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534E0, MEMORY[0x263F24DE8], (uint64_t)qword_2676555B8, a1);
}

uint64_t VideoAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t VideoAdImpressionEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*VideoAdImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 20);
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for VideoAdImpressionEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676555F0);
}

uint64_t VideoAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 20);
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 24);
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 24);
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 28);
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.videoAdData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 28);
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.videoAdData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 32);
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 32);
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adPlacementData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 36);
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 36);
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adFeedData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 40);
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA58F2C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t VideoAdImpressionEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent(0) + 40);
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdImpressionEvent.adGroupData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for VideoAdImpressionEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  uint64_t v14 = *MEMORY[0x263F24D30];
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);

  return v18(v16, v14, v17);
}

uint64_t VideoAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t VideoAdImpressionEvent.Model.adUserData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 20));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for VideoAdImpressionEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655600);
}

uint64_t VideoAdImpressionEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 28);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_DWORD *)a1 = *(_DWORD *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.adPlacementData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for VideoAdImpressionEvent.Model(0) + 32));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t VideoAdImpressionEvent.Model.adFeedData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for VideoAdImpressionEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t VideoAdImpressionEvent.Model.adGroupData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for VideoAdImpressionEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

__n128 VideoAdImpressionEvent.Model.init(eventData:adUserData:channelData:videoAdData:adPlacementData:adFeedData:adGroupData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __n128 *a3@<X2>, int *a4@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  __n128 v25 = *a3;
  unint64_t v12 = a3[1].n128_u64[0];
  unint64_t v13 = a3[1].n128_u64[1];
  unsigned __int8 v14 = a3[2].n128_u8[0];
  unsigned __int8 v15 = a3[2].n128_u8[1];
  int v16 = *a4;
  uint64_t v17 = *((void *)a4 + 1);
  uint64_t v28 = *a5;
  uint64_t v26 = *((void *)a4 + 2);
  uint64_t v27 = a5[1];
  char v29 = *a6;
  char v30 = *a7;
  uint64_t v18 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a8, a1, v18);
  uint64_t v19 = (int *)type metadata accessor for VideoAdImpressionEvent.Model(0);
  uint64_t v20 = (void *)(a8 + v19[5]);
  *uint64_t v20 = v10;
  v20[1] = v11;
  uint64_t v21 = (__n128 *)(a8 + v19[6]);
  __n128 result = v25;
  *uint64_t v21 = v25;
  v21[1].n128_u64[0] = v12;
  v21[1].n128_u64[1] = v13;
  v21[2].n128_u8[0] = v14;
  v21[2].n128_u8[1] = v15;
  uint64_t v23 = a8 + v19[7];
  *(_DWORD *)uint64_t v23 = v16;
  *(void *)(v23 + 8) = v17;
  *(void *)(v23 + 16) = v26;
  uint64_t v24 = (void *)(a8 + v19[8]);
  *uint64_t v24 = v28;
  v24[1] = v27;
  *(unsigned char *)(a8 + v19[9]) = v29;
  *(unsigned char *)(a8 + v19[10]) = v30;
  return result;
}

uint64_t sub_20AA59738()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x726573556461;
      goto LABEL_7;
    case 2:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 3:
      uint64_t result = 0x4464416F65646976;
      break;
    case 4:
      uint64_t result = 0x6D6563616C506461;
      break;
    case 5:
      uint64_t v2 = 0x646565466461;
LABEL_7:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 6:
      uint64_t result = 0x4470756F72476461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA59828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA5D2F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA59850(uint64_t a1)
{
  unint64_t v2 = sub_20AA59C1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA5988C(uint64_t a1)
{
  unint64_t v2 = sub_20AA59C1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VideoAdImpressionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA5A278(0, &qword_2676555D8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA59C1C();
  sub_20AB86DC0();
  LOBYTE(v28) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for VideoAdImpressionEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *(void *)&long long v28 = v13;
    *((void *)&v28 + 1) = v12;
    char v33 = 1;
    sub_20A99A454();
    sub_20AB86C50();
    unsigned __int8 v14 = (long long *)(v3 + v10[6]);
    long long v15 = *v14;
    uint64_t v16 = *((void *)v14 + 2);
    uint64_t v17 = *((void *)v14 + 3);
    char v18 = *((unsigned char *)v14 + 32);
    LOBYTE(v14) = *((unsigned char *)v14 + 33);
    long long v28 = v15;
    uint64_t v29 = v16;
    uint64_t v30 = v17;
    char v31 = v18;
    char v32 = (char)v14;
    char v33 = 2;
    sub_20A9862D4();
    sub_20AB86C50();
    uint64_t v19 = (int *)(v3 + v10[7]);
    int v20 = *v19;
    uint64_t v22 = *((void *)v19 + 1);
    uint64_t v21 = *((void *)v19 + 2);
    LODWORD(v28) = v20;
    *((void *)&v28 + 1) = v22;
    uint64_t v29 = v21;
    char v33 = 3;
    sub_20AA564D0();
    sub_20AB86C50();
    uint64_t v23 = (uint64_t *)(v3 + v10[8]);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    *(void *)&long long v28 = v25;
    *((void *)&v28 + 1) = v24;
    char v33 = 4;
    sub_20A99A9F4();
    sub_20AB86C50();
    LOBYTE(v28) = *(unsigned char *)(v3 + v10[9]);
    char v33 = 5;
    sub_20A99B0E4();
    sub_20AB86BE0();
    LOBYTE(v28) = *(unsigned char *)(v3 + v10[10]);
    char v33 = 6;
    sub_20A99B600();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA59C1C()
{
  unint64_t result = qword_2676555E0;
  if (!qword_2676555E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676555E0);
  }
  return result;
}

uint64_t VideoAdImpressionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v33 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA5A278(0, &qword_2676555E8, MEMORY[0x263F8E040]);
  uint64_t v34 = v6;
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = (int *)type metadata accessor for VideoAdImpressionEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA59C1C();
  uint64_t v35 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v32;
  uint64_t v29 = a1;
  uint64_t v13 = (uint64_t)v11;
  LOBYTE(v36) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  unsigned __int8 v14 = v33;
  uint64_t v15 = v34;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v13, v14, v4);
  char v41 = 1;
  sub_20A99A400();
  sub_20AB86B80();
  uint64_t v16 = *((void *)&v36 + 1);
  uint64_t v17 = (void *)(v13 + v9[5]);
  *uint64_t v17 = v36;
  v17[1] = v16;
  char v41 = 2;
  sub_20A986280();
  sub_20AB86B80();
  uint64_t v18 = v37;
  uint64_t v19 = v38;
  char v20 = v39;
  char v21 = v40;
  uint64_t v22 = v13 + v9[6];
  *(_OWORD *)uint64_t v22 = v36;
  *(void *)(v22 + 16) = v18;
  *(void *)(v22 + 24) = v19;
  *(unsigned char *)(v22 + 32) = v20;
  *(unsigned char *)(v22 + 33) = v21;
  char v41 = 3;
  sub_20AA56478();
  sub_20AB86B80();
  uint64_t v23 = *((void *)&v36 + 1);
  uint64_t v24 = v37;
  uint64_t v25 = v13 + v9[7];
  *(_DWORD *)uint64_t v25 = v36;
  *(void *)(v25 + 8) = v23;
  *(void *)(v25 + 16) = v24;
  char v41 = 4;
  sub_20A99A9A0();
  sub_20AB86B80();
  uint64_t v26 = *((void *)&v36 + 1);
  uint64_t v27 = (void *)(v13 + v9[8]);
  *uint64_t v27 = v36;
  v27[1] = v26;
  char v41 = 5;
  sub_20A99B090();
  sub_20AB86B10();
  *(unsigned char *)(v13 + v9[9]) = v36;
  char v41 = 6;
  sub_20A99B5AC();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v35, v15);
  *(unsigned char *)(v13 + v9[10]) = v36;
  sub_20AA5A2DC(v13, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return sub_20AA5A340(v13);
}

void sub_20AA5A278(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA59C1C();
    unint64_t v7 = a3(a1, &type metadata for VideoAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA5A2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA5A340(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA5A39C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA5A3B4(void *a1)
{
  return VideoAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA5A3CC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534D0, MEMORY[0x263F24D18], (uint64_t)qword_267655588, a1);
}

uint64_t sub_20AA5A404@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534D8, MEMORY[0x263F24DD8], (uint64_t)qword_2676555A0, a1);
}

uint64_t sub_20AA5A43C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534E0, MEMORY[0x263F24DE8], (uint64_t)qword_2676555B8, a1);
}

uint64_t sub_20AA5A474@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  uint64_t v15 = *MEMORY[0x263F24D30];
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);

  return v19(v17, v15, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    char v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for VideoAdImpressionEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t initializeWithCopy for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA5BCE4);
}

uint64_t sub_20AA5BCE4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_13;
  }
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_13;
  }
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_13;
  }
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_13;
  }
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[10];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for VideoAdImpressionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA5C0C4);
}

uint64_t sub_20AA5C0C4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA58F2C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  sub_20AA58F2C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_13;
  }
  sub_20AA58F2C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_13;
  }
  sub_20AA58F2C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_13;
  }
  sub_20AA58F2C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  sub_20AA58F2C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a4[10];

  return v22(v24, a2, a2, v23);
}

void sub_20AA5C49C()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA58F2C(319, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
    if (v1 <= 0x3F)
    {
      sub_20AA58F2C(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
      if (v2 <= 0x3F)
      {
        sub_20AA58F2C(319, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
        if (v3 <= 0x3F)
        {
          sub_20AA58F2C(319, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
          if (v4 <= 0x3F)
          {
            sub_20AA58F2C(319, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
            if (v5 <= 0x3F)
            {
              sub_20AA58F2C(319, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for VideoAdImpressionEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = *((void *)v14 + 3);
    *((void *)v13 + 2) = *((void *)v14 + 2);
    *((void *)v13 + 3) = v16;
    *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)a1 + v17;
    uint64_t v20 = (char *)a2 + v17;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    uint64_t v21 = *((void *)v20 + 2);
    *((void *)v19 + 1) = *((void *)v20 + 1);
    *((void *)v19 + 2) = v21;
    uint64_t v22 = (void *)((char *)a1 + v18);
    uint64_t v23 = (void *)((char *)a2 + v18);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for VideoAdImpressionEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VideoAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v14;
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  uint64_t v20 = *(void *)(v19 + 16);
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(void *)(v18 + 16) = v20;
  uint64_t v21 = (void *)(a1 + v17);
  uint64_t v22 = (void *)(a2 + v17);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VideoAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
  *(unsigned char *)(v11 + 33) = *(unsigned char *)(v12 + 33);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for VideoAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 32) = *(_WORD *)(v9 + 32);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = (long long *)(a2 + v11);
  long long v15 = *v14;
  *(void *)(v13 + 16) = *((void *)v14 + 2);
  *(_OWORD *)uint64_t v13 = v15;
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v16 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  return a1;
}

uint64_t assignWithTake for VideoAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(unsigned char *)(v13 + 33) = *(unsigned char *)(v14 + 33);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  uint64_t v21 = *(void *)(v19 + 8);
  uint64_t v20 = *(void *)(v19 + 16);
  *(void *)(v18 + 8) = v21;
  *(void *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdImpressionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA5CE94);
}

uint64_t sub_20AA5CE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for VideoAdImpressionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA5CF6C);
}

uint64_t sub_20AA5CF6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA5D02C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VideoAdImpressionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA5D1B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for VideoAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_20AA5D1F4()
{
  unint64_t result = qword_267655610;
  if (!qword_267655610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655610);
  }
  return result;
}

unint64_t sub_20AA5D24C()
{
  unint64_t result = qword_267655618;
  if (!qword_267655618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655618);
  }
  return result;
}

unint64_t sub_20AA5D2A4()
{
  unint64_t result = qword_267655620;
  if (!qword_267655620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655620);
  }
  return result;
}

uint64_t sub_20AA5D2F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4464416F65646976 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t static PurchaseSessionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t PurchaseSessionData.purchaseSessionID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseSessionData.purchaseSessionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PurchaseSessionData.purchaseSessionID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::PurchaseSessionData __swiftcall PurchaseSessionData.init(purchaseSessionID:)(StocksAnalytics::PurchaseSessionData purchaseSessionID)
{
  *uint64_t v1 = purchaseSessionID;
  return purchaseSessionID;
}

unint64_t sub_20AA5D6F0()
{
  return 0xD000000000000011;
}

uint64_t sub_20AA5D70C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA5DE90(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AA5D738(uint64_t a1)
{
  unint64_t v2 = sub_20AA5D8FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA5D774(uint64_t a1)
{
  unint64_t v2 = sub_20AA5D8FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PurchaseSessionData.encode(to:)(void *a1)
{
  sub_20AA5DAD4(0, &qword_26AC518C8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA5D8FC();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA5D8FC()
{
  unint64_t result = qword_26AC4FED0;
  if (!qword_26AC4FED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FED0);
  }
  return result;
}

uint64_t PurchaseSessionData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AA5DAD4(0, &qword_267655628, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA5D8FC();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86B40();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA5DAD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA5D8FC();
    unint64_t v7 = a3(a1, &type metadata for PurchaseSessionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA5DB40@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PurchaseSessionData.init(from:)(a1, a2);
}

uint64_t sub_20AA5DB58(void *a1)
{
  sub_20AA5DAD4(0, &qword_26AC518C8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA5D8FC();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for PurchaseSessionData()
{
  return &type metadata for PurchaseSessionData;
}

unsigned char *storeEnumTagSinglePayload for PurchaseSessionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA5DD50);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseSessionData.CodingKeys()
{
  return &type metadata for PurchaseSessionData.CodingKeys;
}

unint64_t sub_20AA5DD8C()
{
  unint64_t result = qword_267655630;
  if (!qword_267655630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655630);
  }
  return result;
}

unint64_t sub_20AA5DDE4()
{
  unint64_t result = qword_26AC4FEE0;
  if (!qword_26AC4FEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FEE0);
  }
  return result;
}

unint64_t sub_20AA5DE3C()
{
  unint64_t result = qword_26AC4FED8;
  if (!qword_26AC4FED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FED8);
  }
  return result;
}

uint64_t sub_20AA5DE90(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA8090)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_20AA5DF18()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20AA5DF78();
    return swift_release();
  }
  return result;
}

uint64_t sub_20AA5DF78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20AB85BE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85BB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20AB86090();
  if (sub_20AB86080())
  {
    uint64_t v10 = sub_20AB85460();
  }
  else if (NFSeedBuild())
  {
    uint64_t v10 = sub_20AB85440();
  }
  else
  {
    uint64_t v10 = sub_20AB85450();
  }
  uint64_t v11 = v10;
  int64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    uint64_t v21 = v9;
    uint64_t v22 = v7;
    uint64_t v23 = v6;
    uint64_t v24 = v0;
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_20AA5F5FC(0, v12, 0);
    uint64_t v13 = v25;
    uint64_t v14 = v11 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_20AB85BD0();
      uint64_t v25 = v13;
      unint64_t v16 = *(void *)(v13 + 16);
      unint64_t v15 = *(void *)(v13 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_20AA5F5FC(v15 > 1, v16 + 1, 1);
        uint64_t v13 = v25;
      }
      v14 += 16;
      *(void *)(v13 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v13+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v16, v5, v2);
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    uint64_t v6 = v23;
    uint64_t v1 = v24;
    uint64_t v9 = v21;
    uint64_t v7 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x263F8EE78];
  }
  uint64_t v17 = sub_20AA5F9E0(v13);
  swift_bridgeObjectRelease();
  *uint64_t v9 = v17;
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F24D90], v6);
  uint64_t v18 = v1 + OBJC_IVAR____TtC15StocksAnalytics25PrivacyValidationProvider_privacyValidation;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 40))(v18, v9, v6);
  return swift_endAccess();
}

uint64_t sub_20AA5E268()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics25PrivacyValidationProvider_privacyValidation;
  uint64_t v2 = sub_20AB85BB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_20AA5E310@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15StocksAnalytics25PrivacyValidationProvider_privacyValidation;
  swift_beginAccess();
  uint64_t v4 = sub_20AB85BB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DenylistDescriptor.debugItem.getter()
{
  uint64_t v0 = sub_20AB86480();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20AB85BC0();
  *uint64_t v3 = 0;
  v3[1] = 0;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D228], v0);
  return sub_20AB864D0();
}

uint64_t String.denylistDescriptorValueDebugItem.getter()
{
  uint64_t v0 = sub_20AB86480();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (uint64_t *)((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v2 = 0;
  v2[1] = 0;
  (*(void (**)(void *, void))(v3 + 104))(v2, *MEMORY[0x263F7D228]);
  swift_bridgeObjectRetain();
  return sub_20AB864D0();
}

uint64_t sub_20AA5E574()
{
  return type metadata accessor for PrivacyValidationProvider();
}

uint64_t type metadata accessor for PrivacyValidationProvider()
{
  uint64_t result = qword_26AC50D00;
  if (!qword_26AC50D00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20AA5E5C8()
{
  uint64_t result = sub_20AB85BB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20AA5E664(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20AB85BE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_20AA5FB68(&qword_26AC4E6E8);
  swift_bridgeObjectRetain();
  uint64_t v34 = a2;
  uint64_t v11 = sub_20AB86680();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v33 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v12;
    uint64_t v28 = v7;
    unint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v32 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v27[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v32 * v13;
      unint64_t v20 = *(void *)(v10 + 48) + v32 * v13;
      uint64_t v21 = v14;
      v14(v9, v20, v6);
      sub_20AA5FB68(&qword_267655638);
      char v22 = sub_20AB866C0();
      uint64_t v23 = *v17;
      (*v17)(v9, v6);
      if (v22) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v31;
      uint64_t v14 = v21;
      uint64_t v10 = v18;
      if (((*(void *)(v33 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = v34;
    v14(v9, v34, v6);
    uint64_t v35 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_20AA5ED44((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_20AA5E960()
{
  unint64_t v1 = v0;
  uint64_t v42 = sub_20AB85BE0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  char v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_20AA5FBAC();
  uint64_t v5 = sub_20AB86970();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_20AA5FB68(&qword_26AC4E6E8);
      uint64_t result = sub_20AB86680();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v6;
  return result;
}

uint64_t sub_20AA5ED44(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_20AB85BE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_20AA5E960();
  }
  else
  {
    if (v11 > v10)
    {
      sub_20AA5EFBC();
      goto LABEL_12;
    }
    sub_20AA5F264();
  }
  uint64_t v12 = *v3;
  sub_20AA5FB68(&qword_26AC4E6E8);
  uint64_t v13 = sub_20AB86680();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_20AA5FB68(&qword_267655638);
      char v21 = sub_20AB866C0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_20AB86CE0();
  __break(1u);
  return result;
}

void *sub_20AA5EFBC()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_20AB85BE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA5FBAC();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_20AB86960();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  uint64_t v23 = v1;
  uint64_t v24 = (const void *)(v6 + 56);
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, v24, 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v19 >= v25) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v24 + v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_28;
      }
      unint64_t v20 = *((void *)v24 + v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v25) {
          goto LABEL_28;
        }
        unint64_t v20 = *((void *)v24 + v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_12:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v18, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v18, v5, v2);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v25)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    unint64_t v1 = v23;
    goto LABEL_30;
  }
  unint64_t v20 = *((void *)v24 + v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_28;
    }
    unint64_t v20 = *((void *)v24 + v12);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_20AA5F264()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_20AB85BE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_20AA5FBAC();
  uint64_t v7 = sub_20AB86970();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_20AA5FB68(&qword_26AC4E6E8);
    uint64_t result = sub_20AB86680();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_20AA5F5FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20AA5F63C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20AA5F61C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20AA5F878(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20AA5F63C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_20AA5FC2C();
  uint64_t v10 = *(void *)(sub_20AB85BE0() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_20AB85BE0() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  unint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  unint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_20AB86AB0();
  __break(1u);
  return result;
}

uint64_t sub_20AA5F878(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20AA5FC84();
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20AB86AB0();
  __break(1u);
  return result;
}

uint64_t sub_20AA5F9E0(uint64_t a1)
{
  uint64_t v2 = sub_20AB85BE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_20AA5FB68(&qword_26AC4E6E8);
  uint64_t result = sub_20AB867B0();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_20AA5E664((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_20AA5FB68(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20AB85BE0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20AA5FBAC()
{
  if (!qword_267655640)
  {
    sub_20AB85BE0();
    sub_20AA5FB68(&qword_26AC4E6E8);
    unint64_t v0 = sub_20AB86980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267655640);
    }
  }
}

void sub_20AA5FC2C()
{
  if (!qword_267655648)
  {
    sub_20AB85BE0();
    unint64_t v0 = sub_20AB86C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267655648);
    }
  }
}

void sub_20AA5FC84()
{
  if (!qword_26AC4E2E8)
  {
    unint64_t v0 = sub_20AB86C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E2E8);
    }
  }
}

uint64_t sub_20AA5FCDC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267655650, MEMORY[0x263F24D10]);
}

uint64_t static SearchResultsReturnedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534E8, MEMORY[0x263F24D18], (uint64_t)qword_267655650, a1);
}

uint64_t static SearchResultsReturnedEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA5FD44(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267655668, MEMORY[0x263F24DC8]);
}

uint64_t static SearchResultsReturnedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534F0, MEMORY[0x263F24DD8], (uint64_t)qword_267655668, a1);
}

uint64_t sub_20AA5FDA4()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655680);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655680);
  return sub_20AB85D30();
}

uint64_t static SearchResultsReturnedEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676534F8, MEMORY[0x263F24DE8], (uint64_t)qword_267655680, a1);
}

uint64_t SearchResultsReturnedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SearchResultsReturnedEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SearchResultsReturnedEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 20);
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchResultsReturnedEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676556B0);
}

uint64_t SearchResultsReturnedEvent.searchData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 20);
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultsReturnedEvent.searchData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.searchResultsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 24);
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA60140(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t SearchResultsReturnedEvent.searchResultsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent(0) + 24);
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultsReturnedEvent.searchResultsData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultsReturnedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for SearchResultsReturnedEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t SearchResultsReturnedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SearchResultsReturnedEvent.Model.searchData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent.Model(0) + 20));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchResultsReturnedEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676556C0);
}

uint64_t SearchResultsReturnedEvent.Model.searchResultsData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for SearchResultsReturnedEvent.Model(0) + 24));

  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsReturnedEvent.Model.init(eventData:searchData:searchResultsData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v8 = *a3;
  uint64_t v9 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a4, a1, v9);
  uint64_t result = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  uint64_t v11 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v11 = v6;
  v11[1] = v7;
  *(void *)(a4 + *(int *)(result + 24)) = v8;
  return result;
}

uint64_t sub_20AA6058C()
{
  unint64_t v1 = 0x6144686372616573;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AA605F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA626AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA6061C(uint64_t a1)
{
  unint64_t v2 = sub_20AA608AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA60658(uint64_t a1)
{
  unint64_t v2 = sub_20AA608AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchResultsReturnedEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA60CD4(0, &qword_267655698, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA608AC();
  sub_20AB86DC0();
  LOBYTE(v17) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + *(int *)(v10 + 20));
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v17 = v13;
    uint64_t v18 = v12;
    char v16 = 1;
    sub_20A9A3828();
    sub_20AB86C50();
    uint64_t v17 = *(void *)(v3 + *(int *)(v10 + 24));
    char v16 = 2;
    sub_20A9A3D44();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA608AC()
{
  unint64_t result = qword_2676556A0;
  if (!qword_2676556A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676556A0);
  }
  return result;
}

uint64_t SearchResultsReturnedEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v25 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA60CD4(0, &qword_2676556A8, MEMORY[0x263F8E040]);
  uint64_t v26 = v6;
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA608AC();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v23;
  uint64_t v12 = v24;
  uint64_t v21 = v9;
  LOBYTE(v27) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  sub_20AB86B80();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v20 = v11;
  v14(v11, v25, v4);
  char v29 = 1;
  sub_20A9A37D4();
  sub_20AB86B80();
  uint64_t v15 = v28;
  char v16 = &v20[*(int *)(v21 + 20)];
  *(void *)char v16 = v27;
  *((void *)v16 + 1) = v15;
  char v29 = 2;
  sub_20A9A3CF0();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v26);
  uint64_t v17 = (uint64_t)v20;
  *(void *)&v20[*(int *)(v21 + 24)] = v27;
  sub_20AA60D38(v17, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AA60D9C(v17);
}

void sub_20AA60CD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA608AC();
    unint64_t v7 = a3(a1, &type metadata for SearchResultsReturnedEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA60D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA60D9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchResultsReturnedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA60DF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchResultsReturnedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA60E10(void *a1)
{
  return SearchResultsReturnedEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA60E28@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534E8, MEMORY[0x263F24D18], (uint64_t)qword_267655650, a1);
}

uint64_t sub_20AA60E60@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534F0, MEMORY[0x263F24DD8], (uint64_t)qword_267655668, a1);
}

uint64_t sub_20AA60E98@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676534F8, MEMORY[0x263F24DE8], (uint64_t)qword_267655680, a1);
}

uint64_t sub_20AA60ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultsReturnedEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA61964);
}

uint64_t sub_20AA61964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for SearchResultsReturnedEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA61B34);
}

uint64_t sub_20AA61B34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA60140(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  sub_20AA60140(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_20AA61CFC()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA60140(319, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
    if (v1 <= 0x3F)
    {
      sub_20AA60140(319, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultsReturnedEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchResultsReturnedEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA62264);
}

uint64_t sub_20AA62264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SearchResultsReturnedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA6233C);
}

uint64_t sub_20AA6233C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA623FC()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchResultsReturnedEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA6256CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsReturnedEvent.Model.CodingKeys()
{
  return &type metadata for SearchResultsReturnedEvent.Model.CodingKeys;
}

unint64_t sub_20AA625A8()
{
  unint64_t result = qword_2676556D0;
  if (!qword_2676556D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676556D0);
  }
  return result;
}

unint64_t sub_20AA62600()
{
  unint64_t result = qword_2676556D8;
  if (!qword_2676556D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676556D8);
  }
  return result;
}

unint64_t sub_20AA62658()
{
  unint64_t result = qword_2676556E0;
  if (!qword_2676556E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676556E0);
  }
  return result;
}

uint64_t sub_20AA626AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7400)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20AA62818(uint64_t a1)
{
  uint64_t v35 = sub_20AB86410();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v33 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_20AB860E0();
  uint64_t v52 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  unint64_t v43 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20AB863B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB86120();
  sub_20AB85800();
  sub_20AB86330();
  swift_release();
  unsigned int v51 = *MEMORY[0x263F7D010];
  uint64_t v8 = *(void (**)(char *))(v5 + 104);
  v8(v7);
  sub_20AB86070();
  swift_release();
  swift_release();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  sub_20AB86120();
  sub_20AB85B40();
  sub_20AB86330();
  swift_release();
  sub_20AB86060();
  swift_release();
  unsigned int v50 = *MEMORY[0x263F7D000];
  v8(v7);
  sub_20AB86070();
  swift_release();
  swift_release();
  v9(v7, v4);
  sub_20AB86120();
  sub_20AB85950();
  swift_retain();
  sub_20AB86330();
  swift_release();
  swift_release();
  uint64_t v10 = v51;
  ((void (*)(char *, void, uint64_t))v8)(v7, v51, v4);
  uint64_t v46 = v5 + 104;
  uint64_t v44 = v8;
  sub_20AB86070();
  swift_release();
  swift_release();
  uint64_t v47 = v9;
  uint64_t v45 = v5 + 8;
  v9(v7, v4);
  sub_20AB86120();
  sub_20AB86340();
  swift_release();
  ((void (*)(char *, uint64_t, uint64_t))v8)(v7, v10, v4);
  sub_20AB86070();
  swift_release();
  swift_release();
  v9(v7, v4);
  uint64_t v11 = a1;
  sub_20AB86130();
  type metadata accessor for FlushAnalyticsBatchesStartupTask();
  sub_20AB86330();
  swift_release();
  swift_release();
  sub_20AB86140();
  __swift_project_boxed_opaque_existential_1(v53, v54);
  sub_20AB86300();
  unsigned int v49 = *MEMORY[0x263F7CDE0];
  uint64_t v12 = v52;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 104);
  uint64_t v39 = v52 + 104;
  int64_t v40 = v13;
  uint64_t v14 = v43;
  uint64_t v15 = v48;
  ((void (*)(char *))v13)(v43);
  sub_20AB86390();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v52 = v12 + 8;
  uint64_t v38 = v16;
  v16(v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_20AB86130();
  swift_retain();
  sub_20AB86340();
  swift_release();
  swift_release();
  uint64_t v17 = v34;
  uint64_t v18 = v33;
  uint64_t v19 = v35;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, *MEMORY[0x263F7D040], v35);
  sub_20AB86040();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v19);
  sub_20AB86120();
  sub_20AB85F90();
  sub_20AB86330();
  swift_release();
  uint64_t v20 = v44;
  ((void (*)(char *, void, uint64_t))v44)(v7, v50, v4);
  sub_20AB86070();
  swift_release();
  swift_release();
  uint64_t v21 = v47;
  v47(v7, v4);
  sub_20AB86120();
  sub_20AA65BE0(0, &qword_26AC50BD8);
  sub_20AB86340();
  swift_release();
  swift_release();
  sub_20AB86120();
  sub_20AA65BE0(0, &qword_26AC4E080);
  sub_20AB86340();
  swift_release();
  uint64_t v37 = v4;
  ((void (*)(char *, void, uint64_t))v20)(v7, v51, v4);
  int64_t v36 = v7;
  sub_20AB86070();
  swift_release();
  swift_release();
  v21(v7, v4);
  sub_20AB86120();
  sub_20AA65BE0(0, &qword_26AC50F30);
  sub_20AB86340();
  swift_release();
  swift_release();
  sub_20AB86120();
  sub_20AA65BE0(0, &qword_26AC4E6F0);
  sub_20AB86340();
  swift_release();
  swift_release();
  sub_20AB86130();
  sub_20AB85CD0();
  sub_20AB86330();
  swift_release();
  swift_release();
  sub_20AB86130();
  sub_20AB85D60();
  swift_retain();
  sub_20AB86330();
  swift_release();
  swift_release();
  swift_release();
  sub_20AB86130();
  type metadata accessor for ExternalAnalyticsEventProcessor();
  sub_20AB86330();
  swift_release();
  swift_release();
  sub_20AB86130();
  sub_20AA65BE0(0, &qword_26AC4E4C8);
  sub_20AB86340();
  swift_release();
  swift_release();
  sub_20AB86130();
  sub_20AA65BE0(0, &qword_26AC4EA70);
  sub_20AB86340();
  swift_release();
  swift_release();
  uint64_t v41 = v11;
  sub_20AB86130();
  sub_20AA65BE0(0, &qword_26AC4EA68);
  sub_20AB86340();
  swift_release();
  swift_release();
  sub_20AB86140();
  __swift_project_boxed_opaque_existential_1(v53, v54);
  sub_20AA65BE0(0, &qword_26AC4E750);
  uint64_t v22 = v43;
  uint64_t v23 = v49;
  uint64_t v24 = v48;
  uint64_t v25 = v40;
  v40(v43, v49, v48);
  sub_20AB863A0();
  uint64_t v26 = v38;
  v38(v22, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_20AB86140();
  uint64_t v42 = v55;
  __swift_project_boxed_opaque_existential_1(v53, v54);
  sub_20AA65B7C(0, &qword_26AC4E748, MEMORY[0x263F7D2D0], MEMORY[0x263F7CEB8]);
  v25(v22, v23, v24);
  sub_20AB86390();
  v26(v22, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_20AB86140();
  __swift_project_boxed_opaque_existential_1(v53, v54);
  sub_20AA65BE0(0, &qword_26AC4E3F8);
  v25(v22, v49, v24);
  sub_20AB863A0();
  v26(v22, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  sub_20AB86120();
  type metadata accessor for SessionObserver();
  sub_20AB86330();
  swift_release();
  uint64_t v27 = v36;
  uint64_t v28 = v37;
  char v29 = v44;
  ((void (*)(char *, void, uint64_t))v44)(v36, v50, v37);
  sub_20AB86070();
  swift_release();
  swift_release();
  unint64_t v30 = v47;
  v47(v27, v28);
  sub_20AB86120();
  type metadata accessor for SegmentationObserver();
  sub_20AB86330();
  swift_release();
  ((void (*)(char *, void, uint64_t))v29)(v27, v51, v28);
  sub_20AB86070();
  swift_release();
  swift_release();
  v30(v27, v28);
  sub_20AB86130();
  sub_20AB85EF0();
  sub_20AB86330();
  swift_release();
  swift_release();
  sub_20AB86130();
  sub_20AA659D4();
  sub_20AB86330();
  swift_release();
  return swift_release();
}

uint64_t sub_20AA636E0()
{
  return sub_20AB857F0();
}

uint64_t sub_20AA6377C(void *a1)
{
  uint64_t v2 = sub_20AB85D40();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85D80();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v28 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20AB85900();
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v27 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20AB85B20();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20AB85E00();
  uint64_t v22 = *(void *)(v12 - 8);
  uint64_t v23 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F24D68];
  sub_20AA65B7C(0, &qword_26AC519A0, MEMORY[0x263F24D68], MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_20AB88030;
  sub_20AB85B00();
  sub_20AB85B10();
  uint64_t v31 = v16;
  sub_20AA65C30(&qword_26AC4E6D8, 255, MEMORY[0x263F24D68]);
  sub_20AA65B7C(0, &qword_26AC51698, v15, MEMORY[0x263F8D488]);
  sub_20AA65C78(&qword_26AC516A0, &qword_26AC51698, v15);
  uint64_t v26 = v11;
  sub_20AB86920();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E080);
  uint64_t result = sub_20AB860D0();
  if (!v32)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v24 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E6F0);
  uint64_t result = sub_20AB860D0();
  if (!v30)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x263F24CF0];
  sub_20AA65B7C(0, (unint64_t *)&unk_26AC51980, MEMORY[0x263F24CF0], MEMORY[0x263F8E0F8]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_20AB95660;
  sub_20AB858F0();
  sub_20AB858D0();
  sub_20AB858E0();
  uint64_t v29 = v19;
  sub_20AA65C30(&qword_26AC4E4D8, 255, MEMORY[0x263F24CF0]);
  sub_20AA65B7C(0, &qword_26AC51688, v18, MEMORY[0x263F8D488]);
  sub_20AA65C78(&qword_26AC51690, &qword_26AC51688, v18);
  sub_20AB86920();
  sub_20AB85AA0();
  swift_allocObject();
  sub_20AB85A90();
  sub_20AB85D70();
  sub_20AB85D30();
  sub_20AB85DF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85800();
  uint64_t result = sub_20AB860C0();
  if (result)
  {
    uint64_t v20 = sub_20AB857E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v23);
    return v20;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20AA63D98(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t result = sub_20AB860B0();
  if (v4 == 2)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v4) {
    return result;
  }
  sub_20AB85AB0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20AB85CD0();
  uint64_t result = sub_20AB860C0();
  if (!result) {
    goto LABEL_10;
  }
  sub_20AB85BA0();
  swift_release();
  swift_release();
  sub_20AB85AB0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20AB85D60();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_20AB85BA0();
  swift_release();
  swift_release();
  sub_20AB85AB0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ExternalAnalyticsEventProcessor();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_20AA65C30(&qword_26AC4E8F0, 255, (void (*)(uint64_t))type metadata accessor for ExternalAnalyticsEventProcessor);
  sub_20AB85BA0();
  swift_release();
  swift_release();
  sub_20AB85AB0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20AA65BE0(0, &qword_26AC4EA80);
  uint64_t result = sub_20AB860D0();
  if (!v4)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  sub_20AB85BA0();
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_20AA64014(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85800();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85EF0();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA659D4();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  sub_20AB85950();
  sub_20AB85D20();
  uint64_t v4 = (void *)sub_20AB85D10();
  if (qword_26AC4E410 != -1) {
    swift_once();
  }
  sub_20AA65C30(&qword_26AC4F2E0, v3, (void (*)(uint64_t))type metadata accessor for TrackerAssembly);
  sub_20AB856E0();
  uint64_t v5 = (void *)sub_20AB85D00();

  if (qword_26AC4E498 != -1) {
    swift_once();
  }
  sub_20AB856E0();
  uint64_t v6 = (void *)sub_20AB85CE0();

  if (qword_26AC4E450 != -1) {
    swift_once();
  }
  sub_20AB856E0();
  sub_20AB85CF0();

  sub_20AB85E20();
  swift_allocObject();
  sub_20AB85E10();
  return sub_20AB85930();
}

uint64_t sub_20AA642F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3F0);
  uint64_t result = sub_20AB860D0();
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20AA65BE0(0, &qword_26AC4E3E8);
    uint64_t result = sub_20AB860D0();
    if (v5)
    {
      uint64_t result = sub_20A9D7BA0(&v7, a2);
      *(void *)(a2 + 40) = v5;
      *(void *)(a2 + 48) = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20AA643E4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85950();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85CD0();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  type metadata accessor for FlushAnalyticsBatchesStartupTask();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_group;
  if (qword_26AC4E738 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_20AB861E0();
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_26AC4E720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5 + v6, v8, v7);
  *(void *)(v5 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_flushManager) = v3;
  *(void *)(v5 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_loggingEventProcessor) = v4;
  return v5;
}

uint64_t sub_20AA64540(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v2 = type metadata accessor for FlushAnalyticsBatchesStartupTask();
  uint64_t result = sub_20AB860C0();
  if (result)
  {
    uint64_t v4 = result;
    v5[3] = v2;
    v5[4] = sub_20AA65C30(&qword_26AC4E770, 255, (void (*)(uint64_t))type metadata accessor for FlushAnalyticsBatchesStartupTask);
    v5[0] = v4;
    sub_20AB862F0();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20AA6460C(uint64_t a1, uint64_t a2)
{
  if (qword_26AC4E420 != -1) {
    swift_once();
  }
  sub_20AA65C30(&qword_26AC4F2E0, a2, (void (*)(uint64_t))type metadata accessor for TrackerAssembly);
  return sub_20AB856E0();
}

uint64_t sub_20AA646E0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85B40();
  uint64_t result = sub_20AB860C0();
  if (result)
  {
    uint64_t v2 = sub_20AB85B30();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20AA6474C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3F8);
  uint64_t result = sub_20AB860D0();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for TrackerConfiguration();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_20A9D7BA0(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_26BEA53B0;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20AA64800@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC50F30);
  uint64_t result = sub_20AB860D0();
  if (v6[3])
  {
    uint64_t v4 = type metadata accessor for RollingTimestampConfigurationProvider();
    swift_allocObject();
    uint64_t v5 = sub_20AB0DD94(v6, 15.0);
    a2[3] = v4;
    uint64_t result = sub_20AA65C30(&qword_26AC4E350, 255, (void (*)(uint64_t))type metadata accessor for RollingTimestampConfigurationProvider);
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20AA648EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AA65B7C(0, &qword_26AC4E3D0, MEMORY[0x263F7AAA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = (char *)&v12 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = sub_20AB85480();
  sub_20AB860D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = type metadata accessor for TimestampJitterFactory();
    uint64_t v11 = swift_allocObject();
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v11 + OBJC_IVAR____TtC15StocksAnalytics22TimestampJitterFactory_appConfiguration, v6, v7);
    a2[3] = v10;
    a2[4] = (uint64_t)&off_26BE9E518;
    *a2 = v11;
  }
  return result;
}

uint64_t sub_20AA64A70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3F8);
  uint64_t result = sub_20AB860D0();
  if (v10)
  {
    type metadata accessor for PrivacyValidationProvider();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = v4 + OBJC_IVAR____TtC15StocksAnalytics25PrivacyValidationProvider_privacyValidation;
    uint64_t v6 = *MEMORY[0x263F24D98];
    uint64_t v7 = sub_20AB85BB0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
    sub_20AA65AD8((uint64_t)v9, v4 + 16);
    __swift_project_boxed_opaque_existential_1(v9, v10);
    sub_20AB85560();
    swift_allocObject();
    swift_weakInit();
    sub_20AB86150();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    uint64_t result = sub_20AA65C30(&qword_26AC50CF8, 255, (void (*)(uint64_t))type metadata accessor for PrivacyValidationProvider);
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20AA64C38()
{
  uint64_t v0 = sub_20AB85DE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20AB85CD0();
  *uint64_t v3 = 11;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F24E00], v0);
  return sub_20AB85CC0();
}

uint64_t sub_20AA64D1C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85EF0();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA659D4();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  sub_20AB85D60();
  sub_20AB85D20();
  uint64_t v6 = (void *)sub_20AB85D10();
  if (qword_26AC4E410 != -1) {
    swift_once();
  }
  sub_20AA65C30(&qword_26AC4F2E0, v5, (void (*)(uint64_t))type metadata accessor for TrackerAssembly);
  sub_20AB856E0();
  uint64_t v7 = (void *)sub_20AB85D00();

  if (qword_26AC4E498 != -1) {
    swift_once();
  }
  sub_20AB856E0();
  uint64_t v8 = (void *)sub_20AB85CE0();

  if (qword_26AC4E450 != -1) {
    swift_once();
  }
  sub_20AB856E0();
  uint64_t v9 = sub_20AB85CF0();

  return MEMORY[0x2105297D0](v3, v4, 0, v9);
}

uint64_t sub_20AA64F90(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3F8);
  uint64_t result = sub_20AB860D0();
  if (!v11)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85F90();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E4C8);
  uint64_t result = sub_20AB860D0();
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4EA70);
  uint64_t result = sub_20AB860D0();
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4EA68);
  uint64_t result = sub_20AB860D0();
  if (v5[3])
  {
    type metadata accessor for ExternalAnalyticsEventProcessor();
    swift_allocObject();
    uint64_t v4 = sub_20AADBF1C((uint64_t)v10, v3, (uint64_t)v8, (uint64_t)v6, (uint64_t)v5);
    swift_release();
    return (uint64_t)v4;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20AA6517C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_20AB857D0();
  swift_allocObject();
  uint64_t result = sub_20AB857C0();
  uint64_t v4 = MEMORY[0x263F24CD0];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_20AA651D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ExternalAnalyticsPanelIdProvider();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for ExternalAnalyticsPanelIdProvider;
  *a1 = result;
  return result;
}

uint64_t sub_20AA6521C@<X0>(uint64_t *a1@<X8>)
{
  sub_20AA65A6C();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20AB95670;
  uint64_t started = type metadata accessor for AppSessionStartEventQueryItemsGenerator();
  uint64_t v4 = swift_allocObject();
  *(void *)(v2 + 56) = started;
  *(void *)(v2 + 64) = &off_26BEA0A30;
  *(void *)(v2 + 32) = v4;
  uint64_t ItemsGenerator = type metadata accessor for ArticleViewEventQueryItemsGenerator();
  uint64_t v6 = swift_allocObject();
  *(void *)(v2 + 96) = ItemsGenerator;
  *(void *)(v2 + 104) = &off_26BEA2E98;
  *(void *)(v2 + 72) = v6;
  uint64_t v7 = type metadata accessor for MediaEngageEventQueryItemsGenerator();
  uint64_t v8 = swift_allocObject();
  *(void *)(v2 + 136) = v7;
  *(void *)(v2 + 144) = &off_26BEA2298;
  *(void *)(v2 + 112) = v8;
  uint64_t v9 = type metadata accessor for MediaEngageCompletedEventQueryItemsGenerator();
  uint64_t v10 = swift_allocObject();
  *(void *)(v2 + 176) = v9;
  *(void *)(v2 + 184) = &off_26BEA1F90;
  *(void *)(v2 + 152) = v10;
  uint64_t v11 = type metadata accessor for ExternalAnalyticsURLProvider();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v2;
  a1[3] = v11;
  a1[4] = (uint64_t)&protocol witness table for ExternalAnalyticsURLProvider;
  *a1 = result;
  return result;
}

uint64_t sub_20AA65334(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SessionObserver();
  uint64_t result = sub_20AB860C0();
  if (result)
  {
    uint64_t v4 = (void *)result;
    sub_20AA65C30(&qword_26AC4F2B0, 255, (void (*)(uint64_t))type metadata accessor for SessionObserver);
    sub_20AB86350();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20AA65414(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SessionObserver();
  uint64_t v2 = sub_20AB860C0();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_20AA65C30(&qword_26AC4E128, 255, (void (*)(uint64_t))type metadata accessor for SessionObserver);
    sub_20AB862B0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20AA654DC(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SegmentationObserver();
  uint64_t result = sub_20AB860C0();
  if (result)
  {
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20AA65544(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85B40();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3E0);
  uint64_t result = sub_20AB860D0();
  if (!v14[3])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65A2C();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_20AB860D0();
  if (!v13[3])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85EF0();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = (void *)result;
  char v12 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3F8);
  uint64_t result = sub_20AB860D0();
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC51B58);
  uint64_t result = sub_20AB860D0();
  if (v9)
  {
    id v6 = objc_allocWithZone((Class)type metadata accessor for SessionObserver());
    id v7 = sub_20AB10F44(v3, v14, v4, v13, v5, &v12, (uint64_t)v10, (uint64_t)v8);
    swift_release();

    return (uint64_t)v7;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_20AA657A0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3F8);
  uint64_t result = sub_20AB860D0();
  if (v5[3])
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20AB85F90();
    uint64_t result = sub_20AB860C0();
    if (result)
    {
      uint64_t v3 = result;
      type metadata accessor for SegmentationObserver();
      swift_allocObject();
      uint64_t v4 = sub_20AA74D20(v5, v3);
      swift_release();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20AA65888()
{
  sub_20AB85EF0();
  id v0 = objc_msgSend(self, sel_mainBundle);
  return sub_20AB85ED0();
}

uint64_t sub_20AA658D4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3F8);
  uint64_t result = sub_20AB860D0();
  if (v4)
  {
    type metadata accessor for DynamicEndpoint();
    uint64_t v2 = swift_allocObject();
    sub_20A9D7BA0(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for TrackerAssembly()
{
  return self;
}

uint64_t sub_20AA65998(uint64_t a1)
{
  return sub_20AA62818(a1);
}

uint64_t sub_20AA659BC(void *a1)
{
  return sub_20AA64014(a1);
}

uint64_t sub_20AA659C4(uint64_t a1)
{
  return sub_20AA6460C(a1, v1);
}

uint64_t sub_20AA659CC(void *a1)
{
  return sub_20AA64D1C(a1);
}

unint64_t sub_20AA659D4()
{
  unint64_t result = qword_26AC4E550;
  if (!qword_26AC4E550)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC4E550);
  }
  return result;
}

unint64_t sub_20AA65A2C()
{
  unint64_t result = qword_26AC51720;
  if (!qword_26AC51720)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC51720);
  }
  return result;
}

void sub_20AA65A6C()
{
  if (!qword_26AC519C8)
  {
    sub_20AA65BE0(255, &qword_26AC4EA78);
    unint64_t v0 = sub_20AB86C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC519C8);
    }
  }
}

uint64_t sub_20AA65AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_20AA65B3C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20AA65B74()
{
  return sub_20AA5DF18();
}

void sub_20AA65B7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20AA65BE0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_20AA65C30(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AA65C78(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20AA65B7C(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AA65CDC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_2676556E8, MEMORY[0x263F24D10]);
}

uint64_t static CustomItemExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653500, MEMORY[0x263F24D18], (uint64_t)qword_2676556E8, a1);
}

uint64_t static CustomItemExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA65D44(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267655700, MEMORY[0x263F24DC8]);
}

uint64_t static CustomItemExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653508, MEMORY[0x263F24DD8], (uint64_t)qword_267655700, a1);
}

uint64_t sub_20AA65DA4()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655718);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655718);
  return sub_20AB85D30();
}

uint64_t static CustomItemExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653510, MEMORY[0x263F24DE8], (uint64_t)qword_267655718, a1);
}

uint64_t CustomItemExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t CustomItemExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*CustomItemExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA66EF4(type metadata accessor for CustomItemExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for CustomItemExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655760);
}

uint64_t CustomItemExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 24);
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 24);
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.customItemData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 28);
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20AA6622C()
{
  unint64_t result = qword_267655738;
  if (!qword_267655738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655738);
  }
  return result;
}

unint64_t sub_20AA66280()
{
  unint64_t result = qword_267655740;
  if (!qword_267655740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655740);
  }
  return result;
}

uint64_t CustomItemExposureEvent.customItemData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 28);
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.customItemData.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 32);
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 32);
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.feedPositionData.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 36);
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 36);
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.inGroupPositionData.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 40);
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t CustomItemExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 40);
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 44);
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA66974(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t CustomItemExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent(0) + 44);
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*CustomItemExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for CustomItemExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  uint64_t v14 = *MEMORY[0x263F24D30];
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);

  return v20(v18, v14, v19);
}

uint64_t CustomItemExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t CustomItemExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA66EF4(type metadata accessor for CustomItemExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AA66EF4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for CustomItemExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655770);
}

uint64_t CustomItemExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t CustomItemExposureEvent.Model.customItemData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 28));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t CustomItemExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for CustomItemExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t CustomItemExposureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for CustomItemExposureEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 36));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t CustomItemExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 40);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t CustomItemExposureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CustomItemExposureEvent.Model(0) + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

__n128 CustomItemExposureEvent.Model.init(eventData:timedData:viewData:customItemData:feedPositionData:inGroupPositionData:feedData:groupData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, long long *a4@<X3>, int *a5@<X4>, int *a6@<X5>, char *a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13 = *a3;
  uint64_t v12 = a3[1];
  __int16 v14 = *((_WORD *)a3 + 8);
  long long v28 = *a4;
  uint64_t v15 = *((void *)a4 + 2);
  uint64_t v16 = *((void *)a4 + 3);
  int v17 = *a5;
  char v29 = *((unsigned char *)a6 + 4);
  int v30 = *a6;
  char v33 = *a7;
  uint64_t v31 = *((void *)a7 + 2);
  uint64_t v32 = *((void *)a7 + 1);
  __n128 v36 = (__n128)a8[1];
  long long v37 = *a8;
  uint64_t v34 = *((void *)a8 + 5);
  uint64_t v35 = *((void *)a8 + 4);
  uint64_t v18 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a9, a1, v18);
  uint64_t v19 = (int *)type metadata accessor for CustomItemExposureEvent.Model(0);
  uint64_t v20 = a9 + v19[5];
  uint64_t v21 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a2, v21);
  uint64_t v22 = a9 + v19[6];
  *(void *)uint64_t v22 = v13;
  *(void *)(v22 + 8) = v12;
  *(_WORD *)(v22 + 16) = v14;
  uint64_t v23 = a9 + v19[7];
  *(_OWORD *)uint64_t v23 = v28;
  *(void *)(v23 + 16) = v15;
  *(void *)(v23 + 24) = v16;
  *(_DWORD *)(a9 + v19[8]) = v17;
  uint64_t v24 = a9 + v19[9];
  *(_DWORD *)uint64_t v24 = v30;
  *(unsigned char *)(v24 + 4) = v29;
  uint64_t v25 = a9 + v19[10];
  *(unsigned char *)uint64_t v25 = v33;
  *(void *)(v25 + 8) = v32;
  *(void *)(v25 + 16) = v31;
  uint64_t v26 = a9 + v19[11];
  __n128 result = v36;
  *(_OWORD *)uint64_t v26 = v37;
  *(__n128 *)(v26 + 16) = v36;
  *(void *)(v26 + 32) = v35;
  *(void *)(v26 + 40) = v34;
  return result;
}

uint64_t sub_20AA67314(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unsigned int v3 = 2003134838;
      goto LABEL_8;
    case 3:
      uint64_t result = 0x74496D6F74737563;
      break;
    case 4:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0xD000000000000013;
      break;
    case 6:
      unsigned int v3 = 1684366694;
LABEL_8:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 7:
      uint64_t result = 0x74614470756F7267;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA67424()
{
  return sub_20AA67314(*v0);
}

uint64_t sub_20AA6742C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA6B86C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA67454(uint64_t a1)
{
  unint64_t v2 = sub_20AA678B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA67490(uint64_t a1)
{
  unint64_t v2 = sub_20AA678B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CustomItemExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA68088(0, &qword_267655748, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA678B8();
  sub_20AB86DC0();
  LOBYTE(v27) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for CustomItemExposureEvent.Model(0);
    LOBYTE(v27) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (uint64_t *)(v3 + v10[6]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(void *)&long long v27 = v12;
    *((void *)&v27 + 1) = v13;
    LOWORD(v28) = (_WORD)v11;
    char v30 = 2;
    sub_20A986C14();
    sub_20AB86C50();
    __int16 v14 = (long long *)(v3 + v10[7]);
    long long v15 = *v14;
    uint64_t v17 = *((void *)v14 + 2);
    uint64_t v16 = *((void *)v14 + 3);
    long long v27 = v15;
    *(void *)&long long v28 = v17;
    *((void *)&v28 + 1) = v16;
    char v30 = 3;
    sub_20AA66280();
    sub_20AB86C50();
    LODWORD(v27) = *(_DWORD *)(v3 + v10[8]);
    char v30 = 4;
    sub_20A9EE598();
    sub_20AB86C50();
    uint64_t v18 = (int *)(v3 + v10[9]);
    int v19 = *v18;
    LOBYTE(v18) = *((unsigned char *)v18 + 4);
    LODWORD(v27) = v19;
    BYTE4(v27) = (_BYTE)v18;
    char v30 = 5;
    sub_20A9EE7E8();
    sub_20AB86BE0();
    uint64_t v20 = (char *)(v3 + v10[10]);
    char v21 = *v20;
    uint64_t v23 = *((void *)v20 + 1);
    uint64_t v22 = *((void *)v20 + 2);
    LOBYTE(v27) = v21;
    *((void *)&v27 + 1) = v23;
    *(void *)&long long v28 = v22;
    char v30 = 6;
    sub_20A986774();
    sub_20AB86C50();
    uint64_t v24 = (long long *)(v3 + v10[11]);
    long long v25 = v24[1];
    long long v27 = *v24;
    long long v28 = v25;
    long long v29 = v24[2];
    char v30 = 7;
    sub_20A986524();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA678B8()
{
  unint64_t result = qword_267655750;
  if (!qword_267655750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655750);
  }
  return result;
}

uint64_t CustomItemExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v41 = sub_20AB85FE0();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA68088(0, &qword_267655758, MEMORY[0x263F8E040]);
  uint64_t v37 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v44 = type metadata accessor for CustomItemExposureEvent.Model(0);
  MEMORY[0x270FA5388](v44);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  unint64_t v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20AA678B8();
  int64_t v40 = v11;
  uint64_t v15 = v45;
  sub_20AB86DA0();
  uint64_t v38 = v5;
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  uint64_t v45 = v9;
  LOBYTE(v46) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  uint64_t v16 = v13;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v13, v7, v5);
  LOBYTE(v46) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  uint64_t v17 = v4;
  uint64_t v18 = v41;
  sub_20AB86B80();
  int v19 = (int *)v44;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v16[*(int *)(v44 + 20)], v17, v18);
  char v49 = 2;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v20 = (uint64_t)v16;
  uint64_t v21 = *((void *)&v46 + 1);
  __int16 v22 = v47;
  uint64_t v23 = &v16[v19[6]];
  *(void *)uint64_t v23 = v46;
  *((void *)v23 + 1) = v21;
  *((_WORD *)v23 + 8) = v22;
  char v49 = 3;
  sub_20AA6622C();
  sub_20AB86B80();
  uint64_t v24 = (uint64_t)v43;
  uint64_t v25 = v45;
  long long v26 = v47;
  long long v27 = (_OWORD *)(v20 + v19[7]);
  *long long v27 = v46;
  v27[1] = v26;
  char v49 = 4;
  sub_20A9EE544();
  sub_20AB86B80();
  *(_DWORD *)(v20 + v19[8]) = v46;
  char v49 = 5;
  sub_20A9EE794();
  sub_20AB86B10();
  char v28 = BYTE4(v46);
  uint64_t v29 = v20 + v19[9];
  *(_DWORD *)uint64_t v29 = v46;
  *(unsigned char *)(v29 + 4) = v28;
  char v49 = 6;
  sub_20A986720();
  sub_20AB86B80();
  uint64_t v30 = *((void *)&v46 + 1);
  uint64_t v31 = v47;
  uint64_t v32 = v20 + v19[10];
  *(unsigned char *)uint64_t v32 = v46;
  *(void *)(v32 + 8) = v30;
  *(void *)(v32 + 16) = v31;
  char v49 = 7;
  sub_20A9864D0();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v40, v37);
  char v33 = (_OWORD *)(v20 + v19[11]);
  long long v34 = v47;
  *char v33 = v46;
  v33[1] = v34;
  v33[2] = v48;
  sub_20AA680EC(v20, v36);
  __swift_destroy_boxed_opaque_existential_1(v24);
  return sub_20AA68150(v20);
}

void sub_20AA68088(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA678B8();
    unint64_t v7 = a3(a1, &type metadata for CustomItemExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA680EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CustomItemExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA68150(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CustomItemExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA681AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CustomItemExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA681C4(void *a1)
{
  return CustomItemExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA681DC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653500, MEMORY[0x263F24D18], (uint64_t)qword_2676556E8, a1);
}

uint64_t sub_20AA68214@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653508, MEMORY[0x263F24DD8], (uint64_t)qword_267655700, a1);
}

uint64_t sub_20AA6824C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653510, MEMORY[0x263F24DE8], (uint64_t)qword_267655718, a1);
}

uint64_t sub_20AA68284@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  uint64_t v15 = *MEMORY[0x263F24D30];
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);

  return v21(v19, v15, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for CustomItemExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    __int16 v22 = (char *)a2 + v20;
    sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    long long v26 = (char *)a2 + v24;
    sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    long long v34 = (char *)a2 + v32;
    sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for CustomItemExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

uint64_t initializeWithCopy for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for CustomItemExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomItemExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA69CE8);
}

uint64_t sub_20AA69CE8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_15;
  }
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_15;
  }
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_15;
  }
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_15;
  }
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a3[11];

  return v21(v23, a2, v22);
}

uint64_t storeEnumTagSinglePayload for CustomItemExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA6A114);
}

uint64_t sub_20AA6A114(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_16:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_15:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_16;
  }
  sub_20AA66974(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_15;
  }
  sub_20AA66974(0, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_15;
  }
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_15;
  }
  sub_20AA66974(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_15;
  }
  sub_20AA66974(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_15;
  }
  sub_20AA66974(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a4[11];

  return v23(v25, a2, a2, v24);
}

void sub_20AA6A538()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AA66974(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
      if (v2 <= 0x3F)
      {
        sub_20AA66974(319, &qword_267655730, (void (*)(void))sub_20AA6622C, (void (*)(void))sub_20AA66280);
        if (v3 <= 0x3F)
        {
          sub_20AA66974(319, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
          if (v4 <= 0x3F)
          {
            sub_20AA66974(319, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
            if (v5 <= 0x3F)
            {
              sub_20AA66974(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
              if (v6 <= 0x3F)
              {
                sub_20AA66974(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for CustomItemExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    uint64_t v17 = (uint64_t *)((char *)a1 + v13);
    uint64_t v18 = (uint64_t *)((char *)a2 + v13);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v18[3];
    v17[2] = v18[2];
    v17[3] = v20;
    uint64_t v21 = a3[9];
    *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    uint64_t v24 = a3[10];
    uint64_t v25 = a3[11];
    uint64_t v26 = (char *)a1 + v24;
    uint64_t v27 = (char *)a2 + v24;
    *uint64_t v26 = *v27;
    uint64_t v28 = *((void *)v27 + 2);
    *((void *)v26 + 1) = *((void *)v27 + 1);
    *((void *)v26 + 2) = v28;
    uint64_t v29 = (char *)a1 + v25;
    uint64_t v30 = (char *)a2 + v25;
    uint64_t v31 = *(uint64_t *)((char *)a2 + v25 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      *uint64_t v29 = *v30;
      *((void *)v29 + 1) = *((void *)v30 + 1);
      *((void *)v29 + 2) = v31;
      *((void *)v29 + 3) = *((void *)v30 + 3);
      uint64_t v32 = *((void *)v30 + 5);
      *((void *)v29 + 4) = *((void *)v30 + 4);
      *((void *)v29 + 5) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v34 = *((_OWORD *)v30 + 1);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v34;
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
    }
  }
  return a1;
}

uint64_t destroy for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 44) + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  uint64_t v16 = (void *)(a1 + v12);
  uint64_t v17 = (void *)(a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = v17[3];
  v16[2] = v17[2];
  v16[3] = v19;
  uint64_t v20 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(unsigned char *)(v21 + 4) = *(unsigned char *)(v22 + 4);
  uint64_t v23 = a3[10];
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  uint64_t v27 = *(void *)(v26 + 16);
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = v27;
  uint64_t v28 = a1 + v24;
  uint64_t v29 = a2 + v24;
  uint64_t v30 = *(void *)(a2 + v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30)
  {
    *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
    *(void *)(v28 + 8) = *(void *)(v29 + 8);
    *(void *)(v28 + 16) = v30;
    *(void *)(v28 + 24) = *(void *)(v29 + 24);
    uint64_t v31 = *(void *)(v29 + 40);
    *(void *)(v28 + 32) = *(void *)(v29 + 32);
    *(void *)(v28 + 40) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v32;
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(unsigned char *)(v12 + 17) = *(unsigned char *)(v13 + 17);
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = a2 + v14;
  *uint64_t v15 = *(void *)(a2 + v14);
  v15[1] = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = *(void *)(v16 + 16);
  v15[3] = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  char v20 = *(unsigned char *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  *(void *)(v22 + 16) = *(void *)(v23 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (long long *)(a2 + v24);
  uint64_t v27 = *(void *)(a1 + v24 + 16);
  uint64_t v28 = *((void *)v26 + 2);
  if (v27)
  {
    if (v28)
    {
      *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
      *(void *)(v25 + 8) = *((void *)v26 + 1);
      *(void *)(v25 + 16) = *((void *)v26 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v25 + 24) = *((_DWORD *)v26 + 6);
      *(_DWORD *)(v25 + 28) = *((_DWORD *)v26 + 7);
      *(void *)(v25 + 32) = *((void *)v26 + 4);
      *(void *)(v25 + 40) = *((void *)v26 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v25);
      long long v30 = v26[1];
      long long v29 = v26[2];
      *(_OWORD *)uint64_t v25 = *v26;
      *(_OWORD *)(v25 + 16) = v30;
      *(_OWORD *)(v25 + 32) = v29;
    }
  }
  else if (v28)
  {
    *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
    *(void *)(v25 + 8) = *((void *)v26 + 1);
    *(void *)(v25 + 16) = *((void *)v26 + 2);
    *(_DWORD *)(v25 + 24) = *((_DWORD *)v26 + 6);
    *(_DWORD *)(v25 + 28) = *((_DWORD *)v26 + 7);
    *(void *)(v25 + 32) = *((void *)v26 + 4);
    *(void *)(v25 + 40) = *((void *)v26 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v31 = *v26;
    long long v32 = v26[2];
    *(_OWORD *)(v25 + 16) = v26[1];
    *(_OWORD *)(v25 + 32) = v32;
    *(_OWORD *)uint64_t v25 = v31;
  }
  return a1;
}

uint64_t initializeWithTake for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  uint64_t v15 = (_OWORD *)(a1 + v12);
  uint64_t v16 = (_OWORD *)(a2 + v12);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  uint64_t v21 = a3[10];
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(void *)(v23 + 16) = *(void *)(v24 + 16);
  uint64_t v25 = (_OWORD *)(a1 + v22);
  uint64_t v26 = (_OWORD *)(a2 + v22);
  long long v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  return a1;
}

uint64_t assignWithTake for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15 + 8);
  *uint64_t v16 = *(void *)(a2 + v15);
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v17 + 24);
  v16[2] = *(void *)(v17 + 16);
  v16[3] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(unsigned char *)(v21 + 4) = *(unsigned char *)(v22 + 4);
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  uint64_t v27 = *(void *)(v25 + 8);
  uint64_t v26 = *(void *)(v25 + 16);
  *(void *)(v24 + 8) = v27;
  *(void *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[11];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  if (!*(void *)(a1 + v28 + 16)) {
    goto LABEL_5;
  }
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31)
  {
    sub_20A98D5B8(v29);
LABEL_5:
    long long v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
    return a1;
  }
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = v31;
  swift_bridgeObjectRelease();
  *(void *)(v29 + 24) = *(void *)(v30 + 24);
  uint64_t v32 = *(void *)(v30 + 40);
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(void *)(v29 + 40) = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA6B318);
}

uint64_t sub_20AA6B318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for CustomItemExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA6B444);
}

uint64_t sub_20AA6B444(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AA6B558()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CustomItemExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA6B72CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomItemExposureEvent.Model.CodingKeys()
{
  return &type metadata for CustomItemExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AA6B768()
{
  unint64_t result = qword_267655780;
  if (!qword_267655780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655780);
  }
  return result;
}

unint64_t sub_20AA6B7C0()
{
  unint64_t result = qword_267655788;
  if (!qword_267655788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655788);
  }
  return result;
}

unint64_t sub_20AA6B818()
{
  unint64_t result = qword_267655790;
  if (!qword_267655790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655790);
  }
  return result;
}

uint64_t sub_20AA6B86C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74496D6F74737563 && a2 == 0xEE00617461446D65 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA79D0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA79F0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

void __swiftcall CampaignData.init(campaignID:campaignType:creativeID:)(StocksAnalytics::CampaignData *__return_ptr retstr, Swift::String campaignID, Swift::String_optional campaignType, Swift::String_optional creativeID)
{
  retstr->campaignID = campaignID;
  retstr->campaignType = campaignType;
  retstr->creativeID = creativeID;
}

uint64_t static CampaignData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t CampaignData.campaignID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CampaignData.campaignID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CampaignData.campaignID.modify())()
{
  return nullsub_1;
}

uint64_t CampaignData.campaignType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CampaignData.campaignType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CampaignData.campaignType.modify())()
{
  return nullsub_1;
}

uint64_t CampaignData.creativeID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CampaignData.creativeID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*CampaignData.creativeID.modify())()
{
  return nullsub_1;
}

uint64_t sub_20AA6BD94()
{
  uint64_t v1 = 0x6576697461657263;
  if (*v0 == 1) {
    uint64_t v1 = 0x6E676961706D6163;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E676961706D6163;
  }
}

uint64_t sub_20AA6BDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA6C60C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA6BE10(uint64_t a1)
{
  unint64_t v2 = sub_20AA6C050();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA6BE4C(uint64_t a1)
{
  unint64_t v2 = sub_20AA6C050();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CampaignData.encode(to:)(void *a1)
{
  sub_20AA6C354(0, &qword_267655798, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  uint64_t v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA6C050();
  sub_20AB86DC0();
  char v15 = 0;
  uint64_t v10 = v12[5];
  sub_20AB86C10();
  if (!v10)
  {
    char v14 = 1;
    sub_20AB86BC0();
    char v13 = 2;
    sub_20AB86BC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA6C050()
{
  unint64_t result = qword_2676557A0;
  if (!qword_2676557A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676557A0);
  }
  return result;
}

uint64_t CampaignData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AA6C354(0, &qword_2676557A8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA6C050();
  sub_20AB86DA0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v27 = 0;
    uint64_t v10 = sub_20AB86B40();
    uint64_t v13 = v12;
    uint64_t v24 = v10;
    char v26 = 1;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_20AB86AF0();
    uint64_t v16 = v15;
    uint64_t v23 = v14;
    char v25 = 2;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_20AB86AF0();
    uint64_t v19 = v18;
    uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v22 = v17;
    v20(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v24;
    a2[1] = v13;
    a2[2] = v23;
    a2[3] = v16;
    a2[4] = v22;
    a2[5] = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AA6C354(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA6C050();
    unint64_t v7 = a3(a1, &type metadata for CampaignData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA6C3C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CampaignData.init(from:)(a1, a2);
}

uint64_t sub_20AA6C3D8(void *a1)
{
  return CampaignData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for CampaignData()
{
  return &type metadata for CampaignData;
}

unsigned char *storeEnumTagSinglePayload for CampaignData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA6C4CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CampaignData.CodingKeys()
{
  return &type metadata for CampaignData.CodingKeys;
}

unint64_t sub_20AA6C508()
{
  unint64_t result = qword_2676557B0;
  if (!qword_2676557B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676557B0);
  }
  return result;
}

unint64_t sub_20AA6C560()
{
  unint64_t result = qword_2676557B8;
  if (!qword_2676557B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676557B8);
  }
  return result;
}

unint64_t sub_20AA6C5B8()
{
  unint64_t result = qword_2676557C0;
  if (!qword_2676557C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676557C0);
  }
  return result;
}

uint64_t sub_20AA6C60C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E676961706D6163 && a2 == 0xEA00000000004449;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000065707954 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576697461657263 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20AA6C784(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC506D0, MEMORY[0x263F24D10]);
}

uint64_t static ArticleEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC506E8, MEMORY[0x263F24D18], (uint64_t)qword_26AC506D0, a1);
}

uint64_t static ArticleEngagementEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA6C7EC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC506F0, MEMORY[0x263F24DC8]);
}

uint64_t static ArticleEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4E190, MEMORY[0x263F24DD8], (uint64_t)qword_26AC506F0, a1);
}

uint64_t sub_20AA6C84C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676557C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676557C8);
  return sub_20AB85D30();
}

uint64_t static ArticleEngagementEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC520D0, MEMORY[0x263F24DE8], (uint64_t)qword_2676557C8, a1);
}

uint64_t ArticleEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ArticleEngagementEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ArticleEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 20);
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ArticleEngagementEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_26AC4E198);
}

uint64_t ArticleEngagementEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 20);
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 24);
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleEngagementEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 24);
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.userArticleContextData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 28);
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA6CD90(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t ArticleEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleEngagementEvent(0) + 28);
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleEngagementEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ArticleEngagementEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t ArticleEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ArticleEngagementEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleEngagementEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ArticleEngagementEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC50708);
}

uint64_t ArticleEngagementEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for ArticleEngagementEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ArticleEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleEngagementEvent.Model(0) + 28));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 ArticleEngagementEvent.Model.init(eventData:newsArticleData:userArticleContextData:channelData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, __int16 *a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  long long v22 = *a2;
  uint64_t v7 = *((void *)a2 + 2);
  uint64_t v8 = *((void *)a2 + 3);
  char v9 = *((unsigned char *)a2 + 32);
  uint64_t v10 = *((void *)a2 + 5);
  char v11 = *((unsigned char *)a2 + 48);
  uint64_t v12 = *((void *)a2 + 7);
  char v13 = *((unsigned char *)a2 + 64);
  char v14 = *((unsigned char *)a2 + 65);
  char v20 = *((unsigned char *)a2 + 67);
  char v21 = *((unsigned char *)a2 + 66);
  __n128 v28 = *a4;
  unint64_t v26 = a4[1].n128_u64[1];
  unint64_t v27 = a4[1].n128_u64[0];
  unsigned __int8 v25 = a4[2].n128_u8[0];
  __int16 v23 = *a3;
  unsigned __int8 v24 = a4[2].n128_u8[1];
  uint64_t v15 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a5, a1, v15);
  uint64_t v16 = (int *)type metadata accessor for ArticleEngagementEvent.Model(0);
  uint64_t v17 = a5 + v16[5];
  *(_OWORD *)uint64_t v17 = v22;
  *(void *)(v17 + 16) = v7;
  *(void *)(v17 + 24) = v8;
  *(unsigned char *)(v17 + 32) = v9;
  *(void *)(v17 + 40) = v10;
  *(unsigned char *)(v17 + 48) = v11;
  *(void *)(v17 + 56) = v12;
  *(unsigned char *)(v17 + 64) = v13;
  *(unsigned char *)(v17 + 65) = v14;
  *(unsigned char *)(v17 + 66) = v21;
  *(unsigned char *)(v17 + 67) = v20;
  *(_WORD *)(a5 + v16[6]) = v23;
  uint64_t v18 = (__n128 *)(a5 + v16[7]);
  __n128 result = v28;
  *uint64_t v18 = v28;
  v18[1].n128_u64[0] = v27;
  v18[1].n128_u64[1] = v26;
  v18[2].n128_u8[0] = v25;
  v18[2].n128_u8[1] = v24;
  return result;
}

unint64_t sub_20AA6D3C8()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x697472417377656ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA6D474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA6FE00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA6D49C(uint64_t a1)
{
  unint64_t v2 = sub_20AA6D7D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA6D4D8(uint64_t a1)
{
  unint64_t v2 = sub_20AA6D7D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ArticleEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA6DCC0(0, &qword_2676557E0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA6D7D4();
  sub_20AB86DC0();
  LOBYTE(v29) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for ArticleEngagementEvent.Model(0);
    char v11 = (long long *)(v3 + v10[5]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v29 = v12;
    uint64_t v30 = v13;
    uint64_t v31 = v14;
    char v32 = v15;
    uint64_t v34 = v16;
    char v35 = v17;
    uint64_t v36 = v18;
    char v37 = v19;
    char v38 = v20;
    char v39 = v21;
    char v40 = (char)v11;
    HIBYTE(v28) = 1;
    sub_20A97A1AC();
    sub_20AB86C50();
    LOWORD(v29) = *(_WORD *)(v3 + v10[6]);
    HIBYTE(v28) = 2;
    sub_20A9C4F78();
    sub_20AB86C50();
    long long v22 = (long long *)(v3 + v10[7]);
    long long v23 = *v22;
    uint64_t v24 = *((void *)v22 + 2);
    uint64_t v25 = *((void *)v22 + 3);
    char v26 = *((unsigned char *)v22 + 32);
    LOBYTE(v22) = *((unsigned char *)v22 + 33);
    long long v29 = v23;
    uint64_t v30 = v24;
    uint64_t v31 = v25;
    char v32 = v26;
    char v33 = (char)v22;
    HIBYTE(v28) = 3;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA6D7D4()
{
  unint64_t result = qword_26AC4E328;
  if (!qword_26AC4E328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E328);
  }
  return result;
}

uint64_t ArticleEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA6DCC0(0, &qword_26AC4E398, MEMORY[0x263F8E040]);
  uint64_t v38 = v6;
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - v7;
  char v9 = (int *)type metadata accessor for ArticleEngagementEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA6D7D4();
  char v39 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v33 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v36;
  LOBYTE(v40) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v37;
  uint64_t v15 = v38;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v52 = 1;
  sub_20A97A154();
  sub_20AB86B80();
  uint64_t v16 = v41;
  uint64_t v17 = v42;
  char v18 = v43;
  uint64_t v19 = v45;
  char v20 = v46;
  uint64_t v21 = v47;
  char v22 = v48;
  char v23 = v49;
  char v24 = v50;
  char v25 = v51;
  uint64_t v26 = v12 + v9[5];
  *(_OWORD *)uint64_t v26 = v40;
  *(void *)(v26 + 16) = v16;
  *(void *)(v26 + 24) = v17;
  *(unsigned char *)(v26 + 32) = v18;
  *(void *)(v26 + 40) = v19;
  *(unsigned char *)(v26 + 48) = v20;
  *(void *)(v26 + 56) = v21;
  *(unsigned char *)(v26 + 64) = v22;
  *(unsigned char *)(v26 + 65) = v23;
  *(unsigned char *)(v26 + 66) = v24;
  *(unsigned char *)(v26 + 67) = v25;
  char v52 = 2;
  sub_20A9C4F24();
  sub_20AB86B80();
  *(_WORD *)(v12 + v9[6]) = v40;
  char v52 = 3;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v15);
  uint64_t v27 = v41;
  uint64_t v28 = v42;
  char v29 = v43;
  char v30 = v44;
  uint64_t v31 = v12 + v9[7];
  *(_OWORD *)uint64_t v31 = v40;
  *(void *)(v31 + 16) = v27;
  *(void *)(v31 + 24) = v28;
  *(unsigned char *)(v31 + 32) = v29;
  *(unsigned char *)(v31 + 33) = v30;
  sub_20AA6DD24(v12, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_20AA6DD88(v12);
}

void sub_20AA6DCC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA6D7D4();
    unint64_t v7 = a3(a1, &type metadata for ArticleEngagementEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA6DD24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA6DD88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArticleEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA6DDE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA6DDFC(void *a1)
{
  return ArticleEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA6DE14@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC506E8, MEMORY[0x263F24D18], (uint64_t)qword_26AC506D0, a1);
}

uint64_t sub_20AA6DE4C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4E190, MEMORY[0x263F24DD8], (uint64_t)qword_26AC506F0, a1);
}

uint64_t sub_20AA6DE84@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC520D0, MEMORY[0x263F24DE8], (uint64_t)qword_2676557C8, a1);
}

uint64_t sub_20AA6DEBC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArticleEngagementEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ArticleEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA6ECC4);
}

uint64_t sub_20AA6ECC4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ArticleEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA6EF18);
}

uint64_t sub_20AA6EF18(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA6CD90(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_20AA6CD90(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_20AA6CD90(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_20AA6F164()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA6CD90(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    if (v1 <= 0x3F)
    {
      sub_20AA6CD90(319, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
      if (v2 <= 0x3F)
      {
        sub_20AA6CD90(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleEngagementEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    v10[32] = v11[32];
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    *((void *)v10 + 7) = *((void *)v11 + 7);
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    *(_WORD *)((char *)a1 + v9) = *(_WORD *)((char *)a2 + v9);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    uint64_t v18 = *((void *)v16 + 3);
    *((void *)v15 + 2) = *((void *)v16 + 2);
    *((void *)v15 + 3) = v18;
    *((_WORD *)v15 + 16) = *((_WORD *)v16 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleEngagementEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(v15 + 8);
  *(void *)uint64_t v14 = *(void *)v15;
  *(void *)(v14 + 8) = v16;
  uint64_t v17 = *(void *)(v15 + 24);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(void *)(v14 + 24) = v17;
  *(_WORD *)(v14 + 32) = *(_WORD *)(v15 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v10 = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 40) = v10;
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v11 = a3[6];
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 32) = *(unsigned char *)(v16 + 32);
  *(unsigned char *)(v15 + 33) = *(unsigned char *)(v16 + 33);
  return a1;
}

uint64_t initializeWithTake for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_WORD *)(v14 + 32) = *(_WORD *)(v15 + 32);
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  return a1;
}

uint64_t assignWithTake for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (unsigned char *)(a1 + v12);
  uint64_t v15 = (unsigned char *)(a2 + v12);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  uint64_t v18 = *(void *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v17 + 24);
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(v16 + 24) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 32) = *(unsigned char *)(v17 + 32);
  *(unsigned char *)(v16 + 33) = *(unsigned char *)(v17 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA6F9B4);
}

uint64_t sub_20AA6F9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ArticleEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA6FA8C);
}

uint64_t sub_20AA6FA8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA6FB4C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ArticleEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA6FCC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleEngagementEvent.Model.CodingKeys()
{
  return &type metadata for ArticleEngagementEvent.Model.CodingKeys;
}

unint64_t sub_20AA6FCFC()
{
  unint64_t result = qword_2676557E8;
  if (!qword_2676557E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676557E8);
  }
  return result;
}

unint64_t sub_20AA6FD54()
{
  unint64_t result = qword_26AC4E338;
  if (!qword_26AC4E338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E338);
  }
  return result;
}

unint64_t sub_20AA6FDAC()
{
  unint64_t result = qword_26AC4E330;
  if (!qword_26AC4E330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E330);
  }
  return result;
}

uint64_t sub_20AA6FE00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA7800 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_20AA6FFFC(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v77 = a5;
  uint64_t v76 = a4;
  unint64_t v83 = a3;
  unint64_t v81 = a2;
  uint64_t v82 = a6;
  uint64_t v80 = sub_20AB851F0();
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v78 = &v62[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_20AB850A0();
  uint64_t v86 = *(void *)(v8 - 8);
  uint64_t v87 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v84 = &v62[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  unint64_t v85 = &v62[-v11];
  uint64_t v12 = type metadata accessor for NewsArticleViewEvent.Model(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v88 = &v62[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20AA708B8();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = &v62[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_20AB85990();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = &v62[-v19];
  sub_20AA70910();
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  char v25 = &v62[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  int v26 = swift_dynamicCast();
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if (v26)
  {
    v27(v16, 0, 1, v22);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v23 + 32))(v25, v16, v22);
    uint64_t v28 = (void *)sub_20AB85960();
    unint64_t v29 = v89;
    uint64_t v30 = sub_20AB85E30();
    if (v29)
    {
      (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v25, v22);
    }
    else
    {
      uint64_t v32 = v30;
      unint64_t v33 = v31;

      sub_20AB85000();
      swift_allocObject();
      sub_20AB84FF0();
      sub_20AA709A4(&qword_26AC527E8, (void (*)(uint64_t))type metadata accessor for NewsArticleViewEvent.Model);
      uint64_t v34 = v88;
      sub_20AB84FE0();
      uint64_t v75 = v32;
      swift_release();
      uint64_t v35 = &v34[*(int *)(v12 + 24)];
      long long v36 = *((_OWORD *)v35 + 1);
      long long v37 = *((_OWORD *)v35 + 3);
      v90[2] = *((_OWORD *)v35 + 2);
      v90[3] = v37;
      int v91 = *((_DWORD *)v35 + 16);
      v90[0] = *(_OWORD *)v35;
      v90[1] = v36;
      unint64_t v70 = *(void *)v35;
      unint64_t v74 = *((void *)v35 + 1);
      unint64_t v73 = *((void *)v35 + 2);
      unint64_t v72 = *((void *)v35 + 3);
      unint64_t v71 = v35[32];
      unint64_t v68 = *((void *)v35 + 5);
      unint64_t v69 = v35[48];
      unint64_t v67 = *((void *)v35 + 7);
      uint64_t v64 = v35[64];
      int v63 = v35[65];
      uint64_t v66 = v35[66];
      int v65 = v35[67];
      sub_20AA3AD54((uint64_t)v90);
      uint64_t v38 = v85;
      sub_20AB85090();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v86 + 16))(v84, v38, v87);
      unint64_t v39 = sub_20AA0C290(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v41 = *(void *)(v39 + 16);
      unint64_t v40 = *(void *)(v39 + 24);
      unint64_t v89 = v33;
      if (v41 >= v40 >> 1) {
        unint64_t v39 = sub_20AA0C290(v40 > 1, v41 + 1, 1, v39);
      }
      *(void *)(v39 + 16) = v41 + 1;
      uint64_t v42 = v86;
      uint64_t v43 = v87;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v86 + 32))(v39+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v41, v84, v87);
      unint64_t v94 = v39;
      char v44 = &v88[*(int *)(v12 + 68)];
      long long v45 = *((_OWORD *)v44 + 1);
      v92[0] = *(_OWORD *)v44;
      v92[1] = v45;
      __int16 v93 = *((_WORD *)v44 + 16);
      sub_20AA3AD54((uint64_t)v92);
      uint64_t v46 = sub_20AA3AF80(v90, v92, v76, v77);
      sub_20AA3AD8C((uint64_t)v92);
      sub_20AA3A988(v46);
      uint64_t v47 = v78;
      sub_20AB851E0();
      uint64_t v48 = sub_20AB851D0();
      unint64_t v50 = v49;
      sub_20AA3AC9C(v75, v89);
      (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v47, v80);
      (*(void (**)(unsigned char *, uint64_t))(v42 + 8))(v85, v43);
      sub_20AA709EC((uint64_t)v88, type metadata accessor for NewsArticleViewEvent.Model);
      (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v25, v22);
      uint64_t v51 = 256;
      if (!v63) {
        uint64_t v51 = 0;
      }
      uint64_t v52 = v51 | v64;
      uint64_t v53 = v82;
      unint64_t v54 = v70;
      *uint64_t v82 = v94;
      v53[1] = v54;
      uint64_t v55 = v52 | (v66 << 16);
      uint64_t v56 = 0x1000000;
      if (!v65) {
        uint64_t v56 = 0;
      }
      v53[2] = v74;
      uint64_t v57 = v55 | v56;
      unint64_t v58 = v72;
      void v53[3] = v73;
      v53[4] = v58;
      unint64_t v59 = v68;
      v53[5] = v71;
      v53[6] = v59;
      unint64_t v60 = v67;
      v53[7] = v69;
      v53[8] = v60;
      v53[9] = v57;
      v53[10] = 1;
      unint64_t v61 = v83;
      v53[11] = v81;
      v53[12] = v61;
      v53[13] = v48;
      v53[14] = v50;
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v27(v16, 1, 1, v22);
    sub_20AA709EC((uint64_t)v16, (uint64_t (*)(void))sub_20AA708B8);
    sub_20AA0C120();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t type metadata accessor for ArticleViewEventQueryItemsGenerator()
{
  return self;
}

void sub_20AA708A0(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
}

void sub_20AA708B8()
{
  if (!qword_26AC527E0)
  {
    sub_20AA70910();
    unint64_t v0 = sub_20AB868D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC527E0);
    }
  }
}

void sub_20AA70910()
{
  if (!qword_26AC4E560)
  {
    type metadata accessor for NewsArticleViewEvent(255);
    sub_20AA709A4(&qword_26AC50210, (void (*)(uint64_t))type metadata accessor for NewsArticleViewEvent);
    unint64_t v0 = sub_20AB85990();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E560);
    }
  }
}

uint64_t sub_20AA709A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AA709EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static WatchlistData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void WatchlistData.watchlistType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *WatchlistData.watchlistType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*WatchlistData.watchlistType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::WatchlistData __swiftcall WatchlistData.init(watchlistType:)(StocksAnalytics::WatchlistData watchlistType)
{
  *uint64_t v1 = *(unsigned char *)watchlistType.watchlistType;
  return watchlistType;
}

uint64_t sub_20AA70A98()
{
  return 0x73696C6863746177;
}

uint64_t sub_20AA70ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73696C6863746177 && a2 == 0xED00006570795474)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA70B78(uint64_t a1)
{
  unint64_t v2 = sub_20AA70D4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA70BB4(uint64_t a1)
{
  unint64_t v2 = sub_20AA70D4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WatchlistData.encode(to:)(void *a1)
{
  sub_20AA70F38(0, &qword_26AC51858, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA70D4C();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20A9D8854();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA70D4C()
{
  unint64_t result = qword_26AC4EF60;
  if (!qword_26AC4EF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EF60);
  }
  return result;
}

uint64_t WatchlistData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA70F38(0, &qword_26AC51780, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA70D4C();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20A9D8B20();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA70F38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA70D4C();
    unint64_t v7 = a3(a1, &type metadata for WatchlistData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA70FA4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return WatchlistData.init(from:)(a1, a2);
}

uint64_t sub_20AA70FBC(void *a1)
{
  return WatchlistData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for WatchlistData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA710A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistData()
{
  return &type metadata for WatchlistData;
}

unsigned char *storeEnumTagSinglePayload for WatchlistData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA71174);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistData.CodingKeys()
{
  return &type metadata for WatchlistData.CodingKeys;
}

unint64_t sub_20AA711B0()
{
  unint64_t result = qword_2676557F0;
  if (!qword_2676557F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676557F0);
  }
  return result;
}

unint64_t sub_20AA71208()
{
  unint64_t result = qword_26AC4EF70;
  if (!qword_26AC4EF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EF70);
  }
  return result;
}

unint64_t sub_20AA71260()
{
  unint64_t result = qword_26AC4EF68;
  if (!qword_26AC4EF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EF68);
  }
  return result;
}

uint64_t static MediaData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void MediaData.mediaType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *MediaData.mediaType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*MediaData.mediaType.modify())()
{
  return nullsub_1;
}

uint64_t MediaData.mediaID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaData.mediaID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*MediaData.mediaID.modify())()
{
  return nullsub_1;
}

unint64_t MediaData.mediaDuration.getter()
{
  return *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
}

uint64_t MediaData.mediaDuration.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 24) = result;
  *(unsigned char *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

uint64_t (*MediaData.mediaDuration.modify())()
{
  return nullsub_1;
}

unsigned char *MediaData.init(mediaType:mediaID:mediaDuration:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(unsigned char *)a5 = *result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(_DWORD *)(a5 + 24) = a4;
  *(unsigned char *)(a5 + 28) = BYTE4(a4) & 1;
  return result;
}

uint64_t sub_20AA713E8()
{
  uint64_t v1 = 0x4449616964656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x727544616964656DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x707954616964656DLL;
  }
}

uint64_t sub_20AA71454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA71E80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA7147C(uint64_t a1)
{
  unint64_t v2 = sub_20AA716D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA714B8(uint64_t a1)
{
  unint64_t v2 = sub_20AA716D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MediaData.encode(to:)(void *a1)
{
  sub_20AA719D0(0, &qword_26AC51970, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v13 - v7;
  char v9 = *v1;
  uint64_t v10 = *((void *)v1 + 1);
  uint64_t v15 = *((void *)v1 + 2);
  uint64_t v16 = v10;
  uint64_t v14 = *((unsigned int *)v1 + 6);
  HIDWORD(v13) = v1[28];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA716D8();
  sub_20AB86DC0();
  char v21 = v9;
  char v20 = 0;
  sub_20AA7172C();
  sub_20AB86C50();
  if (!v2)
  {
    char v11 = BYTE4(v13);
    char v19 = 1;
    sub_20AB86C10();
    char v18 = 2;
    char v17 = v11;
    sub_20AB86BF0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AA716D8()
{
  unint64_t result = qword_26AC51620;
  if (!qword_26AC51620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51620);
  }
  return result;
}

unint64_t sub_20AA7172C()
{
  unint64_t result = qword_26AC51648;
  if (!qword_26AC51648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51648);
  }
  return result;
}

uint64_t MediaData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA719D0(0, &qword_2676557F8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA716D8();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  sub_20AA71A34();
  sub_20AB86B80();
  int v10 = v22;
  char v20 = 1;
  uint64_t v11 = sub_20AB86B40();
  uint64_t v13 = v12;
  uint64_t v17 = v11;
  int v18 = v10;
  char v19 = 2;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_20AB86B20();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(unsigned char *)a2 = v18;
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v13;
  *(_DWORD *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 28) = BYTE4(v14) & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_20AA719D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA716D8();
    unint64_t v7 = a3(a1, &type metadata for MediaData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA71A34()
{
  unint64_t result = qword_267655800;
  if (!qword_267655800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655800);
  }
  return result;
}

uint64_t sub_20AA71A90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaData.init(from:)(a1, a2);
}

uint64_t sub_20AA71AA8(void *a1)
{
  return MediaData.encode(to:)(a1);
}

uint64_t initializeWithCopy for MediaData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v4;
  return a1;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MediaData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 29)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 29) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 29) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaData()
{
  return &type metadata for MediaData;
}

unsigned char *storeEnumTagSinglePayload for MediaData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA71D40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaData.CodingKeys()
{
  return &type metadata for MediaData.CodingKeys;
}

unint64_t sub_20AA71D7C()
{
  unint64_t result = qword_267655808;
  if (!qword_267655808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655808);
  }
  return result;
}

unint64_t sub_20AA71DD4()
{
  unint64_t result = qword_26AC51630;
  if (!qword_26AC51630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51630);
  }
  return result;
}

unint64_t sub_20AA71E2C()
{
  unint64_t result = qword_26AC51628;
  if (!qword_26AC51628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51628);
  }
  return result;
}

uint64_t sub_20AA71E80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x707954616964656DLL && a2 == 0xE900000000000065;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449616964656DLL && a2 == 0xE700000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x727544616964656DLL && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t UserData.init(userID:userType:userStartDate:ageBracket:ageBracketConfidenceLevel:gender:genderConfidenceLevel:userStorefrontID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>)
{
  char v11 = *a3;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = v11;
  *(void *)(a9 + 24) = a4;
  *(_DWORD *)(a9 + 32) = a5;
  *(float *)(a9 + 36) = a10;
  *(_DWORD *)(a9 + 40) = a6;
  *(float *)(a9 + 44) = a11;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  return result;
}

uint64_t static UserData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t UserData.userID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserData.userID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*UserData.userID.modify())()
{
  return nullsub_1;
}

void UserData.userType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *UserData.userType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*UserData.userType.modify())()
{
  return nullsub_1;
}

uint64_t UserData.userStartDate.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t UserData.userStartDate.setter(uint64_t result)
{
  *(void *)(v1 + 24) = result;
  return result;
}

uint64_t (*UserData.userStartDate.modify())()
{
  return nullsub_1;
}

uint64_t UserData.ageBracket.getter()
{
  return *(unsigned int *)(v0 + 32);
}

uint64_t UserData.ageBracket.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*UserData.ageBracket.modify())()
{
  return nullsub_1;
}

float UserData.ageBracketConfidenceLevel.getter()
{
  return *(float *)(v0 + 36);
}

void UserData.ageBracketConfidenceLevel.setter(float a1)
{
  *(float *)(v1 + 36) = a1;
}

uint64_t (*UserData.ageBracketConfidenceLevel.modify())()
{
  return nullsub_1;
}

uint64_t UserData.gender.getter()
{
  return *(unsigned int *)(v0 + 40);
}

uint64_t UserData.gender.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*UserData.gender.modify())()
{
  return nullsub_1;
}

float UserData.genderConfidenceLevel.getter()
{
  return *(float *)(v0 + 44);
}

void UserData.genderConfidenceLevel.setter(float a1)
{
  *(float *)(v1 + 44) = a1;
}

uint64_t (*UserData.genderConfidenceLevel.modify())()
{
  return nullsub_1;
}

uint64_t UserData.userStorefrontID.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserData.userStorefrontID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*UserData.userStorefrontID.modify())()
{
  return nullsub_1;
}

unint64_t sub_20AA72270(char a1)
{
  unint64_t result = 0x444972657375;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6570795472657375;
      break;
    case 2:
      unint64_t result = 0x7261745372657375;
      break;
    case 3:
      unint64_t result = 0x6B63617242656761;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0x7265646E6567;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20AA7238C()
{
  return sub_20AA72270(*v0);
}

uint64_t sub_20AA72394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA73100(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA723BC(uint64_t a1)
{
  unint64_t v2 = sub_20AA72708();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA723F8(uint64_t a1)
{
  unint64_t v2 = sub_20AA72708();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UserData.encode(to:)(void *a1)
{
  sub_20AA72B08(0, &qword_26AC51950, MEMORY[0x263F8E0C0]);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v15 - v5;
  int v19 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v18 = *(void *)(v1 + 24);
  int v7 = *(_DWORD *)(v1 + 32);
  int v16 = *(_DWORD *)(v1 + 40);
  int v17 = v7;
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v15 = *(void *)(v1 + 48);
  uint64_t v9 = a1[3];
  int v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_20AA72708();
  sub_20AB86DC0();
  char v29 = 0;
  uint64_t v13 = v20;
  sub_20AB86C10();
  if (!v13)
  {
    uint64_t v20 = v8;
    char v28 = v19;
    char v27 = 1;
    sub_20AA7275C();
    sub_20AB86C50();
    char v26 = 2;
    sub_20AB86C70();
    char v25 = 3;
    sub_20AB86C60();
    char v24 = 4;
    sub_20AB86C40();
    char v23 = 5;
    sub_20AB86C60();
    char v22 = 6;
    sub_20AB86C40();
    char v21 = 7;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
}

unint64_t sub_20AA72708()
{
  unint64_t result = qword_26AC514F8;
  if (!qword_26AC514F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514F8);
  }
  return result;
}

unint64_t sub_20AA7275C()
{
  unint64_t result = qword_26AC51528;
  if (!qword_26AC51528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51528);
  }
  return result;
}

uint64_t UserData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA72B08(0, &qword_26AC517F0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA72708();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v35 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  char v33 = 1;
  sub_20AA72B6C();
  swift_bridgeObjectRetain();
  sub_20AB86B80();
  int v26 = v34;
  char v32 = 2;
  uint64_t v25 = sub_20AB86BA0();
  char v31 = 3;
  int v24 = sub_20AB86B90();
  char v30 = 4;
  sub_20AB86B70();
  int v14 = v13;
  char v29 = 5;
  int v23 = sub_20AB86B90();
  char v28 = 6;
  sub_20AB86B70();
  int v16 = v15;
  char v27 = 7;
  uint64_t v17 = sub_20AB86B40();
  uint64_t v20 = v19;
  char v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v22 = v17;
  v21(v9, v6);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = v25;
  *(_DWORD *)(a2 + 32) = v24;
  *(_DWORD *)(a2 + 36) = v14;
  *(_DWORD *)(a2 + 40) = v23;
  *(_DWORD *)(a2 + 44) = v16;
  *(void *)(a2 + 48) = v22;
  *(void *)(a2 + 56) = v20;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AA72B08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA72708();
    unint64_t v7 = a3(a1, &type metadata for UserData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA72B6C()
{
  unint64_t result = qword_26AC4E2C8;
  if (!qword_26AC4E2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E2C8);
  }
  return result;
}

unint64_t sub_20AA72BC4()
{
  unint64_t result = qword_26AC51520;
  if (!qword_26AC51520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51520);
  }
  return result;
}

unint64_t sub_20AA72C1C()
{
  unint64_t result = qword_26AC51518;
  if (!qword_26AC51518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51518);
  }
  return result;
}

uint64_t sub_20AA72C70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UserData.init(from:)(a1, a2);
}

uint64_t sub_20AA72C88(void *a1)
{
  return UserData.encode(to:)(a1);
}

uint64_t destroy for UserData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UserData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserData()
{
  return &type metadata for UserData;
}

unsigned char *storeEnumTagSinglePayload for UserData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA72FC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserData.CodingKeys()
{
  return &type metadata for UserData.CodingKeys;
}

unint64_t sub_20AA72FFC()
{
  unint64_t result = qword_267655810;
  if (!qword_267655810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655810);
  }
  return result;
}

unint64_t sub_20AA73054()
{
  unint64_t result = qword_26AC51508;
  if (!qword_26AC51508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51508);
  }
  return result;
}

unint64_t sub_20AA730AC()
{
  unint64_t result = qword_26AC51500;
  if (!qword_26AC51500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51500);
  }
  return result;
}

uint64_t sub_20AA73100(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795472657375 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7261745372657375 && a2 == 0xED00006574614474 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6B63617242656761 && a2 == 0xEA00000000007465 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000020ABA81C0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7265646E6567 && a2 == 0xE600000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA81E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA8200)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

StocksAnalytics::WebSubscriptionStatus_optional __swiftcall WebSubscriptionStatus.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t WebSubscriptionStatus.rawValue.getter()
{
  uint64_t v1 = 0x6269726373627573;
  if (*v0 != 1) {
    uint64_t v1 = 0x6373627553746F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AA73520(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA35C58(*a1, *a2);
}

unint64_t sub_20AA73530()
{
  unint64_t result = qword_267655818;
  if (!qword_267655818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655818);
  }
  return result;
}

uint64_t sub_20AA73584()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA73638()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA736D8()
{
  return sub_20AB86D80();
}

StocksAnalytics::WebSubscriptionStatus_optional sub_20AA73788(Swift::String *a1)
{
  return WebSubscriptionStatus.init(rawValue:)(*a1);
}

void sub_20AA73794(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEA00000000006465;
  uint64_t v5 = 0x6269726373627573;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6373627553746F6ELL;
    unint64_t v4 = 0xED00006465626972;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AA73804()
{
  return sub_20AB86750();
}

uint64_t sub_20AA73864()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for WebSubscriptionStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA73980);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebSubscriptionStatus()
{
  return &type metadata for WebSubscriptionStatus;
}

unint64_t sub_20AA739B8()
{
  unint64_t result = qword_26AC506C8;
  if (!qword_26AC506C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC506C8);
  }
  return result;
}

uint64_t static TrackData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t TrackData.trackDuration.getter()
{
  return *v0;
}

uint64_t TrackData.trackDuration.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*TrackData.trackDuration.modify())()
{
  return nullsub_1;
}

void TrackData.trackVariant.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 4);
}

unsigned char *TrackData.trackVariant.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 4) = *result;
  return result;
}

uint64_t (*TrackData.trackVariant.modify())()
{
  return nullsub_1;
}

uint64_t TrackData.init(trackDuration:trackVariant:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *a2;
  *(_DWORD *)a3 = result;
  *(unsigned char *)(a3 + 4) = v3;
  return result;
}

uint64_t sub_20AA73A8C()
{
  if (*v0) {
    return 0x7261566B63617274;
  }
  else {
    return 0x7275446B63617274;
  }
}

uint64_t sub_20AA73ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA74330(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA73B04(uint64_t a1)
{
  unint64_t v2 = sub_20AA73D14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA73B40(uint64_t a1)
{
  unint64_t v2 = sub_20AA73D14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TrackData.encode(to:)(void *a1)
{
  sub_20AA73F88(0, &qword_267655820, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - v7;
  int v11 = *(unsigned __int8 *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA73D14();
  sub_20AB86DC0();
  char v14 = 0;
  sub_20AB86C60();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_20AA73D68();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AA73D14()
{
  unint64_t result = qword_267655828;
  if (!qword_267655828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655828);
  }
  return result;
}

unint64_t sub_20AA73D68()
{
  unint64_t result = qword_267655830;
  if (!qword_267655830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655830);
  }
  return result;
}

uint64_t TrackData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA73F88(0, &qword_267655838, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA73D14();
  sub_20AB86DA0();
  if (!v2)
  {
    char v16 = 0;
    int v10 = sub_20AB86B90();
    char v14 = 1;
    sub_20AA73FEC();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v12 = v15;
    *(_DWORD *)a2 = v10;
    *(unsigned char *)(a2 + 4) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA73F88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA73D14();
    unint64_t v7 = a3(a1, &type metadata for TrackData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA73FEC()
{
  unint64_t result = qword_267655840;
  if (!qword_267655840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655840);
  }
  return result;
}

uint64_t sub_20AA74048@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TrackData.init(from:)(a1, a2);
}

uint64_t sub_20AA74060(void *a1)
{
  return TrackData.encode(to:)(a1);
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TrackData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TrackData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackData()
{
  return &type metadata for TrackData;
}

unsigned char *storeEnumTagSinglePayload for TrackData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA741F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackData.CodingKeys()
{
  return &type metadata for TrackData.CodingKeys;
}

unint64_t sub_20AA7422C()
{
  unint64_t result = qword_267655848;
  if (!qword_267655848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655848);
  }
  return result;
}

unint64_t sub_20AA74284()
{
  unint64_t result = qword_267655850;
  if (!qword_267655850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655850);
  }
  return result;
}

unint64_t sub_20AA742DC()
{
  unint64_t result = qword_267655858;
  if (!qword_267655858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655858);
  }
  return result;
}

uint64_t sub_20AA74330(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7275446B63617274 && a2 == 0xED00006E6F697461;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261566B63617274 && a2 == 0xEC000000746E6169)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t dispatch thunk of ExternalAnalyticsQueryItemsGeneratorType.generateQueryItems<A>(from:externalID:sessionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 8))(a1);
}

unsigned char *storeEnumTagSinglePayload for QueryItemsGeneratorError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA74534);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryItemsGeneratorError()
{
  return &type metadata for QueryItemsGeneratorError;
}

unint64_t sub_20AA74570()
{
  unint64_t result = qword_267655860;
  if (!qword_267655860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655860);
  }
  return result;
}

void sub_20AA745D4()
{
  uint64_t v0 = (void *)sub_20AB853B0();
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_standardUserDefaults);
  int v3 = (void *)sub_20AB866D0();
  id v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_20AB86910();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_20AA74F58((uint64_t)&v18, (uint64_t)v20);
  if (v21)
  {
    sub_20AA7502C(0, (unint64_t *)&qword_26AC51708, MEMORY[0x263F8E5C0], MEMORY[0x263F8D488]);
    if (swift_dynamicCast())
    {
      BOOL v5 = sub_20AA74C38(v0, v17);
      swift_bridgeObjectRelease();
      if (v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
  }
  else
  {
    sub_20A984F98((uint64_t)v20);
  }
  *(void *)(swift_allocObject() + 16) = v0;
  swift_bridgeObjectRetain();
  sub_20AB85F40();
  swift_release();
  id v6 = objc_msgSend(v1, sel_standardUserDefaults);
  unint64_t v7 = (void *)sub_20AB86760();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_20AB866D0();
  objc_msgSend(v6, sel_setObject_forKey_, v7, v8);

LABEL_10:
  uint64_t v9 = sub_20AB853C0();
  id v10 = objc_msgSend(v1, sel_standardUserDefaults);
  int v11 = (void *)sub_20AB866D0();
  id v12 = objc_msgSend(v10, sel_valueForKey_, v11);

  if (v12)
  {
    sub_20AB86910();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_20AA74F58((uint64_t)&v18, (uint64_t)v20);
  if (v21)
  {
    sub_20AA7502C(0, (unint64_t *)&qword_26AC516F0, MEMORY[0x263F8E548], MEMORY[0x263F8D488]);
    if (swift_dynamicCast())
    {
      BOOL v13 = sub_20AA74CAC(v9, (uint64_t)v17);
      swift_bridgeObjectRelease();
      if (v13)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  else
  {
    sub_20A984F98((uint64_t)v20);
  }
  *(void *)(swift_allocObject() + 16) = v9;
  swift_bridgeObjectRetain();
  sub_20AB85F40();
  swift_release();
  id v14 = objc_msgSend(v1, sel_standardUserDefaults);
  char v15 = (void *)sub_20AB86760();
  swift_bridgeObjectRelease();
  char v16 = (void *)sub_20AB866D0();
  objc_msgSend(v14, sel_setObject_forKey_, v15, v16);
}

uint64_t sub_20AA749EC()
{
  sub_20AA750CC();
  swift_bridgeObjectRetain();
  sub_20AB859E0();
  swift_bridgeObjectRelease();
  type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(0);
  sub_20AA75120(&qword_26AC51240, (void (*)(uint64_t))type metadata accessor for UserSegmentationTreatmentIDsChangeEvent);
  memset(v1, 0, sizeof(v1));
  sub_20AB85A00();
  return sub_20A984F98((uint64_t)v1);
}

uint64_t sub_20AA74AE4()
{
  sub_20AA75078();
  swift_bridgeObjectRetain();
  sub_20AB859E0();
  swift_bridgeObjectRelease();
  type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(0);
  sub_20AA75120(&qword_26AC51318, (void (*)(uint64_t))type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent);
  memset(v1, 0, sizeof(v1));
  sub_20AB85A00();
  return sub_20A984F98((uint64_t)v1);
}

uint64_t sub_20AA74BDC()
{
  swift_release();

  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t type metadata accessor for SegmentationObserver()
{
  return self;
}

BOOL sub_20AA74C38(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  BOOL v5 = a1 + 5;
  id v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

BOOL sub_20AA74CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  BOOL v5 = (int *)(a1 + 36);
  id v6 = (int *)(a2 + 36);
  do
  {
    int v8 = *v5++;
    int v7 = v8;
    int v10 = *v6++;
    int v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_20AA74D20(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20AB85480();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(void *)(v3 + 16) = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_retain();
  sub_20AB85570();
  sub_20AA745D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85560();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v3;
  sub_20AB86150();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_20AA74ED8()
{
  swift_unownedRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20AA74F10()
{
  swift_unownedRetainStrong();
  sub_20AA745D4();

  return swift_release();
}

uint64_t sub_20AA74F58(uint64_t a1, uint64_t a2)
{
  sub_20AA7502C(0, (unint64_t *)&qword_26AC519F0, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA74FE4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20AA7501C()
{
  return sub_20AA749EC();
}

uint64_t sub_20AA75024()
{
  return sub_20AA74AE4();
}

void sub_20AA7502C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_20AA75078()
{
  unint64_t result = qword_26AC50FA0;
  if (!qword_26AC50FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FA0);
  }
  return result;
}

unint64_t sub_20AA750CC()
{
  unint64_t result = qword_26AC50F70;
  if (!qword_26AC50F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F70);
  }
  return result;
}

uint64_t sub_20AA75120(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t EventPath.rawValue.getter()
{
  uint64_t result = 0x686372616573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x61576567616E616DLL;
      break;
    case 2:
    case 0xC:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0x72656B636974;
      break;
    case 4:
      uint64_t result = 0x694C6C6F626D7973;
      break;
    case 5:
      uint64_t v2 = 0x6C6F626D7973;
      goto LABEL_7;
    case 6:
      uint64_t v2 = 0x756F59726F66;
LABEL_7:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6546000000000000;
      break;
    case 7:
      uint64_t result = 0x656C6369747261;
      break;
    case 8:
      uint64_t result = 1953460082;
      break;
    case 9:
      uint64_t result = 0x656D6F636C6577;
      break;
    case 0xA:
      uint64_t result = 0xD000000000000013;
      break;
    case 0xB:
      uint64_t result = 0xD000000000000013;
      break;
    case 0xD:
      uint64_t result = 0x6C63697472416E69;
      break;
    case 0xE:
      uint64_t result = 0x6E65746E49707061;
      break;
    case 0xF:
      uint64_t result = 0x6E65746E49707061;
      break;
    default:
      return result;
  }
  return result;
}

StocksAnalytics::EventPath_optional __swiftcall EventPath.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 16;
  if (v3 < 0x10) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_20AA753B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA33C44(*a1, *a2);
}

unint64_t sub_20AA753C8()
{
  unint64_t result = qword_267655868;
  if (!qword_267655868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655868);
  }
  return result;
}

uint64_t sub_20AA7541C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA75484()
{
  EventPath.rawValue.getter();
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA754E8()
{
  return sub_20AB86D80();
}

StocksAnalytics::EventPath_optional sub_20AA7554C(Swift::String *a1)
{
  return EventPath.init(rawValue:)(*a1);
}

uint64_t sub_20AA75558@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EventPath.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20AA75580()
{
  return sub_20AB86750();
}

uint64_t sub_20AA755E0()
{
  return sub_20AB86740();
}

uint64_t getEnumTagSinglePayload for EventPath(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventPath(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA7578CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventPath()
{
  return &type metadata for EventPath;
}

unint64_t sub_20AA757C4()
{
  unint64_t result = qword_267655870;
  if (!qword_267655870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655870);
  }
  return result;
}

StocksAnalytics::ArticleAccessType_optional __swiftcall ArticleAccessType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t ArticleAccessType.rawValue.getter()
{
  uint64_t v1 = 1701147238;
  if (*v0 != 1) {
    uint64_t v1 = 1684627824;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AA758C0(char *a1, unsigned __int8 *a2)
{
  return sub_20AA3740C(*a1, *a2);
}

unint64_t sub_20AA758D0()
{
  unint64_t result = qword_267655878;
  if (!qword_267655878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655878);
  }
  return result;
}

uint64_t sub_20AA75924()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA759B8()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA75A38()
{
  return sub_20AB86D80();
}

StocksAnalytics::ArticleAccessType_optional sub_20AA75AC8(Swift::String *a1)
{
  return ArticleAccessType.init(rawValue:)(*a1);
}

void sub_20AA75AD4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 1701147238;
  if (v2 != 1) {
    uint64_t v4 = 1684627824;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_20AA75B24()
{
  return sub_20AB86750();
}

uint64_t sub_20AA75B84()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ArticleAccessType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA75CA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleAccessType()
{
  return &type metadata for ArticleAccessType;
}

unint64_t sub_20AA75CD8()
{
  unint64_t result = qword_26AC4F7F0;
  if (!qword_26AC4F7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F7F0);
  }
  return result;
}

StocksAnalytics::SubscribeButtonLocation_optional __swiftcall SubscribeButtonLocation.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t SubscribeButtonLocation.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C6369747261;
      break;
    case 2:
      uint64_t result = 1684366694;
      break;
    case 3:
      uint64_t result = 0x50676E69646E616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA75E14(unsigned __int8 *a1, char *a2)
{
  return sub_20AA35598(*a1, *a2);
}

unint64_t sub_20AA75E24()
{
  unint64_t result = qword_267655880;
  if (!qword_267655880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655880);
  }
  return result;
}

uint64_t sub_20AA75E78()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA75F50()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA76010()
{
  return sub_20AB86D80();
}

StocksAnalytics::SubscribeButtonLocation_optional sub_20AA760E4(Swift::String *a1)
{
  return SubscribeButtonLocation.init(rawValue:)(*a1);
}

void sub_20AA760F0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x656C6369747261;
      goto LABEL_3;
    case 2:
      *a1 = 1684366694;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x50676E69646E616CLL;
      a1[1] = 0xEB00000000656761;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t sub_20AA76188()
{
  return sub_20AB86750();
}

uint64_t sub_20AA761E8()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for SubscribeButtonLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA76304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonLocation()
{
  return &type metadata for SubscribeButtonLocation;
}

unint64_t sub_20AA7633C()
{
  unint64_t result = qword_267655888;
  if (!qword_267655888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655888);
  }
  return result;
}

uint64_t ExternalAnalyticsURLProvider.__allocating_init(queryItemsGenerators:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ExternalAnalyticsURLProvider.init(queryItemsGenerators:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t ExternalAnalyticsURLProvider.generateURL<A>(from:configuration:sessionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v77 = a7;
  uint64_t v13 = sub_20AB85140();
  uint64_t v75 = *(void *)(v13 - 8);
  uint64_t v76 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v73 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA7871C(0, (unint64_t *)&qword_26AC4E3A8, MEMORY[0x263F06EA8]);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  long long v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v57 - v19;
  uint64_t v74 = a2;
  uint64_t v21 = sub_20AB85580();
  if (v22)
  {
    sub_20AA76A20(v93, a1, v21, v22, a3, a4, a5, a6, (uint64_t)&v78);
    swift_bridgeObjectRelease();
    uint64_t v23 = v78;
    if (v78)
    {
      uint64_t v24 = v79;
      uint64_t v25 = v80;
      uint64_t v69 = v79;
      unint64_t v67 = v20;
      uint64_t v70 = v80;
      uint64_t v26 = v82;
      uint64_t v71 = v81;
      uint64_t v72 = v83;
      uint64_t v58 = v84;
      uint64_t v28 = v85;
      uint64_t v27 = v86;
      uint64_t v66 = v18;
      uint64_t v29 = v87;
      uint64_t v63 = v88;
      uint64_t v30 = v90;
      uint64_t v62 = v89;
      uint64_t v31 = v92;
      uint64_t v59 = v91;
      swift_bridgeObjectRetain();
      sub_20A99BE1C(v24, v25);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v65 = v29;
      uint64_t v32 = v27;
      uint64_t v33 = (uint64_t)v66;
      uint64_t v34 = (uint64_t)v67;
      uint64_t v68 = v26;
      uint64_t v35 = v58;
      uint64_t v64 = v28;
      uint64_t v60 = v32;
      sub_20A99D1CC(v69, v70);
      swift_bridgeObjectRelease();
      uint64_t v61 = v30;
      swift_bridgeObjectRelease_n();
      uint64_t v36 = v23;
      uint64_t v37 = v23;
      uint64_t v38 = v59;
      sub_20AA76BC4(v74, v37, v59, v31, v34);
      uint64_t v93 = v31;
      swift_bridgeObjectRelease();
      sub_20AA77884(v34, v33);
      uint64_t v40 = v75;
      uint64_t v39 = v76;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v33, 1, v76) == 1)
      {
        sub_20AA77904(v36, v69, v70);
        unint64_t v41 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
        sub_20AA78770(v33, (unint64_t *)&qword_26AC4E3A8, MEMORY[0x263F06EA8]);
        sub_20AA769CC();
        swift_allocError();
        *uint64_t v42 = 2;
        swift_willThrow();
        return sub_20AA78770(v34, (unint64_t *)&qword_26AC4E3A8, v41);
      }
      else
      {
        sub_20AA78770(v34, (unint64_t *)&qword_26AC4E3A8, MEMORY[0x263F06EA8]);
        uint64_t v46 = v35;
        uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 32);
        uint64_t v48 = v73;
        v47(v73, v33, v39);
        unint64_t v49 = v77;
        v47(v77, (uint64_t)v48, v39);
        swift_bridgeObjectRelease();
        uint64_t v50 = type metadata accessor for ExternalURLData();
        uint64_t v51 = &v49[*(int *)(v50 + 20)];
        uint64_t v52 = v70;
        *(void *)uint64_t v51 = v69;
        *((void *)v51 + 1) = v52;
        uint64_t v53 = v68;
        *((void *)v51 + 2) = v71;
        *((void *)v51 + 3) = v53;
        *((void *)v51 + 4) = v72;
        *((void *)v51 + 5) = v46;
        uint64_t v54 = v60;
        *((void *)v51 + 6) = v64;
        *((void *)v51 + 7) = v54;
        *((_DWORD *)v51 + 16) = v65;
        v51[72] = v63;
        uint64_t v55 = v61;
        *((void *)v51 + 10) = v62;
        *((void *)v51 + 11) = v55;
        uint64_t v56 = v93;
        *((void *)v51 + 12) = v38;
        *((void *)v51 + 13) = v56;
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 0, 1, v50);
      }
    }
    else
    {
      uint64_t v45 = type metadata accessor for ExternalURLData();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v77, 1, 1, v45);
    }
  }
  else
  {
    sub_20AA769CC();
    swift_allocError();
    *char v44 = 0;
    return swift_willThrow();
  }
}

unint64_t sub_20AA769CC()
{
  unint64_t result = qword_267655890;
  if (!qword_267655890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655890);
  }
  return result;
}

uint64_t sub_20AA76A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t result = *(void *)(a1 + 16);
  if (*(void *)(result + 16))
  {
    uint64_t v14 = result + 32;
    swift_bridgeObjectRetain();
    sub_20AA65AD8(v14, (uint64_t)v30);
    uint64_t v15 = v31;
    uint64_t v16 = v32;
    __swift_project_boxed_opaque_existential_1(v30, v31);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8))(v28, a2, a3, a4, a5, a6, a7, a8, v15, v16);
    swift_bridgeObjectRelease();
    uint64_t v17 = v29;
    long long v18 = v28[1];
    long long v19 = v28[2];
    long long v20 = v28[3];
    long long v21 = v28[4];
    long long v22 = v28[5];
    long long v23 = v28[6];
    *(_OWORD *)a9 = v28[0];
    *(_OWORD *)(a9 + 16) = v18;
    *(_OWORD *)(a9 + 32) = v19;
    *(_OWORD *)(a9 + 48) = v20;
    *(_OWORD *)(a9 + 64) = v21;
    *(_OWORD *)(a9 + 80) = v22;
    *(_OWORD *)(a9 + 96) = v23;
    *(void *)(a9 + 112) = v17;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  else
  {
    *(void *)(a9 + 112) = 0;
    *(_OWORD *)(a9 + 80) = 0u;
    *(_OWORD *)(a9 + 96) = 0u;
    *(_OWORD *)(a9 + 48) = 0u;
    *(_OWORD *)(a9 + 64) = 0u;
    *(_OWORD *)(a9 + 16) = 0u;
    *(_OWORD *)(a9 + 32) = 0u;
    *(_OWORD *)a9 = 0u;
  }
  return result;
}

uint64_t type metadata accessor for ExternalURLData()
{
  uint64_t result = qword_26AC4F1B0;
  if (!qword_26AC4F1B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20AA76BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v98 = a4;
  uint64_t v97 = a2;
  sub_20AA7871C(0, (unint64_t *)&qword_26AC4E3A8, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v102 = (char *)v83 - v9;
  uint64_t v115 = sub_20AB85140();
  uint64_t v10 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  BOOL v12 = (char *)v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_20AB850A0();
  uint64_t v116 = *(void *)(v120 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v120);
  v119 = (char *)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v118 = (char *)v83 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  int v96 = (char *)v83 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v95 = (char *)v83 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v101 = (char *)v83 - v22;
  MEMORY[0x270FA5388](v21);
  unint64_t v100 = (char *)v83 - v23;
  uint64_t v24 = sub_20AB85620();
  uint64_t v117 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA7871C(0, &qword_26AC527F0, MEMORY[0x263F06370]);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  unint64_t v99 = (char *)v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)v83 - v30;
  uint64_t v32 = sub_20AB850E0();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  unint64_t v94 = (char *)v83 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v93 = (char *)v83 - v36;
  uint64_t v111 = a1;
  sub_20AB855B0();
  if (!v37) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, 1, 1, v115);
  }
  sub_20AB850D0();
  swift_bridgeObjectRelease();
  unint64_t v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  uint64_t v105 = v33 + 48;
  if (v104(v31, 1, v32) == 1)
  {
    sub_20AA78770((uint64_t)v31, &qword_26AC527F0, MEMORY[0x263F06370]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a5, 1, 1, v115);
  }
  uint64_t v86 = v33;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
  uint64_t v40 = v93;
  uint64_t v103 = v32;
  v39(v93, v31, v32);
  uint64_t v41 = *(void *)(sub_20AB855D0() + 16);
  swift_bridgeObjectRelease();
  if (v41)
  {
    uint64_t v91 = v12;
    uint64_t v42 = sub_20AB855D0();
    uint64_t v43 = *(void *)(v42 + 16);
    if (v43)
    {
      uint64_t v90 = a3;
      v83[2] = a5;
      uint64_t v114 = *(void (**)(char *, unint64_t, uint64_t))(v117 + 16);
      unint64_t v44 = (*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
      v83[1] = v42;
      unint64_t v45 = v42 + v44;
      uint64_t v113 = *(void *)(v117 + 72);
      uint64_t v107 = v116 + 32;
      uint64_t v108 = (void (**)(char *, char *, uint64_t))(v116 + 16);
      uint64_t v106 = v116 + 8;
      uint64_t v92 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      uint64_t v89 = (void (**)(char *, uint64_t, uint64_t))(v86 + 16);
      uint64_t v88 = (void (**)(char *, uint64_t))(v86 + 8);
      uint64_t v87 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      uint64_t v85 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
      uint64_t v84 = (void (**)(char *, uint64_t))(v10 + 8);
      unint64_t v46 = MEMORY[0x263F8EE78];
      v117 += 16;
      uint64_t v112 = (void (**)(char *, uint64_t))(v117 - 8);
      uint64_t v109 = v24;
      uint64_t v47 = (uint64_t)v99;
      v114(v26, v42 + v44, v24);
      while (1)
      {
        uint64_t v48 = sub_20AB855E0();
        if (v49)
        {
          uint64_t v50 = v49;
          if (sub_20AB85600() == v48 && v50 == v51)
          {
            swift_bridgeObjectRelease();
LABEL_18:
            unint64_t v110 = v46;
            sub_20AB85610();
            sub_20AB850D0();
            swift_bridgeObjectRelease();
            uint64_t v53 = v103;
            uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v104;
            if (!v104((char *)v47, 1, v103))
            {
              unint64_t v121 = MEMORY[0x263F8EE78];
              uint64_t v55 = swift_bridgeObjectRetain();
              sub_20AA3A988(v55);
              uint64_t v56 = v100;
              sub_20AB85090();
              (*v108)(v101, v56, v120);
              unint64_t v57 = v121;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v57 = sub_20AA0C290(0, *(void *)(v57 + 16) + 1, 1, v57);
              }
              unint64_t v59 = *(void *)(v57 + 16);
              unint64_t v58 = *(void *)(v57 + 24);
              if (v59 >= v58 >> 1) {
                unint64_t v57 = sub_20AA0C290(v58 > 1, v59 + 1, 1, v57);
              }
              *(void *)(v57 + 16) = v59 + 1;
              uint64_t v60 = v116;
              unint64_t v61 = v57
                  + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))
                  + *(void *)(v60 + 72) * v59;
              uint64_t v62 = v120;
              (*(void (**)(unint64_t, char *, uint64_t))(v116 + 32))(v61, v101, v120);
              unint64_t v121 = v57;
              (*(void (**)(char *, uint64_t))(v60 + 8))(v100, v62);
              sub_20AB850B0();
              uint64_t v24 = v109;
              uint64_t v53 = v103;
              uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v104;
            }
            int v63 = v54(v47, 1, v53);
            uint64_t v64 = (uint64_t)v102;
            if (v63)
            {
              (*v92)(v102, 1, 1, v115);
            }
            else
            {
              uint64_t v65 = v26;
              uint64_t v66 = v94;
              (*v89)(v94, v47, v53);
              sub_20AB850C0();
              unint64_t v67 = v66;
              uint64_t v26 = v65;
              uint64_t v47 = (uint64_t)v99;
              (*v88)(v67, v53);
              if ((*v87)(v64, 1, v115) != 1)
              {
                (*v85)(v91, v64, v115);
                sub_20AB85110();
                uint64_t v68 = v95;
                sub_20AB85090();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                (*v108)(v96, v68, v120);
                unint64_t v46 = v110;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v46 = sub_20AA0C290(0, *(void *)(v46 + 16) + 1, 1, v46);
                }
                unint64_t v70 = *(void *)(v46 + 16);
                unint64_t v69 = *(void *)(v46 + 24);
                uint64_t v71 = v109;
                if (v70 >= v69 >> 1) {
                  unint64_t v46 = sub_20AA0C290(v69 > 1, v70 + 1, 1, v46);
                }
                *(void *)(v46 + 16) = v70 + 1;
                uint64_t v72 = v116;
                uint64_t v73 = v120;
                (*(void (**)(unint64_t, char *, uint64_t))(v116 + 32))(v46+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v70, v96, v120);
                (*(void (**)(char *, uint64_t))(v72 + 8))(v95, v73);
                (*v84)(v91, v115);
                uint64_t v24 = v71;
                (*v112)(v26, v71);
                goto LABEL_10;
              }
            }
            swift_bridgeObjectRelease();
            (*v112)(v26, v24);
            sub_20AA78770(v64, (unint64_t *)&qword_26AC4E3A8, MEMORY[0x263F06EA8]);
            unint64_t v46 = v110;
LABEL_10:
            sub_20AA78770(v47, &qword_26AC527F0, MEMORY[0x263F06370]);
            goto LABEL_11;
          }
          char v52 = sub_20AB86CA0();
          swift_bridgeObjectRelease();
          if (v52) {
            goto LABEL_18;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v74 = v47;
        sub_20AB85600();
        sub_20AB85610();
        unint64_t v75 = v46;
        uint64_t v76 = v118;
        sub_20AB85090();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v77 = v76;
        unint64_t v46 = v75;
        (*v108)(v119, v77, v120);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v46 = sub_20AA0C290(0, *(void *)(v75 + 16) + 1, 1, v75);
        }
        unint64_t v79 = *(void *)(v46 + 16);
        unint64_t v78 = *(void *)(v46 + 24);
        uint64_t v80 = v109;
        uint64_t v47 = v74;
        if (v79 >= v78 >> 1) {
          unint64_t v46 = sub_20AA0C290(v78 > 1, v79 + 1, 1, v46);
        }
        *(void *)(v46 + 16) = v79 + 1;
        uint64_t v81 = v116;
        uint64_t v82 = v120;
        (*(void (**)(unint64_t, char *, uint64_t))(v116 + 32))(v46+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v79, v119, v120);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v118, v82);
        uint64_t v24 = v80;
        (*v112)(v26, v80);
LABEL_11:
        v45 += v113;
        if (!--v43)
        {
          swift_bridgeObjectRelease();
          uint64_t v40 = v93;
          goto LABEL_40;
        }
        v114(v26, v45, v24);
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20AA779C4();
  }
LABEL_40:
  sub_20AB850B0();
  sub_20AB850C0();
  return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v40, v103);
}

uint64_t sub_20AA77884(uint64_t a1, uint64_t a2)
{
  sub_20AA7871C(0, (unint64_t *)&qword_26AC4E3A8, MEMORY[0x263F06EA8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA77904(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    sub_20A99D1CC(a2, a3);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_20AA779C4()
{
  uint64_t v0 = sub_20AB850A0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v12 - v5;
  unint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_20AA3A988(v7);
  sub_20AB85090();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  unint64_t v8 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v8 = sub_20AA0C290(0, *(void *)(v8 + 16) + 1, 1, v8);
  }
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    unint64_t v8 = sub_20AA0C290(v9 > 1, v10 + 1, 1, v8);
  }
  *(void *)(v8 + 16) = v10 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v8+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v10, v4, v0);
  unint64_t v13 = v8;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v13;
}

uint64_t ExternalAnalyticsURLProvider.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ExternalAnalyticsURLProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t sub_20AA77C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  return ExternalAnalyticsURLProvider.generateURL<A>(from:configuration:sessionID:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t *initializeBufferWithCopyOfBuffer for ExternalURLData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85140();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    if (v11)
    {
      *(void *)unint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v11;
      uint64_t v12 = *((void *)v10 + 3);
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = v12;
      v9[32] = v10[32];
      *((void *)v9 + 5) = *((void *)v10 + 5);
      v9[48] = v10[48];
      *((void *)v9 + 7) = *((void *)v10 + 7);
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v14;
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      long long v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
    }
    v9[72] = v10[72];
    uint64_t v16 = *((void *)v10 + 11);
    *((void *)v9 + 10) = *((void *)v10 + 10);
    *((void *)v9 + 11) = v16;
    uint64_t v17 = *((void *)v10 + 13);
    *((void *)v9 + 12) = *((void *)v10 + 12);
    *((void *)v9 + 13) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ExternalURLData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85140();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  if (*(void *)(a1 + *(int *)(a2 + 20) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalURLData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  if (v10)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
    uint64_t v11 = *(void *)(v9 + 24);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = v11;
    *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
    *(void *)(v8 + 40) = *(void *)(v9 + 40);
    *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v12;
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    long long v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
  }
  *(unsigned char *)(v8 + 72) = *(unsigned char *)(v9 + 72);
  uint64_t v14 = *(void *)(v9 + 88);
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(void *)(v8 + 88) = v14;
  uint64_t v15 = *(void *)(v9 + 104);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalURLData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a1 + v7 + 8);
  uint64_t v11 = *(void *)(v9 + 8);
  if (v10)
  {
    if (v11)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(void *)(v8 + 24) = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
      uint64_t v12 = *(void *)(v9 + 40);
      *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
      *(void *)(v8 + 40) = v12;
      *(void *)(v8 + 56) = *(void *)(v9 + 56);
      *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
      *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
      *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
      *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
    }
    else
    {
      sub_20A9D6C28(v8);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      long long v15 = *(_OWORD *)(v9 + 32);
      long long v14 = *(_OWORD *)(v9 + 48);
      long long v16 = *(_OWORD *)(v9 + 16);
      *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 32) = v15;
      *(_OWORD *)(v8 + 48) = v14;
      *(_OWORD *)(v8 + 16) = v16;
    }
  }
  else if (v11)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = *(void *)(v9 + 8);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = *(void *)(v9 + 24);
    *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 40);
    *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
    *(void *)(v8 + 40) = v13;
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
    *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
    *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
    *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    long long v17 = *(_OWORD *)(v9 + 16);
    long long v18 = *(_OWORD *)(v9 + 32);
    long long v19 = *(_OWORD *)(v9 + 48);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 32) = v18;
    *(_OWORD *)(v8 + 48) = v19;
    *(_OWORD *)(v8 + 16) = v17;
  }
  *(unsigned char *)(v8 + 72) = *(unsigned char *)(v9 + 72);
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ExternalURLData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[5];
  v8[4] = v9[4];
  v8[5] = v10;
  v8[6] = v9[6];
  long long v11 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v11;
  long long v12 = v9[3];
  v8[2] = v9[2];
  v8[3] = v12;
  return a1;
}

uint64_t assignWithTake for ExternalURLData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85140();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (!*(void *)(a1 + v7 + 8)) {
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)(v9 + 8);
  if (!v10)
  {
    sub_20A9D6C28(v8);
LABEL_5:
    long long v12 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v12;
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    long long v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
    goto LABEL_6;
  }
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
LABEL_6:
  *(unsigned char *)(v8 + 72) = *(unsigned char *)(v9 + 72);
  uint64_t v14 = *(void *)(v9 + 88);
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(void *)(v8 + 88) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v9 + 104);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalURLData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA7831C);
}

uint64_t sub_20AA7831C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85140();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 88);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ExternalURLData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA783F4);
}

uint64_t sub_20AA783F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85140();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 88) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA784B4()
{
  uint64_t result = sub_20AB85140();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ExternalAnalyticsURLProviderType.generateURL<A>(from:configuration:sessionID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t type metadata accessor for ExternalAnalyticsURLProvider()
{
  return self;
}

uint64_t method lookup function for ExternalAnalyticsURLProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ExternalAnalyticsURLProvider);
}

uint64_t dispatch thunk of ExternalAnalyticsURLProvider.__allocating_init(queryItemsGenerators:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

unsigned char *storeEnumTagSinglePayload for ExternalAnalyticsURLProvider.URLProviderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA7868CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsURLProvider.URLProviderError()
{
  return &type metadata for ExternalAnalyticsURLProvider.URLProviderError;
}

unint64_t sub_20AA786C8()
{
  unint64_t result = qword_267655898;
  if (!qword_267655898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655898);
  }
  return result;
}

void sub_20AA7871C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20AB868D0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20AA78770(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20AA7871C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20AA787CC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC512D8, MEMORY[0x263F24D10]);
}

uint64_t static UserSegmentationSegmentSetIDsChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC512F0, MEMORY[0x263F24D18], (uint64_t)qword_26AC512D8, a1);
}

uint64_t static UserSegmentationSegmentSetIDsChangeEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA78834(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC512F8, MEMORY[0x263F24DC8]);
}

uint64_t static UserSegmentationSegmentSetIDsChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC51310, MEMORY[0x263F24DD8], (uint64_t)qword_26AC512F8, a1);
}

uint64_t sub_20AA78894()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676558A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676558A0);
  return sub_20AB85D30();
}

uint64_t static UserSegmentationSegmentSetIDsChangeEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653518, MEMORY[0x263F24DE8], (uint64_t)qword_2676558A0, a1);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*UserSegmentationSegmentSetIDsChangeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.userSegmentationSegmentSetData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(0) + 20);
  sub_20AA78A50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC51320);
}

void sub_20AA78A50()
{
  if (!qword_26AC4E688)
  {
    sub_20AA78AB8();
    sub_20AA78B0C();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E688);
    }
  }
}

unint64_t sub_20AA78AB8()
{
  unint64_t result = qword_26AC50FB0;
  if (!qword_26AC50FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FB0);
  }
  return result;
}

unint64_t sub_20AA78B0C()
{
  unint64_t result = qword_26AC50FA8;
  if (!qword_26AC50FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FA8);
  }
  return result;
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.userSegmentationSegmentSetData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(0) + 20);
  sub_20AA78A50();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UserSegmentationSegmentSetIDsChangeEvent.userSegmentationSegmentSetData.modify())()
{
  return nullsub_1;
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent(0) + 20);
  sub_20AA78A50();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.Model.userSegmentationSegmentSetData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0) + 20));

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676558D0);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.Model.init(eventData:userSegmentationSegmentSetData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0);
  *(void *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_20AA78DD8()
{
  if (*v0) {
    return 0xD00000000000001ELL;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AA78E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA7A218(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA78E44(uint64_t a1)
{
  unint64_t v2 = sub_20AA79088();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA78E80(uint64_t a1)
{
  unint64_t v2 = sub_20AA79088();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA7942C(0, &qword_2676558B8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA79088();
  sub_20AB86DC0();
  char v13 = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + *(int *)(type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0) + 20));
    v11[15] = 1;
    sub_20AA78B0C();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA79088()
{
  unint64_t result = qword_2676558C0;
  if (!qword_2676558C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676558C0);
  }
  return result;
}

uint64_t UserSegmentationSegmentSetIDsChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_20AB85FC0();
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA7942C(0, &qword_2676558C8, MEMORY[0x263F8E040]);
  uint64_t v25 = v6;
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA79088();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v22;
  char v28 = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v24;
  sub_20AB86B80();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v20 = (uint64_t)v12;
  v15(v12, v5, v14);
  char v27 = 1;
  sub_20AA78AB8();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v25);
  uint64_t v17 = v20;
  uint64_t v16 = v21;
  *(void *)(v20 + *(int *)(v9 + 20)) = v26;
  sub_20AA79490(v17, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AA794F4(v17);
}

void sub_20AA7942C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA79088();
    unint64_t v7 = a3(a1, &type metadata for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA79490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA794F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA79550@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UserSegmentationSegmentSetIDsChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA79568(void *a1)
{
  return UserSegmentationSegmentSetIDsChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA79580@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC512F0, MEMORY[0x263F24D18], (uint64_t)qword_26AC512D8, a1);
}

uint64_t sub_20AA795B8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC51310, MEMORY[0x263F24DD8], (uint64_t)qword_26AC512F8, a1);
}

uint64_t sub_20AA795F0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653518, MEMORY[0x263F24DE8], (uint64_t)qword_2676558A0, a1);
}

uint64_t sub_20AA79628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AA78A50();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for UserSegmentationSegmentSetIDsChangeEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA78A50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AA78A50();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA78A50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA78A50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA78A50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA78A50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA79B90);
}

uint64_t sub_20AA79B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20AA78A50();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for UserSegmentationSegmentSetIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA79C9C);
}

uint64_t sub_20AA79C9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20AA78A50();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_20AA79DA0()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA78A50();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for UserSegmentationSegmentSetIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA79E7C);
}

uint64_t sub_20AA79E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for UserSegmentationSegmentSetIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA79F50);
}

uint64_t sub_20AA79F50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA7A0D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys()
{
  return &type metadata for UserSegmentationSegmentSetIDsChangeEvent.Model.CodingKeys;
}

unint64_t sub_20AA7A114()
{
  unint64_t result = qword_2676558E0;
  if (!qword_2676558E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676558E0);
  }
  return result;
}

unint64_t sub_20AA7A16C()
{
  unint64_t result = qword_2676558E8;
  if (!qword_2676558E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676558E8);
  }
  return result;
}

unint64_t sub_20AA7A1C4()
{
  unint64_t result = qword_2676558F0;
  if (!qword_2676558F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676558F0);
  }
  return result;
}

uint64_t sub_20AA7A218(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000020ABA8360)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AA7A314(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_2676558F8, MEMORY[0x263F24D10]);
}

uint64_t static ExternalAnalyticsEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653520, MEMORY[0x263F24D18], (uint64_t)qword_2676558F8, a1);
}

uint64_t static ExternalAnalyticsEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA7A37C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267655910, MEMORY[0x263F24DC8]);
}

uint64_t static ExternalAnalyticsEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653528, MEMORY[0x263F24DD8], (uint64_t)qword_267655910, a1);
}

uint64_t sub_20AA7A3DC()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655928);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655928);
  return sub_20AB85D30();
}

uint64_t static ExternalAnalyticsEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653530, MEMORY[0x263F24DE8], (uint64_t)qword_267655928, a1);
}

uint64_t ExternalAnalyticsEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ExternalAnalyticsEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ExternalAnalyticsEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAnalyticsEvent.externalAnalyticsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 20);
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ExternalAnalyticsEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655960);
}

uint64_t ExternalAnalyticsEvent.externalAnalyticsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 20);
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ExternalAnalyticsEvent.externalAnalyticsData.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAnalyticsEvent.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 24);
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ExternalAnalyticsEvent.resultData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 24);
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ExternalAnalyticsEvent.resultData.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAnalyticsEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 28);
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ExternalAnalyticsEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 28);
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ExternalAnalyticsEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAnalyticsEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 32);
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA7AAC8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t ExternalAnalyticsEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent(0) + 32);
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ExternalAnalyticsEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t ExternalAnalyticsEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ExternalAnalyticsEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v2, v13);
}

uint64_t ExternalAnalyticsEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ExternalAnalyticsEvent.Model.externalAnalyticsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent.Model(0) + 20);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ExternalAnalyticsEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655970);
}

uint64_t ExternalAnalyticsEvent.Model.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent.Model(0) + 24);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t ExternalAnalyticsEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent.Model(0) + 28);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  LODWORD(v3) = *(_DWORD *)(v3 + 64);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(_DWORD *)(a1 + 64) = v3;
  return sub_20A99BE1C(v4, v5);
}

uint64_t ExternalAnalyticsEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ExternalAnalyticsEvent.Model(0) + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 ExternalAnalyticsEvent.Model.init(eventData:externalAnalyticsData:resultData:newsArticleData:channelData:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, long long *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  char v8 = *a2;
  long long v23 = *(_OWORD *)(a2 + 8);
  uint64_t v9 = *((void *)a2 + 3);
  uint64_t v10 = *((void *)a2 + 4);
  char v11 = *a3;
  uint64_t v12 = *((void *)a3 + 1);
  uint64_t v13 = *((void *)a3 + 2);
  long long v26 = a4[1];
  long long v27 = *a4;
  long long v25 = a4[2];
  uint64_t v14 = *((void *)a4 + 6);
  uint64_t v15 = *((void *)a4 + 7);
  int v24 = *((_DWORD *)a4 + 16);
  __n128 v32 = *a5;
  unint64_t v30 = a5[1].n128_u64[1];
  unint64_t v31 = a5[1].n128_u64[0];
  unsigned __int8 v28 = a5[2].n128_u8[1];
  unsigned __int8 v29 = a5[2].n128_u8[0];
  uint64_t v16 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a6, a1, v16);
  uint64_t v17 = (int *)type metadata accessor for ExternalAnalyticsEvent.Model(0);
  uint64_t v18 = a6 + v17[5];
  *(unsigned char *)uint64_t v18 = v8;
  *(_OWORD *)(v18 + 8) = v23;
  *(void *)(v18 + 24) = v9;
  *(void *)(v18 + 32) = v10;
  uint64_t v19 = a6 + v17[6];
  *(unsigned char *)uint64_t v19 = v11;
  *(void *)(v19 + 8) = v12;
  *(void *)(v19 + 16) = v13;
  uint64_t v20 = a6 + v17[7];
  *(_OWORD *)uint64_t v20 = v27;
  *(_OWORD *)(v20 + 16) = v26;
  *(_OWORD *)(v20 + 32) = v25;
  *(void *)(v20 + 48) = v14;
  *(void *)(v20 + 56) = v15;
  *(_DWORD *)(v20 + 64) = v24;
  uint64_t v21 = (__n128 *)(a6 + v17[8]);
  __n128 result = v32;
  *uint64_t v21 = v32;
  v21[1].n128_u64[0] = v31;
  v21[1].n128_u64[1] = v30;
  v21[2].n128_u8[0] = v29;
  v21[2].n128_u8[1] = v28;
  return result;
}

unint64_t sub_20AA7B1E4()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6144746C75736572;
      break;
    case 3:
      unint64_t result = 0x697472417377656ELL;
      break;
    case 4:
      unint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA7B2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA7E568(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA7B2D8(uint64_t a1)
{
  unint64_t v2 = sub_20AA7B63C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA7B314(uint64_t a1)
{
  unint64_t v2 = sub_20AA7B63C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ExternalAnalyticsEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA7BC20(0, &qword_267655948, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v27[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA7B63C();
  sub_20AB86DC0();
  v27[0] = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for ExternalAnalyticsEvent.Model(0);
    char v11 = (char *)(v3 + v10[5]);
    char v12 = *v11;
    long long v13 = *(_OWORD *)(v11 + 8);
    uint64_t v15 = *((void *)v11 + 3);
    uint64_t v14 = *((void *)v11 + 4);
    v27[0] = v12;
    *(_OWORD *)&v27[8] = v13;
    *(void *)&v27[24] = v15;
    *(void *)&long long v28 = v14;
    char v31 = 1;
    sub_20AA44818();
    sub_20AB86C50();
    uint64_t v16 = v3 + v10[6];
    v27[0] = *(unsigned char *)v16;
    *(_OWORD *)&v27[8] = *(_OWORD *)(v16 + 8);
    char v31 = 2;
    sub_20AA250D4();
    sub_20AB86C50();
    uint64_t v17 = v3 + v10[7];
    int v18 = *(_DWORD *)(v17 + 64);
    long long v19 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)long long v27 = *(_OWORD *)v17;
    *(_OWORD *)&v27[16] = v19;
    long long v20 = *(_OWORD *)(v17 + 48);
    long long v28 = *(_OWORD *)(v17 + 32);
    long long v29 = v20;
    int v30 = v18;
    char v31 = 3;
    sub_20A97A1AC();
    sub_20AB86BE0();
    uint64_t v21 = (long long *)(v3 + v10[8]);
    long long v22 = *v21;
    uint64_t v23 = *((void *)v21 + 2);
    uint64_t v24 = *((void *)v21 + 3);
    char v25 = *((unsigned char *)v21 + 32);
    LOBYTE(v21) = *((unsigned char *)v21 + 33);
    *(_OWORD *)long long v27 = v22;
    *(void *)&v27[16] = v23;
    *(void *)&v27[24] = v24;
    LOBYTE(v28) = v25;
    BYTE1(v28) = (_BYTE)v21;
    char v31 = 4;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA7B63C()
{
  unint64_t result = qword_267655950;
  if (!qword_267655950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655950);
  }
  return result;
}

uint64_t ExternalAnalyticsEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA7BC20(0, &qword_267655958, MEMORY[0x263F8E040]);
  uint64_t v36 = v6;
  uint64_t v33 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = (int *)type metadata accessor for ExternalAnalyticsEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA7B63C();
  uint64_t v37 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v34;
  char v31 = a1;
  v38[0] = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  long long v13 = v35;
  uint64_t v14 = v36;
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v11, v13, v4);
  char v42 = 1;
  sub_20AA447C0();
  sub_20AB86B80();
  long long v15 = *(_OWORD *)&v38[8];
  uint64_t v16 = *(void *)&v38[24];
  uint64_t v17 = v39;
  int v18 = &v11[v9[5]];
  *int v18 = v38[0];
  *(_OWORD *)(v18 + 8) = v15;
  *((void *)v18 + 3) = v16;
  *((void *)v18 + 4) = v17;
  char v42 = 2;
  sub_20AA25080();
  sub_20AB86B80();
  long long v19 = &v11[v9[6]];
  *long long v19 = v38[0];
  *(_OWORD *)(v19 + 8) = *(_OWORD *)&v38[8];
  char v42 = 3;
  sub_20A97A154();
  sub_20AB86B10();
  int v20 = v41;
  uint64_t v21 = &v11[v9[7]];
  long long v22 = *(_OWORD *)&v38[16];
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v38;
  *((_OWORD *)v21 + 1) = v22;
  long long v23 = v40;
  *((_OWORD *)v21 + 2) = v39;
  *((_OWORD *)v21 + 3) = v23;
  *((_DWORD *)v21 + 16) = v20;
  char v42 = 4;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v14);
  uint64_t v24 = *(void *)&v38[16];
  uint64_t v25 = *(void *)&v38[24];
  char v26 = v39;
  char v27 = BYTE1(v39);
  long long v28 = &v11[v9[8]];
  *(_OWORD *)long long v28 = *(_OWORD *)v38;
  *((void *)v28 + 2) = v24;
  *((void *)v28 + 3) = v25;
  v28[32] = v26;
  v28[33] = v27;
  sub_20AA7BC84((uint64_t)v11, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_20AA7BCE8((uint64_t)v11);
}

void sub_20AA7BC20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA7B63C();
    unint64_t v7 = a3(a1, &type metadata for ExternalAnalyticsEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA7BC84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExternalAnalyticsEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA7BCE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExternalAnalyticsEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA7BD44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ExternalAnalyticsEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA7BD5C(void *a1)
{
  return ExternalAnalyticsEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA7BD74@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653520, MEMORY[0x263F24D18], (uint64_t)qword_2676558F8, a1);
}

uint64_t sub_20AA7BDAC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653528, MEMORY[0x263F24DD8], (uint64_t)qword_267655910, a1);
}

uint64_t sub_20AA7BDE4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653530, MEMORY[0x263F24DE8], (uint64_t)qword_267655928, a1);
}

uint64_t sub_20AA7BE1C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  long long v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v4, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for ExternalAnalyticsEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    int v18 = (char *)a2 + v16;
    sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    long long v22 = (char *)a2 + v20;
    sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for ExternalAnalyticsEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for ExternalAnalyticsEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for ExternalAnalyticsEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for ExternalAnalyticsEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for ExternalAnalyticsEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA7CFAC);
}

uint64_t sub_20AA7CFAC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA7D284);
}

uint64_t sub_20AA7D284(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA7AAC8(0, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  sub_20AA7AAC8(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  sub_20AA7AAC8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  sub_20AA7AAC8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_20AA7D554()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA7AAC8(319, &qword_267655940, (void (*)(void))sub_20AA447C0, (void (*)(void))sub_20AA44818);
    if (v1 <= 0x3F)
    {
      sub_20AA7AAC8(319, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
      if (v2 <= 0x3F)
      {
        sub_20AA7AAC8(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
        if (v3 <= 0x3F)
        {
          sub_20AA7AAC8(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ExternalAnalyticsEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    uint64_t v12 = *((void *)v11 + 2);
    *((void *)v10 + 1) = *((void *)v11 + 1);
    *((void *)v10 + 2) = v12;
    uint64_t v13 = *((void *)v11 + 4);
    *((void *)v10 + 3) = *((void *)v11 + 3);
    *((void *)v10 + 4) = v13;
    uint64_t v14 = (char *)a1 + v9;
    uint64_t v15 = (char *)a2 + v9;
    *uint64_t v14 = *v15;
    uint64_t v16 = *((void *)v15 + 2);
    *((void *)v14 + 1) = *((void *)v15 + 1);
    *((void *)v14 + 2) = v16;
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v17 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = v20;
      uint64_t v21 = *((void *)v19 + 3);
      *((void *)v18 + 2) = *((void *)v19 + 2);
      *((void *)v18 + 3) = v21;
      v18[32] = v19[32];
      *((void *)v18 + 5) = *((void *)v19 + 5);
      v18[48] = v19[48];
      *((void *)v18 + 7) = *((void *)v19 + 7);
      *((_DWORD *)v18 + 16) = *((_DWORD *)v19 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v23;
      *((_DWORD *)v18 + 16) = *((_DWORD *)v19 + 16);
      long long v24 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v24;
    }
    uint64_t v25 = a3[8];
    char v26 = (char *)a1 + v25;
    char v27 = (char *)a2 + v25;
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)char v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = *((void *)v27 + 3);
    *((void *)v26 + 2) = *((void *)v27 + 2);
    *((void *)v26 + 3) = v29;
    *((_WORD *)v26 + 16) = *((_WORD *)v27 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = v11;
  uint64_t v12 = *(void *)(v10 + 32);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  *(void *)(v9 + 32) = v12;
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  *(void *)(v13 + 16) = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(void *)uint64_t v17 = *(void *)v18;
    *(void *)(v17 + 8) = v19;
    uint64_t v20 = *(void *)(v18 + 24);
    *(void *)(v17 + 16) = *(void *)(v18 + 16);
    *(void *)(v17 + 24) = v20;
    *(unsigned char *)(v17 + 32) = *(unsigned char *)(v18 + 32);
    *(void *)(v17 + 40) = *(void *)(v18 + 40);
    *(unsigned char *)(v17 + 48) = *(unsigned char *)(v18 + 48);
    *(void *)(v17 + 56) = *(void *)(v18 + 56);
    *(_DWORD *)(v17 + 64) = *(_DWORD *)(v18 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *(_OWORD *)(v18 + 48);
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
    *(_OWORD *)(v17 + 48) = v21;
    *(_DWORD *)(v17 + 64) = *(_DWORD *)(v18 + 64);
    long long v22 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v22;
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v26;
  uint64_t v27 = *(void *)(v25 + 24);
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  *(void *)(v24 + 24) = v27;
  *(_WORD *)(v24 + 32) = *(_WORD *)(v25 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(unsigned char *)uint64_t v11 = *(unsigned char *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a1 + v13 + 8);
  uint64_t v17 = *(void *)(a2 + v13 + 8);
  if (v16)
  {
    if (v17)
    {
      *(void *)uint64_t v14 = *(void *)v15;
      *(void *)(v14 + 8) = *(void *)(v15 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v14 + 16) = *(void *)(v15 + 16);
      *(void *)(v14 + 24) = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v14 + 32) = *(unsigned char *)(v15 + 32);
      uint64_t v18 = *(void *)(v15 + 40);
      *(unsigned char *)(v14 + 48) = *(unsigned char *)(v15 + 48);
      *(void *)(v14 + 40) = v18;
      *(void *)(v14 + 56) = *(void *)(v15 + 56);
      *(unsigned char *)(v14 + 64) = *(unsigned char *)(v15 + 64);
      *(unsigned char *)(v14 + 65) = *(unsigned char *)(v15 + 65);
      *(unsigned char *)(v14 + 66) = *(unsigned char *)(v15 + 66);
      *(unsigned char *)(v14 + 67) = *(unsigned char *)(v15 + 67);
    }
    else
    {
      sub_20A9D6C28(v14);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      long long v21 = *(_OWORD *)(v15 + 32);
      long long v20 = *(_OWORD *)(v15 + 48);
      long long v22 = *(_OWORD *)(v15 + 16);
      *(_DWORD *)(v14 + 64) = *(_DWORD *)(v15 + 64);
      *(_OWORD *)(v14 + 32) = v21;
      *(_OWORD *)(v14 + 48) = v20;
      *(_OWORD *)(v14 + 16) = v22;
    }
  }
  else if (v17)
  {
    *(void *)uint64_t v14 = *(void *)v15;
    *(void *)(v14 + 8) = *(void *)(v15 + 8);
    *(void *)(v14 + 16) = *(void *)(v15 + 16);
    *(void *)(v14 + 24) = *(void *)(v15 + 24);
    *(unsigned char *)(v14 + 32) = *(unsigned char *)(v15 + 32);
    uint64_t v19 = *(void *)(v15 + 40);
    *(unsigned char *)(v14 + 48) = *(unsigned char *)(v15 + 48);
    *(void *)(v14 + 40) = v19;
    *(void *)(v14 + 56) = *(void *)(v15 + 56);
    *(unsigned char *)(v14 + 64) = *(unsigned char *)(v15 + 64);
    *(unsigned char *)(v14 + 65) = *(unsigned char *)(v15 + 65);
    *(unsigned char *)(v14 + 66) = *(unsigned char *)(v15 + 66);
    *(unsigned char *)(v14 + 67) = *(unsigned char *)(v15 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    long long v23 = *(_OWORD *)(v15 + 16);
    long long v24 = *(_OWORD *)(v15 + 32);
    long long v25 = *(_OWORD *)(v15 + 48);
    *(_DWORD *)(v14 + 64) = *(_DWORD *)(v15 + 64);
    *(_OWORD *)(v14 + 32) = v24;
    *(_OWORD *)(v14 + 48) = v25;
    *(_OWORD *)(v14 + 16) = v23;
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)(a2 + v26);
  *(void *)(v27 + 8) = *(void *)(a2 + v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v27 + 16) = *(void *)(v28 + 16);
  *(void *)(v27 + 24) = *(void *)(v28 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v27 + 32) = *(unsigned char *)(v28 + 32);
  *(unsigned char *)(v27 + 33) = *(unsigned char *)(v28 + 33);
  return a1;
}

uint64_t initializeWithTake for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  long long v18 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v18;
  *(_DWORD *)(v16 + 64) = *(_DWORD *)(v17 + 64);
  long long v19 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v19;
  uint64_t v20 = a1 + v15;
  uint64_t v21 = a2 + v15;
  *(_WORD *)(v20 + 32) = *(_WORD *)(v21 + 32);
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  return a1;
}

uint64_t assignWithTake for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 32);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
  uint64_t v16 = *(void *)(v14 + 8);
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v13 + 8) = v16;
  *(void *)(v13 + 16) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  if (!*(void *)(a1 + v17 + 8)) {
    goto LABEL_5;
  }
  uint64_t v20 = *(void *)(v19 + 8);
  if (!v20)
  {
    sub_20A9D6C28(v18);
LABEL_5:
    long long v22 = *(_OWORD *)(v19 + 48);
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    *(_OWORD *)(v18 + 48) = v22;
    *(_DWORD *)(v18 + 64) = *(_DWORD *)(v19 + 64);
    long long v23 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v23;
    goto LABEL_6;
  }
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v19 + 24);
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  *(void *)(v18 + 24) = v21;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
  *(void *)(v18 + 40) = *(void *)(v19 + 40);
  *(unsigned char *)(v18 + 48) = *(unsigned char *)(v19 + 48);
  *(void *)(v18 + 56) = *(void *)(v19 + 56);
  *(unsigned char *)(v18 + 64) = *(unsigned char *)(v19 + 64);
  *(unsigned char *)(v18 + 65) = *(unsigned char *)(v19 + 65);
  *(unsigned char *)(v18 + 66) = *(unsigned char *)(v19 + 66);
  *(unsigned char *)(v18 + 67) = *(unsigned char *)(v19 + 67);
LABEL_6:
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(v26 + 8);
  *(void *)uint64_t v25 = *(void *)v26;
  *(void *)(v25 + 8) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v26 + 24);
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  *(void *)(v25 + 24) = v28;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
  *(unsigned char *)(v25 + 33) = *(unsigned char *)(v26 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA7E110);
}

uint64_t sub_20AA7E110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA7E1E8);
}

uint64_t sub_20AA7E1E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA7E2A8()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExternalAnalyticsEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA7E428);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsEvent.Model.CodingKeys()
{
  return &type metadata for ExternalAnalyticsEvent.Model.CodingKeys;
}

unint64_t sub_20AA7E464()
{
  unint64_t result = qword_267655980;
  if (!qword_267655980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655980);
  }
  return result;
}

unint64_t sub_20AA7E4BC()
{
  unint64_t result = qword_267655988;
  if (!qword_267655988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655988);
  }
  return result;
}

unint64_t sub_20AA7E514()
{
  unint64_t result = qword_267655990;
  if (!qword_267655990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655990);
  }
  return result;
}

uint64_t sub_20AA7E568(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA8380 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144746C75736572 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_20AA7E7D4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC50DB8, MEMORY[0x263F24D10]);
}

uint64_t static NewsArticleViewResignEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50DD0, MEMORY[0x263F24D18], (uint64_t)qword_26AC50DB8, a1);
}

uint64_t static NewsArticleViewResignEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA7E83C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC50DD8, MEMORY[0x263F24DC8]);
}

uint64_t static NewsArticleViewResignEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50DF0, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50DD8, a1);
}

uint64_t sub_20AA7E89C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655998);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655998);
  return sub_20AB85D30();
}

uint64_t static NewsArticleViewResignEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC51FC0, MEMORY[0x263F24DE8], (uint64_t)qword_267655998, a1);
}

uint64_t NewsArticleViewResignEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NewsArticleViewResignEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NewsArticleViewResignEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResignEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 20);
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NewsArticleViewResignEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC50DF8);
}

uint64_t NewsArticleViewResignEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 20);
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewResignEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResignEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 24);
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewResignEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 24);
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewResignEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResignEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 28);
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewResignEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 28);
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewResignEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResignEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 32);
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA7EF88(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t NewsArticleViewResignEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent(0) + 32);
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewResignEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResignEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NewsArticleViewResignEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v2, v12);
}

uint64_t NewsArticleViewResignEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NewsArticleViewResignEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NewsArticleViewResignEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52850);
}

uint64_t NewsArticleViewResignEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewResignEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleViewResignEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t NewsArticleViewResignEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResignEvent.Model(0) + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 NewsArticleViewResignEvent.Model.init(eventData:viewData:newsArticleData:orientationData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, __int16 *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  __int16 v10 = *((_WORD *)a2 + 8);
  long long v27 = *a3;
  uint64_t v11 = *((void *)a3 + 2);
  uint64_t v12 = *((void *)a3 + 3);
  char v13 = *((unsigned char *)a3 + 32);
  uint64_t v14 = *((void *)a3 + 5);
  char v15 = *((unsigned char *)a3 + 48);
  uint64_t v26 = *((void *)a3 + 7);
  char v24 = *((unsigned char *)a3 + 65);
  char v25 = *((unsigned char *)a3 + 64);
  char v22 = *((unsigned char *)a3 + 67);
  char v23 = *((unsigned char *)a3 + 66);
  __n128 v33 = *a5;
  unint64_t v31 = a5[1].n128_u64[1];
  unint64_t v32 = a5[1].n128_u64[0];
  unsigned __int8 v30 = a5[2].n128_u8[0];
  __int16 v28 = *a4;
  unsigned __int8 v29 = a5[2].n128_u8[1];
  uint64_t v16 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a6, a1, v16);
  uint64_t v17 = (int *)type metadata accessor for NewsArticleViewResignEvent.Model(0);
  uint64_t v18 = a6 + v17[5];
  *(void *)uint64_t v18 = v8;
  *(void *)(v18 + 8) = v9;
  *(_WORD *)(v18 + 16) = v10;
  uint64_t v19 = a6 + v17[6];
  *(_OWORD *)uint64_t v19 = v27;
  *(void *)(v19 + 16) = v11;
  *(void *)(v19 + 24) = v12;
  *(unsigned char *)(v19 + 32) = v13;
  *(void *)(v19 + 40) = v14;
  *(unsigned char *)(v19 + 48) = v15;
  *(void *)(v19 + 56) = v26;
  *(unsigned char *)(v19 + 64) = v25;
  *(unsigned char *)(v19 + 65) = v24;
  *(unsigned char *)(v19 + 66) = v23;
  *(unsigned char *)(v19 + 67) = v22;
  *(_WORD *)(a6 + v17[7]) = v28;
  uint64_t v20 = (__n128 *)(a6 + v17[8]);
  __n128 result = v33;
  *uint64_t v20 = v33;
  v20[1].n128_u64[0] = v32;
  v20[1].n128_u64[1] = v31;
  v20[2].n128_u8[0] = v30;
  v20[2].n128_u8[1] = v29;
  return result;
}

uint64_t sub_20AA7F6B8()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6174614477656976;
      break;
    case 2:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 3:
      uint64_t result = 0x7461746E6569726FLL;
      break;
    case 4:
      uint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA7F788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA827DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA7F7B0(uint64_t a1)
{
  unint64_t v2 = sub_20AA7FB38();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA7F7EC(uint64_t a1)
{
  unint64_t v2 = sub_20AA7FB38();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NewsArticleViewResignEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA800B8(0, &qword_2676559B0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA7FB38();
  sub_20AB86DC0();
  LOBYTE(v32) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    __int16 v10 = (int *)type metadata accessor for NewsArticleViewResignEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(void *)&long long v32 = v12;
    *((void *)&v32 + 1) = v13;
    LOWORD(v33) = (_WORD)v11;
    char v44 = 1;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v14 = (long long *)(v3 + v10[6]);
    long long v15 = *v14;
    uint64_t v16 = *((void *)v14 + 2);
    uint64_t v17 = *((void *)v14 + 3);
    char v18 = *((unsigned char *)v14 + 32);
    uint64_t v19 = *((void *)v14 + 5);
    char v20 = *((unsigned char *)v14 + 48);
    uint64_t v21 = *((void *)v14 + 7);
    char v22 = *((unsigned char *)v14 + 64);
    char v23 = *((unsigned char *)v14 + 65);
    char v24 = *((unsigned char *)v14 + 66);
    LOBYTE(v14) = *((unsigned char *)v14 + 67);
    long long v32 = v15;
    uint64_t v33 = v16;
    uint64_t v34 = v17;
    char v35 = v18;
    uint64_t v37 = v19;
    char v38 = v20;
    uint64_t v39 = v21;
    char v40 = v22;
    char v41 = v23;
    char v42 = v24;
    char v43 = (char)v14;
    char v44 = 2;
    sub_20A97A1AC();
    sub_20AB86C50();
    LOWORD(v32) = *(_WORD *)(v3 + v10[7]);
    char v44 = 3;
    sub_20A97C86C();
    sub_20AB86C50();
    char v25 = (long long *)(v3 + v10[8]);
    long long v26 = *v25;
    uint64_t v27 = *((void *)v25 + 2);
    uint64_t v28 = *((void *)v25 + 3);
    char v29 = *((unsigned char *)v25 + 32);
    LOBYTE(v25) = *((unsigned char *)v25 + 33);
    long long v32 = v26;
    uint64_t v33 = v27;
    uint64_t v34 = v28;
    char v35 = v29;
    char v36 = (char)v25;
    char v44 = 4;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA7FB38()
{
  unint64_t result = qword_2676559B8;
  if (!qword_2676559B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676559B8);
  }
  return result;
}

uint64_t NewsArticleViewResignEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA800B8(0, &qword_2676559C0, MEMORY[0x263F8E040]);
  uint64_t v41 = v6;
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = (int *)type metadata accessor for NewsArticleViewResignEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA7FB38();
  char v42 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v36 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v39;
  LOBYTE(v43) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v40;
  uint64_t v15 = v41;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v55 = 1;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v16 = *((void *)&v43 + 1);
  __int16 v17 = v44;
  uint64_t v18 = v12 + v9[5];
  *(void *)uint64_t v18 = v43;
  *(void *)(v18 + 8) = v16;
  *(_WORD *)(v18 + 16) = v17;
  char v55 = 2;
  sub_20A97A154();
  sub_20AB86B80();
  uint64_t v19 = v44;
  uint64_t v20 = v45;
  char v21 = v46;
  uint64_t v22 = v48;
  char v23 = v49;
  uint64_t v24 = v50;
  char v25 = v51;
  char v26 = v52;
  char v27 = v53;
  char v28 = v54;
  uint64_t v29 = v12 + v9[6];
  *(_OWORD *)uint64_t v29 = v43;
  *(void *)(v29 + 16) = v19;
  *(void *)(v29 + 24) = v20;
  *(unsigned char *)(v29 + 32) = v21;
  *(void *)(v29 + 40) = v22;
  *(unsigned char *)(v29 + 48) = v23;
  *(void *)(v29 + 56) = v24;
  *(unsigned char *)(v29 + 64) = v25;
  *(unsigned char *)(v29 + 65) = v26;
  *(unsigned char *)(v29 + 66) = v27;
  *(unsigned char *)(v29 + 67) = v28;
  char v55 = 3;
  sub_20A97C818();
  sub_20AB86B80();
  *(_WORD *)(v12 + v9[7]) = v43;
  char v55 = 4;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v15);
  uint64_t v30 = v44;
  uint64_t v31 = v45;
  char v32 = v46;
  char v33 = v47;
  uint64_t v34 = v12 + v9[8];
  *(_OWORD *)uint64_t v34 = v43;
  *(void *)(v34 + 16) = v30;
  *(void *)(v34 + 24) = v31;
  *(unsigned char *)(v34 + 32) = v32;
  *(unsigned char *)(v34 + 33) = v33;
  sub_20AA8011C(v12, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_20AA80180(v12);
}

void sub_20AA800B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA7FB38();
    unint64_t v7 = a3(a1, &type metadata for NewsArticleViewResignEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA8011C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleViewResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA80180(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewsArticleViewResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA801DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsArticleViewResignEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA801F4(void *a1)
{
  return NewsArticleViewResignEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA8020C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50DD0, MEMORY[0x263F24D18], (uint64_t)qword_26AC50DB8, a1);
}

uint64_t sub_20AA80244@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50DF0, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50DD8, a1);
}

uint64_t sub_20AA8027C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC51FC0, MEMORY[0x263F24DE8], (uint64_t)qword_267655998, a1);
}

uint64_t sub_20AA802B4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsArticleViewResignEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    __int16 v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    char v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for NewsArticleViewResignEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for NewsArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for NewsArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for NewsArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for NewsArticleViewResignEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleViewResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA81430);
}

uint64_t sub_20AA81430(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewResignEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA81708);
}

uint64_t sub_20AA81708(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_20AA819D8()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA7EF88(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    if (v1 <= 0x3F)
    {
      sub_20AA7EF88(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
      if (v2 <= 0x3F)
      {
        sub_20AA7EF88(319, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
        if (v3 <= 0x3F)
        {
          sub_20AA7EF88(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsArticleViewResignEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = *((void *)v14 + 3);
    *((void *)v13 + 2) = *((void *)v14 + 2);
    *((void *)v13 + 3) = v16;
    v13[32] = v14[32];
    *((void *)v13 + 5) = *((void *)v14 + 5);
    v13[48] = v14[48];
    *((void *)v13 + 7) = *((void *)v14 + 7);
    *((_DWORD *)v13 + 16) = *((_DWORD *)v14 + 16);
    uint64_t v17 = a3[8];
    *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = *((void *)v19 + 3);
    *((void *)v18 + 2) = *((void *)v19 + 2);
    *((void *)v18 + 3) = v21;
    v18[32] = v19[32];
    v18[33] = v19[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NewsArticleViewResignEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v14;
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(_DWORD *)(v12 + 64) = *(_DWORD *)(v13 + 64);
  uint64_t v16 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v19;
  uint64_t v20 = *(void *)(v18 + 24);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = v20;
  *(unsigned char *)(v17 + 32) = *(unsigned char *)(v18 + 32);
  *(unsigned char *)(v17 + 33) = *(unsigned char *)(v18 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
  uint64_t v13 = *(void *)(v12 + 40);
  *(unsigned char *)(v11 + 48) = *(unsigned char *)(v12 + 48);
  *(void *)(v11 + 40) = v13;
  *(void *)(v11 + 56) = *(void *)(v12 + 56);
  *(unsigned char *)(v11 + 64) = *(unsigned char *)(v12 + 64);
  *(unsigned char *)(v11 + 65) = *(unsigned char *)(v12 + 65);
  *(unsigned char *)(v11 + 66) = *(unsigned char *)(v12 + 66);
  *(unsigned char *)(v11 + 67) = *(unsigned char *)(v12 + 67);
  uint64_t v14 = a3[7];
  uint64_t v15 = (unsigned char *)(a1 + v14);
  uint64_t v16 = (unsigned char *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)(a2 + v17);
  *(void *)(v18 + 8) = *(void *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
  *(unsigned char *)(v18 + 33) = *(unsigned char *)(v19 + 33);
  return a1;
}

uint64_t initializeWithTake for NewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = (long long *)(a2 + v8);
  *(_DWORD *)(v11 + 64) = *((_DWORD *)v12 + 16);
  long long v13 = v12[3];
  *(_OWORD *)(v11 + 32) = v12[2];
  *(_OWORD *)(v11 + 48) = v13;
  long long v14 = *v12;
  long long v15 = v12[1];
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  __int16 v18 = *(_WORD *)(a2 + v16);
  *(_OWORD *)uint64_t v11 = v14;
  *(_OWORD *)(v11 + 16) = v15;
  *(_WORD *)(a1 + v16) = v18;
  uint64_t v19 = a1 + v17;
  long long v20 = *(_OWORD *)(a2 + v17 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(v19 + 16) = v20;
  *(_WORD *)(v19 + 32) = *(_WORD *)(a2 + v17 + 32);
  return a1;
}

uint64_t assignWithTake for NewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  __int16 v18 = (unsigned char *)(a1 + v16);
  uint64_t v19 = (unsigned char *)(a2 + v16);
  *__int16 v18 = *v19;
  v18[1] = v19[1];
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  uint64_t v22 = *(void *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v21 + 24);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(void *)(v20 + 24) = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + 32) = *(unsigned char *)(v21 + 32);
  *(unsigned char *)(v20 + 33) = *(unsigned char *)(v21 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA82384);
}

uint64_t sub_20AA82384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA8245C);
}

uint64_t sub_20AA8245C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA8251C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewsArticleViewResignEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA8269CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleViewResignEvent.Model.CodingKeys()
{
  return &type metadata for NewsArticleViewResignEvent.Model.CodingKeys;
}

unint64_t sub_20AA826D8()
{
  unint64_t result = qword_2676559C8;
  if (!qword_2676559C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676559C8);
  }
  return result;
}

unint64_t sub_20AA82730()
{
  unint64_t result = qword_2676559D0;
  if (!qword_2676559D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676559D0);
  }
  return result;
}

unint64_t sub_20AA82788()
{
  unint64_t result = qword_2676559D8;
  if (!qword_2676559D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676559D8);
  }
  return result;
}

uint64_t sub_20AA827DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_20AA82A68(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC4FBC0, MEMORY[0x263F24D10]);
}

uint64_t static MediaExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4FBD8, MEMORY[0x263F24D18], (uint64_t)qword_26AC4FBC0, a1);
}

uint64_t static MediaExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA82AD0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC4FBE0, MEMORY[0x263F24DC8]);
}

uint64_t static MediaExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4FBF8, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4FBE0, a1);
}

uint64_t sub_20AA82B30()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676559E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676559E0);
  return sub_20AB85D30();
}

uint64_t static MediaExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC520A0, MEMORY[0x263F24DE8], (uint64_t)qword_2676559E0, a1);
}

uint64_t MediaExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t MediaExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*MediaExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA84468(type metadata accessor for MediaExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for MediaExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4FC00);
}

uint64_t MediaExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 24);
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaExposureEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 24);
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 28);
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 28);
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 32);
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 32);
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 36);
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaExposureEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 36);
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.mediaData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 40);
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 40);
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 44);
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaExposureEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 44);
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.anfComponentData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 48);
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaExposureEvent.galleryData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 48);
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.galleryData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 52);
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 52);
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 56);
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 56);
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 60);
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA83CF8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t MediaExposureEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent(0) + 60);
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaExposureEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t MediaExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for MediaExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v10, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v10, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v2, v25);
  uint64_t v26 = a1 + v4[15];
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  char v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104);

  return v28(v26, v10, v27);
}

uint64_t MediaExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t MediaExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA84468(type metadata accessor for MediaExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AA84468@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for MediaExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC528F0);
}

uint64_t MediaExposureEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t MediaExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 36));
  char v4 = *v3;
  uint64_t v6 = *((void *)v3 + 1);
  uint64_t v5 = *((void *)v3 + 2);
  int v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 28) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 40));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;

  return sub_20A9F9290(v4, v5);
}

uint64_t MediaExposureEvent.Model.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  int v5 = *(_DWORD *)(v3 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;

  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 52));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaExposureEvent.Model(0) + 56));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaExposureEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for MediaExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 60));
  return result;
}

__n128 MediaExposureEvent.Model.init(eventData:timedData:newsArticleData:groupData:feedData:mediaData:viewData:anfComponentData:galleryData:issueData:channelData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, long long *a10, uint64_t *a11, __n128 *a12, char *a13)
{
  long long v40 = *a3;
  uint64_t v16 = *((void *)a3 + 2);
  uint64_t v17 = *((void *)a3 + 3);
  char v18 = *((unsigned char *)a3 + 32);
  uint64_t v19 = *((void *)a3 + 5);
  char v39 = *((unsigned char *)a3 + 48);
  uint64_t v38 = *((void *)a3 + 7);
  char v20 = *((unsigned char *)a3 + 64);
  char v21 = *((unsigned char *)a3 + 65);
  char v37 = *((unsigned char *)a3 + 66);
  char v36 = *((unsigned char *)a3 + 67);
  long long v43 = a4[1];
  long long v44 = *a4;
  uint64_t v42 = *((void *)a4 + 4);
  uint64_t v41 = *((void *)a4 + 5);
  long long v46 = *a5;
  uint64_t v45 = *((void *)a5 + 2);
  char v51 = *a6;
  uint64_t v50 = *((void *)a6 + 1);
  uint64_t v49 = *((void *)a6 + 2);
  int v48 = *((_DWORD *)a6 + 6);
  char v47 = a6[28];
  uint64_t v54 = *a7;
  uint64_t v53 = a7[1];
  __int16 v52 = *((_WORD *)a7 + 8);
  uint64_t v56 = *a8;
  uint64_t v55 = a8[1];
  long long v59 = *a10;
  uint64_t v58 = *((void *)a10 + 2);
  int v57 = *((_DWORD *)a10 + 6);
  uint64_t v60 = a11[1];
  uint64_t v61 = *a11;
  __n128 v66 = *a12;
  unint64_t v64 = a12[1].n128_u64[1];
  unint64_t v65 = a12[1].n128_u64[0];
  unsigned __int8 v62 = a12[2].n128_u8[1];
  unsigned __int8 v63 = a12[2].n128_u8[0];
  char v67 = *a13;
  uint64_t v22 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a9, a1, v22);
  uint64_t v23 = (int *)type metadata accessor for MediaExposureEvent.Model(0);
  uint64_t v24 = a9 + v23[5];
  uint64_t v25 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v24, a2, v25);
  uint64_t v26 = a9 + v23[6];
  *(void *)(v26 + 16) = v16;
  *(void *)(v26 + 24) = v17;
  *(unsigned char *)(v26 + 32) = v18;
  *(void *)(v26 + 40) = v19;
  *(_OWORD *)uint64_t v26 = v40;
  *(unsigned char *)(v26 + 48) = v39;
  *(void *)(v26 + 56) = v38;
  *(unsigned char *)(v26 + 64) = v20;
  *(unsigned char *)(v26 + 65) = v21;
  *(unsigned char *)(v26 + 66) = v37;
  *(unsigned char *)(v26 + 67) = v36;
  uint64_t v27 = a9 + v23[7];
  *(_OWORD *)uint64_t v27 = v44;
  *(_OWORD *)(v27 + 16) = v43;
  *(void *)(v27 + 32) = v42;
  *(void *)(v27 + 40) = v41;
  uint64_t v28 = a9 + v23[8];
  *(_OWORD *)uint64_t v28 = v46;
  *(void *)(v28 + 16) = v45;
  uint64_t v29 = a9 + v23[9];
  *(unsigned char *)uint64_t v29 = v51;
  *(void *)(v29 + 8) = v50;
  *(void *)(v29 + 16) = v49;
  *(_DWORD *)(v29 + 24) = v48;
  *(unsigned char *)(v29 + 28) = v47;
  uint64_t v30 = a9 + v23[10];
  *(void *)uint64_t v30 = v54;
  *(void *)(v30 + 8) = v53;
  *(_WORD *)(v30 + 16) = v52;
  uint64_t v31 = (void *)(a9 + v23[11]);
  *uint64_t v31 = v56;
  v31[1] = v55;
  uint64_t v32 = a9 + v23[12];
  *(_OWORD *)uint64_t v32 = v59;
  *(void *)(v32 + 16) = v58;
  *(_DWORD *)(v32 + 24) = v57;
  char v33 = (void *)(a9 + v23[13]);
  *char v33 = v61;
  v33[1] = v60;
  uint64_t v34 = (__n128 *)(a9 + v23[14]);
  __n128 result = v66;
  *uint64_t v34 = v66;
  v34[1].n128_u64[0] = v65;
  v34[1].n128_u64[1] = v64;
  v34[2].n128_u8[0] = v63;
  v34[2].n128_u8[1] = v62;
  *(unsigned char *)(a9 + v23[15]) = v67;
  return result;
}

uint64_t sub_20AA84BB8(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 3:
      uint64_t result = 0x74614470756F7267;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_8;
    case 5:
      uint64_t result = 0x746144616964656DLL;
      break;
    case 6:
      unsigned int v3 = 2003134838;
LABEL_8:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 7:
      uint64_t result = 0xD000000000000010;
      break;
    case 8:
      uint64_t result = 0x447972656C6C6167;
      break;
    case 9:
      uint64_t result = 0x7461446575737369;
      break;
    case 10:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 11:
      uint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA84D34()
{
  return sub_20AA84BB8(*v0);
}

uint64_t sub_20AA84D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA8AFD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA84D64(uint64_t a1)
{
  unint64_t v2 = sub_20AA85358();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA84DA0(uint64_t a1)
{
  unint64_t v2 = sub_20AA85358();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MediaExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA85EC4(0, &qword_2676559F8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v43 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA85358();
  sub_20AB86DC0();
  LOBYTE(v45) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for MediaExposureEvent.Model(0);
    LOBYTE(v45) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (long long *)(v3 + v10[6]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v45 = v12;
    *(void *)&long long v46 = v13;
    *((void *)&v46 + 1) = v14;
    LOBYTE(v47) = v15;
    *((void *)&v47 + 1) = v16;
    char v48 = v17;
    uint64_t v49 = v18;
    char v50 = v19;
    char v51 = v20;
    char v52 = v21;
    char v53 = (char)v11;
    char v44 = 2;
    sub_20A97A1AC();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[7]);
    long long v23 = v22[1];
    long long v45 = *v22;
    long long v46 = v23;
    long long v47 = v22[2];
    char v44 = 3;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v24 = (long long *)(v3 + v10[8]);
    uint64_t v25 = *((void *)v24 + 2);
    long long v45 = *v24;
    *(void *)&long long v46 = v25;
    char v44 = 4;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v26 = (char *)(v3 + v10[9]);
    char v27 = *v26;
    uint64_t v28 = *((void *)v26 + 1);
    uint64_t v29 = *((void *)v26 + 2);
    int v30 = *((_DWORD *)v26 + 6);
    LOBYTE(v26) = v26[28];
    LOBYTE(v45) = v27;
    *((void *)&v45 + 1) = v28;
    *(void *)&long long v46 = v29;
    DWORD2(v46) = v30;
    BYTE12(v46) = (_BYTE)v26;
    char v44 = 5;
    sub_20A9F7CFC();
    sub_20AB86C50();
    uint64_t v31 = (uint64_t *)(v3 + v10[10]);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 8);
    *(void *)&long long v45 = v32;
    *((void *)&v45 + 1) = v33;
    LOWORD(v46) = (_WORD)v31;
    char v44 = 6;
    sub_20A986C14();
    sub_20AB86C50();
    long long v45 = *(_OWORD *)(v3 + v10[11]);
    char v44 = 7;
    sub_20A9AE6E4();
    sub_20AB86BE0();
    uint64_t v34 = (long long *)(v3 + v10[12]);
    uint64_t v35 = *((void *)v34 + 2);
    int v36 = *((_DWORD *)v34 + 6);
    long long v45 = *v34;
    *(void *)&long long v46 = v35;
    DWORD2(v46) = v36;
    char v44 = 8;
    sub_20A9B6520();
    sub_20AB86BE0();
    long long v45 = *(_OWORD *)(v3 + v10[13]);
    char v44 = 9;
    sub_20A9870B4();
    sub_20AB86BE0();
    char v37 = (long long *)(v3 + v10[14]);
    long long v38 = *v37;
    uint64_t v39 = *((void *)v37 + 2);
    uint64_t v40 = *((void *)v37 + 3);
    char v41 = *((unsigned char *)v37 + 32);
    LOBYTE(v37) = *((unsigned char *)v37 + 33);
    long long v45 = v38;
    *(void *)&long long v46 = v39;
    *((void *)&v46 + 1) = v40;
    LOBYTE(v47) = v41;
    BYTE1(v47) = (_BYTE)v37;
    char v44 = 10;
    sub_20A9862D4();
    sub_20AB86C50();
    LOBYTE(v45) = *(unsigned char *)(v3 + v10[15]);
    char v44 = 11;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA85358()
{
  unint64_t result = qword_267655A00;
  if (!qword_267655A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A00);
  }
  return result;
}

uint64_t MediaExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v4 = sub_20AB85FE0();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20AB85FC0();
  uint64_t v61 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA85EC4(0, &qword_267655A08, MEMORY[0x263F8E040]);
  uint64_t v62 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v55 - v12;
  __n128 v66 = (int *)type metadata accessor for MediaExposureEvent.Model(0);
  MEMORY[0x270FA5388](v66);
  unint64_t v65 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  unsigned __int8 v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_20AA85358();
  int v57 = v13;
  sub_20AB86DA0();
  uint64_t v58 = v7;
  if (v2)
  {
    uint64_t v64 = v2;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    LODWORD(v62) = 0;
    int v17 = 0;
    int v76 = 0;
  }
  else
  {
    uint64_t v55 = v11;
    LOBYTE(v67) = 0;
    sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
    sub_20AB86B80();
    char v19 = v65;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v65, v9, v7);
    LOBYTE(v67) = 1;
    sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
    uint64_t v20 = v60;
    sub_20AB86B80();
    char v21 = v66;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v19[v66[5]], v6, v20);
    char v77 = 2;
    sub_20A97A154();
    sub_20AB86B80();
    long long v22 = v68;
    char v23 = v69;
    uint64_t v24 = *((void *)&v69 + 1);
    char v25 = v70;
    uint64_t v26 = v71;
    char v27 = v72;
    char v28 = v73;
    char v29 = v74;
    char v30 = v75;
    uint64_t v31 = &v19[v21[6]];
    *(_OWORD *)uint64_t v31 = v67;
    *((_OWORD *)v31 + 1) = v22;
    v31[32] = v23;
    *((void *)v31 + 5) = v24;
    v31[48] = v25;
    *((void *)v31 + 7) = v26;
    v31[64] = v27;
    v31[65] = v28;
    v31[66] = v29;
    v31[67] = v30;
    char v77 = 3;
    sub_20A9864D0();
    sub_20AB86B10();
    uint64_t v32 = &v19[v21[7]];
    long long v33 = v68;
    *(_OWORD *)uint64_t v32 = v67;
    *((_OWORD *)v32 + 1) = v33;
    *((_OWORD *)v32 + 2) = v69;
    char v77 = 4;
    sub_20A986720();
    sub_20AB86B10();
    uint64_t v34 = v68;
    uint64_t v35 = &v19[v21[8]];
    *(_OWORD *)uint64_t v35 = v67;
    *((void *)v35 + 2) = v34;
    char v77 = 5;
    sub_20A9F7CA8();
    sub_20AB86B80();
    uint64_t v36 = *((void *)&v67 + 1);
    uint64_t v37 = v68;
    int v38 = DWORD2(v68);
    char v39 = BYTE12(v68);
    uint64_t v40 = &v19[v21[9]];
    *uint64_t v40 = v67;
    *((void *)v40 + 1) = v36;
    *((void *)v40 + 2) = v37;
    *((_DWORD *)v40 + 6) = v38;
    v40[28] = v39;
    char v77 = 6;
    sub_20A986BC0();
    sub_20AB86B80();
    uint64_t v41 = *((void *)&v67 + 1);
    __int16 v42 = v68;
    uint64_t v43 = &v19[v21[10]];
    *(void *)uint64_t v43 = v67;
    *((void *)v43 + 1) = v41;
    *((_WORD *)v43 + 8) = v42;
    char v77 = 7;
    sub_20A9AE68C();
    sub_20AB86B10();
    *(_OWORD *)&v19[v21[11]] = v67;
    char v77 = 8;
    sub_20A9B64C8();
    sub_20AB86B10();
    int v76 = 1;
    uint64_t v44 = v68;
    int v45 = DWORD2(v68);
    long long v46 = &v19[v21[12]];
    *(_OWORD *)long long v46 = v67;
    *((void *)v46 + 2) = v44;
    *((_DWORD *)v46 + 6) = v45;
    char v77 = 9;
    sub_20A987060();
    sub_20AB86B10();
    uint64_t v64 = 0;
    *(_OWORD *)&v65[v66[13]] = v67;
    char v77 = 10;
    sub_20A986280();
    uint64_t v47 = v64;
    sub_20AB86B80();
    uint64_t v64 = v47;
    if (v47)
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v62);
      LODWORD(v62) = 0;
      int v17 = 1;
    }
    else
    {
      long long v48 = v68;
      char v49 = v69;
      char v50 = BYTE1(v69);
      char v51 = &v65[v66[14]];
      *(_OWORD *)char v51 = v67;
      *((_OWORD *)v51 + 1) = v48;
      v51[32] = v49;
      v51[33] = v50;
      char v77 = 11;
      sub_20A98757C();
      uint64_t v52 = v64;
      sub_20AB86B10();
      uint64_t v64 = v52;
      if (!v52)
      {
        (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v62);
        uint64_t v54 = (uint64_t)v65;
        v65[v66[15]] = v67;
        sub_20AA85F28(v54, v56);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
        return sub_20AA85F8C(v54);
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v62);
      int v17 = 1;
      LODWORD(v62) = 1;
    }
    char v53 = v65;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v53, v58);
    uint64_t v18 = v66;
    (*(void (**)(char *, uint64_t))(v59 + 8))(&v53[v66[5]], v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A98937C(*(void *)&v53[v18[7]], *(void *)&v53[v18[7] + 8], *(void *)&v53[v18[7] + 16]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_20A9FA9C8(*(void *)&v53[v18[11]], *(void *)&v53[v18[11] + 8]);
    if (v76)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  if (v17)
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v62 & 1) == 0) {
      return result;
    }
    goto LABEL_10;
  }
  if (!v62) {
    return result;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AA85EC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA85358();
    unint64_t v7 = a3(a1, &type metadata for MediaExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA85F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA85F8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA85FE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA86000(void *a1)
{
  return MediaExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA86018@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4FBD8, MEMORY[0x263F24D18], (uint64_t)qword_26AC4FBC0, a1);
}

uint64_t sub_20AA86050@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4FBF8, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4FBE0, a1);
}

uint64_t sub_20AA86088@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC520A0, MEMORY[0x263F24DE8], (uint64_t)qword_2676559E0, a1);
}

uint64_t sub_20AA860C0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v11, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v11, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v11, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v4, v26);
  uint64_t v27 = a2 + a1[15];
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  char v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104);

  return v29(v27, v11, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    int v38 = (char *)a2 + v36;
    sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    __int16 v42 = (char *)a2 + v40;
    sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    int v45 = (char *)a1 + v44;
    long long v46 = (char *)a2 + v44;
    sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    char v49 = (char *)a1 + v48;
    char v50 = (char *)a2 + v48;
    sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for MediaExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);

  return v27(v25, v26);
}

uint64_t initializeWithCopy for MediaExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for MediaExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for MediaExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for MediaExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA888F4);
}

uint64_t sub_20AA888F4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_24:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_23:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_24;
  }
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a3[15];

  return v25(v27, a2, v26);
}

uint64_t storeEnumTagSinglePayload for MediaExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA88F30);
}

uint64_t sub_20AA88F30(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_24:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_23:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_24;
  }
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a4[15];

  return v27(v29, a2, a2, v28);
}

void sub_20AA89564()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AA83CF8(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
      if (v2 <= 0x3F)
      {
        sub_20AA83CF8(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
        if (v3 <= 0x3F)
        {
          sub_20AA83CF8(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
          if (v4 <= 0x3F)
          {
            sub_20AA83CF8(319, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
            if (v5 <= 0x3F)
            {
              sub_20AA83CF8(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
              if (v6 <= 0x3F)
              {
                sub_20AA83CF8(319, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
                if (v7 <= 0x3F)
                {
                  sub_20AA83CF8(319, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
                  if (v8 <= 0x3F)
                  {
                    sub_20AA83CF8(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                    if (v9 <= 0x3F)
                    {
                      sub_20AA83CF8(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
                      if (v10 <= 0x3F)
                      {
                        sub_20AA83CF8(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
                        if (v11 <= 0x3F) {
                          swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for MediaExposureEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    v14[32] = v15[32];
    *((void *)v14 + 5) = *((void *)v15 + 5);
    v14[48] = v15[48];
    *((void *)v14 + 7) = *((void *)v15 + 7);
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    uint64_t v18 = (char *)a1 + v13;
    uint64_t v19 = (char *)a2 + v13;
    uint64_t v20 = *(void *)((char *)a2 + v13 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *uint64_t v18 = *v19;
      *((void *)v18 + 1) = *((void *)v19 + 1);
      *((void *)v18 + 2) = v20;
      *((void *)v18 + 3) = *((void *)v19 + 3);
      uint64_t v21 = *((void *)v19 + 5);
      *((void *)v18 + 4) = *((void *)v19 + 4);
      *((void *)v18 + 5) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    }
    uint64_t v24 = a3[8];
    uint64_t v25 = a3[9];
    uint64_t v26 = (char *)a1 + v24;
    uint64_t v27 = (char *)a2 + v24;
    *uint64_t v26 = *v27;
    uint64_t v28 = *((void *)v27 + 2);
    *((void *)v26 + 1) = *((void *)v27 + 1);
    *((void *)v26 + 2) = v28;
    uint64_t v29 = (char *)a1 + v25;
    uint64_t v30 = (char *)a2 + v25;
    *uint64_t v29 = *v30;
    uint64_t v31 = *((void *)v30 + 2);
    *((void *)v29 + 1) = *((void *)v30 + 1);
    *((void *)v29 + 2) = v31;
    *((_DWORD *)v29 + 6) = *((_DWORD *)v30 + 6);
    v29[28] = v30[28];
    uint64_t v32 = a3[10];
    uint64_t v33 = a3[11];
    uint64_t v34 = (char *)a1 + v32;
    uint64_t v35 = (char *)a2 + v32;
    v34[16] = v35[16];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    v34[17] = v35[17];
    uint64_t v37 = (char *)a1 + v33;
    uint64_t v38 = (_OWORD *)((char *)a2 + v33);
    uint64_t v39 = *(void *)((char *)a2 + v33 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39 == 1)
    {
      *(_OWORD *)uint64_t v37 = *v38;
    }
    else
    {
      *(void *)uint64_t v37 = *(void *)v38;
      *((void *)v37 + 1) = v39;
      swift_bridgeObjectRetain();
    }
    uint64_t v40 = a3[12];
    uint64_t v41 = a3[13];
    uint64_t v42 = (char *)a1 + v40;
    uint64_t v43 = (char *)a2 + v40;
    *uint64_t v42 = *v43;
    uint64_t v44 = *((void *)v43 + 2);
    *((void *)v42 + 1) = *((void *)v43 + 1);
    *((void *)v42 + 2) = v44;
    *((_DWORD *)v42 + 6) = *((_DWORD *)v43 + 6);
    uint64_t v45 = (void *)((char *)a1 + v41);
    uint64_t v46 = (void *)((char *)a2 + v41);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = a3[14];
    uint64_t v49 = a3[15];
    uint64_t v50 = (char *)a1 + v48;
    uint64_t v51 = (char *)a2 + v48;
    uint64_t v52 = *((void *)v51 + 1);
    *(void *)uint64_t v50 = *(void *)v51;
    *((void *)v50 + 1) = v52;
    uint64_t v53 = *((void *)v51 + 3);
    *((void *)v50 + 2) = *((void *)v51 + 2);
    *((void *)v50 + 3) = v53;
    v50[32] = v51[32];
    v50[33] = v51[33];
    *((unsigned char *)a1 + v49) = *((unsigned char *)a2 + v49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[11] + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(unsigned char *)(v13 + 48) = *(unsigned char *)(v14 + 48);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  uint64_t v19 = *(void *)(a2 + v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
    *(void *)(v17 + 8) = *(void *)(v18 + 8);
    *(void *)(v17 + 16) = v19;
    *(void *)(v17 + 24) = *(void *)(v18 + 24);
    uint64_t v20 = *(void *)(v18 + 40);
    *(void *)(v17 + 32) = *(void *)(v18 + 32);
    *(void *)(v17 + 40) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v21;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  uint64_t v26 = *(void *)(v25 + 16);
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = v26;
  uint64_t v27 = a1 + v23;
  uint64_t v28 = a2 + v23;
  *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
  uint64_t v29 = *(void *)(v28 + 16);
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  *(void *)(v27 + 16) = v29;
  *(_DWORD *)(v27 + 24) = *(_DWORD *)(v28 + 24);
  *(unsigned char *)(v27 + 28) = *(unsigned char *)(v28 + 28);
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  uint64_t v34 = *(void *)(v33 + 8);
  *(void *)uint64_t v32 = *(void *)v33;
  *(void *)(v32 + 8) = v34;
  *(unsigned char *)(v32 + 17) = *(unsigned char *)(v33 + 17);
  uint64_t v35 = a1 + v31;
  uint64_t v36 = (_OWORD *)(a2 + v31);
  uint64_t v37 = *(void *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37 == 1)
  {
    *(_OWORD *)uint64_t v35 = *v36;
  }
  else
  {
    *(void *)uint64_t v35 = *(void *)v36;
    *(void *)(v35 + 8) = v37;
    swift_bridgeObjectRetain();
  }
  uint64_t v38 = a3[12];
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
  uint64_t v42 = *(void *)(v41 + 16);
  *(void *)(v40 + 8) = *(void *)(v41 + 8);
  *(void *)(v40 + 16) = v42;
  *(_DWORD *)(v40 + 24) = *(_DWORD *)(v41 + 24);
  uint64_t v43 = (void *)(a1 + v39);
  uint64_t v44 = (void *)(a2 + v39);
  uint64_t v45 = v44[1];
  *uint64_t v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = a3[14];
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v46;
  uint64_t v49 = a2 + v46;
  uint64_t v50 = *(void *)(v49 + 8);
  *(void *)uint64_t v48 = *(void *)v49;
  *(void *)(v48 + 8) = v50;
  uint64_t v51 = *(void *)(v49 + 24);
  *(void *)(v48 + 16) = *(void *)(v49 + 16);
  *(void *)(v48 + 24) = v51;
  *(unsigned char *)(v48 + 32) = *(unsigned char *)(v49 + 32);
  *(unsigned char *)(v48 + 33) = *(unsigned char *)(v49 + 33);
  *(unsigned char *)(a1 + v47) = *(unsigned char *)(a2 + v47);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v14 = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 40) = v14;
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (long long *)(a2 + v15);
  uint64_t v18 = *(void *)(a1 + v15 + 16);
  uint64_t v19 = *(void *)(a2 + v15 + 16);
  if (v18)
  {
    if (v19)
    {
      *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
      *(void *)(v16 + 8) = *((void *)v17 + 1);
      *(void *)(v16 + 16) = *((void *)v17 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v16 + 24) = *((_DWORD *)v17 + 6);
      *(_DWORD *)(v16 + 28) = *((_DWORD *)v17 + 7);
      *(void *)(v16 + 32) = *((void *)v17 + 4);
      *(void *)(v16 + 40) = *((void *)v17 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v16);
      long long v21 = v17[1];
      long long v20 = v17[2];
      *(_OWORD *)uint64_t v16 = *v17;
      *(_OWORD *)(v16 + 16) = v21;
      *(_OWORD *)(v16 + 32) = v20;
    }
  }
  else if (v19)
  {
    *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
    *(void *)(v16 + 8) = *((void *)v17 + 1);
    *(void *)(v16 + 16) = *((void *)v17 + 2);
    *(_DWORD *)(v16 + 24) = *((_DWORD *)v17 + 6);
    *(_DWORD *)(v16 + 28) = *((_DWORD *)v17 + 7);
    *(void *)(v16 + 32) = *((void *)v17 + 4);
    *(void *)(v16 + 40) = *((void *)v17 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *v17;
    long long v23 = v17[2];
    *(_OWORD *)(v16 + 16) = v17[1];
    *(_OWORD *)(v16 + 32) = v23;
    *(_OWORD *)uint64_t v16 = v22;
  }
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)(a2 + v27);
  *(void *)(v28 + 8) = *(void *)(a2 + v27 + 8);
  *(void *)(v28 + 16) = *(void *)(a2 + v27 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v30 = *(_DWORD *)(v29 + 24);
  *(unsigned char *)(v28 + 28) = *(unsigned char *)(v29 + 28);
  *(_DWORD *)(v28 + 24) = v30;
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)(a2 + v31);
  *(void *)(v32 + 8) = *(void *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  *(unsigned char *)(v32 + 17) = *(unsigned char *)(v33 + 17);
  uint64_t v34 = a3[11];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = *(void *)(a1 + v34 + 8);
  uint64_t v38 = *(void *)(a2 + v34 + 8);
  if (v37 != 1)
  {
    if (v38 != 1)
    {
      *uint64_t v35 = *v36;
      v35[1] = v36[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_20A9FF03C((uint64_t)v35);
    goto LABEL_13;
  }
  if (v38 == 1)
  {
LABEL_13:
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    goto LABEL_15;
  }
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
LABEL_15:
  uint64_t v39 = a3[12];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(unsigned char *)uint64_t v40 = *(unsigned char *)(a2 + v39);
  *(void *)(v40 + 8) = *(void *)(a2 + v39 + 8);
  *(void *)(v40 + 16) = *(void *)(a2 + v39 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v40 + 24) = *(_DWORD *)(v41 + 24);
  uint64_t v42 = a3[13];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  *uint64_t v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[14];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)uint64_t v46 = *(void *)(a2 + v45);
  *(void *)(v46 + 8) = *(void *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v46 + 16) = *(void *)(v47 + 16);
  *(void *)(v46 + 24) = *(void *)(v47 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v46 + 32) = *(unsigned char *)(v47 + 32);
  *(unsigned char *)(v46 + 33) = *(unsigned char *)(v47 + 33);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  return a1;
}

uint64_t initializeWithTake for MediaExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  long long v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  uint64_t v17 = (_OWORD *)(a1 + v12);
  uint64_t v18 = (long long *)(a2 + v12);
  long long v19 = v18[2];
  long long v20 = *v18;
  v17[1] = v18[1];
  v17[2] = v19;
  *uint64_t v17 = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)(v23 + 16) = *(void *)(v24 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  uint64_t v25 = (_OWORD *)(a1 + v22);
  uint64_t v26 = (long long *)(a2 + v22);
  long long v27 = *v26;
  *(_OWORD *)((char *)v25 + 13) = *(long long *)((char *)v26 + 13);
  *uint64_t v25 = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = a3[11];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  long long v32 = *(_OWORD *)(a2 + v29);
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  *(_OWORD *)(a1 + v29) = v32;
  uint64_t v33 = a3[12];
  uint64_t v34 = a3[13];
  uint64_t v35 = (_OWORD *)(a1 + v33);
  uint64_t v36 = (_OWORD *)(a2 + v33);
  *uint64_t v35 = *v36;
  long long v37 = *(_OWORD *)(a2 + v34);
  *(_OWORD *)((char *)v35 + 12) = *(_OWORD *)((char *)v36 + 12);
  *(_OWORD *)(a1 + v34) = v37;
  uint64_t v38 = a3[14];
  uint64_t v39 = a3[15];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  long long v42 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  *(_WORD *)(v40 + 32) = *(_WORD *)(v41 + 32);
  *(unsigned char *)(a1 + v39) = *(unsigned char *)(a2 + v39);
  return a1;
}

uint64_t assignWithTake for MediaExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  if (*(void *)(a1 + v16 + 16))
  {
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
      *(void *)(v17 + 8) = *(void *)(v18 + 8);
      *(void *)(v17 + 16) = v19;
      swift_bridgeObjectRelease();
      *(void *)(v17 + 24) = *(void *)(v18 + 24);
      uint64_t v20 = *(void *)(v18 + 40);
      *(void *)(v17 + 32) = *(void *)(v18 + 32);
      *(void *)(v17 + 40) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A98D5B8(v17);
  }
  long long v21 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v21;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
LABEL_6:
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  uint64_t v25 = *(void *)(v24 + 16);
  *(void *)(v23 + 8) = v26;
  *(void *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)(a2 + v27);
  uint64_t v30 = *(void *)(a2 + v27 + 16);
  *(void *)(v28 + 8) = *(void *)(a2 + v27 + 8);
  *(void *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v28 + 24) = *(_DWORD *)(v29 + 24);
  *(unsigned char *)(v28 + 28) = *(unsigned char *)(v29 + 28);
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = *(void *)(a2 + v31 + 8);
  *(void *)uint64_t v32 = *(void *)(a2 + v31);
  *(void *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  uint64_t v35 = a3[11];
  uint64_t v36 = (void *)(a1 + v35);
  long long v37 = (void *)(a2 + v35);
  if (*(void *)(a1 + v35 + 8) != 1)
  {
    uint64_t v38 = v37[1];
    if (v38 != 1)
    {
      *uint64_t v36 = *v37;
      v36[1] = v38;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A9FF03C((uint64_t)v36);
  }
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
LABEL_11:
  uint64_t v39 = a3[12];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(unsigned char *)uint64_t v40 = *(unsigned char *)(a2 + v39);
  uint64_t v42 = *(void *)(a2 + v39 + 16);
  *(void *)(v40 + 8) = *(void *)(a2 + v39 + 8);
  *(void *)(v40 + 16) = v42;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v40 + 24) = *(_DWORD *)(v41 + 24);
  uint64_t v43 = a3[13];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (uint64_t *)(a2 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *uint64_t v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[14];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(a2 + v48 + 8);
  *(void *)uint64_t v49 = *(void *)(a2 + v48);
  *(void *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v50 + 24);
  *(void *)(v49 + 16) = *(void *)(v50 + 16);
  *(void *)(v49 + 24) = v52;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 32) = *(unsigned char *)(v50 + 32);
  *(unsigned char *)(v49 + 33) = *(unsigned char *)(v50 + 33);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA8AA60);
}

uint64_t sub_20AA8AA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA8AB8C);
}

uint64_t sub_20AA8AB8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AA8ACA0()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MediaExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA8AE98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaExposureEvent.Model.CodingKeys()
{
  return &type metadata for MediaExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AA8AED4()
{
  unint64_t result = qword_267655A10;
  if (!qword_267655A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A10);
  }
  return result;
}

unint64_t sub_20AA8AF2C()
{
  unint64_t result = qword_267655A18;
  if (!qword_267655A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A18);
  }
  return result;
}

unint64_t sub_20AA8AF84()
{
  unint64_t result = qword_267655A20;
  if (!qword_267655A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A20);
  }
  return result;
}

uint64_t sub_20AA8AFD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA7AC0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x447972656C6C6167 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

StocksAnalytics::ViewAction_optional __swiftcall ViewAction.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t ViewAction.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x636E75614C707061;
      break;
    case 2:
      unint64_t result = 0x6570697773;
      break;
    case 3:
      unint64_t result = 0x656E696C64616568;
      break;
    case 4:
      unint64_t result = 0x6B6E696C70656564;
      break;
    case 5:
      unint64_t result = 0x6E6164726F666661;
      break;
    case 6:
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6976614E72657375;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA8B6A4(unsigned __int8 *a1, char *a2)
{
  return sub_20AA3932C(*a1, *a2);
}

unint64_t sub_20AA8B6B4()
{
  unint64_t result = qword_267655A28;
  if (!qword_267655A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A28);
  }
  return result;
}

uint64_t sub_20AA8B708()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA8B750()
{
  return sub_20AB4DDF8();
}

uint64_t sub_20AA8B758()
{
  return sub_20AB86D80();
}

StocksAnalytics::ViewAction_optional sub_20AA8B79C(Swift::String *a1)
{
  return ViewAction.init(rawValue:)(*a1);
}

unint64_t sub_20AA8B7A8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ViewAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20AA8B7D0()
{
  return sub_20AB86750();
}

uint64_t sub_20AA8B830()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ViewAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA8B94CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewAction()
{
  return &type metadata for ViewAction;
}

unint64_t sub_20AA8B984()
{
  unint64_t result = qword_26AC4EB80;
  if (!qword_26AC4EB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB80);
  }
  return result;
}

void __swiftcall DeviceData.init(deviceModel:devicePlatform:osInstallVariant:osVersion:osBundleVersion:)(StocksAnalytics::DeviceData *__return_ptr retstr, Swift::String deviceModel, Swift::String devicePlatform, StocksAnalytics::OsInstallVariant osInstallVariant, Swift::String osVersion, Swift::String osBundleVersion)
{
  StocksAnalytics::OsInstallVariant v6 = *(unsigned char *)osInstallVariant;
  retstr->deviceModel = deviceModel;
  retstr->devicePlatform = devicePlatform;
  retstr->osInstallVariant = v6;
  retstr->osVersion = osVersion;
  retstr->osBundleVersion = osBundleVersion;
}

uint64_t static DeviceData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t DeviceData.deviceModel.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.deviceModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DeviceData.deviceModel.modify())()
{
  return nullsub_1;
}

uint64_t DeviceData.devicePlatform.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.devicePlatform.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*DeviceData.devicePlatform.modify())()
{
  return nullsub_1;
}

void DeviceData.osInstallVariant.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *DeviceData.osInstallVariant.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*DeviceData.osInstallVariant.modify())()
{
  return nullsub_1;
}

uint64_t DeviceData.osVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.osVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*DeviceData.osVersion.modify())()
{
  return nullsub_1;
}

uint64_t DeviceData.osBundleVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DeviceData.osBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*DeviceData.osBundleVersion.modify())()
{
  return nullsub_1;
}

unint64_t sub_20AA8BC58()
{
  unint64_t result = 0x6F4D656369766564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C50656369766564;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6F6973726556736FLL;
      break;
    case 4:
      unint64_t result = 0x656C646E7542736FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA8BD2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA8CAD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA8BD54(uint64_t a1)
{
  unint64_t v2 = sub_20AA8C014();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA8BD90(uint64_t a1)
{
  unint64_t v2 = sub_20AA8C014();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DeviceData.encode(to:)(void *a1)
{
  sub_20AA8C4A0(0, &qword_26AC51810, MEMORY[0x263F8E0C0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v19 = *(void *)(v1 + 24);
  uint64_t v20 = v8;
  int v18 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  v17[3] = *(void *)(v1 + 48);
  v17[4] = v9;
  uint64_t v10 = *(void *)(v1 + 56);
  v17[1] = *(void *)(v1 + 64);
  v17[2] = v10;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_20AA8C014();
  sub_20AB86DC0();
  char v26 = 0;
  sub_20AB86C10();
  if (!v2)
  {
    char v15 = v18;
    char v25 = 1;
    sub_20AB86C10();
    char v24 = v15;
    char v23 = 2;
    sub_20AA8C068();
    sub_20AB86C50();
    char v22 = 3;
    sub_20AB86C10();
    char v21 = 4;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

unint64_t sub_20AA8C014()
{
  unint64_t result = qword_26AC4EB18;
  if (!qword_26AC4EB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB18);
  }
  return result;
}

unint64_t sub_20AA8C068()
{
  unint64_t result = qword_26AC4F598;
  if (!qword_26AC4F598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F598);
  }
  return result;
}

uint64_t DeviceData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA8C4A0(0, &qword_26AC51758, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA8C014();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v37 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  uint64_t v30 = v10;
  char v36 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_20AB86B40();
  uint64_t v31 = v14;
  uint64_t v28 = v13;
  char v34 = 2;
  sub_20AA8C504();
  swift_bridgeObjectRetain();
  uint64_t v29 = 0;
  sub_20AB86B80();
  int v15 = v35;
  char v33 = 3;
  uint64_t v25 = sub_20AB86B40();
  int v26 = v15;
  char v32 = 4;
  uint64_t v27 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_20AB86B40();
  uint64_t v20 = v19;
  char v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v29 = v18;
  v21(v9, v6);
  swift_bridgeObjectRetain();
  uint64_t v22 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v30;
  *(void *)(a2 + 8) = v12;
  uint64_t v23 = v27;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v22;
  *(unsigned char *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v25;
  *(void *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = v29;
  *(void *)(a2 + 64) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AA8C4A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA8C014();
    unint64_t v7 = a3(a1, &type metadata for DeviceData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA8C504()
{
  unint64_t result = qword_26AC4F5A8;
  if (!qword_26AC4F5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F5A8);
  }
  return result;
}

unint64_t sub_20AA8C55C()
{
  unint64_t result = qword_26AC4EB38;
  if (!qword_26AC4EB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB38);
  }
  return result;
}

unint64_t sub_20AA8C5B4()
{
  unint64_t result = qword_26AC4EB30;
  if (!qword_26AC4EB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB30);
  }
  return result;
}

uint64_t sub_20AA8C608@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DeviceData.init(from:)(a1, a2);
}

uint64_t sub_20AA8C620(void *a1)
{
  return DeviceData.encode(to:)(a1);
}

uint64_t destroy for DeviceData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DeviceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DeviceData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AdData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceData()
{
  return &type metadata for DeviceData;
}

unsigned char *storeEnumTagSinglePayload for DeviceData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA8C990);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceData.CodingKeys()
{
  return &type metadata for DeviceData.CodingKeys;
}

unint64_t sub_20AA8C9CC()
{
  unint64_t result = qword_267655A30;
  if (!qword_267655A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A30);
  }
  return result;
}

unint64_t sub_20AA8CA24()
{
  unint64_t result = qword_26AC4E0E0;
  if (!qword_26AC4E0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E0E0);
  }
  return result;
}

unint64_t sub_20AA8CA7C()
{
  unint64_t result = qword_26AC4EB20;
  if (!qword_26AC4EB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB20);
  }
  return result;
}

uint64_t sub_20AA8CAD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F4D656369766564 && a2 == 0xEB000000006C6564;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C50656369766564 && a2 == 0xEE006D726F667461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA83A0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C646E7542736FLL && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_20AA8CD54(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC50E98, MEMORY[0x263F24D10]);
}

uint64_t static NewsArticleViewResumeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50EB0, MEMORY[0x263F24D18], (uint64_t)qword_26AC50E98, a1);
}

uint64_t static NewsArticleViewResumeEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA8CDBC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC50EB8, MEMORY[0x263F24DC8]);
}

uint64_t static NewsArticleViewResumeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50ED0, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50EB8, a1);
}

uint64_t sub_20AA8CE1C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655A38);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655A38);
  return sub_20AB85D30();
}

uint64_t static NewsArticleViewResumeEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(qword_26AC51FC8, MEMORY[0x263F24DE8], (uint64_t)qword_267655A38, a1);
}

uint64_t NewsArticleViewResumeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NewsArticleViewResumeEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NewsArticleViewResumeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResumeEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 20);
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NewsArticleViewResumeEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4E1D0);
}

uint64_t NewsArticleViewResumeEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 20);
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewResumeEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResumeEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 24);
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewResumeEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 24);
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewResumeEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResumeEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 28);
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewResumeEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 28);
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewResumeEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResumeEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 32);
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewResumeEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent(0) + 32);
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewResumeEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewResumeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NewsArticleViewResumeEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v2, v12);
}

uint64_t NewsArticleViewResumeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NewsArticleViewResumeEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NewsArticleViewResumeEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC529A8);
}

uint64_t NewsArticleViewResumeEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewResumeEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleViewResumeEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t NewsArticleViewResumeEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewResumeEvent.Model(0) + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 NewsArticleViewResumeEvent.Model.init(eventData:viewData:newsArticleData:orientationData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, __int16 *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  __int16 v10 = *((_WORD *)a2 + 8);
  long long v27 = *a3;
  uint64_t v11 = *((void *)a3 + 2);
  uint64_t v12 = *((void *)a3 + 3);
  char v13 = *((unsigned char *)a3 + 32);
  uint64_t v14 = *((void *)a3 + 5);
  char v15 = *((unsigned char *)a3 + 48);
  uint64_t v26 = *((void *)a3 + 7);
  char v24 = *((unsigned char *)a3 + 65);
  char v25 = *((unsigned char *)a3 + 64);
  char v22 = *((unsigned char *)a3 + 67);
  char v23 = *((unsigned char *)a3 + 66);
  __n128 v33 = *a5;
  unint64_t v31 = a5[1].n128_u64[1];
  unint64_t v32 = a5[1].n128_u64[0];
  unsigned __int8 v30 = a5[2].n128_u8[0];
  __int16 v28 = *a4;
  unsigned __int8 v29 = a5[2].n128_u8[1];
  uint64_t v16 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a6, a1, v16);
  uint64_t v17 = (int *)type metadata accessor for NewsArticleViewResumeEvent.Model(0);
  uint64_t v18 = a6 + v17[5];
  *(void *)uint64_t v18 = v8;
  *(void *)(v18 + 8) = v9;
  *(_WORD *)(v18 + 16) = v10;
  uint64_t v19 = a6 + v17[6];
  *(_OWORD *)uint64_t v19 = v27;
  *(void *)(v19 + 16) = v11;
  *(void *)(v19 + 24) = v12;
  *(unsigned char *)(v19 + 32) = v13;
  *(void *)(v19 + 40) = v14;
  *(unsigned char *)(v19 + 48) = v15;
  *(void *)(v19 + 56) = v26;
  *(unsigned char *)(v19 + 64) = v25;
  *(unsigned char *)(v19 + 65) = v24;
  *(unsigned char *)(v19 + 66) = v23;
  *(unsigned char *)(v19 + 67) = v22;
  *(_WORD *)(a6 + v17[7]) = v28;
  uint64_t v20 = (__n128 *)(a6 + v17[8]);
  __n128 result = v33;
  *uint64_t v20 = v33;
  v20[1].n128_u64[0] = v32;
  v20[1].n128_u64[1] = v31;
  v20[2].n128_u8[0] = v30;
  v20[2].n128_u8[1] = v29;
  return result;
}

uint64_t sub_20AA8DBBC()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6174614477656976;
      break;
    case 2:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 3:
      uint64_t result = 0x7461746E6569726FLL;
      break;
    case 4:
      uint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA8DC8C(uint64_t a1)
{
  unint64_t v2 = sub_20AA8E014();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA8DCC8(uint64_t a1)
{
  unint64_t v2 = sub_20AA8E014();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NewsArticleViewResumeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA8E594(0, &qword_267655A50, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA8E014();
  sub_20AB86DC0();
  LOBYTE(v32) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    __int16 v10 = (int *)type metadata accessor for NewsArticleViewResumeEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(void *)&long long v32 = v12;
    *((void *)&v32 + 1) = v13;
    LOWORD(v33) = (_WORD)v11;
    char v44 = 1;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v14 = (long long *)(v3 + v10[6]);
    long long v15 = *v14;
    uint64_t v16 = *((void *)v14 + 2);
    uint64_t v17 = *((void *)v14 + 3);
    char v18 = *((unsigned char *)v14 + 32);
    uint64_t v19 = *((void *)v14 + 5);
    char v20 = *((unsigned char *)v14 + 48);
    uint64_t v21 = *((void *)v14 + 7);
    char v22 = *((unsigned char *)v14 + 64);
    char v23 = *((unsigned char *)v14 + 65);
    char v24 = *((unsigned char *)v14 + 66);
    LOBYTE(v14) = *((unsigned char *)v14 + 67);
    long long v32 = v15;
    uint64_t v33 = v16;
    uint64_t v34 = v17;
    char v35 = v18;
    uint64_t v37 = v19;
    char v38 = v20;
    uint64_t v39 = v21;
    char v40 = v22;
    char v41 = v23;
    char v42 = v24;
    char v43 = (char)v14;
    char v44 = 2;
    sub_20A97A1AC();
    sub_20AB86C50();
    LOWORD(v32) = *(_WORD *)(v3 + v10[7]);
    char v44 = 3;
    sub_20A97C86C();
    sub_20AB86C50();
    char v25 = (long long *)(v3 + v10[8]);
    long long v26 = *v25;
    uint64_t v27 = *((void *)v25 + 2);
    uint64_t v28 = *((void *)v25 + 3);
    char v29 = *((unsigned char *)v25 + 32);
    LOBYTE(v25) = *((unsigned char *)v25 + 33);
    long long v32 = v26;
    uint64_t v33 = v27;
    uint64_t v34 = v28;
    char v35 = v29;
    char v36 = (char)v25;
    char v44 = 4;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA8E014()
{
  unint64_t result = qword_267655A58;
  if (!qword_267655A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A58);
  }
  return result;
}

uint64_t NewsArticleViewResumeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA8E594(0, &qword_267655A60, MEMORY[0x263F8E040]);
  uint64_t v41 = v6;
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = (int *)type metadata accessor for NewsArticleViewResumeEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA8E014();
  char v42 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v36 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v39;
  LOBYTE(v43) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v40;
  uint64_t v15 = v41;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v55 = 1;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v16 = *((void *)&v43 + 1);
  __int16 v17 = v44;
  uint64_t v18 = v12 + v9[5];
  *(void *)uint64_t v18 = v43;
  *(void *)(v18 + 8) = v16;
  *(_WORD *)(v18 + 16) = v17;
  char v55 = 2;
  sub_20A97A154();
  sub_20AB86B80();
  uint64_t v19 = v44;
  uint64_t v20 = v45;
  char v21 = v46;
  uint64_t v22 = v48;
  char v23 = v49;
  uint64_t v24 = v50;
  char v25 = v51;
  char v26 = v52;
  char v27 = v53;
  char v28 = v54;
  uint64_t v29 = v12 + v9[6];
  *(_OWORD *)uint64_t v29 = v43;
  *(void *)(v29 + 16) = v19;
  *(void *)(v29 + 24) = v20;
  *(unsigned char *)(v29 + 32) = v21;
  *(void *)(v29 + 40) = v22;
  *(unsigned char *)(v29 + 48) = v23;
  *(void *)(v29 + 56) = v24;
  *(unsigned char *)(v29 + 64) = v25;
  *(unsigned char *)(v29 + 65) = v26;
  *(unsigned char *)(v29 + 66) = v27;
  *(unsigned char *)(v29 + 67) = v28;
  char v55 = 3;
  sub_20A97C818();
  sub_20AB86B80();
  *(_WORD *)(v12 + v9[7]) = v43;
  char v55 = 4;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v42, v15);
  uint64_t v30 = v44;
  uint64_t v31 = v45;
  char v32 = v46;
  char v33 = v47;
  uint64_t v34 = v12 + v9[8];
  *(_OWORD *)uint64_t v34 = v43;
  *(void *)(v34 + 16) = v30;
  *(void *)(v34 + 24) = v31;
  *(unsigned char *)(v34 + 32) = v32;
  *(unsigned char *)(v34 + 33) = v33;
  sub_20AA8E5F8(v12, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_20AA8E65C(v12);
}

void sub_20AA8E594(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA8E014();
    unint64_t v7 = a3(a1, &type metadata for NewsArticleViewResumeEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA8E5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleViewResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA8E65C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewsArticleViewResumeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA8E6B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsArticleViewResumeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA8E6D0(void *a1)
{
  return NewsArticleViewResumeEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA8E6E8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50EB0, MEMORY[0x263F24D18], (uint64_t)qword_26AC50E98, a1);
}

uint64_t sub_20AA8E720@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50ED0, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50EB8, a1);
}

uint64_t sub_20AA8E758@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(qword_26AC51FC8, MEMORY[0x263F24DE8], (uint64_t)qword_267655A38, a1);
}

uint64_t getEnumTagSinglePayload for NewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA8E7A4);
}

uint64_t sub_20AA8E7A4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewResumeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA8EA7C);
}

uint64_t sub_20AA8EA7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA7EF88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  sub_20AA7EF88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  sub_20AA7EF88(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  sub_20AA7EF88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

uint64_t getEnumTagSinglePayload for NewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA8ED60);
}

uint64_t sub_20AA8ED60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewResumeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA8EE38);
}

uint64_t sub_20AA8EE38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA8EEF8()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewsArticleViewResumeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA8F078);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleViewResumeEvent.Model.CodingKeys()
{
  return &type metadata for NewsArticleViewResumeEvent.Model.CodingKeys;
}

unint64_t sub_20AA8F0B4()
{
  unint64_t result = qword_267655A68;
  if (!qword_267655A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A68);
  }
  return result;
}

unint64_t sub_20AA8F10C()
{
  unint64_t result = qword_267655A70;
  if (!qword_267655A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A70);
  }
  return result;
}

unint64_t sub_20AA8F164()
{
  unint64_t result = qword_267655A78;
  if (!qword_267655A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A78);
  }
  return result;
}

StocksAnalytics::GalleryType_optional __swiftcall GalleryType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t GalleryType.rawValue.getter()
{
  uint64_t v1 = 0x636961736F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x7069727473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AA8F268(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA390E4(*a1, *a2);
}

unint64_t sub_20AA8F278()
{
  unint64_t result = qword_267655A80;
  if (!qword_267655A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A80);
  }
  return result;
}

uint64_t sub_20AA8F2CC()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA8F368()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA8F3F0()
{
  return sub_20AB86D80();
}

StocksAnalytics::GalleryType_optional sub_20AA8F488(Swift::String *a1)
{
  return GalleryType.init(rawValue:)(*a1);
}

void sub_20AA8F494(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x636961736F6DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7069727473;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AA8F4EC()
{
  return sub_20AB86750();
}

uint64_t sub_20AA8F54C()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for GalleryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA8F668);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GalleryType()
{
  return &type metadata for GalleryType;
}

unint64_t sub_20AA8F6A0()
{
  unint64_t result = qword_267655A88;
  if (!qword_267655A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655A88);
  }
  return result;
}

uint64_t sub_20AA8F6F4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267655A90, MEMORY[0x263F24D10]);
}

uint64_t static OnboardingScreenViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653538, MEMORY[0x263F24D18], (uint64_t)qword_267655A90, a1);
}

uint64_t static OnboardingScreenViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA8F75C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267655AA8, MEMORY[0x263F24DC8]);
}

uint64_t static OnboardingScreenViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653540, MEMORY[0x263F24DD8], (uint64_t)qword_267655AA8, a1);
}

uint64_t sub_20AA8F7BC()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655AC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655AC0);
  return sub_20AB85D30();
}

uint64_t static OnboardingScreenViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653548, MEMORY[0x263F24DE8], (uint64_t)qword_267655AC0, a1);
}

uint64_t OnboardingScreenViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t OnboardingScreenViewEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*OnboardingScreenViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t OnboardingScreenViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA8FC78(type metadata accessor for OnboardingScreenViewEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for OnboardingScreenViewEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655AF0);
}

uint64_t OnboardingScreenViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OnboardingScreenViewEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*OnboardingScreenViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t OnboardingScreenViewEvent.onboardingScreenData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OnboardingScreenViewEvent(0) + 24);
  sub_20AA01CE4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t OnboardingScreenViewEvent.onboardingScreenData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OnboardingScreenViewEvent(0) + 24);
  sub_20AA01CE4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*OnboardingScreenViewEvent.onboardingScreenData.modify())()
{
  return nullsub_1;
}

uint64_t OnboardingScreenViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for OnboardingScreenViewEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  sub_20AA01CE4();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t OnboardingScreenViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t OnboardingScreenViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA8FC78(type metadata accessor for OnboardingScreenViewEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AA8FC78@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for OnboardingScreenViewEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655B00);
}

uint64_t OnboardingScreenViewEvent.Model.onboardingScreenData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for OnboardingScreenViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t OnboardingScreenViewEvent.Model.init(eventData:timedData:onboardingScreenData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = *a3;
  uint64_t v8 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for OnboardingScreenViewEvent.Model(0);
  uint64_t v10 = a4 + *(int *)(v9 + 20);
  uint64_t v11 = sub_20AB85FE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  *(unsigned char *)(a4 + *(int *)(v9 + 24)) = v7;
  return result;
}

uint64_t sub_20AA8FE2C()
{
  unint64_t v1 = 0x74614464656D6974;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AA8FE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA91DFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA8FEB4(uint64_t a1)
{
  unint64_t v2 = sub_20AA90188();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA8FEF0(uint64_t a1)
{
  unint64_t v2 = sub_20AA90188();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OnboardingScreenViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA906A8(0, &qword_267655AD8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA90188();
  sub_20AB86DC0();
  v12[15] = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for OnboardingScreenViewEvent.Model(0);
    v12[14] = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    v12[13] = *(unsigned char *)(v3 + *(int *)(v10 + 24));
    v12[12] = 2;
    sub_20AA01DA0();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA90188()
{
  unint64_t result = qword_267655AE0;
  if (!qword_267655AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655AE0);
  }
  return result;
}

uint64_t OnboardingScreenViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_20AB85FE0();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_20AB85FC0();
  uint64_t v23 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  char v27 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA906A8(0, &qword_267655AE8, MEMORY[0x263F8E040]);
  uint64_t v28 = v8;
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for OnboardingScreenViewEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA90188();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = v11;
  uint64_t v21 = a1;
  uint64_t v14 = (uint64_t)v13;
  uint64_t v16 = v24;
  uint64_t v15 = v25;
  uint64_t v17 = v26;
  char v33 = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v14, v27, v29);
  char v32 = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14 + *(int *)(v20 + 20), v6, v17);
  char v30 = 2;
  sub_20AA01D4C();
  sub_20AB86B80();
  uint64_t v18 = (uint64_t)v21;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v28);
  *(unsigned char *)(v14 + *(int *)(v20 + 24)) = v31;
  sub_20AA9070C(v14, v22);
  __swift_destroy_boxed_opaque_existential_1(v18);
  return sub_20AA90770(v14);
}

void sub_20AA906A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA90188();
    unint64_t v7 = a3(a1, &type metadata for OnboardingScreenViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA9070C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OnboardingScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA90770(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OnboardingScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA907CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OnboardingScreenViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA907E4(void *a1)
{
  return OnboardingScreenViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA907FC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653538, MEMORY[0x263F24D18], (uint64_t)qword_267655A90, a1);
}

uint64_t sub_20AA90834@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653540, MEMORY[0x263F24DD8], (uint64_t)qword_267655AA8, a1);
}

uint64_t sub_20AA9086C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653548, MEMORY[0x263F24DE8], (uint64_t)qword_267655AC0, a1);
}

uint64_t sub_20AA908A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  sub_20AA01CE4();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for OnboardingScreenViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA01CE4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_20AA01CE4();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA01CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA01CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA01CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA01CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA91028);
}

uint64_t sub_20AA91028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  sub_20AA01CE4();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA91188);
}

uint64_t sub_20AA91188(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  sub_20AA01CE4();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_20AA912E0()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AA01CE4();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for OnboardingScreenViewEvent.Model(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA918EC);
}

uint64_t sub_20AA918EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_20AB85FE0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 3) {
        return v14 - 2;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA91A10);
}

uint64_t sub_20AA91A10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AA91B20()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OnboardingScreenViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA91CBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingScreenViewEvent.Model.CodingKeys()
{
  return &type metadata for OnboardingScreenViewEvent.Model.CodingKeys;
}

unint64_t sub_20AA91CF8()
{
  unint64_t result = qword_267655B10;
  if (!qword_267655B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B10);
  }
  return result;
}

unint64_t sub_20AA91D50()
{
  unint64_t result = qword_267655B18;
  if (!qword_267655B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B18);
  }
  return result;
}

unint64_t sub_20AA91DA8()
{
  unint64_t result = qword_267655B20;
  if (!qword_267655B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B20);
  }
  return result;
}

uint64_t sub_20AA91DFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA7AE0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

StocksAnalytics::BundleSubscriptionStatus_optional __swiftcall BundleSubscriptionStatus.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t BundleSubscriptionStatus.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C61697274;
      break;
    case 2:
      uint64_t result = 0x6269726373627573;
      break;
    case 3:
      uint64_t result = 0x6373627553746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA92060(unsigned __int8 *a1, char *a2)
{
  return sub_20AA353F0(*a1, *a2);
}

unint64_t sub_20AA92070()
{
  unint64_t result = qword_267655B28;
  if (!qword_267655B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B28);
  }
  return result;
}

uint64_t sub_20AA920C4()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA921AC()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA9227C()
{
  return sub_20AB86D80();
}

StocksAnalytics::BundleSubscriptionStatus_optional sub_20AA92360(Swift::String *a1)
{
  return BundleSubscriptionStatus.init(rawValue:)(*a1);
}

void sub_20AA9236C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6C61697274;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6269726373627573;
      *(void *)(a1 + 8) = 0xEA00000000006465;
      break;
    case 3:
      strcpy((char *)a1, "notSubscribed");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20AA92414()
{
  return sub_20AB86750();
}

uint64_t sub_20AA92474()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for BundleSubscriptionStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA92590);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleSubscriptionStatus()
{
  return &type metadata for BundleSubscriptionStatus;
}

unint64_t sub_20AA925C8()
{
  unint64_t result = qword_26AC50A30;
  if (!qword_26AC50A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50A30);
  }
  return result;
}

uint64_t Assembly.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  Assembly.init()();
  return v0;
}

uint64_t Assembly.init()()
{
  sub_20AA92814();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_20AB95670;
  uint64_t v2 = type metadata accessor for HeartbeatAssembly();
  uint64_t v3 = swift_allocObject();
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = sub_20AA928C4(&qword_26AC51CC0, (void (*)(uint64_t))type metadata accessor for HeartbeatAssembly);
  *(void *)(v1 + 32) = v3;
  uint64_t v4 = type metadata accessor for TrackerAssembly();
  uint64_t v5 = swift_allocObject();
  *(void *)(v1 + 96) = v4;
  *(void *)(v1 + 104) = sub_20AA928C4(&qword_26AC4F2E8, (void (*)(uint64_t))type metadata accessor for TrackerAssembly);
  *(void *)(v1 + 72) = v5;
  uint64_t v6 = type metadata accessor for TelemetryAssembly();
  uint64_t v7 = swift_allocObject();
  *(void *)(v1 + 136) = v6;
  *(void *)(v1 + 144) = sub_20AA928C4(&qword_26AC4F820, (void (*)(uint64_t))type metadata accessor for TelemetryAssembly);
  *(void *)(v1 + 112) = v7;
  uint64_t v8 = type metadata accessor for DebugAssembly();
  uint64_t v9 = swift_allocObject();
  *(void *)(v1 + 176) = v8;
  *(void *)(v1 + 184) = sub_20AA928C4(&qword_26AC4ED28, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
  *(void *)(v1 + 152) = v9;
  *(void *)(v0 + 16) = v1;
  return v0;
}

void sub_20AA92814()
{
  if (!qword_26AC519B0)
  {
    sub_20AA9286C();
    unint64_t v0 = sub_20AB86C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC519B0);
    }
  }
}

unint64_t sub_20AA9286C()
{
  unint64_t result = qword_26AC4E718;
  if (!qword_26AC4E718)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC4E718);
  }
  return result;
}

uint64_t sub_20AA928C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Assembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Assembly.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Assembly.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t sub_20AA9296C()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for Assembly()
{
  return self;
}

uint64_t method lookup function for Assembly(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Assembly);
}

uint64_t dispatch thunk of Assembly.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t static AdPlacementData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AdPlacementData.placementID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdPlacementData.placementID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdPlacementData.placementID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdPlacementData __swiftcall AdPlacementData.init(placementID:)(StocksAnalytics::AdPlacementData placementID)
{
  *uint64_t v1 = placementID;
  return placementID;
}

uint64_t sub_20AA92A60()
{
  return 0x6E656D6563616C70;
}

uint64_t sub_20AA92A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E656D6563616C70 && a2 == 0xEB00000000444974)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA92B30(uint64_t a1)
{
  unint64_t v2 = sub_20AA92CF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA92B6C(uint64_t a1)
{
  unint64_t v2 = sub_20AA92CF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdPlacementData.encode(to:)(void *a1)
{
  sub_20AA92ECC(0, &qword_26AC51870, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA92CF4();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA92CF4()
{
  unint64_t result = qword_26AC4F0C8;
  if (!qword_26AC4F0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F0C8);
  }
  return result;
}

uint64_t AdPlacementData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AA92ECC(0, &qword_267655B30, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA92CF4();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86B40();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA92ECC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA92CF4();
    unint64_t v7 = a3(a1, &type metadata for AdPlacementData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA92F38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdPlacementData.init(from:)(a1, a2);
}

uint64_t sub_20AA92F50(void *a1)
{
  sub_20AA92ECC(0, &qword_26AC51870, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA92CF4();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for AdPlacementData()
{
  return &type metadata for AdPlacementData;
}

unsigned char *storeEnumTagSinglePayload for AdPlacementData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA93148);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdPlacementData.CodingKeys()
{
  return &type metadata for AdPlacementData.CodingKeys;
}

unint64_t sub_20AA93184()
{
  unint64_t result = qword_267655B38;
  if (!qword_267655B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B38);
  }
  return result;
}

unint64_t sub_20AA931DC()
{
  unint64_t result = qword_26AC4F0D8;
  if (!qword_26AC4F0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F0D8);
  }
  return result;
}

unint64_t sub_20AA93234()
{
  unint64_t result = qword_26AC4F0D0;
  if (!qword_26AC4F0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F0D0);
  }
  return result;
}

uint64_t static UserArticleContextData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void UserArticleContextData.paidSubscriberToSourceChannelType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *UserArticleContextData.paidSubscriberToSourceChannelType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*UserArticleContextData.paidSubscriberToSourceChannelType.modify())()
{
  return nullsub_1;
}

void UserArticleContextData.paidSubscriberToSourceChannelMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *UserArticleContextData.paidSubscriberToSourceChannelMethod.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*UserArticleContextData.paidSubscriberToSourceChannelMethod.modify())()
{
  return nullsub_1;
}

StocksAnalytics::UserArticleContextData __swiftcall UserArticleContextData.init(paidSubscriberToSourceChannelType:paidSubscriberToSourceChannelMethod:)(StocksAnalytics::PaidSubscriberToSourceChannelType paidSubscriberToSourceChannelType, StocksAnalytics::PaidSubscriberToSourceChannelMethod_optional paidSubscriberToSourceChannelMethod)
{
  char v3 = *(unsigned char *)paidSubscriberToSourceChannelMethod.value;
  *uint64_t v2 = *(unsigned char *)paidSubscriberToSourceChannelType;
  v2[1] = v3;
  result.paidSubscriberToSourceChannelType = paidSubscriberToSourceChannelType;
  return result;
}

unint64_t sub_20AA93314()
{
  if (*v0) {
    return 0xD000000000000023;
  }
  else {
    return 0xD000000000000021;
  }
}

uint64_t sub_20AA93354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA93D68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA9337C(uint64_t a1)
{
  unint64_t v2 = sub_20AA935A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA933B8(uint64_t a1)
{
  unint64_t v2 = sub_20AA935A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UserArticleContextData.encode(to:)(void *a1)
{
  sub_20AA93880(0, &qword_26AC51908, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  char v9 = *v1;
  int v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA935A0();
  sub_20AB86DC0();
  char v16 = v9;
  char v15 = 0;
  sub_20AA935F4();
  sub_20AB86C50();
  if (!v2)
  {
    char v14 = v12;
    char v13 = 1;
    sub_20AA93648();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AA935A0()
{
  unint64_t result = qword_26AC50948;
  if (!qword_26AC50948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50948);
  }
  return result;
}

unint64_t sub_20AA935F4()
{
  unint64_t result = qword_26AC50FD8;
  if (!qword_26AC50FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FD8);
  }
  return result;
}

unint64_t sub_20AA93648()
{
  unint64_t result = qword_26AC51150;
  if (!qword_26AC51150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51150);
  }
  return result;
}

uint64_t UserArticleContextData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA93880(0, &qword_26AC517C8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA935A0();
  sub_20AB86DA0();
  if (!v2)
  {
    char v16 = 0;
    sub_20AA938E4();
    sub_20AB86B80();
    char v10 = v17;
    char v14 = 1;
    sub_20AA93938();
    sub_20AB86B10();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA93880(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA935A0();
    unint64_t v7 = a3(a1, &type metadata for UserArticleContextData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA938E4()
{
  unint64_t result = qword_26AC50FE8;
  if (!qword_26AC50FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FE8);
  }
  return result;
}

unint64_t sub_20AA93938()
{
  unint64_t result = qword_26AC51160;
  if (!qword_26AC51160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51160);
  }
  return result;
}

uint64_t sub_20AA93994@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return UserArticleContextData.init(from:)(a1, a2);
}

uint64_t sub_20AA939AC(void *a1)
{
  return UserArticleContextData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for UserArticleContextData(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 65283 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65283 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65283;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65283;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65283;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UserArticleContextData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65283 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65283 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 253;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA93B24);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserArticleContextData()
{
  return &type metadata for UserArticleContextData;
}

unsigned char *storeEnumTagSinglePayload for UserArticleContextData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA93C28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserArticleContextData.CodingKeys()
{
  return &type metadata for UserArticleContextData.CodingKeys;
}

unint64_t sub_20AA93C64()
{
  unint64_t result = qword_267655B40;
  if (!qword_267655B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B40);
  }
  return result;
}

unint64_t sub_20AA93CBC()
{
  unint64_t result = qword_26AC50958;
  if (!qword_26AC50958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50958);
  }
  return result;
}

unint64_t sub_20AA93D14()
{
  unint64_t result = qword_26AC50950;
  if (!qword_26AC50950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50950);
  }
  return result;
}

uint64_t sub_20AA93D68(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000021 && a2 == 0x800000020ABA83F0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000020ABA8420)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

StocksAnalytics::SubscriptionResultType_optional __swiftcall SubscriptionResultType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

unint64_t SubscriptionResultType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x73736563637573;
      break;
    case 2:
      unint64_t result = 1818845542;
      break;
    case 3:
      unint64_t result = 0x6C65636E6163;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA93F50(unsigned __int8 *a1, char *a2)
{
  return sub_20AA35720(*a1, *a2);
}

unint64_t sub_20AA93F60()
{
  unint64_t result = qword_267655B48;
  if (!qword_267655B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B48);
  }
  return result;
}

uint64_t sub_20AA93FB4()
{
  return sub_20AB4CF5C();
}

uint64_t sub_20AA93FBC()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA94090()
{
  return sub_20AB4EE64();
}

StocksAnalytics::SubscriptionResultType_optional sub_20AA94098(Swift::String *a1)
{
  return SubscriptionResultType.init(rawValue:)(*a1);
}

void sub_20AA940A4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x73736563637573;
      goto LABEL_3;
    case 2:
      *a1 = 1818845542;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x6C65636E6163;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0xD000000000000015;
      a1[1] = 0x800000020ABA6C70;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t sub_20AA94154()
{
  return sub_20AB86750();
}

uint64_t sub_20AA941B4()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for SubscriptionResultType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA942D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultType()
{
  return &type metadata for SubscriptionResultType;
}

unint64_t sub_20AA94308()
{
  unint64_t result = qword_267655B50;
  if (!qword_267655B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B50);
  }
  return result;
}

uint64_t static ReferringArticleData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ReferringArticleData.articleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferringArticleData.articleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReferringArticleData.articleID.modify())()
{
  return nullsub_1;
}

uint64_t ReferringArticleData.publisherArticleVersion.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ReferringArticleData.publisherArticleVersion.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*ReferringArticleData.publisherArticleVersion.modify())()
{
  return nullsub_1;
}

void ReferringArticleData.role.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

unsigned char *ReferringArticleData.role.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 24) = *result;
  return result;
}

uint64_t (*ReferringArticleData.role.modify())()
{
  return nullsub_1;
}

uint64_t ReferringArticleData.init(articleID:publisherArticleVersion:role:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a4;
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = v5;
  return result;
}

uint64_t sub_20AA94468()
{
  unint64_t v1 = 0xD000000000000017;
  if (*v0 != 1) {
    unint64_t v1 = 1701605234;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x49656C6369747261;
  }
}

uint64_t sub_20AA944C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA94EB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA944EC(uint64_t a1)
{
  unint64_t v2 = sub_20AA94738();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA94528(uint64_t a1)
{
  unint64_t v2 = sub_20AA94738();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReferringArticleData.encode(to:)(void *a1)
{
  sub_20AA949CC(0, &qword_267655B58, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = (char *)v11 - v6;
  v11[0] = *(void *)(v1 + 16);
  int v12 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA94738();
  sub_20AB86DC0();
  char v16 = 0;
  uint64_t v8 = v11[1];
  sub_20AB86C10();
  if (!v8)
  {
    char v9 = v12;
    char v15 = 1;
    sub_20AB86C70();
    char v14 = v9;
    char v13 = 2;
    sub_20A979B00();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA94738()
{
  unint64_t result = qword_267655B60;
  if (!qword_267655B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B60);
  }
  return result;
}

uint64_t ReferringArticleData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA949CC(0, &qword_267655B68, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA94738();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_20AB86BA0();
  char v17 = 2;
  sub_20A97A0FC();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v14 = v18;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 24) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_20AA949CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA94738();
    unint64_t v7 = a3(a1, &type metadata for ReferringArticleData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA94A34()
{
  unint64_t result = qword_26AC50418;
  if (!qword_26AC50418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50418);
  }
  return result;
}

unint64_t sub_20AA94A8C()
{
  unint64_t result = qword_26AC50410;
  if (!qword_26AC50410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50410);
  }
  return result;
}

uint64_t sub_20AA94AE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReferringArticleData.init(from:)(a1, a2);
}

uint64_t sub_20AA94AF8(void *a1)
{
  return ReferringArticleData.encode(to:)(a1);
}

uint64_t initializeWithCopy for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ReferringArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferringArticleData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferringArticleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferringArticleData()
{
  return &type metadata for ReferringArticleData;
}

unsigned char *storeEnumTagSinglePayload for ReferringArticleData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA94D74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferringArticleData.CodingKeys()
{
  return &type metadata for ReferringArticleData.CodingKeys;
}

unint64_t sub_20AA94DB0()
{
  unint64_t result = qword_267655B70;
  if (!qword_267655B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B70);
  }
  return result;
}

unint64_t sub_20AA94E08()
{
  unint64_t result = qword_267655B78;
  if (!qword_267655B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B78);
  }
  return result;
}

unint64_t sub_20AA94E60()
{
  unint64_t result = qword_267655B80;
  if (!qword_267655B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B80);
  }
  return result;
}

uint64_t sub_20AA94EB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49656C6369747261 && a2 == 0xE900000000000044;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020ABA7030 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static AdPositionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AdPositionData.position.getter()
{
  return *v0;
}

uint64_t AdPositionData.position.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*AdPositionData.position.modify())()
{
  return nullsub_1;
}

uint64_t AdPositionData.init(position:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_20AA95040(uint64_t a1)
{
  unint64_t v2 = sub_20AA95200();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA9507C(uint64_t a1)
{
  unint64_t v2 = sub_20AA95200();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdPositionData.encode(to:)(void *a1)
{
  sub_20AA953D4(0, qword_26AC51A58, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA95200();
  sub_20AB86DC0();
  sub_20AB86C60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA95200()
{
  unint64_t result = qword_26AC51A38;
  if (!qword_26AC51A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51A38);
  }
  return result;
}

uint64_t AdPositionData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_20AA953D4(0, &qword_267655B88, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA95200();
  sub_20AB86DA0();
  if (!v2)
  {
    int v10 = sub_20AB86B90();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA953D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA95200();
    unint64_t v7 = a3(a1, &type metadata for AdPositionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA95440@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return AdPositionData.init(from:)(a1, a2);
}

uint64_t sub_20AA95458(void *a1)
{
  sub_20AA953D4(0, qword_26AC51A58, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA95200();
  sub_20AB86DC0();
  sub_20AB86C60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for AdPositionData()
{
  return &type metadata for AdPositionData;
}

unsigned char *storeEnumTagSinglePayload for AdPositionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA9564CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdPositionData.CodingKeys()
{
  return &type metadata for AdPositionData.CodingKeys;
}

unint64_t sub_20AA95688()
{
  unint64_t result = qword_267655B90;
  if (!qword_267655B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B90);
  }
  return result;
}

unint64_t sub_20AA956E0()
{
  unint64_t result = qword_26AC51A48;
  if (!qword_26AC51A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51A48);
  }
  return result;
}

unint64_t sub_20AA95738()
{
  unint64_t result = qword_26AC51A40;
  if (!qword_26AC51A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51A40);
  }
  return result;
}

StocksAnalytics::SelectedResultActionType_optional __swiftcall SelectedResultActionType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t SelectedResultActionType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6863746177;
      break;
    case 2:
      uint64_t result = 0x68637461776E75;
      break;
    case 3:
      uint64_t result = 0x626D795377656976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA9587C(unsigned __int8 *a1, char *a2)
{
  return sub_20AA35258(*a1, *a2);
}

unint64_t sub_20AA9588C()
{
  unint64_t result = qword_267655B98;
  if (!qword_267655B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655B98);
  }
  return result;
}

uint64_t sub_20AA958E0()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA959C0()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA95A88()
{
  return sub_20AB86D80();
}

StocksAnalytics::SelectedResultActionType_optional sub_20AA95B64(Swift::String *a1)
{
  return SelectedResultActionType.init(rawValue:)(*a1);
}

void sub_20AA95B70(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6863746177;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x68637461776E75;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      strcpy((char *)a1, "viewSymbolFeed");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20AA95C10()
{
  return sub_20AB86750();
}

uint64_t sub_20AA95C70()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for SelectedResultActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA95D8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectedResultActionType()
{
  return &type metadata for SelectedResultActionType;
}

unint64_t sub_20AA95DC4()
{
  unint64_t result = qword_267655BA0;
  if (!qword_267655BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655BA0);
  }
  return result;
}

uint64_t sub_20AA95E18(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267655BA8, MEMORY[0x263F24D10]);
}

uint64_t static AdInterstitialEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653550, MEMORY[0x263F24D18], (uint64_t)qword_267655BA8, a1);
}

uint64_t static AdInterstitialEngagementEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA95E80(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267655BC0, MEMORY[0x263F24DC8]);
}

uint64_t static AdInterstitialEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653558, MEMORY[0x263F24DD8], (uint64_t)qword_267655BC0, a1);
}

uint64_t sub_20AA95EE0()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655BD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655BD8);
  return sub_20AB85D30();
}

uint64_t static AdInterstitialEngagementEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653560, MEMORY[0x263F24DE8], (uint64_t)qword_267655BD8, a1);
}

uint64_t AdInterstitialEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AdInterstitialEngagementEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AdInterstitialEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AdInterstitialEngagementEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 20);
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AdInterstitialEngagementEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655C20);
}

uint64_t AdInterstitialEngagementEvent.adData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 20);
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdInterstitialEngagementEvent.adData.modify())()
{
  return nullsub_1;
}

uint64_t AdInterstitialEngagementEvent.adEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 24);
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20AA9627C()
{
  unint64_t result = qword_267655BF8;
  if (!qword_267655BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655BF8);
  }
  return result;
}

unint64_t sub_20AA962D0()
{
  unint64_t result = qword_267655C00;
  if (!qword_267655C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655C00);
  }
  return result;
}

uint64_t AdInterstitialEngagementEvent.adEngagementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 24);
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdInterstitialEngagementEvent.adEngagementData.modify())()
{
  return nullsub_1;
}

uint64_t AdInterstitialEngagementEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 28);
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA964CC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t AdInterstitialEngagementEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent(0) + 28);
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdInterstitialEngagementEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t AdInterstitialEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AdInterstitialEngagementEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t AdInterstitialEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AdInterstitialEngagementEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent.Model(0) + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  __int16 v5 = *(_WORD *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 64);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  long long v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AdInterstitialEngagementEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655C30);
}

uint64_t AdInterstitialEngagementEvent.Model.adEngagementData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AdInterstitialEngagementEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AdInterstitialEngagementEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialEngagementEvent.Model(0) + 28);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

__n128 AdInterstitialEngagementEvent.Model.init(eventData:adData:adEngagementData:feedData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  __int16 v9 = *((_WORD *)a2 + 8);
  __n128 v20 = *(__n128 *)(a2 + 5);
  long long v21 = *(_OWORD *)(a2 + 3);
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  char v12 = *a3;
  char v13 = *a4;
  uint64_t v14 = *((void *)a4 + 1);
  uint64_t v22 = *((void *)a4 + 2);
  uint64_t v15 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a5, a1, v15);
  uint64_t v16 = (int *)type metadata accessor for AdInterstitialEngagementEvent.Model(0);
  uint64_t v17 = a5 + v16[5];
  *(void *)uint64_t v17 = v7;
  *(void *)(v17 + 8) = v8;
  *(_WORD *)(v17 + 16) = v9;
  *(_OWORD *)(v17 + 24) = v21;
  __n128 result = v20;
  *(__n128 *)(v17 + 40) = v20;
  *(void *)(v17 + 56) = v10;
  *(void *)(v17 + 64) = v11;
  *(unsigned char *)(a5 + v16[6]) = v12;
  uint64_t v19 = a5 + v16[7];
  *(unsigned char *)uint64_t v19 = v13;
  *(void *)(v19 + 8) = v14;
  *(void *)(v19 + 16) = v22;
  return result;
}

unint64_t sub_20AA96A80()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x617461446461;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6174614464656566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA96B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA993D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA96B3C(uint64_t a1)
{
  unint64_t v2 = sub_20AA96E38();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA96B78(uint64_t a1)
{
  unint64_t v2 = sub_20AA96E38();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdInterstitialEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA97304(0, &qword_267655C08, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA96E38();
  sub_20AB86DC0();
  LOBYTE(v21) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for AdInterstitialEngagementEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = v11[1];
    __int16 v13 = *((_WORD *)v11 + 8);
    uint64_t v21 = *v11;
    uint64_t v22 = v12;
    LOWORD(v23) = v13;
    long long v14 = *(_OWORD *)(v11 + 5);
    long long v24 = *(_OWORD *)(v11 + 3);
    long long v25 = v14;
    long long v26 = *(_OWORD *)(v11 + 7);
    HIBYTE(v20) = 1;
    sub_20AA03D44();
    sub_20AB86C50();
    LOBYTE(v21) = *(unsigned char *)(v3 + v10[6]);
    HIBYTE(v20) = 2;
    sub_20AA962D0();
    sub_20AB86C50();
    uint64_t v15 = (char *)(v3 + v10[7]);
    char v16 = *v15;
    uint64_t v18 = *((void *)v15 + 1);
    uint64_t v17 = *((void *)v15 + 2);
    LOBYTE(v21) = v16;
    uint64_t v22 = v18;
    uint64_t v23 = v17;
    HIBYTE(v20) = 3;
    sub_20A986774();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA96E38()
{
  unint64_t result = qword_267655C10;
  if (!qword_267655C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655C10);
  }
  return result;
}

uint64_t AdInterstitialEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v27 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA97304(0, &qword_267655C18, MEMORY[0x263F8E040]);
  uint64_t v28 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v23 - v7;
  __int16 v9 = (int *)type metadata accessor for AdInterstitialEngagementEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA96E38();
  uint64_t v29 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v23 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v26;
  LOBYTE(v30) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  long long v14 = v27;
  uint64_t v15 = v28;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v36 = 1;
  sub_20AA03CF0();
  sub_20AB86B80();
  uint64_t v16 = v31;
  __int16 v17 = v32;
  uint64_t v18 = v12 + v9[5];
  *(void *)uint64_t v18 = v30;
  *(void *)(v18 + 8) = v16;
  *(_WORD *)(v18 + 16) = v17;
  *(_OWORD *)(v18 + 24) = v33;
  *(_OWORD *)(v18 + 40) = v34;
  *(_OWORD *)(v18 + 56) = v35;
  char v36 = 2;
  sub_20AA9627C();
  sub_20AB86B80();
  *(unsigned char *)(v12 + v9[6]) = v30;
  char v36 = 3;
  sub_20A986720();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v15);
  uint64_t v19 = v31;
  uint64_t v20 = v32;
  uint64_t v21 = v12 + v9[7];
  *(unsigned char *)uint64_t v21 = v30;
  *(void *)(v21 + 8) = v19;
  *(void *)(v21 + 16) = v20;
  sub_20AA97368(v12, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_20AA973CC(v12);
}

void sub_20AA97304(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA96E38();
    unint64_t v7 = a3(a1, &type metadata for AdInterstitialEngagementEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA97368(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AdInterstitialEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA973CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AdInterstitialEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA97428@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AdInterstitialEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA97440(void *a1)
{
  return AdInterstitialEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA97458@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653550, MEMORY[0x263F24D18], (uint64_t)qword_267655BA8, a1);
}

uint64_t sub_20AA97490@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653558, MEMORY[0x263F24DD8], (uint64_t)qword_267655BC0, a1);
}

uint64_t sub_20AA974C8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653560, MEMORY[0x263F24DE8], (uint64_t)qword_267655BD8, a1);
}

uint64_t sub_20AA97500@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for AdInterstitialEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    long long v14 = (char *)a2 + v12;
    sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    __int16 v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for AdInterstitialEngagementEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for AdInterstitialEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for AdInterstitialEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for AdInterstitialEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for AdInterstitialEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdInterstitialEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA98308);
}

uint64_t sub_20AA98308(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for AdInterstitialEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA9855C);
}

uint64_t sub_20AA9855C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA964CC(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_20AA964CC(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_20AA964CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_20AA987A8()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA964CC(319, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
    if (v1 <= 0x3F)
    {
      sub_20AA964CC(319, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
      if (v2 <= 0x3F)
      {
        sub_20AA964CC(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AdInterstitialEngagementEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    uint64_t v13 = *((void *)v11 + 4);
    *((void *)v10 + 3) = *((void *)v11 + 3);
    *((void *)v10 + 4) = v13;
    uint64_t v14 = *((void *)v11 + 6);
    *((void *)v10 + 5) = *((void *)v11 + 5);
    *((void *)v10 + 6) = v14;
    uint64_t v15 = *((void *)v11 + 7);
    uint64_t v16 = *((void *)v11 + 8);
    LOBYTE(v11) = *((unsigned char *)a2 + v9);
    *((void *)v10 + 7) = v15;
    *((void *)v10 + 8) = v16;
    *((unsigned char *)a1 + v9) = (_BYTE)v11;
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *uint64_t v18 = *v19;
    uint64_t v20 = *((void *)v19 + 2);
    *((void *)v18 + 1) = *((void *)v19 + 1);
    *((void *)v18 + 2) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AdInterstitialEngagementEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdInterstitialEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  uint64_t v12 = *(void *)(v10 + 32);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  *(void *)(v9 + 32) = v12;
  uint64_t v13 = *(void *)(v10 + 48);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(void *)(v9 + 48) = v13;
  uint64_t v14 = *(void *)(v10 + 56);
  uint64_t v15 = *(void *)(v10 + 64);
  LOBYTE(v10) = *(unsigned char *)(a2 + v8);
  *(void *)(v9 + 56) = v14;
  *(void *)(v9 + 64) = v15;
  *(unsigned char *)(a1 + v8) = v10;
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdInterstitialEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(unsigned char *)uint64_t v11 = *(unsigned char *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AdInterstitialEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)(v9 + 64) = *(void *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  return a1;
}

uint64_t assignWithTake for AdInterstitialEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 32);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v9 + 48);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v9 + 64);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  uint64_t v17 = *(void *)(v16 + 16);
  *(void *)(v15 + 8) = v18;
  *(void *)(v15 + 16) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdInterstitialEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA98F88);
}

uint64_t sub_20AA98F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AdInterstitialEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA99060);
}

uint64_t sub_20AA99060(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA99120()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AdInterstitialEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA99294);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdInterstitialEngagementEvent.Model.CodingKeys()
{
  return &type metadata for AdInterstitialEngagementEvent.Model.CodingKeys;
}

unint64_t sub_20AA992D0()
{
  unint64_t result = qword_267655C40;
  if (!qword_267655C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655C40);
  }
  return result;
}

unint64_t sub_20AA99328()
{
  unint64_t result = qword_267655C48;
  if (!qword_267655C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655C48);
  }
  return result;
}

unint64_t sub_20AA99380()
{
  unint64_t result = qword_267655C50;
  if (!qword_267655C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655C50);
  }
  return result;
}

uint64_t sub_20AA993D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA8450 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_20AA9958C()
{
  uint64_t v0 = sub_20AB859A0();
  __swift_allocate_value_buffer(v0, qword_26AC4FDA8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26AC4FDA8);
  *(void *)uint64_t v1 = 0x7364612E6D6F63;
  *(void *)(v1 + 8) = 0xE700000000000000;
  *(void *)(v1 + 16) = 3;
  *(unsigned char *)(v1 + 24) = 0;
  BOOL v2 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v2();
}

uint64_t static AdJournalEntryEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4FDC0, MEMORY[0x263F24D18], (uint64_t)qword_26AC4FDA8, a1);
}

uint64_t static AdJournalEntryEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA99678()
{
  uint64_t v0 = sub_20AB85C70();
  __swift_allocate_value_buffer(v0, qword_26AC4FDC8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26AC4FDC8);
  uint64_t v2 = *MEMORY[0x263F24DC0];
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static AdJournalEntryEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4FDE0, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4FDC8, a1);
}

uint64_t sub_20AA99738()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655C58);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655C58);
  return sub_20AB85D30();
}

uint64_t static AdJournalEntryEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC520A8, MEMORY[0x263F24DE8], (uint64_t)qword_267655C58, a1);
}

uint64_t AdJournalEntryEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AdJournalEntryEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AdJournalEntryEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 20);
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AdJournalEntryEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4FDE8);
}

uint64_t AdJournalEntryEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 20);
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 24);
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 24);
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adCreativeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 28);
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adCreativeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 28);
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adCreativeData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 32);
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 32);
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adPlacementData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adJournalEntryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 36);
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20AA99FCC()
{
  unint64_t result = qword_26AC4F8E0;
  if (!qword_26AC4F8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F8E0);
  }
  return result;
}

unint64_t sub_20AA9A020()
{
  unint64_t result = qword_26AC4F8D8;
  if (!qword_26AC4F8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F8D8);
  }
  return result;
}

uint64_t AdJournalEntryEvent.adJournalEntryData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 36);
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adJournalEntryData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 40);
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adSizeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 40);
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adSizeData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 44);
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 44);
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adPositionData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 48);
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AdJournalEntryEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 48);
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adFeedData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 52);
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA9A714(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t AdJournalEntryEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent(0) + 52);
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdJournalEntryEvent.adGroupData.modify())()
{
  return nullsub_1;
}

uint64_t AdJournalEntryEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AdJournalEntryEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = *MEMORY[0x263F24D30];
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v8, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v8, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v8, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v8, v23);
}

uint64_t AdJournalEntryEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AdJournalEntryEvent.Model.adUserData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for AdJournalEntryEvent.Model(0) + 20));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AdJournalEntryEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655C88);
}

uint64_t AdJournalEntryEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdJournalEntryEvent.Model(0) + 24);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);

  return sub_20A99BE1C(v4, v5);
}

uint64_t AdJournalEntryEvent.Model.adCreativeData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t AdJournalEntryEvent.Model.adPlacementData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for AdJournalEntryEvent.Model(0) + 32));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t AdJournalEntryEvent.Model.adJournalEntryData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t AdJournalEntryEvent.Model.adSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for AdJournalEntryEvent.Model(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t AdJournalEntryEvent.Model.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for AdJournalEntryEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 44));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AdJournalEntryEvent.Model.adFeedData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t AdJournalEntryEvent.Model.adGroupData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AdJournalEntryEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 AdJournalEntryEvent.Model.init(eventData:adUserData:channelData:adCreativeData:adPlacementData:adJournalEntryData:adSizeData:adPositionData:adFeedData:adGroupData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __n128 *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, __int16 *a6@<X5>, uint64_t *a7@<X6>, int *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11)
{
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  __n128 v29 = *a3;
  unint64_t v15 = a3[1].n128_u64[0];
  unint64_t v16 = a3[1].n128_u64[1];
  unsigned __int16 v17 = a3[2].n128_u16[0];
  char v18 = *a4;
  uint64_t v19 = *a5;
  uint64_t v20 = a5[1];
  uint64_t v32 = *a7;
  __int16 v30 = *a6;
  char v31 = *((unsigned char *)a7 + 8);
  char v33 = *((unsigned char *)a8 + 4);
  int v34 = *a8;
  char v35 = *a10;
  char v36 = *a11;
  uint64_t v21 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a9, a1, v21);
  uint64_t v22 = (int *)type metadata accessor for AdJournalEntryEvent.Model(0);
  uint64_t v23 = (void *)(a9 + v22[5]);
  *uint64_t v23 = v13;
  v23[1] = v14;
  uint64_t v24 = (__n128 *)(a9 + v22[6]);
  __n128 result = v29;
  *uint64_t v24 = v29;
  v24[1].n128_u64[0] = v15;
  v24[1].n128_u64[1] = v16;
  v24[2].n128_u16[0] = v17;
  *(unsigned char *)(a9 + v22[7]) = v18;
  uint64_t v26 = (void *)(a9 + v22[8]);
  *uint64_t v26 = v19;
  v26[1] = v20;
  *(_WORD *)(a9 + v22[9]) = v30;
  uint64_t v27 = a9 + v22[10];
  *(void *)uint64_t v27 = v32;
  *(unsigned char *)(v27 + 8) = v31;
  uint64_t v28 = a9 + v22[11];
  *(_DWORD *)uint64_t v28 = v34;
  *(unsigned char *)(v28 + 4) = v33;
  *(unsigned char *)(a9 + v22[12]) = v35;
  *(unsigned char *)(a9 + v22[13]) = v36;
  return result;
}

uint64_t sub_20AA9B158(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x726573556461;
      goto LABEL_10;
    case 2:
      return 0x446C656E6E616863;
    case 3:
      return 0x6974616572436461;
    case 4:
      return 0x6D6563616C506461;
    case 5:
      return 0xD000000000000012;
    case 6:
      uint64_t v3 = 0x657A69536461;
      goto LABEL_10;
    case 7:
      return 0x697469736F506461;
    case 8:
      uint64_t v3 = 0x646565466461;
LABEL_10:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 9:
      uint64_t result = 0x4470756F72476461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA9B2BC()
{
  return sub_20AA9B158(*v0);
}

uint64_t sub_20AA9B2C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA9FFD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA9B2EC(uint64_t a1)
{
  unint64_t v2 = sub_20AA9B780();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA9B328(uint64_t a1)
{
  unint64_t v2 = sub_20AA9B780();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdJournalEntryEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA9BEC8(0, &qword_267655C70, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA9B780();
  sub_20AB86DC0();
  LOBYTE(v25[0]) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for AdJournalEntryEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *(void *)&v25[0] = v13;
    *((void *)&v25[0] + 1) = v12;
    char v27 = 1;
    sub_20A99A454();
    sub_20AB86C50();
    uint64_t v14 = v3 + v10[6];
    __int16 v15 = *(_WORD *)(v14 + 32);
    long long v16 = *(_OWORD *)(v14 + 16);
    v25[0] = *(_OWORD *)v14;
    v25[1] = v16;
    __int16 v26 = v15;
    char v27 = 2;
    sub_20A9862D4();
    sub_20AB86BE0();
    LOBYTE(v25[0]) = *(unsigned char *)(v3 + v10[7]);
    char v27 = 3;
    sub_20AA11430();
    sub_20AB86C50();
    unsigned __int16 v17 = (uint64_t *)(v3 + v10[8]);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    *(void *)&v25[0] = v19;
    *((void *)&v25[0] + 1) = v18;
    char v27 = 4;
    sub_20A99A9F4();
    sub_20AB86C50();
    LOWORD(v25[0]) = *(_WORD *)(v3 + v10[9]);
    char v27 = 5;
    sub_20AA9A020();
    sub_20AB86C50();
    uint64_t v20 = (uint64_t *)(v3 + v10[10]);
    uint64_t v21 = *v20;
    LOBYTE(v20) = *((unsigned char *)v20 + 8);
    *(void *)&v25[0] = v21;
    BYTE8(v25[0]) = (_BYTE)v20;
    char v27 = 6;
    sub_20A99AC44();
    sub_20AB86BE0();
    uint64_t v22 = (int *)(v3 + v10[11]);
    int v23 = *v22;
    LOBYTE(v22) = *((unsigned char *)v22 + 4);
    LODWORD(v25[0]) = v23;
    BYTE4(v25[0]) = (_BYTE)v22;
    char v27 = 7;
    sub_20A99AE94();
    sub_20AB86BE0();
    LOBYTE(v25[0]) = *(unsigned char *)(v3 + v10[12]);
    char v27 = 8;
    sub_20A99B0E4();
    sub_20AB86BE0();
    LOBYTE(v25[0]) = *(unsigned char *)(v3 + v10[13]);
    char v27 = 9;
    sub_20A99B600();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA9B780()
{
  unint64_t result = qword_267655C78;
  if (!qword_267655C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655C78);
  }
  return result;
}

uint64_t AdJournalEntryEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v31 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA9BEC8(0, &qword_267655C80, MEMORY[0x263F8E040]);
  uint64_t v32 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v34 = type metadata accessor for AdJournalEntryEvent.Model(0);
  MEMORY[0x270FA5388](v34);
  char v35 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_20AA9B780();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  uint64_t v30 = a2;
  uint64_t v14 = v9;
  LOBYTE(v36) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  sub_20AB86B80();
  __int16 v15 = v35;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v35, v7, v5);
  char v39 = 1;
  sub_20A99A400();
  sub_20AB86B80();
  uint64_t v16 = *((void *)&v36 + 1);
  unsigned __int16 v17 = (int *)v34;
  uint64_t v18 = &v15[*(int *)(v34 + 20)];
  *(void *)uint64_t v18 = v36;
  *((void *)v18 + 1) = v16;
  char v39 = 2;
  sub_20A986280();
  sub_20AB86B10();
  __int16 v19 = v38;
  uint64_t v20 = &v15[v17[6]];
  long long v21 = v37;
  *(_OWORD *)uint64_t v20 = v36;
  *((_OWORD *)v20 + 1) = v21;
  *((_WORD *)v20 + 16) = v19;
  char v39 = 3;
  sub_20AA113D8();
  sub_20AB86B80();
  v15[v17[7]] = v36;
  char v39 = 4;
  sub_20A99A9A0();
  sub_20AB86B80();
  uint64_t v22 = *((void *)&v36 + 1);
  int v23 = &v15[v17[8]];
  *(void *)int v23 = v36;
  *((void *)v23 + 1) = v22;
  char v39 = 5;
  sub_20AA99FCC();
  sub_20AB86B80();
  *(_WORD *)&v15[v17[9]] = v36;
  char v39 = 6;
  sub_20A99ABF0();
  sub_20AB86B10();
  char v24 = BYTE8(v36);
  uint64_t v25 = &v15[v17[10]];
  *(void *)uint64_t v25 = v36;
  v25[8] = v24;
  char v39 = 7;
  sub_20A99AE40();
  sub_20AB86B10();
  char v26 = BYTE4(v36);
  char v27 = &v15[v17[11]];
  *(_DWORD *)char v27 = v36;
  v27[4] = v26;
  char v39 = 8;
  sub_20A99B090();
  sub_20AB86B10();
  v15[v17[12]] = v36;
  char v39 = 9;
  sub_20A99B5AC();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v32);
  uint64_t v28 = (uint64_t)v35;
  v35[*(int *)(v34 + 52)] = v36;
  sub_20AA9BF2C(v28, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_20AA9BF90(v28);
}

void sub_20AA9BEC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA9B780();
    unint64_t v7 = a3(a1, &type metadata for AdJournalEntryEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA9BF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AdJournalEntryEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA9BF90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AdJournalEntryEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA9BFEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AdJournalEntryEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA9C004(void *a1)
{
  return AdJournalEntryEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA9C01C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4FDC0, MEMORY[0x263F24D18], (uint64_t)qword_26AC4FDA8, a1);
}

uint64_t sub_20AA9C054@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4FDE0, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4FDC8, a1);
}

uint64_t sub_20AA9C08C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC520A8, MEMORY[0x263F24DE8], (uint64_t)qword_267655C58, a1);
}

uint64_t sub_20AA9C0C4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = *MEMORY[0x263F24D30];
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v9, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v9, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v9, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v9, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for AdJournalEntryEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    __n128 v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    long long v37 = (char *)a1 + v36;
    __int16 v38 = (char *)a2 + v36;
    sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for AdJournalEntryEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for AdJournalEntryEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdJournalEntryEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA9E398);
}

uint64_t sub_20AA9E398(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA9E904);
}

uint64_t sub_20AA9E904(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA9A714(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  sub_20AA9A714(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  sub_20AA9A714(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_20AA9EE68()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA9A714(319, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
    if (v1 <= 0x3F)
    {
      sub_20AA9A714(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
      if (v2 <= 0x3F)
      {
        sub_20AA9A714(319, &qword_26AC4E5E8, (void (*)(void))sub_20AA113D8, (void (*)(void))sub_20AA11430);
        if (v3 <= 0x3F)
        {
          sub_20AA9A714(319, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
          if (v4 <= 0x3F)
          {
            sub_20AA9A714(319, &qword_26AC4E630, (void (*)(void))sub_20AA99FCC, (void (*)(void))sub_20AA9A020);
            if (v5 <= 0x3F)
            {
              sub_20AA9A714(319, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
              if (v6 <= 0x3F)
              {
                sub_20AA9A714(319, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
                if (v7 <= 0x3F)
                {
                  sub_20AA9A714(319, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
                  if (v8 <= 0x3F)
                  {
                    sub_20AA9A714(319, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AdJournalEntryEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = *(void *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    if (v15)
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v15;
      uint64_t v16 = *((void *)v14 + 3);
      *((void *)v13 + 2) = *((void *)v14 + 2);
      *((void *)v13 + 3) = v16;
      *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v18 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v18;
      *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
    }
    uint64_t v19 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[10];
    *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = a3[11];
    uint64_t v27 = a3[12];
    uint64_t v28 = (char *)a1 + v26;
    uint64_t v29 = (char *)a2 + v26;
    *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    *((unsigned char *)a1 + v27) = *((unsigned char *)a2 + v27);
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 24) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  if (v14)
  {
    *(void *)uint64_t v12 = *(void *)v13;
    *(void *)(v12 + 8) = v14;
    uint64_t v15 = *(void *)(v13 + 24);
    *(void *)(v12 + 16) = *(void *)(v13 + 16);
    *(void *)(v12 + 24) = v15;
    *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v16;
    *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
  }
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  long long v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *long long v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[11];
  uint64_t v25 = a3[12];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (long long *)(a2 + v10);
  uint64_t v13 = *(void *)(a1 + v10 + 8);
  uint64_t v14 = *(void *)(a2 + v10 + 8);
  if (v13)
  {
    if (v14)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *((void *)v12 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v11 + 16) = *((void *)v12 + 2);
      *(void *)(v11 + 24) = *((void *)v12 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v11 + 32) = *((unsigned char *)v12 + 32);
      *(unsigned char *)(v11 + 33) = *((unsigned char *)v12 + 33);
    }
    else
    {
      sub_20A9A0F9C(v11);
      __int16 v15 = *((_WORD *)v12 + 16);
      long long v16 = v12[1];
      *(_OWORD *)uint64_t v11 = *v12;
      *(_OWORD *)(v11 + 16) = v16;
      *(_WORD *)(v11 + 32) = v15;
    }
  }
  else if (v14)
  {
    *(void *)uint64_t v11 = *(void *)v12;
    *(void *)(v11 + 8) = *((void *)v12 + 1);
    *(void *)(v11 + 16) = *((void *)v12 + 2);
    *(void *)(v11 + 24) = *((void *)v12 + 3);
    *(unsigned char *)(v11 + 32) = *((unsigned char *)v12 + 32);
    *(unsigned char *)(v11 + 33) = *((unsigned char *)v12 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *v12;
    long long v18 = v12[1];
    *(_WORD *)(v11 + 32) = *((_WORD *)v12 + 16);
    *(_OWORD *)uint64_t v11 = v17;
    *(_OWORD *)(v11 + 16) = v18;
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = (unsigned char *)(a1 + v22);
  uint64_t v24 = (unsigned char *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v28 = *v27;
  *(unsigned char *)(v26 + 8) = *((unsigned char *)v27 + 8);
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[11];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  LODWORD(v28) = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  *(_DWORD *)uint64_t v30 = v28;
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_WORD *)(v8 + 32) = *(_WORD *)(v9 + 32);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  if (!*(void *)(a1 + v12 + 8)) {
    goto LABEL_5;
  }
  uint64_t v15 = *(void *)(v14 + 8);
  if (!v15)
  {
    sub_20A9A0F9C(v13);
LABEL_5:
    long long v17 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v17;
    *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
    goto LABEL_6;
  }
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(unsigned char *)(v13 + 33) = *(unsigned char *)(v14 + 33);
LABEL_6:
  uint64_t v18 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  uint64_t v26 = a3[11];
  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(unsigned char *)(v28 + 4) = *(unsigned char *)(v29 + 4);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA9FB58);
}

uint64_t sub_20AA9FB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA9FC30);
}

uint64_t sub_20AA9FC30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA9FCF0()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AdJournalEntryEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA9FE90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryEvent.Model.CodingKeys()
{
  return &type metadata for AdJournalEntryEvent.Model.CodingKeys;
}

unint64_t sub_20AA9FECC()
{
  unint64_t result = qword_267655C98;
  if (!qword_267655C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655C98);
  }
  return result;
}

unint64_t sub_20AA9FF24()
{
  unint64_t result = qword_267655CA0;
  if (!qword_267655CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655CA0);
  }
  return result;
}

unint64_t sub_20AA9FF7C()
{
  unint64_t result = qword_267655CA8;
  if (!qword_267655CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655CA8);
  }
  return result;
}

uint64_t sub_20AA9FFD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6974616572436461 && a2 == 0xEE00617461446576 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA8470 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144657A69536461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x697469736F506461 && a2 == 0xEE00617461446E6FLL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_20AAA0474(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC50A40, MEMORY[0x263F24D10]);
}

uint64_t static EarningsBarExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4E1B8, MEMORY[0x263F24D18], (uint64_t)qword_26AC50A40, a1);
}

uint64_t static EarningsBarExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAA04DC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC50A58, MEMORY[0x263F24DC8]);
}

uint64_t static EarningsBarExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50A70, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50A58, a1);
}

uint64_t sub_20AAA053C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655CB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655CB0);
  return sub_20AB85D30();
}

uint64_t static EarningsBarExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653568, MEMORY[0x263F24DE8], (uint64_t)qword_267655CB0, a1);
}

uint64_t EarningsBarExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t EarningsBarExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*EarningsBarExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AAA1230(type metadata accessor for EarningsBarExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for EarningsBarExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC50A78);
}

uint64_t EarningsBarExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EarningsBarExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 24);
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EarningsBarExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 24);
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EarningsBarExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 28);
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EarningsBarExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 28);
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EarningsBarExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 32);
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EarningsBarExposureEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 32);
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EarningsBarExposureEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.earningsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 36);
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AAA0D14(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20AAA0D90()
{
  unint64_t result = qword_26AC4E0F8;
  if (!qword_26AC4E0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E0F8);
  }
  return result;
}

unint64_t sub_20AAA0DE4()
{
  unint64_t result = qword_26AC4ECB8;
  if (!qword_26AC4ECB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECB8);
  }
  return result;
}

uint64_t EarningsBarExposureEvent.earningsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent(0) + 36);
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EarningsBarExposureEvent.earningsData.modify())()
{
  return nullsub_1;
}

uint64_t EarningsBarExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for EarningsBarExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v2, v14);
}

uint64_t EarningsBarExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t EarningsBarExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AAA1230(type metadata accessor for EarningsBarExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AAA1230@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for EarningsBarExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655CE0);
}

uint64_t EarningsBarExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent.Model(0) + 24);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t EarningsBarExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent.Model(0) + 28));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t EarningsBarExposureEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EarningsBarExposureEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t EarningsBarExposureEvent.Model.earningsData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for EarningsBarExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t EarningsBarExposureEvent.Model.init(eventData:timedData:feedData:viewData:symbolData:earningsData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, int *a6@<X5>, uint64_t a7@<X8>)
{
  char v10 = *a3;
  uint64_t v11 = *((void *)a3 + 1);
  uint64_t v12 = *((void *)a3 + 2);
  uint64_t v13 = *a4;
  uint64_t v14 = a4[1];
  __int16 v15 = *((_WORD *)a4 + 8);
  uint64_t v27 = a5[1];
  uint64_t v28 = *a5;
  char v26 = *((unsigned char *)a5 + 16);
  uint64_t v24 = a5[4];
  uint64_t v25 = a5[3];
  int v29 = *a6;
  uint64_t v16 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a7, a1, v16);
  long long v17 = (int *)type metadata accessor for EarningsBarExposureEvent.Model(0);
  uint64_t v18 = a7 + v17[5];
  uint64_t v19 = sub_20AB85FE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a2, v19);
  uint64_t v21 = a7 + v17[6];
  *(unsigned char *)uint64_t v21 = v10;
  *(void *)(v21 + 8) = v11;
  *(void *)(v21 + 16) = v12;
  uint64_t v22 = a7 + v17[7];
  *(void *)uint64_t v22 = v13;
  *(void *)(v22 + 8) = v14;
  *(_WORD *)(v22 + 16) = v15;
  uint64_t v23 = a7 + v17[8];
  *(void *)uint64_t v23 = v28;
  *(void *)(v23 + 8) = v27;
  *(unsigned char *)(v23 + 16) = v26;
  *(void *)(v23 + 24) = v25;
  *(void *)(v23 + 32) = v24;
  *(_DWORD *)(a7 + v17[9]) = v29;
  return result;
}

uint64_t sub_20AAA157C()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unsigned int v2 = 1684366694;
      goto LABEL_5;
    case 3:
      unsigned int v2 = 2003134838;
LABEL_5:
      uint64_t result = v2 | 0x6174614400000000;
      break;
    case 4:
      uint64_t result = 0x61446C6F626D7973;
      break;
    case 5:
      uint64_t result = 0x73676E696E726165;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAA1648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAA4C5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAA1670(uint64_t a1)
{
  unint64_t v2 = sub_20AAA1A3C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAA16AC(uint64_t a1)
{
  unint64_t v2 = sub_20AAA1A3C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EarningsBarExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AAA212C(0, &qword_267655CC8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAA1A3C();
  sub_20AB86DC0();
  LOBYTE(v25) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for EarningsBarExposureEvent.Model(0);
    LOBYTE(v25) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (char *)(v3 + v10[6]);
    char v12 = *v11;
    uint64_t v14 = *((void *)v11 + 1);
    uint64_t v13 = *((void *)v11 + 2);
    LOBYTE(v25) = v12;
    uint64_t v26 = v14;
    uint64_t v27 = v13;
    char v30 = 2;
    sub_20A986774();
    sub_20AB86C50();
    __int16 v15 = (uint64_t *)(v3 + v10[7]);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    uint64_t v25 = v16;
    uint64_t v26 = v17;
    LOWORD(v27) = (_WORD)v15;
    char v30 = 3;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v18 = (uint64_t *)(v3 + v10[8]);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    char v21 = *((unsigned char *)v18 + 16);
    uint64_t v23 = v18[3];
    uint64_t v22 = v18[4];
    uint64_t v25 = v19;
    uint64_t v26 = v20;
    LOBYTE(v27) = v21;
    uint64_t v28 = v23;
    uint64_t v29 = v22;
    char v30 = 4;
    sub_20A97C61C();
    sub_20AB86C50();
    LODWORD(v25) = *(_DWORD *)(v3 + v10[9]);
    char v30 = 5;
    sub_20AAA0DE4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AAA1A3C()
{
  unint64_t result = qword_267655CD0;
  if (!qword_267655CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655CD0);
  }
  return result;
}

uint64_t EarningsBarExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v35 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAA212C(0, &qword_267655CD8, MEMORY[0x263F8E040]);
  uint64_t v37 = v8;
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v30 - v9;
  uint64_t v11 = (int *)type metadata accessor for EarningsBarExposureEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAA1A3C();
  uint64_t v36 = v10;
  uint64_t v14 = (uint64_t)v38;
  sub_20AB86DA0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __int16 v15 = v5;
  uint64_t v38 = a1;
  uint64_t v16 = v33;
  uint64_t v17 = v34;
  LOBYTE(v39) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v13, v35, v6);
  LOBYTE(v39) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v13[v11[5]], v15, v17);
  char v44 = 2;
  sub_20A986720();
  sub_20AB86B80();
  uint64_t v18 = v40;
  uint64_t v19 = v41;
  uint64_t v20 = &v13[v11[6]];
  *uint64_t v20 = v39;
  *((void *)v20 + 1) = v18;
  *((void *)v20 + 2) = v19;
  char v44 = 3;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v21 = v40;
  __int16 v22 = v41;
  uint64_t v23 = &v13[v11[7]];
  *(void *)uint64_t v23 = v39;
  *((void *)v23 + 1) = v21;
  *((_WORD *)v23 + 8) = v22;
  char v44 = 4;
  sub_20A97C5C8();
  sub_20AB86B80();
  uint64_t v24 = v40;
  char v25 = v41;
  uint64_t v26 = v42;
  uint64_t v27 = v43;
  uint64_t v28 = &v13[v11[8]];
  *(void *)uint64_t v28 = v39;
  *((void *)v28 + 1) = v24;
  v28[16] = v25;
  *((void *)v28 + 3) = v26;
  *((void *)v28 + 4) = v27;
  char v44 = 5;
  sub_20AAA0D90();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v37);
  *(_DWORD *)&v13[v11[9]] = v39;
  sub_20AAA2190((uint64_t)v13, v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return sub_20AAA21F4((uint64_t)v13);
}

void sub_20AAA212C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAA1A3C();
    unint64_t v7 = a3(a1, &type metadata for EarningsBarExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAA2190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EarningsBarExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AAA21F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EarningsBarExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AAA2250@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EarningsBarExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAA2268(void *a1)
{
  return EarningsBarExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AAA2280@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4E1B8, MEMORY[0x263F24D18], (uint64_t)qword_26AC50A40, a1);
}

uint64_t sub_20AAA22B8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50A70, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50A58, a1);
}

uint64_t sub_20AAA22F0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653568, MEMORY[0x263F24DE8], (uint64_t)qword_267655CB0, a1);
}

uint64_t sub_20AAA2328@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for EarningsBarExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    __int16 v22 = (char *)a2 + v20;
    sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for EarningsBarExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for EarningsBarExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for EarningsBarExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for EarningsBarExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for EarningsBarExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for EarningsBarExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAA3690);
}

uint64_t sub_20AAA3690(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for EarningsBarExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAA39B4);
}

uint64_t sub_20AAA39B4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  sub_20AAA0D14(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  sub_20AAA0D14(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  sub_20AAA0D14(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  sub_20AAA0D14(0, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_20AAA3CD0()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AAA0D14(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
      if (v2 <= 0x3F)
      {
        sub_20AAA0D14(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
        if (v3 <= 0x3F)
        {
          sub_20AAA0D14(319, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
          if (v4 <= 0x3F)
          {
            sub_20AAA0D14(319, &qword_26AC4E5D8, (void (*)(void))sub_20AAA0D90, (void (*)(void))sub_20AAA0DE4);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EarningsBarExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *uint64_t v14 = *v15;
    uint64_t v16 = *((void *)v15 + 2);
    *((void *)v14 + 1) = *((void *)v15 + 1);
    *((void *)v14 + 2) = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    v22[16] = v23[16];
    uint64_t v25 = *((void *)v23 + 4);
    *((void *)v22 + 3) = *((void *)v23 + 3);
    *((void *)v22 + 4) = v25;
    *(_DWORD *)((char *)a1 + v21) = *(_DWORD *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  *(void *)(v13 + 16) = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  uint64_t v18 = *(void *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  uint64_t v23 = *(void *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = v23;
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  uint64_t v24 = *(void *)(v22 + 32);
  *(void *)(v21 + 24) = *(void *)(v22 + 24);
  *(void *)(v21 + 32) = v24;
  *(_DWORD *)(a1 + v20) = *(_DWORD *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  *(unsigned char *)(v15 + 17) = *(unsigned char *)(v16 + 17);
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)(a2 + v17);
  *(void *)(v18 + 8) = *(void *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = (long long *)(a2 + v11);
  long long v15 = *v14;
  *(void *)(v13 + 16) = *((void *)v14 + 2);
  *(_OWORD *)uint64_t v13 = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(_DWORD *)(a1 + v19) = *(_DWORD *)(a2 + v19);
  return a1;
}

uint64_t assignWithTake for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  uint64_t v14 = *(void *)(v13 + 16);
  *(void *)(v12 + 8) = v15;
  *(void *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(a2 + v20 + 8);
  *(void *)uint64_t v21 = *(void *)(a2 + v20);
  *(void *)(v21 + 8) = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  uint64_t v24 = *(void *)(v22 + 32);
  *(void *)(v21 + 24) = *(void *)(v22 + 24);
  *(void *)(v21 + 32) = v24;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAA471C);
}

uint64_t sub_20AAA471C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EarningsBarExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAA4848);
}

uint64_t sub_20AAA4848(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AAA495C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EarningsBarExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAA4B1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EarningsBarExposureEvent.Model.CodingKeys()
{
  return &type metadata for EarningsBarExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AAA4B58()
{
  unint64_t result = qword_267655CF0;
  if (!qword_267655CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655CF0);
  }
  return result;
}

unint64_t sub_20AAA4BB0()
{
  unint64_t result = qword_267655CF8;
  if (!qword_267655CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655CF8);
  }
  return result;
}

unint64_t sub_20AAA4C08()
{
  unint64_t result = qword_267655D00;
  if (!qword_267655D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655D00);
  }
  return result;
}

uint64_t sub_20AAA4C5C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73676E696E726165 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_20AAA4F1C()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_20AB85480();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_20AB86370();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20AB86280();
  uint64_t v10 = sub_20AB86360();
  uint64_t v12 = v11;
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  if (v12)
  {
    *((void *)&v29 + 1) = MEMORY[0x263F8D310];
    *(void *)&long long v28 = v10;
    *((void *)&v28 + 1) = v12;
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  sub_20AAA5DC8((uint64_t)&v28, (uint64_t)v26, (uint64_t (*)(void))sub_20A984FF4);
  if (!v27)
  {
    sub_20AAA5E30((uint64_t)v26, (uint64_t (*)(void))sub_20A984FF4);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    int v14 = 2;
    goto LABEL_13;
  }
  if (v24 != 0xD000000000000017 || v25 != 0x800000020ABA7230)
  {
    char v13 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  int v14 = 1;
LABEL_13:
  int v23 = v14;
  sub_20AAA5E30((uint64_t)&v28, (uint64_t (*)(void))sub_20A984FF4);
  uint64_t v15 = &v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager];
  __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager], *(void *)&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager + 24]);
  sub_20AB85570();
  uint64_t v16 = sub_20AB853B0();
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v17(v5, v2);
  __swift_project_boxed_opaque_existential_1(v15, *((void *)v15 + 3));
  sub_20AB85570();
  uint64_t v18 = sub_20AB853C0();
  v17(v5, v2);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v1;
  *(unsigned char *)(v19 + 24) = v23;
  *(void *)(v19 + 32) = v16;
  *(void *)(v19 + 40) = v18;
  *(unsigned char *)(v19 + 48) = 5;
  uint64_t v20 = v1;
  sub_20AB85AC0();
  return swift_release();
}

void *_s15StocksAnalytics15SessionObserverC018sceneWillConnectToC011withOptionsy13TeaFoundation015SceneConnectionJ0V_tF_0()
{
  void (*v17)(uint64_t *__return_ptr, char *, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  int v27;
  id v28;
  uint64_t v29;

  unint64_t v1 = v0;
  uint64_t v2 = sub_20AB85480();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAA5E90(0, &qword_26AC51E38, MEMORY[0x263F200E8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = sub_20AB86430();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = (void *)sub_20AB86380();
  if (result)
  {
    long long v28 = result;
    sub_20AB86880();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_20AAA5EF4((uint64_t)v8);
      uint64_t v26 = 2;
      uint64_t v27 = 5;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      uint64_t v25 = v3;
      uint64_t v14 = v2;
      uint64_t v15 = *(void *)&v0[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appIntentExecutionTypeProvider + 24];
      uint64_t v16 = *(void *)&v0[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appIntentExecutionTypeProvider + 32];
      __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appIntentExecutionTypeProvider], v15);
      uint64_t v17 = *(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t))(v16 + 8);
      uint64_t v18 = v16;
      uint64_t v2 = v14;
      unint64_t v1 = v0;
      uint64_t v3 = v25;
      v17(&v29, v12, v15, v18);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v26 = 9;
      uint64_t v27 = v29;
    }
    uint64_t v19 = &v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager];
    __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager], *(void *)&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager + 24]);
    sub_20AB85570();
    uint64_t v20 = sub_20AB853B0();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v3 + 8);
    v21(v5, v2);
    __swift_project_boxed_opaque_existential_1(v19, *((void *)v19 + 3));
    sub_20AB85570();
    uint64_t v22 = sub_20AB853C0();
    v21(v5, v2);
    int v23 = swift_allocObject();
    *(void *)(v23 + 16) = v1;
    *(unsigned char *)(v23 + 24) = v26;
    *(void *)(v23 + 32) = v20;
    *(void *)(v23 + 40) = v22;
    *(unsigned char *)(v23 + 48) = v27;
    uint64_t v24 = v1;
    sub_20AB85AC0();

    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_20AAA5664(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  sub_20AAA58A4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v22 = a3;
  unsigned __int8 v21 = a6;
  sub_20AAA5960(&v22, a4, a5, &v21, (uint64_t)v14);
  sub_20AAA5E90(0, (unint64_t *)&qword_26AC51990, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v15 = sub_20AB85A70();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_20AB88020;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x263F24D40], v15);
  type metadata accessor for SessionData();
  sub_20AAA5908();
  sub_20AB85C50();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_20AAA58A4()
{
  if (!qword_26AC4E548)
  {
    type metadata accessor for SessionData();
    sub_20AAA5908();
    unint64_t v0 = sub_20AB85920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E548);
    }
  }
}

unint64_t sub_20AAA5908()
{
  unint64_t result = qword_26AC4EC40;
  if (!qword_26AC4EC40)
  {
    type metadata accessor for SessionData();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC40);
  }
  return result;
}

uint64_t sub_20AAA5960@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v50 = a5;
  char v51 = a4;
  uint64_t v48 = a3;
  uint64_t v49 = a2;
  uint64_t v44 = sub_20AB85230();
  uint64_t v6 = *(void *)(v44 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v44);
  uint64_t v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v42[-v10];
  uint64_t v12 = sub_20AB851C0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v42[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_20AB85260();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = &v42[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v47 = type metadata accessor for SessionData();
  uint64_t v20 = MEMORY[0x270FA5388](v47);
  char v46 = &v42[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v20);
  uint64_t v45 = &v42[-v22];
  int v43 = *a1;
  LODWORD(v51) = *v51;
  sub_20AB85250();
  sub_20AB851B0();
  uint64_t v23 = sub_20AB85240();
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v17 + 8))(v19, v16);
  if (v23 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v23 > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_20AB85220();
  uint64_t v25 = sub_20AB85210();
  uint64_t v27 = v26;
  long long v28 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  uint64_t v29 = v44;
  v28(v11, v44);
  sub_20AB85220();
  uint64_t v30 = sub_20AB85200();
  uint64_t v32 = v31;
  v28(v9, v29);
  if (sub_20AB85640()) {
    char v33 = 1;
  }
  else {
    char v33 = 2;
  }
  char v54 = v33;
  char v53 = v43;
  uint64_t v34 = v49;
  swift_bridgeObjectRetain();
  uint64_t v35 = v48;
  swift_bridgeObjectRetain();
  char v36 = NFStoreDemoMode();
  id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F51788]), sel_init);
  unsigned __int8 v38 = objc_msgSend(v37, sel_personalizedAds);

  char v52 = (char)v51;
  BYTE1(v41) = v38;
  LOBYTE(v41) = v36;
  *((void *)&v40 + 1) = v34;
  *(void *)&long long v40 = 0x800000020ABA8500;
  uint64_t v39 = v45;
  SessionData.init(utcOffset:languageCode:countryCode:iCloudAccountState:startMethod:productType:userSegmentationTreatmentIDs:userSegmentationSegmentSetIDs:isStoreDemoUser:isPersonalizedAdsEnabled:appIntentType:)(v23, v25, v27, v30, v32, &v54, &v53, 0xD000000000000010, (uint64_t)v45, v40, v35, v41, &v52);
  sub_20AAA5DC8((uint64_t)v39, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for SessionData);
  sub_20AAA5908();
  sub_20AB85910();
  return sub_20AAA5E30((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for SessionData);
}

uint64_t sub_20AAA5DC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20AAA5E30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20AAA5E90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20AAA5EF4(uint64_t a1)
{
  sub_20AAA5E90(0, &qword_26AC51E38, MEMORY[0x263F200E8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AAA5F84(uint64_t a1)
{
  return sub_20AAA5664(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
}

uint64_t sub_20AAA5F98()
{
  uint64_t v0 = sub_20AB859A0();
  __swift_allocate_value_buffer(v0, qword_267655D08);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_267655D08);
  *(void *)uint64_t v1 = 0x7364612E6D6F63;
  *(void *)(v1 + 8) = 0xE700000000000000;
  *(void *)(v1 + 16) = 3;
  *(unsigned char *)(v1 + 24) = 0;
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v2();
}

uint64_t static NativeAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653570, MEMORY[0x263F24D18], (uint64_t)qword_267655D08, a1);
}

uint64_t static NativeAdImpressionEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAA6084()
{
  uint64_t v0 = sub_20AB85C70();
  __swift_allocate_value_buffer(v0, qword_267655D20);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_267655D20);
  uint64_t v2 = *MEMORY[0x263F24DC0];
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static NativeAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653578, MEMORY[0x263F24DD8], (uint64_t)qword_267655D20, a1);
}

uint64_t sub_20AAA6144()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655D38);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655D38);
  return sub_20AB85D30();
}

uint64_t static NativeAdImpressionEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653580, MEMORY[0x263F24DE8], (uint64_t)qword_267655D38, a1);
}

uint64_t NativeAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NativeAdImpressionEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NativeAdImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AAA71EC(type metadata accessor for NativeAdImpressionEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for NativeAdImpressionEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655D68);
}

uint64_t NativeAdImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 24);
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 24);
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 28);
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 28);
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 32);
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 32);
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adPlacementData.modify())()
{
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 36);
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.adPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 36);
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 40);
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NativeAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 40);
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adFeedData.modify())()
{
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 44);
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AAA6C6C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t NativeAdImpressionEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent(0) + 44);
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NativeAdImpressionEvent.adGroupData.modify())()
{
  return nullsub_1;
}

uint64_t NativeAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NativeAdImpressionEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v10, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v10, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);

  return v20(v18, v10, v19);
}

uint64_t NativeAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NativeAdImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AAA71EC(type metadata accessor for NativeAdImpressionEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AAA71EC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for NativeAdImpressionEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655D78);
}

uint64_t NativeAdImpressionEvent.Model.adUserData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent.Model(0) + 24));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NativeAdImpressionEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent.Model(0) + 28);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);

  return sub_20A99BE1C(v4, v5);
}

uint64_t NativeAdImpressionEvent.Model.adPlacementData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NativeAdImpressionEvent.Model(0) + 32));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NativeAdImpressionEvent.Model.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NativeAdImpressionEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 36));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NativeAdImpressionEvent.Model.adFeedData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NativeAdImpressionEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t NativeAdImpressionEvent.Model.adGroupData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NativeAdImpressionEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 44));
  return result;
}

__n128 NativeAdImpressionEvent.Model.init(eventData:timedData:adUserData:channelData:adPlacementData:adPositionData:adFeedData:adGroupData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __n128 *a4@<X3>, uint64_t *a5@<X4>, int *a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  __n128 v27 = *a4;
  unint64_t v14 = a4[1].n128_u64[0];
  unint64_t v15 = a4[1].n128_u64[1];
  unsigned __int16 v16 = a4[2].n128_u16[0];
  uint64_t v17 = *a5;
  uint64_t v28 = a5[1];
  char v29 = *((unsigned char *)a6 + 4);
  int v30 = *a6;
  char v31 = *a7;
  char v32 = *a8;
  uint64_t v18 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a9, a1, v18);
  uint64_t v19 = (int *)type metadata accessor for NativeAdImpressionEvent.Model(0);
  uint64_t v20 = a9 + v19[5];
  uint64_t v21 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a2, v21);
  uint64_t v22 = (void *)(a9 + v19[6]);
  *uint64_t v22 = v12;
  v22[1] = v13;
  uint64_t v23 = (__n128 *)(a9 + v19[7]);
  __n128 result = v27;
  *uint64_t v23 = v27;
  v23[1].n128_u64[0] = v14;
  v23[1].n128_u64[1] = v15;
  v23[2].n128_u16[0] = v16;
  uint64_t v25 = (void *)(a9 + v19[8]);
  *uint64_t v25 = v17;
  v25[1] = v28;
  uint64_t v26 = a9 + v19[9];
  *(_DWORD *)uint64_t v26 = v30;
  *(unsigned char *)(v26 + 4) = v29;
  *(unsigned char *)(a9 + v19[10]) = v31;
  *(unsigned char *)(a9 + v19[11]) = v32;
  return result;
}

uint64_t sub_20AAA75A0()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t v2 = 0x726573556461;
      goto LABEL_8;
    case 3:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 4:
      uint64_t result = 0x6D6563616C506461;
      break;
    case 5:
      uint64_t result = 0x697469736F506461;
      break;
    case 6:
      uint64_t v2 = 0x646565466461;
LABEL_8:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 7:
      uint64_t result = 0x4470756F72476461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAA76B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAAB928(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAA76E0(uint64_t a1)
{
  unint64_t v2 = sub_20AAA7B28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAA771C(uint64_t a1)
{
  unint64_t v2 = sub_20AAA7B28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NativeAdImpressionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AAA82B0(0, &qword_267655D50, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAA7B28();
  sub_20AB86DC0();
  LOBYTE(v23[0]) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for NativeAdImpressionEvent.Model(0);
    LOBYTE(v23[0]) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (uint64_t *)(v3 + v10[6]);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *(void *)&v23[0] = v13;
    *((void *)&v23[0] + 1) = v12;
    char v25 = 2;
    sub_20A99A454();
    sub_20AB86C50();
    uint64_t v14 = v3 + v10[7];
    __int16 v15 = *(_WORD *)(v14 + 32);
    long long v16 = *(_OWORD *)(v14 + 16);
    v23[0] = *(_OWORD *)v14;
    v23[1] = v16;
    __int16 v24 = v15;
    char v25 = 3;
    sub_20A9862D4();
    sub_20AB86BE0();
    uint64_t v17 = (uint64_t *)(v3 + v10[8]);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    *(void *)&v23[0] = v19;
    *((void *)&v23[0] + 1) = v18;
    char v25 = 4;
    sub_20A99A9F4();
    sub_20AB86C50();
    uint64_t v20 = (int *)(v3 + v10[9]);
    int v21 = *v20;
    LOBYTE(v20) = *((unsigned char *)v20 + 4);
    LODWORD(v23[0]) = v21;
    BYTE4(v23[0]) = (_BYTE)v20;
    char v25 = 5;
    sub_20A99AE94();
    sub_20AB86BE0();
    LOBYTE(v23[0]) = *(unsigned char *)(v3 + v10[10]);
    char v25 = 6;
    sub_20A99B0E4();
    sub_20AB86BE0();
    LOBYTE(v23[0]) = *(unsigned char *)(v3 + v10[11]);
    char v25 = 7;
    sub_20A99B600();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AAA7B28()
{
  unint64_t result = qword_267655D58;
  if (!qword_267655D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655D58);
  }
  return result;
}

uint64_t NativeAdImpressionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v38 = sub_20AB85FE0();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAA82B0(0, &qword_267655D60, MEMORY[0x263F8E040]);
  uint64_t v34 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v41 = type metadata accessor for NativeAdImpressionEvent.Model(0);
  MEMORY[0x270FA5388](v41);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  long long v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20AAA7B28();
  id v37 = v11;
  uint64_t v15 = v42;
  sub_20AB86DA0();
  uint64_t v35 = v5;
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  uint64_t v16 = v9;
  LOBYTE(v43) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  uint64_t v17 = v5;
  uint64_t v18 = (uint64_t)v13;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v13, v7, v17);
  LOBYTE(v43) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  uint64_t v19 = v4;
  uint64_t v20 = v38;
  sub_20AB86B80();
  int v21 = (int *)v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v18 + *(int *)(v41 + 20), v19, v20);
  char v46 = 2;
  sub_20A99A400();
  sub_20AB86B80();
  uint64_t v22 = *((void *)&v43 + 1);
  uint64_t v23 = (void *)(v18 + v21[6]);
  *uint64_t v23 = v43;
  v23[1] = v22;
  char v46 = 3;
  sub_20A986280();
  sub_20AB86B10();
  uint64_t v24 = (uint64_t)v40;
  __int16 v25 = v45;
  uint64_t v26 = v18 + v21[7];
  long long v27 = v44;
  *(_OWORD *)uint64_t v26 = v43;
  *(_OWORD *)(v26 + 16) = v27;
  *(_WORD *)(v26 + 32) = v25;
  char v46 = 4;
  sub_20A99A9A0();
  sub_20AB86B80();
  uint64_t v28 = *((void *)&v43 + 1);
  char v29 = (void *)(v18 + v21[8]);
  *char v29 = v43;
  v29[1] = v28;
  char v46 = 5;
  sub_20A99AE40();
  sub_20AB86B10();
  char v30 = BYTE4(v43);
  uint64_t v31 = v18 + v21[9];
  *(_DWORD *)uint64_t v31 = v43;
  *(unsigned char *)(v31 + 4) = v30;
  char v46 = 6;
  sub_20A99B090();
  sub_20AB86B10();
  *(unsigned char *)(v18 + v21[10]) = v43;
  char v46 = 7;
  sub_20A99B5AC();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v37, v34);
  *(unsigned char *)(v18 + v21[11]) = v43;
  sub_20AAA8314(v18, v33);
  __swift_destroy_boxed_opaque_existential_1(v24);
  return sub_20AAA8378(v18);
}

void sub_20AAA82B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAA7B28();
    unint64_t v7 = a3(a1, &type metadata for NativeAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAA8314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NativeAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AAA8378(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NativeAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AAA83D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NativeAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAA83EC(void *a1)
{
  return NativeAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AAA8404@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653570, MEMORY[0x263F24D18], (uint64_t)qword_267655D08, a1);
}

uint64_t sub_20AAA843C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653578, MEMORY[0x263F24DD8], (uint64_t)qword_267655D20, a1);
}

uint64_t sub_20AAA8474@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653580, MEMORY[0x263F24DE8], (uint64_t)qword_267655D38, a1);
}

uint64_t sub_20AAA84AC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v11, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v11, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  int v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);

  return v21(v19, v11, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for NativeAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    int v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    __int16 v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for NativeAdImpressionEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

uint64_t initializeWithCopy for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAA9F10);
}

uint64_t sub_20AAA9F10(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_15;
  }
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_15;
  }
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_15;
  }
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_15;
  }
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a3[11];

  return v21(v23, a2, v22);
}

uint64_t storeEnumTagSinglePayload for NativeAdImpressionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAAA33C);
}

uint64_t sub_20AAAA33C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_16:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_15:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_16;
  }
  sub_20AAA6C6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_15;
  }
  sub_20AAA6C6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_15;
  }
  sub_20AAA6C6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_15;
  }
  sub_20AAA6C6C(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_15;
  }
  sub_20AAA6C6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_15;
  }
  sub_20AAA6C6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a4[11];

  return v23(v25, a2, a2, v24);
}

void sub_20AAAA760()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AAA6C6C(319, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
      if (v2 <= 0x3F)
      {
        sub_20AAA6C6C(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
        if (v3 <= 0x3F)
        {
          sub_20AAA6C6C(319, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
          if (v4 <= 0x3F)
          {
            sub_20AAA6C6C(319, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
            if (v5 <= 0x3F)
            {
              sub_20AAA6C6C(319, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
              if (v6 <= 0x3F)
              {
                sub_20AAA6C6C(319, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for NativeAdImpressionEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)a1 + v12);
    uint64_t v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *(void *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    if (v19)
    {
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v19;
      uint64_t v20 = *((void *)v18 + 3);
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((void *)v17 + 3) = v20;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v22 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v22;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
    }
    uint64_t v23 = a3[8];
    uint64_t v24 = a3[9];
    uint64_t v25 = (void *)((char *)a1 + v23);
    uint64_t v26 = (void *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = (char *)a1 + v24;
    uint64_t v29 = (char *)a2 + v24;
    v28[4] = v29[4];
    *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
    uint64_t v30 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  uint64_t v18 = *(void *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  if (v18)
  {
    *(void *)uint64_t v16 = *(void *)v17;
    *(void *)(v16 + 8) = v18;
    uint64_t v19 = *(void *)(v17 + 24);
    *(void *)(v16 + 16) = *(void *)(v17 + 16);
    *(void *)(v16 + 24) = v19;
    *(_WORD *)(v16 + 32) = *(_WORD *)(v17 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v20;
    *(_WORD *)(v16 + 32) = *(_WORD *)(v17 + 32);
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)(a1 + v21);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = a1 + v22;
  uint64_t v27 = a2 + v22;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  uint64_t v28 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (long long *)(a2 + v14);
  uint64_t v17 = *(void *)(a1 + v14 + 8);
  uint64_t v18 = *(void *)(a2 + v14 + 8);
  if (v17)
  {
    if (v18)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *(void *)(v15 + 8) = *((void *)v16 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v15 + 16) = *((void *)v16 + 2);
      *(void *)(v15 + 24) = *((void *)v16 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v15 + 32) = *((unsigned char *)v16 + 32);
      *(unsigned char *)(v15 + 33) = *((unsigned char *)v16 + 33);
    }
    else
    {
      sub_20A9A0F9C(v15);
      __int16 v19 = *((_WORD *)v16 + 16);
      long long v20 = v16[1];
      *(_OWORD *)uint64_t v15 = *v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_WORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(void *)uint64_t v15 = *(void *)v16;
    *(void *)(v15 + 8) = *((void *)v16 + 1);
    *(void *)(v15 + 16) = *((void *)v16 + 2);
    *(void *)(v15 + 24) = *((void *)v16 + 3);
    *(unsigned char *)(v15 + 32) = *((unsigned char *)v16 + 32);
    *(unsigned char *)(v15 + 33) = *((unsigned char *)v16 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *v16;
    long long v22 = v16[1];
    *(_WORD *)(v15 + 32) = *((_WORD *)v16 + 16);
    *(_OWORD *)uint64_t v15 = v21;
    *(_OWORD *)(v15 + 16) = v22;
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (int *)(a2 + v26);
  int v29 = *v28;
  *(unsigned char *)(v27 + 4) = *((unsigned char *)v28 + 4);
  *(_DWORD *)uint64_t v27 = v29;
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  uint64_t v15 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  uint64_t v18 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  if (!*(void *)(a1 + v16 + 8)) {
    goto LABEL_5;
  }
  uint64_t v19 = *(void *)(v18 + 8);
  if (!v19)
  {
    sub_20A9A0F9C(v17);
LABEL_5:
    long long v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v21;
    *(_WORD *)(v17 + 32) = *(_WORD *)(v18 + 32);
    goto LABEL_6;
  }
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v18 + 24);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 32) = *(unsigned char *)(v18 + 32);
  *(unsigned char *)(v17 + 33) = *(unsigned char *)(v18 + 33);
LABEL_6:
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(unsigned char *)(v29 + 4) = *(unsigned char *)(v30 + 4);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAAB3E0);
}

uint64_t sub_20AAAB3E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NativeAdImpressionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAAB50C);
}

uint64_t sub_20AAAB50C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AAAB620()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NativeAdImpressionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAAB7E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NativeAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for NativeAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_20AAAB824()
{
  unint64_t result = qword_267655D88;
  if (!qword_267655D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655D88);
  }
  return result;
}

unint64_t sub_20AAAB87C()
{
  unint64_t result = qword_267655D90;
  if (!qword_267655D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655D90);
  }
  return result;
}

unint64_t sub_20AAAB8D4()
{
  unint64_t result = qword_267655D98;
  if (!qword_267655D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655D98);
  }
  return result;
}

uint64_t sub_20AAAB928(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x697469736F506461 && a2 == 0xEE00617461446E6FLL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_20AAABD08(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for TelemetrySessionManager();
  sub_20AB860C0();

  return swift_release();
}

uint64_t sub_20AAABD68(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = a2;
  uint64_t v2 = sub_20AB863B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB85800();
  unint64_t v12 = 0x800000020ABA8550;
  sub_20AB86330();
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  unsigned int v11 = *MEMORY[0x263F7D010];
  uint64_t v6 = v11;
  v7(v5, v11, v2);
  sub_20AB86070();
  swift_release();
  swift_release();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  type metadata accessor for TelemetrySessionManager();
  sub_20AB86330();
  sub_20AB86060();
  swift_release();
  v7(v5, v6, v2);
  sub_20AB86070();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_20AB85B40();
  sub_20AB86330();
  sub_20AB86060();
  swift_release();
  v7(v5, *MEMORY[0x263F7D000], v2);
  sub_20AB86070();
  swift_release();
  swift_release();
  v8(v5, v2);
  type metadata accessor for SessionObserver();
  sub_20AB86330();
  v7(v5, v11, v2);
  sub_20AB86070();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_20AB85CD0();
  sub_20AB86330();
  swift_release();
  sub_20AB85D60();
  swift_retain();
  sub_20AB86330();
  swift_release();
  swift_release();
  sub_20AB85EF0();
  sub_20AB86330();
  swift_release();
  sub_20AA659D4();
  sub_20AB86330();
  return swift_release();
}

void *sub_20AAAC1A0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3D8);
  unint64_t result = (void *)sub_20AB860D0();
  if (!v5[3])
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85B40();
  unint64_t result = (void *)sub_20AB860A0();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = (uint64_t)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for SessionObserver();
  unint64_t result = (void *)sub_20AB860A0();
  if (result)
  {
    uint64_t v4 = result;
    type metadata accessor for TelemetrySessionManager();
    swift_allocObject();
    return sub_20AAFE188(v5, v3, v4);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20AAAC2E4(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20AA65BE0(0, &qword_26AC4E750);
  uint64_t result = sub_20AB860D0();
  if (v4)
  {
    sub_20A9D7BA0(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_20AAAD2E0(&qword_26AC50970, 255, (void (*)(uint64_t))type metadata accessor for TelemetrySessionManager);
    sub_20AB86350();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20AAAC3E4(void *a1)
{
  uint64_t v2 = sub_20AB85D40();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85D80();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v28 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20AB85900();
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v27 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20AB85B20();
  MEMORY[0x270FA5388](v9);
  unsigned int v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20AB85E00();
  uint64_t v22 = *(void *)(v12 - 8);
  uint64_t v23 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x263F24D68];
  sub_20AAAD38C(0, &qword_26AC519A0, MEMORY[0x263F24D68], MEMORY[0x263F8E0F8]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_20AB88030;
  sub_20AB85B00();
  sub_20AB85B10();
  uint64_t v31 = v16;
  sub_20AAAD2E0(&qword_26AC4E6D8, 255, MEMORY[0x263F24D68]);
  sub_20AAAD38C(0, &qword_26AC51698, v15, MEMORY[0x263F8D488]);
  sub_20AAAD328(&qword_26AC516A0, &qword_26AC51698, v15);
  uint64_t v26 = v11;
  sub_20AB86920();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E080);
  uint64_t result = sub_20AB860D0();
  if (!v32)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v24 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E6F0);
  uint64_t result = sub_20AB860D0();
  if (!v30)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v18 = (uint64_t (*)(uint64_t))MEMORY[0x263F24CF0];
  sub_20AAAD38C(0, (unint64_t *)&unk_26AC51980, MEMORY[0x263F24CF0], MEMORY[0x263F8E0F8]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_20AB95660;
  sub_20AB858F0();
  sub_20AB858D0();
  sub_20AB858E0();
  uint64_t v29 = v19;
  sub_20AAAD2E0(&qword_26AC4E4D8, 255, MEMORY[0x263F24CF0]);
  sub_20AAAD38C(0, &qword_26AC51688, v18, MEMORY[0x263F8D488]);
  sub_20AAAD328(&qword_26AC51690, &qword_26AC51688, v18);
  sub_20AB86920();
  sub_20AB85AA0();
  swift_allocObject();
  sub_20AB85A90();
  sub_20AB85D70();
  sub_20AB85D30();
  sub_20AB85DF0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85800();
  uint64_t result = sub_20AB860C0();
  if (result)
  {
    uint64_t v20 = sub_20AB857E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v23);
    return v20;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20AAACA00(uint64_t a1, void *a2)
{
  sub_20AB85AB0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20AB85CD0();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_20AB85BA0();
  swift_release();
  swift_release();
  sub_20AB85AB0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20AB85D60();
  uint64_t result = sub_20AB860A0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_20AB85BA0();
  swift_release();

  return swift_release();
}

uint64_t sub_20AAACB20(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85B40();
  uint64_t result = sub_20AB860A0();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3E0);
  uint64_t result = sub_20AB860D0();
  if (!v14[3])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65A2C();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_20AB860D0();
  if (!v13[3])
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85EF0();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = (void *)result;
  char v12 = 2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3F8);
  uint64_t result = sub_20AB860D0();
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC51B58);
  uint64_t result = sub_20AB860D0();
  if (v9)
  {
    id v6 = objc_allocWithZone((Class)type metadata accessor for SessionObserver());
    id v7 = sub_20AB10F44(v3, v14, v4, v13, v5, &v12, (uint64_t)v10, (uint64_t)v8);
    swift_release();

    return (uint64_t)v7;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_20AAACD98()
{
  uint64_t v0 = sub_20AB85DE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (uint64_t *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20AB85CD0();
  *uint64_t v3 = 11;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F24E00], v0);
  return sub_20AB85CC0();
}

uint64_t sub_20AAACE7C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB85EF0();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA659D4();
  uint64_t result = sub_20AB860C0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  sub_20AB85D60();
  sub_20AB85D20();
  id v6 = (void *)sub_20AB85D10();
  if (qword_26AC4E410 != -1) {
    swift_once();
  }
  sub_20AAAD2E0(&qword_26AC4F818, v5, (void (*)(uint64_t))type metadata accessor for TelemetryAssembly);
  sub_20AB856E0();
  id v7 = (void *)sub_20AB85D00();

  if (qword_26AC4E498 != -1) {
    swift_once();
  }
  sub_20AB856E0();
  uint64_t v8 = (void *)sub_20AB85CE0();

  if (qword_26AC4E450 != -1) {
    swift_once();
  }
  sub_20AB856E0();
  uint64_t v9 = sub_20AB85CF0();

  return MEMORY[0x2105297D0](v3, v4, 1, v9);
}

uint64_t type metadata accessor for TelemetryAssembly()
{
  return self;
}

uint64_t sub_20AAAD114()
{
  uint64_t v0 = sub_20AB860E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB86140();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_20AA65BE0(0, &qword_26AC4E3D8);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7CDE0], v0);
  sub_20AB863A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  sub_20AB86130();
  swift_retain();
  sub_20AB86320();
  swift_release();
  return swift_release();
}

uint64_t sub_20AAAD2D0(uint64_t a1)
{
  return sub_20AAABD68(a1, v1);
}

uint64_t sub_20AAAD2D8(void *a1)
{
  return sub_20AAACE7C(a1);
}

uint64_t sub_20AAAD2E0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AAAD328(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20AAAD38C(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20AAAD38C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t static AdFeedData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void AdFeedData.feedType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *AdFeedData.feedType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*AdFeedData.feedType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdFeedData __swiftcall AdFeedData.init(feedType:)(StocksAnalytics::AdFeedData feedType)
{
  *uint64_t v1 = *(unsigned char *)feedType.feedType;
  return feedType;
}

uint64_t sub_20AAAD43C()
{
  return 0x6570795464656566;
}

uint64_t sub_20AAAD454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6570795464656566 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AAAD4EC(uint64_t a1)
{
  unint64_t v2 = sub_20AAAD6C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAAD528(uint64_t a1)
{
  unint64_t v2 = sub_20AAAD6C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdFeedData.encode(to:)(void *a1)
{
  sub_20AAAD8AC(0, &qword_26AC51800, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAAD6C0();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20A9AD2DC();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AAAD6C0()
{
  unint64_t result = qword_26AC4EAA8;
  if (!qword_26AC4EAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAA8);
  }
  return result;
}

uint64_t AdFeedData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AAAD8AC(0, &qword_267655DA0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAAD6C0();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20A9AD564();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAAD8AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAAD6C0();
    unint64_t v7 = a3(a1, &type metadata for AdFeedData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAAD918@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AdFeedData.init(from:)(a1, a2);
}

uint64_t sub_20AAAD930(void *a1)
{
  return AdFeedData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for AdFeedData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAADA14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdFeedData()
{
  return &type metadata for AdFeedData;
}

unsigned char *storeEnumTagSinglePayload for AdFeedData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AAADAE8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdFeedData.CodingKeys()
{
  return &type metadata for AdFeedData.CodingKeys;
}

unint64_t sub_20AAADB24()
{
  unint64_t result = qword_267655DA8;
  if (!qword_267655DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655DA8);
  }
  return result;
}

unint64_t sub_20AAADB7C()
{
  unint64_t result = qword_26AC4EAB8;
  if (!qword_26AC4EAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAB8);
  }
  return result;
}

unint64_t sub_20AAADBD4()
{
  unint64_t result = qword_26AC4EAB0;
  if (!qword_26AC4EAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAB0);
  }
  return result;
}

StocksAnalytics::ContentEnvironment_optional __swiftcall ContentEnvironment.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ContentEnvironment.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 24945;
      break;
    case 2:
      uint64_t result = 0x676E6967617473;
      break;
    case 3:
      uint64_t result = 1685025392;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAADCFC(unsigned __int8 *a1, char *a2)
{
  return sub_20AA36D20(*a1, *a2);
}

unint64_t sub_20AAADD0C()
{
  unint64_t result = qword_267655DB0;
  if (!qword_267655DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655DB0);
  }
  return result;
}

uint64_t sub_20AAADD60()
{
  return sub_20AB86D80();
}

uint64_t sub_20AAADE24()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AAADED0()
{
  return sub_20AB86D80();
}

StocksAnalytics::ContentEnvironment_optional sub_20AAADF90(Swift::String *a1)
{
  return ContentEnvironment.init(rawValue:)(*a1);
}

void sub_20AAADF9C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 24945;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E6967617473;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 1685025392;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20AAAE020()
{
  return sub_20AB86750();
}

uint64_t sub_20AAAE080()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ContentEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAAE19CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentEnvironment()
{
  return &type metadata for ContentEnvironment;
}

unint64_t sub_20AAAE1D4()
{
  unint64_t result = qword_26AC4FAB8;
  if (!qword_26AC4FAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FAB8);
  }
  return result;
}

uint64_t static ScrollEndData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

float ScrollEndData.scrollYPosition.getter()
{
  return *(float *)v0;
}

void ScrollEndData.scrollYPosition.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*ScrollEndData.scrollYPosition.modify())()
{
  return nullsub_1;
}

float ScrollEndData.scrollVelocity.getter()
{
  return *(float *)(v0 + 4);
}

void ScrollEndData.scrollVelocity.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*ScrollEndData.scrollVelocity.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ScrollEndData __swiftcall ScrollEndData.init(scrollYPosition:scrollVelocity:)(Swift::Float scrollYPosition, Swift::Float scrollVelocity)
{
  *unint64_t v2 = scrollYPosition;
  v2[1] = scrollVelocity;
  result.scrollVelocity = scrollVelocity;
  result.scrollYPosition = scrollYPosition;
  return result;
}

uint64_t sub_20AAAE298()
{
  if (*v0) {
    return 0x65566C6C6F726373;
  }
  else {
    return 0x50596C6C6F726373;
  }
}

uint64_t sub_20AAAE2EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAAE9CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAAE314(uint64_t a1)
{
  unint64_t v2 = sub_20AAAE508();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAAE350(uint64_t a1)
{
  unint64_t v2 = sub_20AAAE508();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ScrollEndData.encode(to:)(void *a1)
{
  sub_20AAAE714(0, &qword_267655DB8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAAE508();
  sub_20AB86DC0();
  v9[15] = 0;
  sub_20AB86C40();
  if (!v1)
  {
    v9[14] = 1;
    sub_20AB86C40();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AAAE508()
{
  unint64_t result = qword_267655DC0;
  if (!qword_267655DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655DC0);
  }
  return result;
}

uint64_t ScrollEndData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_20AAAE714(0, &qword_267655DC8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAAE508();
  sub_20AB86DA0();
  if (!v2)
  {
    char v17 = 0;
    sub_20AB86B70();
    int v11 = v10;
    char v16 = 1;
    sub_20AB86B70();
    int v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
    a2[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAAE714(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAAE508();
    unint64_t v7 = a3(a1, &type metadata for ScrollEndData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAAE780@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return ScrollEndData.init(from:)(a1, a2);
}

uint64_t sub_20AAAE798(void *a1)
{
  return ScrollEndData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ScrollEndData()
{
  return &type metadata for ScrollEndData;
}

unsigned char *storeEnumTagSinglePayload for ScrollEndData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAAE88CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScrollEndData.CodingKeys()
{
  return &type metadata for ScrollEndData.CodingKeys;
}

unint64_t sub_20AAAE8C8()
{
  unint64_t result = qword_267655DD0;
  if (!qword_267655DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655DD0);
  }
  return result;
}

unint64_t sub_20AAAE920()
{
  unint64_t result = qword_267655DD8;
  if (!qword_267655DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655DD8);
  }
  return result;
}

unint64_t sub_20AAAE978()
{
  unint64_t result = qword_267655DE0;
  if (!qword_267655DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655DE0);
  }
  return result;
}

uint64_t sub_20AAAE9CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x50596C6C6F726373 && a2 == 0xEF6E6F697469736FLL;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65566C6C6F726373 && a2 == 0xEE00797469636F6CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AAAEB08(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC51B20, MEMORY[0x263F24D10]);
}

uint64_t static NewsArticleLoadFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC51AA8, MEMORY[0x263F24D18], (uint64_t)qword_26AC51B20, a1);
}

uint64_t static NewsArticleLoadFailureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAAEB70(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC51B38, MEMORY[0x263F24DC8]);
}

uint64_t static NewsArticleLoadFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC51B50, MEMORY[0x263F24DD8], (uint64_t)qword_26AC51B38, a1);
}

uint64_t sub_20AAAEBD0()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655DE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655DE8);
  return sub_20AB85D30();
}

uint64_t static NewsArticleLoadFailureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC520E0, MEMORY[0x263F24DE8], (uint64_t)qword_267655DE8, a1);
}

uint64_t NewsArticleLoadFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NewsArticleLoadFailureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NewsArticleLoadFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 20);
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NewsArticleLoadFailureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_26AC51AB0);
}

uint64_t NewsArticleLoadFailureEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 20);
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 24);
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 24);
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.feedPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 28);
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 28);
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.inGroupPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 32);
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 32);
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 36);
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 36);
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 40);
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 40);
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 44);
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 44);
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.articleScienceData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 48);
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleLoadFailureEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 48);
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.userArticleContextData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 52);
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AAAFB04(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t NewsArticleLoadFailureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent(0) + 52);
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleLoadFailureEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleLoadFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  FailureEvent = (int *)type metadata accessor for NewsArticleLoadFailureEvent(0);
  uint64_t v5 = a1 + FailureEvent[5];
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + FailureEvent[6];
  uint64_t v8 = *MEMORY[0x263F24D30];
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + FailureEvent[7];
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + FailureEvent[8];
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v8, v13);
  uint64_t v14 = a1 + FailureEvent[9];
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v8, v15);
  uint64_t v16 = a1 + FailureEvent[10];
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v8, v17);
  uint64_t v18 = a1 + FailureEvent[11];
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v8, v19);
  uint64_t v20 = a1 + FailureEvent[12];
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v8, v21);
  uint64_t v22 = a1 + FailureEvent[13];
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v2, v23);
}

uint64_t NewsArticleLoadFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NewsArticleLoadFailureEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NewsArticleLoadFailureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655E18);
}

uint64_t NewsArticleLoadFailureEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 24));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NewsArticleLoadFailureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 28));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NewsArticleLoadFailureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleLoadFailureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent.Model(0) + 36));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t NewsArticleLoadFailureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent.Model(0) + 40));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleLoadFailureEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t Failure = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  sub_20A9C5D88(v1 + *(int *)(Failure + 44), (uint64_t)v5);
  sub_20A9C5D88((uint64_t)v5, a1);
  return sub_20A9C5E44((uint64_t)v5);
}

uint64_t NewsArticleLoadFailureEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t NewsArticleLoadFailureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleLoadFailureEvent.Model(0) + 52));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 NewsArticleLoadFailureEvent.Model.init(eventData:newsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:viewData:articleScienceData:userArticleContextData:channelData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, int *a3@<X2>, int *a4@<X3>, long long *a5@<X4>, long long *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int16 *a10, __n128 *a11)
{
  long long v35 = *a2;
  uint64_t v13 = *((void *)a2 + 2);
  uint64_t v34 = *((void *)a2 + 3);
  uint64_t v14 = *((void *)a2 + 5);
  char v15 = *((unsigned char *)a2 + 48);
  uint64_t v16 = *((void *)a2 + 7);
  char v17 = *((unsigned char *)a2 + 64);
  char v18 = *((unsigned char *)a2 + 65);
  char v32 = *((unsigned char *)a2 + 66);
  char v33 = *((unsigned char *)a2 + 32);
  char v31 = *((unsigned char *)a2 + 67);
  char v36 = *((unsigned char *)a3 + 4);
  int v37 = *a3;
  char v38 = *((unsigned char *)a4 + 4);
  int v39 = *a4;
  long long v41 = *a5;
  uint64_t v40 = *((void *)a5 + 2);
  long long v44 = a6[1];
  long long v45 = *a6;
  uint64_t v42 = *((void *)a6 + 5);
  uint64_t v43 = *((void *)a6 + 4);
  uint64_t v47 = a7[1];
  uint64_t v48 = *a7;
  __int16 v46 = *((_WORD *)a7 + 8);
  sub_20A9C5D88(a8, (uint64_t)v53);
  __n128 v52 = *a11;
  unint64_t v19 = a11[1].n128_u64[0];
  unint64_t v51 = a11[1].n128_u64[1];
  __int16 v49 = *a10;
  unsigned __int8 v50 = a11[2].n128_u8[0];
  unsigned __int8 v20 = a11[2].n128_u8[1];
  uint64_t v21 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a9, a1, v21);
  uint64_t Failure = (int *)type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  uint64_t v23 = a9 + Failure[5];
  *(_OWORD *)uint64_t v23 = v35;
  *(void *)(v23 + 16) = v13;
  *(void *)(v23 + 24) = v34;
  *(unsigned char *)(v23 + 32) = v33;
  *(void *)(v23 + 40) = v14;
  *(unsigned char *)(v23 + 48) = v15;
  *(void *)(v23 + 56) = v16;
  *(unsigned char *)(v23 + 64) = v17;
  *(unsigned char *)(v23 + 65) = v18;
  *(unsigned char *)(v23 + 66) = v32;
  *(unsigned char *)(v23 + 67) = v31;
  uint64_t v24 = a9 + Failure[6];
  *(_DWORD *)uint64_t v24 = v37;
  *(unsigned char *)(v24 + 4) = v36;
  uint64_t v25 = a9 + Failure[7];
  *(_DWORD *)uint64_t v25 = v39;
  *(unsigned char *)(v25 + 4) = v38;
  uint64_t v26 = a9 + Failure[8];
  *(_OWORD *)uint64_t v26 = v41;
  *(void *)(v26 + 16) = v40;
  uint64_t v27 = a9 + Failure[9];
  *(_OWORD *)uint64_t v27 = v45;
  *(_OWORD *)(v27 + 16) = v44;
  *(void *)(v27 + 32) = v43;
  *(void *)(v27 + 40) = v42;
  uint64_t v28 = a9 + Failure[10];
  *(void *)uint64_t v28 = v48;
  *(void *)(v28 + 8) = v47;
  *(_WORD *)(v28 + 16) = v46;
  sub_20A9C5D88((uint64_t)v53, a9 + Failure[11]);
  *(_WORD *)(a9 + Failure[12]) = v49;
  uint64_t v29 = (__n128 *)(a9 + Failure[13]);
  __n128 result = v52;
  *uint64_t v29 = v52;
  v29[1].n128_u64[0] = v19;
  v29[1].n128_u64[1] = v51;
  v29[2].n128_u8[0] = v50;
  v29[2].n128_u8[1] = v20;
  return result;
}

uint64_t sub_20AAB0700(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0xD000000000000013;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_8;
    case 5:
      uint64_t result = 0x74614470756F7267;
      break;
    case 6:
      unsigned int v3 = 2003134838;
LABEL_8:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    case 8:
      uint64_t result = 0xD000000000000016;
      break;
    case 9:
      uint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAB0854()
{
  return sub_20AAB0700(*v0);
}

uint64_t sub_20AAB085C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAB5CDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAB0884(uint64_t a1)
{
  unint64_t v2 = sub_20AAB0DB0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAB08C0(uint64_t a1)
{
  unint64_t v2 = sub_20AAB0DB0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NewsArticleLoadFailureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AAB1648(0, &qword_267655E00, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAB0DB0();
  sub_20AB86DC0();
  LOBYTE(v44) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t Failure = (int *)type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
    uint64_t v11 = (long long *)(v3 + Failure[5]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v44 = v12;
    *(void *)&long long v45 = v13;
    *((void *)&v45 + 1) = v14;
    LOBYTE(v46) = v15;
    *((void *)&v46 + 1) = v16;
    char v47 = v17;
    uint64_t v48 = v18;
    char v49 = v19;
    char v50 = v20;
    char v51 = v21;
    char v52 = (char)v11;
    LOBYTE(v39) = 1;
    sub_20A97A1AC();
    sub_20AB86C50();
    uint64_t v22 = (int *)(v3 + Failure[6]);
    int v23 = *v22;
    LOBYTE(v22) = *((unsigned char *)v22 + 4);
    LODWORD(v44) = v23;
    BYTE4(v44) = (_BYTE)v22;
    LOBYTE(v39) = 2;
    sub_20A9EE598();
    sub_20AB86BE0();
    uint64_t v24 = (int *)(v3 + Failure[7]);
    int v25 = *v24;
    LOBYTE(v24) = *((unsigned char *)v24 + 4);
    LODWORD(v44) = v25;
    BYTE4(v44) = (_BYTE)v24;
    LOBYTE(v39) = 3;
    sub_20A9EE7E8();
    sub_20AB86BE0();
    uint64_t v26 = (long long *)(v3 + Failure[8]);
    uint64_t v27 = *((void *)v26 + 2);
    long long v44 = *v26;
    *(void *)&long long v45 = v27;
    LOBYTE(v39) = 4;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v28 = (long long *)(v3 + Failure[9]);
    long long v29 = v28[1];
    long long v44 = *v28;
    long long v45 = v29;
    long long v46 = v28[2];
    LOBYTE(v39) = 5;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v30 = (long long *)(v3 + Failure[10]);
    __int16 v31 = *((_WORD *)v30 + 8);
    long long v54 = *v30;
    __int16 v55 = v31;
    char v53 = 6;
    sub_20A986C14();
    sub_20AB86BE0();
    sub_20A9C5D88(v3 + Failure[11], (uint64_t)&v44);
    sub_20A9C5D88((uint64_t)&v44, (uint64_t)&v39);
    HIBYTE(v38) = 7;
    sub_20A9C4D28();
    sub_20AB86BE0();
    LOWORD(v39) = *(_WORD *)(v3 + Failure[12]);
    HIBYTE(v38) = 8;
    sub_20A9C4F78();
    sub_20AB86BE0();
    char v32 = (long long *)(v3 + Failure[13]);
    long long v33 = *v32;
    uint64_t v34 = *((void *)v32 + 2);
    uint64_t v35 = *((void *)v32 + 3);
    char v36 = *((unsigned char *)v32 + 32);
    LOBYTE(v32) = *((unsigned char *)v32 + 33);
    long long v39 = v33;
    uint64_t v40 = v34;
    uint64_t v41 = v35;
    char v42 = v36;
    char v43 = (char)v32;
    HIBYTE(v38) = 9;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AAB0DB0()
{
  unint64_t result = qword_267655E08;
  if (!qword_267655E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655E08);
  }
  return result;
}

uint64_t NewsArticleLoadFailureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v46 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAB1648(0, &qword_267655E10, MEMORY[0x263F8E040]);
  uint64_t v44 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v42 - v9;
  uint64_t Failure = (int *)type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  MEMORY[0x270FA5388](Failure);
  char v47 = a1;
  uint64_t v48 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAB0DB0();
  char v43 = v10;
  sub_20AB86DA0();
  uint64_t v45 = v4;
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  }
  LOBYTE(v56) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  sub_20AB86B80();
  uint64_t v12 = v4;
  uint64_t v13 = v48;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v48, v6, v12);
  v55[0] = 1;
  sub_20A97A154();
  sub_20AB86B80();
  long long v14 = v57;
  char v15 = v58;
  uint64_t v16 = *((void *)&v58 + 1);
  char v17 = v59;
  uint64_t v18 = v60;
  char v19 = v61;
  char v20 = v62;
  char v21 = v63;
  char v22 = v64;
  int v23 = Failure;
  uint64_t v24 = &v13[Failure[5]];
  *(_OWORD *)uint64_t v24 = v56;
  *((_OWORD *)v24 + 1) = v14;
  v24[32] = v15;
  *((void *)v24 + 5) = v16;
  v24[48] = v17;
  *((void *)v24 + 7) = v18;
  v24[64] = v19;
  v24[65] = v20;
  v24[66] = v21;
  v24[67] = v22;
  v55[0] = 2;
  sub_20A9EE544();
  sub_20AB86B10();
  char v25 = BYTE4(v56);
  uint64_t v26 = &v13[v23[6]];
  *(_DWORD *)uint64_t v26 = v56;
  v26[4] = v25;
  v55[0] = 3;
  sub_20A9EE794();
  sub_20AB86B10();
  char v27 = BYTE4(v56);
  uint64_t v28 = &v13[v23[7]];
  *(_DWORD *)uint64_t v28 = v56;
  v28[4] = v27;
  v55[0] = 4;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v29 = v57;
  uint64_t v30 = &v13[v23[8]];
  *(_OWORD *)uint64_t v30 = v56;
  *((void *)v30 + 2) = v29;
  v55[0] = 5;
  sub_20A9864D0();
  sub_20AB86B10();
  __int16 v31 = &v13[v23[9]];
  long long v32 = v57;
  *(_OWORD *)__int16 v31 = v56;
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v58;
  v55[0] = 6;
  sub_20A986BC0();
  sub_20AB86B10();
  __int16 v33 = v57;
  uint64_t v34 = &v13[v23[10]];
  *(_OWORD *)uint64_t v34 = v56;
  *((_WORD *)v34 + 8) = v33;
  v55[207] = 7;
  sub_20A9C4CD4();
  sub_20AB86B10();
  sub_20A9C5D88((uint64_t)&v56, (uint64_t)v55);
  sub_20A9C5D88((uint64_t)v55, (uint64_t)&v13[Failure[11]]);
  char v54 = 8;
  sub_20A9C4F24();
  sub_20AB86B10();
  *(_WORD *)&v13[Failure[12]] = v49;
  char v54 = 9;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v43, v44);
  uint64_t v35 = v50;
  uint64_t v36 = v51;
  char v37 = v52;
  char v38 = v53;
  uint64_t v39 = (uint64_t)v48;
  uint64_t v40 = &v48[Failure[13]];
  *(_OWORD *)uint64_t v40 = v49;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v36;
  v40[32] = v37;
  v40[33] = v38;
  sub_20AAB16AC(v39, v42);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  return sub_20AAB1710(v39);
}

void sub_20AAB1648(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAB0DB0();
    unint64_t v7 = a3(a1, &type metadata for NewsArticleLoadFailureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAB16AC(uint64_t a1, uint64_t a2)
{
  uint64_t Failure = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Failure - 8) + 16))(a2, a1, Failure);
  return a2;
}

uint64_t sub_20AAB1710(uint64_t a1)
{
  uint64_t Failure = type metadata accessor for NewsArticleLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(Failure - 8) + 8))(a1, Failure);
  return a1;
}

uint64_t sub_20AAB176C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsArticleLoadFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAB1784(void *a1)
{
  return NewsArticleLoadFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AAB179C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC51AA8, MEMORY[0x263F24D18], (uint64_t)qword_26AC51B20, a1);
}

uint64_t sub_20AAB17D4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC51B50, MEMORY[0x263F24DD8], (uint64_t)qword_26AC51B38, a1);
}

uint64_t sub_20AAB180C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC520E0, MEMORY[0x263F24DE8], (uint64_t)qword_267655DE8, a1);
}

uint64_t sub_20AAB1844@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = *MEMORY[0x263F24D30];
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v9, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v9, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v9, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v9, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v9, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  char v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsArticleLoadFailureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    __int16 v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    char v38 = (char *)a2 + v36;
    sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for NewsArticleLoadFailureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for NewsArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for NewsArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for NewsArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for NewsArticleLoadFailureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleLoadFailureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAB3B18);
}

uint64_t sub_20AAB3B18(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for NewsArticleLoadFailureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAB4084);
}

uint64_t sub_20AAB4084(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  sub_20AAAFB04(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  sub_20AAAFB04(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_20AAB45E8()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AAAFB04(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    if (v1 <= 0x3F)
    {
      sub_20AAAFB04(319, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
      if (v2 <= 0x3F)
      {
        sub_20AAAFB04(319, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
        if (v3 <= 0x3F)
        {
          sub_20AAAFB04(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
          if (v4 <= 0x3F)
          {
            sub_20AAAFB04(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
            if (v5 <= 0x3F)
            {
              sub_20AAAFB04(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
              if (v6 <= 0x3F)
              {
                sub_20AAAFB04(319, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
                if (v7 <= 0x3F)
                {
                  sub_20AAAFB04(319, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
                  if (v8 <= 0x3F)
                  {
                    sub_20AAAFB04(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsArticleLoadFailureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    *((void *)v10 + 7) = *((void *)v11 + 7);
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    uint64_t v14 = (char *)a1 + v9;
    uint64_t v15 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    v14[4] = v15[4];
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)a1 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = (char *)a1 + v17;
    uint64_t v21 = (char *)a2 + v17;
    *uint64_t v20 = *v21;
    uint64_t v22 = *((void *)v21 + 2);
    *((void *)v20 + 1) = *((void *)v21 + 1);
    *((void *)v20 + 2) = v22;
    uint64_t v23 = a3[9];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v23 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26)
    {
      *uint64_t v24 = *v25;
      *((void *)v24 + 1) = *((void *)v25 + 1);
      *((void *)v24 + 2) = v26;
      *((void *)v24 + 3) = *((void *)v25 + 3);
      uint64_t v27 = *((void *)v25 + 5);
      *((void *)v24 + 4) = *((void *)v25 + 4);
      *((void *)v24 + 5) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v29 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v29;
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    }
    uint64_t v30 = a3[10];
    uint64_t v31 = a3[11];
    uint64_t v32 = (char *)a1 + v30;
    uint64_t v33 = (char *)a2 + v30;
    uint64_t v34 = *((void *)v33 + 1);
    *(void *)uint64_t v32 = *(void *)v33;
    *((void *)v32 + 1) = v34;
    *((_WORD *)v32 + 8) = *((_WORD *)v33 + 8);
    uint64_t v35 = (char *)a1 + v31;
    uint64_t v36 = (char *)a2 + v31;
    long long v37 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v37;
    long long v38 = *((_OWORD *)v36 + 3);
    *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
    *((_OWORD *)v35 + 3) = v38;
    *((_OWORD *)v35 + 4) = *((_OWORD *)v36 + 4);
    *((void *)v35 + 10) = *((void *)v36 + 10);
    *(_OWORD *)(v35 + 88) = *(_OWORD *)(v36 + 88);
    *(_OWORD *)(v35 + 104) = *(_OWORD *)(v36 + 104);
    *((_DWORD *)v35 + 30) = *((_DWORD *)v36 + 30);
    *((_OWORD *)v35 + 8) = *((_OWORD *)v36 + 8);
    v35[144] = v36[144];
    *(void *)(v35 + 148) = *(void *)(v36 + 148);
    long long v39 = *((_OWORD *)v36 + 11);
    *((_OWORD *)v35 + 10) = *((_OWORD *)v36 + 10);
    *((_OWORD *)v35 + 11) = v39;
    *((void *)v35 + 24) = *((void *)v36 + 24);
    uint64_t v40 = a3[13];
    *(_WORD *)((char *)a1 + a3[12]) = *(_WORD *)((char *)a2 + a3[12]);
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = *((void *)v42 + 1);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    uint64_t v44 = *((void *)v42 + 3);
    *((void *)v41 + 2) = *((void *)v42 + 2);
    *((void *)v41 + 3) = v44;
    v41[32] = v42[32];
    v41[33] = v42[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 36) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  uint64_t v19 = a1 + v16;
  uint64_t v20 = a2 + v16;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  uint64_t v21 = *(void *)(v20 + 16);
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(void *)(v19 + 16) = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)(a2 + v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
    *(void *)(v23 + 8) = *(void *)(v24 + 8);
    *(void *)(v23 + 16) = v25;
    *(void *)(v23 + 24) = *(void *)(v24 + 24);
    uint64_t v26 = *(void *)(v24 + 40);
    *(void *)(v23 + 32) = *(void *)(v24 + 32);
    *(void *)(v23 + 40) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v27;
    *(_OWORD *)(v23 + 32) = *(_OWORD *)(v24 + 32);
  }
  uint64_t v28 = a3[10];
  uint64_t v29 = a3[11];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  uint64_t v32 = *(void *)(v31 + 8);
  *(void *)uint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = v32;
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  uint64_t v33 = a1 + v29;
  uint64_t v34 = a2 + v29;
  long long v35 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v35;
  long long v36 = *(_OWORD *)(v34 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  *(_OWORD *)(v33 + 48) = v36;
  *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
  *(void *)(v33 + 80) = *(void *)(v34 + 80);
  *(_OWORD *)(v33 + 88) = *(_OWORD *)(v34 + 88);
  *(_OWORD *)(v33 + 104) = *(_OWORD *)(v34 + 104);
  *(_DWORD *)(v33 + 120) = *(_DWORD *)(v34 + 120);
  *(_OWORD *)(v33 + 128) = *(_OWORD *)(v34 + 128);
  *(unsigned char *)(v33 + 144) = *(unsigned char *)(v34 + 144);
  *(void *)(v33 + 148) = *(void *)(v34 + 148);
  long long v37 = *(_OWORD *)(v34 + 176);
  *(_OWORD *)(v33 + 160) = *(_OWORD *)(v34 + 160);
  *(_OWORD *)(v33 + 176) = v37;
  *(void *)(v33 + 192) = *(void *)(v34 + 192);
  uint64_t v38 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void *)(v40 + 8);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v41;
  uint64_t v42 = *(void *)(v40 + 24);
  *(void *)(v39 + 16) = *(void *)(v40 + 16);
  *(void *)(v39 + 24) = v42;
  *(unsigned char *)(v39 + 32) = *(unsigned char *)(v40 + 32);
  *(unsigned char *)(v39 + 33) = *(unsigned char *)(v40 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v10 = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 40) = v10;
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (int *)(a2 + v11);
  int v14 = *v13;
  *(unsigned char *)(v12 + 4) = *((unsigned char *)v13 + 4);
  *(_DWORD *)uint64_t v12 = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (int *)(a2 + v15);
  int v18 = *v17;
  *(unsigned char *)(v16 + 4) = *((unsigned char *)v17 + 4);
  *(_DWORD *)uint64_t v16 = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (long long *)(a2 + v22);
  uint64_t v25 = *(void *)(a1 + v22 + 16);
  uint64_t v26 = *(void *)(a2 + v22 + 16);
  if (v25)
  {
    if (v26)
    {
      *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
      *(void *)(v23 + 8) = *((void *)v24 + 1);
      *(void *)(v23 + 16) = *((void *)v24 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v23 + 24) = *((_DWORD *)v24 + 6);
      *(_DWORD *)(v23 + 28) = *((_DWORD *)v24 + 7);
      *(void *)(v23 + 32) = *((void *)v24 + 4);
      *(void *)(v23 + 40) = *((void *)v24 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v23);
      long long v28 = v24[1];
      long long v27 = v24[2];
      *(_OWORD *)uint64_t v23 = *v24;
      *(_OWORD *)(v23 + 16) = v28;
      *(_OWORD *)(v23 + 32) = v27;
    }
  }
  else if (v26)
  {
    *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
    *(void *)(v23 + 8) = *((void *)v24 + 1);
    *(void *)(v23 + 16) = *((void *)v24 + 2);
    *(_DWORD *)(v23 + 24) = *((_DWORD *)v24 + 6);
    *(_DWORD *)(v23 + 28) = *((_DWORD *)v24 + 7);
    *(void *)(v23 + 32) = *((void *)v24 + 4);
    *(void *)(v23 + 40) = *((void *)v24 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *v24;
    long long v30 = v24[2];
    *(_OWORD *)(v23 + 16) = v24[1];
    *(_OWORD *)(v23 + 32) = v30;
    *(_OWORD *)uint64_t v23 = v29;
  }
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)(a2 + v31);
  *(void *)(v32 + 8) = *(void *)(a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  *(unsigned char *)(v32 + 17) = *(unsigned char *)(v33 + 17);
  uint64_t v34 = a3[11];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(void *)uint64_t v35 = *(void *)(a2 + v34);
  *(void *)(v35 + 8) = *(void *)(a2 + v34 + 8);
  *(void *)(v35 + 16) = *(void *)(a2 + v34 + 16);
  *(void *)(v35 + 24) = *(void *)(a2 + v34 + 24);
  *(void *)(v35 + 32) = *(void *)(a2 + v34 + 32);
  *(void *)(v35 + 40) = *(void *)(a2 + v34 + 40);
  *(void *)(v35 + 48) = *(void *)(a2 + v34 + 48);
  *(void *)(v35 + 56) = *(void *)(a2 + v34 + 56);
  *(void *)(v35 + 64) = *(void *)(a2 + v34 + 64);
  *(void *)(v35 + 72) = *(void *)(a2 + v34 + 72);
  *(void *)(v35 + 80) = *(void *)(a2 + v34 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v35 + 88) = *(void *)(v36 + 88);
  *(void *)(v35 + 96) = *(void *)(v36 + 96);
  *(void *)(v35 + 104) = *(void *)(v36 + 104);
  *(void *)(v35 + 112) = *(void *)(v36 + 112);
  *(_DWORD *)(v35 + 120) = *(_DWORD *)(v36 + 120);
  *(void *)(v35 + 128) = *(void *)(v36 + 128);
  *(void *)(v35 + 136) = *(void *)(v36 + 136);
  *(unsigned char *)(v35 + 144) = *(unsigned char *)(v36 + 144);
  *(_DWORD *)(v35 + 148) = *(_DWORD *)(v36 + 148);
  *(_DWORD *)(v35 + 152) = *(_DWORD *)(v36 + 152);
  *(void *)(v35 + 160) = *(void *)(v36 + 160);
  *(void *)(v35 + 168) = *(void *)(v36 + 168);
  *(void *)(v35 + 176) = *(void *)(v36 + 176);
  *(void *)(v35 + 184) = *(void *)(v36 + 184);
  *(void *)(v35 + 192) = *(void *)(v36 + 192);
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  uint64_t v37 = a3[13];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  *(void *)uint64_t v38 = *(void *)(a2 + v37);
  *(void *)(v38 + 8) = *(void *)(a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v38 + 16) = *(void *)(v39 + 16);
  *(void *)(v38 + 24) = *(void *)(v39 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v38 + 32) = *(unsigned char *)(v39 + 32);
  *(unsigned char *)(v38 + 33) = *(unsigned char *)(v39 + 33);
  return a1;
}

uint64_t initializeWithTake for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  *(unsigned char *)(v13 + 4) = *(unsigned char *)(v14 + 4);
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a1 + v16;
  uint64_t v20 = a2 + v16;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  uint64_t v21 = a3[9];
  uint64_t v22 = a3[10];
  uint64_t v23 = (_OWORD *)(a1 + v21);
  uint64_t v24 = (_OWORD *)(a2 + v21);
  long long v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  _OWORD v23[2] = v24[2];
  uint64_t v26 = a1 + v22;
  uint64_t v27 = a2 + v22;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_WORD *)(v26 + 16) = *(_WORD *)(v27 + 16);
  uint64_t v28 = a3[11];
  uint64_t v29 = a3[12];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(void *)(v30 + 192) = *(void *)(v31 + 192);
  long long v32 = *(_OWORD *)(v31 + 48);
  *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
  *(_OWORD *)(v30 + 48) = v32;
  long long v33 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v33;
  long long v34 = *(_OWORD *)(v31 + 112);
  *(_OWORD *)(v30 + 96) = *(_OWORD *)(v31 + 96);
  *(_OWORD *)(v30 + 112) = v34;
  long long v35 = *(_OWORD *)(v31 + 80);
  *(_OWORD *)(v30 + 64) = *(_OWORD *)(v31 + 64);
  *(_OWORD *)(v30 + 80) = v35;
  long long v36 = *(_OWORD *)(v31 + 176);
  *(_OWORD *)(v30 + 160) = *(_OWORD *)(v31 + 160);
  *(_OWORD *)(v30 + 176) = v36;
  long long v37 = *(_OWORD *)(v31 + 144);
  *(_OWORD *)(v30 + 128) = *(_OWORD *)(v31 + 128);
  *(_OWORD *)(v30 + 144) = v37;
  *(_WORD *)(a1 + v29) = *(_WORD *)(a2 + v29);
  uint64_t v38 = a3[13];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  long long v41 = *(_OWORD *)(v40 + 16);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *(_OWORD *)(v39 + 16) = v41;
  *(_WORD *)(v39 + 32) = *(_WORD *)(v40 + 32);
  return a1;
}

uint64_t assignWithTake for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(unsigned char *)(v14 + 4) = *(unsigned char *)(v15 + 4);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  uint64_t v21 = *(void *)(v20 + 16);
  *(void *)(v19 + 8) = v22;
  *(void *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  if (!*(void *)(a1 + v23 + 16)) {
    goto LABEL_5;
  }
  uint64_t v26 = *(void *)(v25 + 16);
  if (!v26)
  {
    sub_20A98D5B8(v24);
LABEL_5:
    long long v28 = *(_OWORD *)(v25 + 16);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v28;
    *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  *(void *)(v24 + 24) = *(void *)(v25 + 24);
  uint64_t v27 = *(void *)(v25 + 40);
  *(void *)(v24 + 32) = *(void *)(v25 + 32);
  *(void *)(v24 + 40) = v27;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(a2 + v29 + 8);
  *(void *)uint64_t v30 = *(void *)(a2 + v29);
  *(void *)(v30 + 8) = v32;
  swift_bridgeObjectRelease();
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  long long v36 = *(_OWORD *)(a2 + v33 + 16);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)(a2 + v33);
  *(_OWORD *)(v34 + 16) = v36;
  long long v37 = *(_OWORD *)(a2 + v33 + 48);
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(a2 + v33 + 32);
  *(_OWORD *)(v34 + 48) = v37;
  *(_OWORD *)(v34 + 64) = *(_OWORD *)(a2 + v33 + 64);
  *(void *)(v34 + 80) = *(void *)(a2 + v33 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v34 + 88) = *(_OWORD *)(v35 + 88);
  *(_OWORD *)(v34 + 104) = *(_OWORD *)(v35 + 104);
  *(_DWORD *)(v34 + 120) = *(_DWORD *)(v35 + 120);
  *(_OWORD *)(v34 + 128) = *(_OWORD *)(v35 + 128);
  *(unsigned char *)(v34 + 144) = *(unsigned char *)(v35 + 144);
  *(void *)(v34 + 148) = *(void *)(v35 + 148);
  long long v38 = *(_OWORD *)(v35 + 176);
  *(_OWORD *)(v34 + 160) = *(_OWORD *)(v35 + 160);
  *(_OWORD *)(v34 + 176) = v38;
  *(void *)(v34 + 192) = *(void *)(v35 + 192);
  uint64_t v39 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)(v41 + 8);
  *(void *)uint64_t v40 = *(void *)v41;
  *(void *)(v40 + 8) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v41 + 24);
  *(void *)(v40 + 16) = *(void *)(v41 + 16);
  *(void *)(v40 + 24) = v43;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v40 + 32) = *(unsigned char *)(v41 + 32);
  *(unsigned char *)(v40 + 33) = *(unsigned char *)(v41 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAB585C);
}

uint64_t sub_20AAB585C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NewsArticleLoadFailureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAB5934);
}

uint64_t sub_20AAB5934(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AAB59F4()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewsArticleLoadFailureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAB5B9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleLoadFailureEvent.Model.CodingKeys()
{
  return &type metadata for NewsArticleLoadFailureEvent.Model.CodingKeys;
}

unint64_t sub_20AAB5BD8()
{
  unint64_t result = qword_267655E28;
  if (!qword_267655E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655E28);
  }
  return result;
}

unint64_t sub_20AAB5C30()
{
  unint64_t result = qword_267655E30;
  if (!qword_267655E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655E30);
  }
  return result;
}

unint64_t sub_20AAB5C88()
{
  unint64_t result = qword_267655E38;
  if (!qword_267655E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655E38);
  }
  return result;
}

uint64_t sub_20AAB5CDC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA79D0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA79F0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA77E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA7800 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

StocksAnalytics::TipType_optional __swiftcall TipType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t TipType.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AAB61BC(char *a1, char *a2)
{
  return sub_20AA34414(*a1, *a2);
}

unint64_t sub_20AAB61CC()
{
  unint64_t result = qword_267655E40;
  if (!qword_267655E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655E40);
  }
  return result;
}

uint64_t sub_20AAB6220()
{
  return sub_20AB86D80();
}

uint64_t sub_20AAB62A8()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AAB631C()
{
  return sub_20AB86D80();
}

StocksAnalytics::TipType_optional sub_20AAB63A0(Swift::String *a1)
{
  return TipType.init(rawValue:)(*a1);
}

void sub_20AAB63AC(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x6E776F6E6B6E75;
  if (*v1) {
    unint64_t v2 = 0xD000000000000010;
  }
  unint64_t v3 = 0x800000020ABA6CC0;
  if (!*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20AAB63F0()
{
  return sub_20AB86750();
}

uint64_t sub_20AAB6450()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for TipType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAB656CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TipType()
{
  return &type metadata for TipType;
}

unint64_t sub_20AAB65A4()
{
  unint64_t result = qword_26AC514B0;
  if (!qword_26AC514B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514B0);
  }
  return result;
}

uint64_t sub_20AAB65F8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC50640, MEMORY[0x263F24D10]);
}

uint64_t static AppSessionResumeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50658, MEMORY[0x263F24D18], (uint64_t)qword_26AC50640, a1);
}

uint64_t static AppSessionResumeEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAB6660(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC50660, MEMORY[0x263F24DC8]);
}

uint64_t static AppSessionResumeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50678, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50660, a1);
}

uint64_t sub_20AAB66C0()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655E48);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655E48);
  return sub_20AB85D30();
}

uint64_t static AppSessionResumeEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC520C8, MEMORY[0x263F24DE8], (uint64_t)qword_267655E48, a1);
}

uint64_t sub_20AAB6748()
{
  return 0;
}

uint64_t sub_20AAB6754@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_20AAB6784(uint64_t a1)
{
  unint64_t v2 = sub_20AAB6964();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAB67C0(uint64_t a1)
{
  unint64_t v2 = sub_20AAB6964();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppSessionResumeEvent.Model.encode(to:)(void *a1)
{
  sub_20AAB6908();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAB6964();
  sub_20AB86DC0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_20AAB6908()
{
  if (!qword_267655E60)
  {
    sub_20AAB6964();
    unint64_t v0 = sub_20AB86C80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267655E60);
    }
  }
}

unint64_t sub_20AAB6964()
{
  unint64_t result = qword_267655E68;
  if (!qword_267655E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655E68);
  }
  return result;
}

uint64_t AppSessionResumeEvent.Model.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_20AAB69E0(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_20AAB6A08(void *a1)
{
  sub_20AAB6908();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAB6964();
  sub_20AB86DC0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20AAB6B14@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50658, MEMORY[0x263F24D18], (uint64_t)qword_26AC50640, a1);
}

uint64_t sub_20AAB6B4C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50678, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50660, a1);
}

uint64_t sub_20AAB6B84@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC520C8, MEMORY[0x263F24DE8], (uint64_t)qword_267655E48, a1);
}

ValueMetadata *type metadata accessor for AppSessionResumeEvent()
{
  return &type metadata for AppSessionResumeEvent;
}

ValueMetadata *type metadata accessor for AppSessionResumeEvent.Model()
{
  return &type metadata for AppSessionResumeEvent.Model;
}

ValueMetadata *type metadata accessor for AppSessionResumeEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionResumeEvent.Model.CodingKeys;
}

unint64_t sub_20AAB6BF0()
{
  unint64_t result = qword_267655E70;
  if (!qword_267655E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655E70);
  }
  return result;
}

unint64_t sub_20AAB6C48()
{
  unint64_t result = qword_267655E78;
  if (!qword_267655E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655E78);
  }
  return result;
}

uint64_t backgroundTask(withName:work:)(uint64_t a1, uint64_t a2, void (*a3)(void (*)(), uint64_t))
{
  id v4 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v5 = (void *)sub_20AB866D0();
  id v6 = objc_msgSend(v4, sel_beginBackgroundTaskWithName_expirationHandler_, v5, 0);

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  a3(sub_20AAB6D90, v7);

  return swift_release();
}

uint64_t sub_20AAB6D80()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20AAB6D90()
{
  sub_20AAB718C(*(void *)(v0 + 16));
}

uint64_t backgroundTask(withName:timeout:work:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_20AB86630();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v22[-v13];
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  sub_20AAB70F0();
  swift_allocObject();
  sub_20AB863F0();
  id v15 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v16 = (void *)sub_20AB866D0();
  id v17 = objc_msgSend(v15, sel_beginBackgroundTaskWithName_expirationHandler_, v16, 0);

  sub_20AB86620();
  MEMORY[0x21052A0C0](v12, a1);
  uint64_t v18 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  uint64_t v19 = (void *)sub_20AB863C0();
  sub_20AB863E0();

  v18(v14, v8);
  sub_20AAB714C();
  uint64_t v20 = (void *)sub_20AB86850();
  *(void *)(swift_allocObject() + 16) = v17;
  sub_20AB863D0();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_20AAB7028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t (*)(), uint64_t))
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_20AAB7244;
  *(void *)(v9 + 24) = v8;
  swift_retain();
  a5(sub_20AAB724C, v9);

  return swift_release();
}

uint64_t sub_20AAB70E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20AAB7028(a1, a2, a3, a4, *(void (**)(uint64_t (*)(), uint64_t))(v4 + 16));
}

void sub_20AAB70F0()
{
  if (!qword_26AC4E758)
  {
    unint64_t v0 = sub_20AB86400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E758);
    }
  }
}

unint64_t sub_20AAB714C()
{
  unint64_t result = qword_26AC51730;
  if (!qword_26AC51730)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC51730);
  }
  return result;
}

void sub_20AAB718C(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_sharedApplication);
  objc_msgSend(v2, sel_endBackgroundTask_, a1);
}

uint64_t sub_20AAB71FC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20AAB720C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20AAB7244()
{
  return sub_20AAFAA7C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_20AAB724C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t BannerAdData.init(traits:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AAB74DC();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = &v19[-v9];
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v19[-v11];
  sub_20AAB7534(a1, (uint64_t)&v19[-v11]);
  uint64_t v13 = sub_20AB86560();
  uint64_t v14 = *(void *)(v13 - 8);
  id v15 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13) == 1)
  {
    sub_20AAB7598((uint64_t)v12);
    int v20 = 0;
  }
  else
  {
    int v20 = sub_20AB86540();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v12, v13);
  }
  sub_20AAB7534(a1, (uint64_t)v10);
  if (v15(v10, 1, v13) == 1)
  {
    sub_20AAB7598((uint64_t)v10);
    char v16 = 0;
  }
  else
  {
    char v16 = sub_20AB86550();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v10, v13);
  }
  sub_20AAB7534(a1, (uint64_t)v7);
  if (v15(v7, 1, v13) == 1)
  {
    sub_20AAB7598(a1);
    uint64_t result = sub_20AAB7598((uint64_t)v7);
    char v18 = 0;
  }
  else
  {
    char v18 = sub_20AB86530();
    sub_20AAB7598(a1);
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v14 + 8))(v7, v13);
  }
  *a2 = v18 & 1;
  a2[1] = v20 & 1;
  a2[2] = v16 & 1;
  return result;
}

void sub_20AAB74DC()
{
  if (!qword_26AC52250)
  {
    sub_20AB86560();
    unint64_t v0 = sub_20AB868D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC52250);
    }
  }
}

uint64_t sub_20AAB7534(uint64_t a1, uint64_t a2)
{
  sub_20AAB74DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AAB7598(uint64_t a1)
{
  sub_20AAB74DC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static CalendarAccessData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void CalendarAccessData.calendarAccessStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *CalendarAccessData.calendarAccessStatus.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*CalendarAccessData.calendarAccessStatus.modify())()
{
  return nullsub_1;
}

StocksAnalytics::CalendarAccessData __swiftcall CalendarAccessData.init(calendarAccessStatus:)(StocksAnalytics::CalendarAccessData calendarAccessStatus)
{
  *uint64_t v1 = *(unsigned char *)calendarAccessStatus.calendarAccessStatus;
  return calendarAccessStatus;
}

unint64_t sub_20AAB7640()
{
  return 0xD000000000000014;
}

uint64_t sub_20AAB765C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAB7F14(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AAB7688(uint64_t a1)
{
  unint64_t v2 = sub_20AAB785C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAB76C4(uint64_t a1)
{
  unint64_t v2 = sub_20AAB785C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CalendarAccessData.encode(to:)(void *a1)
{
  sub_20AAB7A9C(0, &qword_267655E80, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAB785C();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AAB78B0();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AAB785C()
{
  unint64_t result = qword_267655E88;
  if (!qword_267655E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655E88);
  }
  return result;
}

unint64_t sub_20AAB78B0()
{
  unint64_t result = qword_267655E90;
  if (!qword_267655E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655E90);
  }
  return result;
}

uint64_t CalendarAccessData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AAB7A9C(0, &qword_267655E98, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAB785C();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AAB7B00();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAB7A9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAB785C();
    unint64_t v7 = a3(a1, &type metadata for CalendarAccessData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AAB7B00()
{
  unint64_t result = qword_267655EA0;
  if (!qword_267655EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655EA0);
  }
  return result;
}

unint64_t sub_20AAB7B58()
{
  unint64_t result = qword_267655EA8;
  if (!qword_267655EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655EA8);
  }
  return result;
}

unint64_t sub_20AAB7BB0()
{
  unint64_t result = qword_267655EB0;
  if (!qword_267655EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655EB0);
  }
  return result;
}

uint64_t sub_20AAB7C04@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return CalendarAccessData.init(from:)(a1, a2);
}

uint64_t sub_20AAB7C1C(void *a1)
{
  return CalendarAccessData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for CalendarAccessData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAB7D00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarAccessData()
{
  return &type metadata for CalendarAccessData;
}

unsigned char *storeEnumTagSinglePayload for CalendarAccessData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AAB7DD4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarAccessData.CodingKeys()
{
  return &type metadata for CalendarAccessData.CodingKeys;
}

unint64_t sub_20AAB7E10()
{
  unint64_t result = qword_267655EB8;
  if (!qword_267655EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655EB8);
  }
  return result;
}

unint64_t sub_20AAB7E68()
{
  unint64_t result = qword_267655EC0;
  if (!qword_267655EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655EC0);
  }
  return result;
}

unint64_t sub_20AAB7EC0()
{
  unint64_t result = qword_267655EC8;
  if (!qword_267655EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655EC8);
  }
  return result;
}

uint64_t sub_20AAB7F14(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA8570)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t static CustomItemData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t CustomItemData.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomItemData.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CustomItemData.identifier.modify())()
{
  return nullsub_1;
}

uint64_t CustomItemData.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CustomItemData.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*CustomItemData.name.modify())()
{
  return nullsub_1;
}

StocksAnalytics::CustomItemData __swiftcall CustomItemData.init(identifier:name:)(Swift::String identifier, Swift::String name)
{
  *uint64_t v2 = identifier;
  v2[1] = name;
  result.name = name;
  result.identifier = identifier;
  return result;
}

uint64_t sub_20AAB80C0()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_20AAB80F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAB89C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAB8120(uint64_t a1)
{
  unint64_t v2 = sub_20AAB8324();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAB815C(uint64_t a1)
{
  unint64_t v2 = sub_20AAB8324();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CustomItemData.encode(to:)(void *a1)
{
  sub_20AAB8590(0, &qword_267655ED0, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  void v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAB8324();
  sub_20AB86DC0();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_20AB86C10();
  if (!v9)
  {
    char v12 = 1;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AAB8324()
{
  unint64_t result = qword_267655ED8;
  if (!qword_267655ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655ED8);
  }
  return result;
}

uint64_t CustomItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AAB8590(0, &qword_267655EE0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAB8324();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  char v20 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_20AB86B40();
  uint64_t v15 = v14;
  char v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v19 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AAB8590(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAB8324();
    unint64_t v7 = a3(a1, &type metadata for CustomItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAB85FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CustomItemData.init(from:)(a1, a2);
}

uint64_t sub_20AAB8614(void *a1)
{
  return CustomItemData.encode(to:)(a1);
}

void *initializeWithCopy for CustomItemData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CustomItemData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CustomItemData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomItemData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CustomItemData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomItemData()
{
  return &type metadata for CustomItemData;
}

unsigned char *storeEnumTagSinglePayload for CustomItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAB8888);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CustomItemData.CodingKeys()
{
  return &type metadata for CustomItemData.CodingKeys;
}

unint64_t sub_20AAB88C4()
{
  unint64_t result = qword_267655EE8;
  if (!qword_267655EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655EE8);
  }
  return result;
}

unint64_t sub_20AAB891C()
{
  unint64_t result = qword_267655EF0;
  if (!qword_267655EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655EF0);
  }
  return result;
}

unint64_t sub_20AAB8974()
{
  unint64_t result = qword_267655EF8;
  if (!qword_267655EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655EF8);
  }
  return result;
}

uint64_t sub_20AAB89C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AAB8AB8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC4FEF8, MEMORY[0x263F24D10]);
}

uint64_t static SymbolExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4FF10, MEMORY[0x263F24D18], (uint64_t)qword_26AC4FEF8, a1);
}

uint64_t static SymbolExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAB8B20(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC4FF18, MEMORY[0x263F24DC8]);
}

uint64_t static SymbolExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4FF30, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4FF18, a1);
}

uint64_t sub_20AAB8B80()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655F00);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655F00);
  return sub_20AB85D30();
}

uint64_t static SymbolExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC520B0, MEMORY[0x263F24DE8], (uint64_t)qword_267655F00, a1);
}

uint64_t SymbolExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SymbolExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SymbolExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AAB9874(type metadata accessor for SymbolExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for SymbolExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4FF38);
}

uint64_t SymbolExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolExposureEvent.symbolPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 24);
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SymbolExposureEvent.symbolPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 24);
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolExposureEvent.symbolPositionData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolExposureEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 28);
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SymbolExposureEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 28);
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolExposureEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolExposureEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 32);
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SymbolExposureEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 32);
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolExposureEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolExposureEvent.symbolPriceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 36);
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AAB9358(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20AAB93D4()
{
  unint64_t result = qword_26AC4F2D8;
  if (!qword_26AC4F2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F2D8);
  }
  return result;
}

unint64_t sub_20AAB9428()
{
  unint64_t result = qword_26AC4F2D0;
  if (!qword_26AC4F2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F2D0);
  }
  return result;
}

uint64_t SymbolExposureEvent.symbolPriceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent(0) + 36);
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolExposureEvent.symbolPriceData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SymbolExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v2, v14);
}

uint64_t SymbolExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SymbolExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AAB9874(type metadata accessor for SymbolExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AAB9874@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for SymbolExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655F30);
}

uint64_t SymbolExposureEvent.Model.symbolPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for SymbolExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SymbolExposureEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolExposureEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SymbolExposureEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SymbolExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

double SymbolExposureEvent.Model.symbolPriceData.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + *(int *)(type metadata accessor for SymbolExposureEvent.Model(0) + 36));
  *a1 = result;
  return result;
}

uint64_t SymbolExposureEvent.Model.init(eventData:timedData:symbolPositionData:symbolData:activeWatchlistData:symbolPriceData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  int v11 = *a3;
  uint64_t v12 = *a4;
  uint64_t v13 = a4[1];
  char v14 = *((unsigned char *)a4 + 16);
  uint64_t v15 = a4[3];
  uint64_t v16 = a4[4];
  char v24 = *a5;
  uint64_t v17 = sub_20AB85FC0();
  uint64_t v18 = *a6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a7, a1, v17);
  uint64_t v19 = (int *)type metadata accessor for SymbolExposureEvent.Model(0);
  uint64_t v20 = a7 + v19[5];
  uint64_t v21 = sub_20AB85FE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a2, v21);
  *(_DWORD *)(a7 + v19[6]) = v11;
  uint64_t v23 = a7 + v19[7];
  *(void *)uint64_t v23 = v12;
  *(void *)(v23 + 8) = v13;
  *(unsigned char *)(v23 + 16) = v14;
  *(void *)(v23 + 24) = v15;
  *(void *)(v23 + 32) = v16;
  *(unsigned char *)(a7 + v19[8]) = v24;
  *(void *)(a7 + v19[9]) = v18;
  return result;
}

unint64_t sub_20AAB9B54(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x61446C6F626D7973;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x72506C6F626D7973;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20AAB9C3C()
{
  return sub_20AAB9B54(*v0);
}

uint64_t sub_20AAB9C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AABD06C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAB9C6C(uint64_t a1)
{
  unint64_t v2 = sub_20AABA020();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAB9CA8(uint64_t a1)
{
  unint64_t v2 = sub_20AABA020();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AABA65C(0, &qword_267655F18, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AABA020();
  sub_20AB86DC0();
  LOBYTE(v18[0]) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for SymbolExposureEvent.Model(0);
    LOBYTE(v18[0]) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    LODWORD(v18[0]) = *(_DWORD *)(v3 + v10[6]);
    char v22 = 2;
    sub_20A9EE598();
    sub_20AB86C50();
    int v11 = (uint64_t *)(v3 + v10[7]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    char v14 = *((unsigned char *)v11 + 16);
    uint64_t v16 = v11[3];
    uint64_t v15 = v11[4];
    v18[0] = v12;
    v18[1] = v13;
    char v19 = v14;
    uint64_t v20 = v16;
    uint64_t v21 = v15;
    char v22 = 3;
    sub_20A97C61C();
    sub_20AB86C50();
    LOBYTE(v18[0]) = *(unsigned char *)(v3 + v10[8]);
    char v22 = 4;
    sub_20A9875D0();
    sub_20AB86C50();
    v18[0] = *(void *)(v3 + v10[9]);
    char v22 = 5;
    sub_20AAB9428();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AABA020()
{
  unint64_t result = qword_267655F20;
  if (!qword_267655F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655F20);
  }
  return result;
}

uint64_t SymbolExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AABA65C(0, &qword_267655F28, MEMORY[0x263F8E040]);
  uint64_t v35 = v8;
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for SymbolExposureEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AABA020();
  uint64_t v34 = v10;
  uint64_t v14 = (uint64_t)v36;
  sub_20AB86DA0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v5;
  uint64_t v16 = (int *)v11;
  long long v36 = a1;
  uint64_t v17 = v30;
  uint64_t v18 = v31;
  uint64_t v19 = v32;
  LOBYTE(v37) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  uint64_t v20 = *(void (**)(char *, char *))(v17 + 32);
  uint64_t v21 = v33;
  uint64_t v33 = (char *)v6;
  v20(v13, v21);
  LOBYTE(v37) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v13[v16[5]], v15, v19);
  char v42 = 2;
  sub_20A9EE544();
  sub_20AB86B80();
  *(_DWORD *)&v13[v16[6]] = v37;
  char v42 = 3;
  sub_20A97C5C8();
  sub_20AB86B80();
  uint64_t v22 = v38;
  char v23 = v39;
  uint64_t v24 = v40;
  uint64_t v25 = v41;
  uint64_t v26 = &v13[v16[7]];
  *(void *)uint64_t v26 = v37;
  *((void *)v26 + 1) = v22;
  v26[16] = v23;
  *((void *)v26 + 3) = v24;
  *((void *)v26 + 4) = v25;
  char v42 = 4;
  sub_20A98757C();
  sub_20AB86B80();
  v13[v16[8]] = v37;
  char v42 = 5;
  sub_20AAB93D4();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v35);
  *(void *)&v13[v16[9]] = v37;
  sub_20AABA6C0((uint64_t)v13, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_20AABA724((uint64_t)v13);
}

void sub_20AABA65C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AABA020();
    unint64_t v7 = a3(a1, &type metadata for SymbolExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AABA6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AABA724(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AABA780@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AABA798(void *a1)
{
  return SymbolExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AABA7B0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4FF10, MEMORY[0x263F24D18], (uint64_t)qword_26AC4FEF8, a1);
}

uint64_t sub_20AABA7E8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4FF30, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4FF18, a1);
}

uint64_t sub_20AABA820@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC520B0, MEMORY[0x263F24DE8], (uint64_t)qword_267655F00, a1);
}

uint64_t sub_20AABA858@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for SymbolExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for SymbolExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for SymbolExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for SymbolExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for SymbolExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AABBBC0);
}

uint64_t sub_20AABBBC0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for SymbolExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AABBEE4);
}

uint64_t sub_20AABBEE4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  sub_20AAB9358(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  sub_20AAB9358(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  sub_20AAB9358(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  sub_20AAB9358(0, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_20AABC200()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AAB9358(319, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
      if (v2 <= 0x3F)
      {
        sub_20AAB9358(319, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
        if (v3 <= 0x3F)
        {
          sub_20AAB9358(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
          if (v4 <= 0x3F)
          {
            sub_20AAB9358(319, &qword_26AC4E0B8, (void (*)(void))sub_20AAB93D4, (void (*)(void))sub_20AAB9428);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SymbolExposureEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    v13[16] = v14[16];
    uint64_t v16 = *((void *)v14 + 4);
    *((void *)v13 + 3) = *((void *)v14 + 3);
    *((void *)v13 + 4) = v16;
    uint64_t v17 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v14;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  uint64_t v15 = *(void *)(v13 + 32);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  *(void *)(v12 + 32) = v15;
  uint64_t v16 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v14 = a3[9];
  uint64_t v15 = (_DWORD *)(a1 + v14);
  uint64_t v16 = (_DWORD *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  return a1;
}

uint64_t initializeWithTake for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  return a1;
}

uint64_t assignWithTake for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_DWORD *)(a1 + a3[6]) = *(_DWORD *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11);
  uint64_t v15 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = v14;
  *(void *)(v12 + 8) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  uint64_t v16 = *(void *)(v13 + 32);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  *(void *)(v12 + 32) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AABCB2C);
}

uint64_t sub_20AABCB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AABCC58);
}

uint64_t sub_20AABCC58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AABCD6C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SymbolExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AABCF2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolExposureEvent.Model.CodingKeys()
{
  return &type metadata for SymbolExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AABCF68()
{
  unint64_t result = qword_267655F40;
  if (!qword_267655F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655F40);
  }
  return result;
}

unint64_t sub_20AABCFC0()
{
  unint64_t result = qword_267655F48;
  if (!qword_267655F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655F48);
  }
  return result;
}

unint64_t sub_20AABD018()
{
  unint64_t result = qword_267655F50;
  if (!qword_267655F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655F50);
  }
  return result;
}

uint64_t sub_20AABD06C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA8590 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x72506C6F626D7973 && a2 == 0xEF61746144656369)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_20AABD324(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267655F58, MEMORY[0x263F24D10]);
}

uint64_t static ChangeSymbolPerfMetricEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653588, MEMORY[0x263F24D18], (uint64_t)qword_267655F58, a1);
}

uint64_t static ChangeSymbolPerfMetricEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AABD38C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267655F70, MEMORY[0x263F24DC8]);
}

uint64_t static ChangeSymbolPerfMetricEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653590, MEMORY[0x263F24DD8], (uint64_t)qword_267655F70, a1);
}

uint64_t sub_20AABD3EC()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267655F88);
  __swift_project_value_buffer(v0, (uint64_t)qword_267655F88);
  return sub_20AB85D30();
}

uint64_t static ChangeSymbolPerfMetricEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653598, MEMORY[0x263F24DE8], (uint64_t)qword_267655F88, a1);
}

uint64_t ChangeSymbolPerfMetricEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ChangeSymbolPerfMetricEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ChangeSymbolPerfMetricEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ChangeSymbolPerfMetricEvent.symbolPerfData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ChangeSymbolPerfMetricEvent(0) + 20);
  sub_20AABD5A8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ChangeSymbolPerfMetricEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655FB8);
}

void sub_20AABD5A8()
{
  if (!qword_26AC4E5F8)
  {
    sub_20A9BE510();
    sub_20A9BE564();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E5F8);
    }
  }
}

uint64_t ChangeSymbolPerfMetricEvent.symbolPerfData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ChangeSymbolPerfMetricEvent(0) + 20);
  sub_20AABD5A8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ChangeSymbolPerfMetricEvent.symbolPerfData.modify())()
{
  return nullsub_1;
}

uint64_t ChangeSymbolPerfMetricEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ChangeSymbolPerfMetricEvent(0) + 20);
  sub_20AABD5A8();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t ChangeSymbolPerfMetricEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ChangeSymbolPerfMetricEvent.Model.symbolPerfData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ChangeSymbolPerfMetricEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267655FC8);
}

uint64_t ChangeSymbolPerfMetricEvent.Model.init(eventData:symbolPerfData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_20AABD878()
{
  if (*v0) {
    return 0x65506C6F626D7973;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AABD8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AABED50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AABD8EC(uint64_t a1)
{
  unint64_t v2 = sub_20AABDB30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AABD928(uint64_t a1)
{
  unint64_t v2 = sub_20AABDB30();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ChangeSymbolPerfMetricEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AABDED4(0, &qword_267655FA0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AABDB30();
  sub_20AB86DC0();
  v11[15] = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    v11[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0) + 20));
    v11[13] = 1;
    sub_20A9BE564();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AABDB30()
{
  unint64_t result = qword_267655FA8;
  if (!qword_267655FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655FA8);
  }
  return result;
}

uint64_t ChangeSymbolPerfMetricEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v23 = sub_20AB85FC0();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AABDED4(0, &qword_267655FB0, MEMORY[0x263F8E040]);
  uint64_t v24 = v6;
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AABDB30();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v21;
  char v27 = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v23;
  sub_20AB86B80();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v19 = (uint64_t)v12;
  v15(v12, v5, v14);
  char v25 = 1;
  sub_20A9BE510();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v24);
  uint64_t v17 = v19;
  uint64_t v16 = v20;
  *(unsigned char *)(v19 + *(int *)(v9 + 20)) = v26;
  sub_20AABDF38(v17, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AABDF9C(v17);
}

void sub_20AABDED4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AABDB30();
    unint64_t v7 = a3(a1, &type metadata for ChangeSymbolPerfMetricEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AABDF38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AABDF9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChangeSymbolPerfMetricEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AABDFF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ChangeSymbolPerfMetricEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AABE010(void *a1)
{
  return ChangeSymbolPerfMetricEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AABE028@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653588, MEMORY[0x263F24D18], (uint64_t)qword_267655F58, a1);
}

uint64_t sub_20AABE060@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653590, MEMORY[0x263F24DD8], (uint64_t)qword_267655F70, a1);
}

uint64_t sub_20AABE098@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653598, MEMORY[0x263F24DE8], (uint64_t)qword_267655F88, a1);
}

uint64_t sub_20AABE0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AABD5A8();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for ChangeSymbolPerfMetricEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AABD5A8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AABD5A8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AABD5A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AABD5A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AABD5A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AABD5A8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AABE638);
}

uint64_t sub_20AABE638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20AABD5A8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ChangeSymbolPerfMetricEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AABE744);
}

uint64_t sub_20AABE744(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20AABD5A8();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_20AABE848()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AABD5A8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for ChangeSymbolPerfMetricEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AABE924);
}

uint64_t sub_20AABE924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 4) {
      return v10 - 3;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for ChangeSymbolPerfMetricEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AABE9F4);
}

uint64_t sub_20AABE9F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  }
  return result;
}

uint64_t sub_20AABEAB0()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ChangeSymbolPerfMetricEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AABEC10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChangeSymbolPerfMetricEvent.Model.CodingKeys()
{
  return &type metadata for ChangeSymbolPerfMetricEvent.Model.CodingKeys;
}

unint64_t sub_20AABEC4C()
{
  unint64_t result = qword_267655FD8;
  if (!qword_267655FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655FD8);
  }
  return result;
}

unint64_t sub_20AABECA4()
{
  unint64_t result = qword_267655FE0;
  if (!qword_267655FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655FE0);
  }
  return result;
}

unint64_t sub_20AABECFC()
{
  unint64_t result = qword_267655FE8;
  if (!qword_267655FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655FE8);
  }
  return result;
}

uint64_t sub_20AABED50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65506C6F626D7973 && a2 == 0xEE00617461446672)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static WatchlistAgeData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t WatchlistAgeData.averageQuoteAge.getter()
{
  return *v0;
}

uint64_t WatchlistAgeData.averageQuoteAge.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*WatchlistAgeData.averageQuoteAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.averageSparklineAge.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t WatchlistAgeData.averageSparklineAge.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*WatchlistAgeData.averageSparklineAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.minQuoteAge.getter()
{
  return *(unsigned int *)(v0 + 8);
}

uint64_t WatchlistAgeData.minQuoteAge.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*WatchlistAgeData.minQuoteAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.maxQuoteAge.getter()
{
  return *(unsigned int *)(v0 + 12);
}

uint64_t WatchlistAgeData.maxQuoteAge.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 12) = result;
  return result;
}

uint64_t (*WatchlistAgeData.maxQuoteAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.minSparklineAge.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t WatchlistAgeData.minSparklineAge.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*WatchlistAgeData.minSparklineAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.maxSparklineAge.getter()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t WatchlistAgeData.maxSparklineAge.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*WatchlistAgeData.maxSparklineAge.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistAgeData.init(averageQuoteAge:averageSparklineAge:minQuoteAge:maxQuoteAge:minSparklineAge:maxSparklineAge:)@<X0>(uint64_t result@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, _DWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

unint64_t sub_20AABEFAC()
{
  unint64_t result = 0x5165676172657661;
  switch(*v0)
  {
    case 1:
      return 0xD000000000000013;
    case 2:
      unsigned int v2 = 1366190445;
      return v2 | 0x65746F7500000000;
    case 3:
      unsigned int v2 = 1366843757;
      return v2 | 0x65746F7500000000;
    case 4:
      unsigned int v3 = 1399744877;
      goto LABEL_8;
    case 5:
      unsigned int v3 = 1400398189;
LABEL_8:
      unint64_t result = v3 | 0x6B72617000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AABF080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AABF930(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AABF0A8(uint64_t a1)
{
  unint64_t v2 = sub_20AABF35C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AABF0E4(uint64_t a1)
{
  unint64_t v2 = sub_20AABF35C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WatchlistAgeData.encode(to:)(void *a1)
{
  sub_20AABF618(0, &qword_26AC518A0, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v12 - v6;
  int v8 = v1[1];
  v12[4] = v1[2];
  v12[5] = v8;
  int v9 = v1[3];
  v12[2] = v1[4];
  v12[3] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AABF35C();
  sub_20AB86DC0();
  char v19 = 0;
  uint64_t v10 = v13;
  sub_20AB86C60();
  if (!v10)
  {
    char v18 = 1;
    sub_20AB86C60();
    char v17 = 2;
    sub_20AB86C60();
    char v16 = 3;
    sub_20AB86C60();
    char v15 = 4;
    sub_20AB86C60();
    char v14 = 5;
    sub_20AB86C60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AABF35C()
{
  unint64_t result = qword_26AC4F7C0;
  if (!qword_26AC4F7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F7C0);
  }
  return result;
}

uint64_t WatchlistAgeData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_20AABF618(0, &qword_267655FF0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AABF35C();
  sub_20AB86DA0();
  if (!v2)
  {
    char v23 = 0;
    int v10 = sub_20AB86B90();
    char v22 = 1;
    int v11 = sub_20AB86B90();
    char v21 = 2;
    int v17 = sub_20AB86B90();
    char v20 = 3;
    int v16 = sub_20AB86B90();
    char v19 = 4;
    HIDWORD(v15) = sub_20AB86B90();
    char v18 = 5;
    int v13 = sub_20AB86B90();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v11;
    int v14 = v16;
    a2[2] = v17;
    a2[3] = v14;
    a2[4] = HIDWORD(v15);
    a2[5] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AABF618(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AABF35C();
    unint64_t v7 = a3(a1, &type metadata for WatchlistAgeData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AABF684@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return WatchlistAgeData.init(from:)(a1, a2);
}

uint64_t sub_20AABF69C(void *a1)
{
  return WatchlistAgeData.encode(to:)(a1);
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WatchlistAgeData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WatchlistAgeData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistAgeData()
{
  return &type metadata for WatchlistAgeData;
}

unsigned char *storeEnumTagSinglePayload for WatchlistAgeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AABF7F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistAgeData.CodingKeys()
{
  return &type metadata for WatchlistAgeData.CodingKeys;
}

unint64_t sub_20AABF82C()
{
  unint64_t result = qword_267655FF8;
  if (!qword_267655FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267655FF8);
  }
  return result;
}

unint64_t sub_20AABF884()
{
  unint64_t result = qword_26AC4F7D0;
  if (!qword_26AC4F7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F7D0);
  }
  return result;
}

unint64_t sub_20AABF8DC()
{
  unint64_t result = qword_26AC4F7C8;
  if (!qword_26AC4F7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F7C8);
  }
  return result;
}

uint64_t sub_20AABF930(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5165676172657661 && a2 == 0xEF65674165746F75;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA85B0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746F75516E696DLL && a2 == 0xEB00000000656741 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65746F755178616DLL && a2 == 0xEB00000000656741 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B726170536E696DLL && a2 == 0xEF656741656E696CLL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6B7261705378616DLL && a2 == 0xEF656741656E696CLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_20AABFC34()
{
  sub_20AABFE04();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unsigned int v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AABFEB4();
  sub_20A9BC5DC();
  uint64_t v5 = sub_20AB85A70();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20AB88020;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x263F24D40], v5);
  sub_20AABFE60();
  sub_20AB85C50();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_20AABFE04()
{
  if (!qword_26AC4E500)
  {
    sub_20AABFE60();
    unint64_t v0 = sub_20AB85920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E500);
    }
  }
}

unint64_t sub_20AABFE60()
{
  unint64_t result = qword_26AC50840;
  if (!qword_26AC50840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50840);
  }
  return result;
}

uint64_t sub_20AABFEB4()
{
  swift_getObjectType();
  uint64_t v0 = sub_20AB853A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20AB856B0();
  sub_20AAC00B8();
  sub_20AB856E0();
  swift_release();
  int v4 = (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x263F7AA48])
  {
    char v5 = 3;
  }
  else if (v4 == *MEMORY[0x263F7AA80])
  {
    char v5 = 2;
  }
  else if (v4 == *MEMORY[0x263F7AA58])
  {
    char v5 = 1;
  }
  else
  {
    if (v4 != *MEMORY[0x263F7AA60]
      && v4 != *MEMORY[0x263F7AA50]
      && v4 != *MEMORY[0x263F7AA78]
      && v4 != *MEMORY[0x263F7AA68]
      && v4 != *MEMORY[0x263F7AA70])
    {
      (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    }
    char v5 = 0;
  }
  v11[15] = v5;
  sub_20AABFE60();
  return sub_20AB85910();
}

unint64_t sub_20AAC00B8()
{
  unint64_t result = qword_26AC4F2A8;
  if (!qword_26AC4F2A8)
  {
    type metadata accessor for SessionObserver();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F2A8);
  }
  return result;
}

uint64_t static FractionalCohortMembershipDetails.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t FractionalCohortMembershipDetails.symbol.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FractionalCohortMembershipDetails.symbol.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FractionalCohortMembershipDetails.symbol.modify())()
{
  return nullsub_1;
}

double FractionalCohortMembershipDetails.score.getter()
{
  return *(double *)(v0 + 16);
}

void FractionalCohortMembershipDetails.score.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*FractionalCohortMembershipDetails.score.modify())()
{
  return nullsub_1;
}

StocksAnalytics::FractionalCohortMembershipDetails __swiftcall FractionalCohortMembershipDetails.init(symbol:score:)(Swift::String symbol, Swift::Double score)
{
  *(Swift::String *)uint64_t v2 = symbol;
  *(Swift::Double *)(v2 + 16) = score;
  result.symbol = symbol;
  result.score = score;
  return result;
}

uint64_t sub_20AAC01DC()
{
  if (*v0) {
    return 0x65726F6373;
  }
  else {
    return 0x6C6F626D7973;
  }
}

uint64_t sub_20AAC0210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAC0B4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAC0238(uint64_t a1)
{
  unint64_t v2 = sub_20AAC043C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAC0274(uint64_t a1)
{
  unint64_t v2 = sub_20AAC043C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FractionalCohortMembershipDetails.encode(to:)(void *a1)
{
  sub_20AAC0690(0, &qword_26AC51928, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAC043C();
  sub_20AB86DC0();
  char v11 = 0;
  uint64_t v7 = v9;
  sub_20AB86C10();
  if (!v7)
  {
    char v10 = 1;
    sub_20AB86C30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AAC043C()
{
  unint64_t result = qword_26AC50FB8;
  if (!qword_26AC50FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FB8);
  }
  return result;
}

uint64_t FractionalCohortMembershipDetails.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AAC0690(0, &qword_26AC529F0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v16[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAC043C();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v16[15] = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  v16[14] = 1;
  swift_bridgeObjectRetain();
  sub_20AB86B60();
  uint64_t v14 = v13;
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_20AAC0690(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAC043C();
    unint64_t v7 = a3(a1, &type metadata for FractionalCohortMembershipDetails.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AAC06F8()
{
  unint64_t result = qword_26AC529F8;
  if (!qword_26AC529F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC529F8);
  }
  return result;
}

unint64_t sub_20AAC0750()
{
  unint64_t result = qword_26AC50FD0;
  if (!qword_26AC50FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FD0);
  }
  return result;
}

uint64_t sub_20AAC07A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FractionalCohortMembershipDetails.init(from:)(a1, a2);
}

uint64_t sub_20AAC07BC(void *a1)
{
  return FractionalCohortMembershipDetails.encode(to:)(a1);
}

void *sub_20AAC07D8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FractionalCohortMembershipDetails(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for FractionalCohortMembershipDetails(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for FractionalCohortMembershipDetails(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FractionalCohortMembershipDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FractionalCohortMembershipDetails()
{
  return &type metadata for FractionalCohortMembershipDetails;
}

unsigned char *storeEnumTagSinglePayload for FractionalCohortMembershipDetails.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAC0A0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FractionalCohortMembershipDetails.CodingKeys()
{
  return &type metadata for FractionalCohortMembershipDetails.CodingKeys;
}

unint64_t sub_20AAC0A48()
{
  unint64_t result = qword_267656000;
  if (!qword_267656000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656000);
  }
  return result;
}

unint64_t sub_20AAC0AA0()
{
  unint64_t result = qword_26AC50FC8;
  if (!qword_26AC50FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FC8);
  }
  return result;
}

unint64_t sub_20AAC0AF8()
{
  unint64_t result = qword_26AC50FC0;
  if (!qword_26AC50FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50FC0);
  }
  return result;
}

uint64_t sub_20AAC0B4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AAC0C30(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC4FAC8, MEMORY[0x263F24D10]);
}

uint64_t static GroupExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4FAE0, MEMORY[0x263F24D18], (uint64_t)qword_26AC4FAC8, a1);
}

uint64_t static GroupExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAC0C98(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC4FAE8, MEMORY[0x263F24DC8]);
}

uint64_t static GroupExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4FB00, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4FAE8, a1);
}

uint64_t sub_20AAC0CF8()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656008);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656008);
  return sub_20AB85D30();
}

uint64_t static GroupExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC52098, MEMORY[0x263F24DE8], (uint64_t)qword_267656008, a1);
}

uint64_t GroupExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t GroupExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*GroupExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AAC1720(type metadata accessor for GroupExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for GroupExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4FB08);
}

uint64_t GroupExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 24);
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GroupExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 24);
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 28);
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t GroupExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 28);
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 32);
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AAC1328(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t GroupExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent(0) + 32);
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*GroupExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t GroupExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for GroupExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v2, v12);
}

uint64_t GroupExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t GroupExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AAC1720(type metadata accessor for GroupExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AAC1720@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for GroupExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656038);
}

uint64_t GroupExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 24);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v6 = *(void *)(v3 + 40);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = *(void *)(v3 + 24);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 28);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for GroupExposureEvent.Model(0) + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t GroupExposureEvent.Model.init(eventData:timedData:groupData:feedData:viewData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  char v10 = *a3;
  uint64_t v11 = *((void *)a3 + 1);
  uint64_t v12 = *((void *)a3 + 2);
  uint64_t v13 = *((void *)a3 + 4);
  uint64_t v14 = *((void *)a3 + 5);
  char v15 = *a4;
  uint64_t v25 = *((void *)a4 + 2);
  uint64_t v26 = *((void *)a4 + 1);
  uint64_t v28 = a5[1];
  uint64_t v29 = *a5;
  __int16 v27 = *((_WORD *)a5 + 8);
  uint64_t v16 = sub_20AB85FC0();
  uint64_t v17 = *((void *)a3 + 3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a6, a1, v16);
  char v18 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
  uint64_t v19 = a6 + v18[5];
  uint64_t v20 = sub_20AB85FE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a2, v20);
  uint64_t v22 = a6 + v18[6];
  *(unsigned char *)uint64_t v22 = v10;
  *(void *)(v22 + 8) = v11;
  *(void *)(v22 + 16) = v12;
  *(void *)(v22 + 24) = v17;
  *(void *)(v22 + 32) = v13;
  *(void *)(v22 + 40) = v14;
  uint64_t v23 = a6 + v18[7];
  *(unsigned char *)uint64_t v23 = v15;
  *(void *)(v23 + 8) = v26;
  *(void *)(v23 + 16) = v25;
  uint64_t v24 = a6 + v18[8];
  *(void *)uint64_t v24 = v29;
  *(void *)(v24 + 8) = v28;
  *(_WORD *)(v24 + 16) = v27;
  return result;
}

uint64_t sub_20AAC1A40()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x74614470756F7267;
      break;
    case 3:
      uint64_t result = 0x6174614464656566;
      break;
    case 4:
      uint64_t result = 0x6174614477656976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAC1AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAC4B38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAC1B10(uint64_t a1)
{
  unint64_t v2 = sub_20AAC1EA0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAC1B4C(uint64_t a1)
{
  unint64_t v2 = sub_20AAC1EA0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GroupExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AAC2500(0, &qword_267656020, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAC1EA0();
  sub_20AB86DC0();
  LOBYTE(v24) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
    LOBYTE(v24) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = v3 + v10[6];
    uint64_t v12 = *(void *)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
    LOBYTE(v24) = *(unsigned char *)v11;
    uint64_t v25 = v12;
    uint64_t v26 = v13;
    uint64_t v27 = *(void *)(v11 + 24);
    long long v28 = *(_OWORD *)(v11 + 32);
    char v23 = 2;
    sub_20A986524();
    sub_20AB86C50();
    uint64_t v14 = (char *)(v3 + v10[7]);
    char v15 = *v14;
    uint64_t v17 = *((void *)v14 + 1);
    uint64_t v16 = *((void *)v14 + 2);
    LOBYTE(v24) = v15;
    uint64_t v25 = v17;
    uint64_t v26 = v16;
    char v23 = 3;
    sub_20A986774();
    sub_20AB86C50();
    char v18 = (uint64_t *)(v3 + v10[8]);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    LOWORD(v18) = *((_WORD *)v18 + 8);
    uint64_t v24 = v19;
    uint64_t v25 = v20;
    LOWORD(v26) = (_WORD)v18;
    char v23 = 4;
    sub_20A986C14();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AAC1EA0()
{
  unint64_t result = qword_267656028;
  if (!qword_267656028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656028);
  }
  return result;
}

uint64_t GroupExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v34 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAC2500(0, &qword_267656030, MEMORY[0x263F8E040]);
  uint64_t v36 = v8;
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v28 - v9;
  uint64_t v11 = (int *)type metadata accessor for GroupExposureEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAC1EA0();
  uint64_t v35 = v10;
  uint64_t v14 = (uint64_t)v37;
  sub_20AB86DA0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v15 = v5;
  uint64_t v37 = a1;
  uint64_t v16 = v32;
  uint64_t v17 = v33;
  LOBYTE(v38) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v13, v34, v6);
  LOBYTE(v38) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v13[v11[5]], v15, v17);
  char v43 = 2;
  sub_20A9864D0();
  sub_20AB86B80();
  uint64_t v18 = v39;
  uint64_t v19 = v40;
  uint64_t v20 = &v13[v11[6]];
  *uint64_t v20 = v38;
  *((void *)v20 + 1) = v18;
  *((void *)v20 + 2) = v19;
  *((void *)v20 + 3) = v41;
  *((_OWORD *)v20 + 2) = v42;
  char v43 = 3;
  sub_20A986720();
  sub_20AB86B80();
  uint64_t v21 = v39;
  uint64_t v22 = v40;
  char v23 = &v13[v11[7]];
  *char v23 = v38;
  *((void *)v23 + 1) = v21;
  *((void *)v23 + 2) = v22;
  char v43 = 4;
  sub_20A986BC0();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v36);
  uint64_t v24 = v39;
  __int16 v25 = v40;
  uint64_t v26 = &v13[v11[8]];
  *(void *)uint64_t v26 = v38;
  *((void *)v26 + 1) = v24;
  *((_WORD *)v26 + 8) = v25;
  sub_20AAC2564((uint64_t)v13, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return sub_20AAC25C8((uint64_t)v13);
}

void sub_20AAC2500(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAC1EA0();
    unint64_t v7 = a3(a1, &type metadata for GroupExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAC2564(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AAC25C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AAC2624@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAC263C(void *a1)
{
  return GroupExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AAC2654@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4FAE0, MEMORY[0x263F24D18], (uint64_t)qword_26AC4FAC8, a1);
}

uint64_t sub_20AAC268C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4FB00, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4FAE8, a1);
}

uint64_t sub_20AAC26C4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC52098, MEMORY[0x263F24DE8], (uint64_t)qword_267656008, a1);
}

uint64_t sub_20AAC26FC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for GroupExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for GroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAC36F0);
}

uint64_t sub_20AAC36F0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for GroupExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAC3990);
}

uint64_t sub_20AAC3990(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  sub_20AAC1328(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  sub_20AAC1328(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  sub_20AAC1328(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_20AAC3C28()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AAC1328(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
      if (v2 <= 0x3F)
      {
        sub_20AAC1328(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
        if (v3 <= 0x3F)
        {
          sub_20AAC1328(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for GroupExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *uint64_t v14 = *v15;
    uint64_t v16 = *((void *)v15 + 2);
    *((void *)v14 + 1) = *((void *)v15 + 1);
    *((void *)v14 + 2) = v16;
    *((void *)v14 + 3) = *((void *)v15 + 3);
    uint64_t v17 = *((void *)v15 + 5);
    *((void *)v14 + 4) = *((void *)v15 + 4);
    *((void *)v14 + 5) = v17;
    uint64_t v18 = (char *)a1 + v13;
    uint64_t v19 = (char *)a2 + v13;
    *uint64_t v18 = *v19;
    uint64_t v20 = *((void *)v19 + 2);
    *((void *)v18 + 1) = *((void *)v19 + 1);
    *((void *)v18 + 2) = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    unsigned char v22[16] = v23[16];
    v22[17] = v23[17];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  *(void *)(v13 + 16) = v15;
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  uint64_t v16 = *(void *)(v14 + 40);
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  *(void *)(v13 + 40) = v16;
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = v23;
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  *(unsigned char *)(v21 + 17) = *(unsigned char *)(v22 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
  *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)(a2 + v17);
  *(void *)(v18 + 8) = *(void *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  *(unsigned char *)(v18 + 17) = *(unsigned char *)(v19 + 17);
  return a1;
}

uint64_t initializeWithTake for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (_OWORD *)(a1 + v11);
  uint64_t v14 = (_OWORD *)(a2 + v11);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  v13[2] = v14[2];
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_WORD *)(v19 + 16) = *(_WORD *)(v20 + 16);
  return a1;
}

uint64_t assignWithTake for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (void *)(a2 + v11);
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  *(void *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 24) = v13[3];
  uint64_t v15 = v13[5];
  *(void *)(v12 + 32) = v13[4];
  *(void *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v17 + 8) = v20;
  *(void *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)(v23 + 8);
  *(void *)uint64_t v22 = *(void *)v23;
  *(void *)(v22 + 8) = v24;
  swift_bridgeObjectRelease();
  *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAC4608);
}

uint64_t sub_20AAC4608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAC4734);
}

uint64_t sub_20AAC4734(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AAC4848()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GroupExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAC49F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupExposureEvent.Model.CodingKeys()
{
  return &type metadata for GroupExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AAC4A34()
{
  unint64_t result = qword_267656048;
  if (!qword_267656048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656048);
  }
  return result;
}

unint64_t sub_20AAC4A8C()
{
  unint64_t result = qword_267656050;
  if (!qword_267656050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656050);
  }
  return result;
}

unint64_t sub_20AAC4AE4()
{
  unint64_t result = qword_267656058;
  if (!qword_267656058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656058);
  }
  return result;
}

uint64_t sub_20AAC4B38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_20AAC4D74(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656060, MEMORY[0x263F24D10]);
}

uint64_t static AudioEngagementBeginEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535A0, MEMORY[0x263F24D18], (uint64_t)qword_267656060, a1);
}

uint64_t static AudioEngagementBeginEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAC4DDC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656078, MEMORY[0x263F24DC8]);
}

uint64_t static AudioEngagementBeginEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535A8, MEMORY[0x263F24DD8], (uint64_t)qword_267656078, a1);
}

uint64_t sub_20AAC4E3C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656090);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656090);
  return sub_20AB85D30();
}

uint64_t static AudioEngagementBeginEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535B0, MEMORY[0x263F24DE8], (uint64_t)qword_267656090, a1);
}

uint64_t AudioEngagementBeginEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AudioEngagementBeginEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AudioEngagementBeginEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 20);
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AudioEngagementBeginEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676560C0);
}

uint64_t AudioEngagementBeginEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 20);
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 24);
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 24);
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 28);
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 28);
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 32);
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 32);
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 36);
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.trackData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 36);
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.trackData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 40);
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.audioEngagementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 40);
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.audioEngagementData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 44);
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 44);
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 48);
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 48);
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.articleScienceData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 52);
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 52);
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.playbackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 56);
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.playbackData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 56);
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.playbackData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.audioEngagementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 60);
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.audioEngagementOriginationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 60);
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.audioEngagementOriginationData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 64);
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngagementBeginEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent(0) + 64);
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementBeginEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementBeginEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AudioEngagementBeginEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v10, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v10, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v2, v25);
  uint64_t v26 = a1 + v4[15];
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v26, v2, v27);
  uint64_t v28 = a1 + v4[16];
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104);

  return v30(v28, v10, v29);
}

uint64_t AudioEngagementBeginEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AudioEngagementBeginEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AudioEngagementBeginEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676560D0);
}

uint64_t AudioEngagementBeginEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t AudioEngagementBeginEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 36));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 40);
  char v4 = *(unsigned char *)(v3 + 16);
  int v5 = *(_DWORD *)(v3 + 20);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 32);
  __int16 v8 = *(_WORD *)(v3 + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 20) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = v8;

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 44));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementBeginEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 48);
  long long v4 = *(_OWORD *)(v3 + 144);
  long long v5 = *(_OWORD *)(v3 + 176);
  long long v31 = *(_OWORD *)(v3 + 160);
  long long v32 = v5;
  long long v6 = *(_OWORD *)(v3 + 80);
  long long v7 = *(_OWORD *)(v3 + 112);
  long long v27 = *(_OWORD *)(v3 + 96);
  long long v8 = v27;
  long long v28 = v7;
  long long v9 = *(_OWORD *)(v3 + 112);
  long long v10 = *(_OWORD *)(v3 + 144);
  long long v29 = *(_OWORD *)(v3 + 128);
  long long v11 = v29;
  long long v30 = v10;
  long long v12 = *(_OWORD *)(v3 + 48);
  long long v13 = *(_OWORD *)(v3 + 80);
  long long v25 = *(_OWORD *)(v3 + 64);
  long long v14 = v25;
  long long v26 = v13;
  long long v15 = *(_OWORD *)(v3 + 16);
  long long v16 = *(_OWORD *)(v3 + 48);
  long long v23 = *(_OWORD *)(v3 + 32);
  long long v17 = v23;
  long long v24 = v16;
  long long v18 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  long long v19 = v22[0];
  v22[1] = v18;
  long long v20 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 160) = v31;
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v14;
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v33 = *(void *)(v3 + 192);
  *(void *)(a1 + 192) = *(void *)(v3 + 192);
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v15;
  return sub_20A9C5E44((uint64_t)v22);
}

uint64_t AudioEngagementBeginEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 52));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

float AudioEngagementBeginEvent.Model.playbackData.getter@<S0>(float *a1@<X8>)
{
  float result = *(float *)(v1 + *(int *)(type metadata accessor for AudioEngagementBeginEvent.Model(0) + 56));
  *a1 = result;
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.audioEngagementOriginationData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

__n128 AudioEngagementBeginEvent.Model.init(eventData:newsArticleData:channelData:groupData:feedData:trackData:audioEngagementData:viewData:articleScienceData:issueData:playbackData:audioEngagementOriginationData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, int *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, long long *a10, uint64_t *a11, int *a12, char *a13, char *a14)
{
  long long v45 = *a2;
  uint64_t v38 = *((void *)a2 + 3);
  uint64_t v39 = *((void *)a2 + 2);
  char v16 = *((unsigned char *)a2 + 32);
  uint64_t v17 = *((void *)a2 + 5);
  char v18 = *((unsigned char *)a2 + 48);
  uint64_t v44 = *((void *)a2 + 7);
  char v42 = *((unsigned char *)a2 + 65);
  char v43 = *((unsigned char *)a2 + 64);
  char v40 = *((unsigned char *)a2 + 67);
  char v41 = *((unsigned char *)a2 + 66);
  long long v50 = *a3;
  uint64_t v48 = *((void *)a3 + 3);
  uint64_t v49 = *((void *)a3 + 2);
  char v46 = *((unsigned char *)a3 + 33);
  char v47 = *((unsigned char *)a3 + 32);
  long long v53 = a4[1];
  long long v54 = *a4;
  uint64_t v51 = *((void *)a4 + 5);
  uint64_t v52 = *((void *)a4 + 4);
  long long v56 = *a5;
  uint64_t v55 = *((void *)a5 + 2);
  char v57 = *((unsigned char *)a6 + 4);
  int v58 = *a6;
  uint64_t v61 = a7[1];
  uint64_t v62 = *a7;
  int v59 = *((_DWORD *)a7 + 5);
  char v60 = *((unsigned char *)a7 + 16);
  uint64_t v79 = *((void *)a10 + 24);
  uint64_t v20 = a7[3];
  uint64_t v19 = a7[4];
  __int16 v37 = *((_WORD *)a7 + 20);
  long long v77 = a10[10];
  long long v78 = a10[11];
  long long v73 = a10[6];
  long long v74 = a10[7];
  long long v75 = a10[8];
  long long v76 = a10[9];
  long long v69 = a10[2];
  long long v70 = a10[3];
  long long v71 = a10[4];
  long long v72 = a10[5];
  long long v67 = *a10;
  __n128 v68 = (__n128)a10[1];
  int v21 = *a12;
  uint64_t v23 = *a8;
  uint64_t v22 = a8[1];
  __int16 v24 = *((_WORD *)a8 + 8);
  uint64_t v63 = *a11;
  uint64_t v64 = a11[1];
  char v65 = *a13;
  char v66 = *a14;
  uint64_t v25 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(a9, a1, v25);
  long long v26 = (int *)type metadata accessor for AudioEngagementBeginEvent.Model(0);
  uint64_t v27 = a9 + v26[5];
  *(void *)(v27 + 16) = v39;
  *(void *)(v27 + 24) = v38;
  *(unsigned char *)(v27 + 32) = v16;
  *(void *)(v27 + 40) = v17;
  *(unsigned char *)(v27 + 48) = v18;
  *(_OWORD *)uint64_t v27 = v45;
  *(void *)(v27 + 56) = v44;
  *(unsigned char *)(v27 + 64) = v43;
  *(unsigned char *)(v27 + 65) = v42;
  *(unsigned char *)(v27 + 66) = v41;
  *(unsigned char *)(v27 + 67) = v40;
  uint64_t v28 = a9 + v26[6];
  *(_OWORD *)uint64_t v28 = v50;
  *(void *)(v28 + 16) = v49;
  *(void *)(v28 + 24) = v48;
  *(unsigned char *)(v28 + 32) = v47;
  *(unsigned char *)(v28 + 33) = v46;
  uint64_t v29 = a9 + v26[7];
  *(_OWORD *)uint64_t v29 = v54;
  *(_OWORD *)(v29 + 16) = v53;
  *(void *)(v29 + 32) = v52;
  *(void *)(v29 + 40) = v51;
  uint64_t v30 = a9 + v26[8];
  *(_OWORD *)uint64_t v30 = v56;
  *(void *)(v30 + 16) = v55;
  uint64_t v31 = a9 + v26[9];
  *(_DWORD *)uint64_t v31 = v58;
  *(unsigned char *)(v31 + 4) = v57;
  uint64_t v32 = a9 + v26[10];
  *(void *)uint64_t v32 = v62;
  *(void *)(v32 + 8) = v61;
  *(unsigned char *)(v32 + 16) = v60;
  *(_DWORD *)(v32 + 20) = v59;
  *(void *)(v32 + 24) = v20;
  *(void *)(v32 + 32) = v19;
  *(_WORD *)(v32 + 40) = v37;
  uint64_t v33 = a9 + v26[11];
  *(void *)uint64_t v33 = v23;
  *(void *)(v33 + 8) = v22;
  *(_WORD *)(v33 + 16) = v24;
  uint64_t v34 = a9 + v26[12];
  *(void *)(v34 + 192) = v79;
  *(_OWORD *)(v34 + 160) = v77;
  *(_OWORD *)(v34 + 176) = v78;
  *(_OWORD *)(v34 + 96) = v73;
  *(_OWORD *)(v34 + 112) = v74;
  *(_OWORD *)(v34 + 128) = v75;
  *(_OWORD *)(v34 + 144) = v76;
  *(_OWORD *)(v34 + 32) = v69;
  *(_OWORD *)(v34 + 48) = v70;
  *(_OWORD *)(v34 + 64) = v71;
  *(_OWORD *)(v34 + 80) = v72;
  __n128 result = v68;
  *(_OWORD *)uint64_t v34 = v67;
  *(__n128 *)(v34 + 16) = v68;
  uint64_t v36 = (void *)(a9 + v26[13]);
  *uint64_t v36 = v63;
  v36[1] = v64;
  *(_DWORD *)(a9 + v26[14]) = v21;
  *(unsigned char *)(a9 + v26[15]) = v65;
  *(unsigned char *)(a9 + v26[16]) = v66;
  return result;
}

uint64_t sub_20AAC717C(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 2:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 3:
      uint64_t result = 0x74614470756F7267;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_8;
    case 5:
      uint64_t result = 0x7461446B63617274;
      break;
    case 6:
    case 12:
      uint64_t result = 0xD000000000000013;
      break;
    case 7:
      unsigned int v3 = 2003134838;
LABEL_8:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 8:
      uint64_t result = 0xD000000000000012;
      break;
    case 9:
      uint64_t result = 0x7461446575737369;
      break;
    case 10:
      uint64_t result = 0x6B63616279616C70;
      break;
    case 11:
      uint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAC7318()
{
  return sub_20AAC717C(*v0);
}

uint64_t sub_20AAC7320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AACDEFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_20AAC7348(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_20AAC7354(uint64_t a1)
{
  unint64_t v2 = sub_20AAC7A38();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAC7390(uint64_t a1)
{
  unint64_t v2 = sub_20AAC7A38();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AudioEngagementBeginEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AAC8710(0, &qword_2676560A8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v9 = (char *)&v49 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAC7A38();
  sub_20AB86DC0();
  LOBYTE(v51) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    long long v10 = (int *)type metadata accessor for AudioEngagementBeginEvent.Model(0);
    long long v11 = (long long *)(v3 + v10[5]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v51 = v12;
    *(void *)&long long v52 = v13;
    *((void *)&v52 + 1) = v14;
    LOBYTE(v53) = v15;
    *((void *)&v53 + 1) = v16;
    LOBYTE(v54) = v17;
    *((void *)&v54 + 1) = v18;
    LOBYTE(v55) = v19;
    BYTE1(v55) = v20;
    BYTE2(v55) = v21;
    BYTE3(v55) = (_BYTE)v11;
    LOBYTE(v65) = 1;
    sub_20A97A1AC();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[6]);
    long long v23 = *v22;
    uint64_t v24 = *((void *)v22 + 2);
    uint64_t v25 = *((void *)v22 + 3);
    char v26 = *((unsigned char *)v22 + 32);
    LOBYTE(v22) = *((unsigned char *)v22 + 33);
    long long v51 = v23;
    *(void *)&long long v52 = v24;
    *((void *)&v52 + 1) = v25;
    LOBYTE(v53) = v26;
    BYTE1(v53) = (_BYTE)v22;
    LOBYTE(v65) = 2;
    sub_20A9862D4();
    sub_20AB86C50();
    uint64_t v27 = (long long *)(v3 + v10[7]);
    long long v28 = v27[1];
    long long v51 = *v27;
    long long v52 = v28;
    long long v53 = v27[2];
    LOBYTE(v65) = 3;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v29 = (long long *)(v3 + v10[8]);
    uint64_t v30 = *((void *)v29 + 2);
    long long v51 = *v29;
    *(void *)&long long v52 = v30;
    LOBYTE(v65) = 4;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v31 = (int *)(v3 + v10[9]);
    int v32 = *v31;
    LOBYTE(v31) = *((unsigned char *)v31 + 4);
    LODWORD(v51) = v32;
    BYTE4(v51) = (_BYTE)v31;
    LOBYTE(v65) = 5;
    sub_20A9869C4();
    sub_20AB86C50();
    uint64_t v33 = (long long *)(v3 + v10[10]);
    char v34 = *((unsigned char *)v33 + 16);
    int v35 = *((_DWORD *)v33 + 5);
    uint64_t v36 = *((void *)v33 + 3);
    uint64_t v37 = *((void *)v33 + 4);
    __int16 v38 = *((_WORD *)v33 + 20);
    long long v51 = *v33;
    LOBYTE(v52) = v34;
    DWORD1(v52) = v35;
    *((void *)&v52 + 1) = v36;
    *(void *)&long long v53 = v37;
    WORD4(v53) = v38;
    LOBYTE(v65) = 6;
    sub_20A986E64();
    sub_20AB86C50();
    uint64_t v39 = (long long *)(v3 + v10[11]);
    __int16 v40 = *((_WORD *)v39 + 8);
    long long v65 = *v39;
    __int16 v66 = v40;
    char v64 = 7;
    sub_20A986C14();
    sub_20AB86BE0();
    char v41 = (long long *)(v3 + v10[12]);
    long long v42 = v41[11];
    long long v61 = v41[10];
    long long v62 = v42;
    uint64_t v63 = *((void *)v41 + 24);
    long long v43 = v41[7];
    long long v57 = v41[6];
    long long v58 = v43;
    long long v44 = v41[9];
    long long v59 = v41[8];
    long long v60 = v44;
    long long v45 = v41[3];
    long long v53 = v41[2];
    long long v54 = v45;
    long long v46 = v41[5];
    long long v55 = v41[4];
    long long v56 = v46;
    long long v47 = *v41;
    long long v52 = v41[1];
    long long v51 = v47;
    char v50 = 8;
    sub_20A9C4D28();
    sub_20AB86C50();
    long long v51 = *(_OWORD *)(v3 + v10[13]);
    char v50 = 9;
    sub_20A9870B4();
    sub_20AB86BE0();
    LODWORD(v51) = *(_DWORD *)(v3 + v10[14]);
    char v50 = 10;
    sub_20A987304();
    sub_20AB86C50();
    LOBYTE(v51) = *(unsigned char *)(v3 + v10[15]);
    char v50 = 11;
    sub_20A9E51D0();
    sub_20AB86C50();
    LOBYTE(v51) = *(unsigned char *)(v3 + v10[16]);
    char v50 = 12;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AAC7A38()
{
  unint64_t result = qword_2676560B0;
  if (!qword_2676560B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676560B0);
  }
  return result;
}

uint64_t AudioEngagementBeginEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v70 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAC8710(0, &qword_2676560B8, MEMORY[0x263F8E040]);
  uint64_t v71 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v68 - v10;
  uint64_t v91 = (int *)type metadata accessor for AudioEngagementBeginEvent.Model(0);
  MEMORY[0x270FA5388](v91);
  long long v74 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  long long v72 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_20AAC7A38();
  sub_20AB86DA0();
  uint64_t v69 = v5;
  if (v2)
  {
    uint64_t v73 = v2;
    LODWORD(v71) = 0;
    char v15 = v91;
    uint64_t v16 = v74;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    int v18 = 0;
    int v19 = 0;
    if (v71) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v68 = a2;
    uint64_t v14 = v9;
    LOBYTE(v78) = 0;
    sub_20A985F3C(&qword_26AC4E0C8);
    sub_20AB86B80();
    uint64_t v27 = v74;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v74, v7, v5);
    LOBYTE(v76) = 1;
    sub_20A97A154();
    sub_20AB86B80();
    long long v28 = v79;
    char v29 = v80;
    uint64_t v30 = *((void *)&v80 + 1);
    char v31 = v81;
    uint64_t v32 = *((void *)&v81 + 1);
    char v33 = v82;
    char v34 = BYTE1(v82);
    char v35 = BYTE2(v82);
    char v36 = BYTE3(v82);
    uint64_t v37 = v91;
    __int16 v38 = &v27[v91[5]];
    *(_OWORD *)__int16 v38 = v78;
    *((_OWORD *)v38 + 1) = v28;
    unsigned char v38[32] = v29;
    *((void *)v38 + 5) = v30;
    v38[48] = v31;
    *((void *)v38 + 7) = v32;
    v38[64] = v33;
    v38[65] = v34;
    v38[66] = v35;
    v38[67] = v36;
    LOBYTE(v76) = 2;
    sub_20A986280();
    sub_20AB86B80();
    long long v39 = v79;
    char v40 = v80;
    char v41 = BYTE1(v80);
    long long v42 = &v27[v37[6]];
    *(_OWORD *)long long v42 = v78;
    *((_OWORD *)v42 + 1) = v39;
    v42[32] = v40;
    v42[33] = v41;
    LOBYTE(v76) = 3;
    sub_20A9864D0();
    sub_20AB86B10();
    long long v43 = &v27[v37[7]];
    long long v44 = v79;
    *(_OWORD *)long long v43 = v78;
    *((_OWORD *)v43 + 1) = v44;
    *((_OWORD *)v43 + 2) = v80;
    LOBYTE(v76) = 4;
    sub_20A986720();
    sub_20AB86B10();
    uint64_t v45 = v79;
    long long v46 = &v27[v37[8]];
    *(_OWORD *)long long v46 = v78;
    *((void *)v46 + 2) = v45;
    LOBYTE(v76) = 5;
    sub_20A986970();
    sub_20AB86B80();
    char v47 = BYTE4(v78);
    uint64_t v48 = &v27[v37[9]];
    *(_DWORD *)uint64_t v48 = v78;
    v48[4] = v47;
    LOBYTE(v76) = 6;
    sub_20A986E10();
    sub_20AB86B80();
    char v49 = v79;
    int v50 = DWORD1(v79);
    uint64_t v51 = *((void *)&v79 + 1);
    uint64_t v52 = v80;
    __int16 v53 = WORD4(v80);
    long long v54 = &v27[v37[10]];
    *(_OWORD *)long long v54 = v78;
    v54[16] = v49;
    *((_DWORD *)v54 + 5) = v50;
    *((void *)v54 + 3) = v51;
    *((void *)v54 + 4) = v52;
    *((_WORD *)v54 + 20) = v53;
    LOBYTE(v76) = 7;
    sub_20A986BC0();
    sub_20AB86B10();
    __int16 v55 = v79;
    long long v56 = &v27[v37[11]];
    *(_OWORD *)long long v56 = v78;
    *((_WORD *)v56 + 8) = v55;
    char v77 = 8;
    sub_20A9C4CD4();
    sub_20AB86B80();
    long long v57 = &v27[v37[12]];
    long long v58 = v89;
    *((_OWORD *)v57 + 10) = v88;
    *((_OWORD *)v57 + 11) = v58;
    *((void *)v57 + 24) = v90;
    long long v59 = v85;
    *((_OWORD *)v57 + 6) = v84;
    *((_OWORD *)v57 + 7) = v59;
    long long v60 = v87;
    *((_OWORD *)v57 + 8) = v86;
    *((_OWORD *)v57 + 9) = v60;
    long long v61 = v81;
    *((_OWORD *)v57 + 2) = v80;
    *((_OWORD *)v57 + 3) = v61;
    long long v62 = v83;
    *((_OWORD *)v57 + 4) = v82;
    *((_OWORD *)v57 + 5) = v62;
    long long v63 = v79;
    *(_OWORD *)long long v57 = v78;
    *((_OWORD *)v57 + 1) = v63;
    char v75 = 9;
    sub_20A987060();
    sub_20AB86B10();
    uint64_t v73 = 0;
    *(_OWORD *)&v74[v91[13]] = v76;
    char v75 = 10;
    sub_20A9872B0();
    uint64_t v64 = v73;
    sub_20AB86B80();
    uint64_t v73 = v64;
    if (!v64)
    {
      *(_DWORD *)&v74[v91[14]] = v76;
      char v75 = 11;
      sub_20A9E517C();
      uint64_t v65 = v73;
      sub_20AB86B80();
      uint64_t v73 = v65;
      if (!v65)
      {
        v74[v91[15]] = v76;
        char v75 = 12;
        sub_20A98757C();
        uint64_t v66 = v73;
        sub_20AB86B10();
        uint64_t v73 = v66;
        if (!v66)
        {
          (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v71);
          uint64_t v67 = (uint64_t)v74;
          v74[v91[16]] = v76;
          sub_20AAC8774(v67, v68);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
          return sub_20AAC87D8(v67);
        }
      }
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v71);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    LODWORD(v71) = 1;
    int v19 = 1;
    int v18 = 1;
    char v15 = v91;
    uint64_t v16 = v74;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A98937C(*(void *)&v16[v15[7]], *(void *)&v16[v15[7] + 8], *(void *)&v16[v15[7] + 16]);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v71)
    {
LABEL_5:
      uint64_t result = swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        goto LABEL_6;
      }
LABEL_10:
      char v20 = &v16[v15[12]];
      long long v21 = *((_OWORD *)v20 + 11);
      long long v88 = *((_OWORD *)v20 + 10);
      long long v89 = v21;
      uint64_t v90 = *((void *)v20 + 24);
      long long v22 = *((_OWORD *)v20 + 7);
      long long v84 = *((_OWORD *)v20 + 6);
      long long v85 = v22;
      long long v23 = *((_OWORD *)v20 + 9);
      long long v86 = *((_OWORD *)v20 + 8);
      long long v87 = v23;
      long long v24 = *((_OWORD *)v20 + 3);
      long long v80 = *((_OWORD *)v20 + 2);
      long long v25 = *((_OWORD *)v20 + 4);
      long long v83 = *((_OWORD *)v20 + 5);
      long long v81 = v24;
      long long v82 = v25;
      long long v26 = *(_OWORD *)v20;
      long long v79 = *((_OWORD *)v20 + 1);
      long long v78 = v26;
      uint64_t result = sub_20A9C74B0((uint64_t)&v78);
      if ((v18 & 1) == 0) {
        return result;
      }
      return swift_bridgeObjectRelease();
    }
  }
  if (v19) {
    goto LABEL_10;
  }
LABEL_6:
  if (!v18) {
    return result;
  }
  return swift_bridgeObjectRelease();
}

void sub_20AAC8710(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAC7A38();
    unint64_t v7 = a3(a1, &type metadata for AudioEngagementBeginEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAC8774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AAC87D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioEngagementBeginEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AAC8834@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngagementBeginEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAC884C(void *a1)
{
  return AudioEngagementBeginEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AAC8864@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535A0, MEMORY[0x263F24D18], (uint64_t)qword_267656060, a1);
}

uint64_t sub_20AAC889C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535A8, MEMORY[0x263F24DD8], (uint64_t)qword_267656078, a1);
}

uint64_t sub_20AAC88D4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535B0, MEMORY[0x263F24DE8], (uint64_t)qword_267656090, a1);
}

uint64_t sub_20AAC890C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v11, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v11, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v4, v26);
  uint64_t v27 = a2 + a1[15];
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v27, v4, v28);
  uint64_t v29 = a2 + a1[16];
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  char v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104);

  return v31(v29, v11, v30);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioEngagementBeginEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v56 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v56 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    __int16 v38 = (char *)a2 + v36;
    sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    long long v42 = (char *)a2 + v40;
    sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    uint64_t v45 = (char *)a1 + v44;
    long long v46 = (char *)a2 + v44;
    sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    char v49 = (char *)a1 + v48;
    int v50 = (char *)a2 + v48;
    sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = a3[16];
    __int16 v53 = (char *)a1 + v52;
    long long v54 = (char *)a2 + v52;
    sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
  }
  return a1;
}

uint64_t destroy for AudioEngagementBeginEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = a1 + a2[16];
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8);

  return v29(v27, v28);
}

uint64_t initializeWithCopy for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  return a1;
}

uint64_t assignWithCopy for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

uint64_t initializeWithTake for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  return a1;
}

uint64_t assignWithTake for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AACB63C);
}

uint64_t sub_20AACB63C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_26:
    return v9(v10, a2, v8);
  }
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_25:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_26;
  }
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a3[16];

  return v26(v28, a2, v27);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementBeginEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AACBD34);
}

uint64_t sub_20AACBD34(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_26:
    return v11(v12, a2, a2, v10);
  }
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_25:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_26;
  }
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_25;
  }
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  uint64_t v29 = v27;
  uint64_t v30 = a1 + a4[16];

  return v28(v30, a2, a2, v29);
}

void sub_20AACC424()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A9E53CC(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    if (v1 <= 0x3F)
    {
      sub_20A9E53CC(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
      if (v2 <= 0x3F)
      {
        sub_20A9E53CC(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
        if (v3 <= 0x3F)
        {
          sub_20A9E53CC(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
          if (v4 <= 0x3F)
          {
            sub_20A9E53CC(319, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
            if (v5 <= 0x3F)
            {
              sub_20A9E53CC(319, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
              if (v6 <= 0x3F)
              {
                sub_20A9E53CC(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
                if (v7 <= 0x3F)
                {
                  sub_20A9E53CC(319, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
                  if (v8 <= 0x3F)
                  {
                    sub_20A9E53CC(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                    if (v9 <= 0x3F)
                    {
                      sub_20A9E53CC(319, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
                      if (v10 <= 0x3F)
                      {
                        sub_20A9E53CC(319, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
                        if (v11 <= 0x3F)
                        {
                          sub_20A9E53CC(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
                          if (v12 <= 0x3F) {
                            swift_initStructMetadata();
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AudioEngagementBeginEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (char *)a1 + v8;
    unint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)unint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    *((void *)v10 + 7) = *((void *)v11 + 7);
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    uint64_t v14 = (char *)a1 + v9;
    uint64_t v15 = (char *)a2 + v9;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    *((_WORD *)v14 + 16) = *((_WORD *)v15 + 16);
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)((char *)a2 + v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *uint64_t v19 = *v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      *((void *)v19 + 2) = v21;
      *((void *)v19 + 3) = *((void *)v20 + 3);
      uint64_t v22 = *((void *)v20 + 5);
      *((void *)v19 + 4) = *((void *)v20 + 4);
      *((void *)v19 + 5) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v24 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v24;
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
    }
    uint64_t v25 = a3[8];
    uint64_t v26 = a3[9];
    uint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *uint64_t v27 = *v28;
    uint64_t v29 = *((void *)v28 + 2);
    *((void *)v27 + 1) = *((void *)v28 + 1);
    *((void *)v27 + 2) = v29;
    uint64_t v30 = (char *)a1 + v26;
    uint64_t v31 = (char *)a2 + v26;
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = a3[10];
    uint64_t v33 = a3[11];
    uint64_t v34 = (char *)a1 + v32;
    uint64_t v35 = (char *)a2 + v32;
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *((_DWORD *)v34 + 5) = *((_DWORD *)v35 + 5);
    uint64_t v36 = *((void *)v35 + 4);
    *((void *)v34 + 3) = *((void *)v35 + 3);
    *((void *)v34 + 4) = v36;
    v34[40] = v35[40];
    v34[41] = v35[41];
    uint64_t v37 = (char *)a1 + v33;
    uint64_t v38 = (char *)a2 + v33;
    uint64_t v39 = *((void *)v38 + 1);
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    v37[16] = v38[16];
    v37[17] = v38[17];
    uint64_t v40 = a3[12];
    uint64_t v41 = a3[13];
    uint64_t v42 = (char *)a1 + v40;
    uint64_t v43 = (char *)a2 + v40;
    long long v44 = *((_OWORD *)v43 + 1);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v44;
    long long v45 = *((_OWORD *)v43 + 3);
    *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
    *((_OWORD *)v42 + 3) = v45;
    *((_OWORD *)v42 + 4) = *((_OWORD *)v43 + 4);
    *((void *)v42 + 10) = *((void *)v43 + 10);
    *(_OWORD *)(v42 + 88) = *(_OWORD *)(v43 + 88);
    *(_OWORD *)(v42 + 104) = *(_OWORD *)(v43 + 104);
    *((_DWORD *)v42 + 30) = *((_DWORD *)v43 + 30);
    *((_OWORD *)v42 + 8) = *((_OWORD *)v43 + 8);
    v42[144] = v43[144];
    *(void *)(v42 + 148) = *(void *)(v43 + 148);
    long long v46 = *((_OWORD *)v43 + 11);
    *((_OWORD *)v42 + 10) = *((_OWORD *)v43 + 10);
    *((_OWORD *)v42 + 11) = v46;
    *((void *)v42 + 24) = *((void *)v43 + 24);
    uint64_t v47 = (void *)((char *)a1 + v41);
    uint64_t v48 = (void *)((char *)a2 + v41);
    uint64_t v49 = v48[1];
    *uint64_t v47 = *v48;
    v47[1] = v49;
    uint64_t v50 = a3[15];
    *(_DWORD *)((char *)a1 + a3[14]) = *(_DWORD *)((char *)a2 + a3[14]);
    *((unsigned char *)a1 + v50) = *((unsigned char *)a2 + v50);
    *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a2 + v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
    *(void *)(v18 + 8) = *(void *)(v19 + 8);
    *(void *)(v18 + 16) = v20;
    *(void *)(v18 + 24) = *(void *)(v19 + 24);
    uint64_t v21 = *(void *)(v19 + 40);
    *(void *)(v18 + 32) = *(void *)(v19 + 32);
    *(void *)(v18 + 40) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  uint64_t v27 = *(void *)(v26 + 16);
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = v27;
  uint64_t v28 = a1 + v24;
  uint64_t v29 = a2 + v24;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(unsigned char *)(v28 + 4) = *(unsigned char *)(v29 + 4);
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  *(_DWORD *)(v32 + 20) = *(_DWORD *)(v33 + 20);
  uint64_t v34 = *(void *)(v33 + 32);
  *(void *)(v32 + 24) = *(void *)(v33 + 24);
  *(void *)(v32 + 32) = v34;
  *(unsigned char *)(v32 + 40) = *(unsigned char *)(v33 + 40);
  *(unsigned char *)(v32 + 41) = *(unsigned char *)(v33 + 41);
  uint64_t v35 = a1 + v31;
  uint64_t v36 = a2 + v31;
  uint64_t v37 = *(void *)(v36 + 8);
  *(void *)uint64_t v35 = *(void *)v36;
  *(void *)(v35 + 8) = v37;
  *(unsigned char *)(v35 + 16) = *(unsigned char *)(v36 + 16);
  *(unsigned char *)(v35 + 17) = *(unsigned char *)(v36 + 17);
  uint64_t v38 = a3[12];
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  long long v42 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  long long v43 = *(_OWORD *)(v41 + 48);
  *(_OWORD *)(v40 + 32) = *(_OWORD *)(v41 + 32);
  *(_OWORD *)(v40 + 48) = v43;
  *(_OWORD *)(v40 + 64) = *(_OWORD *)(v41 + 64);
  *(void *)(v40 + 80) = *(void *)(v41 + 80);
  *(_OWORD *)(v40 + 88) = *(_OWORD *)(v41 + 88);
  *(_OWORD *)(v40 + 104) = *(_OWORD *)(v41 + 104);
  *(_DWORD *)(v40 + 120) = *(_DWORD *)(v41 + 120);
  *(_OWORD *)(v40 + 128) = *(_OWORD *)(v41 + 128);
  *(unsigned char *)(v40 + 144) = *(unsigned char *)(v41 + 144);
  *(void *)(v40 + 148) = *(void *)(v41 + 148);
  long long v44 = *(_OWORD *)(v41 + 176);
  *(_OWORD *)(v40 + 160) = *(_OWORD *)(v41 + 160);
  *(_OWORD *)(v40 + 176) = v44;
  *(void *)(v40 + 192) = *(void *)(v41 + 192);
  long long v45 = (void *)(a1 + v39);
  long long v46 = (void *)(a2 + v39);
  uint64_t v47 = v46[1];
  *long long v45 = *v46;
  v45[1] = v47;
  uint64_t v48 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v48) = *(unsigned char *)(a2 + v48);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v10 = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 40) = v10;
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(unsigned char *)(v12 + 33) = *(unsigned char *)(v13 + 33);
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (long long *)(a2 + v14);
  uint64_t v17 = *(void *)(a1 + v14 + 16);
  uint64_t v18 = *(void *)(a2 + v14 + 16);
  if (v17)
  {
    if (v18)
    {
      *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
      *(void *)(v15 + 8) = *((void *)v16 + 1);
      *(void *)(v15 + 16) = *((void *)v16 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
      *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
      *(void *)(v15 + 32) = *((void *)v16 + 4);
      *(void *)(v15 + 40) = *((void *)v16 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v15);
      long long v20 = v16[1];
      long long v19 = v16[2];
      *(_OWORD *)uint64_t v15 = *v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_OWORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
    *(void *)(v15 + 8) = *((void *)v16 + 1);
    *(void *)(v15 + 16) = *((void *)v16 + 2);
    *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
    *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
    *(void *)(v15 + 32) = *((void *)v16 + 4);
    *(void *)(v15 + 40) = *((void *)v16 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *v16;
    long long v22 = v16[2];
    *(_OWORD *)(v15 + 16) = v16[1];
    *(_OWORD *)(v15 + 32) = v22;
    *(_OWORD *)uint64_t v15 = v21;
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)(a2 + v29);
  *(void *)(v30 + 8) = *(void *)(a2 + v29 + 8);
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(a2 + v29 + 16);
  *(_DWORD *)(v30 + 20) = *(_DWORD *)(a2 + v29 + 20);
  *(void *)(v30 + 24) = *(void *)(a2 + v29 + 24);
  *(void *)(v30 + 32) = *(void *)(a2 + v29 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 40) = *(unsigned char *)(v31 + 40);
  *(unsigned char *)(v30 + 41) = *(unsigned char *)(v31 + 41);
  uint64_t v32 = a3[11];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(void *)uint64_t v33 = *(void *)(a2 + v32);
  *(void *)(v33 + 8) = *(void *)(a2 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v33 + 16) = *(unsigned char *)(v34 + 16);
  *(unsigned char *)(v33 + 17) = *(unsigned char *)(v34 + 17);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(void *)uint64_t v36 = *(void *)(a2 + v35);
  *(void *)(v36 + 8) = *(void *)(a2 + v35 + 8);
  *(void *)(v36 + 16) = *(void *)(a2 + v35 + 16);
  *(void *)(v36 + 24) = *(void *)(a2 + v35 + 24);
  *(void *)(v36 + 32) = *(void *)(a2 + v35 + 32);
  *(void *)(v36 + 40) = *(void *)(a2 + v35 + 40);
  *(void *)(v36 + 48) = *(void *)(a2 + v35 + 48);
  *(void *)(v36 + 56) = *(void *)(a2 + v35 + 56);
  *(void *)(v36 + 64) = *(void *)(a2 + v35 + 64);
  *(void *)(v36 + 72) = *(void *)(a2 + v35 + 72);
  *(void *)(v36 + 80) = *(void *)(a2 + v35 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 88) = *(void *)(v37 + 88);
  *(void *)(v36 + 96) = *(void *)(v37 + 96);
  *(void *)(v36 + 104) = *(void *)(v37 + 104);
  *(void *)(v36 + 112) = *(void *)(v37 + 112);
  *(_DWORD *)(v36 + 120) = *(_DWORD *)(v37 + 120);
  *(void *)(v36 + 128) = *(void *)(v37 + 128);
  *(void *)(v36 + 136) = *(void *)(v37 + 136);
  *(unsigned char *)(v36 + 144) = *(unsigned char *)(v37 + 144);
  *(_DWORD *)(v36 + 148) = *(_DWORD *)(v37 + 148);
  *(_DWORD *)(v36 + 152) = *(_DWORD *)(v37 + 152);
  *(void *)(v36 + 160) = *(void *)(v37 + 160);
  *(void *)(v36 + 168) = *(void *)(v37 + 168);
  *(void *)(v36 + 176) = *(void *)(v37 + 176);
  *(void *)(v36 + 184) = *(void *)(v37 + 184);
  *(void *)(v36 + 192) = *(void *)(v37 + 192);
  uint64_t v38 = a3[13];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  return a1;
}

uint64_t initializeWithTake for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (_OWORD *)(a1 + v16);
  long long v19 = (long long *)(a2 + v16);
  long long v20 = v19[2];
  long long v21 = *v19;
  v18[1] = v19[1];
  void v18[2] = v20;
  *uint64_t v18 = v21;
  uint64_t v22 = a1 + v17;
  uint64_t v23 = (long long *)(a2 + v17);
  long long v24 = *v23;
  *(void *)(v22 + 16) = *((void *)v23 + 2);
  *(_OWORD *)uint64_t v22 = v24;
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = (_OWORD *)(a1 + v26);
  uint64_t v30 = (_OWORD *)(a2 + v26);
  long long v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  *(_OWORD *)((char *)v29 + 26) = *(_OWORD *)((char *)v30 + 26);
  uint64_t v32 = a3[11];
  uint64_t v33 = a3[12];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_WORD *)(v34 + 16) = *(_WORD *)(v35 + 16);
  uint64_t v36 = a1 + v33;
  uint64_t v37 = a2 + v33;
  long long v38 = *(_OWORD *)(v37 + 48);
  *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
  *(_OWORD *)(v36 + 48) = v38;
  long long v39 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v39;
  long long v40 = *(_OWORD *)(v37 + 112);
  *(_OWORD *)(v36 + 96) = *(_OWORD *)(v37 + 96);
  *(_OWORD *)(v36 + 112) = v40;
  long long v41 = *(_OWORD *)(v37 + 80);
  *(_OWORD *)(v36 + 64) = *(_OWORD *)(v37 + 64);
  *(_OWORD *)(v36 + 80) = v41;
  *(void *)(v36 + 192) = *(void *)(v37 + 192);
  long long v42 = *(_OWORD *)(v37 + 176);
  *(_OWORD *)(v36 + 160) = *(_OWORD *)(v37 + 160);
  *(_OWORD *)(v36 + 176) = v42;
  long long v43 = *(_OWORD *)(v37 + 144);
  *(_OWORD *)(v36 + 128) = *(_OWORD *)(v37 + 128);
  *(_OWORD *)(v36 + 144) = v43;
  uint64_t v44 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_DWORD *)(a1 + v44) = *(_DWORD *)(a2 + v44);
  uint64_t v45 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v45) = *(unsigned char *)(a2 + v45);
  return a1;
}

uint64_t assignWithTake for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(unsigned char *)(v13 + 33) = *(unsigned char *)(v14 + 33);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  if (!*(void *)(a1 + v17 + 16)) {
    goto LABEL_5;
  }
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20)
  {
    sub_20A98D5B8(v18);
LABEL_5:
    long long v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(void *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  uint64_t v21 = *(void *)(v19 + 40);
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(v18 + 40) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  uint64_t v27 = *(void *)(v25 + 8);
  uint64_t v26 = *(void *)(v25 + 16);
  *(void *)(v24 + 8) = v27;
  *(void *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[9];
  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)(a2 + v29);
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(a2 + v29 + 16);
  *(_DWORD *)(v32 + 20) = *(_DWORD *)(a2 + v29 + 20);
  uint64_t v34 = *(void *)(a2 + v29 + 24);
  uint64_t v35 = *(void *)(a2 + v29 + 32);
  *(void *)(v32 + 24) = v34;
  *(void *)(v32 + 32) = v35;
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 40) = *(_WORD *)(v33 + 40);
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(a2 + v36 + 8);
  *(void *)uint64_t v37 = *(void *)(a2 + v36);
  *(void *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  *(_WORD *)(v37 + 16) = *(_WORD *)(v38 + 16);
  uint64_t v40 = a3[12];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  long long v43 = *(_OWORD *)(a2 + v40 + 16);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)(a2 + v40);
  *(_OWORD *)(v41 + 16) = v43;
  long long v44 = *(_OWORD *)(a2 + v40 + 48);
  *(_OWORD *)(v41 + 32) = *(_OWORD *)(a2 + v40 + 32);
  *(_OWORD *)(v41 + 48) = v44;
  *(_OWORD *)(v41 + 64) = *(_OWORD *)(a2 + v40 + 64);
  *(void *)(v41 + 80) = *(void *)(a2 + v40 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v41 + 88) = *(_OWORD *)(v42 + 88);
  *(_OWORD *)(v41 + 104) = *(_OWORD *)(v42 + 104);
  *(_DWORD *)(v41 + 120) = *(_DWORD *)(v42 + 120);
  *(_OWORD *)(v41 + 128) = *(_OWORD *)(v42 + 128);
  *(unsigned char *)(v41 + 144) = *(unsigned char *)(v42 + 144);
  *(void *)(v41 + 148) = *(void *)(v42 + 148);
  long long v45 = *(_OWORD *)(v42 + 176);
  *(_OWORD *)(v41 + 160) = *(_OWORD *)(v42 + 160);
  *(_OWORD *)(v41 + 176) = v45;
  *(void *)(v41 + 192) = *(void *)(v42 + 192);
  uint64_t v46 = a3[13];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (uint64_t *)(a2 + v46);
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  *uint64_t v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[15];
  *(_DWORD *)(a1 + a3[14]) = *(_DWORD *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v51) = *(unsigned char *)(a2 + v51);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AACD9C8);
}

uint64_t sub_20AACD9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AudioEngagementBeginEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AACDAA0);
}

uint64_t sub_20AACDAA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AACDB60()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AudioEngagementBeginEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AudioEngagementBeginEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AACDDBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementBeginEvent.Model.CodingKeys()
{
  return &type metadata for AudioEngagementBeginEvent.Model.CodingKeys;
}

unint64_t sub_20AACDDF8()
{
  unint64_t result = qword_2676560E0;
  if (!qword_2676560E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676560E0);
  }
  return result;
}

unint64_t sub_20AACDE50()
{
  unint64_t result = qword_2676560E8;
  if (!qword_2676560E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676560E8);
  }
  return result;
}

unint64_t sub_20AACDEA8()
{
  unint64_t result = qword_2676560F0;
  if (!qword_2676560F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676560F0);
  }
  return result;
}

uint64_t sub_20AACDEFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA72E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA77E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xEC00000061746144 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000020ABA7990 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t static ViewEndData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void ViewEndData.endReason.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ViewEndData.endReason.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*ViewEndData.endReason.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ViewEndData __swiftcall ViewEndData.init(endReason:)(StocksAnalytics::ViewEndData endReason)
{
  *unint64_t v1 = *(unsigned char *)endReason.endReason;
  return endReason;
}

uint64_t sub_20AACE4E8()
{
  return 0x6F73616552646E65;
}

uint64_t sub_20AACE504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F73616552646E65 && a2 == 0xE90000000000006ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AACE5A8(uint64_t a1)
{
  unint64_t v2 = sub_20AACE77C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AACE5E4(uint64_t a1)
{
  unint64_t v2 = sub_20AACE77C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ViewEndData.encode(to:)(void *a1)
{
  sub_20AACE9BC(0, &qword_26AC51838, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AACE77C();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AACE7D0();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AACE77C()
{
  unint64_t result = qword_26AC4EC68;
  if (!qword_26AC4EC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC68);
  }
  return result;
}

unint64_t sub_20AACE7D0()
{
  unint64_t result = qword_26AC515C0;
  if (!qword_26AC515C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515C0);
  }
  return result;
}

uint64_t ViewEndData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AACE9BC(0, &qword_26AC51770, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AACE77C();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AACEA20();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AACE9BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AACE77C();
    unint64_t v7 = a3(a1, &type metadata for ViewEndData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AACEA20()
{
  unint64_t result = qword_26AC515D0;
  if (!qword_26AC515D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515D0);
  }
  return result;
}

uint64_t sub_20AACEA7C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ViewEndData.init(from:)(a1, a2);
}

uint64_t sub_20AACEA94(void *a1)
{
  return ViewEndData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for ViewEndData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AACEB78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewEndData()
{
  return &type metadata for ViewEndData;
}

unsigned char *storeEnumTagSinglePayload for ViewEndData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AACEC4CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewEndData.CodingKeys()
{
  return &type metadata for ViewEndData.CodingKeys;
}

unint64_t sub_20AACEC88()
{
  unint64_t result = qword_2676560F8;
  if (!qword_2676560F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676560F8);
  }
  return result;
}

unint64_t sub_20AACECE0()
{
  unint64_t result = qword_26AC4EC78;
  if (!qword_26AC4EC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC78);
  }
  return result;
}

unint64_t sub_20AACED38()
{
  unint64_t result = qword_26AC4EC70;
  if (!qword_26AC4EC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC70);
  }
  return result;
}

uint64_t static TipData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void TipData.tipType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *TipData.tipType.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*TipData.tipType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::TipData __swiftcall TipData.init(tipType:)(StocksAnalytics::TipData tipType)
{
  *unint64_t v1 = *(unsigned char *)tipType.tipType;
  return tipType;
}

uint64_t sub_20AACEDD8()
{
  return 0x65707954706974;
}

uint64_t sub_20AACEDF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65707954706974 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AACEE88(uint64_t a1)
{
  unint64_t v2 = sub_20AACF05C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AACEEC4(uint64_t a1)
{
  unint64_t v2 = sub_20AACF05C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TipData.encode(to:)(void *a1)
{
  sub_20AACF29C(0, &qword_26AC51940, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AACF05C();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AACF0B0();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AACF05C()
{
  unint64_t result = qword_26AC51480;
  if (!qword_26AC51480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51480);
  }
  return result;
}

unint64_t sub_20AACF0B0()
{
  unint64_t result = qword_26AC514A8;
  if (!qword_26AC514A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514A8);
  }
  return result;
}

uint64_t TipData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AACF29C(0, &qword_267656100, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AACF05C();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AACF300();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AACF29C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AACF05C();
    unint64_t v7 = a3(a1, &type metadata for TipData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AACF300()
{
  unint64_t result = qword_267656108;
  if (!qword_267656108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656108);
  }
  return result;
}

uint64_t sub_20AACF35C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TipData.init(from:)(a1, a2);
}

uint64_t sub_20AACF374(void *a1)
{
  return TipData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for TipData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AACF458);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TipData()
{
  return &type metadata for TipData;
}

unsigned char *storeEnumTagSinglePayload for TipData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AACF52CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TipData.CodingKeys()
{
  return &type metadata for TipData.CodingKeys;
}

unint64_t sub_20AACF568()
{
  unint64_t result = qword_267656110;
  if (!qword_267656110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656110);
  }
  return result;
}

unint64_t sub_20AACF5C0()
{
  unint64_t result = qword_26AC51490;
  if (!qword_26AC51490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51490);
  }
  return result;
}

unint64_t sub_20AACF618()
{
  unint64_t result = qword_26AC51488;
  if (!qword_26AC51488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51488);
  }
  return result;
}

uint64_t sub_20AACF66C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC50C08, MEMORY[0x263F24D10]);
}

uint64_t static NewsHeadlineExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50C20, MEMORY[0x263F24D18], (uint64_t)qword_26AC50C08, a1);
}

uint64_t static NewsHeadlineExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AACF6D4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC50C28, MEMORY[0x263F24DC8]);
}

uint64_t static NewsHeadlineExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(qword_26AC50C40, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50C28, a1);
}

uint64_t sub_20AACF734()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656118);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656118);
  return sub_20AB85D30();
}

uint64_t static NewsHeadlineExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC520D8, MEMORY[0x263F24DE8], (uint64_t)qword_267656118, a1);
}

uint64_t NewsHeadlineExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NewsHeadlineExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NewsHeadlineExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AAD155C(type metadata accessor for NewsHeadlineExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for NewsHeadlineExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_26AC4E1C0);
}

uint64_t NewsHeadlineExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 24);
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 24);
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 28);
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 28);
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.feedPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 32);
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 32);
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.inGroupPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 36);
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 36);
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 40);
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 40);
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 44);
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 44);
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.articleScienceData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 48);
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 48);
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.userArticleContextData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 52);
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 52);
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.badgeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 56);
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20AAD0754()
{
  unint64_t result = qword_26AC51590;
  if (!qword_26AC51590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51590);
  }
  return result;
}

unint64_t sub_20AAD07A8()
{
  unint64_t result = qword_26AC51588;
  if (!qword_26AC51588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51588);
  }
  return result;
}

uint64_t NewsHeadlineExposureEvent.badgeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 56);
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.badgeData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 60);
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 60);
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.hostArticleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 64);
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsHeadlineExposureEvent.hostArticleViewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 64);
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.hostArticleViewData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 68);
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AAD0CF4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t NewsHeadlineExposureEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent(0) + 68);
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsHeadlineExposureEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t NewsHeadlineExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NewsHeadlineExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = *MEMORY[0x263F24D30];
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v12, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v12, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v12, v25);
  uint64_t v26 = a1 + v4[15];
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v26, v2, v27);
  uint64_t v28 = a1 + v4[16];
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v12, v29);
  uint64_t v30 = a1 + v4[17];
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104);

  return v32(v30, v12, v31);
}

uint64_t NewsHeadlineExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NewsHeadlineExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AAD155C(type metadata accessor for NewsHeadlineExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AAD155C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for NewsHeadlineExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52A68);
}

uint64_t NewsHeadlineExposureEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NewsHeadlineExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t NewsHeadlineExposureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 32));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NewsHeadlineExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 36);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NewsHeadlineExposureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 40));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t NewsHeadlineExposureEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 44);
  long long v4 = *(_OWORD *)(v3 + 144);
  long long v5 = *(_OWORD *)(v3 + 176);
  long long v31 = *(_OWORD *)(v3 + 160);
  long long v32 = v5;
  long long v6 = *(_OWORD *)(v3 + 80);
  long long v7 = *(_OWORD *)(v3 + 112);
  long long v27 = *(_OWORD *)(v3 + 96);
  long long v8 = v27;
  long long v28 = v7;
  long long v9 = *(_OWORD *)(v3 + 112);
  long long v10 = *(_OWORD *)(v3 + 144);
  long long v29 = *(_OWORD *)(v3 + 128);
  long long v11 = v29;
  long long v30 = v10;
  long long v12 = *(_OWORD *)(v3 + 16);
  long long v13 = *(_OWORD *)(v3 + 48);
  long long v23 = *(_OWORD *)(v3 + 32);
  long long v14 = v23;
  long long v24 = v13;
  long long v15 = *(_OWORD *)(v3 + 48);
  long long v16 = *(_OWORD *)(v3 + 80);
  long long v25 = *(_OWORD *)(v3 + 64);
  long long v17 = v25;
  long long v26 = v16;
  long long v18 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  long long v19 = v22[0];
  v22[1] = v18;
  long long v20 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 160) = v31;
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v15;
  *(_OWORD *)(a1 + 64) = v17;
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v33 = *(void *)(v3 + 192);
  *(void *)(a1 + 192) = *(void *)(v3 + 192);
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v12;
  return sub_20A9C5E44((uint64_t)v22);
}

uint64_t NewsHeadlineExposureEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t NewsHeadlineExposureEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 52));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NewsHeadlineExposureEvent.Model.badgeData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t NewsHeadlineExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 60));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NewsHeadlineExposureEvent.Model.hostArticleViewData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NewsHeadlineExposureEvent.Model(0) + 64));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NewsHeadlineExposureEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 68));
  return result;
}

__n128 NewsHeadlineExposureEvent.Model.init(eventData:timedData:newsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:articleScienceData:userArticleContextData:issueData:badgeData:channelData:hostArticleViewData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, int *a4@<X3>, int *a5@<X4>, char *a6@<X5>, long long *a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, __int16 *a10, uint64_t *a11, __int16 *a12, __n128 *a13, uint64_t *a14, char *a15)
{
  long long v40 = *a3;
  uint64_t v17 = *((void *)a3 + 2);
  uint64_t v18 = *((void *)a3 + 3);
  uint64_t v19 = *((void *)a3 + 5);
  char v20 = *((unsigned char *)a3 + 48);
  uint64_t v21 = *((void *)a3 + 7);
  char v22 = *((unsigned char *)a3 + 64);
  char v38 = *((unsigned char *)a3 + 65);
  char v39 = *((unsigned char *)a3 + 32);
  char v23 = *((unsigned char *)a3 + 66);
  char v37 = *((unsigned char *)a3 + 67);
  int v43 = *a5;
  int v41 = *a4;
  char v42 = *((unsigned char *)a5 + 4);
  char v47 = *a6;
  uint64_t v45 = *((void *)a6 + 2);
  uint64_t v46 = *((void *)a6 + 1);
  long long v50 = a7[1];
  long long v51 = *a7;
  uint64_t v48 = *((void *)a7 + 5);
  uint64_t v49 = *((void *)a7 + 4);
  long long v74 = a8[10];
  long long v75 = a8[11];
  uint64_t v76 = *((void *)a8 + 24);
  long long v70 = a8[6];
  long long v71 = a8[7];
  long long v72 = a8[8];
  long long v73 = a8[9];
  long long v66 = a8[2];
  long long v67 = a8[3];
  long long v68 = a8[4];
  long long v69 = a8[5];
  long long v64 = *a8;
  long long v65 = a8[1];
  __int16 v52 = *a10;
  uint64_t v53 = a11[1];
  uint64_t v54 = *a11;
  __int16 v55 = *a12;
  __n128 v63 = *a13;
  unint64_t v59 = a13[1].n128_u64[0];
  unint64_t v58 = a13[1].n128_u64[1];
  unsigned __int8 v56 = a13[2].n128_u8[1];
  unsigned __int8 v57 = a13[2].n128_u8[0];
  uint64_t v60 = a14[1];
  uint64_t v61 = *a14;
  char v62 = *a15;
  uint64_t v24 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(a9, a1, v24);
  long long v25 = (int *)type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  uint64_t v26 = a9 + v25[5];
  uint64_t v27 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v26, a2, v27);
  uint64_t v28 = a9 + v25[6];
  *(void *)(v28 + 16) = v17;
  *(void *)(v28 + 24) = v18;
  *(_OWORD *)uint64_t v28 = v40;
  *(unsigned char *)(v28 + 32) = v39;
  *(void *)(v28 + 40) = v19;
  *(unsigned char *)(v28 + 48) = v20;
  *(void *)(v28 + 56) = v21;
  *(unsigned char *)(v28 + 64) = v22;
  *(unsigned char *)(v28 + 65) = v38;
  *(unsigned char *)(v28 + 66) = v23;
  *(unsigned char *)(v28 + 67) = v37;
  *(_DWORD *)(a9 + v25[7]) = v41;
  uint64_t v29 = a9 + v25[8];
  *(_DWORD *)uint64_t v29 = v43;
  *(unsigned char *)(v29 + 4) = v42;
  uint64_t v30 = a9 + v25[9];
  *(unsigned char *)uint64_t v30 = v47;
  *(void *)(v30 + 8) = v46;
  *(void *)(v30 + 16) = v45;
  uint64_t v31 = a9 + v25[10];
  *(_OWORD *)uint64_t v31 = v51;
  *(_OWORD *)(v31 + 16) = v50;
  *(void *)(v31 + 32) = v49;
  *(void *)(v31 + 40) = v48;
  uint64_t v32 = a9 + v25[11];
  *(void *)(v32 + 192) = v76;
  *(_OWORD *)(v32 + 160) = v74;
  *(_OWORD *)(v32 + 176) = v75;
  *(_OWORD *)(v32 + 96) = v70;
  *(_OWORD *)(v32 + 112) = v71;
  *(_OWORD *)(v32 + 128) = v72;
  *(_OWORD *)(v32 + 144) = v73;
  *(_OWORD *)(v32 + 32) = v66;
  *(_OWORD *)(v32 + 48) = v67;
  *(_OWORD *)(v32 + 64) = v68;
  *(_OWORD *)(v32 + 80) = v69;
  *(_OWORD *)uint64_t v32 = v64;
  *(_OWORD *)(v32 + 16) = v65;
  *(_WORD *)(a9 + v25[12]) = v52;
  uint64_t v33 = (void *)(a9 + v25[13]);
  *uint64_t v33 = v54;
  v33[1] = v53;
  *(_WORD *)(a9 + v25[14]) = v55;
  uint64_t v34 = (__n128 *)(a9 + v25[15]);
  v34[1].n128_u64[0] = v59;
  v34[1].n128_u64[1] = v58;
  v34[2].n128_u8[0] = v57;
  v34[2].n128_u8[1] = v56;
  __n128 result = v63;
  *uint64_t v34 = v63;
  uint64_t v36 = (void *)(a9 + v25[16]);
  *uint64_t v36 = v61;
  v36[1] = v60;
  *(unsigned char *)(a9 + v25[17]) = v62;
  return result;
}

uint64_t sub_20AAD1D44(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 3:
      uint64_t result = 0xD000000000000010;
      break;
    case 4:
    case 12:
    case 13:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0x6174614464656566;
      break;
    case 6:
      uint64_t result = 0x74614470756F7267;
      break;
    case 7:
      uint64_t result = 0xD000000000000012;
      break;
    case 8:
      uint64_t result = 0xD000000000000016;
      break;
    case 9:
      unsigned int v3 = 1970500457;
      goto LABEL_12;
    case 10:
      unsigned int v3 = 1734631778;
LABEL_12:
      uint64_t result = v3 | 0x7461446500000000;
      break;
    case 11:
      uint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAD1EE4()
{
  return sub_20AAD1D44(*v0);
}

uint64_t sub_20AAD1EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAD8D0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAD1F14(uint64_t a1)
{
  unint64_t v2 = sub_20AAD25A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAD1F50(uint64_t a1)
{
  unint64_t v2 = sub_20AAD25A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NewsHeadlineExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AAD3198(0, &qword_267656130, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v9 = (char *)&v43 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAD25A4();
  sub_20AB86DC0();
  LOBYTE(v45) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    long long v10 = (int *)type metadata accessor for NewsHeadlineExposureEvent.Model(0);
    LOBYTE(v45) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    long long v11 = (long long *)(v3 + v10[6]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v45 = v12;
    *(void *)&long long v46 = v13;
    *((void *)&v46 + 1) = v14;
    LOBYTE(v47) = v15;
    *((void *)&v47 + 1) = v16;
    LOBYTE(v48) = v17;
    *((void *)&v48 + 1) = v18;
    LOBYTE(v49) = v19;
    BYTE1(v49) = v20;
    BYTE2(v49) = v21;
    BYTE3(v49) = (_BYTE)v11;
    LOBYTE(v59) = 2;
    sub_20A97A1AC();
    sub_20AB86C50();
    LODWORD(v45) = *(_DWORD *)(v3 + v10[7]);
    LOBYTE(v59) = 3;
    sub_20A9EE598();
    sub_20AB86C50();
    char v22 = (int *)(v3 + v10[8]);
    int v23 = *v22;
    LOBYTE(v22) = *((unsigned char *)v22 + 4);
    LODWORD(v45) = v23;
    BYTE4(v45) = (_BYTE)v22;
    LOBYTE(v59) = 4;
    sub_20A9EE7E8();
    sub_20AB86BE0();
    uint64_t v24 = (char *)(v3 + v10[9]);
    char v25 = *v24;
    uint64_t v27 = *((void *)v24 + 1);
    uint64_t v26 = *((void *)v24 + 2);
    LOBYTE(v45) = v25;
    *((void *)&v45 + 1) = v27;
    *(void *)&long long v46 = v26;
    LOBYTE(v59) = 5;
    sub_20A986774();
    sub_20AB86C50();
    uint64_t v28 = (long long *)(v3 + v10[10]);
    long long v29 = v28[1];
    long long v59 = *v28;
    long long v60 = v29;
    long long v61 = v28[2];
    char v58 = 6;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v30 = (long long *)(v3 + v10[11]);
    long long v31 = v30[11];
    long long v55 = v30[10];
    long long v56 = v31;
    uint64_t v57 = *((void *)v30 + 24);
    long long v32 = v30[7];
    long long v51 = v30[6];
    long long v52 = v32;
    long long v33 = v30[9];
    long long v53 = v30[8];
    long long v54 = v33;
    long long v34 = v30[3];
    long long v47 = v30[2];
    long long v48 = v34;
    long long v35 = v30[5];
    long long v49 = v30[4];
    long long v50 = v35;
    long long v36 = v30[1];
    long long v45 = *v30;
    long long v46 = v36;
    char v44 = 7;
    sub_20A9C4D28();
    sub_20AB86C50();
    LOWORD(v45) = *(_WORD *)(v3 + v10[12]);
    char v44 = 8;
    sub_20A9C4F78();
    sub_20AB86C50();
    long long v45 = *(_OWORD *)(v3 + v10[13]);
    char v44 = 9;
    sub_20A9870B4();
    sub_20AB86BE0();
    LOWORD(v45) = *(_WORD *)(v3 + v10[14]);
    char v44 = 10;
    sub_20AAD07A8();
    sub_20AB86BE0();
    char v37 = (long long *)(v3 + v10[15]);
    long long v38 = *v37;
    uint64_t v39 = *((void *)v37 + 2);
    uint64_t v40 = *((void *)v37 + 3);
    char v41 = *((unsigned char *)v37 + 32);
    LOBYTE(v37) = *((unsigned char *)v37 + 33);
    long long v45 = v38;
    *(void *)&long long v46 = v39;
    *((void *)&v46 + 1) = v40;
    LOBYTE(v47) = v41;
    BYTE1(v47) = (_BYTE)v37;
    char v44 = 11;
    sub_20A9862D4();
    sub_20AB86C50();
    long long v45 = *(_OWORD *)(v3 + v10[16]);
    char v44 = 12;
    sub_20A9B0C0C();
    sub_20AB86BE0();
    LOBYTE(v45) = *(unsigned char *)(v3 + v10[17]);
    char v44 = 13;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AAD25A4()
{
  unint64_t result = qword_26AC52A00;
  if (!qword_26AC52A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52A00);
  }
  return result;
}

uint64_t NewsHeadlineExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v81 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAD3198(0, &qword_26AC52A08, MEMORY[0x263F8E040]);
  uint64_t v76 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v74 - v11;
  long long v85 = (int *)type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  MEMORY[0x270FA5388](v85);
  long long v84 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  long long v82 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20AAD25A4();
  long long v78 = v12;
  uint64_t v15 = v83;
  sub_20AB86DA0();
  uint64_t v77 = v6;
  if (v15)
  {
    uint64_t v83 = v15;
    int v16 = 0;
    unsigned int v17 = 0;
  }
  else
  {
    uint64_t v74 = v10;
    LOBYTE(v91) = 0;
    sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
    sub_20AB86B80();
    long long v35 = v84;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v84, v8, v6);
    LOBYTE(v91) = 1;
    sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
    long long v36 = v5;
    uint64_t v37 = v80;
    sub_20AB86B80();
    long long v38 = v85;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v35[v85[5]], v36, v37);
    LOBYTE(v86) = 2;
    sub_20A97A154();
    sub_20AB86B80();
    long long v39 = v92;
    char v40 = v93;
    uint64_t v41 = *((void *)&v93 + 1);
    char v42 = v94;
    uint64_t v43 = *((void *)&v94 + 1);
    char v44 = v95;
    char v45 = BYTE1(v95);
    char v46 = BYTE2(v95);
    char v47 = BYTE3(v95);
    long long v48 = &v35[v38[6]];
    *(_OWORD *)long long v48 = v91;
    *((_OWORD *)v48 + 1) = v39;
    v48[32] = v40;
    *((void *)v48 + 5) = v41;
    v48[48] = v42;
    *((void *)v48 + 7) = v43;
    v48[64] = v44;
    v48[65] = v45;
    v48[66] = v46;
    v48[67] = v47;
    LOBYTE(v86) = 3;
    sub_20A9EE544();
    sub_20AB86B80();
    *(_DWORD *)&v35[v38[7]] = v91;
    LOBYTE(v86) = 4;
    sub_20A9EE794();
    sub_20AB86B10();
    char v49 = BYTE4(v91);
    long long v50 = &v35[v38[8]];
    *(_DWORD *)long long v50 = v91;
    v50[4] = v49;
    LOBYTE(v86) = 5;
    sub_20A986720();
    sub_20AB86B80();
    uint64_t v51 = *((void *)&v91 + 1);
    uint64_t v52 = v92;
    long long v53 = &v35[v38[9]];
    *long long v53 = v91;
    *((void *)v53 + 1) = v51;
    *((void *)v53 + 2) = v52;
    LOBYTE(v86) = 6;
    sub_20A9864D0();
    sub_20AB86B10();
    long long v54 = &v35[v38[10]];
    long long v55 = v92;
    *(_OWORD *)long long v54 = v91;
    *((_OWORD *)v54 + 1) = v55;
    *((_OWORD *)v54 + 2) = v93;
    char v105 = 7;
    sub_20A9C4CD4();
    sub_20AB86B80();
    long long v56 = &v35[v85[11]];
    long long v57 = v102;
    *((_OWORD *)v56 + 10) = v101;
    *((_OWORD *)v56 + 11) = v57;
    *((void *)v56 + 24) = v103;
    long long v58 = v98;
    *((_OWORD *)v56 + 6) = v97;
    *((_OWORD *)v56 + 7) = v58;
    long long v59 = v100;
    *((_OWORD *)v56 + 8) = v99;
    *((_OWORD *)v56 + 9) = v59;
    long long v60 = v94;
    *((_OWORD *)v56 + 2) = v93;
    *((_OWORD *)v56 + 3) = v60;
    long long v61 = v96;
    *((_OWORD *)v56 + 4) = v95;
    *((_OWORD *)v56 + 5) = v61;
    long long v62 = v92;
    *(_OWORD *)long long v56 = v91;
    *((_OWORD *)v56 + 1) = v62;
    char v104 = 8;
    sub_20A9C4F24();
    sub_20AB86B80();
    uint64_t v83 = 0;
    *(_WORD *)&v84[v85[12]] = v86;
    char v104 = 9;
    sub_20A987060();
    uint64_t v63 = v83;
    sub_20AB86B10();
    uint64_t v83 = v63;
    if (!v63)
    {
      *(_OWORD *)&v84[v85[13]] = v86;
      char v104 = 10;
      sub_20AAD0754();
      uint64_t v64 = v83;
      sub_20AB86B10();
      uint64_t v83 = v64;
      if (v64
        || (*(_WORD *)&v84[v85[14]] = v86, v104 = 11, sub_20A986280(), uint64_t v65 = v83, sub_20AB86B80(), (v83 = v65) != 0))
      {
        (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v76);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
        int v23 = 0;
        int v22 = 0;
        LOBYTE(v27) = 1;
        int v19 = 1;
        int v20 = 1;
        int v21 = 1;
        int v16 = 1;
        int v24 = 1;
      }
      else
      {
        uint64_t v66 = v87;
        uint64_t v67 = v88;
        char v68 = v89;
        char v69 = v90;
        long long v70 = &v84[v85[15]];
        *(_OWORD *)long long v70 = v86;
        *((void *)v70 + 2) = v66;
        *((void *)v70 + 3) = v67;
        v70[32] = v68;
        v70[33] = v69;
        char v104 = 12;
        sub_20A9B0BB8();
        uint64_t v71 = v83;
        sub_20AB86B10();
        uint64_t v83 = v71;
        if (v71)
        {
          (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v76);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
          int v22 = 0;
          LOBYTE(v27) = 1;
          int v19 = 1;
          int v20 = 1;
          int v21 = 1;
          int v16 = 1;
          int v24 = 1;
          int v23 = 1;
        }
        else
        {
          *(_OWORD *)&v84[v85[16]] = v86;
          char v104 = 13;
          sub_20A98757C();
          uint64_t v72 = v83;
          sub_20AB86B10();
          uint64_t v83 = v72;
          if (!v72)
          {
            (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v76);
            uint64_t v73 = (uint64_t)v84;
            v84[v85[17]] = v86;
            sub_20AAD31FC(v73, v75);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
            return sub_20AAD3260(v73);
          }
          (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v76);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
          LOBYTE(v27) = 1;
          int v19 = 1;
          int v20 = 1;
          int v21 = 1;
          int v16 = 1;
          int v24 = 1;
          int v23 = 1;
          int v22 = 1;
        }
      }
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v76);
    unsigned int v17 = 231;
    int v16 = 1;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
  int v19 = (v17 >> 2) & 1;
  int v20 = (v17 >> 5) & 1;
  int v21 = (v17 >> 6) & 1;
  if ((v17 & 1) == 0)
  {
    int v22 = 0;
    int v23 = 0;
    int v24 = 0;
    if ((v17 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  int v24 = 0;
  int v23 = 0;
  int v22 = 0;
  int v27 = (v17 >> 1) & 1;
LABEL_15:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v84, v77);
  if ((v27 & 1) == 0)
  {
LABEL_6:
    char v25 = v84;
    if (v19) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v25 = v84;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(&v84[v85[5]], v80);
  if (v19)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  if (!v20)
  {
LABEL_8:
    uint64_t v26 = v85;
    if (v21) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v26 = v85;
  uint64_t result = swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_9:
    uint64_t result = sub_20A98937C(*(void *)&v25[v26[10]], *(void *)&v25[v26[10] + 8], *(void *)&v25[v26[10] + 16]);
    if ((v16 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  if (!v16)
  {
LABEL_10:
    if (v24) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v28 = &v25[v26[11]];
  long long v29 = *((_OWORD *)v28 + 11);
  long long v101 = *((_OWORD *)v28 + 10);
  long long v102 = v29;
  uint64_t v103 = *((void *)v28 + 24);
  long long v30 = *((_OWORD *)v28 + 7);
  long long v97 = *((_OWORD *)v28 + 6);
  long long v98 = v30;
  long long v31 = *((_OWORD *)v28 + 9);
  long long v99 = *((_OWORD *)v28 + 8);
  long long v100 = v31;
  long long v32 = *((_OWORD *)v28 + 3);
  long long v93 = *((_OWORD *)v28 + 2);
  long long v94 = v32;
  long long v33 = *((_OWORD *)v28 + 5);
  long long v95 = *((_OWORD *)v28 + 4);
  long long v96 = v33;
  long long v34 = *((_OWORD *)v28 + 1);
  long long v91 = *(_OWORD *)v28;
  long long v92 = v34;
  uint64_t result = sub_20A9C74B0((uint64_t)&v91);
  if (v24)
  {
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_21:
  if (v23) {
    goto LABEL_22;
  }
LABEL_12:
  if (!v22) {
    return result;
  }
  return swift_bridgeObjectRelease();
}

void sub_20AAD3198(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAD25A4();
    unint64_t v7 = a3(a1, &type metadata for NewsHeadlineExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAD31FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AAD3260(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewsHeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AAD32BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsHeadlineExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAD32D4(void *a1)
{
  return NewsHeadlineExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AAD32EC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50C20, MEMORY[0x263F24D18], (uint64_t)qword_26AC50C08, a1);
}

uint64_t sub_20AAD3324@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(qword_26AC50C40, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50C28, a1);
}

uint64_t sub_20AAD335C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC520D8, MEMORY[0x263F24DE8], (uint64_t)qword_267656118, a1);
}

uint64_t sub_20AAD3394@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = *MEMORY[0x263F24D30];
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v13, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v13, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v13, v26);
  uint64_t v27 = a2 + a1[15];
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v27, v4, v28);
  uint64_t v29 = a2 + a1[16];
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v29, v13, v30);
  uint64_t v31 = a2 + a1[17];
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  long long v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);

  return v33(v31, v13, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsHeadlineExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    long long v34 = (char *)a2 + v32;
    sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    long long v38 = (char *)a2 + v36;
    sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    char v45 = (char *)a1 + v44;
    char v46 = (char *)a2 + v44;
    sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    char v49 = (char *)a1 + v48;
    long long v50 = (char *)a2 + v48;
    sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = a3[16];
    long long v53 = (char *)a1 + v52;
    long long v54 = (char *)a2 + v52;
    sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = a3[17];
    long long v57 = (char *)a1 + v56;
    long long v58 = (char *)a2 + v56;
    sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for NewsHeadlineExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = a1 + a2[16];
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = a1 + a2[17];
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8);

  return v31(v29, v30);
}

uint64_t initializeWithCopy for NewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for NewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for NewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for NewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAD62B0);
}

uint64_t sub_20AAD62B0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_28:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_27:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_28;
  }
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a2)
  {
    uint64_t v8 = v24;
    uint64_t v12 = *(void *)(v24 - 8);
    uint64_t v13 = a3[16];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a3[17];

  return v27(v29, a2, v28);
}

uint64_t storeEnumTagSinglePayload for NewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAD69F4);
}

uint64_t sub_20AAD69F4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_28:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_27:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_28;
  }
  sub_20AAD0CF4(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a3)
  {
    uint64_t v10 = v26;
    uint64_t v14 = *(void *)(v26 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_27;
  }
  sub_20AAD0CF4(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  uint64_t v30 = v28;
  uint64_t v31 = a1 + a4[17];

  return v29(v31, a2, a2, v30);
}

void sub_20AAD7130()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AAD0CF4(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
      if (v2 <= 0x3F)
      {
        sub_20AAD0CF4(319, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
        if (v3 <= 0x3F)
        {
          sub_20AAD0CF4(319, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
          if (v4 <= 0x3F)
          {
            sub_20AAD0CF4(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
            if (v5 <= 0x3F)
            {
              sub_20AAD0CF4(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
              if (v6 <= 0x3F)
              {
                sub_20AAD0CF4(319, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
                if (v7 <= 0x3F)
                {
                  sub_20AAD0CF4(319, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
                  if (v8 <= 0x3F)
                  {
                    sub_20AAD0CF4(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                    if (v9 <= 0x3F)
                    {
                      sub_20AAD0CF4(319, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
                      if (v10 <= 0x3F)
                      {
                        sub_20AAD0CF4(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
                        if (v11 <= 0x3F)
                        {
                          sub_20AAD0CF4(319, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
                          if (v12 <= 0x3F)
                          {
                            sub_20AAD0CF4(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
                            if (v13 <= 0x3F) {
                              swift_initStructMetadata();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for NewsHeadlineExposureEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    v14[32] = v15[32];
    *((void *)v14 + 5) = *((void *)v15 + 5);
    v14[48] = v15[48];
    *((void *)v14 + 7) = *((void *)v15 + 7);
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    *(_DWORD *)((char *)a1 + v13) = *(_DWORD *)((char *)a2 + v13);
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    uint64_t v20 = (char *)a1 + v18;
    uint64_t v21 = (char *)a2 + v18;
    *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
    uint64_t v22 = (char *)a1 + v19;
    uint64_t v23 = (char *)a2 + v19;
    *uint64_t v22 = *v23;
    uint64_t v24 = *((void *)v23 + 2);
    *((void *)v22 + 1) = *((void *)v23 + 1);
    *((void *)v22 + 2) = v24;
    uint64_t v25 = a3[10];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = *(void *)((char *)a2 + v25 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28)
    {
      *uint64_t v26 = *v27;
      *((void *)v26 + 1) = *((void *)v27 + 1);
      *((void *)v26 + 2) = v28;
      *((void *)v26 + 3) = *((void *)v27 + 3);
      uint64_t v29 = *((void *)v27 + 5);
      *((void *)v26 + 4) = *((void *)v27 + 4);
      *((void *)v26 + 5) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v31 = *((_OWORD *)v27 + 1);
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      *((_OWORD *)v26 + 1) = v31;
      *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    }
    uint64_t v32 = a3[11];
    uint64_t v33 = a3[12];
    uint64_t v34 = (char *)a1 + v32;
    uint64_t v35 = (char *)a2 + v32;
    long long v36 = *((_OWORD *)v35 + 1);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v36;
    long long v37 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v37;
    *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
    *((void *)v34 + 10) = *((void *)v35 + 10);
    *(_OWORD *)(v34 + 88) = *(_OWORD *)(v35 + 88);
    *(_OWORD *)(v34 + 104) = *(_OWORD *)(v35 + 104);
    *((_DWORD *)v34 + 30) = *((_DWORD *)v35 + 30);
    *((_OWORD *)v34 + 8) = *((_OWORD *)v35 + 8);
    v34[144] = v35[144];
    *(void *)(v34 + 148) = *(void *)(v35 + 148);
    long long v38 = *((_OWORD *)v35 + 11);
    *((_OWORD *)v34 + 10) = *((_OWORD *)v35 + 10);
    *((_OWORD *)v34 + 11) = v38;
    __int16 v39 = *(_WORD *)((char *)a2 + v33);
    *((void *)v34 + 24) = *((void *)v35 + 24);
    *(_WORD *)((char *)a1 + v33) = v39;
    uint64_t v40 = a3[13];
    uint64_t v41 = a3[14];
    uint64_t v42 = (void *)((char *)a1 + v40);
    uint64_t v43 = (void *)((char *)a2 + v40);
    uint64_t v44 = *v43;
    uint64_t v45 = v43[1];
    LOWORD(v43) = *(_WORD *)((char *)a2 + v41);
    *uint64_t v42 = v44;
    v42[1] = v45;
    *(_WORD *)((char *)a1 + v41) = (_WORD)v43;
    uint64_t v46 = a3[15];
    uint64_t v47 = a3[16];
    uint64_t v48 = (char *)a1 + v46;
    uint64_t v49 = (char *)a2 + v46;
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    v48[32] = v49[32];
    uint64_t v51 = *((void *)v49 + 3);
    *((void *)v48 + 2) = *((void *)v49 + 2);
    *((void *)v48 + 3) = v51;
    v48[33] = v49[33];
    uint64_t v52 = (void *)((char *)a1 + v47);
    uint64_t v53 = (void *)((char *)a2 + v47);
    uint64_t v54 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v54;
    *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 40) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}