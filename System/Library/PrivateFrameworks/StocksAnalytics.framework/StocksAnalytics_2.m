uint64_t initializeWithCopy for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  long long v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  long long v34;
  long long v35;
  long long v36;
  __int16 v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;

  v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = a1 + v11;
  v14 = a2 + v11;
  v15 = *(void *)(v14 + 8);
  *(void *)v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(unsigned char *)(v13 + 48) = *(unsigned char *)(v14 + 48);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  v17 = a3[8];
  v18 = a3[9];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  v21 = a1 + v18;
  v22 = a2 + v18;
  *(unsigned char *)v21 = *(unsigned char *)v22;
  v23 = *(void *)(v22 + 16);
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(void *)(v21 + 16) = v23;
  v24 = a3[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(void *)(a2 + v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    *(unsigned char *)v25 = *(unsigned char *)v26;
    *(void *)(v25 + 8) = *(void *)(v26 + 8);
    *(void *)(v25 + 16) = v27;
    *(void *)(v25 + 24) = *(void *)(v26 + 24);
    v28 = *(void *)(v26 + 40);
    *(void *)(v25 + 32) = *(void *)(v26 + 32);
    *(void *)(v25 + 40) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v29 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v29;
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  }
  v30 = a3[11];
  v31 = a3[12];
  v32 = a1 + v30;
  v33 = a2 + v30;
  v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  v35 = *(_OWORD *)(v33 + 48);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(_OWORD *)(v32 + 48) = v35;
  *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
  *(void *)(v32 + 80) = *(void *)(v33 + 80);
  *(_OWORD *)(v32 + 88) = *(_OWORD *)(v33 + 88);
  *(_OWORD *)(v32 + 104) = *(_OWORD *)(v33 + 104);
  *(_DWORD *)(v32 + 120) = *(_DWORD *)(v33 + 120);
  *(_OWORD *)(v32 + 128) = *(_OWORD *)(v33 + 128);
  *(unsigned char *)(v32 + 144) = *(unsigned char *)(v33 + 144);
  *(void *)(v32 + 148) = *(void *)(v33 + 148);
  v36 = *(_OWORD *)(v33 + 176);
  *(_OWORD *)(v32 + 160) = *(_OWORD *)(v33 + 160);
  *(_OWORD *)(v32 + 176) = v36;
  v37 = *(_WORD *)(a2 + v31);
  *(void *)(v32 + 192) = *(void *)(v33 + 192);
  *(_WORD *)(a1 + v31) = v37;
  v38 = a3[13];
  v39 = a3[14];
  v40 = (void *)(a1 + v38);
  v41 = (uint64_t *)(a2 + v38);
  v42 = *v41;
  v43 = v41[1];
  LOWORD(v41) = *(_WORD *)(a2 + v39);
  *v40 = v42;
  v40[1] = v43;
  *(_WORD *)(a1 + v39) = (_WORD)v41;
  v44 = a3[15];
  v45 = a3[16];
  v46 = a1 + v44;
  v47 = a2 + v44;
  v48 = *(void *)(v47 + 8);
  *(void *)v46 = *(void *)v47;
  *(void *)(v46 + 8) = v48;
  *(unsigned char *)(v46 + 32) = *(unsigned char *)(v47 + 32);
  v49 = *(void *)(v47 + 24);
  *(void *)(v46 + 16) = *(void *)(v47 + 16);
  *(void *)(v46 + 24) = v49;
  *(unsigned char *)(v46 + 33) = *(unsigned char *)(v47 + 33);
  v50 = (void *)(a1 + v45);
  v51 = (void *)(a2 + v45);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v14 = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 40) = v14;
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  v17 = (int *)(a2 + v15);
  int v18 = *v17;
  *(unsigned char *)(v16 + 4) = *((unsigned char *)v17 + 4);
  *(_DWORD *)uint64_t v16 = v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v22;
  v24 = (long long *)(a2 + v22);
  uint64_t v25 = *(void *)(a1 + v22 + 16);
  uint64_t v26 = *(void *)(a2 + v22 + 16);
  if (v25)
  {
    if (v26)
    {
      *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
      *(void *)(v23 + 8) = *((void *)v24 + 1);
      *(void *)(v23 + 16) = *((void *)v24 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v23 + 24) = *((_DWORD *)v24 + 6);
      *(_DWORD *)(v23 + 28) = *((_DWORD *)v24 + 7);
      *(void *)(v23 + 32) = *((void *)v24 + 4);
      *(void *)(v23 + 40) = *((void *)v24 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v23);
      long long v28 = v24[1];
      long long v27 = v24[2];
      *(_OWORD *)uint64_t v23 = *v24;
      *(_OWORD *)(v23 + 16) = v28;
      *(_OWORD *)(v23 + 32) = v27;
    }
  }
  else if (v26)
  {
    *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
    *(void *)(v23 + 8) = *((void *)v24 + 1);
    *(void *)(v23 + 16) = *((void *)v24 + 2);
    *(_DWORD *)(v23 + 24) = *((_DWORD *)v24 + 6);
    *(_DWORD *)(v23 + 28) = *((_DWORD *)v24 + 7);
    *(void *)(v23 + 32) = *((void *)v24 + 4);
    *(void *)(v23 + 40) = *((void *)v24 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *v24;
    long long v30 = v24[2];
    *(_OWORD *)(v23 + 16) = v24[1];
    *(_OWORD *)(v23 + 32) = v30;
    *(_OWORD *)uint64_t v23 = v29;
  }
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)(a2 + v31);
  *(void *)(v32 + 8) = *(void *)(a2 + v31 + 8);
  *(void *)(v32 + 16) = *(void *)(a2 + v31 + 16);
  *(void *)(v32 + 24) = *(void *)(a2 + v31 + 24);
  *(void *)(v32 + 32) = *(void *)(a2 + v31 + 32);
  *(void *)(v32 + 40) = *(void *)(a2 + v31 + 40);
  *(void *)(v32 + 48) = *(void *)(a2 + v31 + 48);
  *(void *)(v32 + 56) = *(void *)(a2 + v31 + 56);
  *(void *)(v32 + 64) = *(void *)(a2 + v31 + 64);
  *(void *)(v32 + 72) = *(void *)(a2 + v31 + 72);
  *(void *)(v32 + 80) = *(void *)(a2 + v31 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v32 + 88) = *(void *)(v33 + 88);
  *(void *)(v32 + 96) = *(void *)(v33 + 96);
  *(void *)(v32 + 104) = *(void *)(v33 + 104);
  *(void *)(v32 + 112) = *(void *)(v33 + 112);
  *(_DWORD *)(v32 + 120) = *(_DWORD *)(v33 + 120);
  *(void *)(v32 + 128) = *(void *)(v33 + 128);
  *(void *)(v32 + 136) = *(void *)(v33 + 136);
  *(unsigned char *)(v32 + 144) = *(unsigned char *)(v33 + 144);
  *(_DWORD *)(v32 + 148) = *(_DWORD *)(v33 + 148);
  *(_DWORD *)(v32 + 152) = *(_DWORD *)(v33 + 152);
  *(void *)(v32 + 160) = *(void *)(v33 + 160);
  *(void *)(v32 + 168) = *(void *)(v33 + 168);
  *(void *)(v32 + 176) = *(void *)(v33 + 176);
  *(void *)(v32 + 184) = *(void *)(v33 + 184);
  *(void *)(v32 + 192) = *(void *)(v33 + 192);
  uint64_t v34 = a3[12];
  v35 = (unsigned char *)(a1 + v34);
  v36 = (unsigned char *)(a2 + v34);
  unsigned char *v35 = *v36;
  v35[1] = v36[1];
  uint64_t v37 = a3[13];
  v38 = (void *)(a1 + v37);
  v39 = (void *)(a2 + v37);
  void *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  uint64_t v40 = a3[15];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(void *)uint64_t v41 = *(void *)(a2 + v40);
  *(void *)(v41 + 8) = *(void *)(a2 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v41 + 16) = *(void *)(v42 + 16);
  *(void *)(v41 + 24) = *(void *)(v42 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v41 + 32) = *(unsigned char *)(v42 + 32);
  *(unsigned char *)(v41 + 33) = *(unsigned char *)(v42 + 33);
  uint64_t v43 = a3[16];
  v44 = (void *)(a1 + v43);
  v45 = (void *)(a2 + v43);
  void *v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t initializeWithTake for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  long long v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  uint64_t v23 = a3[10];
  uint64_t v24 = a3[11];
  uint64_t v25 = (_OWORD *)(a1 + v23);
  uint64_t v26 = (_OWORD *)(a2 + v23);
  long long v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  uint64_t v28 = a1 + v24;
  uint64_t v29 = a2 + v24;
  long long v30 = *(_OWORD *)(v29 + 48);
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  *(_OWORD *)(v28 + 48) = v30;
  long long v31 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v31;
  long long v32 = *(_OWORD *)(v29 + 112);
  *(_OWORD *)(v28 + 96) = *(_OWORD *)(v29 + 96);
  *(_OWORD *)(v28 + 112) = v32;
  long long v33 = *(_OWORD *)(v29 + 80);
  *(_OWORD *)(v28 + 64) = *(_OWORD *)(v29 + 64);
  *(_OWORD *)(v28 + 80) = v33;
  *(void *)(v28 + 192) = *(void *)(v29 + 192);
  long long v34 = *(_OWORD *)(v29 + 176);
  *(_OWORD *)(v28 + 160) = *(_OWORD *)(v29 + 160);
  *(_OWORD *)(v28 + 176) = v34;
  long long v35 = *(_OWORD *)(v29 + 144);
  *(_OWORD *)(v28 + 128) = *(_OWORD *)(v29 + 128);
  *(_OWORD *)(v28 + 144) = v35;
  uint64_t v36 = a3[13];
  *(_WORD *)(a1 + a3[12]) = *(_WORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v36) = *(_OWORD *)(a2 + v36);
  uint64_t v37 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  long long v40 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v40;
  *(_WORD *)(v38 + 32) = *(_WORD *)(v39 + 32);
  uint64_t v41 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v41) = *(unsigned char *)(a2 + v41);
  return a1;
}

uint64_t assignWithTake for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v16 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  uint64_t v23 = *(void *)(v21 + 8);
  uint64_t v22 = *(void *)(v21 + 16);
  *(void *)(v20 + 8) = v23;
  *(void *)(v20 + 16) = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  if (!*(void *)(a1 + v24 + 16)) {
    goto LABEL_5;
  }
  uint64_t v27 = *(void *)(v26 + 16);
  if (!v27)
  {
    sub_20A98D5B8(v25);
LABEL_5:
    long long v29 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v29;
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = v27;
  swift_bridgeObjectRelease();
  *(void *)(v25 + 24) = *(void *)(v26 + 24);
  uint64_t v28 = *(void *)(v26 + 40);
  *(void *)(v25 + 32) = *(void *)(v26 + 32);
  *(void *)(v25 + 40) = v28;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v30 = a3[11];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  long long v33 = *(_OWORD *)(a2 + v30 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)(a2 + v30);
  *(_OWORD *)(v31 + 16) = v33;
  long long v34 = *(_OWORD *)(a2 + v30 + 48);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(a2 + v30 + 32);
  *(_OWORD *)(v31 + 48) = v34;
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(a2 + v30 + 64);
  *(void *)(v31 + 80) = *(void *)(a2 + v30 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v31 + 88) = *(_OWORD *)(v32 + 88);
  *(_OWORD *)(v31 + 104) = *(_OWORD *)(v32 + 104);
  *(_DWORD *)(v31 + 120) = *(_DWORD *)(v32 + 120);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v32 + 128);
  *(unsigned char *)(v31 + 144) = *(unsigned char *)(v32 + 144);
  *(void *)(v31 + 148) = *(void *)(v32 + 148);
  long long v35 = *(_OWORD *)(v32 + 176);
  *(_OWORD *)(v31 + 160) = *(_OWORD *)(v32 + 160);
  *(_OWORD *)(v31 + 176) = v35;
  *(void *)(v31 + 192) = *(void *)(v32 + 192);
  uint64_t v36 = a3[12];
  uint64_t v37 = a3[13];
  uint64_t v38 = (unsigned char *)(a1 + v36);
  uint64_t v39 = (unsigned char *)(a2 + v36);
  unsigned char *v38 = *v39;
  v38[1] = v39[1];
  long long v40 = (void *)(a1 + v37);
  uint64_t v41 = (uint64_t *)(a2 + v37);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *long long v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = *(void *)(a2 + v44);
  uint64_t v48 = *(void *)(a2 + v44 + 8);
  *(void *)uint64_t v45 = v47;
  *(void *)(v45 + 8) = v48;
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void *)(v46 + 24);
  *(void *)(v45 + 16) = *(void *)(v46 + 16);
  *(void *)(v45 + 24) = v49;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v45 + 32) = *(unsigned char *)(v46 + 32);
  *(unsigned char *)(v45 + 33) = *(unsigned char *)(v46 + 33);
  uint64_t v50 = a3[16];
  v51 = (void *)(a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  void *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAD8784);
}

uint64_t sub_20AAD8784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAD88B0);
}

uint64_t sub_20AAD88B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AAD89C4()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewsHeadlineExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAD8BCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsHeadlineExposureEvent.Model.CodingKeys()
{
  return &type metadata for NewsHeadlineExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AAD8C08()
{
  unint64_t result = qword_267656138;
  if (!qword_267656138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656138);
  }
  return result;
}

unint64_t sub_20AAD8C60()
{
  unint64_t result = qword_26AC52AD0;
  if (!qword_26AC52AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52AD0);
  }
  return result;
}

unint64_t sub_20AAD8CB8()
{
  unint64_t result = qword_26AC52AD8;
  if (!qword_26AC52AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52AD8);
  }
  return result;
}

uint64_t sub_20AAD8D0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA79D0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA79F0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA77E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA7800 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446567646162 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7470 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

void *ExternalAnalyticsEventProcessor.__allocating_init(appConfigurationManager:tracker:uploader:panelIdProvider:urlProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_allocObject();
  uint64_t v10 = sub_20AADBF1C(a1, a2, a3, a4, a5);
  swift_release();
  return v10;
}

unint64_t sub_20AAD9344(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20AADCFB0();
  BOOL v2 = (void *)sub_20AB86A90();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_20AADBE98(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20AADB38C);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20AAD9470(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20AADC6CC();
  BOOL v2 = (void *)sub_20AB86A90();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_20AADBE98(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20AADB38C);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *ExternalAnalyticsEventProcessor.init(appConfigurationManager:tracker:uploader:panelIdProvider:urlProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_20AADBF1C(a1, a2, a3, a4, a5);
  swift_release();
  return v5;
}

void sub_20AAD95D8()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_sharedManagerForAllUsers);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_20A9CE038(0, (unint64_t *)&qword_26AC51730);
    unsigned int v4 = (void *)sub_20AB86850();
    v6[4] = sub_20AADCEB4;
    v6[5] = v1;
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 1107296256;
    v6[2] = sub_20AAD9C68;
    v6[3] = &block_descriptor_1;
    uint64_t v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
    objc_msgSend(v3, sel_loadConfigurationsWithCompletionQueue_handler_, v4, v5);
    _Block_release(v5);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20AAD9700(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    sub_20A9CE038(0, (unint64_t *)&qword_26AC51748);
    id v5 = a2;
    uint64_t v6 = (void *)sub_20AB868C0();
    sub_20AB86810();
    sub_20AADC730();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_20AB88020;
    sub_20AADCF04(0, (unint64_t *)&qword_26AC519E0);
    sub_20AB86A30();
    *(void *)(v7 + 56) = MEMORY[0x263F8D310];
    *(void *)(v7 + 64) = sub_20AADC798();
    *(void *)(v7 + 32) = 0;
    *(void *)(v7 + 40) = 0xE000000000000000;
    sub_20AB86440();

    swift_bridgeObjectRelease();
    *(void *)(a3 + 192) = MEMORY[0x263F8EE78];
    return swift_bridgeObjectRelease();
  }
  if (!a1 || (unint64_t v9 = sub_20AAD9B4C(a1)) == 0)
  {
    sub_20A9CE038(0, (unint64_t *)&qword_26AC51748);
    uint64_t v24 = (void *)sub_20AB868C0();
    sub_20AB86820();
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_20AB86440();

    *(void *)(a3 + 192) = v25;
    return swift_bridgeObjectRelease();
  }
  unint64_t v10 = v9;
  uint64_t v31 = a3;
  if (!(v9 >> 62))
  {
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_8;
    }
LABEL_25:
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
LABEL_26:
    swift_bridgeObjectRelease_n();
    sub_20A9CE038(0, (unint64_t *)&qword_26AC51748);
    uint64_t v26 = (void *)sub_20AB868C0();
    sub_20AADC730();
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_20AB88020;
    sub_20A9B8470();
    sub_20AADCEBC(&qword_26AC516E0, (void (*)(uint64_t))sub_20A9B8470);
    uint64_t v28 = sub_20AB86690();
    uint64_t v30 = v29;
    *(void *)(v27 + 56) = MEMORY[0x263F8D310];
    *(void *)(v27 + 64) = sub_20AADC798();
    *(void *)(v27 + 32) = v28;
    *(void *)(v27 + 40) = v30;
    sub_20AB86820();
    sub_20AB86440();

    swift_bridgeObjectRelease();
    *(void *)(v31 + 192) = v13;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_20AB86A60();
  uint64_t v11 = result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_8:
  if (v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    do
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v14 = (id)MEMORY[0x21052A430](v12, v10);
      }
      else {
        id v14 = *(id *)(v10 + 8 * v12 + 32);
      }
      uint64_t v15 = v14;
      id v16 = objc_msgSend(v14, sel_name, v31);
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = sub_20AB866E0();
        uint64_t v20 = v19;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_20AA0C174(0, v13[2] + 1, 1, v13);
        }
        unint64_t v22 = v13[2];
        unint64_t v21 = v13[3];
        if (v22 >= v21 >> 1) {
          uint64_t v13 = sub_20AA0C174((void *)(v21 > 1), v22 + 1, 1, v13);
        }
        v13[2] = v22 + 1;
        uint64_t v23 = &v13[2 * v22];
        v23[4] = v18;
        v23[5] = v20;
      }
      else
      {
      }
      ++v12;
    }
    while (v11 != v12);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_20AAD9B4C(uint64_t a1)
{
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(a1 + 16);
  sub_20AB86A00();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_20AADCF54(i, (uint64_t)v5);
    sub_20A9CE038(0, &qword_26AC51728);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_20AB869E0();
    sub_20AB86A10();
    sub_20AB86A20();
    sub_20AB869F0();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_20AAD9C68(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_20AB86770();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t ExternalAnalyticsEventProcessor.process<A>(processEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = sub_20AB855F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20AB85480();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_20AADBFD4(a1);
  if (result)
  {
    uint64_t v29 = a2;
    uint64_t v30 = a1;
    uint64_t v17 = v13;
    uint64_t v18 = v4[6];
    uint64_t v32 = v4[7];
    __swift_project_boxed_opaque_existential_1(v4 + 3, v18);
    sub_20AB85570();
    uint64_t v19 = sub_20AB853E0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v12);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      uint64_t v21 = v9 + 16;
      uint64_t v31 = v22;
      uint64_t v32 = a3;
      uint64_t v23 = *(unsigned __int8 *)(v21 + 64);
      v28[1] = v19;
      uint64_t v24 = v19 + ((v23 + 32) & ~v23);
      uint64_t v26 = v29;
      uint64_t v25 = v30;
      uint64_t v27 = *(void *)(v21 + 56);
      do
      {
        v31(v11, v24, v8);
        sub_20AAD9F50(v25, (uint64_t)v11, v26, v32);
        (*(void (**)(char *, uint64_t))(v21 - 8))(v11, v8);
        v24 += v27;
        --v20;
      }
      while (v20);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20AAD9F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v65 = a4;
  uint64_t v66 = a1;
  uint64_t v64 = a3;
  uint64_t v7 = sub_20AB85990();
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v60 + 64);
  MEMORY[0x270FA5388](v7);
  v58 = (char *)&v50 - v9;
  uint64_t v10 = sub_20AB85140();
  uint64_t v61 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  v59 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ExternalURLData();
  uint64_t v62 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v63 = (uint64_t)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AADD048(0, &qword_26AC4F1E8, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, MEMORY[0x263F8D8F0]);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v50 - v17;
  uint64_t result = MEMORY[0x270FA5388](v16);
  uint64_t v23 = v5[24];
  if (v23)
  {
    uint64_t v24 = v5[26];
    if (v24)
    {
      uint64_t v53 = v22;
      uint64_t v54 = v21;
      uint64_t v57 = (uint64_t)&v50 - v20;
      uint64_t v25 = v5[25];
      uint64_t v55 = v10;
      uint64_t v56 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v26 = sub_20AADAAD4(a2, v23);
      swift_bridgeObjectRelease();
      if (v26)
      {
        uint64_t v51 = v8;
        uint64_t v52 = v7;
        uint64_t v27 = v5[21];
        uint64_t v28 = v5[22];
        __swift_project_boxed_opaque_existential_1(v5 + 18, v27);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8))(v66, a2, v56, v24, v64, v65, v27, v28);
        uint64_t v34 = v66;
        swift_bridgeObjectRelease();
        uint64_t v35 = v57;
        sub_20AADC7EC(v57, (uint64_t)v18);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v18, 1, v12) == 1)
        {
          sub_20AADC880(v35);
          uint64_t v36 = (uint64_t)v18;
        }
        else
        {
          uint64_t v37 = v63;
          sub_20AADC90C((uint64_t)v18, v63);
          uint64_t v38 = v5[12];
          uint64_t v56 = v5[11];
          uint64_t v62 = v38;
          uint64_t v50 = __swift_project_boxed_opaque_existential_1(v5 + 8, v56);
          uint64_t v39 = v61;
          long long v40 = v59;
          (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v59, v37, v55);
          uint64_t v41 = v60;
          uint64_t v42 = v58;
          uint64_t v43 = v52;
          (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v58, v34, v52);
          uint64_t v44 = v54;
          sub_20AADC7EC(v35, v54);
          unint64_t v45 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
          unint64_t v46 = (v51 + *(unsigned __int8 *)(v53 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
          uint64_t v47 = v35;
          uint64_t v48 = swift_allocObject();
          uint64_t v49 = v65;
          *(void *)(v48 + 16) = v64;
          *(void *)(v48 + 24) = v49;
          (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v48 + v45, v42, v43);
          sub_20AADCB70(v44, v48 + v46);
          sub_20AB857B0();
          swift_release();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v55);
          sub_20AADCD24(v63);
          uint64_t v36 = v47;
        }
        return sub_20AADC880(v36);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t result = sub_20AB85580();
        if (v29)
        {
          uint64_t v30 = result;
          uint64_t v31 = v29;
          sub_20A9CE038(0, (unint64_t *)&qword_26AC51748);
          uint64_t v32 = (void *)sub_20AB868C0();
          sub_20AADC730();
          uint64_t v33 = swift_allocObject();
          *(_OWORD *)(v33 + 16) = xmmword_20AB88020;
          *(void *)(v33 + 56) = MEMORY[0x263F8D310];
          *(void *)(v33 + 64) = sub_20AADC798();
          *(void *)(v33 + 32) = v30;
          *(void *)(v33 + 40) = v31;
          sub_20AB86820();
          sub_20AB86440();

          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t ExternalAnalyticsEventProcessor.didStartSession(_:)()
{
  uint64_t v1 = v0;
  uint64_t v57 = sub_20AB855F0();
  uint64_t v2 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  unsigned int v4 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85480();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[25] = sub_20AB85F00();
  v0[26] = v9;
  swift_bridgeObjectRelease();
  uint64_t v51 = v0 + 23;
  swift_beginAccess();
  v0[23] = MEMORY[0x263F8EE80];
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
  sub_20AB85570();
  uint64_t v10 = sub_20AB853E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
  uint64_t v13 = v2 + 16;
  uint64_t v12 = v14;
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
  v48[1] = v10;
  uint64_t v49 = v0;
  unint64_t v16 = v10 + v15;
  uint64_t v17 = (void (**)(char *, uint64_t))(v13 - 8);
  uint64_t v18 = *(void *)(v13 + 56);
  uint64_t v19 = v57;
  uint64_t v55 = v13;
  uint64_t v56 = v0 + 13;
  uint64_t v53 = (void (**)(char *, uint64_t))(v13 - 8);
  uint64_t v54 = v14;
  uint64_t v52 = v18;
  v14(v4, v16, v57);
  while (1)
  {
    if ((sub_20AB855C0() & 1) == 0)
    {
      (*v17)(v4, v19);
      goto LABEL_4;
    }
    uint64_t v20 = v1[17];
    __swift_project_boxed_opaque_existential_1(v56, v1[16]);
    sub_20AB85590();
    uint64_t v21 = (*(uint64_t (**)(void))(v20 + 8))();
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    if (v23) {
      break;
    }
    uint64_t v17 = v53;
    uint64_t v19 = v57;
    (*v53)(v4, v57);
LABEL_24:
    uint64_t v12 = v54;
    uint64_t v18 = v52;
LABEL_4:
    v16 += v18;
    if (!--v11) {
      return swift_bridgeObjectRelease();
    }
    v12(v4, v16, v19);
  }
  uint64_t v24 = sub_20AB85580();
  if (!v25)
  {
    uint64_t v17 = v53;
    uint64_t v19 = v57;
    (*v53)(v4, v57);
    swift_bridgeObjectRelease();
LABEL_23:
    uint64_t v1 = v49;
    goto LABEL_24;
  }
  uint64_t v26 = v24;
  uint64_t v27 = v25;
  uint64_t v50 = v21;
  uint64_t v28 = v51;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v58 = (void *)*v28;
  uint64_t v30 = v58;
  *uint64_t v28 = 0x8000000000000000;
  uint64_t v31 = v26;
  unint64_t v33 = sub_20AADBE98(v26, v27, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20AADB38C);
  uint64_t v34 = v30[2];
  BOOL v35 = (v32 & 1) == 0;
  uint64_t v36 = v34 + v35;
  if (!__OFADD__(v34, v35))
  {
    char v37 = v32;
    if (v30[3] < v36)
    {
      sub_20AADB824(v36, isUniquelyReferenced_nonNull_native);
      uint64_t v38 = sub_20AADBE98(v31, v27, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20AADB38C);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_28;
      }
      unint64_t v33 = v38;
      long long v40 = v58;
      if ((v37 & 1) == 0) {
        goto LABEL_20;
      }
LABEL_18:
      uint64_t v41 = (uint64_t *)(v40[7] + 16 * v33);
      swift_bridgeObjectRelease();
      *uint64_t v41 = v50;
      v41[1] = v23;
LABEL_22:
      void *v51 = v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v17 = v53;
      uint64_t v19 = v57;
      (*v53)(v4, v57);
      goto LABEL_23;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      long long v40 = v58;
      if (v32) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_20AADBCE0();
      long long v40 = v58;
      if (v37) {
        goto LABEL_18;
      }
    }
LABEL_20:
    v40[(v33 >> 6) + 8] |= 1 << v33;
    uint64_t v42 = (uint64_t *)(v40[6] + 16 * v33);
    *uint64_t v42 = v31;
    v42[1] = v27;
    uint64_t v43 = (uint64_t *)(v40[7] + 16 * v33);
    *uint64_t v43 = v50;
    v43[1] = v23;
    uint64_t v44 = v40[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_27;
    }
    v40[2] = v46;
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  uint64_t result = sub_20AB86CF0();
  __break(1u);
  return result;
}

uint64_t sub_20AADAAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(sub_20AB855A0() + 16);
  swift_bridgeObjectRelease();
  if (!v3) {
    return 1;
  }
  uint64_t result = sub_20AB855A0();
  uint64_t v5 = result;
  uint64_t v6 = *(void *)(result + 16);
  if (v6)
  {
    unint64_t v7 = 0;
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = a2 + 40;
    uint64_t v10 = v8;
    uint64_t v11 = *(void *)(result + 16);
    while (1)
    {
      if (v7 >= *(void *)(v5 + 16))
      {
        __break(1u);
        return result;
      }
      if (v8) {
        break;
      }
LABEL_4:
      if (++v7 == v6) {
        goto LABEL_13;
      }
    }
    sub_20AADCDE8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (sub_20AB86900())
    {
      v9 += 16;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v8 = v10;
        uint64_t v6 = v11;
        uint64_t v9 = a2 + 40;
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_20AADAC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a3;
  uint64_t v4 = sub_20AB85140();
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AADD048(0, &qword_26AC4F1E8, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v39 - v8;
  sub_20AADCD80();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (id *)((char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  int v15 = (*(uint64_t (**)(id *, uint64_t))(v12 + 88))(v14, v11);
  if (v15 == *MEMORY[0x263F24D60])
  {
    (*(void (**)(id *, uint64_t))(v12 + 96))(v14, v11);

    sub_20AADC730();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_20AB88030;
    sub_20AB85990();
    uint64_t v17 = sub_20AB85980();
    uint64_t v19 = v18;
    uint64_t v20 = MEMORY[0x263F8D310];
    *(void *)(v16 + 56) = MEMORY[0x263F8D310];
    unint64_t v21 = sub_20AADC798();
    *(void *)(v16 + 64) = v21;
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    sub_20AADC7EC(v40, (uint64_t)v9);
    uint64_t v22 = type metadata accessor for ExternalURLData();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v9, 1, v22) == 1)
    {
      sub_20AADC880((uint64_t)v9);
      uint64_t v23 = (uint64_t *)(v16 + 72);
      *(void *)(v16 + 96) = v20;
      *(void *)(v16 + 104) = v21;
    }
    else
    {
      uint64_t v34 = v39;
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v6, v9, v4);
      sub_20AADCD24((uint64_t)v9);
      uint64_t v35 = sub_20AB85110();
      unint64_t v37 = v36;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
      uint64_t v23 = (uint64_t *)(v16 + 72);
      *(void *)(v16 + 96) = v20;
      *(void *)(v16 + 104) = v21;
      if (v37)
      {
        *uint64_t v23 = v35;
LABEL_9:
        *(void *)(v16 + 80) = v37;
        sub_20A9CE038(0, (unint64_t *)&qword_26AC51748);
        uint64_t v38 = (void *)sub_20AB868A0();
        sub_20AB86820();
        sub_20AB86440();
        swift_bridgeObjectRelease();

        return;
      }
    }
    *uint64_t v23 = 0;
    unint64_t v37 = 0xE000000000000000;
    goto LABEL_9;
  }
  if (v15 == *MEMORY[0x263F24D58])
  {
    (*(void (**)(id *, uint64_t))(v12 + 96))(v14, v11);
    id v24 = *v14;
    sub_20A9CE038(0, (unint64_t *)&qword_26AC51748);
    uint64_t v25 = (void *)sub_20AB868A0();
    sub_20AB86810();
    sub_20AADC730();
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_20AB88030;
    sub_20AB85990();
    uint64_t v27 = sub_20AB85980();
    uint64_t v29 = v28;
    uint64_t v30 = MEMORY[0x263F8D310];
    *(void *)(v26 + 56) = MEMORY[0x263F8D310];
    unint64_t v31 = sub_20AADC798();
    *(void *)(v26 + 64) = v31;
    *(void *)(v26 + 32) = v27;
    *(void *)(v26 + 40) = v29;
    swift_getErrorValue();
    uint64_t v32 = sub_20AB86D00();
    *(void *)(v26 + 96) = v30;
    *(void *)(v26 + 104) = v31;
    *(void *)(v26 + 72) = v32;
    *(void *)(v26 + 80) = v33;
    sub_20AB86440();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_20AB86A50();
    __break(1u);
  }
}

uint64_t ExternalAnalyticsEventProcessor.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ExternalAnalyticsEventProcessor.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0228](v0, 216, 7);
}

uint64_t sub_20AADB224(uint64_t a1)
{
  return MEMORY[0x270F0C4A8](a1, *v1);
}

uint64_t sub_20AADB250(uint64_t a1)
{
  return MEMORY[0x270F0C4B0](a1, *v1);
}

uint64_t sub_20AADB280(uint64_t a1)
{
  return MEMORY[0x270F0C4C8](a1, *v1);
}

uint64_t sub_20AADB2AC(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F0C4C0](a1, a2, *v2);
}

uint64_t sub_20AADB2D8(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F0C4A0](a1, a2, *v2);
}

uint64_t sub_20AADB304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F0C4D0](a1, a2, a3, a4, *v4);
}

uint64_t sub_20AADB330(uint64_t a1, uint64_t a2)
{
  return sub_20AADBE98(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_20AADB38C);
}

unint64_t sub_20AADB348(uint64_t a1)
{
  uint64_t v2 = sub_20AB86930();

  return sub_20AADB470(a1, v2);
}

unint64_t sub_20AADB38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_20AB86CA0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_20AB86CA0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_20AADB470(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_20AADC61C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x21052A3C0](v9, a1);
      sub_20AADC678((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_20AADB538(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_20AADCE3C();
  char v38 = a2;
  uint64_t v6 = sub_20AB86A80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1)) {
      goto LABEL_40;
    }
    if (v14 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v14);
    if (!v24)
    {
      int64_t v25 = v14 + 1;
      if (v14 + 1 >= v11)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v36;
        if ((v38 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          int64_t v14 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            break;
          }
          if (v14 >= v11) {
            goto LABEL_31;
          }
          unint64_t v24 = *(void *)(v37 + 8 * v14);
          ++v25;
          if (v24) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v14;
    }
LABEL_20:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_21:
    uint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void **)(*(void *)(v5 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v30 = v29;
    }
    sub_20AB86D60();
    sub_20AB86710();
    uint64_t result = sub_20AB86D80();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v17 == v32;
        if (v17 == v32) {
          unint64_t v17 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v17);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *uint64_t v19 = v28;
    v19[1] = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_20AADB824(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_20AADC6CC();
  char v42 = a2;
  uint64_t v6 = sub_20AB86A80();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_20AB86D60();
    sub_20AB86710();
    uint64_t result = sub_20AB86D80();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

id sub_20AADBB48()
{
  uint64_t v1 = v0;
  sub_20AADCE3C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20AB86A70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    if (!v23) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_20AADBCE0()
{
  uint64_t v1 = v0;
  sub_20AADC6CC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20AB86A70();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    unint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    void *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_20AADBE98(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_20AB86D60();
  sub_20AB86710();
  uint64_t v5 = sub_20AB86D80();

  return a3(a1, a2, v5);
}

void *sub_20AADBF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = sub_20AAD9470(MEMORY[0x263F8EE78]);
  v5[24] = 0;
  v5[25] = 0;
  v5[26] = 0;
  sub_20AA65AD8(a1, (uint64_t)(v5 + 3));
  v5[2] = a2;
  sub_20AA65AD8(a3, (uint64_t)(v5 + 8));
  sub_20AA65AD8(a4, (uint64_t)(v5 + 13));
  sub_20AA65AD8(a5, (uint64_t)(v5 + 18));
  swift_retain();
  sub_20AAD95D8();
  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v5;
}

uint64_t sub_20AADBFD4(uint64_t a1)
{
  sub_20AA0C064();
  uint64_t v46 = v2;
  uint64_t v42 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  BOOL v45 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA3ABC0();
  uint64_t v50 = v4;
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v49 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA438F4();
  uint64_t v53 = v6;
  uint64_t v48 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v52 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA70910();
  uint64_t v9 = v8;
  uint64_t v51 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20AB85990();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v43 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v55 = (char *)&v42 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v47 = (char *)&v42 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v54 = (char *)&v42 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  int64_t v24 = (char *)&v42 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  int64_t v27 = (char *)&v42 - v26;
  MEMORY[0x270FA5388](v25);
  unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v28((char *)&v42 - v29, a1, v12);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v11, v9);
    v28(v27, a1, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v12);
LABEL_5:
    uint64_t v33 = v54;
    v28(v54, a1, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v33, v12);
LABEL_6:
    uint64_t v34 = v55;
    v28(v55, a1, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v34, v12);
    return 1;
  }
  v28(v27, a1, v12);
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v30(v24, v27, v12);
  unint64_t v32 = v52;
  uint64_t v31 = v53;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v31);
    goto LABEL_5;
  }
  uint64_t v36 = v54;
  v28(v54, a1, v12);
  v30(v47, v36, v12);
  uint64_t v38 = v49;
  uint64_t v37 = v50;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v38, v37);
    goto LABEL_6;
  }
  uint64_t v39 = v55;
  v28(v55, a1, v12);
  v30(v43, v39, v12);
  uint64_t v41 = v45;
  uint64_t v40 = v46;
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v40);
  return 1;
}

uint64_t type metadata accessor for ExternalAnalyticsEventProcessor()
{
  return self;
}

uint64_t method lookup function for ExternalAnalyticsEventProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ExternalAnalyticsEventProcessor);
}

uint64_t dispatch thunk of ExternalAnalyticsEventProcessor.__allocating_init(appConfigurationManager:tracker:uploader:panelIdProvider:urlProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_20AADC61C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20AADC678(uint64_t a1)
{
  return a1;
}

void sub_20AADC6CC()
{
  if (!qword_267656140)
  {
    unint64_t v0 = sub_20AB86AA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267656140);
    }
  }
}

void sub_20AADC730()
{
  if (!qword_26AC519D8)
  {
    sub_20AADCF04(255, &qword_26AC519E8);
    unint64_t v0 = sub_20AB86C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC519D8);
    }
  }
}

unint64_t sub_20AADC798()
{
  unint64_t result = qword_26AC51668;
  if (!qword_26AC51668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51668);
  }
  return result;
}

uint64_t sub_20AADC7EC(uint64_t a1, uint64_t a2)
{
  sub_20AADD048(0, &qword_26AC4F1E8, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AADC880(uint64_t a1)
{
  sub_20AADD048(0, &qword_26AC4F1E8, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AADC90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExternalURLData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AADC970()
{
  uint64_t v1 = sub_20AB85990();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  sub_20AADD048(0, &qword_26AC4F1E8, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v10 = type metadata accessor for ExternalURLData();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v0 + v8, 1, v10))
  {
    uint64_t v11 = sub_20AB85140();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v8, v11);
    if (*(void *)(v0 + v8 + *(int *)(v10 + 20) + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v0, v8 + v9, v3 | v7 | 7);
}

uint64_t sub_20AADCB70(uint64_t a1, uint64_t a2)
{
  sub_20AADD048(0, &qword_26AC4F1E8, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20AADCC04(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20AB85990() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  sub_20AADD048(0, &qword_26AC4F1E8, (uint64_t (*)(uint64_t))type metadata accessor for ExternalURLData, MEMORY[0x263F8D8F0]);
  uint64_t v7 = v1
     + ((v4 + v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80));

  sub_20AADAC24(a1, v1 + v4, v7);
}

uint64_t sub_20AADCD24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExternalURLData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20AADCD80()
{
  if (!qword_26AC52AE0)
  {
    sub_20A9CE038(255, &qword_26AC52AE8);
    unint64_t v0 = sub_20AB85A80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC52AE0);
    }
  }
}

unint64_t sub_20AADCDE8()
{
  unint64_t result = qword_26AC51660;
  if (!qword_26AC51660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51660);
  }
  return result;
}

void sub_20AADCE3C()
{
  if (!qword_267656148)
  {
    sub_20A9CE038(255, &qword_26AC4E2D8);
    unint64_t v0 = sub_20AB86AA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267656148);
    }
  }
}

uint64_t sub_20AADCEB4(uint64_t a1, void *a2)
{
  return sub_20AAD9700(a1, a2, v2);
}

uint64_t sub_20AADCEBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AADCF04(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_20AADCF54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_20AADCFB0()
{
  if (!qword_267656150)
  {
    sub_20AADD048(255, &qword_267656158, MEMORY[0x263F7CEF0], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_20AB86AA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267656150);
    }
  }
}

void sub_20AADD048(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20AADD0AC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656160, MEMORY[0x263F24D10]);
}

uint64_t static AddEarningsToCalendarEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535B8, MEMORY[0x263F24D18], (uint64_t)qword_267656160, a1);
}

uint64_t static AddEarningsToCalendarEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AADD114(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656178, MEMORY[0x263F24DC8]);
}

uint64_t static AddEarningsToCalendarEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535C0, MEMORY[0x263F24DD8], (uint64_t)qword_267656178, a1);
}

uint64_t sub_20AADD174()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656190);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656190);
  return sub_20AB85D30();
}

uint64_t static AddEarningsToCalendarEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535C8, MEMORY[0x263F24DE8], (uint64_t)qword_267656190, a1);
}

uint64_t AddEarningsToCalendarEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AddEarningsToCalendarEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AddEarningsToCalendarEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 20);
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AddEarningsToCalendarEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676561D0);
}

uint64_t AddEarningsToCalendarEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 20);
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AddEarningsToCalendarEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 24);
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AddEarningsToCalendarEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 24);
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AddEarningsToCalendarEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 28);
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AddEarningsToCalendarEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 28);
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AddEarningsToCalendarEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.calendarAccessData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 32);
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AddEarningsToCalendarEvent.calendarAccessData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 32);
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AddEarningsToCalendarEvent.calendarAccessData.modify())()
{
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.addToCalendarResultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 36);
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AADDA08(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t AddEarningsToCalendarEvent.addToCalendarResultData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent(0) + 36);
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AddEarningsToCalendarEvent.addToCalendarResultData.modify())()
{
  return nullsub_1;
}

uint64_t AddEarningsToCalendarEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AddEarningsToCalendarEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v2, v14);
}

uint64_t AddEarningsToCalendarEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AddEarningsToCalendarEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent.Model(0) + 20);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AddEarningsToCalendarEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676561E0);
}

uint64_t AddEarningsToCalendarEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent.Model(0) + 24);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AddEarningsToCalendarEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AddEarningsToCalendarEvent.Model(0) + 28));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t AddEarningsToCalendarEvent.Model.calendarAccessData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t AddEarningsToCalendarEvent.Model.addToCalendarResultData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

int *AddEarningsToCalendarEvent.Model.init(eventData:feedData:symbolData:viewData:calendarAccessData:addToCalendarResultData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v9 = *a2;
  uint64_t v10 = *((void *)a2 + 1);
  uint64_t v11 = *((void *)a2 + 2);
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  char v14 = *((unsigned char *)a3 + 16);
  uint64_t v15 = a3[3];
  uint64_t v16 = a3[4];
  uint64_t v23 = a4[1];
  uint64_t v24 = *a4;
  __int16 v22 = *((_WORD *)a4 + 8);
  char v25 = *a5;
  char v26 = *a6;
  uint64_t v17 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a7, a1, v17);
  uint64_t result = (int *)type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  uint64_t v19 = a7 + result[5];
  *(unsigned char *)uint64_t v19 = v9;
  *(void *)(v19 + 8) = v10;
  *(void *)(v19 + 16) = v11;
  uint64_t v20 = a7 + result[6];
  *(void *)uint64_t v20 = v12;
  *(void *)(v20 + 8) = v13;
  *(unsigned char *)(v20 + 16) = v14;
  *(void *)(v20 + 24) = v15;
  *(void *)(v20 + 32) = v16;
  uint64_t v21 = a7 + result[7];
  *(void *)uint64_t v21 = v24;
  *(void *)(v21 + 8) = v23;
  *(_WORD *)(v21 + 16) = v22;
  *(unsigned char *)(a7 + result[8]) = v25;
  *(unsigned char *)(a7 + result[9]) = v26;
  return result;
}

uint64_t sub_20AADE12C(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1684366694;
      goto LABEL_5;
    case 2:
      uint64_t result = 0x61446C6F626D7973;
      break;
    case 3:
      unsigned int v3 = 2003134838;
LABEL_5:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 4:
      uint64_t result = 0xD000000000000012;
      break;
    case 5:
      uint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AADE208()
{
  return sub_20AADE12C(*v0);
}

uint64_t sub_20AADE210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAE16CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AADE238(uint64_t a1)
{
  unint64_t v2 = sub_20AADE5BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AADE274(uint64_t a1)
{
  unint64_t v2 = sub_20AADE5BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AddEarningsToCalendarEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AADEBB4(0, &qword_2676561B8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AADE5BC();
  sub_20AB86DC0();
  LOBYTE(v25) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for AddEarningsToCalendarEvent.Model(0);
    uint64_t v11 = (char *)(v3 + v10[5]);
    char v12 = *v11;
    uint64_t v14 = *((void *)v11 + 1);
    uint64_t v13 = *((void *)v11 + 2);
    LOBYTE(v25) = v12;
    uint64_t v26 = v14;
    uint64_t v27 = v13;
    char v30 = 1;
    sub_20A986774();
    sub_20AB86C50();
    uint64_t v15 = (uint64_t *)(v3 + v10[6]);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    char v18 = *((unsigned char *)v15 + 16);
    uint64_t v20 = v15[3];
    uint64_t v19 = v15[4];
    uint64_t v25 = v16;
    uint64_t v26 = v17;
    LOBYTE(v27) = v18;
    uint64_t v28 = v20;
    uint64_t v29 = v19;
    char v30 = 2;
    sub_20A97C61C();
    sub_20AB86C50();
    uint64_t v21 = (uint64_t *)(v3 + v10[7]);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    LOWORD(v21) = *((_WORD *)v21 + 8);
    uint64_t v25 = v22;
    uint64_t v26 = v23;
    LOWORD(v27) = (_WORD)v21;
    char v30 = 3;
    sub_20A986C14();
    sub_20AB86C50();
    LOBYTE(v25) = *(unsigned char *)(v3 + v10[8]);
    char v30 = 4;
    sub_20AAB7BB0();
    sub_20AB86C50();
    LOBYTE(v25) = *(unsigned char *)(v3 + v10[9]);
    char v30 = 5;
    sub_20AA1C35C();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AADE5BC()
{
  unint64_t result = qword_2676561C0;
  if (!qword_2676561C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676561C0);
  }
  return result;
}

uint64_t AddEarningsToCalendarEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AADEBB4(0, &qword_2676561C8, MEMORY[0x263F8E040]);
  uint64_t v32 = v6;
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v27 - v7;
  char v9 = (int *)type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AADE5BC();
  uint64_t v33 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v30;
  uint64_t v27 = a1;
  LOBYTE(v34) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v13 = v31;
  uint64_t v14 = v32;
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v11, v13, v4);
  char v39 = 1;
  sub_20A986720();
  sub_20AB86B80();
  uint64_t v15 = v35;
  uint64_t v16 = v36;
  uint64_t v17 = &v11[v9[5]];
  char *v17 = v34;
  *((void *)v17 + 1) = v15;
  *((void *)v17 + 2) = v16;
  char v39 = 2;
  sub_20A97C5C8();
  sub_20AB86B80();
  uint64_t v18 = v35;
  char v19 = v36;
  uint64_t v20 = v37;
  uint64_t v21 = v38;
  uint64_t v22 = &v11[v9[6]];
  *(void *)uint64_t v22 = v34;
  *((void *)v22 + 1) = v18;
  v22[16] = v19;
  *((void *)v22 + 3) = v20;
  *((void *)v22 + 4) = v21;
  char v39 = 3;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v23 = v35;
  __int16 v24 = v36;
  uint64_t v25 = &v11[v9[7]];
  *(void *)uint64_t v25 = v34;
  *((void *)v25 + 1) = v23;
  *((_WORD *)v25 + 8) = v24;
  char v39 = 4;
  sub_20AAB7B58();
  sub_20AB86B80();
  v11[v9[8]] = v34;
  char v39 = 5;
  sub_20AA1C304();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v14);
  v11[v9[9]] = v34;
  sub_20AADEC18((uint64_t)v11, v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return sub_20AADEC7C((uint64_t)v11);
}

void sub_20AADEBB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AADE5BC();
    unint64_t v7 = a3(a1, &type metadata for AddEarningsToCalendarEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AADEC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AADEC7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AddEarningsToCalendarEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AADECD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AddEarningsToCalendarEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AADECF0(void *a1)
{
  return AddEarningsToCalendarEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AADED08@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535B8, MEMORY[0x263F24D18], (uint64_t)qword_267656160, a1);
}

uint64_t sub_20AADED40@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535C0, MEMORY[0x263F24DD8], (uint64_t)qword_267656178, a1);
}

uint64_t sub_20AADED78@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535C8, MEMORY[0x263F24DE8], (uint64_t)qword_267656190, a1);
}

uint64_t sub_20AADEDB0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for AddEarningsToCalendarEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for AddEarningsToCalendarEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for AddEarningsToCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for AddEarningsToCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for AddEarningsToCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for AddEarningsToCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddEarningsToCalendarEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAE02A0);
}

uint64_t sub_20AAE02A0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for AddEarningsToCalendarEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAE05FC);
}

uint64_t sub_20AAE05FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  sub_20AADDA08(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  sub_20AADDA08(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  sub_20AADDA08(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  sub_20AADDA08(0, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  sub_20AADDA08(0, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_20AAE0950()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AADDA08(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    if (v1 <= 0x3F)
    {
      sub_20AADDA08(319, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
      if (v2 <= 0x3F)
      {
        sub_20AADDA08(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
        if (v3 <= 0x3F)
        {
          sub_20AADDA08(319, &qword_2676561A8, (void (*)(void))sub_20AAB7B58, (void (*)(void))sub_20AAB7BB0);
          if (v4 <= 0x3F)
          {
            sub_20AADDA08(319, &qword_2676561B0, (void (*)(void))sub_20AA1C304, (void (*)(void))sub_20AA1C35C);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AddEarningsToCalendarEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    uint64_t v12 = *((void *)v11 + 2);
    *((void *)v10 + 1) = *((void *)v11 + 1);
    *((void *)v10 + 2) = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    v13[16] = v14[16];
    uint64_t v16 = *((void *)v14 + 4);
    *((void *)v13 + 3) = *((void *)v14 + 3);
    *((void *)v13 + 4) = v16;
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)a1 + v17;
    uint64_t v20 = (char *)a2 + v17;
    v19[16] = v20[16];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    v19[17] = v20[17];
    *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AddEarningsToCalendarEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AddEarningsToCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v14;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  uint64_t v15 = *(void *)(v13 + 32);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  *(void *)(v12 + 32) = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  uint64_t v20 = *(void *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  *(unsigned char *)(v18 + 17) = *(unsigned char *)(v19 + 17);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AddEarningsToCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)(a2 + v13);
  *(void *)(v14 + 8) = *(void *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  *(unsigned char *)(v14 + 17) = *(unsigned char *)(v15 + 17);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for AddEarningsToCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = (long long *)(a2 + v14);
  long long v18 = *v17;
  *(_WORD *)(v16 + 16) = *((_WORD *)v17 + 8);
  *(_OWORD *)uint64_t v16 = v18;
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for AddEarningsToCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  uint64_t v16 = *(void *)(v14 + 32);
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  *(void *)(v13 + 32) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a2 + v17 + 8);
  *(void *)uint64_t v18 = *(void *)(a2 + v17);
  *(void *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  *(_WORD *)(v18 + 16) = *(_WORD *)(v19 + 16);
  uint64_t v21 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddEarningsToCalendarEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAE126C);
}

uint64_t sub_20AAE126C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AddEarningsToCalendarEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAE1344);
}

uint64_t sub_20AAE1344(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AAE1404()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AddEarningsToCalendarEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAE158CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddEarningsToCalendarEvent.Model.CodingKeys()
{
  return &type metadata for AddEarningsToCalendarEvent.Model.CodingKeys;
}

unint64_t sub_20AAE15C8()
{
  unint64_t result = qword_2676561F0;
  if (!qword_2676561F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676561F0);
  }
  return result;
}

unint64_t sub_20AAE1620()
{
  unint64_t result = qword_2676561F8;
  if (!qword_2676561F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676561F8);
  }
  return result;
}

unint64_t sub_20AAE1678()
{
  unint64_t result = qword_267656200;
  if (!qword_267656200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656200);
  }
  return result;
}

uint64_t sub_20AAE16CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA8940 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020ABA8960)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t dispatch thunk of TrackerConfigurationType.adInstrumentationEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_20AAE1970()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t type metadata accessor for TrackerConfiguration()
{
  return self;
}

uint64_t sub_20AAE19CC()
{
  uint64_t v1 = sub_20AB85480();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned int v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  if (qword_26AC4E088 != -1) {
    swift_once();
  }
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 16), *(void *)(v5 + 40));
  sub_20AB85570();
  sub_20AB853F0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_20AAE1B2C();
  return sub_20AB85700() & 1;
}

unint64_t sub_20AAE1B2C()
{
  unint64_t result = qword_26AC4E168;
  if (!qword_26AC4E168)
  {
    type metadata accessor for TrackerConfiguration();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E168);
  }
  return result;
}

uint64_t static ArticleViewData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ArticleViewData.viewSessionID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ArticleViewData.viewSessionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ArticleViewData.viewSessionID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ArticleViewData __swiftcall ArticleViewData.init(viewSessionID:)(StocksAnalytics::ArticleViewData viewSessionID)
{
  *uint64_t v1 = viewSessionID;
  return viewSessionID;
}

uint64_t sub_20AAE1C18()
{
  return 0x7373655377656976;
}

uint64_t sub_20AAE1C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7373655377656976 && a2 == 0xED000044496E6F69)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AAE1CF8(uint64_t a1)
{
  unint64_t v2 = sub_20AAE1EBC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAE1D34(uint64_t a1)
{
  unint64_t v2 = sub_20AAE1EBC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ArticleViewData.encode(to:)(void *a1)
{
  sub_20AAE2094(0, &qword_26AC51878, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE1EBC();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AAE1EBC()
{
  unint64_t result = qword_26AC4F0E8;
  if (!qword_26AC4F0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F0E8);
  }
  return result;
}

uint64_t ArticleViewData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AAE2094(0, &qword_26AC52AF0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE1EBC();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86B40();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAE2094(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAE1EBC();
    unint64_t v7 = a3(a1, &type metadata for ArticleViewData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAE2100@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ArticleViewData.init(from:)(a1, a2);
}

uint64_t sub_20AAE2118(void *a1)
{
  sub_20AAE2094(0, &qword_26AC51878, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE1EBC();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ArticleViewData()
{
  return &type metadata for ArticleViewData;
}

unsigned char *storeEnumTagSinglePayload for ArticleViewData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AAE2310);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleViewData.CodingKeys()
{
  return &type metadata for ArticleViewData.CodingKeys;
}

unint64_t sub_20AAE234C()
{
  unint64_t result = qword_267656208;
  if (!qword_267656208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656208);
  }
  return result;
}

unint64_t sub_20AAE23A4()
{
  unint64_t result = qword_26AC4F0F8;
  if (!qword_26AC4F0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F0F8);
  }
  return result;
}

unint64_t sub_20AAE23FC()
{
  unint64_t result = qword_26AC4F0F0;
  if (!qword_26AC4F0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F0F0);
  }
  return result;
}

StocksAnalytics::AdJournalEntryData __swiftcall AdJournalEntryData.init(status:error:)(StocksAnalytics::AdJournalEntryStatus status, StocksAnalytics::AdJournalEntryError_optional error)
{
  char v3 = *(unsigned char *)error.value;
  *uint64_t v2 = *(unsigned char *)status;
  v2[1] = v3;
  result.status = status;
  return result;
}

uint64_t static AdJournalEntryData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void AdJournalEntryData.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *AdJournalEntryData.status.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*AdJournalEntryData.status.modify())()
{
  return nullsub_1;
}

void AdJournalEntryData.error.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *AdJournalEntryData.error.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*AdJournalEntryData.error.modify())()
{
  return nullsub_1;
}

uint64_t sub_20AAE24DC()
{
  if (*v0) {
    return 0x726F727265;
  }
  else {
    return 0x737574617473;
  }
}

uint64_t sub_20AAE2510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAE2F34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAE2538(uint64_t a1)
{
  unint64_t v2 = sub_20AAE275C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAE2574(uint64_t a1)
{
  unint64_t v2 = sub_20AAE275C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdJournalEntryData.encode(to:)(void *a1)
{
  sub_20AAE2A3C(0, &qword_26AC518A8, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  char v9 = *v1;
  int v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE275C();
  sub_20AB86DC0();
  char v16 = v9;
  char v15 = 0;
  sub_20AAE27B0();
  sub_20AB86C50();
  if (!v2)
  {
    char v14 = v12;
    char v13 = 1;
    sub_20AAE2804();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AAE275C()
{
  unint64_t result = qword_26AC4F8C0;
  if (!qword_26AC4F8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F8C0);
  }
  return result;
}

unint64_t sub_20AAE27B0()
{
  unint64_t result = qword_26AC4E148;
  if (!qword_26AC4E148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E148);
  }
  return result;
}

unint64_t sub_20AAE2804()
{
  unint64_t result = qword_26AC4FD98;
  if (!qword_26AC4FD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FD98);
  }
  return result;
}

uint64_t AdJournalEntryData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AAE2A3C(0, &qword_267656210, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE275C();
  sub_20AB86DA0();
  if (!v2)
  {
    char v16 = 0;
    sub_20AAE2AA0();
    sub_20AB86B80();
    char v10 = v17;
    char v14 = 1;
    sub_20AAE2AF4();
    sub_20AB86B10();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAE2A3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAE275C();
    unint64_t v7 = a3(a1, &type metadata for AdJournalEntryData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AAE2AA0()
{
  unint64_t result = qword_267656218;
  if (!qword_267656218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656218);
  }
  return result;
}

unint64_t sub_20AAE2AF4()
{
  unint64_t result = qword_267656220;
  if (!qword_267656220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656220);
  }
  return result;
}

uint64_t sub_20AAE2B50@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AdJournalEntryData.init(from:)(a1, a2);
}

uint64_t sub_20AAE2B68(void *a1)
{
  return AdJournalEntryData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for AdJournalEntryData(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 65284 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65284 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65284;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65284;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65284;
    }
  }
LABEL_17:
  if (*((unsigned __int8 *)a1 + 1) <= 4u) {
    int v6 = 4;
  }
  else {
    int v6 = *((unsigned __int8 *)a1 + 1);
  }
  int v7 = v6 - 5;
  if (*((unsigned __int8 *)a1 + 1) < 4u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AdJournalEntryData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65284 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65284 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 252;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAE2CF0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryData()
{
  return &type metadata for AdJournalEntryData;
}

unsigned char *storeEnumTagSinglePayload for AdJournalEntryData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAE2DF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryData.CodingKeys()
{
  return &type metadata for AdJournalEntryData.CodingKeys;
}

unint64_t sub_20AAE2E30()
{
  unint64_t result = qword_267656228;
  if (!qword_267656228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656228);
  }
  return result;
}

unint64_t sub_20AAE2E88()
{
  unint64_t result = qword_26AC4F8D0;
  if (!qword_26AC4F8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F8D0);
  }
  return result;
}

unint64_t sub_20AAE2EE0()
{
  unint64_t result = qword_26AC4F8C8;
  if (!qword_26AC4F8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F8C8);
  }
  return result;
}

uint64_t sub_20AAE2F34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static AdData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AdData.impressionID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdData.impressionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdData.impressionID.modify())()
{
  return nullsub_1;
}

void AdData.adType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *AdData.adType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*AdData.adType.modify())()
{
  return nullsub_1;
}

void AdData.adCreativeType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

unsigned char *AdData.adCreativeType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 17) = *result;
  return result;
}

uint64_t (*AdData.adCreativeType.modify())()
{
  return nullsub_1;
}

uint64_t AdData.iadCampaign.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdData.iadCampaign.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*AdData.iadCampaign.modify())()
{
  return nullsub_1;
}

uint64_t AdData.iadLine.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdData.iadLine.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*AdData.iadLine.modify())()
{
  return nullsub_1;
}

uint64_t AdData.iadAd.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdData.iadAd.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*AdData.iadAd.modify())()
{
  return nullsub_1;
}

void __swiftcall AdData.init(impressionID:adType:adCreativeType:iadCampaign:iadLine:iadAd:)(StocksAnalytics::AdData *__return_ptr retstr, Swift::String impressionID, StocksAnalytics::AdType adType, StocksAnalytics::AdCreativeType adCreativeType, Swift::String_optional iadCampaign, Swift::String_optional iadLine, Swift::String_optional iadAd)
{
  StocksAnalytics::AdType v7 = *(unsigned char *)adType;
  StocksAnalytics::AdCreativeType v8 = *(unsigned char *)adCreativeType;
  retstr->impressionID = impressionID;
  retstr->adType = v7;
  retstr->adCreativeType = v8;
  retstr->iadCampaign = iadCampaign;
  retstr->iadLine = iadLine;
  retstr->iadAd = iadAd;
}

uint64_t sub_20AAE32D8()
{
  uint64_t result = 0x6973736572706D69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657079546461;
      break;
    case 2:
      uint64_t result = 0x6974616572436461;
      break;
    case 3:
      uint64_t result = 0x61706D6143646169;
      break;
    case 4:
      uint64_t result = 0x656E694C646169;
      break;
    case 5:
      uint64_t result = 0x6441646169;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAE33B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAE4060(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAE33DC(uint64_t a1)
{
  unint64_t v2 = sub_20AAE36E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAE3418(uint64_t a1)
{
  unint64_t v2 = sub_20AAE36E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdData.encode(to:)(void *a1)
{
  sub_20AAE3B68(0, &qword_267656230, MEMORY[0x263F8E0C0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  StocksAnalytics::AdType v7 = (char *)v18 - v6;
  int v8 = *(unsigned __int8 *)(v1 + 16);
  int v19 = *(unsigned __int8 *)(v1 + 17);
  int v20 = v8;
  uint64_t v9 = *(void *)(v1 + 24);
  v18[5] = *(void *)(v1 + 32);
  v18[6] = v9;
  uint64_t v10 = *(void *)(v1 + 40);
  v18[3] = *(void *)(v1 + 48);
  v18[4] = v10;
  uint64_t v11 = *(void *)(v1 + 56);
  v18[1] = *(void *)(v1 + 64);
  v18[2] = v11;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1;
  uint64_t v15 = v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_20AAE36E4();
  sub_20AB86DC0();
  char v28 = 0;
  sub_20AB86C10();
  if (!v2)
  {
    char v16 = v19;
    char v27 = v20;
    char v26 = 1;
    sub_20AAE3738();
    sub_20AB86C50();
    char v25 = v16;
    char v24 = 2;
    sub_20AA11130();
    sub_20AB86C50();
    char v23 = 3;
    sub_20AB86BC0();
    char v22 = 4;
    sub_20AB86BC0();
    char v21 = 5;
    sub_20AB86BC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v15);
}

unint64_t sub_20AAE36E4()
{
  unint64_t result = qword_267656238;
  if (!qword_267656238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656238);
  }
  return result;
}

unint64_t sub_20AAE3738()
{
  unint64_t result = qword_267656240;
  if (!qword_267656240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656240);
  }
  return result;
}

uint64_t AdData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AAE3B68(0, &qword_267656248, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE36E4();
  sub_20AB86DA0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v40 = 0;
    uint64_t v11 = sub_20AB86B40();
    uint64_t v13 = v12;
    char v38 = 1;
    sub_20AAE3BCC();
    swift_bridgeObjectRetain();
    sub_20AB86B80();
    int v32 = v39;
    char v36 = 2;
    sub_20AA11380();
    sub_20AB86B80();
    uint64_t v31 = v11;
    int v30 = v37;
    char v35 = 3;
    uint64_t v14 = sub_20AB86AF0();
    uint64_t v16 = v15;
    uint64_t v28 = v14;
    uint64_t v29 = a2;
    char v34 = 4;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_20AB86AF0();
    uint64_t v19 = v18;
    uint64_t v27 = v17;
    char v33 = 5;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_20AB86AF0();
    uint64_t v22 = v21;
    char v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v26 = v20;
    v23(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char v24 = v29;
    *uint64_t v29 = v31;
    v24[1] = v13;
    *((unsigned char *)v24 + 16) = v32;
    *((unsigned char *)v24 + 17) = v30;
    v24[3] = v28;
    v24[4] = v16;
    v24[5] = v27;
    v24[6] = v19;
    v24[7] = v26;
    v24[8] = v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AAE3B68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAE36E4();
    unint64_t v7 = a3(a1, &type metadata for AdData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AAE3BCC()
{
  unint64_t result = qword_267656250;
  if (!qword_267656250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656250);
  }
  return result;
}

uint64_t sub_20AAE3C28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdData.init(from:)(a1, a2);
}

uint64_t sub_20AAE3C40(void *a1)
{
  return AdData.encode(to:)(a1);
}

uint64_t destroy for AdData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AdData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AdData()
{
  return &type metadata for AdData;
}

unsigned char *storeEnumTagSinglePayload for AdData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAE3F20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdData.CodingKeys()
{
  return &type metadata for AdData.CodingKeys;
}

unint64_t sub_20AAE3F5C()
{
  unint64_t result = qword_267656258;
  if (!qword_267656258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656258);
  }
  return result;
}

unint64_t sub_20AAE3FB4()
{
  unint64_t result = qword_267656260;
  if (!qword_267656260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656260);
  }
  return result;
}

unint64_t sub_20AAE400C()
{
  unint64_t result = qword_267656268;
  if (!qword_267656268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656268);
  }
  return result;
}

uint64_t sub_20AAE4060(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6973736572706D69 && a2 == 0xEC00000044496E6FLL;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657079546461 && a2 == 0xE600000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974616572436461 && a2 == 0xEE00657079546576 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61706D6143646169 && a2 == 0xEB000000006E6769 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656E694C646169 && a2 == 0xE700000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6441646169 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t static VideoAdEngagementData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void VideoAdEngagementData.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *VideoAdEngagementData.type.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*VideoAdEngagementData.type.modify())()
{
  return nullsub_1;
}

void VideoAdEngagementData.milestone.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *VideoAdEngagementData.milestone.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*VideoAdEngagementData.milestone.modify())()
{
  return nullsub_1;
}

StocksAnalytics::VideoAdEngagementData __swiftcall VideoAdEngagementData.init(type:milestone:)(StocksAnalytics::VideoAdEngagementType type, StocksAnalytics::Milestone milestone)
{
  char v3 = *(unsigned char *)milestone;
  *BOOL v2 = *(unsigned char *)type;
  v2[1] = v3;
  result.type = type;
  return result;
}

uint64_t sub_20AAE43B4()
{
  if (*v0) {
    return 0x6E6F7473656C696DLL;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_20AAE43EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAE4EA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAE4414(uint64_t a1)
{
  unint64_t v2 = sub_20AAE4638();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAE4450(uint64_t a1)
{
  unint64_t v2 = sub_20AAE4638();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VideoAdEngagementData.encode(to:)(void *a1)
{
  sub_20AAE4918(0, &qword_267656270, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  char v9 = *v1;
  int v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE4638();
  sub_20AB86DC0();
  char v16 = v9;
  char v15 = 0;
  sub_20AAE468C();
  sub_20AB86C50();
  if (!v2)
  {
    char v14 = v12;
    char v13 = 1;
    sub_20AAE46E0();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AAE4638()
{
  unint64_t result = qword_267656278;
  if (!qword_267656278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656278);
  }
  return result;
}

unint64_t sub_20AAE468C()
{
  unint64_t result = qword_267656280;
  if (!qword_267656280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656280);
  }
  return result;
}

unint64_t sub_20AAE46E0()
{
  unint64_t result = qword_267656288;
  if (!qword_267656288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656288);
  }
  return result;
}

uint64_t VideoAdEngagementData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AAE4918(0, &qword_267656290, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE4638();
  sub_20AB86DA0();
  if (!v2)
  {
    char v16 = 0;
    sub_20AAE497C();
    sub_20AB86B80();
    char v10 = v17;
    char v14 = 1;
    sub_20AAE49D0();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAE4918(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAE4638();
    unint64_t v7 = a3(a1, &type metadata for VideoAdEngagementData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AAE497C()
{
  unint64_t result = qword_267656298;
  if (!qword_267656298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656298);
  }
  return result;
}

unint64_t sub_20AAE49D0()
{
  unint64_t result = qword_2676562A0;
  if (!qword_2676562A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676562A0);
  }
  return result;
}

unint64_t sub_20AAE4A28()
{
  unint64_t result = qword_2676562A8;
  if (!qword_2676562A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676562A8);
  }
  return result;
}

unint64_t sub_20AAE4A80()
{
  unint64_t result = qword_2676562B0;
  if (!qword_2676562B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676562B0);
  }
  return result;
}

uint64_t sub_20AAE4AD4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return VideoAdEngagementData.init(from:)(a1, a2);
}

uint64_t sub_20AAE4AEC(void *a1)
{
  return VideoAdEngagementData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for VideoAdEngagementData(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 65285 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65285 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65285;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65285;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65285;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65285 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65285 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 251;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAE4C64);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementData()
{
  return &type metadata for VideoAdEngagementData;
}

unsigned char *storeEnumTagSinglePayload for VideoAdEngagementData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAE4D68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementData.CodingKeys()
{
  return &type metadata for VideoAdEngagementData.CodingKeys;
}

unint64_t sub_20AAE4DA4()
{
  unint64_t result = qword_2676562B8;
  if (!qword_2676562B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676562B8);
  }
  return result;
}

unint64_t sub_20AAE4DFC()
{
  unint64_t result = qword_2676562C0;
  if (!qword_2676562C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676562C0);
  }
  return result;
}

unint64_t sub_20AAE4E54()
{
  unint64_t result = qword_2676562C8;
  if (!qword_2676562C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676562C8);
  }
  return result;
}

uint64_t sub_20AAE4EA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F7473656C696DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AAE4F98(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC4F020, MEMORY[0x263F24D10]);
}

uint64_t static TelemetryEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4F038, MEMORY[0x263F24D18], (uint64_t)qword_26AC4F020, a1);
}

uint64_t static TelemetryEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAE5000(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC4F040, MEMORY[0x263F24DC8]);
}

uint64_t static TelemetryEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4E110, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4F040, a1);
}

uint64_t sub_20AAE5060()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676562D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676562D0);
  return sub_20AB85D30();
}

uint64_t static TelemetryEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC52088, MEMORY[0x263F24DE8], (uint64_t)qword_2676562D0, a1);
}

uint64_t TelemetryEvent.networkEventData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_20AAE514C();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

void sub_20AAE514C()
{
  if (!qword_26AC4E588)
  {
    type metadata accessor for NetworkEventData();
    sub_20AAE51FC(&qword_26AC4F4A8);
    sub_20AAE51FC(&qword_26AC4F4A0);
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E588);
    }
  }
}

uint64_t sub_20AAE51FC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NetworkEventData();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TelemetryEvent.networkEventData.setter(uint64_t a1)
{
  sub_20AAE514C();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*TelemetryEvent.networkEventData.modify())()
{
  return nullsub_1;
}

uint64_t TelemetryEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20AAE514C();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t TelemetryEvent.Model.networkEventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9B8E4C(v1, a1);
}

uint64_t TelemetryEvent.Model.init(networkEventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20AAE590C(a1, a2, (uint64_t (*)(void))type metadata accessor for NetworkEventData);
}

unint64_t sub_20AAE5378()
{
  return 0xD000000000000010;
}

uint64_t sub_20AAE5394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAE6C30(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AAE53C0(uint64_t a1)
{
  unint64_t v2 = sub_20AAE55AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAE53FC(uint64_t a1)
{
  unint64_t v2 = sub_20AAE55AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TelemetryEvent.Model.encode(to:)(void *a1)
{
  sub_20AAE5888(0, &qword_2676562E8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE55AC();
  sub_20AB86DC0();
  type metadata accessor for NetworkEventData();
  sub_20AAE51FC(&qword_26AC4F4A0);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AAE55AC()
{
  unint64_t result = qword_2676562F0;
  if (!qword_2676562F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676562F0);
  }
  return result;
}

uint64_t TelemetryEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  uint64_t v4 = type metadata accessor for NetworkEventData();
  MEMORY[0x270FA5388](v4);
  uint64_t v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAE5888(0, &qword_2676562F8, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v17 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for TelemetryEvent.Model(0);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE55AC();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v13 = v17;
    sub_20AAE51FC(&qword_26AC4F4A8);
    uint64_t v14 = (uint64_t)v18;
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    sub_20AAE590C(v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for NetworkEventData);
    sub_20AAE590C((uint64_t)v12, v16, type metadata accessor for TelemetryEvent.Model);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAE5888(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAE55AC();
    unint64_t v7 = a3(a1, &type metadata for TelemetryEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for TelemetryEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656300);
}

uint64_t sub_20AAE590C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20AAE5974@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TelemetryEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAE598C(void *a1)
{
  sub_20AAE5888(0, &qword_2676562E8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE55AC();
  sub_20AB86DC0();
  type metadata accessor for NetworkEventData();
  sub_20AAE51FC(&qword_26AC4F4A0);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20AAE5B00@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4F038, MEMORY[0x263F24D18], (uint64_t)qword_26AC4F020, a1);
}

uint64_t sub_20AAE5B38@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4E110, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4F040, a1);
}

uint64_t sub_20AAE5B70@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC52088, MEMORY[0x263F24DE8], (uint64_t)qword_2676562D0, a1);
}

uint64_t sub_20AAE5BA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20AAE514C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  sub_20AAE514C();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for TelemetryEvent(uint64_t a1)
{
  sub_20AAE514C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  sub_20AAE514C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  sub_20AAE514C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  sub_20AAE514C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for TelemetryEvent(uint64_t a1, uint64_t a2)
{
  sub_20AAE514C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TelemetryEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAE5E90);
}

uint64_t sub_20AAE5E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_2(a1, a2, a3, (uint64_t (*)(void))sub_20AAE514C);
}

uint64_t storeEnumTagSinglePayload for TelemetryEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAE5EBC);
}

uint64_t sub_20AAE5EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_2(a1, a2, a3, a4, (uint64_t (*)(void))sub_20AAE514C);
}

uint64_t type metadata accessor for TelemetryEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_26AC4F060);
}

uint64_t sub_20AAE5EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AAE69C4(a1, a2, a3, (uint64_t (*)(uint64_t))sub_20AAE514C);
}

void *initializeBufferWithCopyOfBuffer for TelemetryEvent.Model(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for NetworkEventData();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v6 = (int *)v4;
    uint64_t v7 = sub_20AB851C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + v6[5]) = *((unsigned char *)a2 + v6[5]);
    *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    *(void *)((char *)a1 + v6[8]) = *(void *)((char *)a2 + v6[8]);
    *(void *)((char *)a1 + v6[9]) = *(void *)((char *)a2 + v6[9]);
    uint64_t v8 = v6[10];
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)char v9 = *(void *)v10;
    v9[8] = v10[8];
    *(void *)((char *)a1 + v6[11]) = *(void *)((char *)a2 + v6[11]);
    *(void *)((char *)a1 + v6[12]) = *(void *)((char *)a2 + v6[12]);
    *(void *)((char *)a1 + v6[13]) = *(void *)((char *)a2 + v6[13]);
    *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
    *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
    uint64_t v11 = v6[16];
    char v12 = (void *)((char *)a1 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *char v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = v6[17];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = v6[18];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    *(void *)((char *)a1 + v6[19]) = *(void *)((char *)a2 + v6[19]);
    *(void *)((char *)a1 + v6[20]) = *(void *)((char *)a2 + v6[20]);
    uint64_t v21 = v6[21];
    uint64_t v22 = (void *)((char *)a1 + v21);
    char v23 = (void *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    *((unsigned char *)a1 + v6[22]) = *((unsigned char *)a2 + v6[22]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TelemetryEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for NetworkEventData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for NetworkEventData();
  *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
  *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
  *(void *)(a1 + v5[9]) = *(void *)(a2 + v5[9]);
  uint64_t v6 = v5[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
  *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
  *(void *)(a1 + v5[13]) = *(void *)(a2 + v5[13]);
  *(unsigned char *)(a1 + v5[14]) = *(unsigned char *)(a2 + v5[14]);
  *(unsigned char *)(a1 + v5[15]) = *(unsigned char *)(a2 + v5[15]);
  uint64_t v9 = v5[16];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *uint64_t v10 = v13;
  v10[1] = v12;
  uint64_t v14 = v5[17];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v17 = v5[18];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)(a1 + v5[19]) = *(void *)(a2 + v5[19]);
  *(void *)(a1 + v5[20]) = *(void *)(a2 + v5[20]);
  uint64_t v20 = v5[21];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  *(unsigned char *)(a1 + v5[22]) = *(unsigned char *)(a2 + v5[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for NetworkEventData();
  *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
  *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
  *(void *)(a1 + v5[9]) = *(void *)(a2 + v5[9]);
  uint64_t v6 = v5[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
  *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
  *(void *)(a1 + v5[13]) = *(void *)(a2 + v5[13]);
  *(unsigned char *)(a1 + v5[14]) = *(unsigned char *)(a2 + v5[14]);
  *(unsigned char *)(a1 + v5[15]) = *(unsigned char *)(a2 + v5[15]);
  uint64_t v10 = v5[16];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = v5[17];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v16 = *v15;
  *(unsigned char *)(v14 + 8) = *((unsigned char *)v15 + 8);
  *(void *)uint64_t v14 = v16;
  uint64_t v17 = v5[18];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  *(unsigned char *)(v18 + 8) = *((unsigned char *)v19 + 8);
  *(void *)uint64_t v18 = v20;
  *(void *)(a1 + v5[19]) = *(void *)(a2 + v5[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[20]) = *(void *)(a2 + v5[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v5[21];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[22]) = *(unsigned char *)(a2 + v5[22]);
  return a1;
}

uint64_t initializeWithTake for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for NetworkEventData();
  *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
  *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
  *(void *)(a1 + v5[9]) = *(void *)(a2 + v5[9]);
  uint64_t v6 = v5[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
  *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
  *(void *)(a1 + v5[13]) = *(void *)(a2 + v5[13]);
  *(unsigned char *)(a1 + v5[14]) = *(unsigned char *)(a2 + v5[14]);
  *(unsigned char *)(a1 + v5[15]) = *(unsigned char *)(a2 + v5[15]);
  *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
  uint64_t v9 = v5[17];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v10 = *(void *)v11;
  uint64_t v12 = v5[18];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  *(void *)(a1 + v5[19]) = *(void *)(a2 + v5[19]);
  *(void *)(a1 + v5[20]) = *(void *)(a2 + v5[20]);
  *(_OWORD *)(a1 + v5[21]) = *(_OWORD *)(a2 + v5[21]);
  *(unsigned char *)(a1 + v5[22]) = *(unsigned char *)(a2 + v5[22]);
  return a1;
}

uint64_t assignWithTake for TelemetryEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for NetworkEventData();
  *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  *(void *)(a1 + v5[7]) = *(void *)(a2 + v5[7]);
  *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
  *(void *)(a1 + v5[9]) = *(void *)(a2 + v5[9]);
  uint64_t v6 = v5[10];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
  *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
  *(void *)(a1 + v5[13]) = *(void *)(a2 + v5[13]);
  *(unsigned char *)(a1 + v5[14]) = *(unsigned char *)(a2 + v5[14]);
  *(unsigned char *)(a1 + v5[15]) = *(unsigned char *)(a2 + v5[15]);
  uint64_t v9 = v5[16];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *uint64_t v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = v5[17];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = v5[18];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(a1 + v5[19]) = *(void *)(a2 + v5[19]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[20]) = *(void *)(a2 + v5[20]);
  swift_bridgeObjectRelease();
  uint64_t v20 = v5[21];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[22]) = *(unsigned char *)(a2 + v5[22]);
  return a1;
}

uint64_t getEnumTagSinglePayload for TelemetryEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAE6884);
}

uint64_t sub_20AAE6884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_2(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for NetworkEventData);
}

uint64_t __swift_get_extra_inhabitant_indexTm_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for TelemetryEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAE6920);
}

uint64_t sub_20AAE6920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_2(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for NetworkEventData);
}

uint64_t __swift_store_extra_inhabitant_indexTm_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t sub_20AAE69AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20AAE69C4(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for NetworkEventData);
}

uint64_t sub_20AAE69C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TelemetryEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AAE6AF0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TelemetryEvent.Model.CodingKeys()
{
  return &type metadata for TelemetryEvent.Model.CodingKeys;
}

unint64_t sub_20AAE6B2C()
{
  unint64_t result = qword_267656310;
  if (!qword_267656310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656310);
  }
  return result;
}

unint64_t sub_20AAE6B84()
{
  unint64_t result = qword_267656318;
  if (!qword_267656318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656318);
  }
  return result;
}

unint64_t sub_20AAE6BDC()
{
  unint64_t result = qword_267656320;
  if (!qword_267656320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656320);
  }
  return result;
}

uint64_t sub_20AAE6C30(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA89B0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_20AAE6CB8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC50590, MEMORY[0x263F24D10]);
}

uint64_t static AppSessionResignEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4E170, MEMORY[0x263F24D18], (uint64_t)qword_26AC50590, a1);
}

uint64_t static AppSessionResignEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAE6D20(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC505A8, MEMORY[0x263F24DC8]);
}

uint64_t static AppSessionResignEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4E178, MEMORY[0x263F24DD8], (uint64_t)qword_26AC505A8, a1);
}

uint64_t sub_20AAE6D80()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656328);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656328);
  return sub_20AB85D30();
}

uint64_t static AppSessionResignEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC520C0, MEMORY[0x263F24DE8], (uint64_t)qword_267656328, a1);
}

uint64_t AppSessionResignEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AppSessionResignEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AppSessionResignEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionResignEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionResignEvent(0) + 20);
  sub_20AAE6F3C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppSessionResignEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_26AC4E180);
}

void sub_20AAE6F3C()
{
  if (!qword_26AC4E610)
  {
    sub_20A97C818();
    sub_20A97C86C();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E610);
    }
  }
}

uint64_t AppSessionResignEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionResignEvent(0) + 20);
  sub_20AAE6F3C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionResignEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionResignEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for AppSessionResignEvent(0) + 20);
  sub_20AAE6F3C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t AppSessionResignEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AppSessionResignEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for AppSessionResignEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for AppSessionResignEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656358);
}

uint64_t AppSessionResignEvent.Model.init(eventData:orientationData:)@<X0>(uint64_t a1@<X0>, __int16 *a2@<X1>, uint64_t a3@<X8>)
{
  __int16 v5 = *a2;
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for AppSessionResignEvent.Model(0);
  *(_WORD *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_20AAE720C()
{
  if (*v0) {
    return 0x7461746E6569726FLL;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AAE7258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAE89B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAE7280(uint64_t a1)
{
  unint64_t v2 = sub_20AAE74C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAE72BC(uint64_t a1)
{
  unint64_t v2 = sub_20AAE74C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppSessionResignEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AAE7868(0, &qword_267656340, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE74C4();
  sub_20AB86DC0();
  char v13 = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    __int16 v12 = *(_WORD *)(v3 + *(int *)(type metadata accessor for AppSessionResignEvent.Model(0) + 20));
    v11[12] = 1;
    sub_20A97C86C();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AAE74C4()
{
  unint64_t result = qword_267656348;
  if (!qword_267656348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656348);
  }
  return result;
}

uint64_t AppSessionResignEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v23 = sub_20AB85FC0();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAE7868(0, &qword_267656350, MEMORY[0x263F8E040]);
  uint64_t v24 = v6;
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for AppSessionResignEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE74C4();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __int16 v12 = v11;
  uint64_t v13 = v21;
  char v27 = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v23;
  sub_20AB86B80();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v19 = (uint64_t)v12;
  v15(v12, v5, v14);
  char v25 = 1;
  sub_20A97C818();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v24);
  uint64_t v17 = v19;
  uint64_t v16 = v20;
  *(_WORD *)(v19 + *(int *)(v9 + 20)) = v26;
  sub_20AAE78CC(v17, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AAE7930(v17);
}

void sub_20AAE7868(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAE74C4();
    unint64_t v7 = a3(a1, &type metadata for AppSessionResignEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAE78CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppSessionResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AAE7930(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppSessionResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AAE798C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionResignEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAE79A4(void *a1)
{
  return AppSessionResignEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AAE79BC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4E170, MEMORY[0x263F24D18], (uint64_t)qword_26AC50590, a1);
}

uint64_t sub_20AAE79F4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4E178, MEMORY[0x263F24DD8], (uint64_t)qword_26AC505A8, a1);
}

uint64_t sub_20AAE7A2C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC520C0, MEMORY[0x263F24DE8], (uint64_t)qword_267656328, a1);
}

uint64_t sub_20AAE7A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AAE6F3C();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionResignEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AAE6F3C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for AppSessionResignEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AAE6F3C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for AppSessionResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAE6F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for AppSessionResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAE6F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for AppSessionResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAE6F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for AppSessionResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAE6F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAE7FCC);
}

uint64_t sub_20AAE7FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20AAE6F3C();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for AppSessionResignEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAE80D8);
}

uint64_t sub_20AAE80D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20AAE6F3C();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_20AAE81DC()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AAE6F3C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionResignEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(_WORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_WORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for AppSessionResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(_WORD *)(a1 + *(int *)(a3 + 20)) = *(_WORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for AppSessionResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t initializeWithTake for AppSessionResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_WORD *)(a1 + *(int *)(a3 + 20)) = *(_WORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for AppSessionResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_WORD *)(a1 + *(int *)(a3 + 20)) = *(_WORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAE8584);
}

uint64_t sub_20AAE8584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 1);
    if (v10 >= 5) {
      return v10 - 4;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for AppSessionResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAE8658);
}

uint64_t sub_20AAE8658(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 1) = a2 + 4;
  }
  return result;
}

uint64_t sub_20AAE8718()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppSessionResignEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAE8878);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppSessionResignEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionResignEvent.Model.CodingKeys;
}

unint64_t sub_20AAE88B4()
{
  unint64_t result = qword_267656368;
  if (!qword_267656368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656368);
  }
  return result;
}

unint64_t sub_20AAE890C()
{
  unint64_t result = qword_267656370;
  if (!qword_267656370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656370);
  }
  return result;
}

unint64_t sub_20AAE8964()
{
  unint64_t result = qword_267656378;
  if (!qword_267656378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656378);
  }
  return result;
}

uint64_t sub_20AAE89B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

StocksAnalytics::PerformanceDisplayType_optional __swiftcall PerformanceDisplayType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t PerformanceDisplayType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6563697270;
      break;
    case 2:
      uint64_t result = 0x614374656B72616DLL;
      break;
    case 3:
      uint64_t result = 0x61746E6563726570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAE8BCC(unsigned __int8 *a1, char *a2)
{
  return sub_20AA358D4(*a1, *a2);
}

unint64_t sub_20AAE8BDC()
{
  unint64_t result = qword_267656380;
  if (!qword_267656380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656380);
  }
  return result;
}

uint64_t sub_20AAE8C30()
{
  return sub_20AB86D80();
}

uint64_t sub_20AAE8D10()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AAE8DD8()
{
  return sub_20AB86D80();
}

StocksAnalytics::PerformanceDisplayType_optional sub_20AAE8EB4(Swift::String *a1)
{
  return PerformanceDisplayType.init(rawValue:)(*a1);
}

void sub_20AAE8EC0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6563697270;
      goto LABEL_3;
    case 2:
      *a1 = 0x614374656B72616DLL;
      a1[1] = 0xE900000000000070;
      break;
    case 3:
      *a1 = 0x61746E6563726570;
      a1[1] = 0xEA00000000006567;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20AAE8F60()
{
  return sub_20AB86750();
}

uint64_t sub_20AAE8FC0()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for PerformanceDisplayType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAE90DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformanceDisplayType()
{
  return &type metadata for PerformanceDisplayType;
}

unint64_t sub_20AAE9114()
{
  unint64_t result = qword_26AC50898;
  if (!qword_26AC50898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50898);
  }
  return result;
}

uint64_t sub_20AAE9168(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656388, MEMORY[0x263F24D10]);
}

uint64_t static NonNewsArticleViewResignEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535D0, MEMORY[0x263F24D18], (uint64_t)qword_267656388, a1);
}

uint64_t static NonNewsArticleViewResignEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAE91D0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_2676563A0, MEMORY[0x263F24DC8]);
}

uint64_t static NonNewsArticleViewResignEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535D8, MEMORY[0x263F24DD8], (uint64_t)qword_2676563A0, a1);
}

uint64_t sub_20AAE9230()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676563B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676563B8);
  return sub_20AB85D30();
}

uint64_t static NonNewsArticleViewResignEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535E0, MEMORY[0x263F24DE8], (uint64_t)qword_2676563B8, a1);
}

uint64_t NonNewsArticleViewResignEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NonNewsArticleViewResignEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NonNewsArticleViewResignEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewResignEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 20);
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NonNewsArticleViewResignEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676563E8);
}

uint64_t NonNewsArticleViewResignEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 20);
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResignEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewResignEvent.nonNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 24);
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleViewResignEvent.nonNewsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 24);
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResignEvent.nonNewsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewResignEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 28);
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleViewResignEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent(0) + 28);
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewResignEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewResignEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NonNewsArticleViewResignEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t NonNewsArticleViewResignEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NonNewsArticleViewResignEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NonNewsArticleViewResignEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676563F8);
}

uint64_t NonNewsArticleViewResignEvent.Model.nonNewsArticleData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewResignEvent.Model(0) + 24));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleViewResignEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

__n128 NonNewsArticleViewResignEvent.Model.init(eventData:viewData:nonNewsArticleData:orientationData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, __int16 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  __int16 v9 = *((_WORD *)a2 + 8);
  __n128 v18 = (__n128)a3[1];
  long long v19 = *a3;
  uint64_t v10 = *((void *)a3 + 4);
  uint64_t v11 = *((void *)a3 + 5);
  __int16 v12 = *a4;
  uint64_t v13 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a5, a1, v13);
  uint64_t v14 = (int *)type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
  uint64_t v15 = a5 + v14[5];
  *(void *)uint64_t v15 = v7;
  *(void *)(v15 + 8) = v8;
  *(_WORD *)(v15 + 16) = v9;
  uint64_t v16 = a5 + v14[6];
  __n128 result = v18;
  *(_OWORD *)uint64_t v16 = v19;
  *(__n128 *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = v10;
  *(void *)(v16 + 40) = v11;
  *(_WORD *)(a5 + v14[7]) = v12;
  return result;
}

unint64_t sub_20AAE9C68()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6174614477656976;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAE9D0C(uint64_t a1)
{
  unint64_t v2 = sub_20AAE9FF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAE9D48(uint64_t a1)
{
  unint64_t v2 = sub_20AAE9FF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NonNewsArticleViewResignEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AAEA4D8(0, &qword_2676563D0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE9FF8();
  sub_20AB86DC0();
  LOBYTE(v21) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(void *)&long long v21 = v12;
    *((void *)&v21 + 1) = v13;
    LOWORD(v22) = (_WORD)v11;
    char v25 = 1;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v14 = (long long *)(v3 + v10[6]);
    long long v15 = *v14;
    long long v16 = v14[1];
    uint64_t v18 = *((void *)v14 + 4);
    uint64_t v17 = *((void *)v14 + 5);
    long long v21 = v15;
    long long v22 = v16;
    uint64_t v23 = v18;
    uint64_t v24 = v17;
    char v25 = 2;
    sub_20A9DBEEC();
    sub_20AB86C50();
    LOWORD(v21) = *(_WORD *)(v3 + v10[7]);
    char v25 = 3;
    sub_20A97C86C();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AAE9FF8()
{
  unint64_t result = qword_2676563D8;
  if (!qword_2676563D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676563D8);
  }
  return result;
}

uint64_t NonNewsArticleViewResignEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAEA4D8(0, &qword_2676563E0, MEMORY[0x263F8E040]);
  uint64_t v30 = v6;
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v24 - v7;
  __int16 v9 = (int *)type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAE9FF8();
  uint64_t v31 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v28;
  LOBYTE(v32) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v29;
  uint64_t v15 = v30;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v36 = 1;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v16 = *((void *)&v32 + 1);
  __int16 v17 = v33;
  uint64_t v18 = v12 + v9[5];
  *(void *)uint64_t v18 = v32;
  *(void *)(v18 + 8) = v16;
  *(_WORD *)(v18 + 16) = v17;
  char v36 = 2;
  sub_20A9DBE94();
  sub_20AB86B80();
  long long v19 = v33;
  uint64_t v20 = v34;
  uint64_t v21 = v35;
  uint64_t v22 = v12 + v9[6];
  *(_OWORD *)uint64_t v22 = v32;
  *(_OWORD *)(v22 + 16) = v19;
  *(void *)(v22 + 32) = v20;
  *(void *)(v22 + 40) = v21;
  char v36 = 3;
  sub_20A97C818();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v15);
  *(_WORD *)(v12 + v9[7]) = v32;
  sub_20AAEA53C(v12, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return sub_20AAEA5A0(v12);
}

void sub_20AAEA4D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAE9FF8();
    unint64_t v7 = a3(a1, &type metadata for NonNewsArticleViewResignEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAEA53C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AAEA5A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NonNewsArticleViewResignEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AAEA5FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NonNewsArticleViewResignEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAEA614(void *a1)
{
  return NonNewsArticleViewResignEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AAEA62C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535D0, MEMORY[0x263F24D18], (uint64_t)qword_267656388, a1);
}

uint64_t sub_20AAEA664@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535D8, MEMORY[0x263F24DD8], (uint64_t)qword_2676563A0, a1);
}

uint64_t sub_20AAEA69C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535E0, MEMORY[0x263F24DE8], (uint64_t)qword_2676563B8, a1);
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewResignEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAEA6E8);
}

uint64_t sub_20AAEA6E8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    __int16 v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    __int16 v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  __int16 v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewResignEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAEA93C);
}

uint64_t sub_20AAEA93C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA3CE6C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_20AA3CE6C(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_20AA3CE6C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAEAB9C);
}

uint64_t sub_20AAEAB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewResignEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAEAC74);
}

uint64_t sub_20AAEAC74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AAEAD34()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NonNewsArticleViewResignEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAEAEA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleViewResignEvent.Model.CodingKeys()
{
  return &type metadata for NonNewsArticleViewResignEvent.Model.CodingKeys;
}

unint64_t sub_20AAEAEE4()
{
  unint64_t result = qword_267656408;
  if (!qword_267656408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656408);
  }
  return result;
}

unint64_t sub_20AAEAF3C()
{
  unint64_t result = qword_267656410;
  if (!qword_267656410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656410);
  }
  return result;
}

unint64_t sub_20AAEAF94()
{
  unint64_t result = qword_267656418;
  if (!qword_267656418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656418);
  }
  return result;
}

uint64_t static PurchaseData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t PurchaseData.purchaseID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PurchaseData.purchaseID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PurchaseData.purchaseID.modify())()
{
  return nullsub_1;
}

void PurchaseData.purchaseType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *PurchaseData.purchaseType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*PurchaseData.purchaseType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::PurchaseData __swiftcall PurchaseData.init(purchaseID:purchaseType:)(Swift::String purchaseID, StocksAnalytics::PurchaseType purchaseType)
{
  char v3 = *(unsigned char *)purchaseType;
  *(Swift::String *)uint64_t v2 = purchaseID;
  *(unsigned char *)(v2 + 16) = v3;
  result.purchaseID = purchaseID;
  result.purchaseType = purchaseType;
  return result;
}

uint64_t sub_20AAEB0C0()
{
  return 0x6573616863727570;
}

uint64_t sub_20AAEB0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAEB8F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAEB11C(uint64_t a1)
{
  unint64_t v2 = sub_20AAEB334();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAEB158(uint64_t a1)
{
  unint64_t v2 = sub_20AAEB334();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PurchaseData.encode(to:)(void *a1)
{
  sub_20AAEB5EC(0, &qword_26AC51848, MEMORY[0x263F8E0C0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - v6;
  int v14 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1;
  uint64_t v11 = v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_20AAEB334();
  sub_20AB86DC0();
  char v17 = 0;
  sub_20AB86C10();
  if (!v2)
  {
    char v16 = v14;
    char v15 = 1;
    sub_20AAEB388();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

unint64_t sub_20AAEB334()
{
  unint64_t result = qword_26AC4ECC0;
  if (!qword_26AC4ECC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECC0);
  }
  return result;
}

unint64_t sub_20AAEB388()
{
  unint64_t result = qword_26AC4ECE8;
  if (!qword_26AC4ECE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECE8);
  }
  return result;
}

uint64_t PurchaseData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AAEB5EC(0, &qword_267656420, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAEB334();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v18 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  char v16 = 1;
  sub_20AAEB650();
  swift_bridgeObjectRetain();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v13 = v17;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_20AAEB5EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAEB334();
    unint64_t v7 = a3(a1, &type metadata for PurchaseData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AAEB650()
{
  unint64_t result = qword_267656428;
  if (!qword_267656428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656428);
  }
  return result;
}

uint64_t sub_20AAEB6AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PurchaseData.init(from:)(a1, a2);
}

uint64_t sub_20AAEB6C4(void *a1)
{
  return PurchaseData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PurchaseData()
{
  return &type metadata for PurchaseData;
}

unsigned char *storeEnumTagSinglePayload for PurchaseData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAEB7B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseData.CodingKeys()
{
  return &type metadata for PurchaseData.CodingKeys;
}

unint64_t sub_20AAEB7F4()
{
  unint64_t result = qword_267656430;
  if (!qword_267656430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656430);
  }
  return result;
}

unint64_t sub_20AAEB84C()
{
  unint64_t result = qword_26AC4ECD0;
  if (!qword_26AC4ECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECD0);
  }
  return result;
}

unint64_t sub_20AAEB8A4()
{
  unint64_t result = qword_26AC4ECC8;
  if (!qword_26AC4ECC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECC8);
  }
  return result;
}

uint64_t sub_20AAEB8F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6573616863727570 && a2 == 0xEA00000000004449;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static FeedPositionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t FeedPositionData.position.getter()
{
  return *v0;
}

uint64_t FeedPositionData.position.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FeedPositionData.position.modify())()
{
  return nullsub_1;
}

uint64_t FeedPositionData.init(position:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_20AAEBA48(uint64_t a1)
{
  unint64_t v2 = sub_20AAEBC08();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAEBA84(uint64_t a1)
{
  unint64_t v2 = sub_20AAEBC08();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FeedPositionData.encode(to:)(void *a1)
{
  sub_20AAEBDDC(0, &qword_26AC51890, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAEBC08();
  sub_20AB86DC0();
  sub_20AB86C60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AAEBC08()
{
  unint64_t result = qword_26AC4F398;
  if (!qword_26AC4F398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F398);
  }
  return result;
}

uint64_t FeedPositionData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_20AAEBDDC(0, &qword_26AC52AF8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAEBC08();
  sub_20AB86DA0();
  if (!v2)
  {
    int v10 = sub_20AB86B90();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAEBDDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAEBC08();
    unint64_t v7 = a3(a1, &type metadata for FeedPositionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAEBE48@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return FeedPositionData.init(from:)(a1, a2);
}

uint64_t sub_20AAEBE60(void *a1)
{
  sub_20AAEBDDC(0, &qword_26AC51890, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAEBC08();
  sub_20AB86DC0();
  sub_20AB86C60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FeedPositionData()
{
  return &type metadata for FeedPositionData;
}

unsigned char *storeEnumTagSinglePayload for FeedPositionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AAEC054);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedPositionData.CodingKeys()
{
  return &type metadata for FeedPositionData.CodingKeys;
}

unint64_t sub_20AAEC090()
{
  unint64_t result = qword_267656438;
  if (!qword_267656438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656438);
  }
  return result;
}

unint64_t sub_20AAEC0E8()
{
  unint64_t result = qword_26AC4F3A8;
  if (!qword_26AC4F3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F3A8);
  }
  return result;
}

unint64_t sub_20AAEC140()
{
  unint64_t result = qword_26AC4F3A0;
  if (!qword_26AC4F3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F3A0);
  }
  return result;
}

uint64_t static ArticleScienceData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

double ArticleScienceData.newsComputedGlobalScoreCoefficient.getter()
{
  return *(double *)v0;
}

void ArticleScienceData.newsComputedGlobalScoreCoefficient.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*ArticleScienceData.newsComputedGlobalScoreCoefficient.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsUserFeedbackScore.getter()
{
  return *(double *)(v0 + 8);
}

void ArticleScienceData.newsUserFeedbackScore.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*ArticleScienceData.newsUserFeedbackScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsAgedPersonalizationScore.getter()
{
  return *(double *)(v0 + 16);
}

void ArticleScienceData.newsAgedPersonalizationScore.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*ArticleScienceData.newsAgedPersonalizationScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsDiversifiedPersonalizationScore.getter()
{
  return *(double *)(v0 + 24);
}

void ArticleScienceData.newsDiversifiedPersonalizationScore.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*ArticleScienceData.newsDiversifiedPersonalizationScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsFeatureCtr.getter()
{
  return *(double *)(v0 + 32);
}

void ArticleScienceData.newsFeatureCtr.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*ArticleScienceData.newsFeatureCtr.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsPersonalizationScore.getter()
{
  return *(double *)(v0 + 40);
}

void ArticleScienceData.newsPersonalizationScore.setter(double a1)
{
  *(double *)(v1 + 40) = a1;
}

uint64_t (*ArticleScienceData.newsPersonalizationScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsPaidNonPaidSubscriptionCtr.getter()
{
  return *(double *)(v0 + 48);
}

void ArticleScienceData.newsPaidNonPaidSubscriptionCtr.setter(double a1)
{
  *(double *)(v1 + 48) = a1;
}

uint64_t (*ArticleScienceData.newsPaidNonPaidSubscriptionCtr.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsSubscribedChannelCtr.getter()
{
  return *(double *)(v0 + 56);
}

void ArticleScienceData.newsSubscribedChannelCtr.setter(double a1)
{
  *(double *)(v1 + 56) = a1;
}

uint64_t (*ArticleScienceData.newsSubscribedChannelCtr.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsAutoSubscribeCtr.getter()
{
  return *(double *)(v0 + 64);
}

void ArticleScienceData.newsAutoSubscribeCtr.setter(double a1)
{
  *(double *)(v1 + 64) = a1;
}

uint64_t (*ArticleScienceData.newsAutoSubscribeCtr.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.newsFirstPassPersonalizationScore.getter()
{
  return *(double *)(v0 + 72);
}

void ArticleScienceData.newsFirstPassPersonalizationScore.setter(double a1)
{
  *(double *)(v1 + 72) = a1;
}

uint64_t (*ArticleScienceData.newsFirstPassPersonalizationScore.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.stocksFractionalCohortMembership.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ArticleScienceData.stocksFractionalCohortMembership.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*ArticleScienceData.stocksFractionalCohortMembership.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksNewsPersonalizationScore.getter()
{
  return *(double *)(v0 + 88);
}

void ArticleScienceData.stocksNewsPersonalizationScore.setter(double a1)
{
  *(double *)(v1 + 88) = a1;
}

uint64_t (*ArticleScienceData.stocksNewsPersonalizationScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksGlobalScore.getter()
{
  return *(double *)(v0 + 96);
}

void ArticleScienceData.stocksGlobalScore.setter(double a1)
{
  *(double *)(v1 + 96) = a1;
}

uint64_t (*ArticleScienceData.stocksGlobalScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksTabiScore.getter()
{
  return *(double *)(v0 + 104);
}

void ArticleScienceData.stocksTabiScore.setter(double a1)
{
  *(double *)(v1 + 104) = a1;
}

uint64_t (*ArticleScienceData.stocksTabiScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksRealTimeUserFeedbackScore.getter()
{
  return *(double *)(v0 + 112);
}

void ArticleScienceData.stocksRealTimeUserFeedbackScore.setter(double a1)
{
  *(double *)(v1 + 112) = a1;
}

uint64_t (*ArticleScienceData.stocksRealTimeUserFeedbackScore.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.stocksSubscriptionCount.getter()
{
  return *(unsigned int *)(v0 + 120);
}

uint64_t ArticleScienceData.stocksSubscriptionCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 120) = result;
  return result;
}

uint64_t (*ArticleScienceData.stocksSubscriptionCount.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksImportanceScore.getter()
{
  return *(double *)(v0 + 128);
}

void ArticleScienceData.stocksImportanceScore.setter(double a1)
{
  *(double *)(v1 + 128) = a1;
}

uint64_t (*ArticleScienceData.stocksImportanceScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksPublisherPrior.getter()
{
  return *(double *)(v0 + 136);
}

void ArticleScienceData.stocksPublisherPrior.setter(double a1)
{
  *(double *)(v1 + 136) = a1;
}

uint64_t (*ArticleScienceData.stocksPublisherPrior.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.stocksHasBeenRead.getter()
{
  return *(unsigned __int8 *)(v0 + 144);
}

uint64_t ArticleScienceData.stocksHasBeenRead.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 144) = result;
  return result;
}

uint64_t (*ArticleScienceData.stocksHasBeenRead.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.stocksChannelDiversityRank.getter()
{
  return *(unsigned int *)(v0 + 148);
}

uint64_t ArticleScienceData.stocksChannelDiversityRank.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 148) = result;
  return result;
}

uint64_t (*ArticleScienceData.stocksChannelDiversityRank.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.stocksImportanceScoreRank.getter()
{
  return *(unsigned int *)(v0 + 152);
}

uint64_t ArticleScienceData.stocksImportanceScoreRank.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 152) = result;
  return result;
}

uint64_t (*ArticleScienceData.stocksImportanceScoreRank.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksPersonalizedScore.getter()
{
  return *(double *)(v0 + 160);
}

void ArticleScienceData.stocksPersonalizedScore.setter(double a1)
{
  *(double *)(v1 + 160) = a1;
}

uint64_t (*ArticleScienceData.stocksPersonalizedScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksTimeDecayedScore.getter()
{
  return *(double *)(v0 + 168);
}

void ArticleScienceData.stocksTimeDecayedScore.setter(double a1)
{
  *(double *)(v1 + 168) = a1;
}

uint64_t (*ArticleScienceData.stocksTimeDecayedScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksDiversifiedScore.getter()
{
  return *(double *)(v0 + 176);
}

void ArticleScienceData.stocksDiversifiedScore.setter(double a1)
{
  *(double *)(v1 + 176) = a1;
}

uint64_t (*ArticleScienceData.stocksDiversifiedScore.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksArticleHalfLife.getter()
{
  return *(double *)(v0 + 184);
}

void ArticleScienceData.stocksArticleHalfLife.setter(double a1)
{
  *(double *)(v1 + 184) = a1;
}

uint64_t (*ArticleScienceData.stocksArticleHalfLife.modify())()
{
  return nullsub_1;
}

double ArticleScienceData.stocksArticleAge.getter()
{
  return *(double *)(v0 + 192);
}

void ArticleScienceData.stocksArticleAge.setter(double a1)
{
  *(double *)(v1 + 192) = a1;
}

uint64_t (*ArticleScienceData.stocksArticleAge.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScienceData.init(newsComputedGlobalScoreCoefficient:newsUserFeedbackScore:newsAgedPersonalizationScore:newsDiversifiedPersonalizationScore:newsFeatureCtr:newsPersonalizationScore:newsPaidNonPaidSubscriptionCtr:newsSubscribedChannelCtr:newsAutoSubscribeCtr:newsFirstPassPersonalizationScore:stocksFractionalCohortMembership:stocksNewsPersonalizationScore:stocksGlobalScore:stocksTabiScore:stocksRealTimeUserFeedbackScore:stocksSubscriptionCount:stocksImportanceScore:stocksPublisherPrior:stocksHasBeenRead:stocksChannelDiversityRank:stocksImportanceScoreRank:stocksPersonalizedScore:stocksTimeDecayedScore:stocksDiversifiedScore:stocksArticleHalfLife:stocksArticleAge:)@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>, double a12@<D5>, double a13@<D6>, double a14@<D7>, uint64_t a15, uint64_t a16, long long a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,long long a22,long long a23,uint64_t a24)
{
  *(double *)a6 = a7;
  *(double *)(a6 + 8) = a8;
  *(double *)(a6 + 16) = a9;
  *(double *)(a6 + 24) = a10;
  *(double *)(a6 + 32) = a11;
  *(double *)(a6 + 40) = a12;
  *(double *)(a6 + 48) = a13;
  *(double *)(a6 + 56) = a14;
  *(void *)(a6 + 64) = a15;
  *(void *)(a6 + 72) = a16;
  *(void *)(a6 + 80) = result;
  *(_OWORD *)(a6 + 88) = a17;
  *(void *)(a6 + 104) = a18;
  *(void *)(a6 + 112) = a19;
  *(_DWORD *)(a6 + 120) = a2;
  *(void *)(a6 + 128) = a20;
  *(void *)(a6 + 136) = a21;
  *(unsigned char *)(a6 + 144) = a3;
  *(_DWORD *)(a6 + 148) = a4;
  *(_DWORD *)(a6 + 152) = a5;
  *(_OWORD *)(a6 + 160) = a22;
  *(_OWORD *)(a6 + 176) = a23;
  *(void *)(a6 + 192) = a24;
  return result;
}

unint64_t sub_20AAEC6F4(char a1)
{
  unint64_t result = 0xD000000000000022;
  switch(a1)
  {
    case 1:
    case 16:
    case 24:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0x746165467377656ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000021;
      break;
    case 10:
      unint64_t result = 0xD000000000000020;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 12:
      unint64_t result = 0xD000000000000011;
      break;
    case 13:
      unint64_t result = 0x6154736B636F7473;
      break;
    case 14:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000017;
      break;
    case 17:
      unint64_t result = 0xD000000000000014;
      break;
    case 18:
      unint64_t result = 0xD000000000000011;
      break;
    case 19:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 20:
      unint64_t result = 0xD000000000000019;
      break;
    case 21:
      unint64_t result = 0xD000000000000017;
      break;
    case 22:
      unint64_t result = 0xD000000000000016;
      break;
    case 23:
      unint64_t result = 0xD000000000000016;
      break;
    case 25:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20AAEC964()
{
  return sub_20AAEC6F4(*v0);
}

uint64_t sub_20AAEC96C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAEE0E8(a1, a2);
  *a3 = result;
  return result;
}

void sub_20AAEC994(unsigned char *a1@<X8>)
{
  *a1 = 26;
}

uint64_t sub_20AAEC9A0(uint64_t a1)
{
  unint64_t v2 = sub_20AAED0A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAEC9DC(uint64_t a1)
{
  unint64_t v2 = sub_20AAED0A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ArticleScienceData.encode(to:)(void *a1)
{
  sub_20AAEDA08(0, &qword_26AC518B8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)v17 - v6;
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v31 = *(void *)(v1 + 16);
  uint64_t v32 = v8;
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v27 = *(void *)(v1 + 32);
  uint64_t v28 = v9;
  uint64_t v10 = *(void *)(v1 + 40);
  uint64_t v25 = *(void *)(v1 + 48);
  uint64_t v26 = v10;
  uint64_t v11 = *(void *)(v1 + 56);
  uint64_t v23 = *(void *)(v1 + 64);
  uint64_t v24 = v11;
  uint64_t v22 = *(void *)(v1 + 72);
  uint64_t v30 = *(void *)(v1 + 80);
  uint64_t v21 = *(void *)(v1 + 88);
  uint64_t v20 = *(void *)(v1 + 96);
  uint64_t v19 = *(void *)(v1 + 104);
  uint64_t v18 = *(void *)(v1 + 112);
  int v29 = *(_DWORD *)(v1 + 120);
  v17[3] = *(unsigned __int8 *)(v1 + 144);
  int v12 = *(_DWORD *)(v1 + 148);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAED0A8();
  sub_20AB86DC0();
  LOBYTE(v35) = 0;
  uint64_t v13 = v4;
  uint64_t v14 = v33;
  sub_20AB86C30();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v16 = v30;
  LODWORD(v33) = v12;
  LOBYTE(v35) = 1;
  sub_20AB86C30();
  LOBYTE(v35) = 2;
  sub_20AB86C30();
  LOBYTE(v35) = 3;
  sub_20AB86C30();
  LOBYTE(v35) = 4;
  sub_20AB86C30();
  LOBYTE(v35) = 5;
  sub_20AB86C30();
  LOBYTE(v35) = 6;
  sub_20AB86C30();
  LOBYTE(v35) = 7;
  sub_20AB86C30();
  LOBYTE(v35) = 8;
  sub_20AB86C30();
  LOBYTE(v35) = 9;
  sub_20AB86C30();
  uint64_t v35 = v16;
  char v34 = 10;
  sub_20AAED0FC();
  sub_20AAEDA6C(&qword_26AC516C8, (void (*)(void))sub_20AAC0750);
  sub_20AB86C50();
  LOBYTE(v35) = 11;
  sub_20AB86C30();
  LOBYTE(v35) = 12;
  sub_20AB86C30();
  LOBYTE(v35) = 13;
  sub_20AB86C30();
  LOBYTE(v35) = 14;
  sub_20AB86C30();
  LOBYTE(v35) = 15;
  sub_20AB86C60();
  LOBYTE(v35) = 16;
  sub_20AB86C30();
  LOBYTE(v35) = 17;
  sub_20AB86C30();
  LOBYTE(v35) = 18;
  sub_20AB86C20();
  LOBYTE(v35) = 19;
  sub_20AB86C60();
  LOBYTE(v35) = 20;
  sub_20AB86C60();
  LOBYTE(v35) = 21;
  sub_20AB86C30();
  LOBYTE(v35) = 22;
  sub_20AB86C30();
  LOBYTE(v35) = 23;
  sub_20AB86C30();
  LOBYTE(v35) = 24;
  sub_20AB86C30();
  LOBYTE(v35) = 25;
  sub_20AB86C30();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

unint64_t sub_20AAED0A8()
{
  unint64_t result = qword_26AC4FA88;
  if (!qword_26AC4FA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FA88);
  }
  return result;
}

void sub_20AAED0FC()
{
  if (!qword_26AC516C0)
  {
    unint64_t v0 = sub_20AB86790();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC516C0);
    }
  }
}

uint64_t ArticleScienceData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AAEDA08(0, &qword_26AC52B00, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v52 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAED0A8();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v69[0]) = 0;
  sub_20AB86B60();
  uint64_t v11 = v10;
  LOBYTE(v69[0]) = 1;
  sub_20AB86B60();
  uint64_t v13 = v12;
  LOBYTE(v69[0]) = 2;
  sub_20AB86B60();
  uint64_t v15 = v14;
  LOBYTE(v69[0]) = 3;
  sub_20AB86B60();
  uint64_t v17 = v16;
  LOBYTE(v69[0]) = 4;
  sub_20AB86B60();
  uint64_t v19 = v18;
  LOBYTE(v69[0]) = 5;
  sub_20AB86B60();
  uint64_t v21 = v20;
  LOBYTE(v69[0]) = 6;
  sub_20AB86B60();
  uint64_t v23 = v22;
  LOBYTE(v69[0]) = 7;
  sub_20AB86B60();
  uint64_t v86 = v24;
  LOBYTE(v69[0]) = 8;
  sub_20AB86B60();
  uint64_t v26 = v25;
  LOBYTE(v69[0]) = 9;
  sub_20AB86B60();
  uint64_t v66 = v27;
  sub_20AAED0FC();
  LOBYTE(v67) = 10;
  sub_20AAEDA6C(&qword_26AC52B08, (void (*)(void))sub_20AAC06F8);
  sub_20AB86B80();
  uint64_t v28 = v69[0];
  LOBYTE(v69[0]) = 11;
  swift_bridgeObjectRetain();
  sub_20AB86B60();
  uint64_t v65 = v29;
  LOBYTE(v69[0]) = 12;
  sub_20AB86B60();
  uint64_t v64 = v30;
  LOBYTE(v69[0]) = 13;
  sub_20AB86B60();
  uint64_t v63 = v31;
  LOBYTE(v69[0]) = 14;
  sub_20AB86B60();
  uint64_t v62 = v32;
  LOBYTE(v69[0]) = 15;
  int v33 = sub_20AB86B90();
  LOBYTE(v69[0]) = 16;
  sub_20AB86B60();
  uint64_t v61 = v34;
  LOBYTE(v69[0]) = 17;
  sub_20AB86B60();
  uint64_t v60 = v35;
  LOBYTE(v69[0]) = 18;
  int v59 = sub_20AB86B50();
  LOBYTE(v69[0]) = 19;
  int v58 = sub_20AB86B90();
  LOBYTE(v69[0]) = 20;
  int v57 = sub_20AB86B90();
  LOBYTE(v69[0]) = 21;
  sub_20AB86B60();
  uint64_t v56 = v36;
  LOBYTE(v69[0]) = 22;
  sub_20AB86B60();
  uint64_t v55 = v37;
  LOBYTE(v69[0]) = 23;
  sub_20AB86B60();
  uint64_t v54 = v38;
  LOBYTE(v69[0]) = 24;
  sub_20AB86B60();
  uint64_t v53 = v39;
  char v83 = 25;
  sub_20AB86B60();
  uint64_t v52 = v40;
  v59 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v21;
  uint64_t v41 = v86;
  *(void *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = v41;
  uint64_t v42 = v66;
  *(void *)(a2 + 64) = v26;
  *(void *)(a2 + 72) = v42;
  *(void *)(a2 + 80) = v28;
  uint64_t v43 = v64;
  *(void *)(a2 + 88) = v65;
  *(void *)(a2 + 96) = v43;
  uint64_t v44 = v62;
  *(void *)(a2 + 104) = v63;
  *(void *)(a2 + 112) = v44;
  *(_DWORD *)(a2 + 120) = v33;
  uint64_t v45 = v60;
  *(void *)(a2 + 128) = v61;
  *(void *)(a2 + 136) = v45;
  char v46 = v59;
  *(unsigned char *)(a2 + 144) = v59;
  *(_WORD *)(a2 + 145) = v67;
  *(unsigned char *)(a2 + 147) = v68;
  int v47 = v58;
  int v48 = v57;
  *(_DWORD *)(a2 + 148) = v58;
  *(_DWORD *)(a2 + 152) = v48;
  uint64_t v49 = v55;
  *(void *)(a2 + 160) = v56;
  *(void *)(a2 + 168) = v49;
  uint64_t v50 = v53;
  *(void *)(a2 + 176) = v54;
  *(void *)(a2 + 184) = v50;
  *(void *)(a2 + 192) = v52;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v69[0] = v11;
  v69[1] = v13;
  v69[2] = v15;
  v69[3] = v17;
  v69[4] = v19;
  v69[5] = v21;
  v69[6] = v23;
  v69[7] = v86;
  v69[8] = v26;
  v69[9] = v66;
  v69[10] = v28;
  v69[11] = v65;
  v69[12] = v64;
  v69[13] = v63;
  v69[14] = v62;
  int v70 = v33;
  uint64_t v71 = v61;
  uint64_t v72 = v60;
  char v73 = v46;
  __int16 v74 = v84;
  char v75 = v85;
  int v76 = v47;
  int v77 = v48;
  uint64_t v78 = v56;
  uint64_t v79 = v55;
  uint64_t v80 = v54;
  uint64_t v81 = v53;
  uint64_t v82 = v52;
  return sub_20A9C74B0((uint64_t)v69);
}

void sub_20AAEDA08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAED0A8();
    unint64_t v7 = a3(a1, &type metadata for ArticleScienceData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAEDA6C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20AAED0FC();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AAEDAE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleScienceData.init(from:)(a1, a2);
}

uint64_t sub_20AAEDAF8(void *a1)
{
  return ArticleScienceData.encode(to:)(a1);
}

uint64_t destroy for ArticleScienceData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleScienceData(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 148) = *(void *)(a2 + 148);
  long long v5 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleScienceData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  return a1;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for ArticleScienceData(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 148) = *(void *)(a2 + 148);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScienceData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleScienceData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleScienceData()
{
  return &type metadata for ArticleScienceData;
}

uint64_t getEnumTagSinglePayload for ArticleScienceData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArticleScienceData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *__n128 result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAEDFA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleScienceData.CodingKeys()
{
  return &type metadata for ArticleScienceData.CodingKeys;
}

unint64_t sub_20AAEDFE4()
{
  unint64_t result = qword_267656440;
  if (!qword_267656440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656440);
  }
  return result;
}

unint64_t sub_20AAEE03C()
{
  unint64_t result = qword_26AC4FA98;
  if (!qword_26AC4FA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FA98);
  }
  return result;
}

unint64_t sub_20AAEE094()
{
  unint64_t result = qword_26AC4FA90;
  if (!qword_26AC4FA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FA90);
  }
  return result;
}

uint64_t sub_20AAEE0E8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000022 && a2 == 0x800000020ABA89D0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA8A00 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000020ABA8A20 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000020ABA8A40 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746165467377656ELL && a2 == 0xEE00727443657275 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000020ABA8A70 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000020ABA8A90 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000020ABA8AB0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA8AD0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x800000020ABA8AF0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000020ABA8B20 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000020ABA8B50 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA8B70 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6154736B636F7473 && a2 == 0xEF65726F63536962 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000020ABA8B90 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020ABA8BB0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA8BD0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA8BF0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA8C10 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000020ABA8C30 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000020ABA8C50 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020ABA8C70 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA8C90 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA8CB0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA8CD0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA8CF0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 25;
    }
    else {
      return 26;
    }
  }
}

StocksAnalytics::LinkType_optional __swiftcall LinkType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  uint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *int v2 = v5;
  return result;
}

uint64_t LinkType.rawValue.getter()
{
  if (*v0) {
    return 0x72756F5361746164;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AAEEAD8(char *a1, char *a2)
{
  return sub_20AA341F8(*a1, *a2);
}

unint64_t sub_20AAEEAE8()
{
  unint64_t result = qword_267656448;
  if (!qword_267656448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656448);
  }
  return result;
}

uint64_t sub_20AAEEB3C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AAEEBC4()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AAEEC38()
{
  return sub_20AB86D80();
}

StocksAnalytics::LinkType_optional sub_20AAEECBC(Swift::String *a1)
{
  return LinkType.init(rawValue:)(*a1);
}

void sub_20AAEECC8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  if (*v1) {
    uint64_t v2 = 0x72756F5361746164;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006563;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20AAEED0C()
{
  return sub_20AB86750();
}

uint64_t sub_20AAEED6C()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for LinkType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAEEE88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkType()
{
  return &type metadata for LinkType;
}

unint64_t sub_20AAEEEC0()
{
  unint64_t result = qword_267656450;
  if (!qword_267656450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656450);
  }
  return result;
}

uint64_t static WatchedSymbolListData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t WatchedSymbolListData.symbols.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WatchedSymbolListData.symbols.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*WatchedSymbolListData.symbols.modify())()
{
  return nullsub_1;
}

StocksAnalytics::WatchedSymbolListData __swiftcall WatchedSymbolListData.init(symbols:)(StocksAnalytics::WatchedSymbolListData symbols)
{
  v1->symbols._rawValue = symbols.symbols._rawValue;
  return symbols;
}

uint64_t sub_20AAEEF78()
{
  return 0x736C6F626D7973;
}

uint64_t sub_20AAEEF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736C6F626D7973 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AAEF028(uint64_t a1)
{
  unint64_t v2 = sub_20AAEF228();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAEF064(uint64_t a1)
{
  unint64_t v2 = sub_20AAEF228();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WatchedSymbolListData.encode(to:)(void *a1)
{
  sub_20AAEF440(0, &qword_26AC518F0, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAEF228();
  sub_20AB86DC0();
  v10[1] = v8;
  sub_20A9B8470();
  sub_20A9B8DEC(&qword_26AC516D8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AAEF228()
{
  unint64_t result = qword_26AC50690;
  if (!qword_26AC50690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50690);
  }
  return result;
}

uint64_t WatchedSymbolListData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20AAEF440(0, &qword_26AC517B0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAEF228();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20A9B8470();
    sub_20A9B8DEC(&qword_26AC516E8);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAEF440(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAEF228();
    unint64_t v7 = a3(a1, &type metadata for WatchedSymbolListData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAEF4AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return WatchedSymbolListData.init(from:)(a1, a2);
}

uint64_t sub_20AAEF4C4(void *a1)
{
  return WatchedSymbolListData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for WatchedSymbolListData()
{
  return &type metadata for WatchedSymbolListData;
}

unsigned char *storeEnumTagSinglePayload for WatchedSymbolListData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AAEF588);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchedSymbolListData.CodingKeys()
{
  return &type metadata for WatchedSymbolListData.CodingKeys;
}

unint64_t sub_20AAEF5C4()
{
  unint64_t result = qword_267656458;
  if (!qword_267656458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656458);
  }
  return result;
}

unint64_t sub_20AAEF61C()
{
  unint64_t result = qword_26AC506A0;
  if (!qword_26AC506A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC506A0);
  }
  return result;
}

unint64_t sub_20AAEF674()
{
  unint64_t result = qword_26AC50698;
  if (!qword_26AC50698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50698);
  }
  return result;
}

uint64_t sub_20AAEF6C8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656460, MEMORY[0x263F24D10]);
}

uint64_t static EditWatchListEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535E8, MEMORY[0x263F24D18], (uint64_t)qword_267656460, a1);
}

uint64_t static EditWatchListEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAEF730(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656478, MEMORY[0x263F24DC8]);
}

uint64_t static EditWatchListEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535F0, MEMORY[0x263F24DD8], (uint64_t)qword_267656478, a1);
}

uint64_t sub_20AAEF790()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656490);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656490);
  return sub_20AB85D30();
}

uint64_t static EditWatchListEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676535F8, MEMORY[0x263F24DE8], (uint64_t)qword_267656490, a1);
}

uint64_t EditWatchListEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t EditWatchListEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*EditWatchListEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EditWatchListEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t EditWatchListEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t EditWatchListEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_20AAEF9AC(uint64_t a1)
{
  unint64_t v2 = sub_20AAEFB98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAEF9E8(uint64_t a1)
{
  unint64_t v2 = sub_20AAEFB98();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EditWatchListEvent.Model.encode(to:)(void *a1)
{
  sub_20AAEFE84(0, &qword_2676564A8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAEFB98();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AAEFB98()
{
  unint64_t result = qword_2676564B0;
  if (!qword_2676564B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676564B0);
  }
  return result;
}

uint64_t EditWatchListEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAEFE84(0, &qword_2676564B8, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for EditWatchListEvent.Model(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAEFB98();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_20A985F3C(&qword_26AC4E0C8);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_20AAEFF08((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAEFE84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAEFB98();
    unint64_t v7 = a3(a1, &type metadata for EditWatchListEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for EditWatchListEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676564D0);
}

uint64_t sub_20AAEFF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditWatchListEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AAEFF6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EditWatchListEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAEFF84(void *a1)
{
  sub_20AAEFE84(0, &qword_2676564A8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAEFB98();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20AAF00F8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535E8, MEMORY[0x263F24D18], (uint64_t)qword_267656460, a1);
}

uint64_t sub_20AAF0130@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535F0, MEMORY[0x263F24DD8], (uint64_t)qword_267656478, a1);
}

uint64_t sub_20AAF0168@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676535F8, MEMORY[0x263F24DE8], (uint64_t)qword_267656490, a1);
}

uint64_t getEnumTagSinglePayload for EditWatchListEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAF01B4);
}

uint64_t sub_20AAF01B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t storeEnumTagSinglePayload for EditWatchListEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAF01E0);
}

uint64_t sub_20AAF01E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t type metadata accessor for EditWatchListEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676564C0);
}

uint64_t getEnumTagSinglePayload for EditWatchListEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAF022C);
}

uint64_t sub_20AAF022C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t storeEnumTagSinglePayload for EditWatchListEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAF0258);
}

uint64_t sub_20AAF0258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F24E70]);
}

unsigned char *storeEnumTagSinglePayload for EditWatchListEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AAF030CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EditWatchListEvent.Model.CodingKeys()
{
  return &type metadata for EditWatchListEvent.Model.CodingKeys;
}

unint64_t sub_20AAF0348()
{
  unint64_t result = qword_2676564E0;
  if (!qword_2676564E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676564E0);
  }
  return result;
}

unint64_t sub_20AAF03A0()
{
  unint64_t result = qword_2676564E8;
  if (!qword_2676564E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676564E8);
  }
  return result;
}

unint64_t sub_20AAF03F8()
{
  unint64_t result = qword_2676564F0;
  if (!qword_2676564F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676564F0);
  }
  return result;
}

StocksAnalytics::ViewType_optional __swiftcall ViewType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ViewType.rawValue.getter()
{
  uint64_t v1 = 1684366694;
  if (*v0 != 1) {
    uint64_t v1 = 0x656C6369747261;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AAF04FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA33FD8(*a1, *a2);
}

unint64_t sub_20AAF050C()
{
  unint64_t result = qword_2676564F8;
  if (!qword_2676564F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676564F8);
  }
  return result;
}

uint64_t sub_20AAF0560()
{
  return sub_20AB86D80();
}

uint64_t sub_20AAF05FC()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AAF0684()
{
  return sub_20AB86D80();
}

StocksAnalytics::ViewType_optional sub_20AAF071C(Swift::String *a1)
{
  return ViewType.init(rawValue:)(*a1);
}

void sub_20AAF0728(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1684366694;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656C6369747261;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AAF0780()
{
  return sub_20AB86750();
}

uint64_t sub_20AAF07E0()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ViewType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAF08FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewType()
{
  return &type metadata for ViewType;
}

unint64_t sub_20AAF0934()
{
  unint64_t result = qword_26AC51560;
  if (!qword_26AC51560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51560);
  }
  return result;
}

uint64_t sub_20AAF0988(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656500, MEMORY[0x263F24D10]);
}

uint64_t static CreateWatchlistEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653600, MEMORY[0x263F24D18], (uint64_t)qword_267656500, a1);
}

uint64_t static CreateWatchlistEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAF09F0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656518, MEMORY[0x263F24DC8]);
}

uint64_t static CreateWatchlistEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653608, MEMORY[0x263F24DD8], (uint64_t)qword_267656518, a1);
}

uint64_t sub_20AAF0A50()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656530);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656530);
  return sub_20AB85D30();
}

uint64_t static CreateWatchlistEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653610, MEMORY[0x263F24DE8], (uint64_t)qword_267656530, a1);
}

uint64_t CreateWatchlistEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t CreateWatchlistEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*CreateWatchlistEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t CreateWatchlistEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t CreateWatchlistEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t CreateWatchlistEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_20AAF0C6C(uint64_t a1)
{
  unint64_t v2 = sub_20AAF0E58();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAF0CA8(uint64_t a1)
{
  unint64_t v2 = sub_20AAF0E58();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t CreateWatchlistEvent.Model.encode(to:)(void *a1)
{
  sub_20AAF1144(0, &qword_267656548, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAF0E58();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AAF0E58()
{
  unint64_t result = qword_267656550;
  if (!qword_267656550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656550);
  }
  return result;
}

uint64_t CreateWatchlistEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAF1144(0, &qword_267656558, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v9 = (char *)&v16 - v8;
  uint64_t Watchlist = type metadata accessor for CreateWatchlistEvent.Model(0);
  MEMORY[0x270FA5388](Watchlist - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAF0E58();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_20A985F3C(&qword_26AC4E0C8);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_20AAF11C8((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAF1144(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAF0E58();
    unint64_t v7 = a3(a1, &type metadata for CreateWatchlistEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for CreateWatchlistEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656570);
}

uint64_t sub_20AAF11C8(uint64_t a1, uint64_t a2)
{
  uint64_t Watchlist = type metadata accessor for CreateWatchlistEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Watchlist - 8) + 32))(a2, a1, Watchlist);
  return a2;
}

uint64_t sub_20AAF122C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CreateWatchlistEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAF1244(void *a1)
{
  sub_20AAF1144(0, &qword_267656548, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAF0E58();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20AAF13B8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653600, MEMORY[0x263F24D18], (uint64_t)qword_267656500, a1);
}

uint64_t sub_20AAF13F0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653608, MEMORY[0x263F24DD8], (uint64_t)qword_267656518, a1);
}

uint64_t sub_20AAF1428@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653610, MEMORY[0x263F24DE8], (uint64_t)qword_267656530, a1);
}

uint64_t getEnumTagSinglePayload for CreateWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAF1474);
}

uint64_t sub_20AAF1474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t storeEnumTagSinglePayload for CreateWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAF14A0);
}

uint64_t sub_20AAF14A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t type metadata accessor for CreateWatchlistEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656560);
}

uint64_t getEnumTagSinglePayload for CreateWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAF14EC);
}

uint64_t sub_20AAF14EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t storeEnumTagSinglePayload for CreateWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAF1518);
}

uint64_t sub_20AAF1518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F24E70]);
}

unsigned char *storeEnumTagSinglePayload for CreateWatchlistEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AAF15CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateWatchlistEvent.Model.CodingKeys()
{
  return &type metadata for CreateWatchlistEvent.Model.CodingKeys;
}

unint64_t sub_20AAF1608()
{
  unint64_t result = qword_267656580;
  if (!qword_267656580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656580);
  }
  return result;
}

unint64_t sub_20AAF1660()
{
  unint64_t result = qword_267656588;
  if (!qword_267656588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656588);
  }
  return result;
}

unint64_t sub_20AAF16B8()
{
  unint64_t result = qword_267656590;
  if (!qword_267656590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656590);
  }
  return result;
}

uint64_t static AudioControlMenuData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void AudioControlMenuData.controlType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *AudioControlMenuData.controlType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*AudioControlMenuData.controlType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AudioControlMenuData __swiftcall AudioControlMenuData.init(controlType:)(StocksAnalytics::AudioControlMenuData controlType)
{
  *uint64_t v1 = *(unsigned char *)controlType.controlType;
  return controlType;
}

uint64_t sub_20AAF1758()
{
  return 0x546C6F72746E6F63;
}

uint64_t sub_20AAF1778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x546C6F72746E6F63 && a2 == 0xEB00000000657079)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AAF1828(uint64_t a1)
{
  unint64_t v2 = sub_20AAF19FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAF1864(uint64_t a1)
{
  unint64_t v2 = sub_20AAF19FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AudioControlMenuData.encode(to:)(void *a1)
{
  sub_20AAF1C3C(0, &qword_267656598, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAF19FC();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AAF1A50();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AAF19FC()
{
  unint64_t result = qword_2676565A0;
  if (!qword_2676565A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676565A0);
  }
  return result;
}

unint64_t sub_20AAF1A50()
{
  unint64_t result = qword_2676565A8;
  if (!qword_2676565A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676565A8);
  }
  return result;
}

uint64_t AudioControlMenuData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AAF1C3C(0, &qword_2676565B0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAF19FC();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AAF1CA0();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AAF1C3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAF19FC();
    unint64_t v7 = a3(a1, &type metadata for AudioControlMenuData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AAF1CA0()
{
  unint64_t result = qword_2676565B8;
  if (!qword_2676565B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676565B8);
  }
  return result;
}

unint64_t sub_20AAF1CF8()
{
  unint64_t result = qword_2676565C0;
  if (!qword_2676565C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676565C0);
  }
  return result;
}

unint64_t sub_20AAF1D50()
{
  unint64_t result = qword_2676565C8;
  if (!qword_2676565C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676565C8);
  }
  return result;
}

uint64_t sub_20AAF1DA4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AudioControlMenuData.init(from:)(a1, a2);
}

uint64_t sub_20AAF1DBC(void *a1)
{
  return AudioControlMenuData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for AudioControlMenuData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAF1EA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioControlMenuData()
{
  return &type metadata for AudioControlMenuData;
}

unsigned char *storeEnumTagSinglePayload for AudioControlMenuData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AAF1F74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioControlMenuData.CodingKeys()
{
  return &type metadata for AudioControlMenuData.CodingKeys;
}

unint64_t sub_20AAF1FB0()
{
  unint64_t result = qword_2676565D0;
  if (!qword_2676565D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676565D0);
  }
  return result;
}

unint64_t sub_20AAF2008()
{
  unint64_t result = qword_2676565D8;
  if (!qword_2676565D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676565D8);
  }
  return result;
}

unint64_t sub_20AAF2060()
{
  unint64_t result = qword_2676565E0;
  if (!qword_2676565E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676565E0);
  }
  return result;
}

uint64_t sub_20AAF20B4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_2676565E8, MEMORY[0x263F24D10]);
}

uint64_t static SubscriptionResultEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653618, MEMORY[0x263F24D18], (uint64_t)qword_2676565E8, a1);
}

uint64_t static SubscriptionResultEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AAF211C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656600, MEMORY[0x263F24DC8]);
}

uint64_t static SubscriptionResultEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653620, MEMORY[0x263F24DD8], (uint64_t)qword_267656600, a1);
}

uint64_t sub_20AAF217C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656618);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656618);
  return sub_20AB85D30();
}

uint64_t static SubscriptionResultEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653628, MEMORY[0x263F24DE8], (uint64_t)qword_267656618, a1);
}

uint64_t SubscriptionResultEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SubscriptionResultEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SubscriptionResultEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 20);
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SubscriptionResultEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656650);
}

uint64_t SubscriptionResultEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 20);
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 24);
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 24);
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 28);
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 28);
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 32);
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 32);
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 36);
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 36);
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.purchaseSessionData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 40);
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 40);
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.purchaseData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 44);
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 44);
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.paywallData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.subscriptionResultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 48);
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.subscriptionResultData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 48);
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.subscriptionResultData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.storeKitErrorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 52);
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.storeKitErrorData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 52);
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.storeKitErrorData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.adReferralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 56);
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscriptionResultEvent.adReferralData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 56);
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.adReferralData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 60);
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AAF3400(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t SubscriptionResultEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent(0) + 60);
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscriptionResultEvent.campaignData.modify())()
{
  return nullsub_1;
}

uint64_t SubscriptionResultEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SubscriptionResultEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = *MEMORY[0x263F24D30];
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v6, v9);
  uint64_t v10 = a1 + v4[7];
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v6, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v6, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v6, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v6, v25);
  uint64_t v26 = a1 + v4[15];
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104);

  return v28(v26, v6, v27);
}

uint64_t SubscriptionResultEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SubscriptionResultEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 20);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  LODWORD(v3) = *(_DWORD *)(v3 + 64);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(_DWORD *)(a1 + 64) = v3;
  return sub_20A99BE1C(v4, v5);
}

uint64_t type metadata accessor for SubscriptionResultEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656660);
}

uint64_t SubscriptionResultEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 24);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);

  return sub_20A99BE1C(v4, v5);
}

uint64_t SubscriptionResultEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t SubscriptionResultEvent.Model.purchaseSessionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 36));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 40));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t SubscriptionResultEvent.Model.paywallData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SubscriptionResultEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t SubscriptionResultEvent.Model.subscriptionResultData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SubscriptionResultEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t SubscriptionResultEvent.Model.storeKitErrorData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SubscriptionResultEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t SubscriptionResultEvent.Model.adReferralData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 56));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;

  return sub_20A9F9290(v4, v5);
}

uint64_t SubscriptionResultEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscriptionResultEvent.Model(0) + 60));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20AA261CC(v4, v5);
}

__n128 SubscriptionResultEvent.Model.init(eventData:newsArticleData:channelData:feedData:groupData:purchaseSessionData:purchaseData:paywallData:subscriptionResultData:storeKitErrorData:adReferralData:campaignData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, uint64_t *a12, long long *a13)
{
  long long v35 = a2[1];
  long long v36 = *a2;
  long long v34 = a2[2];
  uint64_t v16 = *((void *)a2 + 6);
  uint64_t v15 = *((void *)a2 + 7);
  int v17 = *((_DWORD *)a2 + 16);
  uint64_t v19 = *((void *)a3 + 2);
  uint64_t v18 = *((void *)a3 + 3);
  __int16 v20 = *((_WORD *)a3 + 16);
  long long v37 = *a3;
  long long v38 = *a4;
  uint64_t v21 = *((void *)a4 + 2);
  long long v40 = a5[1];
  long long v41 = *a5;
  uint64_t v22 = *((void *)a5 + 5);
  uint64_t v39 = *((void *)a5 + 4);
  uint64_t v42 = a6[1];
  uint64_t v43 = *a6;
  uint64_t v45 = a7[1];
  uint64_t v46 = *a7;
  char v44 = *((unsigned char *)a7 + 16);
  char v47 = *a8;
  char v48 = *a10;
  char v49 = *a11;
  uint64_t v50 = a12[1];
  uint64_t v51 = *a12;
  __n128 v54 = (__n128)a13[1];
  long long v55 = *a13;
  uint64_t v52 = *((void *)a13 + 5);
  uint64_t v53 = *((void *)a13 + 4);
  uint64_t v23 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(a9, a1, v23);
  uint64_t v24 = (int *)type metadata accessor for SubscriptionResultEvent.Model(0);
  uint64_t v25 = a9 + v24[5];
  *(_OWORD *)uint64_t v25 = v36;
  *(_OWORD *)(v25 + 16) = v35;
  *(_OWORD *)(v25 + 32) = v34;
  *(void *)(v25 + 48) = v16;
  *(void *)(v25 + 56) = v15;
  *(_DWORD *)(v25 + 64) = v17;
  uint64_t v26 = a9 + v24[6];
  *(_OWORD *)uint64_t v26 = v37;
  *(void *)(v26 + 16) = v19;
  *(void *)(v26 + 24) = v18;
  *(_WORD *)(v26 + 32) = v20;
  uint64_t v27 = a9 + v24[7];
  *(_OWORD *)uint64_t v27 = v38;
  *(void *)(v27 + 16) = v21;
  uint64_t v28 = a9 + v24[8];
  *(_OWORD *)uint64_t v28 = v41;
  *(_OWORD *)(v28 + 16) = v40;
  *(void *)(v28 + 32) = v39;
  *(void *)(v28 + 40) = v22;
  uint64_t v29 = (void *)(a9 + v24[9]);
  *uint64_t v29 = v43;
  v29[1] = v42;
  uint64_t v30 = a9 + v24[10];
  *(void *)uint64_t v30 = v46;
  *(void *)(v30 + 8) = v45;
  *(unsigned char *)(v30 + 16) = v44;
  *(unsigned char *)(a9 + v24[11]) = v47;
  *(unsigned char *)(a9 + v24[12]) = v48;
  *(unsigned char *)(a9 + v24[13]) = v49;
  uint64_t v31 = (void *)(a9 + v24[14]);
  *uint64_t v31 = v51;
  v31[1] = v50;
  uint64_t v32 = a9 + v24[15];
  __n128 result = v54;
  *(_OWORD *)uint64_t v32 = v55;
  *(__n128 *)(v32 + 16) = v54;
  *(void *)(v32 + 32) = v53;
  *(void *)(v32 + 40) = v52;
  return result;
}

uint64_t sub_20AAF40FC(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 2:
      uint64_t v3 = 0x656E6E616863;
      goto LABEL_9;
    case 3:
      uint64_t result = 0x6174614464656566;
      break;
    case 4:
      uint64_t result = 0x74614470756F7267;
      break;
    case 5:
      uint64_t result = 0xD000000000000013;
      break;
    case 6:
      uint64_t result = 0x6573616863727570;
      break;
    case 7:
      uint64_t v3 = 0x6C6177796170;
LABEL_9:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x446C000000000000;
      break;
    case 8:
      uint64_t result = 0xD000000000000016;
      break;
    case 9:
      uint64_t result = 0xD000000000000011;
      break;
    case 10:
      uint64_t result = 0x7272656665526461;
      break;
    case 11:
      uint64_t result = 0x6E676961706D6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AAF4298()
{
  return sub_20AAF40FC(*v0);
}

uint64_t sub_20AAF42A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AAFA510(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AAF42C8(uint64_t a1)
{
  unint64_t v2 = sub_20AAF480C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAF4304(uint64_t a1)
{
  unint64_t v2 = sub_20AAF480C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SubscriptionResultEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AAF5190(0, &qword_267656638, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v31 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAF480C();
  sub_20AB86DC0();
  LOBYTE(v33) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for SubscriptionResultEvent.Model(0);
    uint64_t v11 = (long long *)(v3 + v10[5]);
    int v12 = *((_DWORD *)v11 + 16);
    long long v13 = v11[1];
    long long v33 = *v11;
    long long v34 = v13;
    long long v14 = v11[3];
    long long v35 = v11[2];
    long long v36 = v14;
    int v37 = v12;
    char v32 = 1;
    sub_20A97A1AC();
    sub_20AB86BE0();
    uint64_t v15 = (long long *)(v3 + v10[6]);
    __int16 v16 = *((_WORD *)v15 + 16);
    long long v17 = v15[1];
    long long v33 = *v15;
    long long v34 = v17;
    LOWORD(v35) = v16;
    char v32 = 2;
    sub_20A9862D4();
    sub_20AB86BE0();
    uint64_t v18 = (long long *)(v3 + v10[7]);
    uint64_t v19 = *((void *)v18 + 2);
    long long v33 = *v18;
    *(void *)&long long v34 = v19;
    char v32 = 3;
    sub_20A986774();
    sub_20AB86BE0();
    __int16 v20 = (long long *)(v3 + v10[8]);
    long long v21 = v20[1];
    long long v33 = *v20;
    long long v34 = v21;
    long long v35 = v20[2];
    char v32 = 4;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v22 = (uint64_t *)(v3 + v10[9]);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    *(void *)&long long v33 = v24;
    *((void *)&v33 + 1) = v23;
    char v32 = 5;
    sub_20A9D0E44();
    sub_20AB86C50();
    uint64_t v25 = (uint64_t *)(v3 + v10[10]);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    LOBYTE(v25) = *((unsigned char *)v25 + 16);
    *(void *)&long long v33 = v26;
    *((void *)&v33 + 1) = v27;
    LOBYTE(v34) = (_BYTE)v25;
    char v32 = 6;
    sub_20A9D1094();
    sub_20AB86C50();
    LOBYTE(v33) = *(unsigned char *)(v3 + v10[11]);
    char v32 = 7;
    sub_20A9D1360();
    sub_20AB86C50();
    LOBYTE(v33) = *(unsigned char *)(v3 + v10[12]);
    char v32 = 8;
    sub_20AA31F0C();
    sub_20AB86C50();
    LOBYTE(v33) = *(unsigned char *)(v3 + v10[13]);
    char v32 = 9;
    sub_20AA00D44();
    sub_20AB86BE0();
    long long v33 = *(_OWORD *)(v3 + v10[14]);
    char v32 = 10;
    sub_20AA07C04();
    sub_20AB86BE0();
    uint64_t v28 = (long long *)(v3 + v10[15]);
    long long v29 = v28[1];
    long long v33 = *v28;
    long long v34 = v29;
    long long v35 = v28[2];
    char v32 = 11;
    sub_20AA256F0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AAF480C()
{
  unint64_t result = qword_267656640;
  if (!qword_267656640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656640);
  }
  return result;
}

uint64_t SubscriptionResultEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v45 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAF5190(0, &qword_267656648, MEMORY[0x263F8E040]);
  uint64_t v43 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v42 - v10;
  char v49 = (int *)type metadata accessor for SubscriptionResultEvent.Model(0);
  MEMORY[0x270FA5388](v49);
  char v48 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_20AAF480C();
  sub_20AB86DA0();
  uint64_t v44 = v5;
  if (v2)
  {
    uint64_t v47 = v2;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  }
  uint64_t v42 = a2;
  uint64_t v14 = v9;
  LOBYTE(v50) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  sub_20AB86B80();
  __int16 v16 = v48;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v48, v7, v5);
  char v55 = 1;
  sub_20A97A154();
  sub_20AB86B10();
  int v17 = v54;
  uint64_t v18 = v49;
  uint64_t v19 = &v16[v49[5]];
  long long v20 = v51;
  *(_OWORD *)uint64_t v19 = v50;
  *((_OWORD *)v19 + 1) = v20;
  long long v21 = v53;
  *((_OWORD *)v19 + 2) = v52;
  *((_OWORD *)v19 + 3) = v21;
  *((_DWORD *)v19 + 16) = v17;
  char v55 = 2;
  sub_20A986280();
  sub_20AB86B10();
  __int16 v22 = v52;
  uint64_t v23 = &v16[v18[6]];
  long long v24 = v51;
  *(_OWORD *)uint64_t v23 = v50;
  *((_OWORD *)v23 + 1) = v24;
  *((_WORD *)v23 + 16) = v22;
  char v55 = 3;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v25 = v51;
  uint64_t v26 = &v16[v18[7]];
  *(_OWORD *)uint64_t v26 = v50;
  *((void *)v26 + 2) = v25;
  char v55 = 4;
  sub_20A9864D0();
  sub_20AB86B10();
  uint64_t v27 = &v16[v18[8]];
  long long v28 = v51;
  *(_OWORD *)uint64_t v27 = v50;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v52;
  char v55 = 5;
  sub_20A9D0DF0();
  sub_20AB86B80();
  uint64_t v29 = *((void *)&v50 + 1);
  uint64_t v30 = &v16[v18[9]];
  *(void *)uint64_t v30 = v50;
  *((void *)v30 + 1) = v29;
  char v55 = 6;
  sub_20A9D1040();
  sub_20AB86B80();
  uint64_t v31 = *((void *)&v50 + 1);
  char v32 = v51;
  long long v33 = &v16[v18[10]];
  *(void *)long long v33 = v50;
  *((void *)v33 + 1) = v31;
  v33[16] = v32;
  char v55 = 7;
  sub_20A9D130C();
  sub_20AB86B80();
  v16[v18[11]] = v50;
  char v55 = 8;
  sub_20AA31EB4();
  sub_20AB86B80();
  v16[v18[12]] = v50;
  char v55 = 9;
  sub_20AA00CEC();
  sub_20AB86B10();
  uint64_t v47 = 0;
  v48[v49[13]] = v50;
  char v55 = 10;
  sub_20AA07BAC();
  uint64_t v34 = v47;
  sub_20AB86B10();
  uint64_t v47 = v34;
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v43);
    char v35 = 0;
  }
  else
  {
    *(_OWORD *)&v48[v49[14]] = v50;
    char v55 = 11;
    sub_20AA2569C();
    uint64_t v38 = v47;
    sub_20AB86B10();
    uint64_t v47 = v38;
    if (!v38)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v43);
      uint64_t v39 = (uint64_t)v48;
      long long v40 = &v48[v49[15]];
      long long v41 = v51;
      *(_OWORD *)long long v40 = v50;
      *((_OWORD *)v40 + 1) = v41;
      *((_OWORD *)v40 + 2) = v52;
      sub_20AAF51F4(v39, v42);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      return sub_20AAF5258(v39);
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v43);
    char v35 = 1;
  }
  long long v36 = v48;
  int v37 = v49;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v44);
  sub_20A99D1CC(*(void *)&v36[v37[5]], *(void *)&v36[v37[5] + 8]);
  sub_20A99D1CC(*(void *)&v36[v37[6]], *(void *)&v36[v37[6] + 8]);
  swift_bridgeObjectRelease();
  sub_20A98937C(*(void *)&v36[v37[8]], *(void *)&v36[v37[8] + 8], *(void *)&v36[v37[8] + 16]);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v35) {
    return sub_20A9FA9C8(*(void *)&v36[v37[14]], *(void *)&v36[v37[14] + 8]);
  }
  return result;
}

void sub_20AAF5190(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAF480C();
    unint64_t v7 = a3(a1, &type metadata for SubscriptionResultEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AAF51F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscriptionResultEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AAF5258(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SubscriptionResultEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AAF52B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscriptionResultEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AAF52CC(void *a1)
{
  return SubscriptionResultEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AAF52E4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653618, MEMORY[0x263F24D18], (uint64_t)qword_2676565E8, a1);
}

uint64_t sub_20AAF531C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653620, MEMORY[0x263F24DD8], (uint64_t)qword_267656600, a1);
}

uint64_t sub_20AAF5354@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653628, MEMORY[0x263F24DE8], (uint64_t)qword_267656618, a1);
}

uint64_t sub_20AAF538C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = *MEMORY[0x263F24D30];
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v7, v10);
  uint64_t v11 = a2 + a1[7];
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v7, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v7, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v7, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v7, v26);
  uint64_t v27 = a2 + a1[15];
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104);

  return v29(v27, v7, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscriptionResultEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    int v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    long long v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    char v49 = (char *)a1 + v48;
    long long v50 = (char *)a2 + v48;
    sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for SubscriptionResultEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);

  return v27(v25, v26);
}

uint64_t initializeWithCopy for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for SubscriptionResultEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionResultEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAF7D48);
}

uint64_t sub_20AAF7D48(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_24:
    return v9(v10, a2, v8);
  }
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_23:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_24;
  }
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_23;
  }
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a3[15];

  return v25(v27, a2, v26);
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAF83BC);
}

uint64_t sub_20AAF83BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_24:
    return v11(v12, a2, a2, v10);
  }
  sub_20AAF3400(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_23:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_24;
  }
  sub_20AAF3400(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_23;
  }
  sub_20AAF3400(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_23;
  }
  sub_20AAF3400(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a4[15];

  return v27(v29, a2, a2, v28);
}

void sub_20AAF8A28()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AAF3400(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    if (v1 <= 0x3F)
    {
      sub_20AAF3400(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
      if (v2 <= 0x3F)
      {
        sub_20AAF3400(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
        if (v3 <= 0x3F)
        {
          sub_20AAF3400(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
          if (v4 <= 0x3F)
          {
            sub_20AAF3400(319, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
            if (v5 <= 0x3F)
            {
              sub_20AAF3400(319, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
              if (v6 <= 0x3F)
              {
                sub_20AAF3400(319, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
                if (v7 <= 0x3F)
                {
                  sub_20AAF3400(319, &qword_267656630, (void (*)(void))sub_20AA31EB4, (void (*)(void))sub_20AA31F0C);
                  if (v8 <= 0x3F)
                  {
                    sub_20AAF3400(319, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
                    if (v9 <= 0x3F)
                    {
                      sub_20AAF3400(319, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
                      if (v10 <= 0x3F)
                      {
                        sub_20AAF3400(319, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
                        if (v11 <= 0x3F) {
                          swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SubscriptionResultEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 1);
    if (v11)
    {
      *(void *)unint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v11;
      uint64_t v12 = *((void *)v10 + 3);
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = v12;
      v9[32] = v10[32];
      *((void *)v9 + 5) = *((void *)v10 + 5);
      v9[48] = v10[48];
      *((void *)v9 + 7) = *((void *)v10 + 7);
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *((_OWORD *)v10 + 3);
      *((_OWORD *)v9 + 2) = *((_OWORD *)v10 + 2);
      *((_OWORD *)v9 + 3) = v14;
      *((_DWORD *)v9 + 16) = *((_DWORD *)v10 + 16);
      long long v15 = *((_OWORD *)v10 + 1);
      *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v15;
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *((void *)v18 + 1);
    if (v19)
    {
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v19;
      uint64_t v20 = *((void *)v18 + 3);
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((void *)v17 + 3) = v20;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v21 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v21;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
    }
    uint64_t v22 = a3[7];
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)a1 + v22;
    uint64_t v25 = (char *)a2 + v22;
    char *v24 = *v25;
    uint64_t v26 = *((void *)v25 + 2);
    *((void *)v24 + 1) = *((void *)v25 + 1);
    *((void *)v24 + 2) = v26;
    uint64_t v27 = (char *)a1 + v23;
    uint64_t v28 = (char *)a2 + v23;
    uint64_t v29 = *(void *)((char *)a2 + v23 + 16);
    swift_bridgeObjectRetain();
    if (v29)
    {
      *uint64_t v27 = *v28;
      *((void *)v27 + 1) = *((void *)v28 + 1);
      *((void *)v27 + 2) = v29;
      *((void *)v27 + 3) = *((void *)v28 + 3);
      uint64_t v30 = *((void *)v28 + 4);
      uint64_t v31 = *((void *)v28 + 5);
      *((void *)v27 + 4) = v30;
      *((void *)v27 + 5) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v32 = *((_OWORD *)v28 + 1);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v32;
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    }
    uint64_t v33 = a3[9];
    uint64_t v34 = a3[10];
    uint64_t v35 = (void *)((char *)a1 + v33);
    uint64_t v36 = (void *)((char *)a2 + v33);
    uint64_t v37 = v36[1];
    void *v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = (char *)a1 + v34;
    uint64_t v39 = (char *)a2 + v34;
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)uint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    v38[16] = v39[16];
    uint64_t v41 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)a1 + v41) = *((unsigned char *)a2 + v41);
    uint64_t v42 = a3[14];
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    uint64_t v43 = (char *)a1 + v42;
    uint64_t v44 = (_OWORD *)((char *)a2 + v42);
    uint64_t v45 = *(void *)((char *)a2 + v42 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v45 == 1)
    {
      *(_OWORD *)uint64_t v43 = *v44;
    }
    else
    {
      *(void *)uint64_t v43 = *(void *)v44;
      *((void *)v43 + 1) = v45;
      swift_bridgeObjectRetain();
    }
    uint64_t v46 = a3[15];
    uint64_t v47 = (void *)((char *)a1 + v46);
    uint64_t v48 = (void *)((char *)a2 + v46);
    uint64_t v49 = v48[1];
    if (v49)
    {
      *uint64_t v47 = *v48;
      v47[1] = v49;
      uint64_t v50 = v48[3];
      v47[2] = v48[2];
      v47[3] = v50;
      uint64_t v51 = v48[5];
      v47[4] = v48[4];
      v47[5] = v51;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v52 = *((_OWORD *)v48 + 1);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v52;
      *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
    }
  }
  return a1;
}

uint64_t destroy for SubscriptionResultEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  if (*(void *)(a1 + a2[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[8] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[14] + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + a2[15] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  if (v10)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
    uint64_t v11 = *(void *)(v9 + 24);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = v11;
    *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
    *(void *)(v8 + 40) = *(void *)(v9 + 40);
    *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v8 + 48) = v12;
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    long long v13 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v13;
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(v16 + 8);
  if (v17)
  {
    *(void *)uint64_t v15 = *(void *)v16;
    *(void *)(v15 + 8) = v17;
    uint64_t v18 = *(void *)(v16 + 24);
    *(void *)(v15 + 16) = *(void *)(v16 + 16);
    *(void *)(v15 + 24) = v18;
    *(_WORD *)(v15 + 32) = *(_WORD *)(v16 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v19;
    *(_WORD *)(v15 + 32) = *(_WORD *)(v16 + 32);
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  uint64_t v24 = *(void *)(v23 + 16);
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  *(void *)(v22 + 16) = v24;
  uint64_t v25 = a1 + v21;
  uint64_t v26 = a2 + v21;
  uint64_t v27 = *(void *)(a2 + v21 + 16);
  swift_bridgeObjectRetain();
  if (v27)
  {
    *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
    *(void *)(v25 + 8) = *(void *)(v26 + 8);
    *(void *)(v25 + 16) = v27;
    *(void *)(v25 + 24) = *(void *)(v26 + 24);
    uint64_t v28 = *(void *)(v26 + 32);
    uint64_t v29 = *(void *)(v26 + 40);
    *(void *)(v25 + 32) = v28;
    *(void *)(v25 + 40) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *(_OWORD *)(v26 + 16);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v30;
    *(_OWORD *)(v25 + 32) = *(_OWORD *)(v26 + 32);
  }
  uint64_t v31 = a3[9];
  uint64_t v32 = a3[10];
  uint64_t v33 = (void *)(a1 + v31);
  uint64_t v34 = (void *)(a2 + v31);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = a1 + v32;
  uint64_t v37 = a2 + v32;
  uint64_t v38 = *(void *)(v37 + 8);
  *(void *)uint64_t v36 = *(void *)v37;
  *(void *)(v36 + 8) = v38;
  *(unsigned char *)(v36 + 16) = *(unsigned char *)(v37 + 16);
  uint64_t v39 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v39) = *(unsigned char *)(a2 + v39);
  uint64_t v40 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (_OWORD *)(a2 + v40);
  uint64_t v43 = *(void *)(a2 + v40 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v43 == 1)
  {
    *(_OWORD *)uint64_t v41 = *v42;
  }
  else
  {
    *(void *)uint64_t v41 = *(void *)v42;
    *(void *)(v41 + 8) = v43;
    swift_bridgeObjectRetain();
  }
  uint64_t v44 = a3[15];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  uint64_t v47 = v46[1];
  if (v47)
  {
    void *v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = v46[3];
    v45[2] = v46[2];
    v45[3] = v48;
    uint64_t v49 = v46[5];
    v45[4] = v46[4];
    v45[5] = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v50 = *((_OWORD *)v46 + 1);
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    *((_OWORD *)v45 + 1) = v50;
    *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
  }
  return a1;
}

uint64_t assignWithCopy for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a1 + v7 + 8);
  uint64_t v11 = *(void *)(a2 + v7 + 8);
  if (v10)
  {
    if (v11)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *(void *)(v9 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(void *)(v8 + 24) = *(void *)(v9 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
      uint64_t v12 = *(void *)(v9 + 40);
      *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
      *(void *)(v8 + 40) = v12;
      *(void *)(v8 + 56) = *(void *)(v9 + 56);
      *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
      *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
      *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
      *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
    }
    else
    {
      sub_20A9D6C28(v8);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      long long v15 = *(_OWORD *)(v9 + 32);
      long long v14 = *(_OWORD *)(v9 + 48);
      long long v16 = *(_OWORD *)(v9 + 16);
      *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
      *(_OWORD *)(v8 + 32) = v15;
      *(_OWORD *)(v8 + 48) = v14;
      *(_OWORD *)(v8 + 16) = v16;
    }
  }
  else if (v11)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = *(void *)(v9 + 8);
    *(void *)(v8 + 16) = *(void *)(v9 + 16);
    *(void *)(v8 + 24) = *(void *)(v9 + 24);
    *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 40);
    *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
    *(void *)(v8 + 40) = v13;
    *(void *)(v8 + 56) = *(void *)(v9 + 56);
    *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
    *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
    *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
    *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    long long v17 = *(_OWORD *)(v9 + 16);
    long long v18 = *(_OWORD *)(v9 + 32);
    long long v19 = *(_OWORD *)(v9 + 48);
    *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
    *(_OWORD *)(v8 + 32) = v18;
    *(_OWORD *)(v8 + 48) = v19;
    *(_OWORD *)(v8 + 16) = v17;
  }
  uint64_t v20 = a3[6];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (long long *)(a2 + v20);
  uint64_t v23 = *(void *)(a1 + v20 + 8);
  uint64_t v24 = *(void *)(a2 + v20 + 8);
  if (v23)
  {
    if (v24)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = *((void *)v22 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v21 + 16) = *((void *)v22 + 2);
      *(void *)(v21 + 24) = *((void *)v22 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v21 + 32) = *((unsigned char *)v22 + 32);
      *(unsigned char *)(v21 + 33) = *((unsigned char *)v22 + 33);
    }
    else
    {
      sub_20A9A0F9C(v21);
      __int16 v25 = *((_WORD *)v22 + 16);
      long long v26 = v22[1];
      *(_OWORD *)uint64_t v21 = *v22;
      *(_OWORD *)(v21 + 16) = v26;
      *(_WORD *)(v21 + 32) = v25;
    }
  }
  else if (v24)
  {
    *(void *)uint64_t v21 = *(void *)v22;
    *(void *)(v21 + 8) = *((void *)v22 + 1);
    *(void *)(v21 + 16) = *((void *)v22 + 2);
    *(void *)(v21 + 24) = *((void *)v22 + 3);
    *(unsigned char *)(v21 + 32) = *((unsigned char *)v22 + 32);
    *(unsigned char *)(v21 + 33) = *((unsigned char *)v22 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *v22;
    long long v28 = v22[1];
    *(_WORD *)(v21 + 32) = *((_WORD *)v22 + 16);
    *(_OWORD *)uint64_t v21 = v27;
    *(_OWORD *)(v21 + 16) = v28;
  }
  uint64_t v29 = a3[7];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(unsigned char *)uint64_t v30 = *(unsigned char *)v31;
  *(void *)(v30 + 8) = *(void *)(v31 + 8);
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[8];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (long long *)(a2 + v32);
  uint64_t v35 = *(void *)(a1 + v32 + 16);
  uint64_t v36 = *(void *)(a2 + v32 + 16);
  if (v35)
  {
    if (v36)
    {
      *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
      *(void *)(v33 + 8) = *((void *)v34 + 1);
      *(void *)(v33 + 16) = *((void *)v34 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v33 + 24) = *((_DWORD *)v34 + 6);
      *(_DWORD *)(v33 + 28) = *((_DWORD *)v34 + 7);
      *(void *)(v33 + 32) = *((void *)v34 + 4);
      *(void *)(v33 + 40) = *((void *)v34 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v33);
      long long v38 = v34[1];
      long long v37 = v34[2];
      *(_OWORD *)uint64_t v33 = *v34;
      *(_OWORD *)(v33 + 16) = v38;
      *(_OWORD *)(v33 + 32) = v37;
    }
  }
  else if (v36)
  {
    *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
    *(void *)(v33 + 8) = *((void *)v34 + 1);
    *(void *)(v33 + 16) = *((void *)v34 + 2);
    *(_DWORD *)(v33 + 24) = *((_DWORD *)v34 + 6);
    *(_DWORD *)(v33 + 28) = *((_DWORD *)v34 + 7);
    *(void *)(v33 + 32) = *((void *)v34 + 4);
    *(void *)(v33 + 40) = *((void *)v34 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v39 = *v34;
    long long v40 = v34[2];
    *(_OWORD *)(v33 + 16) = v34[1];
    *(_OWORD *)(v33 + 32) = v40;
    *(_OWORD *)uint64_t v33 = v39;
  }
  uint64_t v41 = a3[9];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[10];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  *(void *)uint64_t v45 = *(void *)(a2 + v44);
  *(void *)(v45 + 8) = *(void *)(a2 + v44 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v45 + 16) = *(unsigned char *)(v46 + 16);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v47 = a3[14];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  uint64_t v50 = *(void *)(a1 + v47 + 8);
  uint64_t v51 = *(void *)(a2 + v47 + 8);
  if (v50 == 1)
  {
    if (v51 != 1)
    {
      *uint64_t v48 = *v49;
      v48[1] = v49[1];
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v51 == 1)
  {
    sub_20AA2BFE8((uint64_t)v48);
LABEL_27:
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
    goto LABEL_29;
  }
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_29:
  uint64_t v52 = a3[15];
  long long v53 = (void *)(a1 + v52);
  int v54 = (void *)(a2 + v52);
  uint64_t v55 = *(void *)(a1 + v52 + 8);
  uint64_t v56 = v54[1];
  if (v55)
  {
    if (v56)
    {
      *long long v53 = *v54;
      v53[1] = v54[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[2] = v54[2];
      v53[3] = v54[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v53[4] = v54[4];
      v53[5] = v54[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20AA2C03C((uint64_t)v53);
      long long v58 = *((_OWORD *)v54 + 1);
      long long v57 = *((_OWORD *)v54 + 2);
      *(_OWORD *)long long v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v58;
      *((_OWORD *)v53 + 2) = v57;
    }
  }
  else if (v56)
  {
    *long long v53 = *v54;
    v53[1] = v54[1];
    v53[2] = v54[2];
    v53[3] = v54[3];
    v53[4] = v54[4];
    v53[5] = v54[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v59 = *(_OWORD *)v54;
    long long v60 = *((_OWORD *)v54 + 2);
    *((_OWORD *)v53 + 1) = *((_OWORD *)v54 + 1);
    *((_OWORD *)v53 + 2) = v60;
    *(_OWORD *)long long v53 = v59;
  }
  return a1;
}

uint64_t initializeWithTake for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  uint64_t v20 = (_OWORD *)(a1 + v17);
  uint64_t v21 = (long long *)(a2 + v17);
  long long v22 = *v21;
  long long v23 = v21[2];
  v20[1] = v21[1];
  v20[2] = v23;
  *uint64_t v20 = v22;
  uint64_t v24 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(unsigned char *)(v25 + 16) = *(unsigned char *)(v26 + 16);
  uint64_t v27 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  uint64_t v28 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  uint64_t v29 = a3[15];
  uint64_t v30 = (_OWORD *)(a1 + v29);
  uint64_t v31 = (_OWORD *)(a2 + v29);
  long long v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  v30[2] = v31[2];
  return a1;
}

uint64_t assignWithTake for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (*(void *)(a1 + v7 + 8))
  {
    uint64_t v10 = *(void *)(v9 + 8);
    if (v10)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(v9 + 24);
      *(void *)(v8 + 16) = *(void *)(v9 + 16);
      *(void *)(v8 + 24) = v11;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
      *(void *)(v8 + 40) = *(void *)(v9 + 40);
      *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
      *(void *)(v8 + 56) = *(void *)(v9 + 56);
      *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
      *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
      *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
      *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
      goto LABEL_6;
    }
    sub_20A9D6C28(v8);
  }
  long long v12 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v12;
  *(_DWORD *)(v8 + 64) = *(_DWORD *)(v9 + 64);
  long long v13 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v13;
LABEL_6:
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  if (*(void *)(a1 + v14 + 8))
  {
    uint64_t v17 = *(void *)(v16 + 8);
    if (v17)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *(void *)(v15 + 8) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(v16 + 24);
      *(void *)(v15 + 16) = *(void *)(v16 + 16);
      *(void *)(v15 + 24) = v18;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v15 + 32) = *(unsigned char *)(v16 + 32);
      *(unsigned char *)(v15 + 33) = *(unsigned char *)(v16 + 33);
      goto LABEL_11;
    }
    sub_20A9A0F9C(v15);
  }
  long long v19 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v19;
  *(_WORD *)(v15 + 32) = *(_WORD *)(v16 + 32);
LABEL_11:
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  uint64_t v23 = *(void *)(v22 + 16);
  *(void *)(v21 + 8) = v24;
  *(void *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  if (*(void *)(a1 + v25 + 16))
  {
    uint64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      *(unsigned char *)uint64_t v26 = *(unsigned char *)v27;
      *(void *)(v26 + 8) = *(void *)(v27 + 8);
      *(void *)(v26 + 16) = v28;
      swift_bridgeObjectRelease();
      *(void *)(v26 + 24) = *(void *)(v27 + 24);
      uint64_t v29 = *(void *)(v27 + 40);
      *(void *)(v26 + 32) = *(void *)(v27 + 32);
      *(void *)(v26 + 40) = v29;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_20A98D5B8(v26);
  }
  long long v30 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v30;
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
LABEL_16:
  uint64_t v31 = a3[9];
  long long v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *long long v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[10];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(a2 + v36 + 8);
  *(void *)uint64_t v37 = *(void *)(a2 + v36);
  *(void *)(v37 + 8) = v39;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v37 + 16) = *(unsigned char *)(v38 + 16);
  uint64_t v40 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v40) = *(unsigned char *)(a2 + v40);
  uint64_t v41 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  if (*(void *)(a1 + v41 + 8) == 1)
  {
LABEL_19:
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    goto LABEL_21;
  }
  uint64_t v44 = *(void *)(v43 + 8);
  if (v44 == 1)
  {
    sub_20AA2BFE8(a1 + v41);
    goto LABEL_19;
  }
  *(void *)uint64_t v42 = *(void *)v43;
  *(void *)(v42 + 8) = v44;
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v45 = a3[15];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  if (!*(void *)(a1 + v45 + 8))
  {
LABEL_25:
    long long v51 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v51;
    *(_OWORD *)(v46 + 32) = *(_OWORD *)(v47 + 32);
    return a1;
  }
  uint64_t v48 = *(void *)(v47 + 8);
  if (!v48)
  {
    sub_20AA2C03C(v46);
    goto LABEL_25;
  }
  *(void *)uint64_t v46 = *(void *)v47;
  *(void *)(v46 + 8) = v48;
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void *)(v47 + 24);
  *(void *)(v46 + 16) = *(void *)(v47 + 16);
  *(void *)(v46 + 24) = v49;
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void *)(v47 + 40);
  *(void *)(v46 + 32) = *(void *)(v47 + 32);
  *(void *)(v46 + 40) = v50;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AAFA07C);
}

uint64_t sub_20AAFA07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SubscriptionResultEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AAFA154);
}

uint64_t sub_20AAFA154(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AAFA214()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SubscriptionResultEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AAFA3D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResultEvent.Model.CodingKeys()
{
  return &type metadata for SubscriptionResultEvent.Model.CodingKeys;
}

unint64_t sub_20AAFA40C()
{
  unint64_t result = qword_267656670;
  if (!qword_267656670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656670);
  }
  return result;
}

unint64_t sub_20AAFA464()
{
  unint64_t result = qword_267656678;
  if (!qword_267656678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656678);
  }
  return result;
}

unint64_t sub_20AAFA4BC()
{
  unint64_t result = qword_267656680;
  if (!qword_267656680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656680);
  }
  return result;
}

uint64_t sub_20AAFA510(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7920 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA8D10 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7E80 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7272656665526461 && a2 == 0xEE00617461446C61 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_20AAFAA7C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t FlushAnalyticsBatchesStartupTask.group.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_group;
  uint64_t v4 = sub_20AB861E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_20AAFAB18()
{
  return sub_20AB863F0();
}

uint64_t sub_20AAFAB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_20AAFE134;
  *(void *)(v5 + 24) = v4;
  swift_retain();
  swift_retain();
  sub_20AB85940();
  swift_release();

  return swift_release();
}

uint64_t sub_20AAFAC58(uint64_t a1, uint64_t a2)
{
  return sub_20AAFAB6C(a1, a2);
}

uint64_t *sub_20AAFAC60(uint64_t a1)
{
  uint64_t v191 = *MEMORY[0x263EF8340];
  sub_20AAFDBE8();
  v155 = v2;
  uint64_t v154 = *((void *)v2 - 1);
  MEMORY[0x270FA5388](v2);
  v153 = (char *)&v136 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_20AB85010();
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  v157 = (uint64_t *)((char *)&v136 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v169 = sub_20AB85FE0();
  uint64_t v168 = *(void *)(v169 - 8);
  MEMORY[0x270FA5388](v169);
  v167 = (char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_20AB851F0();
  uint64_t v165 = *(void *)(v166 - 8);
  MEMORY[0x270FA5388](v166);
  v164 = (char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_20AB85FC0();
  uint64_t v170 = *(void *)(v180 - 8);
  MEMORY[0x270FA5388](v180);
  v171 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for AppSessionEndEvent.Model(0);
  MEMORY[0x270FA5388](v156);
  uint64_t v160 = (uint64_t)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_20AB85820();
  uint64_t v161 = *(void *)(v177 - 8);
  MEMORY[0x270FA5388](v177);
  v176 = (char *)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20AAFDF44(0, &qword_26AC4E700, MEMORY[0x263F24E70], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  v175 = (char *)&v136 - v12;
  sub_20AAFDF44(0, &qword_26AC4E078, MEMORY[0x263F24CD8], v10);
  MEMORY[0x270FA5388](v13 - 8);
  v187 = (void (*)(char *, uint64_t))((char *)&v136 - v14);
  sub_20AAFDF44(0, &qword_26AC4E3C0, MEMORY[0x263F07490], v10);
  MEMORY[0x270FA5388](v15 - 8);
  v179 = (char *)&v136 - v16;
  uint64_t v186 = sub_20AB851C0();
  uint64_t v181 = *(void *)(v186 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v186);
  v182 = (char *)&v136 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v174 = (char *)&v136 - v19;
  uint64_t v20 = sub_20AB858A0();
  uint64_t v183 = *(void *)(v20 - 8);
  uint64_t v184 = v20;
  MEMORY[0x270FA5388](v20);
  v185 = (char *)&v136 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AAFDC7C();
  uint64_t v178 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  v163 = (char *)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v162 = (char *)&v136 - v26;
  MEMORY[0x270FA5388](v25);
  v172 = (char *)&v136 - v27;
  uint64_t v28 = type metadata accessor for StocksSession();
  MEMORY[0x270FA5388](v28);
  long long v30 = (char *)&v136 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_20AB85880();
  v173 = *(char **)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (void (**)(char *, uint64_t))((char *)&v136 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = sub_20AB85FF0();
  uint64_t v35 = *(void (***)(char *, uint64_t, uint64_t))(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v136 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  if (sub_20AB85E60()) {
    return (uint64_t *)MEMORY[0x263F8EE78];
  }
  v149 = v35;
  v150 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v34;
  v151 = v33;
  v152 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v31;
  v148 = v30;
  v147 = (int *)v28;
  sub_20AB85EB0();
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  if (v40) {
    return (uint64_t *)MEMORY[0x263F8EE78];
  }
  sub_20AB86030();
  swift_allocObject();
  uint64_t v43 = sub_20AB86020();
  *(void *)uint64_t v37 = sub_20AAFC7C4;
  *((void *)v37 + 1) = 0;
  v149[13](v37, *MEMORY[0x263F7CD08], (uint64_t)v150);
  sub_20AB86000();
  uint64_t v44 = self;
  sub_20AB85EA0();
  sub_20AAFDCE4();
  uint64_t v45 = (void *)sub_20AB86760();
  swift_bridgeObjectRelease();
  v189 = 0;
  uint64_t v41 = (uint64_t *)objc_msgSend(v44, sel_dataWithJSONObject_options_error_, v45, 0, &v189);

  uint64_t v46 = v189;
  if (!v41)
  {
    long long v53 = v46;
    sub_20AB850F0();

    swift_willThrow();
LABEL_22:
    swift_release();
    return v41;
  }
  uint64_t v47 = sub_20AB85150();
  unint64_t v49 = v48;

  sub_20AAFDF44(0, &qword_26AC51678, MEMORY[0x263F24CE0], MEMORY[0x263F8D488]);
  sub_20AAFDD50();
  uint64_t v41 = (uint64_t *)v43;
  uint64_t v50 = v188;
  sub_20AB86010();
  uint64_t v51 = v50;
  if (v50)
  {
    uint64_t v52 = v47;
LABEL_21:
    sub_20AA3AC9C(v52, v49);
    goto LABEL_22;
  }
  v149 = (void (**)(char *, uint64_t, uint64_t))v44;
  uint64_t v146 = v47;
  int v54 = v189;
  uint64_t v55 = *((void *)v189 + 2);
  uint64_t v56 = v178;
  if (!v55) {
    goto LABEL_16;
  }
  uint64_t v142 = v38;
  uint64_t v145 = v43;
  uint64_t v188 = 0;
  long long v57 = &v189[(*(unsigned __int8 *)(v183 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80)];
  long long v58 = (void (**)(void, void (**)(uint64_t, uint64_t, uint64_t, uint64_t)))(v173 + 8);
  v173 = *(char **)(v183 + 72);
  swift_bridgeObjectRetain();
  v150 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))0x800000020ABA8DC0;
  long long v59 = v151;
  while (1)
  {
    sub_20AB85890();
    uint64_t v60 = sub_20AB85870();
    uint64_t v62 = v61;
    (*v58)(v59, v152);
    if (v60 == 0xD000000000000012 && v62 == v150)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    char v63 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v63) {
      break;
    }
    long long v57 = &v173[(void)v57];
    if (!--v55)
    {
      swift_bridgeObjectRelease();
      uint64_t v51 = v188;
      uint64_t v43 = v145;
      uint64_t v38 = v142;
      uint64_t v56 = v178;
LABEL_16:
      sub_20AB85E70();
      uint64_t v64 = (void *)sub_20AB86650();
      swift_bridgeObjectRelease();
      v189 = 0;
      uint64_t v41 = (uint64_t *)objc_msgSend(v149, sel_dataWithJSONObject_options_error_, v64, 0, &v189);

      uint64_t v65 = v189;
      if (!v41)
      {
        v69 = v65;
        swift_bridgeObjectRelease();
        sub_20AB850F0();

        swift_willThrow();
LABEL_20:
        uint64_t v52 = v146;
        goto LABEL_21;
      }
      v141 = v54;
      uint64_t v66 = sub_20AB85150();
      unint64_t v68 = v67;

      sub_20AAFE0B4(&qword_26AC4EAA0, (void (*)(uint64_t))type metadata accessor for StocksSession);
      uint64_t v41 = (uint64_t *)v43;
      sub_20AB86010();
      if (v51)
      {
        sub_20AA3AC9C(v66, v68);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      uint64_t v137 = v66;
      unint64_t v138 = v68;
      unint64_t v139 = v49;
      uint64_t v145 = v43;
      uint64_t v70 = *((void *)v141 + 2);
      uint64_t v188 = 0;
      uint64_t v142 = v38;
      if (v70)
      {
        uint64_t v71 = v183 + 16;
        v173 = *(char **)(v183 + 16);
        uint64_t v72 = &v141[(*(unsigned __int8 *)(v183 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v183 + 80)];
        v152 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v181 + 56);
        v144 = (void (**)(char *, uint64_t))(v161 + 8);
        uint64_t v161 = *(void *)(v183 + 72);
        v143 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48);
        v140 = (void (**)(uint64_t, uint64_t))(v170 + 8);
        v151 = (void (**)(char *, uint64_t))(v183 + 8);
        v150 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v181 + 48);
        v149 = (void (**)(char *, uint64_t, uint64_t))(v181 + 32);
        swift_bridgeObjectRetain();
        uint64_t v73 = MEMORY[0x263F8EE78];
        uint64_t v74 = (uint64_t)v179;
        uint64_t v75 = v184;
        int v76 = v185;
        uint64_t v183 = v71;
        while (1)
        {
          ((void (*)(char *, char *, uint64_t))v173)(v76, v72, v75);
          sub_20AB85850();
          uint64_t v77 = (uint64_t)v187;
          uint64_t v78 = sub_20AB85840();
          uint64_t v79 = *(void *)(v78 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78) != 1) {
            break;
          }
          sub_20AAFDE20(v77, &qword_26AC4E078, MEMORY[0x263F24CD8]);
          uint64_t v80 = v176;
          sub_20AB85860();
          uint64_t v81 = (uint64_t)v175;
          sub_20AB85810();
          (*v144)(v80, v177);
          uint64_t v82 = v180;
          if ((*v143)(v81, 1, v180) != 1)
          {
            sub_20AB85FA0();
            (*v140)(v81, v82);
            goto LABEL_35;
          }
          sub_20AAFDE20(v81, &qword_26AC4E700, MEMORY[0x263F24E70]);
          uint64_t v83 = 1;
LABEL_36:
          uint64_t v84 = v186;
          uint64_t v75 = v184;
          (*v152)(v74, v83, 1, v186);
          int v76 = v185;
          (*v151)(v185, v75);
          if ((*v150)(v74, 1, v84) == 1)
          {
            sub_20AAFDE20(v74, &qword_26AC4E3C0, MEMORY[0x263F07490]);
          }
          else
          {
            char v85 = *v149;
            uint64_t v86 = v174;
            (*v149)(v174, v74, v84);
            v85(v182, (uint64_t)v86, v84);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v73 = sub_20AA0C2B4(0, *(void *)(v73 + 16) + 1, 1, v73);
            }
            uint64_t v87 = v181;
            unint64_t v89 = *(void *)(v73 + 16);
            unint64_t v88 = *(void *)(v73 + 24);
            if (v89 >= v88 >> 1)
            {
              uint64_t v90 = sub_20AA0C2B4(v88 > 1, v89 + 1, 1, v73);
              uint64_t v87 = v181;
              uint64_t v73 = v90;
            }
            *(void *)(v73 + 16) = v89 + 1;
            ((void (*)(unint64_t))v85)(v73+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v89);
            uint64_t v75 = v184;
            int v76 = v185;
          }
          v72 += v161;
          if (!--v70)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v38 = v142;
            uint64_t v56 = v178;
            goto LABEL_44;
          }
        }
        sub_20AB85830();
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v77, v78);
        uint64_t v74 = (uint64_t)v179;
        sub_20AB85190();
LABEL_35:
        uint64_t v83 = 0;
        goto LABEL_36;
      }
      swift_bridgeObjectRelease();
      uint64_t v73 = MEMORY[0x263F8EE78];
LABEL_44:
      v91 = v172;
      v92 = &v172[*(int *)(v56 + 48)];
      sub_20AAFC884(v172, (uint64_t)v92, v38, v73);
      swift_bridgeObjectRelease();
      if (sub_20AB85E90()) {
        int v93 = 3;
      }
      else {
        int v93 = 4;
      }
      LODWORD(v183) = v93;
      v94 = v164;
      sub_20AB851E0();
      v187 = (void (*)(char *, uint64_t))sub_20AB851D0();
      v185 = v95;
      (*(void (**)(char *, uint64_t))(v165 + 8))(v94, v166);
      v96 = v162;
      v97 = &v162[*(int *)(v56 + 48)];
      uint64_t v98 = v181;
      v99 = *(void (**)(char *, char *, uint64_t))(v181 + 16);
      v100 = v91;
      uint64_t v101 = v186;
      v99(v162, v100, v186);
      v102 = v92;
      v99(v97, v92, v101);
      uint64_t v184 = *((void *)v148 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v103 = v172;
      sub_20AB85FB0();
      v187 = *(void (**)(char *, uint64_t))(v98 + 8);
      v187(v96, v101);
      uint64_t v104 = v178;
      v185 = &v96[*(int *)(v178 + 48)];
      v105 = v185;
      v99(v96, v103, v101);
      v99(v105, v102, v101);
      v106 = v163;
      v107 = &v163[*(int *)(v104 + 48)];
      v99(v163, v103, v101);
      v99(v107, v102, v101);
      v108 = v167;
      sub_20AB85FD0();
      v109 = v187;
      v187(v106, v101);
      v109(v185, v101);
      uint64_t v110 = (uint64_t)v148;
      uint64_t v111 = *(void *)&v148[v147[14]];
      if (v111)
      {
        __int16 v112 = *(_WORD *)&v148[v147[13]];
        uint64_t v113 = v169;
        uint64_t v114 = v168;
        uint64_t v115 = v170;
        if ((v112 & 0xFF00) == 0x500)
        {
          v189 = 0;
          unint64_t v190 = 0xE000000000000000;
          swift_bridgeObjectRetain();
          uint64_t v41 = (uint64_t *)&v189;
          sub_20AB86990();
          swift_bridgeObjectRelease();
          sub_20AAFDE90();
          swift_allocError();
          unint64_t v117 = 0xD000000000000027;
          v118 = "Failed to find data for OrientationData";
          goto LABEL_56;
        }
        uint64_t v120 = *(void *)&v148[v147[15]];
        if (v120)
        {
          v121 = v108;
          uint64_t v122 = v160;
          (*(void (**)(uint64_t, char *, uint64_t))(v170 + 32))(v160, v171, v180);
          v123 = (int *)v156;
          (*(void (**)(uint64_t, char *, uint64_t))(v114 + 32))(v122 + *(int *)(v156 + 20), v121, v113);
          *(void *)(v122 + v123[6]) = v111;
          *(_WORD *)(v122 + v123[7]) = v112;
          *(unsigned char *)(v122 + v123[8]) = v183;
          *(void *)(v122 + v123[9]) = v120;
          sub_20AB85050();
          swift_allocObject();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v124 = sub_20AB85040();
          v125 = v157;
          void *v157 = sub_20AAFD694;
          v125[1] = 0;
          (*(void (**)(void *, void, uint64_t))(v158 + 104))(v125, *MEMORY[0x263F06190], v159);
          uint64_t v41 = (uint64_t *)v124;
          sub_20AB85020();
          sub_20AAFE0B4(&qword_26AC4F938, (void (*)(uint64_t))type metadata accessor for AppSessionEndEvent.Model);
          uint64_t v126 = v188;
          sub_20AB85030();
          if (v126)
          {
            sub_20AA3AC9C(v146, v139);
            swift_release();
            swift_release();
            sub_20AA3AC9C(v137, v138);
            sub_20AAFDEE4(v122, type metadata accessor for AppSessionEndEvent.Model);
            v127 = v172;
          }
          else
          {
            id v129 = objc_allocWithZone((Class)sub_20AB85E40());
            uint64_t v130 = sub_20AB85E50();
            v131 = v172;
            if (v130)
            {
              sub_20AB85EB0();
              sub_20AB85E60();
              type metadata accessor for AppSessionEndEvent(0);
              sub_20AAFE0B4(&qword_26AC4F9E0, (void (*)(uint64_t))type metadata accessor for AppSessionEndEvent);
              v132 = v153;
              sub_20AB85970();
              sub_20AB85CB0();
              sub_20AAFDF44(0, &qword_26AC519A8, (uint64_t (*)(uint64_t))sub_20AAFDFA8, MEMORY[0x263F8E0F8]);
              uint64_t v41 = (uint64_t *)swift_allocObject();
              *((_OWORD *)v41 + 1) = xmmword_20AB88020;
              v133 = v155;
              v41[7] = (uint64_t)v155;
              v41[8] = sub_20AAFE0B4(&qword_26AC4E570, (void (*)(uint64_t))sub_20AAFDBE8);
              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v41 + 4);
              (*(void (**)(uint64_t *, char *, char *))(v154 + 32))(boxed_opaque_existential_1, v132, v133);
              sub_20AA3AC9C(v146, v139);
              swift_release();
              swift_release();
              sub_20AA3AC9C(v137, v138);
              sub_20AAFDEE4(v160, type metadata accessor for AppSessionEndEvent.Model);
              sub_20AAFDEE4((uint64_t)v172, (uint64_t (*)(void))sub_20AAFDC7C);
              sub_20AAFDEE4((uint64_t)v148, (uint64_t (*)(void))type metadata accessor for StocksSession);
              return v41;
            }
            v189 = 0;
            unint64_t v190 = 0xE000000000000000;
            uint64_t v41 = (uint64_t *)&v189;
            sub_20AB86990();
            swift_bridgeObjectRelease();
            sub_20AAFDE90();
            swift_allocError();
            void *v135 = 0xD00000000000001CLL;
            v135[1] = 0x800000020ABA8E70;
            swift_willThrow();
            sub_20AA3AC9C(v146, v139);
            swift_release();
            swift_release();
            sub_20AA3AC9C(v137, v138);
            sub_20AAFDEE4(v122, type metadata accessor for AppSessionEndEvent.Model);
            v127 = v131;
          }
          sub_20AAFDEE4((uint64_t)v127, (uint64_t (*)(void))sub_20AAFDC7C);
          uint64_t v128 = (uint64_t)v148;
          goto LABEL_58;
        }
        v189 = 0;
        unint64_t v190 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        uint64_t v41 = (uint64_t *)&v189;
        sub_20AB86990();
        swift_bridgeObjectRelease();
        sub_20AAFDE90();
        swift_allocError();
        unint64_t v117 = 0xD00000000000002CLL;
        v118 = "Failed to find data for WatchlistSummaryData";
LABEL_56:
        unint64_t *v116 = v117;
        v116[1] = (unint64_t)(v118 - 32) | 0x8000000000000000;
        swift_willThrow();
        sub_20AA3AC9C(v146, v139);
        swift_release();
        sub_20AA3AC9C(v137, v138);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v114 + 8))(v108, v113);
        (*(void (**)(char *, uint64_t))(v115 + 8))(v171, v180);
      }
      else
      {
        v189 = 0;
        unint64_t v190 = 0xE000000000000000;
        uint64_t v41 = (uint64_t *)&v189;
        sub_20AB86990();
        swift_bridgeObjectRelease();
        sub_20AAFDE90();
        swift_allocError();
        void *v119 = 0xD00000000000002DLL;
        v119[1] = 0x800000020ABA8DE0;
        swift_willThrow();
        sub_20AA3AC9C(v146, v139);
        swift_release();
        sub_20AA3AC9C(v137, v138);
        (*(void (**)(char *, uint64_t))(v168 + 8))(v108, v169);
        (*(void (**)(char *, uint64_t))(v170 + 8))(v171, v180);
      }
      sub_20AAFDEE4((uint64_t)v172, (uint64_t (*)(void))sub_20AAFDC7C);
      uint64_t v128 = v110;
LABEL_58:
      sub_20AAFDEE4(v128, (uint64_t (*)(void))type metadata accessor for StocksSession);
      return v41;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_25:
  sub_20AA3AC9C(v146, v49);
  swift_release();
  return (uint64_t *)MEMORY[0x263F8EE78];
}

uint64_t sub_20AAFC7C4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_20AB86D90();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    sub_20AB86CB0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    return sub_20AB85190();
  }
  return result;
}

uint64_t sub_20AAFC884(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  sub_20AAFDF44(0, &qword_26AC4E3C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v39 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_20AB851C0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v41 = (char *)&v39 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v39 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v46 = (char *)&v39 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v39 - v24;
  sub_20AB85E80();
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v26(v11, 1, v12) == 1)
  {
    sub_20AB851B0();
    sub_20AAFDE20((uint64_t)v11, &qword_26AC4E3C0, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v25, v11, v12);
  }
  sub_20AAFCDA4(v45, v9);
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v44(v21, v25, v12);
  if (v26(v9, 1, v12) == 1)
  {
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v27(v46, v21, v12);
    sub_20AAFDE20((uint64_t)v9, &qword_26AC4E3C0, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v21, v12);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v27(v46, v9, v12);
  }
  uint64_t v28 = v40;
  sub_20AAFD21C(v45, v40);
  v44(v16, v25, v12);
  unsigned int v29 = v26(v28, 1, v12);
  long long v30 = v42;
  if (v29 == 1)
  {
    uint64_t v31 = v41;
    v27(v41, v16, v12);
    sub_20AAFDE20((uint64_t)v28, &qword_26AC4E3C0, MEMORY[0x263F07490]);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    uint64_t v31 = v41;
    v27(v41, v28, v12);
  }
  sub_20AAFE0B4(&qword_26AC4E3B8, MEMORY[0x263F07490]);
  uint64_t v32 = v46;
  if (sub_20AB866A0()) {
    uint64_t v33 = v32;
  }
  else {
    uint64_t v33 = v25;
  }
  uint64_t v34 = (void (*)(uint64_t, char *, uint64_t))v44;
  v44(v30, v33, v12);
  if (sub_20AB866B0())
  {
    uint64_t v35 = v43;
    uint64_t v36 = v31;
  }
  else
  {
    uint64_t v35 = v43;
    uint64_t v36 = v30;
  }
  v34(v35, v36, v12);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v13 + 8);
  v37(v31, v12);
  v37(v46, v12);
  return ((uint64_t (*)(char *, uint64_t))v37)(v25, v12);
}

uint64_t sub_20AAFCDA4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_20AAFDF44(0, &qword_26AC4E3C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_20AB851C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    uint64_t v19 = v38;
LABEL_5:
    sub_20AAFDE20((uint64_t)v9, &qword_26AC4E3C0, MEMORY[0x263F07490]);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  long long v30 = a2;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    uint64_t v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_20AAFE0B4(&qword_26AC4E3B8, MEMORY[0x263F07490]);
      char v27 = sub_20AB866A0();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_20AAFDE20((uint64_t)v7, &qword_26AC4E3C0, MEMORY[0x263F07490]);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t sub_20AAFD21C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_20AAFDF44(0, &qword_26AC4E3C0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_20AB851C0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v19(v9, 1, 1, v10);
    goto LABEL_5;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  uint64_t v37 = v11 + 16;
  v36(v9, a1 + v18, v10);
  uint64_t v31 = a1;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v38(v9, 0, 1, v10);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v35 = v11 + 48;
  if (v34(v9, 1, v10) == 1)
  {
    uint64_t v19 = v38;
LABEL_5:
    sub_20AAFDE20((uint64_t)v9, &qword_26AC4E3C0, MEMORY[0x263F07490]);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v19)(a2, 1, 1, v10);
  }
  long long v30 = a2;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v33(v16, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v21 = v17 - 1;
  if (v21)
  {
    uint64_t v23 = *(void *)(v11 + 72);
    uint64_t v24 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v32 = v23;
    unint64_t v25 = v31 + v23 + v18;
    uint64_t v26 = v33;
    while (1)
    {
      v36(v7, v25, v10);
      v38(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1) {
        break;
      }
      v26(v14, v7, v10);
      sub_20AAFE0B4(&qword_26AC4E3B8, MEMORY[0x263F07490]);
      char v27 = sub_20AB866A0();
      uint64_t v28 = *v24;
      if (v27)
      {
        v28(v16, v10);
        v26(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v25 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v38(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_20AAFDE20((uint64_t)v7, &qword_26AC4E3C0, MEMORY[0x263F07490]);
  uint64_t v22 = v30;
  v33(v30, v16, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v38)(v22, 0, 1, v10);
}

uint64_t sub_20AAFD694(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20AB86DB0();
  uint64_t result = sub_20AB851A0();
  double v4 = v3 * 1000.0;
  if ((~*(void *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 < 9.22337204e18)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
    sub_20AB86CC0();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t FlushAnalyticsBatchesStartupTask.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_group;
  uint64_t v2 = sub_20AB861E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return v0;
}

uint64_t FlushAnalyticsBatchesStartupTask.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_group;
  uint64_t v2 = sub_20AB861E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_20AAFD8D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC15StocksAnalytics32FlushAnalyticsBatchesStartupTask_group;
  uint64_t v4 = sub_20AB861E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_20AAFD950()
{
  return sub_20AB863F0();
}

uint64_t sub_20AAFD9A4()
{
  uint64_t v0 = sub_20AB861E0();
  __swift_allocate_value_buffer(v0, qword_26AC4E720);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC4E720);
  return sub_20AB861D0();
}

uint64_t static StartupTaskGroup.flushAnalytics.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AC4E738 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20AB861E0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26AC4E720);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_20AAFDAB8()
{
  return type metadata accessor for FlushAnalyticsBatchesStartupTask();
}

uint64_t type metadata accessor for FlushAnalyticsBatchesStartupTask()
{
  uint64_t result = qword_26AC4E778;
  if (!qword_26AC4E778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20AAFDB0C()
{
  uint64_t result = sub_20AB861E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FlushAnalyticsBatchesStartupTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FlushAnalyticsBatchesStartupTask);
}

uint64_t dispatch thunk of FlushAnalyticsBatchesStartupTask.run(launchOptions:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

void sub_20AAFDBE8()
{
  if (!qword_26AC4E578)
  {
    type metadata accessor for AppSessionEndEvent(255);
    sub_20AAFE0B4(&qword_26AC4F9E0, (void (*)(uint64_t))type metadata accessor for AppSessionEndEvent);
    unint64_t v0 = sub_20AB85990();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E578);
    }
  }
}

void sub_20AAFDC7C()
{
  if (!qword_26AC4E318)
  {
    sub_20AB851C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC4E318);
    }
  }
}

void sub_20AAFDCE4()
{
  if (!qword_26AC51670)
  {
    unint64_t v0 = sub_20AB86670();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC51670);
    }
  }
}

unint64_t sub_20AAFDD50()
{
  unint64_t result = qword_26AC51680;
  if (!qword_26AC51680)
  {
    sub_20AAFDF44(255, &qword_26AC51678, MEMORY[0x263F24CE0], MEMORY[0x263F8D488]);
    sub_20AAFE0B4(&qword_26AC4E4D0, MEMORY[0x263F24CE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51680);
  }
  return result;
}

uint64_t sub_20AAFDE20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20AAFDF44(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_20AAFDE90()
{
  unint64_t result = qword_26AC52B10;
  if (!qword_26AC52B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52B10);
  }
  return result;
}

uint64_t sub_20AAFDEE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20AAFDF44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20AAFDFA8()
{
  unint64_t result = qword_26AC4E6E0;
  if (!qword_26AC4E6E0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC4E6E0);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_20AAFE0B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AAFE0FC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20AAFE134()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t *sub_20AAFE15C(uint64_t a1)
{
  return sub_20AAFAC60(a1);
}

ValueMetadata *type metadata accessor for FlushAnalyticsBatchesStartupTask.Errors()
{
  return &type metadata for FlushAnalyticsBatchesStartupTask.Errors;
}

void *sub_20AAFE188(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  v4[3] = a3;
  v4[4] = 0;
  v4[2] = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  swift_retain();
  id v7 = a3;
  sub_20AB85490();
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  swift_allocObject();
  swift_weakInit();
  uint64_t v8 = sub_20AB864E0();
  swift_release();
  swift_release();

  v4[4] = v8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v4;
}

uint64_t sub_20AAFE2A8(uint64_t a1)
{
  uint64_t v2 = sub_20AB85390();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20AAFE45C(&v10);
    char v6 = v10;
    if (v10 != 12)
    {
      sub_20AB85B30();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(&v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v2);
      unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v8 = swift_allocObject();
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v3 + 32))(v8 + v7, &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v2);
      *(unsigned char *)(v8 + v7 + v4) = v6;
      sub_20AB85F40();
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_20AAFE45C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20AB85390();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x263F7A900])
  {
    char v9 = 6;
LABEL_5:
    *a1 = v9;
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (v8 == *MEMORY[0x263F7A920])
  {
    char v9 = 4;
    goto LABEL_5;
  }
  if (v8 == *MEMORY[0x263F7A930])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    sub_20AAFFB64();
    uint64_t v12 = &v7[*(int *)(v11 + 48)];
    *a1 = 0;
LABEL_17:
    uint64_t v18 = sub_20AB852C0();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v12, v18);
    uint64_t v19 = sub_20AB86310();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v7, v19);
  }
  if (v8 == *MEMORY[0x263F7A928])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    sub_20AAFFB64();
    uint64_t v12 = &v7[*(int *)(v13 + 48)];
    char v14 = 2;
LABEL_16:
    *a1 = v14;
    goto LABEL_17;
  }
  if (v8 == *MEMORY[0x263F7A938])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    sub_20AAFFB64();
    uint64_t v12 = &v7[*(int *)(v15 + 48)];
    char v14 = 1;
    goto LABEL_16;
  }
  if (v8 == *MEMORY[0x263F7A940])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    sub_20AAFFB64();
    uint64_t v12 = &v7[*(int *)(v16 + 48)];
    char v14 = 3;
    goto LABEL_16;
  }
  if (v8 == *MEMORY[0x263F7A8F8])
  {
    (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
    sub_20AAFFB64();
    uint64_t v12 = &v7[*(int *)(v17 + 48)];
    char v14 = 5;
    goto LABEL_16;
  }
  if (v8 == *MEMORY[0x263F7A918])
  {
    char v9 = 7;
    goto LABEL_5;
  }
  if (v8 == *MEMORY[0x263F7A8E8])
  {
    char v9 = 8;
    goto LABEL_5;
  }
  if (v8 == *MEMORY[0x263F7A908])
  {
    char v9 = 9;
    goto LABEL_5;
  }
  if (v8 == *MEMORY[0x263F7A948])
  {
    char v9 = 10;
    goto LABEL_5;
  }
  if (v8 == *MEMORY[0x263F7A910]) {
    char v20 = 11;
  }
  else {
    char v20 = 12;
  }
  *a1 = v20;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_20AAFE814(char *a1, uint64_t a2, int a3)
{
  sub_20AAFFA58(0, &qword_26AC4E3C8, MEMORY[0x263F7A8F0], MEMORY[0x263F8D8F0]);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  char v85 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v84 = (char *)&v62 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v83 = (char *)&v62 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v62 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v62 - v15;
  uint64_t v17 = sub_20AB851C0();
  uint64_t v82 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = (int *)type metadata accessor for NetworkEventData();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(self, sel_sharedNetworkReachability);
  if (!result) {
    goto LABEL_54;
  }
  uint64_t v24 = result;
  if (objc_msgSend(result, sel_isNetworkReachableViaWiFi))
  {

    int v81 = 1;
  }
  else
  {
    uint64_t v80 = v16;
    uint64_t v25 = v17;
    uint64_t v26 = a1;
    int v27 = a3;
    uint64_t v28 = v19;
    uint64_t v29 = (unsigned __int8 *)objc_msgSend(v24, sel_cellularRadioAccessTechnology);

    if ((unint64_t)(v29 - 1) > 0xC) {
      int v81 = 0;
    }
    else {
      int v81 = byte_20AB9E1F2[(void)(v29 - 1)];
    }
    uint64_t v19 = v28;
    a3 = v27;
    a1 = v26;
    uint64_t v17 = v25;
    uint64_t v16 = v80;
  }
  sub_20AB85380();
  id result = (id)sub_20AB852D0();
  double v31 = v30 * 1000.0;
  if ((~COERCE__INT64(v30 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v31 <= -9.22337204e18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v31 >= 9.22337204e18)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  id result = (id)sub_20AB85320();
  double v33 = v32 * 1000.0;
  if ((~COERCE__INT64(v32 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v33 <= -9.22337204e18)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v33 >= 9.22337204e18)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  id result = (id)sub_20AB85330();
  double v35 = v34 * 1000.0;
  if ((~COERCE__INT64(v34 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v35 <= -9.22337204e18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v35 >= 9.22337204e18)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  id result = (id)sub_20AB85340();
  double v37 = v36 * 1000.0;
  if ((~COERCE__INT64(v36 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (v37 <= -9.22337204e18)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v37 >= 9.22337204e18)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  id result = (id)sub_20AB852F0();
  double v39 = v38 * 1000.0;
  if ((~COERCE__INT64(v38 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v39 <= -9.22337204e18)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v39 >= 9.22337204e18)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    return result;
  }
  uint64_t v77 = v19;
  uint64_t v78 = v17;
  int v79 = a3;
  uint64_t v80 = a1;
  uint64_t v76 = sub_20AB852E0();
  uint64_t v75 = sub_20AB85310();
  uint64_t v74 = sub_20AB85370();
  sub_20AB85360();
  uint64_t v40 = sub_20AB852C0();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  if (v42(v16, 1, v40) == 1)
  {
    sub_20AAFF9CC((uint64_t)v16);
    uint64_t v73 = 0;
    uint64_t v72 = 0;
  }
  else
  {
    uint64_t v73 = sub_20AB85270();
    uint64_t v72 = v43;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v40);
  }
  sub_20AB85360();
  unsigned int v44 = v42(v14, 1, v40);
  if (v44 == 1)
  {
    sub_20AAFF9CC((uint64_t)v14);
    uint64_t v71 = 0;
  }
  else
  {
    uint64_t v71 = sub_20AB852B0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v40);
  }
  sub_20AB85360();
  uint64_t v45 = (uint64_t)v83;
  unsigned int v46 = v42(v83, 1, v40);
  if (v46 == 1)
  {
    sub_20AAFF9CC(v45);
    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v70 = sub_20AB852A0();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v45, v40);
  }
  sub_20AB85360();
  uint64_t v47 = (uint64_t)v84;
  if (v42(v84, 1, v40) == 1)
  {
    sub_20AAFF9CC(v47);
    uint64_t v83 = (char *)MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v83 = (char *)sub_20AB85290();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v47, v40);
  }
  sub_20AB85360();
  uint64_t v48 = (uint64_t)v85;
  if (v42(v85, 1, v40) == 1)
  {
    sub_20AAFF9CC(v48);
    uint64_t v84 = (char *)MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v84 = (char *)sub_20AB85280();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v48, v40);
  }
  LODWORD(v85) = v46 == 1;
  BOOL v69 = v44 == 1;
  uint64_t v65 = (uint64_t)v37;
  uint64_t v64 = (uint64_t)v39;
  uint64_t v68 = sub_20AB85300();
  uint64_t v67 = v49;
  int v66 = sub_20AB85350();
  uint64_t v50 = &v22[v20[10]];
  uint64_t v51 = (uint64_t *)&v22[v20[16]];
  uint64_t v52 = &v22[v20[17]];
  uint64_t v53 = v20[18];
  uint64_t v63 = v20[19];
  int v54 = &v22[v53];
  uint64_t v62 = v20[20];
  uint64_t v55 = (uint64_t *)&v22[v20[21]];
  (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v22, v77, v78);
  v22[v20[5]] = 2;
  *(void *)&v22[v20[6]] = (uint64_t)v31;
  *(void *)&v22[v20[7]] = (uint64_t)v33;
  *(void *)&v22[v20[8]] = (uint64_t)v35;
  *(void *)&v22[v20[9]] = v65;
  *(void *)uint64_t v50 = v64;
  v50[8] = 0;
  *(void *)&v22[v20[11]] = v76;
  *(void *)&v22[v20[12]] = v75;
  *(void *)&v22[v20[13]] = v74;
  v22[v20[14]] = v79;
  v22[v20[15]] = v81;
  uint64_t v56 = v72;
  uint64_t *v51 = v73;
  v51[1] = v56;
  *(void *)uint64_t v52 = v71;
  v52[8] = v69;
  *(void *)int v54 = v70;
  v54[8] = (char)v85;
  *(void *)&v22[v63] = v83;
  *(void *)&v22[v62] = v84;
  uint64_t v57 = v67;
  *uint64_t v55 = v68;
  v55[1] = v57;
  v22[v20[22]] = v66 & 1;
  sub_20AAFFA58(0, (unint64_t *)&qword_26AC51990, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v58 = sub_20AB85A70();
  uint64_t v59 = *(void *)(v58 - 8);
  unint64_t v60 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_20AB88020;
  (*(void (**)(unint64_t, void, uint64_t))(v59 + 104))(v61 + v60, *MEMORY[0x263F24D48], v58);
  sub_20AAFFB1C(&qword_26AC4F498, (void (*)(uint64_t))type metadata accessor for NetworkEventData);
  sub_20AB859E0();
  swift_bridgeObjectRelease();
  sub_20AAFFABC((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for NetworkEventData);
  type metadata accessor for TelemetryEvent(0);
  sub_20AAFFB1C(&qword_26AC4F058, (void (*)(uint64_t))type metadata accessor for TelemetryEvent);
  memset(v86, 0, 32);
  sub_20AB85A00();
  return (id)sub_20AAFFABC((uint64_t)v86, (uint64_t (*)(void))sub_20A984FF4);
}

uint64_t sub_20AAFF300()
{
  swift_release();

  swift_release();

  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t type metadata accessor for TelemetrySessionManager()
{
  return self;
}

uint64_t sub_20AAFF36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB851C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_retain();
  sub_20AB851B0();
  sub_20AB85AD0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20AAFF498()
{
  return MEMORY[0x270F7A270](*v0);
}

uint64_t sub_20AAFF4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F7A278](a1, a2, a3, a4, a5, *v5);
}

uint64_t sub_20AAFF4F0()
{
  return MEMORY[0x270F7A270](*v0);
}

uint64_t sub_20AAFF51C(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F7A288](a1, a2, *v2);
}

uint64_t sub_20AAFF548()
{
  uint64_t v0 = sub_20AB851C0();
  uint64_t v12 = *(void *)(v0 - 8);
  uint64_t v13 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20AB851F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20AB85F10();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F24E58], v7);
  sub_20AB851E0();
  sub_20AB851D0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_20AB851B0();
  sub_20AB85AF0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_20AAFF7A8()
{
  return backgroundTask(withName:timeout:work:)(15.0, 0xD000000000000016, 0x800000020ABA8F70, (uint64_t)sub_20AAFFBD8, v0);
}

uint64_t sub_20AAFF7E0(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F7A288](a1, a2, *v2);
}

uint64_t sub_20AAFF80C(uint64_t a1)
{
  return MEMORY[0x270F7A2B0](a1, *v1);
}

uint64_t sub_20AAFF838()
{
  return MEMORY[0x270F7A270](*v0);
}

uint64_t sub_20AAFF864()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20AAFF89C(uint64_t a1)
{
  return sub_20AAFE2A8(a1);
}

uint64_t sub_20AAFF8A4()
{
  uint64_t v1 = sub_20AB85390();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v6, v5);
}

id sub_20AAFF938(char *a1)
{
  uint64_t v3 = *(void *)(sub_20AB85390() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int v5 = *(unsigned __int8 *)(v1 + v4 + *(void *)(v3 + 64));

  return sub_20AAFE814(a1, v1 + v4, v5);
}

uint64_t sub_20AAFF9CC(uint64_t a1)
{
  sub_20AAFFA58(0, &qword_26AC4E3C8, MEMORY[0x263F7A8F0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20AAFFA58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20AAFFABC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20AAFFB1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20AAFFB64()
{
  if (!qword_26AC4E0D0)
  {
    sub_20AB86310();
    sub_20AB852C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC4E0D0);
    }
  }
}

uint64_t sub_20AAFFBD8(uint64_t a1, uint64_t a2)
{
  return sub_20AAFF36C(a1, a2);
}

uint64_t sub_20AAFFBE0()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t static AdEngagementData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void AdEngagementData.adEngagementType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *AdEngagementData.adEngagementType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*AdEngagementData.adEngagementType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdEngagementData __swiftcall AdEngagementData.init(adEngagementType:)(StocksAnalytics::AdEngagementData adEngagementType)
{
  *uint64_t v1 = *(unsigned char *)adEngagementType.adEngagementType;
  return adEngagementType;
}

unint64_t sub_20AAFFC64()
{
  return 0xD000000000000010;
}

uint64_t sub_20AAFFC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB00490(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AAFFCAC(uint64_t a1)
{
  unint64_t v2 = sub_20AAFFE80();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AAFFCE8(uint64_t a1)
{
  unint64_t v2 = sub_20AAFFE80();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdEngagementData.encode(to:)(void *a1)
{
  sub_20AB000C0(0, &qword_267656688, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAFFE80();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AAFFED4();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AAFFE80()
{
  unint64_t result = qword_267656690;
  if (!qword_267656690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656690);
  }
  return result;
}

unint64_t sub_20AAFFED4()
{
  unint64_t result = qword_267656698;
  if (!qword_267656698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656698);
  }
  return result;
}

uint64_t AdEngagementData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AB000C0(0, &qword_2676566A0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AAFFE80();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AB00124();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB000C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AAFFE80();
    unint64_t v7 = a3(a1, &type metadata for AdEngagementData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB00124()
{
  unint64_t result = qword_2676566A8;
  if (!qword_2676566A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676566A8);
  }
  return result;
}

uint64_t sub_20AB00180@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AdEngagementData.init(from:)(a1, a2);
}

uint64_t sub_20AB00198(void *a1)
{
  return AdEngagementData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for AdEngagementData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB0027CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementData()
{
  return &type metadata for AdEngagementData;
}

unsigned char *storeEnumTagSinglePayload for AdEngagementData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB00350);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementData.CodingKeys()
{
  return &type metadata for AdEngagementData.CodingKeys;
}

unint64_t sub_20AB0038C()
{
  unint64_t result = qword_2676566B0;
  if (!qword_2676566B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676566B0);
  }
  return result;
}

unint64_t sub_20AB003E4()
{
  unint64_t result = qword_2676566B8;
  if (!qword_2676566B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676566B8);
  }
  return result;
}

unint64_t sub_20AB0043C()
{
  unint64_t result = qword_2676566C0;
  if (!qword_2676566C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676566C0);
  }
  return result;
}

uint64_t sub_20AB00490(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA8F90)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t static OnboardingScreenData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void OnboardingScreenData.onboardingScreenType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *OnboardingScreenData.onboardingScreenType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*OnboardingScreenData.onboardingScreenType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::OnboardingScreenData __swiftcall OnboardingScreenData.init(onboardingScreenType:)(StocksAnalytics::OnboardingScreenData onboardingScreenType)
{
  *uint64_t v1 = *(unsigned char *)onboardingScreenType.onboardingScreenType;
  return onboardingScreenType;
}

unint64_t sub_20AB00564()
{
  return 0xD000000000000014;
}

uint64_t sub_20AB00580@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB00D90(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AB005AC(uint64_t a1)
{
  unint64_t v2 = sub_20AB00780();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB005E8(uint64_t a1)
{
  unint64_t v2 = sub_20AB00780();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OnboardingScreenData.encode(to:)(void *a1)
{
  sub_20AB009C0(0, &qword_2676566C8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB00780();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AB007D4();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB00780()
{
  unint64_t result = qword_2676566D0;
  if (!qword_2676566D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676566D0);
  }
  return result;
}

unint64_t sub_20AB007D4()
{
  unint64_t result = qword_2676566D8;
  if (!qword_2676566D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676566D8);
  }
  return result;
}

uint64_t OnboardingScreenData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AB009C0(0, &qword_2676566E0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB00780();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AB00A24();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB009C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB00780();
    unint64_t v7 = a3(a1, &type metadata for OnboardingScreenData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB00A24()
{
  unint64_t result = qword_2676566E8;
  if (!qword_2676566E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676566E8);
  }
  return result;
}

uint64_t sub_20AB00A80@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return OnboardingScreenData.init(from:)(a1, a2);
}

uint64_t sub_20AB00A98(void *a1)
{
  return OnboardingScreenData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for OnboardingScreenData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB00B7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingScreenData()
{
  return &type metadata for OnboardingScreenData;
}

unsigned char *storeEnumTagSinglePayload for OnboardingScreenData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB00C50);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingScreenData.CodingKeys()
{
  return &type metadata for OnboardingScreenData.CodingKeys;
}

unint64_t sub_20AB00C8C()
{
  unint64_t result = qword_2676566F0;
  if (!qword_2676566F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676566F0);
  }
  return result;
}

unint64_t sub_20AB00CE4()
{
  unint64_t result = qword_2676566F8;
  if (!qword_2676566F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676566F8);
  }
  return result;
}

unint64_t sub_20AB00D3C()
{
  unint64_t result = qword_267656700;
  if (!qword_267656700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656700);
  }
  return result;
}

uint64_t sub_20AB00D90(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA8FB0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t URLReferralData.referralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 56) = v3;
  *(void *)(a1 + 64) = v2;
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t URLReferralData.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  uint64_t v4 = v1[12];
  uint64_t v5 = v1[13];
  uint64_t v6 = v1[14];
  uint64_t v7 = v1[15];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_20AA261CC(v2, v3);
}

uint64_t URLReferralData.adReferralData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 136);
  *a1 = v2;
  a1[1] = v3;
  return sub_20A9F9290(v2, v3);
}

uint64_t destroy for URLReferralData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + 136);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for URLReferralData(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v10;
    uint64_t v11 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v12;
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
  }
  uint64_t v13 = a2 + 16;
  uint64_t v14 = a2[17];
  if (v14 == 1)
  {
    *(_OWORD *)(a1 + 128) = *v13;
  }
  else
  {
    *(void *)(a1 + 128) = *(void *)v13;
    *(void *)(a1 + 136) = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for URLReferralData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 10;
  uint64_t v5 = a2 + 10;
  uint64_t v6 = a2[11];
  if (a1[11])
  {
    if (v6)
    {
      a1[10] = a2[10];
      a1[11] = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[12] = a2[12];
      a1[13] = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[14] = a2[14];
      a1[15] = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20AA2C03C((uint64_t)(a1 + 10));
      long long v8 = *((_OWORD *)a2 + 6);
      long long v7 = *((_OWORD *)a2 + 7);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 6) = v8;
      *((_OWORD *)a1 + 7) = v7;
    }
  }
  else if (v6)
  {
    a1[10] = a2[10];
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    a1[15] = a2[15];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *((_OWORD *)a2 + 7);
    *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 7) = v10;
    *uint64_t v4 = v9;
  }
  uint64_t v11 = a2[17];
  if (a1[17] != 1)
  {
    if (v11 != 1)
    {
      a1[16] = a2[16];
      a1[17] = a2[17];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_20AA2BFE8((uint64_t)(a1 + 16));
    goto LABEL_13;
  }
  if (v11 == 1)
  {
LABEL_13:
    *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
    return a1;
  }
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

void *assignWithTake for URLReferralData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  if (a1[11])
  {
    uint64_t v9 = a2[11];
    if (v9)
    {
      a1[10] = a2[10];
      a1[11] = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = a2[13];
      a1[12] = a2[12];
      a1[13] = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = a2[15];
      a1[14] = a2[14];
      a1[15] = v11;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20AA2C03C((uint64_t)(a1 + 10));
  }
  long long v12 = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 6) = v12;
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
LABEL_6:
  uint64_t v13 = a2 + 16;
  if (a1[17] != 1)
  {
    uint64_t v14 = a2[17];
    if (v14 != 1)
    {
      a1[16] = *v13;
      a1[17] = v14;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_20AA2BFE8((uint64_t)(a1 + 16));
  }
  *((_OWORD *)a1 + 8) = *(_OWORD *)v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for URLReferralData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLReferralData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLReferralData()
{
  return &type metadata for URLReferralData;
}

uint64_t static SymbolChartData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void SymbolChartData.symbolChartDateRange.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *SymbolChartData.symbolChartDateRange.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*SymbolChartData.symbolChartDateRange.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SymbolChartData __swiftcall SymbolChartData.init(symbolChartDateRange:)(StocksAnalytics::SymbolChartData symbolChartDateRange)
{
  *uint64_t v1 = *(unsigned char *)symbolChartDateRange.symbolChartDateRange;
  return symbolChartDateRange;
}

unint64_t sub_20AB014F4()
{
  return 0xD000000000000014;
}

uint64_t sub_20AB01510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB01DC8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AB0153C(uint64_t a1)
{
  unint64_t v2 = sub_20AB01710();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB01578(uint64_t a1)
{
  unint64_t v2 = sub_20AB01710();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolChartData.encode(to:)(void *a1)
{
  sub_20AB01950(0, &qword_267656708, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB01710();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AB01764();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB01710()
{
  unint64_t result = qword_267656710;
  if (!qword_267656710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656710);
  }
  return result;
}

unint64_t sub_20AB01764()
{
  unint64_t result = qword_267656718;
  if (!qword_267656718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656718);
  }
  return result;
}

uint64_t SymbolChartData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AB01950(0, &qword_267656720, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB01710();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AB019B4();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB01950(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB01710();
    unint64_t v7 = a3(a1, &type metadata for SymbolChartData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB019B4()
{
  unint64_t result = qword_267656728;
  if (!qword_267656728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656728);
  }
  return result;
}

unint64_t sub_20AB01A0C()
{
  unint64_t result = qword_267656730;
  if (!qword_267656730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656730);
  }
  return result;
}

unint64_t sub_20AB01A64()
{
  unint64_t result = qword_267656738;
  if (!qword_267656738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656738);
  }
  return result;
}

uint64_t sub_20AB01AB8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SymbolChartData.init(from:)(a1, a2);
}

uint64_t sub_20AB01AD0(void *a1)
{
  return SymbolChartData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for SymbolChartData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB01BB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartData()
{
  return &type metadata for SymbolChartData;
}

unsigned char *storeEnumTagSinglePayload for SymbolChartData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB01C88);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartData.CodingKeys()
{
  return &type metadata for SymbolChartData.CodingKeys;
}

unint64_t sub_20AB01CC4()
{
  unint64_t result = qword_267656740;
  if (!qword_267656740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656740);
  }
  return result;
}

unint64_t sub_20AB01D1C()
{
  unint64_t result = qword_267656748;
  if (!qword_267656748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656748);
  }
  return result;
}

unint64_t sub_20AB01D74()
{
  unint64_t result = qword_267656750;
  if (!qword_267656750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656750);
  }
  return result;
}

uint64_t sub_20AB01DC8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA8FD0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t AppSessionEndEvent.Model.init(eventData:timedData:watchedSymbolListData:orientationData:viewEndData:watchlistSummaryData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __int16 *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10 = *a3;
  __int16 v11 = *a4;
  char v12 = *a5;
  uint64_t v13 = *a6;
  uint64_t v14 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a7, a1, v14);
  uint64_t v15 = (int *)type metadata accessor for AppSessionEndEvent.Model(0);
  uint64_t v16 = a7 + v15[5];
  uint64_t v17 = sub_20AB85FE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a2, v17);
  *(void *)(a7 + v15[6]) = v10;
  *(_WORD *)(a7 + v15[7]) = v11;
  *(unsigned char *)(a7 + v15[8]) = v12;
  *(void *)(a7 + v15[9]) = v13;
  return result;
}

uint64_t type metadata accessor for AppSessionEndEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4F940);
}

uint64_t sub_20AB01F6C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC4F8E8, MEMORY[0x263F24D10]);
}

uint64_t static AppSessionEndEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4E130, MEMORY[0x263F24D18], (uint64_t)qword_26AC4F8E8, a1);
}

uint64_t static AppSessionEndEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB01FD4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC4F900, MEMORY[0x263F24DC8]);
}

uint64_t static AppSessionEndEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4F918, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4F900, a1);
}

uint64_t sub_20AB02034()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656758);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656758);
  return sub_20AB85D30();
}

uint64_t static AppSessionEndEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC52090, MEMORY[0x263F24DE8], (uint64_t)qword_267656758, a1);
}

uint64_t AppSessionEndEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AppSessionEndEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AppSessionEndEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionEndEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB02C80(type metadata accessor for AppSessionEndEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for AppSessionEndEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4F9E8);
}

uint64_t AppSessionEndEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionEndEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 24);
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 24);
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.watchedSymbolListData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionEndEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 28);
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 28);
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionEndEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 32);
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionEndEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 32);
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.viewEndData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionEndEvent.watchlistSummaryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 36);
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB0280C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t AppSessionEndEvent.watchlistSummaryData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionEndEvent(0) + 36);
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionEndEvent.watchlistSummaryData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionEndEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AppSessionEndEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v2, v14);
}

uint64_t AppSessionEndEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AppSessionEndEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB02C80(type metadata accessor for AppSessionEndEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AB02C80@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t AppSessionEndEvent.Model.watchedSymbolListData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 24));

  return swift_bridgeObjectRetain();
}

uint64_t AppSessionEndEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for AppSessionEndEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t AppSessionEndEvent.Model.viewEndData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AppSessionEndEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t AppSessionEndEvent.Model.watchlistSummaryData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for AppSessionEndEvent.Model(0) + 36));

  return swift_bridgeObjectRetain();
}

unint64_t sub_20AB02E00(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 4:
      unint64_t result = 0x44646E4577656976;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20AB02EEC()
{
  return sub_20AB02E00(*v0);
}

uint64_t sub_20AB02EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB0624C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB02F1C(uint64_t a1)
{
  unint64_t v2 = sub_20AB032BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB02F58(uint64_t a1)
{
  unint64_t v2 = sub_20AB032BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppSessionEndEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB038C8(0, &qword_26AC518B0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB032BC();
  sub_20AB86DC0();
  LOBYTE(v13) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for AppSessionEndEvent.Model(0);
    LOBYTE(v13) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v13 = *(void *)(v3 + v10[6]);
    HIBYTE(v12) = 2;
    sub_20A992474();
    sub_20AB86C50();
    LOWORD(v13) = *(_WORD *)(v3 + v10[7]);
    HIBYTE(v12) = 3;
    sub_20A97C86C();
    sub_20AB86C50();
    LOBYTE(v13) = *(unsigned char *)(v3 + v10[8]);
    HIBYTE(v12) = 4;
    sub_20A97CB38();
    sub_20AB86C50();
    uint64_t v13 = *(void *)(v3 + v10[9]);
    HIBYTE(v12) = 5;
    sub_20AA423EC();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB032BC()
{
  unint64_t result = qword_26AC4F920;
  if (!qword_26AC4F920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F920);
  }
  return result;
}

uint64_t AppSessionEndEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v27 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB038C8(0, &qword_26AC51798, MEMORY[0x263F8E040]);
  uint64_t v29 = v8;
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = (int *)type metadata accessor for AppSessionEndEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB032BC();
  uint64_t v28 = v10;
  uint64_t v14 = (uint64_t)v30;
  sub_20AB86DA0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v5;
  double v30 = a1;
  uint64_t v17 = v24;
  uint64_t v16 = v25;
  uint64_t v18 = v26;
  LOBYTE(v32) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  uint64_t v19 = *(void (**)(char *, char *))(v17 + 32);
  char v20 = v27;
  int v27 = (char *)v6;
  v19(v13, v20);
  LOBYTE(v32) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v13[v11[5]], v15, v18);
  char v31 = 2;
  sub_20A992420();
  sub_20AB86B80();
  *(void *)&v13[v11[6]] = v32;
  char v31 = 3;
  sub_20A97C818();
  sub_20AB86B80();
  *(_WORD *)&v13[v11[7]] = v32;
  char v31 = 4;
  sub_20A97CAE4();
  sub_20AB86B80();
  v13[v11[8]] = v32;
  char v31 = 5;
  sub_20AA42394();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v29);
  *(void *)&v13[v11[9]] = v32;
  sub_20AB0392C((uint64_t)v13, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_20AB03990((uint64_t)v13);
}

void sub_20AB038C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB032BC();
    unint64_t v7 = a3(a1, &type metadata for AppSessionEndEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB0392C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB03990(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppSessionEndEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB039EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionEndEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB03A04(void *a1)
{
  return AppSessionEndEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB03A1C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4E130, MEMORY[0x263F24D18], (uint64_t)qword_26AC4F8E8, a1);
}

uint64_t sub_20AB03A54@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4F918, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4F900, a1);
}

uint64_t sub_20AB03A8C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC52090, MEMORY[0x263F24DE8], (uint64_t)qword_267656758, a1);
}

uint64_t sub_20AB03AC4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionEndEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for AppSessionEndEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for AppSessionEndEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionEndEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB04E2C);
}

uint64_t sub_20AB04E2C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB05150);
}

uint64_t sub_20AB05150(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  sub_20AB0280C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  sub_20AB0280C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  sub_20AB0280C(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_20AB0546C()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AB0280C(319, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
      if (v2 <= 0x3F)
      {
        sub_20AB0280C(319, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
        if (v3 <= 0x3F)
        {
          sub_20AB0280C(319, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
          if (v4 <= 0x3F)
          {
            sub_20AB0280C(319, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AppSessionEndEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(_WORD *)((char *)a1 + v12) = *(_WORD *)((char *)a2 + v12);
    uint64_t v13 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(_WORD *)(a1 + v11) = *(_WORD *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(_WORD *)(a1 + v11) = *(_WORD *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t assignWithTake for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  *(_WORD *)(a1 + a3[7]) = *(_WORD *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB05D1C);
}

uint64_t sub_20AB05D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AppSessionEndEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB05E44);
}

uint64_t sub_20AB05E44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AB05F54()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppSessionEndEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB0610CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppSessionEndEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionEndEvent.Model.CodingKeys;
}

unint64_t sub_20AB06148()
{
  unint64_t result = qword_267656770;
  if (!qword_267656770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656770);
  }
  return result;
}

unint64_t sub_20AB061A0()
{
  unint64_t result = qword_26AC4F930;
  if (!qword_26AC4F930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F930);
  }
  return result;
}

unint64_t sub_20AB061F8()
{
  unint64_t result = qword_26AC4F928;
  if (!qword_26AC4F928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F928);
  }
  return result;
}

uint64_t sub_20AB0624C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7320 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA8FF0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_20AB06510()
{
  uint64_t v0 = sub_20AB85750();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20AB85760();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, void))(v6 + 104))((char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7D110]);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_20AB07884(0, &qword_26AC4E4B0);
  swift_allocObject();
  uint64_t result = sub_20AB857A0();
  qword_26AC4E428 = result;
  return result;
}

uint64_t static Settings.Analytics2.Debugging.sessionName.getter()
{
  return sub_20AB07088(&qword_26AC4E430);
}

uint64_t sub_20AB066FC(uint64_t a1)
{
  return sub_20AB070FC(a1, 0, 0xD00000000000002BLL, 0x800000020ABA9220, &qword_26AC4E408);
}

uint64_t static Settings.Analytics2.Debugging.batchDebugging.getter()
{
  return sub_20AB07088(&qword_26AC4E410);
}

uint64_t sub_20AB06748()
{
  uint64_t v0 = sub_20AB85750();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB07884(0, &qword_26AC4E4C0);
  v5[2] = 1;
  v5[3] = 50;
  v5[1] = 50;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  uint64_t result = sub_20AB85780();
  qword_26AC4E490 = result;
  return result;
}

uint64_t static Settings.Analytics2.Debugging.batchSize.getter()
{
  return sub_20AB07088(&qword_26AC4E498);
}

uint64_t sub_20AB068A8()
{
  uint64_t v0 = sub_20AB85760();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_20AB85750();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void))(v6 + 104))(&v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F7D108]);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D110], v0);
  v8[15] = 0;
  sub_20AB07884(0, &qword_26AC4E4B8);
  swift_allocObject();
  uint64_t result = sub_20AB857A0();
  qword_26AC4E418 = result;
  return result;
}

uint64_t static Settings.Analytics2.Debugging.disableAnalytics.getter()
{
  return sub_20AB07088(&qword_26AC4E420);
}

uint64_t sub_20AB06A90()
{
  uint64_t v0 = sub_20AB85750();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v9 - v5;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))((char *)&v9 - v5, *MEMORY[0x263F7D108], v0);
  type metadata accessor for Settings.Analytics2.Debugging.Jitter();
  swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v7 = sub_20AB85720();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  qword_26AC4E438 = v7;
  return result;
}

uint64_t Settings.Analytics2.Debugging.Jitter.__allocating_init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_20AB85750();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a4, v5);
  uint64_t v9 = sub_20AB85720();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v9;
}

uint64_t static Settings.Analytics2.Debugging.jitterOverrides.getter()
{
  return sub_20AB07088(&qword_26AC4E440);
}

uint64_t sub_20AB06D50()
{
  uint64_t v0 = sub_20AB85750();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB07884(0, &qword_26AC4E4C0);
  v5[3] = 10;
  v5[2] = 5;
  v5[1] = 20;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  uint64_t result = sub_20AB85780();
  qword_26AC4E448 = result;
  return result;
}

uint64_t static Settings.Analytics2.Debugging.maxUploadRetryCount.getter()
{
  return sub_20AB07088(&qword_26AC4E450);
}

uint64_t sub_20AB06EB8()
{
  uint64_t v0 = sub_20AB85750();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20AB85710();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB077C8();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D0D8], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D108], v0);
  uint64_t result = sub_20AB85770();
  qword_26AC4E400 = result;
  return result;
}

uint64_t static Settings.Analytics2.Instrumentation.ads.getter()
{
  return sub_20AB07088(&qword_26AC4E088);
}

uint64_t sub_20AB07088(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_20AB070D4(uint64_t a1)
{
  return sub_20AB070FC(a1, 1, 0xD000000000000034, 0x800000020ABA90E0, &qword_267656778);
}

uint64_t sub_20AB070FC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = sub_20AB85750();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_20AB85760();
  MEMORY[0x270FA5388](v11);
  (*(void (**)(unsigned char *, void))(v13 + 104))(&v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F7D110]);
  (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D100], v7);
  v15[15] = a2;
  sub_20AB07884(0, &qword_26AC4E4B8);
  swift_allocObject();
  uint64_t result = sub_20AB857A0();
  *a5 = result;
  return result;
}

uint64_t static Settings.Analytics2.Debugging.Jitter.enablement.getter()
{
  return sub_20AB07088(&qword_267653630);
}

uint64_t sub_20AB072F4()
{
  uint64_t v0 = sub_20AB85750();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB07884(0, &qword_267656790);
  v5[3] = 0xC082C00000000000;
  v5[1] = 0;
  v5[2] = 0xFFEFFFFFFFFFFFFFLL;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  uint64_t result = sub_20AB85780();
  qword_267656780 = result;
  return result;
}

uint64_t static Settings.Analytics2.Debugging.Jitter.lowerBound.getter()
{
  return sub_20AB07088(&qword_267653638);
}

uint64_t sub_20AB07458()
{
  uint64_t v0 = sub_20AB85750();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB07884(0, &qword_267656790);
  v5[2] = 0;
  v5[3] = 0x4082C00000000000;
  v5[1] = 0x7FEFFFFFFFFFFFFFLL;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  uint64_t result = sub_20AB85780();
  qword_267656788 = result;
  return result;
}

uint64_t static Settings.Analytics2.Debugging.Jitter.upperBound.getter()
{
  return sub_20AB07088(&qword_267653640);
}

uint64_t Settings.Analytics2.Debugging.Jitter.init(key:defaultValue:access:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_20AB85750();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v5);
  uint64_t v8 = sub_20AB85720();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a4, v5);
  return v8;
}

uint64_t Settings.Analytics2.Debugging.Jitter.__deallocating_deinit()
{
  uint64_t v0 = _s11TeaSettings0B0C15StocksAnalyticsE10Analytics2V9DebuggingV6JitterCfd_0();

  return MEMORY[0x270FA0228](v0, 16, 7);
}

ValueMetadata *type metadata accessor for Settings.Analytics2()
{
  return &type metadata for Settings.Analytics2;
}

ValueMetadata *type metadata accessor for Settings.Analytics2.Debugging()
{
  return &type metadata for Settings.Analytics2.Debugging;
}

ValueMetadata *type metadata accessor for Settings.Analytics2.Instrumentation()
{
  return &type metadata for Settings.Analytics2.Instrumentation;
}

uint64_t type metadata accessor for Settings.Analytics2.Debugging.Jitter()
{
  uint64_t result = qword_26AC4E458;
  if (!qword_26AC4E458) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20AB07780()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20AB077C0()
{
  return type metadata accessor for Settings.Analytics2.Debugging.Jitter();
}

void sub_20AB077C8()
{
  if (!qword_26AC4E4A8)
  {
    sub_20AB85710();
    sub_20AB0782C();
    unint64_t v0 = sub_20AB85790();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E4A8);
    }
  }
}

unint64_t sub_20AB0782C()
{
  unint64_t result = qword_26AC4E4A0;
  if (!qword_26AC4E4A0)
  {
    sub_20AB85710();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E4A0);
  }
  return result;
}

void sub_20AB07884(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_20AB85790();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_20AB078D0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656798, MEMORY[0x263F24D10]);
}

uint64_t static EOAFeedViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653648, MEMORY[0x263F24D18], (uint64_t)qword_267656798, a1);
}

uint64_t static EOAFeedViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB07938(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_2676567B0, MEMORY[0x263F24DC8]);
}

uint64_t static EOAFeedViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653650, MEMORY[0x263F24DD8], (uint64_t)qword_2676567B0, a1);
}

uint64_t sub_20AB07998()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676567C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676567C8);
  return sub_20AB85D30();
}

uint64_t static EOAFeedViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653658, MEMORY[0x263F24DE8], (uint64_t)qword_2676567C8, a1);
}

uint64_t EOAFeedViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t EOAFeedViewEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*EOAFeedViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB08A2C(type metadata accessor for EOAFeedViewEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for EOAFeedViewEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676567F8);
}

uint64_t EOAFeedViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 24);
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 24);
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 28);
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 28);
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 32);
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 32);
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.hostArticleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 36);
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.hostArticleViewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 36);
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.hostArticleViewData.modify())()
{
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 40);
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EOAFeedViewEvent.hostArticleNewsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 40);
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.hostArticleNewsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 44);
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB084C0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t EOAFeedViewEvent.hostArticleChannelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent(0) + 44);
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAFeedViewEvent.hostArticleChannelData.modify())()
{
  return nullsub_1;
}

uint64_t EOAFeedViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for EOAFeedViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v2, v14);
  uint64_t v15 = a1 + v4[10];
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v2, v16);
  uint64_t v17 = a1 + v4[11];
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);

  return v19(v17, v2, v18);
}

uint64_t EOAFeedViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t EOAFeedViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB08A2C(type metadata accessor for EOAFeedViewEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AB08A2C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for EOAFeedViewEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656808);
}

uint64_t EOAFeedViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 28);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for EOAFeedViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t EOAFeedViewEvent.Model.hostArticleViewData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 36));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 40));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t EOAFeedViewEvent.Model.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAFeedViewEvent.Model(0) + 44));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 EOAFeedViewEvent.Model.init(eventData:timedData:viewData:feedData:orientationData:hostArticleViewData:hostArticleNewsArticleData:hostArticleChannelData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, __int16 *a5@<X4>, uint64_t *a6@<X5>, long long *a7@<X6>, __n128 *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  __int16 v14 = *((_WORD *)a3 + 8);
  char v15 = *a4;
  uint64_t v16 = *((void *)a4 + 1);
  uint64_t v17 = *((void *)a4 + 2);
  __int16 v28 = *a5;
  uint64_t v29 = a6[1];
  uint64_t v30 = *a6;
  long long v41 = *a7;
  uint64_t v39 = *((void *)a7 + 3);
  uint64_t v40 = *((void *)a7 + 2);
  char v38 = *((unsigned char *)a7 + 32);
  uint64_t v37 = *((void *)a7 + 5);
  char v36 = *((unsigned char *)a7 + 48);
  uint64_t v35 = *((void *)a7 + 7);
  char v33 = *((unsigned char *)a7 + 65);
  char v34 = *((unsigned char *)a7 + 64);
  char v31 = *((unsigned char *)a7 + 67);
  char v32 = *((unsigned char *)a7 + 66);
  __n128 v46 = *a8;
  unint64_t v45 = a8[1].n128_u64[0];
  unint64_t v44 = a8[1].n128_u64[1];
  unsigned __int8 v42 = a8[2].n128_u8[1];
  unsigned __int8 v43 = a8[2].n128_u8[0];
  uint64_t v18 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a9, a1, v18);
  uint64_t v19 = (int *)type metadata accessor for EOAFeedViewEvent.Model(0);
  uint64_t v20 = a9 + v19[5];
  uint64_t v21 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a2, v21);
  uint64_t v22 = a9 + v19[6];
  *(void *)uint64_t v22 = v12;
  *(void *)(v22 + 8) = v13;
  *(_WORD *)(v22 + 16) = v14;
  uint64_t v23 = a9 + v19[7];
  *(unsigned char *)uint64_t v23 = v15;
  *(void *)(v23 + 8) = v16;
  *(void *)(v23 + 16) = v17;
  *(_WORD *)(a9 + v19[8]) = v28;
  uint64_t v24 = (void *)(a9 + v19[9]);
  void *v24 = v30;
  v24[1] = v29;
  uint64_t v25 = a9 + v19[10];
  *(_OWORD *)uint64_t v25 = v41;
  *(void *)(v25 + 16) = v40;
  *(void *)(v25 + 24) = v39;
  *(unsigned char *)(v25 + 32) = v38;
  *(void *)(v25 + 40) = v37;
  *(unsigned char *)(v25 + 48) = v36;
  *(void *)(v25 + 56) = v35;
  *(unsigned char *)(v25 + 64) = v34;
  *(unsigned char *)(v25 + 65) = v33;
  *(unsigned char *)(v25 + 66) = v32;
  *(unsigned char *)(v25 + 67) = v31;
  uint64_t v26 = (__n128 *)(a9 + v19[11]);
  __n128 result = v46;
  *uint64_t v26 = v46;
  v26[1].n128_u64[0] = v45;
  v26[1].n128_u64[1] = v44;
  v26[2].n128_u8[0] = v43;
  v26[2].n128_u8[1] = v42;
  return result;
}

uint64_t sub_20AB08F30(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unsigned int v3 = 2003134838;
      goto LABEL_5;
    case 3:
      unsigned int v3 = 1684366694;
LABEL_5:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 4:
      uint64_t result = 0x7461746E6569726FLL;
      break;
    case 5:
      uint64_t result = 0xD000000000000013;
      break;
    case 6:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      uint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB09044()
{
  return sub_20AB08F30(*v0);
}

uint64_t sub_20AB0904C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB0D54C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB09074(uint64_t a1)
{
  unint64_t v2 = sub_20AB09520();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB090B0(uint64_t a1)
{
  unint64_t v2 = sub_20AB09520();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EOAFeedViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB09D84(0, &qword_2676567E0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB09520();
  sub_20AB86DC0();
  LOBYTE(v39) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for EOAFeedViewEvent.Model(0);
    LOBYTE(v39) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (uint64_t *)(v3 + v10[6]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(void *)&long long v39 = v12;
    *((void *)&v39 + 1) = v13;
    LOWORD(v40) = (_WORD)v11;
    char v51 = 2;
    sub_20A986C14();
    sub_20AB86C50();
    __int16 v14 = (char *)(v3 + v10[7]);
    char v15 = *v14;
    uint64_t v17 = *((void *)v14 + 1);
    uint64_t v16 = *((void *)v14 + 2);
    LOBYTE(v39) = v15;
    *((void *)&v39 + 1) = v17;
    uint64_t v40 = v16;
    char v51 = 3;
    sub_20A986774();
    sub_20AB86C50();
    LOWORD(v39) = *(_WORD *)(v3 + v10[8]);
    char v51 = 4;
    sub_20A97C86C();
    sub_20AB86C50();
    uint64_t v18 = (uint64_t *)(v3 + v10[9]);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    *(void *)&long long v39 = v20;
    *((void *)&v39 + 1) = v19;
    char v51 = 5;
    sub_20A9B0C0C();
    sub_20AB86C50();
    uint64_t v21 = (long long *)(v3 + v10[10]);
    long long v22 = *v21;
    uint64_t v23 = *((void *)v21 + 2);
    uint64_t v24 = *((void *)v21 + 3);
    char v25 = *((unsigned char *)v21 + 32);
    uint64_t v26 = *((void *)v21 + 5);
    char v27 = *((unsigned char *)v21 + 48);
    uint64_t v28 = *((void *)v21 + 7);
    char v29 = *((unsigned char *)v21 + 64);
    char v30 = *((unsigned char *)v21 + 65);
    char v31 = *((unsigned char *)v21 + 66);
    LOBYTE(v21) = *((unsigned char *)v21 + 67);
    long long v39 = v22;
    uint64_t v40 = v23;
    uint64_t v41 = v24;
    char v42 = v25;
    uint64_t v44 = v26;
    char v45 = v27;
    uint64_t v46 = v28;
    char v47 = v29;
    char v48 = v30;
    char v49 = v31;
    char v50 = (char)v21;
    char v51 = 6;
    sub_20A97A1AC();
    sub_20AB86C50();
    char v32 = (long long *)(v3 + v10[11]);
    long long v33 = *v32;
    uint64_t v34 = *((void *)v32 + 2);
    uint64_t v35 = *((void *)v32 + 3);
    char v36 = *((unsigned char *)v32 + 32);
    LOBYTE(v32) = *((unsigned char *)v32 + 33);
    long long v39 = v33;
    uint64_t v40 = v34;
    uint64_t v41 = v35;
    char v42 = v36;
    char v43 = (char)v32;
    char v51 = 7;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB09520()
{
  unint64_t result = qword_2676567E8;
  if (!qword_2676567E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676567E8);
  }
  return result;
}

uint64_t EOAFeedViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v55 = sub_20AB85FE0();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v56 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB09D84(0, &qword_2676567F0, MEMORY[0x263F8E040]);
  uint64_t v51 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v58 = type metadata accessor for EOAFeedViewEvent.Model(0);
  MEMORY[0x270FA5388](v58);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v57 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20AB09520();
  int v54 = v11;
  uint64_t v15 = v59;
  sub_20AB86DA0();
  uint64_t v52 = v5;
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  }
  uint64_t v59 = v9;
  LOBYTE(v60) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  uint64_t v16 = v51;
  sub_20AB86B80();
  uint64_t v17 = v13;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v13, v7, v5);
  LOBYTE(v60) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  uint64_t v18 = v4;
  uint64_t v19 = v55;
  sub_20AB86B80();
  uint64_t v20 = (int *)v58;
  (*(void (**)(char *, char *, uint64_t))(v53 + 32))(&v17[*(int *)(v58 + 20)], v18, v19);
  char v72 = 2;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v21 = (uint64_t)v17;
  uint64_t v22 = (uint64_t)v57;
  uint64_t v23 = *((void *)&v60 + 1);
  __int16 v24 = v61;
  char v25 = &v17[v20[6]];
  *(void *)char v25 = v60;
  *((void *)v25 + 1) = v23;
  *((_WORD *)v25 + 8) = v24;
  char v72 = 3;
  sub_20A986720();
  sub_20AB86B80();
  uint64_t v26 = v59;
  uint64_t v27 = *((void *)&v60 + 1);
  uint64_t v28 = v61;
  uint64_t v29 = v21 + v20[7];
  *(unsigned char *)uint64_t v29 = v60;
  *(void *)(v29 + 8) = v27;
  *(void *)(v29 + 16) = v28;
  char v72 = 4;
  sub_20A97C818();
  sub_20AB86B80();
  *(_WORD *)(v21 + v20[8]) = v60;
  char v72 = 5;
  sub_20A9B0BB8();
  sub_20AB86B80();
  uint64_t v30 = *((void *)&v60 + 1);
  char v31 = (void *)(v21 + v20[9]);
  *char v31 = v60;
  v31[1] = v30;
  char v72 = 6;
  sub_20A97A154();
  sub_20AB86B80();
  uint64_t v32 = v61;
  uint64_t v33 = v62;
  char v34 = v63;
  uint64_t v35 = v65;
  char v36 = v66;
  uint64_t v37 = v67;
  char v38 = v68;
  char v39 = v69;
  char v40 = v70;
  char v41 = v71;
  uint64_t v42 = v21 + v20[10];
  *(_OWORD *)uint64_t v42 = v60;
  *(void *)(v42 + 16) = v32;
  *(void *)(v42 + 24) = v33;
  *(unsigned char *)(v42 + 32) = v34;
  *(void *)(v42 + 40) = v35;
  *(unsigned char *)(v42 + 48) = v36;
  *(void *)(v42 + 56) = v37;
  *(unsigned char *)(v42 + 64) = v38;
  *(unsigned char *)(v42 + 65) = v39;
  *(unsigned char *)(v42 + 66) = v40;
  *(unsigned char *)(v42 + 67) = v41;
  char v72 = 7;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v54, v16);
  uint64_t v43 = v61;
  uint64_t v44 = v62;
  char v45 = v63;
  char v46 = v64;
  uint64_t v47 = v21 + v20[11];
  *(_OWORD *)uint64_t v47 = v60;
  *(void *)(v47 + 16) = v43;
  *(void *)(v47 + 24) = v44;
  *(unsigned char *)(v47 + 32) = v45;
  *(unsigned char *)(v47 + 33) = v46;
  sub_20AB09DE8(v21, v50);
  __swift_destroy_boxed_opaque_existential_1(v22);
  return sub_20AB09E4C(v21);
}

void sub_20AB09D84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB09520();
    unint64_t v7 = a3(a1, &type metadata for EOAFeedViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB09DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EOAFeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB09E4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EOAFeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB09EA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EOAFeedViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB09EC0(void *a1)
{
  return EOAFeedViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB09ED8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653648, MEMORY[0x263F24D18], (uint64_t)qword_267656798, a1);
}

uint64_t sub_20AB09F10@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653650, MEMORY[0x263F24DD8], (uint64_t)qword_2676567B0, a1);
}

uint64_t sub_20AB09F48@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653658, MEMORY[0x263F24DE8], (uint64_t)qword_2676567C8, a1);
}

uint64_t sub_20AB09F80@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v4, v15);
  uint64_t v16 = a2 + a1[10];
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v4, v17);
  uint64_t v18 = a2 + a1[11];
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);

  return v20(v18, v4, v19);
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAFeedViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for EOAFeedViewEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

uint64_t initializeWithCopy for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for EOAFeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAFeedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB0B9D0);
}

uint64_t sub_20AB0B9D0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_15;
  }
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_15;
  }
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_15;
  }
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_15;
  }
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a3[11];

  return v21(v23, a2, v22);
}

uint64_t storeEnumTagSinglePayload for EOAFeedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB0BDFC);
}

uint64_t sub_20AB0BDFC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_16:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_15:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_16;
  }
  sub_20AB084C0(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_15;
  }
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_15;
  }
  sub_20AB084C0(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_15;
  }
  sub_20AB084C0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_15;
  }
  sub_20AB084C0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_15;
  }
  sub_20AB084C0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a4[11];

  return v23(v25, a2, a2, v24);
}

void sub_20AB0C220()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AB084C0(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
      if (v2 <= 0x3F)
      {
        sub_20AB084C0(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
        if (v3 <= 0x3F)
        {
          sub_20AB084C0(319, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
          if (v4 <= 0x3F)
          {
            sub_20AB084C0(319, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
            if (v5 <= 0x3F)
            {
              sub_20AB084C0(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
              if (v6 <= 0x3F)
              {
                sub_20AB084C0(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAFeedViewEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    char *v17 = *v18;
    uint64_t v19 = *((void *)v18 + 2);
    *((void *)v17 + 1) = *((void *)v18 + 1);
    *((void *)v17 + 2) = v19;
    uint64_t v20 = a3[9];
    *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    uint64_t v21 = (uint64_t *)((char *)a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[10];
    uint64_t v25 = a3[11];
    uint64_t v26 = (char *)a1 + v24;
    uint64_t v27 = (char *)a2 + v24;
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = *((void *)v27 + 3);
    *((void *)v26 + 2) = *((void *)v27 + 2);
    *((void *)v26 + 3) = v29;
    v26[32] = v27[32];
    v26[48] = v27[48];
    *((void *)v26 + 5) = *((void *)v27 + 5);
    *((void *)v26 + 7) = *((void *)v27 + 7);
    *((_DWORD *)v26 + 16) = *((_DWORD *)v27 + 16);
    uint64_t v30 = (char *)a1 + v25;
    uint64_t v31 = (char *)a2 + v25;
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = *((void *)v31 + 3);
    *((void *)v30 + 2) = *((void *)v31 + 2);
    *((void *)v30 + 3) = v33;
    v30[32] = v31[32];
    v30[33] = v31[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  uint64_t v18 = *(void *)(v17 + 16);
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  *(void *)(v16 + 16) = v18;
  uint64_t v19 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[10];
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  uint64_t v27 = *(void *)(v26 + 8);
  *(void *)uint64_t v25 = *(void *)v26;
  *(void *)(v25 + 8) = v27;
  uint64_t v28 = *(void *)(v26 + 24);
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  *(void *)(v25 + 24) = v28;
  *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
  *(unsigned char *)(v25 + 48) = *(unsigned char *)(v26 + 48);
  *(void *)(v25 + 40) = *(void *)(v26 + 40);
  *(void *)(v25 + 56) = *(void *)(v26 + 56);
  *(_DWORD *)(v25 + 64) = *(_DWORD *)(v26 + 64);
  uint64_t v29 = a1 + v24;
  uint64_t v30 = a2 + v24;
  uint64_t v31 = *(void *)(v30 + 8);
  *(void *)uint64_t v29 = *(void *)v30;
  *(void *)(v29 + 8) = v31;
  uint64_t v32 = *(void *)(v30 + 24);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  *(void *)(v29 + 24) = v32;
  *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
  *(unsigned char *)(v29 + 33) = *(unsigned char *)(v30 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(unsigned char *)(v12 + 17) = *(unsigned char *)(v13 + 17);
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (unsigned char *)(a1 + v17);
  uint64_t v19 = (unsigned char *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)(a2 + v23);
  *(void *)(v24 + 8) = *(void *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  *(void *)(v24 + 24) = *(void *)(v25 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v24 + 32) = *(unsigned char *)(v25 + 32);
  uint64_t v26 = *(void *)(v25 + 40);
  *(unsigned char *)(v24 + 48) = *(unsigned char *)(v25 + 48);
  *(void *)(v24 + 40) = v26;
  *(void *)(v24 + 56) = *(void *)(v25 + 56);
  *(unsigned char *)(v24 + 64) = *(unsigned char *)(v25 + 64);
  *(unsigned char *)(v24 + 65) = *(unsigned char *)(v25 + 65);
  *(unsigned char *)(v24 + 66) = *(unsigned char *)(v25 + 66);
  *(unsigned char *)(v24 + 67) = *(unsigned char *)(v25 + 67);
  uint64_t v27 = a3[11];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(void *)uint64_t v28 = *(void *)(a2 + v27);
  *(void *)(v28 + 8) = *(void *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  *(void *)(v28 + 24) = *(void *)(v29 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 32) = *(unsigned char *)(v29 + 32);
  *(unsigned char *)(v28 + 33) = *(unsigned char *)(v29 + 33);
  return a1;
}

uint64_t initializeWithTake for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  uint64_t v17 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  uint64_t v18 = a3[10];
  uint64_t v19 = a3[11];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(_DWORD *)(v20 + 64) = *(_DWORD *)(v21 + 64);
  long long v22 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v22;
  long long v23 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v23;
  uint64_t v24 = a1 + v19;
  uint64_t v25 = a2 + v19;
  *(_WORD *)(v24 + 32) = *(_WORD *)(v25 + 32);
  long long v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  return a1;
}

uint64_t assignWithTake for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  uint64_t v19 = *(void *)(v17 + 8);
  uint64_t v18 = *(void *)(v17 + 16);
  *(void *)(v16 + 8) = v19;
  *(void *)(v16 + 16) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  uint64_t v21 = (void *)(a1 + v20);
  long long v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)(a2 + v25 + 8);
  *(void *)uint64_t v26 = *(void *)(a2 + v25);
  *(void *)(v26 + 8) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v27 + 24);
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  *(void *)(v26 + 24) = v29;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v26 + 32) = *(unsigned char *)(v27 + 32);
  *(void *)(v26 + 40) = *(void *)(v27 + 40);
  *(unsigned char *)(v26 + 48) = *(unsigned char *)(v27 + 48);
  *(void *)(v26 + 56) = *(void *)(v27 + 56);
  *(unsigned char *)(v26 + 64) = *(unsigned char *)(v27 + 64);
  *(unsigned char *)(v26 + 65) = *(unsigned char *)(v27 + 65);
  *(unsigned char *)(v26 + 66) = *(unsigned char *)(v27 + 66);
  *(unsigned char *)(v26 + 67) = *(unsigned char *)(v27 + 67);
  uint64_t v30 = a3[11];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)(v32 + 8);
  *(void *)uint64_t v31 = *(void *)v32;
  *(void *)(v31 + 8) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v32 + 24);
  *(void *)(v31 + 16) = *(void *)(v32 + 16);
  *(void *)(v31 + 24) = v34;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v31 + 32) = *(unsigned char *)(v32 + 32);
  *(unsigned char *)(v31 + 33) = *(unsigned char *)(v32 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB0CFFC);
}

uint64_t sub_20AB0CFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EOAFeedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB0D128);
}

uint64_t sub_20AB0D128(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AB0D23C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EOAFeedViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB0D40CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EOAFeedViewEvent.Model.CodingKeys()
{
  return &type metadata for EOAFeedViewEvent.Model.CodingKeys;
}

unint64_t sub_20AB0D448()
{
  unint64_t result = qword_267656818;
  if (!qword_267656818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656818);
  }
  return result;
}

unint64_t sub_20AB0D4A0()
{
  unint64_t result = qword_267656820;
  if (!qword_267656820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656820);
  }
  return result;
}

unint64_t sub_20AB0D4F8()
{
  unint64_t result = qword_267656828;
  if (!qword_267656828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656828);
  }
  return result;
}

uint64_t sub_20AB0D54C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7470 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000020ABA7490 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA74B0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

StocksAnalytics::StartMethod_optional __swiftcall StartMethod.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 10;
  if (v3 < 0xA) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t StartMethod.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6469577961646F74;
      break;
    case 2:
      unint64_t result = 0x6C616E7265747865;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6465725069726973;
      break;
    case 6:
      unint64_t result = 0xD000000000000020;
      break;
    case 7:
      unint64_t result = 0x6867696C746F7073;
      break;
    case 8:
      unint64_t result = 0x66666F646E6168;
      break;
    case 9:
      unint64_t result = 0x6E65746E49707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB0DA60(unsigned __int8 *a1, char *a2)
{
  return sub_20AA38CE8(*a1, *a2);
}

unint64_t sub_20AB0DA70()
{
  unint64_t result = qword_267656830;
  if (!qword_267656830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656830);
  }
  return result;
}

uint64_t sub_20AB0DAC4()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB0DB0C()
{
  return sub_20AB4DC70();
}

uint64_t sub_20AB0DB14()
{
  return sub_20AB86D80();
}

StocksAnalytics::StartMethod_optional sub_20AB0DB58(Swift::String *a1)
{
  return StartMethod.init(rawValue:)(*a1);
}

unint64_t sub_20AB0DB64@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = StartMethod.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20AB0DB8C()
{
  return sub_20AB86750();
}

uint64_t sub_20AB0DBEC()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for StartMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB0DD08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StartMethod()
{
  return &type metadata for StartMethod;
}

unint64_t sub_20AB0DD40()
{
  unint64_t result = qword_26AC4EC58;
  if (!qword_26AC4EC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC58);
  }
  return result;
}

uint64_t sub_20AB0DD94(void *a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20AB851C0();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v25 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_20AB85B70();
  uint64_t v8 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20AB85C70();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB0E85C();
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + 16) = 0;
  *(void *)(v2 + 64) = v15;
  sub_20AA65AD8((uint64_t)a1, v2 + 16);
  *(double *)(v2 + 56) = a2;
  uint64_t v17 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v16);
  sub_20AB85B60();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  uint64_t v20 = v2 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfig;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v20, v14, v11);
  sub_20AB0E8C0();
  *(void *)(v20 + *(int *)(v21 + 48)) = v19;
  long long v22 = v25;
  sub_20AB851B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v3 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfigRollDate, v22, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

double sub_20AB0E050(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  sub_20AB0E8C0();
  uint64_t v49 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v47 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85B70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20AB85C70();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20AB851C0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v44 - v17;
  os_unfair_lock_t v46 = (os_unfair_lock_t)(*(void *)(v2 + 64) + 16);
  os_unfair_lock_lock(v46);
  sub_20AB851B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v2 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfigRollDate, v12);
  sub_20AB85180();
  double v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v16, v12);
  v21(v18, v12);
  if (*(double *)(v2 + 56) >= v20)
  {
    sub_20A97B5B4();
    uint64_t v45 = sub_20AB868C0();
    sub_20AADC730();
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_20AB88030;
    uint64_t v26 = v2 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfig;
    swift_beginAccess();
    uint64_t v28 = v50;
    uint64_t v27 = v51;
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
    v30(v11, v26, v51);
  }
  else
  {
    uint64_t v22 = *(void *)(v2 + 40);
    uint64_t v23 = *(void *)(v2 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), v22);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
    sub_20AB85B60();
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v26 = v2 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfig;
    swift_beginAccess();
    uint64_t v28 = v50;
    uint64_t v27 = v51;
    (*(void (**)(uint64_t, char *, uint64_t))(v50 + 40))(v26, v11, v51);
    *(void *)(v26 + *(int *)(v49 + 48)) = v25;
    swift_endAccess();
    sub_20A97B5B4();
    uint64_t v45 = sub_20AB868C0();
    sub_20AADC730();
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_20AB88030;
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    v30(v11, v26, v27);
  }
  uint64_t v31 = sub_20AB85C60();
  uint64_t v33 = v32;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v27);
  *(void *)(v29 + 56) = MEMORY[0x263F8D310];
  *(void *)(v29 + 64) = sub_20AADC798();
  *(void *)(v29 + 32) = v31;
  *(void *)(v29 + 40) = v33;
  uint64_t v34 = v49;
  uint64_t v35 = *(void *)(v26 + *(int *)(v49 + 48));
  uint64_t v36 = (void *)v45;
  uint64_t v37 = MEMORY[0x263F8D5B8];
  *(void *)(v29 + 96) = MEMORY[0x263F8D538];
  *(void *)(v29 + 104) = v37;
  *(void *)(v29 + 72) = v35;
  sub_20AB86820();
  sub_20AB86440();

  swift_bridgeObjectRelease();
  uint64_t v38 = v2 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfig;
  swift_beginAccess();
  uint64_t v39 = *(int *)(v34 + 48);
  char v40 = v47;
  uint64_t v41 = v51;
  v30(v47, v38, v51);
  double v42 = *(double *)(v38 + v39);
  (*(void (**)(uint64_t, char *, uint64_t))(v50 + 32))(v48, v40, v41);
  os_unfair_lock_unlock(v46);
  return v42;
}

uint64_t sub_20AB0E61C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  sub_20AB0E92C(v0 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfig);
  uint64_t v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics37RollingTimestampConfigurationProvider_lastConfigRollDate;
  uint64_t v2 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_20AB0E6DC()
{
  return type metadata accessor for RollingTimestampConfigurationProvider();
}

uint64_t type metadata accessor for RollingTimestampConfigurationProvider()
{
  uint64_t result = qword_26AC4E358;
  if (!qword_26AC4E358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20AB0E730()
{
  uint64_t v4 = "(";
  uint64_t v5 = MEMORY[0x263F8CF70] + 64;
  uint64_t v6 = MEMORY[0x263F8CF88] + 64;
  uint64_t result = sub_20AB85C70();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v3;
    uint64_t result = sub_20AB851C0();
    if (v2 <= 0x3F)
    {
      uint64_t v8 = *(void *)(result - 8) + 64;
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

double sub_20AB0E838(uint64_t a1)
{
  return sub_20AB0E050(a1);
}

void sub_20AB0E85C()
{
  if (!qword_26AC4E390)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_20AB869C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E390);
    }
  }
}

void sub_20AB0E8C0()
{
  if (!qword_26AC4E320)
  {
    sub_20AB85C70();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC4E320);
    }
  }
}

uint64_t sub_20AB0E92C(uint64_t a1)
{
  sub_20AB0E8C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

StocksAnalytics::PaidSubscriptionStatus_optional __swiftcall PaidSubscriptionStatus.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t PaidSubscriptionStatus.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C61697274;
      break;
    case 2:
      unint64_t result = 0x6269726373627573;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6373627553746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB0EAA0(unsigned __int8 *a1, char *a2)
{
  return sub_20AA35A6C(*a1, *a2);
}

unint64_t sub_20AB0EAB0()
{
  unint64_t result = qword_267656838;
  if (!qword_267656838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656838);
  }
  return result;
}

uint64_t sub_20AB0EB04()
{
  return sub_20AB4D048();
}

uint64_t sub_20AB0EB0C()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB0EBFC()
{
  return sub_20AB4ED60();
}

StocksAnalytics::PaidSubscriptionStatus_optional sub_20AB0EC04(Swift::String *a1)
{
  return PaidSubscriptionStatus.init(rawValue:)(*a1);
}

void sub_20AB0EC10(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6C61697274;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6269726373627573;
      *(void *)(a1 + 8) = 0xEA00000000006465;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000012;
      *(void *)(a1 + 8) = 0x800000020ABA6DA0;
      break;
    case 4:
      strcpy((char *)a1, "notSubscribed");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20AB0ECDC()
{
  return sub_20AB86750();
}

uint64_t sub_20AB0ED3C()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for PaidSubscriptionStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB0EE58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidSubscriptionStatus()
{
  return &type metadata for PaidSubscriptionStatus;
}

unint64_t sub_20AB0EE90()
{
  unint64_t result = qword_26AC50888;
  if (!qword_26AC50888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50888);
  }
  return result;
}

id SessionObserver.__allocating_init(sessionManager:watchlistManager:cloudContext:userContext:client:kind:appConfigurationManager:appIntentExecutionTypeProvider:)(uint64_t a1, void *a2, void *a3, void *a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  id v17 = objc_allocWithZone(v8);
  id v18 = sub_20AB10F44(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_release();

  return v18;
}

BOOL static SessionObserverKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SessionObserverKind.hash(into:)()
{
  return sub_20AB86D70();
}

uint64_t SessionObserverKind.hashValue.getter()
{
  return sub_20AB86D80();
}

uint64_t SessionObserver.window.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_window;
  swift_beginAccess();
  return MEMORY[0x21052AE40](v1);
}

void sub_20AB0F05C(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  id v2 = v1;
  sub_20AB0F130();
}

void SessionObserver.window.setter(void *a1)
{
}

void sub_20AB0F130()
{
  sub_20AB11A5C(0, &qword_26AC4E4E0, (void (*)(void))sub_20AB11ABC);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v28 - v4;
  uint64_t v6 = v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_window;
  swift_beginAccess();
  uint64_t v7 = (void *)MEMORY[0x21052AE40](v6);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_windowScene);

    if (v9)
    {
      id v10 = objc_msgSend(v9, sel_interfaceOrientation);

      id v11 = objc_msgSend(self, sel_currentDevice);
      id v12 = objc_msgSend(v11, sel_orientation);
      uint64_t v36 = v3;
      unint64_t v13 = (unint64_t)v12;

      if (v13 >= 7) {
        int v14 = 0;
      }
      else {
        int v14 = v13;
      }
      if ((unint64_t)v10 >= 5) {
        int v15 = 0;
      }
      else {
        int v15 = 0x304020100uLL >> (8 * v10);
      }
      int v32 = v15;
      int v33 = v14;
      uint64_t v35 = *(void *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager);
      sub_20AB85B30();
      char v37 = v14;
      char v38 = v15;
      sub_20AB11C4C(0, (unint64_t *)&qword_26AC51990, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
      uint64_t v30 = v16;
      uint64_t v17 = sub_20AB85A70();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v31 = v5;
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)(v18 + 72);
      uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
      uint64_t v34 = v2;
      uint64_t v22 = (v21 + 32) & ~v21;
      uint64_t v29 = v22 + v20;
      uint64_t v23 = swift_allocObject();
      long long v28 = xmmword_20AB88020;
      *(_OWORD *)(v23 + 16) = xmmword_20AB88020;
      uint64_t v24 = *MEMORY[0x263F24D40];
      uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 104);
      v25(v23 + v22, v24, v17);
      sub_20AB11ABC();
      sub_20AB85F60();
      swift_bridgeObjectRelease();
      swift_release();
      char v37 = v33;
      char v38 = v32;
      uint64_t v26 = v31;
      sub_20AB85910();
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v28;
      v25(v27 + v22, v24, v17);
      sub_20AB85AE0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v34);
    }
  }
}

void (*SessionObserver.window.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_window;
  void v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x21052AE40](v5);
  return sub_20AB0F594;
}

void sub_20AB0F594(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

    sub_20AB0F130();
  }

  free(v3);
}

id SessionObserver.init(sessionManager:watchlistManager:cloudContext:userContext:client:kind:appConfigurationManager:appIntentExecutionTypeProvider:)(uint64_t a1, void *a2, void *a3, void *a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  id v9 = sub_20AB10F44(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_release();

  return v9;
}

uint64_t sub_20AB0F65C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  switch(a2)
  {
    case 0:
    case 3:
      return result;
    case 1:
      Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      sub_20AB0F874(v2);

      type metadata accessor for AppSessionStartEvent(0);
      sub_20AB11C04((unint64_t *)&qword_26AC50118, 255, (void (*)(uint64_t))type metadata accessor for AppSessionStartEvent);
      long long v4 = 0u;
      long long v5 = 0u;
      sub_20AB85A00();
      sub_20A984F98((uint64_t)&v4);
      type metadata accessor for AppSessionEndEvent(0);
      sub_20AB11C04(&qword_26AC4F9E0, 255, (void (*)(uint64_t))type metadata accessor for AppSessionEndEvent);
      unint64_t result = sub_20AB859F0();
      break;
    case 2:
      type metadata accessor for AppSessionEndEvent(0);
      sub_20AB11C04(&qword_26AC4F9E0, 255, (void (*)(uint64_t))type metadata accessor for AppSessionEndEvent);
      long long v4 = 0u;
      long long v5 = 0u;
      sub_20AB85A00();
      unint64_t result = sub_20A984F98((uint64_t)&v4);
      break;
    default:
      sub_20AB86A50();
      __break(1u);
      JUMPOUT(0x20AB0F864);
  }
  return result;
}

uint64_t sub_20AB0F874(uint64_t a1)
{
  uint64_t v52 = a1;
  sub_20AB11A5C(0, &qword_26AC4E4F8, (void (*)(void))sub_20AB119B4);
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v49 = (char *)&v41 - v3;
  sub_20AB11A5C(0, &qword_26AC4E098, (void (*)(void))sub_20AB11A08);
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v45 = (char *)&v41 - v5;
  uint64_t v6 = sub_20AB856A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v12 = (char *)&v41 - v11;
  uint64_t v46 = v1;
  unint64_t v13 = (void *)(v1 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_watchlistManager);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_watchlistManager), *(void *)(v1 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_watchlistManager + 24));
  sub_20AB854A0();
  uint64_t v44 = sub_20AB85690();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v7 + 8);
  *(void *)&long long v57 = v7 + 8;
  v56(v12, v6);
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  uint64_t v14 = sub_20AB854C0();
  int64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v58 = MEMORY[0x263F8EE78];
    sub_20AA5F61C(0, v15, 0);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v16 = v7 + 16;
    uint64_t v18 = *(unsigned __int8 *)(v16 + 64);
    uint64_t v43 = v14;
    uint64_t v19 = v14 + ((v18 + 32) & ~v18);
    uint64_t v53 = *(void *)(v16 + 56);
    int v54 = v17;
    uint64_t v55 = v16;
    do
    {
      v54(v10, v19, v6);
      char v20 = sub_20AB85680();
      uint64_t v21 = sub_20AB85690();
      v56(v10, v6);
      uint64_t v22 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20AA5F61C(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v58;
      }
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v23 = *(void *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_20AA5F61C(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v58;
      }
      *(void *)(v22 + 16) = v24 + 1;
      unint64_t v25 = v22 + 16 * v24;
      *(unsigned char *)(v25 + 32) = (v20 ^ 1) & 1;
      *(void *)(v25 + 40) = v21;
      v19 += v53;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x263F8EE78];
  }
  uint64_t v26 = v44;
  uint64_t v58 = v44;
  sub_20AB11C4C(0, (unint64_t *)&qword_26AC51990, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v55 = v27;
  uint64_t v28 = sub_20AB85A70();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v31 = (v30 + 32) & ~v30;
  uint64_t v56 = (void (*)(char *, uint64_t))(v31 + *(void *)(v29 + 72));
  int v54 = (void (*)(char *, uint64_t, uint64_t))(v30 | 7);
  uint64_t v32 = swift_allocObject();
  long long v57 = xmmword_20AB88020;
  *(_OWORD *)(v32 + 16) = xmmword_20AB88020;
  uint64_t v33 = *MEMORY[0x263F24D40];
  double v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 104);
  LODWORD(v43) = v33;
  uint64_t v53 = v28;
  v42(v32 + v31, v33, v28);
  sub_20AB11A08();
  sub_20AB859E0();
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v46 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager);
  uint64_t v58 = v26;
  uint64_t v34 = v45;
  sub_20AB85910();
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v57;
  uint64_t v36 = v33;
  char v37 = v42;
  v42(v35 + v31, v36, v28);
  sub_20AB85AE0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v48);
  uint64_t v58 = v22;
  sub_20AB119B4();
  sub_20AB859E0();
  uint64_t v58 = v22;
  char v38 = v49;
  sub_20AB85910();
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v57;
  v37(v39 + v31, v43, v53);
  sub_20AB85AE0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v38, v51);
}

id SessionObserver.__deallocating_deinit()
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v2 = objc_msgSend(self, sel_currentDevice);
  objc_msgSend(v2, sel_endGeneratingDeviceOrientationNotifications);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

id SessionObserver.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SessionObserver.init()()
{
}

uint64_t sub_20AB101B4()
{
  swift_getObjectType();

  return sub_20AB856E0();
}

uint64_t sub_20AB1020C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A888](a1, a2, ObjectType, a6);
}

uint64_t sub_20AB10274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A898](a1, a2, a3, ObjectType, a7);
}

uint64_t sub_20AB102E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A880](a1, a2, a3, a4, ObjectType, a8);
}

uint64_t SessionObserver.watchlistManagerWatchlistsDidChange(_:)()
{
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  sub_20AB85F40();

  return swift_release();
}

uint64_t SessionObserver.watchlistManager(_:observedChanges:in:)()
{
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  sub_20AB85F40();

  return swift_release();
}

uint64_t sub_20AB1046C()
{
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  sub_20AB85F40();

  return swift_release();
}

uint64_t sub_20AB104F0()
{
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  sub_20AB85F40();

  return swift_release();
}

Swift::Void __swiftcall SessionObserver.sceneDidEnterBackground()()
{
  sub_20AB85B30();
  sub_20AB11C4C(0, (unint64_t *)&qword_26AC51990, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v0 = sub_20AB85A70();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20AB88020;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x263F24D40], v0);
  sub_20AB11510();
  sub_20AB85F60();
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_20AB106EC()
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A270](ObjectType);
}

uint64_t sub_20AB10728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A278](a1, a2, a3, a4, a5, ObjectType);
}

uint64_t sub_20AB107A8()
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A270](ObjectType);
}

uint64_t sub_20AB107E4(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A288](a1, a2, ObjectType);
}

uint64_t sub_20AB1083C()
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A270](ObjectType);
}

uint64_t sub_20AB1087C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A288](a1, a2, ObjectType);
}

uint64_t sub_20AB108D8()
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A270](ObjectType);
}

uint64_t SessionObserver.processURL(for:)(uint64_t a1)
{
  sub_20AB11C4C(0, (unint64_t *)&qword_26AC4E740, MEMORY[0x263F7D2D0], MEMORY[0x263F7CEB0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v11 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v11 - v6, a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, v4);
  v1;
  sub_20AB85AC0();
  swift_release();
  return sub_20AAA4F1C();
}

uint64_t sub_20AB10AA8(uint64_t a1)
{
  sub_20AB11C4C(0, (unint64_t *)&qword_26AC4E740, MEMORY[0x263F7D2D0], MEMORY[0x263F7CEB0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v12 - v6;
  unint64_t v8 = *v1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - v6, a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, v7, v4);
  v8;
  sub_20AB85AC0();
  swift_release();
  return sub_20AAA4F1C();
}

uint64_t _s15StocksAnalytics15SessionObserverC8patternsSay13TeaFoundation17URLHandlerPatternVGvg_0()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_20AB11C4C(0, &qword_26AC519C0, MEMORY[0x263F7CEF8], MEMORY[0x263F8E0F8]);
  sub_20AB862E0();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_20AB88020;
  sub_20AB11C4C(0, &qword_26AC519B8, MEMORY[0x263F7CED8], v0);
  uint64_t v2 = sub_20AB862C0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_20AB95670;
  uint64_t v7 = (char *)(v6 + v5);
  *(void *)uint64_t v7 = 0x6E676961706D6163;
  *((void *)v7 + 1) = 0xEB0000000064695FLL;
  unint64_t v8 = *(void (**)(void))(v3 + 104);
  ((void (*)(char *, void, uint64_t))v8)(v7, *MEMORY[0x263F7CEC0], v2);
  strcpy(&v7[v4], "campaign_type");
  *(_WORD *)&v7[v4 + 14] = -4864;
  v8();
  unint64_t v9 = &v7[2 * v4];
  *(void *)unint64_t v9 = 0x6576697461657263;
  *((void *)v9 + 1) = 0xEB0000000064695FLL;
  v8();
  uint64_t v10 = &v7[3 * v4];
  *(void *)uint64_t v10 = 0x695F656372756F73;
  *((void *)v10 + 1) = 0xE900000000000064;
  v8();
  unint64_t v11 = sub_20AAD9344(MEMORY[0x263F8EE78]);
  MEMORY[0x210529D50](42, 0xE100000000000000, 0, 0, 0, 0, 0, 0, v6, v11);
  return v1;
}

id sub_20AB10F44(uint64_t a1, void *a2, void *a3, void *a4, void *a5, char *a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v17 = *a6;
  int v36 = *a6;
  swift_unknownObjectWeakInit();
  sub_20AA65AD8((uint64_t)a2, (uint64_t)&v8[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_watchlistManager]);
  *(void *)&v8[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager] = a1;
  uint64_t v18 = v8;
  swift_retain();
  *(void *)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_tracker] = sub_20AB85B30();
  *(void *)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext] = a3;
  sub_20AB11B10((uint64_t)a4, (uint64_t)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_userContext]);
  *(void *)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_client] = a5;
  v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_kind] = v17;
  sub_20AA65AD8(a7, (uint64_t)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appConfigurationManager]);
  uint64_t v38 = a8;
  sub_20AA65AD8(a8, (uint64_t)&v18[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_appIntentExecutionTypeProvider]);
  id v19 = a3;
  id v37 = a5;

  v39.receiver = v18;
  v39.super_class = ObjectType;
  id v20 = objc_msgSendSuper2(&v39, sel_init);
  sub_20A9BBB28();
  sub_20AB85B30();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_20AB85F50();
  swift_release();
  swift_release();
  swift_release_n();
  id v21 = objc_msgSend(self, sel_currentDevice);
  objc_msgSend(v21, sel_beginGeneratingDeviceOrientationNotifications);

  sub_20AB0F130();
  uint64_t v22 = self;
  id v23 = objc_msgSend(v22, sel_defaultCenter);
  objc_msgSend(v23, sel_addObserver_selector_name_object_, v20, sel_pushOrientationData, *MEMORY[0x263F834A8], 0);

  sub_20AB1FE04();
  *(void *)(swift_allocObject() + 16) = v20;
  id v24 = v20;
  sub_20AB85AC0();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v24;
  id v25 = v24;
  sub_20AB85AC0();
  swift_release();
  *(void *)(swift_allocObject() + 16) = v25;
  id v26 = v25;
  sub_20AB85AC0();
  swift_release();
  sub_20AB0F130();
  id v27 = objc_msgSend(v22, sel_defaultCenter);
  uint64_t v28 = (void *)sub_20AB866D0();
  objc_msgSend(v27, sel_addObserver_selector_name_object_, v26, sel_offerDidChange_, v28, 0);

  __swift_project_boxed_opaque_existential_1(a4, a4[3]);
  sub_20AB11C04(&qword_26AC4F2A0, v29, (void (*)(uint64_t))type metadata accessor for SessionObserver);
  id v30 = v26;
  sub_20AB85530();

  _s15StocksAnalytics15SessionObserverC21identificationService_15didChangeUserIDy0A4Core014IdentificationF4Type_p_SStF_0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20AB11C04(&qword_26AC4F298, v31, (void (*)(uint64_t))type metadata accessor for SessionObserver);
  id v32 = v30;
  sub_20AB854B0();

  if (v36)
  {
    id v33 = v37;
  }
  else
  {
    swift_allocObject();
    swift_unknownObjectUnownedInit();
    swift_retain();
    swift_retain();
    sub_20AB85F50();
    swift_release();
    swift_release_n();
    id v33 = v32;
    sub_20AB85B50();

    swift_release();
  }

  __swift_destroy_boxed_opaque_existential_1(v38);
  __swift_destroy_boxed_opaque_existential_1(a7);
  sub_20AB117BC((uint64_t)a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v32;
}

uint64_t sub_20AB114B4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20AB114EC(uint64_t a1)
{
  return sub_20AB0F874(a1);
}

unint64_t sub_20AB11510()
{
  unint64_t result = qword_26AC4E0F0;
  if (!qword_26AC4E0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E0F0);
  }
  return result;
}

unint64_t sub_20AB11570()
{
  unint64_t result = qword_267656858;
  if (!qword_267656858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656858);
  }
  return result;
}

uint64_t sub_20AB115C4(uint64_t a1, uint64_t a2)
{
  return sub_20AB11C04(&qword_26AC4E128, a2, (void (*)(uint64_t))type metadata accessor for SessionObserver);
}

uint64_t type metadata accessor for SessionObserver()
{
  return self;
}

uint64_t sub_20AB11630@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_window;
  swift_beginAccess();
  uint64_t result = MEMORY[0x21052AE40](v3);
  *a2 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for SessionObserverKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB11758);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionObserverKind()
{
  return &type metadata for SessionObserverKind;
}

uint64_t method lookup function for SessionObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SessionObserver);
}

uint64_t dispatch thunk of SessionObserver.__allocating_init(sessionManager:watchlistManager:cloudContext:userContext:client:kind:appConfigurationManager:appIntentExecutionTypeProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_20AB117BC(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroy_5Tm()
{
  sub_20AB11C4C(0, (unint64_t *)&qword_26AC4E740, MEMORY[0x263F7D2D0], MEMORY[0x263F7CEB0]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);

  return MEMORY[0x270FA0238](v0, v6, v7);
}

uint64_t sub_20AB11910(uint64_t a1)
{
  sub_20AB11C4C(0, (unint64_t *)&qword_26AC4E740, MEMORY[0x263F7D2D0], MEMORY[0x263F7CEB0]);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));

  return sub_20A983CF0(a1, v4, v5);
}

unint64_t sub_20AB119B4()
{
  unint64_t result = qword_26AC50578;
  if (!qword_26AC50578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50578);
  }
  return result;
}

unint64_t sub_20AB11A08()
{
  unint64_t result = qword_26AC506A8;
  if (!qword_26AC506A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC506A8);
  }
  return result;
}

void sub_20AB11A5C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_20AB85920();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_20AB11ABC()
{
  unint64_t result = qword_26AC4F280;
  if (!qword_26AC4F280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F280);
  }
  return result;
}

uint64_t sub_20AB11B10(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20AB11B6C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20AB11BA4(uint64_t a1, uint64_t a2)
{
  sub_20A9CD048(a1, a2, v2);
}

uint64_t sub_20AB11BAC()
{
  return sub_20AA1B7F4();
}

uint64_t sub_20AB11BB4()
{
  return sub_20AABFC34();
}

uint64_t sub_20AB11BBC()
{
  return sub_20A9C307C();
}

uint64_t sub_20AB11BC4()
{
  swift_unknownObjectUnownedDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20AB11BFC(uint64_t result, uint64_t a2)
{
  return sub_20AB0F65C(result, a2);
}

uint64_t sub_20AB11C04(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20AB11C4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

StocksAnalytics::AppIntentType_optional __swiftcall AppIntentType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t AppIntentType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x626D79536E65706FLL;
      break;
    case 2:
      unint64_t result = 0x637461576E65706FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x697472416E65706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB11DF0(unsigned __int8 *a1, char *a2)
{
  return sub_20AA38634(*a1, *a2);
}

unint64_t sub_20AB11E00()
{
  unint64_t result = qword_267656898;
  if (!qword_267656898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656898);
  }
  return result;
}

uint64_t sub_20AB11E54()
{
  return sub_20AB4D150();
}

uint64_t sub_20AB11E5C()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB11F58()
{
  return sub_20AB4E31C();
}

StocksAnalytics::AppIntentType_optional sub_20AB11F60(Swift::String *a1)
{
  return AppIntentType.init(rawValue:)(*a1);
}

void sub_20AB11F6C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000006C6FLL;
      uint64_t v3 = 0x626D79536E65706FLL;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "openWatchlist");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000010;
      *(void *)(a1 + 8) = 0x800000020ABA6DD0;
      break;
    case 4:
      *(void *)a1 = 0x697472416E65706FLL;
      *(void *)(a1 + 8) = 0xEB00000000656C63;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20AB12044()
{
  return sub_20AB86750();
}

uint64_t sub_20AB120A4()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for AppIntentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB121C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIntentType()
{
  return &type metadata for AppIntentType;
}

unint64_t sub_20AB121F8()
{
  unint64_t result = qword_2676568A0;
  if (!qword_2676568A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676568A0);
  }
  return result;
}

uint64_t sub_20AB1224C()
{
  uint64_t v0 = sub_20AB859A0();
  __swift_allocate_value_buffer(v0, qword_2676568A8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2676568A8);
  *(void *)uint64_t v1 = 0x7364612E6D6F63;
  *(void *)(v1 + 8) = 0xE700000000000000;
  *(void *)(v1 + 16) = 3;
  *(unsigned char *)(v1 + 24) = 0;
  unint64_t v2 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v2();
}

uint64_t static InterstitialAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653660, MEMORY[0x263F24D18], (uint64_t)qword_2676568A8, a1);
}

uint64_t static InterstitialAdImpressionEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB12338()
{
  uint64_t v0 = sub_20AB85C70();
  __swift_allocate_value_buffer(v0, qword_2676568C0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2676568C0);
  uint64_t v2 = *MEMORY[0x263F24DC0];
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static InterstitialAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653668, MEMORY[0x263F24DD8], (uint64_t)qword_2676568C0, a1);
}

uint64_t sub_20AB123F8()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676568D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676568D8);
  return sub_20AB85D30();
}

uint64_t static InterstitialAdImpressionEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653670, MEMORY[0x263F24DE8], (uint64_t)qword_2676568D8, a1);
}

uint64_t InterstitialAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t InterstitialAdImpressionEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*InterstitialAdImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB12E2C(type metadata accessor for InterstitialAdImpressionEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for InterstitialAdImpressionEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656908);
}

uint64_t InterstitialAdImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 24);
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InterstitialAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 24);
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 28);
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InterstitialAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 28);
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.adPlacementData.modify())()
{
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 32);
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB12A28(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t InterstitialAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent(0) + 32);
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*InterstitialAdImpressionEvent.adFeedData.modify())()
{
  return nullsub_1;
}

uint64_t InterstitialAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for InterstitialAdImpressionEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = *MEMORY[0x263F24D30];
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v11, v12, v13);
}

uint64_t InterstitialAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t InterstitialAdImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB12E2C(type metadata accessor for InterstitialAdImpressionEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AB12E2C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for InterstitialAdImpressionEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656918);
}

uint64_t InterstitialAdImpressionEvent.Model.adUserData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent.Model(0) + 24));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t InterstitialAdImpressionEvent.Model.adPlacementData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for InterstitialAdImpressionEvent.Model(0) + 28));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t InterstitialAdImpressionEvent.Model.adFeedData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t InterstitialAdImpressionEvent.Model.init(eventData:timedData:adUserData:adPlacementData:adFeedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  uint64_t v11 = *a4;
  uint64_t v12 = a4[1];
  char v13 = *a5;
  uint64_t v14 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a6, a1, v14);
  int64_t v15 = (int *)type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  uint64_t v16 = a6 + v15[5];
  uint64_t v17 = sub_20AB85FE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a2, v17);
  id v19 = (void *)(a6 + v15[6]);
  *id v19 = v9;
  v19[1] = v10;
  id v20 = (void *)(a6 + v15[7]);
  *id v20 = v11;
  v20[1] = v12;
  *(unsigned char *)(a6 + v15[8]) = v13;
  return result;
}

uint64_t sub_20AB130A0()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t v2 = 0x726573556461;
      goto LABEL_6;
    case 3:
      uint64_t result = 0x6D6563616C506461;
      break;
    case 4:
      uint64_t v2 = 0x646565466461;
LABEL_6:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB13154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB15FB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB1317C(uint64_t a1)
{
  unint64_t v2 = sub_20AB134E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB131B8(uint64_t a1)
{
  unint64_t v2 = sub_20AB134E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InterstitialAdImpressionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB13AFC(0, &qword_2676568F0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB134E0();
  sub_20AB86DC0();
  LOBYTE(v20) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for InterstitialAdImpressionEvent.Model(0);
    LOBYTE(v20) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (uint64_t *)(v3 + v10[6]);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v20 = v13;
    uint64_t v21 = v12;
    char v19 = 2;
    sub_20A99A454();
    sub_20AB86C50();
    uint64_t v14 = (uint64_t *)(v3 + v10[7]);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    uint64_t v20 = v16;
    uint64_t v21 = v15;
    char v19 = 3;
    sub_20A99A9F4();
    sub_20AB86C50();
    LOBYTE(v20) = *(unsigned char *)(v3 + v10[8]);
    char v19 = 4;
    sub_20A99B0E4();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB134E0()
{
  unint64_t result = qword_2676568F8;
  if (!qword_2676568F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676568F8);
  }
  return result;
}

uint64_t InterstitialAdImpressionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v30 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB13AFC(0, &qword_267656900, MEMORY[0x263F8E040]);
  uint64_t v32 = v8;
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = (int *)type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB134E0();
  uint64_t v31 = v10;
  uint64_t v14 = (uint64_t)v33;
  sub_20AB86DA0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v5;
  id v33 = a1;
  uint64_t v16 = v27;
  uint64_t v17 = v28;
  uint64_t v18 = v29;
  LOBYTE(v34) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v30, v6);
  LOBYTE(v34) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v13[v11[5]], v15, v18);
  char v36 = 2;
  sub_20A99A400();
  sub_20AB86B80();
  uint64_t v19 = v35;
  uint64_t v20 = &v13[v11[6]];
  *(void *)uint64_t v20 = v34;
  *((void *)v20 + 1) = v19;
  char v36 = 3;
  sub_20A99A9A0();
  sub_20AB86B80();
  uint64_t v21 = v35;
  uint64_t v22 = &v13[v11[7]];
  *(void *)uint64_t v22 = v34;
  *((void *)v22 + 1) = v21;
  char v36 = 4;
  sub_20A99B090();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v32);
  v13[v11[8]] = v34;
  sub_20AB13B60((uint64_t)v13, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_20AB13BC4((uint64_t)v13);
}

void sub_20AB13AFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB134E0();
    unint64_t v7 = a3(a1, &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB13B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB13BC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InterstitialAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB13C20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InterstitialAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB13C38(void *a1)
{
  return InterstitialAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB13C50@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653660, MEMORY[0x263F24D18], (uint64_t)qword_2676568A8, a1);
}

uint64_t sub_20AB13C88@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653668, MEMORY[0x263F24DD8], (uint64_t)qword_2676568C0, a1);
}

uint64_t sub_20AB13CC0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653670, MEMORY[0x263F24DE8], (uint64_t)qword_2676568D8, a1);
}

uint64_t sub_20AB13CF8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = *MEMORY[0x263F24D30];
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v12, v13, v14);
}

uint64_t *initializeBufferWithCopyOfBuffer for InterstitialAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for InterstitialAdImpressionEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB14CF8);
}

uint64_t sub_20AB14CF8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for InterstitialAdImpressionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB14F98);
}

uint64_t sub_20AB14F98(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  sub_20AB12A28(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  sub_20AB12A28(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  sub_20AB12A28(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_20AB15230()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AB12A28(319, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
      if (v2 <= 0x3F)
      {
        sub_20AB12A28(319, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
        if (v3 <= 0x3F)
        {
          sub_20AB12A28(319, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for InterstitialAdImpressionEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)a1 + v12);
    uint64_t v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (void *)((char *)a1 + v13);
    uint64_t v18 = (void *)((char *)a2 + v13);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)(a1 + v12);
  uint64_t v17 = (void *)(a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB15A88);
}

uint64_t sub_20AB15A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for InterstitialAdImpressionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB15BB4);
}

uint64_t sub_20AB15BB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AB15CC8()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InterstitialAdImpressionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB15E70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InterstitialAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for InterstitialAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_20AB15EAC()
{
  unint64_t result = qword_267656928;
  if (!qword_267656928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656928);
  }
  return result;
}

unint64_t sub_20AB15F04()
{
  unint64_t result = qword_267656930;
  if (!qword_267656930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656930);
  }
  return result;
}

unint64_t sub_20AB15F5C()
{
  unint64_t result = qword_267656938;
  if (!qword_267656938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656938);
  }
  return result;
}

uint64_t sub_20AB15FB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

StocksAnalytics::MediaUserAction_optional __swiftcall MediaUserAction.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t MediaUserAction.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x616C506F54706174;
      break;
    case 2:
      uint64_t result = 2036427888;
      break;
    case 3:
      uint64_t result = 0x6573756170;
      break;
    case 4:
      uint64_t result = 0x656D75736572;
      break;
    case 5:
      uint64_t result = 0x64656C696166;
      break;
    case 6:
      uint64_t result = 0x6168436465657073;
      break;
    case 7:
      uint64_t result = 0x6B63614270696B73;
      break;
    case 8:
      uint64_t result = 0x77726F4670696B73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB16394(unsigned __int8 *a1, char *a2)
{
  return sub_20AA37C80(*a1, *a2);
}

unint64_t sub_20AB163A4()
{
  unint64_t result = qword_267656940;
  if (!qword_267656940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656940);
  }
  return result;
}

uint64_t sub_20AB163F8()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB16440()
{
  return sub_20AB4DB1C();
}

uint64_t sub_20AB16448()
{
  return sub_20AB86D80();
}

StocksAnalytics::MediaUserAction_optional sub_20AB1648C(Swift::String *a1)
{
  return MediaUserAction.init(rawValue:)(*a1);
}

uint64_t sub_20AB16498@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MediaUserAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20AB164C0()
{
  return sub_20AB86750();
}

uint64_t sub_20AB16520()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for MediaUserAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB1663CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaUserAction()
{
  return &type metadata for MediaUserAction;
}

unint64_t sub_20AB16674()
{
  unint64_t result = qword_267656948;
  if (!qword_267656948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656948);
  }
  return result;
}

uint64_t sub_20AB166C8()
{
  uint64_t result = sub_20AB85070();
  if (result)
  {
    uint64_t v1 = result;
    *(void *)&long long v19 = 0xD000000000000012;
    *((void *)&v19 + 1) = 0x800000020ABA9590;
    sub_20AB86950();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_20AADB348((uint64_t)v18), (v3 & 1) != 0))
    {
      sub_20AADCF54(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v19);
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    sub_20AADC678((uint64_t)v18);
    if (*((void *)&v20 + 1))
    {
      int v4 = swift_dynamicCast();
      if (v4) {
        uint64_t v5 = v16;
      }
      else {
        uint64_t v5 = 0;
      }
      if (v4) {
        uint64_t v6 = v17;
      }
      else {
        uint64_t v6 = 0;
      }
    }
    else
    {
      sub_20A984F98((uint64_t)&v19);
      uint64_t v5 = 0;
      uint64_t v6 = 0;
    }
    *(void *)&long long v19 = 0x6E676961706D6163;
    *((void *)&v19 + 1) = 0xEA00000000004449;
    sub_20AB86950();
    if (*(void *)(v1 + 16) && (unint64_t v7 = sub_20AADB348((uint64_t)v18), (v8 & 1) != 0))
    {
      sub_20AADCF54(*(void *)(v1 + 56) + 32 * v7, (uint64_t)&v19);
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    sub_20AADC678((uint64_t)v18);
    if (*((void *)&v20 + 1))
    {
      int v9 = swift_dynamicCast();
      if (v9) {
        uint64_t v10 = v16;
      }
      else {
        uint64_t v10 = 0;
      }
      if (v9) {
        uint64_t v11 = v17;
      }
      else {
        uint64_t v11 = 0;
      }
    }
    else
    {
      sub_20A984F98((uint64_t)&v19);
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
    sub_20AB86950();
    if (*(void *)(v1 + 16) && (unint64_t v12 = sub_20AADB348((uint64_t)v18), (v13 & 1) != 0))
    {
      sub_20AADCF54(*(void *)(v1 + 56) + 32 * v12, (uint64_t)&v19);
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = swift_allocObject();
    sub_20AADC678((uint64_t)v18);
    if (*((void *)&v20 + 1))
    {
      if (swift_dynamicCast()) {
        goto LABEL_35;
      }
    }
    else
    {
      sub_20A984F98((uint64_t)&v19);
    }
    *(unsigned char *)(v14 + 16) = 2;
LABEL_35:
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v5;
    v15[3] = v6;
    v15[4] = v10;
    v15[5] = v11;
    v15[6] = v14;
    swift_retain();
    sub_20AB85AC0();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_20AB169C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_20AB16D58();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  char v16 = *(unsigned char *)(a6 + 16);
  v22[0] = a2;
  v22[1] = a3;
  v22[2] = a4;
  v22[3] = a5;
  char v23 = v16;
  sub_20AB16DB4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20AB85910();
  sub_20A9BC5DC();
  uint64_t v17 = sub_20AB85A70();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_20AB88020;
  (*(void (**)(unint64_t, void, uint64_t))(v18 + 104))(v20 + v19, *MEMORY[0x263F24D40], v17);
  sub_20AB85C50();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_20AB16CF0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_20AB16D00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_20AB16D48(uint64_t a1)
{
  return sub_20AB169C4(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_20AB16D58()
{
  if (!qword_26AC4E4F0)
  {
    sub_20AB16DB4();
    unint64_t v0 = sub_20AB85920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E4F0);
    }
  }
}

unint64_t sub_20AB16DB4()
{
  unint64_t result = qword_26AC50020;
  if (!qword_26AC50020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50020);
  }
  return result;
}

StocksAnalytics::DeviceOrientation_optional __swiftcall DeviceOrientation.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t DeviceOrientation.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7469617274726F70;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 4:
      unint64_t result = 0x70616373646E616CLL;
      break;
    case 5:
      unint64_t result = 0x705565636166;
      break;
    case 6:
      unint64_t result = 0x6E776F4465636166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB16F50(unsigned __int8 *a1, char *a2)
{
  return sub_20AA37190(*a1, *a2);
}

unint64_t sub_20AB16F60()
{
  unint64_t result = qword_267656950;
  if (!qword_267656950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656950);
  }
  return result;
}

uint64_t sub_20AB16FB4()
{
  return sub_20AB4E6C4();
}

uint64_t sub_20AB16FC0()
{
  return sub_20AB4D780();
}

uint64_t sub_20AB16FC8()
{
  return sub_20AB4E6C4();
}

StocksAnalytics::DeviceOrientation_optional sub_20AB16FD0(Swift::String *a1)
{
  return DeviceOrientation.init(rawValue:)(*a1);
}

unint64_t sub_20AB16FDC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = DeviceOrientation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20AB17004()
{
  return sub_20AB86750();
}

uint64_t sub_20AB17064()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for DeviceOrientation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB17180);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceOrientation()
{
  return &type metadata for DeviceOrientation;
}

unint64_t sub_20AB171B8()
{
  unint64_t result = qword_26AC4F808;
  if (!qword_26AC4F808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F808);
  }
  return result;
}

uint64_t static HeartbeatData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t HeartbeatData.userID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.userID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.userID.modify())()
{
  return nullsub_1;
}

uint64_t HeartbeatData.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HeartbeatData() + 20);
  uint64_t v4 = sub_20AB851C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for HeartbeatData()
{
  uint64_t result = qword_26AC51B98;
  if (!qword_26AC51B98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HeartbeatData.timestamp.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HeartbeatData() + 20);
  uint64_t v4 = sub_20AB851C0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*HeartbeatData.timestamp.modify())()
{
  return nullsub_1;
}

uint64_t HeartbeatData.eventID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HeartbeatData() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.eventID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for HeartbeatData() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.eventID.modify())()
{
  return nullsub_1;
}

uint64_t HeartbeatData.osVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HeartbeatData() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.osVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for HeartbeatData() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.osVersion.modify())()
{
  return nullsub_1;
}

uint64_t HeartbeatData.osBundleVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for HeartbeatData() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HeartbeatData.osBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for HeartbeatData() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HeartbeatData.osBundleVersion.modify())()
{
  return nullsub_1;
}

uint64_t HeartbeatData.init(userID:timestamp:eventID:osVersion:osBundleVersion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = a1;
  a9[1] = a2;
  uint64_t v17 = (int *)type metadata accessor for HeartbeatData();
  uint64_t v18 = (char *)a9 + v17[5];
  uint64_t v19 = sub_20AB851C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18, a3, v19);
  uint64_t v21 = (void *)((char *)a9 + v17[6]);
  *uint64_t v21 = a4;
  v21[1] = a5;
  uint64_t v22 = (void *)((char *)a9 + v17[7]);
  *uint64_t v22 = a6;
  v22[1] = a7;
  char v23 = (void *)((char *)a9 + v17[8]);
  *char v23 = a8;
  v23[1] = a10;
  return result;
}

uint64_t sub_20AB17764()
{
  uint64_t result = 0x444972657375;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 2:
      uint64_t result = 0x4449746E657665;
      break;
    case 3:
      uint64_t result = 0x6F6973726556736FLL;
      break;
    case 4:
      uint64_t result = 0x656C646E7542736FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB17824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB18BE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB1784C(uint64_t a1)
{
  unint64_t v2 = sub_20AB17B24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB17888(uint64_t a1)
{
  unint64_t v2 = sub_20AB17B24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HeartbeatData.encode(to:)(void *a1)
{
  sub_20AB18054(0, &qword_26AC51E70, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB17B24();
  sub_20AB86DC0();
  v9[15] = 0;
  sub_20AB86C10();
  if (!v1)
  {
    type metadata accessor for HeartbeatData();
    v9[14] = 1;
    sub_20AB851C0();
    sub_20AB181A4(&qword_26AC4E3B0, MEMORY[0x263F07490]);
    sub_20AB86C50();
    v9[13] = 2;
    sub_20AB86C10();
    v9[12] = 3;
    sub_20AB86C10();
    v9[11] = 4;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB17B24()
{
  unint64_t result = qword_26AC51B78;
  if (!qword_26AC51B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51B78);
  }
  return result;
}

uint64_t HeartbeatData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_20AB851C0();
  uint64_t v33 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB18054(0, &qword_267656958, MEMORY[0x263F8E040]);
  uint64_t v34 = v6;
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)v30 - v7;
  int v9 = (int *)type metadata accessor for HeartbeatData();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (void *)((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB17B24();
  uint64_t v35 = v8;
  uint64_t v12 = (uint64_t)v36;
  sub_20AB86DA0();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v36 = a1;
  uint64_t v13 = v11;
  uint64_t v15 = v33;
  uint64_t v14 = v34;
  char v41 = 0;
  *uint64_t v13 = sub_20AB86B40();
  v13[1] = v16;
  char v40 = 1;
  sub_20AB181A4(&qword_2676540E8, MEMORY[0x263F07490]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v13 + v9[5], v5, v3);
  char v39 = 2;
  v30[1] = 0;
  uint64_t v17 = sub_20AB86B40();
  uint64_t v18 = (uint64_t *)((char *)v13 + v9[6]);
  *uint64_t v18 = v17;
  v18[1] = v19;
  char v38 = 3;
  uint64_t v20 = sub_20AB86B40();
  uint64_t v21 = (uint64_t)v13;
  uint64_t v22 = (uint64_t *)((char *)v13 + v9[7]);
  *uint64_t v22 = v20;
  v22[1] = v23;
  char v37 = 4;
  uint64_t v24 = v9;
  uint64_t v25 = sub_20AB86B40();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v14);
  uint64_t v28 = (uint64_t *)(v21 + v24[8]);
  *uint64_t v28 = v25;
  v28[1] = v27;
  sub_20AA56CE4(v21, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return sub_20AB180B8(v21);
}

void sub_20AB18054(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB17B24();
    unint64_t v7 = a3(a1, &type metadata for HeartbeatData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB180B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HeartbeatData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB18114()
{
  return sub_20AB181A4(&qword_267655560, (void (*)(uint64_t))type metadata accessor for HeartbeatData);
}

uint64_t sub_20AB1815C()
{
  return sub_20AB181A4(&qword_26AC51B90, (void (*)(uint64_t))type metadata accessor for HeartbeatData);
}

uint64_t sub_20AB181A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AB181EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HeartbeatData.init(from:)(a1, a2);
}

uint64_t sub_20AB18204(void *a1)
{
  return HeartbeatData.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for HeartbeatData(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    int v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB851C0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (uint64_t *)((char *)v4 + v14);
    uint64_t v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = (uint64_t *)((char *)v4 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for HeartbeatData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for HeartbeatData(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  int v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20AB851C0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HeartbeatData(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20AB851C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  void *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for HeartbeatData(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20AB851C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

void *assignWithTake for HeartbeatData(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20AB851C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartbeatData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB187D4);
}

uint64_t sub_20AB187D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20AB851C0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for HeartbeatData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB18898);
}

uint64_t sub_20AB18898(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20AB851C0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_20AB18940()
{
  uint64_t result = sub_20AB851C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HeartbeatData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB18AA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeartbeatData.CodingKeys()
{
  return &type metadata for HeartbeatData.CodingKeys;
}

unint64_t sub_20AB18AE4()
{
  unint64_t result = qword_267656960;
  if (!qword_267656960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656960);
  }
  return result;
}

unint64_t sub_20AB18B3C()
{
  unint64_t result = qword_26AC51B88;
  if (!qword_26AC51B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51B88);
  }
  return result;
}

unint64_t sub_20AB18B94()
{
  unint64_t result = qword_26AC51B80;
  if (!qword_26AC51B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51B80);
  }
  return result;
}

uint64_t sub_20AB18BE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444972657375 && a2 == 0xE600000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449746E657665 && a2 == 0xE700000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C646E7542736FLL && a2 == 0xEF6E6F6973726556)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_20AB18E34(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656968, MEMORY[0x263F24D10]);
}

uint64_t static AudioControlMenuEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653678, MEMORY[0x263F24D18], (uint64_t)qword_267656968, a1);
}

uint64_t static AudioControlMenuEngagementEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB18E9C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656980, MEMORY[0x263F24DC8]);
}

uint64_t static AudioControlMenuEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653680, MEMORY[0x263F24DD8], (uint64_t)qword_267656980, a1);
}

uint64_t sub_20AB18EFC()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656998);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656998);
  return sub_20AB85D30();
}

uint64_t static AudioControlMenuEngagementEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653688, MEMORY[0x263F24DE8], (uint64_t)qword_267656998, a1);
}

uint64_t AudioControlMenuEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AudioControlMenuEngagementEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AudioControlMenuEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 20);
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AudioControlMenuEngagementEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676569D0);
}

uint64_t AudioControlMenuEngagementEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 20);
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 24);
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 24);
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 28);
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 28);
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 32);
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 32);
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 36);
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.trackData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 36);
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.trackData.modify())()
{
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.audioControlMenuData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 40);
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.audioControlMenuData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 40);
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.audioControlMenuData.modify())()
{
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 44);
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioControlMenuEngagementEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 44);
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 48);
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB19C88(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t AudioControlMenuEngagementEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent(0) + 48);
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioControlMenuEngagementEvent.articleScienceData.modify())()
{
  return nullsub_1;
}

uint64_t AudioControlMenuEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AudioControlMenuEngagementEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104);

  return v22(v20, v2, v21);
}

uint64_t AudioControlMenuEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AudioControlMenuEngagementEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AudioControlMenuEngagementEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676569E0);
}

uint64_t AudioControlMenuEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AudioControlMenuEngagementEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t AudioControlMenuEngagementEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t AudioControlMenuEngagementEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 36));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioControlMenuEngagementEvent.Model.audioControlMenuData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t AudioControlMenuEngagementEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 44));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t AudioControlMenuEngagementEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioControlMenuEngagementEvent.Model(0) + 48);
  long long v4 = *(_OWORD *)(v3 + 144);
  long long v5 = *(_OWORD *)(v3 + 176);
  long long v31 = *(_OWORD *)(v3 + 160);
  long long v32 = v5;
  long long v6 = *(_OWORD *)(v3 + 80);
  long long v7 = *(_OWORD *)(v3 + 112);
  long long v27 = *(_OWORD *)(v3 + 96);
  long long v8 = v27;
  long long v28 = v7;
  long long v9 = *(_OWORD *)(v3 + 112);
  long long v10 = *(_OWORD *)(v3 + 144);
  long long v29 = *(_OWORD *)(v3 + 128);
  long long v11 = v29;
  long long v30 = v10;
  long long v12 = *(_OWORD *)(v3 + 48);
  long long v13 = *(_OWORD *)(v3 + 80);
  long long v25 = *(_OWORD *)(v3 + 64);
  long long v14 = v25;
  long long v26 = v13;
  long long v15 = *(_OWORD *)(v3 + 16);
  long long v16 = *(_OWORD *)(v3 + 48);
  long long v23 = *(_OWORD *)(v3 + 32);
  long long v17 = v23;
  long long v24 = v16;
  long long v18 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  long long v19 = v22[0];
  v22[1] = v18;
  long long v20 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 160) = v31;
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v14;
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v33 = *(void *)(v3 + 192);
  *(void *)(a1 + 192) = *(void *)(v3 + 192);
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v15;
  return sub_20A9C5E44((uint64_t)v22);
}

__n128 AudioControlMenuEngagementEvent.Model.init(eventData:newsArticleData:channelData:groupData:feedData:trackData:audioControlMenuData:viewData:articleScienceData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, int *a6@<X5>, char *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, long long *a10)
{
  long long v32 = *a2;
  uint64_t v12 = *((void *)a2 + 2);
  uint64_t v13 = *((void *)a2 + 3);
  char v14 = *((unsigned char *)a2 + 32);
  uint64_t v15 = *((void *)a2 + 5);
  char v16 = *((unsigned char *)a2 + 48);
  uint64_t v17 = *((void *)a2 + 7);
  char v18 = *((unsigned char *)a2 + 64);
  char v19 = *((unsigned char *)a2 + 65);
  char v30 = *((unsigned char *)a2 + 67);
  char v31 = *((unsigned char *)a2 + 66);
  long long v37 = *a3;
  uint64_t v35 = *((void *)a3 + 3);
  uint64_t v36 = *((void *)a3 + 2);
  char v33 = *((unsigned char *)a3 + 33);
  char v34 = *((unsigned char *)a3 + 32);
  long long v40 = a4[1];
  long long v41 = *a4;
  uint64_t v38 = *((void *)a4 + 5);
  uint64_t v39 = *((void *)a4 + 4);
  long long v43 = *a5;
  uint64_t v42 = *((void *)a5 + 2);
  char v44 = *((unsigned char *)a6 + 4);
  int v45 = *a6;
  uint64_t v48 = a8[1];
  uint64_t v49 = *a8;
  char v46 = *a7;
  __int16 v47 = *((_WORD *)a8 + 8);
  long long v60 = a10[10];
  long long v61 = a10[11];
  uint64_t v62 = *((void *)a10 + 24);
  long long v56 = a10[6];
  long long v57 = a10[7];
  long long v58 = a10[8];
  long long v59 = a10[9];
  long long v52 = a10[2];
  long long v53 = a10[3];
  long long v54 = a10[4];
  long long v55 = a10[5];
  long long v50 = *a10;
  __n128 v51 = (__n128)a10[1];
  uint64_t v20 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a9, a1, v20);
  uint64_t v21 = (int *)type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  uint64_t v22 = a9 + v21[5];
  *(_OWORD *)uint64_t v22 = v32;
  *(void *)(v22 + 16) = v12;
  *(void *)(v22 + 24) = v13;
  *(unsigned char *)(v22 + 32) = v14;
  *(void *)(v22 + 40) = v15;
  *(unsigned char *)(v22 + 48) = v16;
  *(void *)(v22 + 56) = v17;
  *(unsigned char *)(v22 + 64) = v18;
  *(unsigned char *)(v22 + 65) = v19;
  *(unsigned char *)(v22 + 66) = v31;
  *(unsigned char *)(v22 + 67) = v30;
  uint64_t v23 = a9 + v21[6];
  *(_OWORD *)uint64_t v23 = v37;
  *(void *)(v23 + 16) = v36;
  *(void *)(v23 + 24) = v35;
  *(unsigned char *)(v23 + 32) = v34;
  *(unsigned char *)(v23 + 33) = v33;
  uint64_t v24 = a9 + v21[7];
  *(_OWORD *)uint64_t v24 = v41;
  *(_OWORD *)(v24 + 16) = v40;
  *(void *)(v24 + 32) = v39;
  *(void *)(v24 + 40) = v38;
  uint64_t v25 = a9 + v21[8];
  *(_OWORD *)uint64_t v25 = v43;
  *(void *)(v25 + 16) = v42;
  uint64_t v26 = a9 + v21[9];
  *(_DWORD *)uint64_t v26 = v45;
  *(unsigned char *)(v26 + 4) = v44;
  *(unsigned char *)(a9 + v21[10]) = v46;
  uint64_t v27 = a9 + v21[11];
  *(void *)uint64_t v27 = v49;
  *(void *)(v27 + 8) = v48;
  *(_WORD *)(v27 + 16) = v47;
  uint64_t v28 = a9 + v21[12];
  *(_OWORD *)(v28 + 160) = v60;
  *(_OWORD *)(v28 + 176) = v61;
  *(void *)(v28 + 192) = v62;
  *(_OWORD *)(v28 + 96) = v56;
  *(_OWORD *)(v28 + 112) = v57;
  *(_OWORD *)(v28 + 128) = v58;
  *(_OWORD *)(v28 + 144) = v59;
  *(_OWORD *)(v28 + 32) = v52;
  *(_OWORD *)(v28 + 48) = v53;
  *(_OWORD *)(v28 + 64) = v54;
  *(_OWORD *)(v28 + 80) = v55;
  __n128 result = v51;
  *(_OWORD *)uint64_t v28 = v50;
  *(__n128 *)(v28 + 16) = v51;
  return result;
}

uint64_t sub_20AB1A858(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 2:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 3:
      uint64_t result = 0x74614470756F7267;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_9;
    case 5:
      uint64_t result = 0x7461446B63617274;
      break;
    case 6:
      uint64_t result = 0xD000000000000014;
      break;
    case 7:
      unsigned int v3 = 2003134838;
LABEL_9:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 8:
      uint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB1A98C()
{
  return sub_20AB1A858(*v0);
}

uint64_t sub_20AB1A994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB1F9CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB1A9BC(uint64_t a1)
{
  unint64_t v2 = sub_20AB1AF34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB1A9F8(uint64_t a1)
{
  unint64_t v2 = sub_20AB1AF34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AudioControlMenuEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB1B898(0, &qword_2676569B8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v9 = &v44[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB1AF34();
  sub_20AB86DC0();
  LOBYTE(v45) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    long long v10 = (int *)type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
    long long v11 = (long long *)(v3 + v10[5]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v45 = v12;
    *(void *)&long long v46 = v13;
    *((void *)&v46 + 1) = v14;
    LOBYTE(v47) = v15;
    *((void *)&v47 + 1) = v16;
    LOBYTE(v48) = v17;
    *((void *)&v48 + 1) = v18;
    LOBYTE(v49) = v19;
    BYTE1(v49) = v20;
    BYTE2(v49) = v21;
    BYTE3(v49) = (_BYTE)v11;
    LOBYTE(v59) = 1;
    sub_20A97A1AC();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[6]);
    long long v23 = *v22;
    uint64_t v24 = *((void *)v22 + 2);
    uint64_t v25 = *((void *)v22 + 3);
    char v26 = *((unsigned char *)v22 + 32);
    LOBYTE(v22) = *((unsigned char *)v22 + 33);
    long long v45 = v23;
    *(void *)&long long v46 = v24;
    *((void *)&v46 + 1) = v25;
    LOBYTE(v47) = v26;
    BYTE1(v47) = (_BYTE)v22;
    LOBYTE(v59) = 2;
    sub_20A9862D4();
    sub_20AB86C50();
    uint64_t v27 = (long long *)(v3 + v10[7]);
    long long v28 = v27[1];
    long long v45 = *v27;
    long long v46 = v28;
    long long v47 = v27[2];
    LOBYTE(v59) = 3;
    sub_20A986524();
    sub_20AB86BE0();
    long long v29 = (long long *)(v3 + v10[8]);
    uint64_t v30 = *((void *)v29 + 2);
    long long v45 = *v29;
    *(void *)&long long v46 = v30;
    LOBYTE(v59) = 4;
    sub_20A986774();
    sub_20AB86BE0();
    char v31 = (int *)(v3 + v10[9]);
    int v32 = *v31;
    LOBYTE(v31) = *((unsigned char *)v31 + 4);
    LODWORD(v45) = v32;
    BYTE4(v45) = (_BYTE)v31;
    LOBYTE(v59) = 5;
    sub_20A9869C4();
    sub_20AB86C50();
    LOBYTE(v45) = *(unsigned char *)(v3 + v10[10]);
    LOBYTE(v59) = 6;
    sub_20AAF1D50();
    sub_20AB86C50();
    char v33 = (uint64_t *)(v3 + v10[11]);
    uint64_t v34 = *v33;
    uint64_t v35 = v33[1];
    LOWORD(v33) = *((_WORD *)v33 + 8);
    uint64_t v59 = v34;
    uint64_t v60 = v35;
    __int16 v61 = (__int16)v33;
    char v58 = 7;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v36 = (long long *)(v3 + v10[12]);
    long long v37 = v36[11];
    long long v55 = v36[10];
    long long v56 = v37;
    uint64_t v57 = *((void *)v36 + 24);
    long long v38 = v36[7];
    long long v51 = v36[6];
    long long v52 = v38;
    long long v39 = v36[9];
    long long v53 = v36[8];
    long long v54 = v39;
    long long v40 = v36[3];
    long long v47 = v36[2];
    long long v48 = v40;
    long long v41 = v36[5];
    long long v49 = v36[4];
    long long v50 = v41;
    long long v42 = *v36;
    long long v46 = v36[1];
    long long v45 = v42;
    v44[15] = 8;
    sub_20A9C4D28();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB1AF34()
{
  unint64_t result = qword_2676569C0;
  if (!qword_2676569C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676569C0);
  }
  return result;
}

uint64_t AudioControlMenuEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v52 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB1B898(0, &qword_2676569C8, MEMORY[0x263F8E040]);
  uint64_t v51 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)&v49 - v9;
  long long v56 = (int *)type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  MEMORY[0x270FA5388](v56);
  long long v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  long long v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_20AB1AF34();
  long long v53 = v10;
  sub_20AB86DA0();
  if (v2)
  {
    uint64_t v54 = v2;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  }
  else
  {
    uint64_t v14 = v8;
    LOBYTE(v57) = 0;
    sub_20A985F3C(&qword_26AC4E0C8);
    uint64_t v15 = v51;
    sub_20AB86B80();
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v12, v6, v4);
    char v70 = 1;
    sub_20A97A154();
    sub_20AB86B80();
    uint64_t v17 = (uint64_t)v55;
    long long v18 = v58;
    char v19 = v59;
    uint64_t v20 = *((void *)&v59 + 1);
    char v21 = v60;
    uint64_t v22 = *((void *)&v60 + 1);
    char v23 = v61;
    char v24 = BYTE1(v61);
    char v25 = BYTE2(v61);
    char v26 = BYTE3(v61);
    uint64_t v27 = v56;
    long long v28 = &v12[v56[5]];
    *(_OWORD *)long long v28 = v57;
    *((_OWORD *)v28 + 1) = v18;
    v28[32] = v19;
    *((void *)v28 + 5) = v20;
    v28[48] = v21;
    *((void *)v28 + 7) = v22;
    v28[64] = v23;
    v28[65] = v24;
    v28[66] = v25;
    v28[67] = v26;
    char v70 = 2;
    sub_20A986280();
    sub_20AB86B80();
    long long v29 = v58;
    char v30 = v59;
    char v31 = BYTE1(v59);
    int v32 = &v12[v27[6]];
    *(_OWORD *)int v32 = v57;
    *((_OWORD *)v32 + 1) = v29;
    v32[32] = v30;
    v32[33] = v31;
    char v70 = 3;
    sub_20A9864D0();
    sub_20AB86B10();
    char v33 = &v12[v27[7]];
    long long v34 = v58;
    *(_OWORD *)char v33 = v57;
    *((_OWORD *)v33 + 1) = v34;
    *((_OWORD *)v33 + 2) = v59;
    char v70 = 4;
    sub_20A986720();
    sub_20AB86B10();
    uint64_t v35 = v58;
    uint64_t v36 = &v12[v27[8]];
    *(_OWORD *)uint64_t v36 = v57;
    *((void *)v36 + 2) = v35;
    char v70 = 5;
    sub_20A986970();
    sub_20AB86B80();
    char v37 = BYTE4(v57);
    long long v38 = &v12[v27[9]];
    *(_DWORD *)long long v38 = v57;
    v38[4] = v37;
    char v70 = 6;
    sub_20AAF1CF8();
    sub_20AB86B80();
    v12[v27[10]] = v57;
    char v70 = 7;
    sub_20A986BC0();
    sub_20AB86B80();
    uint64_t v39 = *((void *)&v57 + 1);
    __int16 v40 = v58;
    long long v41 = &v12[v56[11]];
    *(void *)long long v41 = v57;
    *((void *)v41 + 1) = v39;
    *((_WORD *)v41 + 8) = v40;
    char v70 = 8;
    sub_20A9C4CD4();
    sub_20AB86B80();
    uint64_t v54 = 0;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v53, v15);
    long long v42 = &v12[v56[12]];
    long long v43 = v68;
    *((_OWORD *)v42 + 10) = v67;
    *((_OWORD *)v42 + 11) = v43;
    *((void *)v42 + 24) = v69;
    long long v44 = v64;
    *((_OWORD *)v42 + 6) = v63;
    *((_OWORD *)v42 + 7) = v44;
    long long v45 = v66;
    *((_OWORD *)v42 + 8) = v65;
    *((_OWORD *)v42 + 9) = v45;
    long long v46 = v60;
    *((_OWORD *)v42 + 2) = v59;
    *((_OWORD *)v42 + 3) = v46;
    long long v47 = v62;
    *((_OWORD *)v42 + 4) = v61;
    *((_OWORD *)v42 + 5) = v47;
    long long v48 = v58;
    *(_OWORD *)long long v42 = v57;
    *((_OWORD *)v42 + 1) = v48;
    sub_20AB1B8FC((uint64_t)v12, v50);
    __swift_destroy_boxed_opaque_existential_1(v17);
    return sub_20AB1B960((uint64_t)v12);
  }
}

void sub_20AB1B898(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB1AF34();
    unint64_t v7 = a3(a1, &type metadata for AudioControlMenuEngagementEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB1B8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB1B960(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioControlMenuEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB1B9BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioControlMenuEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB1B9D4(void *a1)
{
  return AudioControlMenuEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB1B9EC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653678, MEMORY[0x263F24D18], (uint64_t)qword_267656968, a1);
}

uint64_t sub_20AB1BA24@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653680, MEMORY[0x263F24DD8], (uint64_t)qword_267656980, a1);
}

uint64_t sub_20AB1BA5C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653688, MEMORY[0x263F24DE8], (uint64_t)qword_267656998, a1);
}

uint64_t sub_20AB1BA94@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  char v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);

  return v23(v21, v4, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioControlMenuEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    long long v34 = (char *)a2 + v32;
    sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    long long v38 = (char *)a2 + v36;
    sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for AudioControlMenuEngagementEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);

  return v21(v19, v20);
}

uint64_t initializeWithCopy for AudioControlMenuEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for AudioControlMenuEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for AudioControlMenuEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for AudioControlMenuEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioControlMenuEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB1D9F4);
}

uint64_t sub_20AB1D9F4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_18:
    return v9(v10, a2, v8);
  }
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_17:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_18;
  }
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_17;
  }
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_17;
  }
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_17;
  }
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_17;
  }
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_17;
  }
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_17;
  }
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a3[12];

  return v22(v24, a2, v23);
}

uint64_t storeEnumTagSinglePayload for AudioControlMenuEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB1DEDC);
}

uint64_t sub_20AB1DEDC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_18:
    return v11(v12, a2, a2, v10);
  }
  sub_20AB19C88(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_17:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_18;
  }
  sub_20AB19C88(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_17;
  }
  sub_20AB19C88(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_17;
  }
  sub_20AB19C88(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_17;
  }
  sub_20AB19C88(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_17;
  }
  sub_20AB19C88(0, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_17;
  }
  sub_20AB19C88(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_17;
  }
  sub_20AB19C88(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a4[12];

  return v24(v26, a2, a2, v25);
}

void sub_20AB1E3BC()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB19C88(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    if (v1 <= 0x3F)
    {
      sub_20AB19C88(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
      if (v2 <= 0x3F)
      {
        sub_20AB19C88(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
        if (v3 <= 0x3F)
        {
          sub_20AB19C88(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
          if (v4 <= 0x3F)
          {
            sub_20AB19C88(319, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
            if (v5 <= 0x3F)
            {
              sub_20AB19C88(319, &qword_2676569B0, (void (*)(void))sub_20AAF1CF8, (void (*)(void))sub_20AAF1D50);
              if (v6 <= 0x3F)
              {
                sub_20AB19C88(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
                if (v7 <= 0x3F)
                {
                  sub_20AB19C88(319, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
                  if (v8 <= 0x3F) {
                    swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AudioControlMenuEngagementEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    *((void *)v10 + 7) = *((void *)v11 + 7);
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    uint64_t v14 = (char *)a1 + v9;
    uint64_t v15 = (char *)a2 + v9;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    *((_WORD *)v14 + 16) = *((_WORD *)v15 + 16);
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)((char *)a2 + v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *uint64_t v19 = *v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      *((void *)v19 + 2) = v21;
      *((void *)v19 + 3) = *((void *)v20 + 3);
      uint64_t v22 = *((void *)v20 + 5);
      *((void *)v19 + 4) = *((void *)v20 + 4);
      *((void *)v19 + 5) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v24 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v24;
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
    }
    uint64_t v25 = a3[8];
    uint64_t v26 = a3[9];
    uint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *uint64_t v27 = *v28;
    uint64_t v29 = *((void *)v28 + 2);
    *((void *)v27 + 1) = *((void *)v28 + 1);
    *((void *)v27 + 2) = v29;
    uint64_t v30 = (char *)a1 + v26;
    uint64_t v31 = (char *)a2 + v26;
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)uint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    v33[16] = v34[16];
    v33[17] = v34[17];
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    long long v39 = *((_OWORD *)v38 + 1);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v39;
    long long v40 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v37 + 3) = v40;
    *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
    *((void *)v37 + 10) = *((void *)v38 + 10);
    *(_OWORD *)(v37 + 88) = *(_OWORD *)(v38 + 88);
    *(_OWORD *)(v37 + 104) = *(_OWORD *)(v38 + 104);
    *((_DWORD *)v37 + 30) = *((_DWORD *)v38 + 30);
    *((_OWORD *)v37 + 8) = *((_OWORD *)v38 + 8);
    v37[144] = v38[144];
    *(void *)(v37 + 148) = *(void *)(v38 + 148);
    long long v41 = *((_OWORD *)v38 + 11);
    *((_OWORD *)v37 + 10) = *((_OWORD *)v38 + 10);
    *((_OWORD *)v37 + 11) = v41;
    *((void *)v37 + 24) = *((void *)v38 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a2 + v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
    *(void *)(v18 + 8) = *(void *)(v19 + 8);
    *(void *)(v18 + 16) = v20;
    *(void *)(v18 + 24) = *(void *)(v19 + 24);
    uint64_t v21 = *(void *)(v19 + 40);
    *(void *)(v18 + 32) = *(void *)(v19 + 32);
    *(void *)(v18 + 40) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  uint64_t v27 = *(void *)(v26 + 16);
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = v27;
  uint64_t v28 = a1 + v24;
  uint64_t v29 = a2 + v24;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(unsigned char *)(v28 + 4) = *(unsigned char *)(v29 + 4);
  uint64_t v30 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = *(void *)(v32 + 8);
  *(void *)uint64_t v31 = *(void *)v32;
  *(void *)(v31 + 8) = v33;
  *(unsigned char *)(v31 + 16) = *(unsigned char *)(v32 + 16);
  *(unsigned char *)(v31 + 17) = *(unsigned char *)(v32 + 17);
  uint64_t v34 = a3[12];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  long long v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  long long v38 = *(_OWORD *)(v36 + 48);
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
  *(_OWORD *)(v35 + 48) = v38;
  *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
  *(void *)(v35 + 80) = *(void *)(v36 + 80);
  *(_OWORD *)(v35 + 88) = *(_OWORD *)(v36 + 88);
  *(_OWORD *)(v35 + 104) = *(_OWORD *)(v36 + 104);
  *(_DWORD *)(v35 + 120) = *(_DWORD *)(v36 + 120);
  *(_OWORD *)(v35 + 128) = *(_OWORD *)(v36 + 128);
  *(unsigned char *)(v35 + 144) = *(unsigned char *)(v36 + 144);
  *(void *)(v35 + 148) = *(void *)(v36 + 148);
  long long v39 = *(_OWORD *)(v36 + 176);
  *(_OWORD *)(v35 + 160) = *(_OWORD *)(v36 + 160);
  *(_OWORD *)(v35 + 176) = v39;
  *(void *)(v35 + 192) = *(void *)(v36 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v10 = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 40) = v10;
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(unsigned char *)(v12 + 33) = *(unsigned char *)(v13 + 33);
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (long long *)(a2 + v14);
  uint64_t v17 = *(void *)(a1 + v14 + 16);
  uint64_t v18 = *(void *)(a2 + v14 + 16);
  if (v17)
  {
    if (v18)
    {
      *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
      *(void *)(v15 + 8) = *((void *)v16 + 1);
      *(void *)(v15 + 16) = *((void *)v16 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
      *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
      *(void *)(v15 + 32) = *((void *)v16 + 4);
      *(void *)(v15 + 40) = *((void *)v16 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v15);
      long long v20 = v16[1];
      long long v19 = v16[2];
      *(_OWORD *)uint64_t v15 = *v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_OWORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
    *(void *)(v15 + 8) = *((void *)v16 + 1);
    *(void *)(v15 + 16) = *((void *)v16 + 2);
    *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
    *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
    *(void *)(v15 + 32) = *((void *)v16 + 4);
    *(void *)(v15 + 40) = *((void *)v16 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *v16;
    long long v22 = v16[2];
    *(_OWORD *)(v15 + 16) = v16[1];
    *(_OWORD *)(v15 + 32) = v22;
    *(_OWORD *)uint64_t v15 = v21;
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v29 = a3[11];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)(a2 + v29);
  *(void *)(v30 + 8) = *(void *)(a2 + v29 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
  *(unsigned char *)(v30 + 17) = *(unsigned char *)(v31 + 17);
  uint64_t v32 = a3[12];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(void *)uint64_t v33 = *(void *)(a2 + v32);
  *(void *)(v33 + 8) = *(void *)(a2 + v32 + 8);
  *(void *)(v33 + 16) = *(void *)(a2 + v32 + 16);
  *(void *)(v33 + 24) = *(void *)(a2 + v32 + 24);
  *(void *)(v33 + 32) = *(void *)(a2 + v32 + 32);
  *(void *)(v33 + 40) = *(void *)(a2 + v32 + 40);
  *(void *)(v33 + 48) = *(void *)(a2 + v32 + 48);
  *(void *)(v33 + 56) = *(void *)(a2 + v32 + 56);
  *(void *)(v33 + 64) = *(void *)(a2 + v32 + 64);
  *(void *)(v33 + 72) = *(void *)(a2 + v32 + 72);
  *(void *)(v33 + 80) = *(void *)(a2 + v32 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v33 + 88) = *(void *)(v34 + 88);
  *(void *)(v33 + 96) = *(void *)(v34 + 96);
  *(void *)(v33 + 104) = *(void *)(v34 + 104);
  *(void *)(v33 + 112) = *(void *)(v34 + 112);
  *(_DWORD *)(v33 + 120) = *(_DWORD *)(v34 + 120);
  *(void *)(v33 + 128) = *(void *)(v34 + 128);
  *(void *)(v33 + 136) = *(void *)(v34 + 136);
  *(unsigned char *)(v33 + 144) = *(unsigned char *)(v34 + 144);
  *(_DWORD *)(v33 + 148) = *(_DWORD *)(v34 + 148);
  *(_DWORD *)(v33 + 152) = *(_DWORD *)(v34 + 152);
  *(void *)(v33 + 160) = *(void *)(v34 + 160);
  *(void *)(v33 + 168) = *(void *)(v34 + 168);
  *(void *)(v33 + 176) = *(void *)(v34 + 176);
  *(void *)(v33 + 184) = *(void *)(v34 + 184);
  *(void *)(v33 + 192) = *(void *)(v34 + 192);
  return a1;
}

uint64_t initializeWithTake for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (_OWORD *)(a1 + v16);
  long long v19 = (long long *)(a2 + v16);
  long long v20 = v19[2];
  long long v21 = *v19;
  v18[1] = v19[1];
  v18[2] = v20;
  *uint64_t v18 = v21;
  uint64_t v22 = a1 + v17;
  uint64_t v23 = (long long *)(a2 + v17);
  long long v24 = *v23;
  *(void *)(v22 + 16) = *((void *)v23 + 2);
  *(_OWORD *)uint64_t v22 = v24;
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  uint64_t v29 = a3[11];
  uint64_t v30 = a3[12];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_WORD *)(v31 + 16) = *(_WORD *)(v32 + 16);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = a2 + v30;
  *(void *)(v33 + 192) = *(void *)(v34 + 192);
  long long v35 = *(_OWORD *)(v34 + 176);
  *(_OWORD *)(v33 + 160) = *(_OWORD *)(v34 + 160);
  *(_OWORD *)(v33 + 176) = v35;
  long long v36 = *(_OWORD *)(v34 + 144);
  *(_OWORD *)(v33 + 128) = *(_OWORD *)(v34 + 128);
  *(_OWORD *)(v33 + 144) = v36;
  long long v37 = *(_OWORD *)(v34 + 112);
  *(_OWORD *)(v33 + 96) = *(_OWORD *)(v34 + 96);
  *(_OWORD *)(v33 + 112) = v37;
  long long v38 = *(_OWORD *)(v34 + 80);
  *(_OWORD *)(v33 + 64) = *(_OWORD *)(v34 + 64);
  *(_OWORD *)(v33 + 80) = v38;
  long long v39 = *(_OWORD *)(v34 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  *(_OWORD *)(v33 + 48) = v39;
  long long v40 = *(_OWORD *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v40;
  return a1;
}

uint64_t assignWithTake for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(unsigned char *)(v13 + 33) = *(unsigned char *)(v14 + 33);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  if (!*(void *)(a1 + v17 + 16)) {
    goto LABEL_5;
  }
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20)
  {
    sub_20A98D5B8(v18);
LABEL_5:
    long long v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(void *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  uint64_t v21 = *(void *)(v19 + 40);
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(v18 + 40) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  uint64_t v27 = *(void *)(v25 + 8);
  uint64_t v26 = *(void *)(v25 + 16);
  *(void *)(v24 + 8) = v27;
  *(void *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[9];
  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v32 = a3[11];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)(a2 + v32 + 8);
  *(void *)uint64_t v33 = *(void *)(a2 + v32);
  *(void *)(v33 + 8) = v35;
  swift_bridgeObjectRelease();
  *(_WORD *)(v33 + 16) = *(_WORD *)(v34 + 16);
  uint64_t v36 = a3[12];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  long long v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  long long v40 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v40;
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(void *)(v37 + 80) = *(void *)(v38 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v37 + 88) = *(_OWORD *)(v38 + 88);
  *(_OWORD *)(v37 + 104) = *(_OWORD *)(v38 + 104);
  *(_DWORD *)(v37 + 120) = *(_DWORD *)(v38 + 120);
  *(_OWORD *)(v37 + 128) = *(_OWORD *)(v38 + 128);
  *(unsigned char *)(v37 + 144) = *(unsigned char *)(v38 + 144);
  *(void *)(v37 + 148) = *(void *)(v38 + 148);
  long long v41 = *(_OWORD *)(v38 + 176);
  *(_OWORD *)(v37 + 160) = *(_OWORD *)(v38 + 160);
  *(_OWORD *)(v37 + 176) = v41;
  *(void *)(v37 + 192) = *(void *)(v38 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB1F54C);
}

uint64_t sub_20AB1F54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AudioControlMenuEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB1F624);
}

uint64_t sub_20AB1F624(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AB1F6E4()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioControlMenuEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB1F88CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioControlMenuEngagementEvent.Model.CodingKeys()
{
  return &type metadata for AudioControlMenuEngagementEvent.Model.CodingKeys;
}

unint64_t sub_20AB1F8C8()
{
  unint64_t result = qword_2676569F0;
  if (!qword_2676569F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676569F0);
  }
  return result;
}

unint64_t sub_20AB1F920()
{
  unint64_t result = qword_2676569F8;
  if (!qword_2676569F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676569F8);
  }
  return result;
}

unint64_t sub_20AB1F978()
{
  unint64_t result = qword_267656A00;
  if (!qword_267656A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656A00);
  }
  return result;
}

uint64_t sub_20AB1F9CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA9660 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA77E0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

double static ArticleScienceData.empty.getter@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 80) = MEMORY[0x263F8EE78];
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(unsigned char *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 148) = 0;
  *(_DWORD *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(void *)(a1 + 192) = 0;
  return result;
}

uint64_t sub_20AB1FE04()
{
  sub_20AB20550(0, &qword_26AC4E528, (uint64_t (*)(uint64_t))sub_20AB20050, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  BOOL v2 = (char *)&v15 - v1;
  sub_20AB20050();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v15 - v9;
  sub_20AB20100((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1) {
    return sub_20AB20268((uint64_t)v2);
  }
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v12(v10, v2, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  v12((char *)(v14 + v13), v8, v4);
  sub_20AB85AC0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

void sub_20AB20050()
{
  if (!qword_26AC4E520)
  {
    sub_20AB200AC();
    unint64_t v0 = sub_20AB85920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E520);
    }
  }
}

unint64_t sub_20AB200AC()
{
  unint64_t result = qword_26AC515A8;
  if (!qword_26AC515A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515A8);
  }
  return result;
}

uint64_t sub_20AB20100@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  if (qword_26AC4E430 != -1) {
    swift_once();
  }
  sub_20AAC00B8();
  sub_20AB856E0();
  uint64_t v2 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v2 = *(void *)v6 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    sub_20AB200AC();
    sub_20AB85910();
    sub_20AB20050();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 0, 1, v3);
  }
  else
  {
    sub_20AB20050();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, 1, 1, v5);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_20AB20268(uint64_t a1)
{
  sub_20AB20550(0, &qword_26AC4E528, (uint64_t (*)(uint64_t))sub_20AB20050, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB202F4()
{
  sub_20AB20550(0, (unint64_t *)&qword_26AC51990, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v0 = sub_20AB85A70();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20AB88020;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x263F24D40], v0);
  sub_20AB200AC();
  sub_20AB85C50();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB20450()
{
  sub_20AB20050();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_20AB204E0()
{
  sub_20AB20050();

  return sub_20AB202F4();
}

void sub_20AB20550(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t static SymbolPerfData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void SymbolPerfData.perfType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *SymbolPerfData.perfType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*SymbolPerfData.perfType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SymbolPerfData __swiftcall SymbolPerfData.init(perfType:)(StocksAnalytics::SymbolPerfData perfType)
{
  *uint64_t v1 = *(unsigned char *)perfType.perfType;
  return perfType;
}

uint64_t sub_20AB20600()
{
  return 0x6570795466726570;
}

uint64_t sub_20AB20618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6570795466726570 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AB206B0(uint64_t a1)
{
  unint64_t v2 = sub_20AB20884();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB206EC(uint64_t a1)
{
  unint64_t v2 = sub_20AB20884();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolPerfData.encode(to:)(void *a1)
{
  sub_20AB20AC4(0, &qword_26AC51868, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB20884();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AB208D8();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB20884()
{
  unint64_t result = qword_26AC4EFF8;
  if (!qword_26AC4EFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFF8);
  }
  return result;
}

unint64_t sub_20AB208D8()
{
  unint64_t result = qword_26AC50890;
  if (!qword_26AC50890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50890);
  }
  return result;
}

uint64_t SymbolPerfData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AB20AC4(0, &qword_267656A08, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB20884();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AB20B28();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB20AC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB20884();
    unint64_t v7 = a3(a1, &type metadata for SymbolPerfData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB20B28()
{
  unint64_t result = qword_267656A10;
  if (!qword_267656A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656A10);
  }
  return result;
}

uint64_t sub_20AB20B84@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SymbolPerfData.init(from:)(a1, a2);
}

uint64_t sub_20AB20B9C(void *a1)
{
  return SymbolPerfData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for SymbolPerfData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB20C80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolPerfData()
{
  return &type metadata for SymbolPerfData;
}

unsigned char *storeEnumTagSinglePayload for SymbolPerfData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB20D54);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolPerfData.CodingKeys()
{
  return &type metadata for SymbolPerfData.CodingKeys;
}

unint64_t sub_20AB20D90()
{
  unint64_t result = qword_267656A18;
  if (!qword_267656A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656A18);
  }
  return result;
}

unint64_t sub_20AB20DE8()
{
  unint64_t result = qword_26AC4F008;
  if (!qword_26AC4F008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F008);
  }
  return result;
}

unint64_t sub_20AB20E40()
{
  unint64_t result = qword_26AC4F000;
  if (!qword_26AC4F000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F000);
  }
  return result;
}

uint64_t sub_20AB20E94(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656A20, MEMORY[0x263F24D10]);
}

uint64_t static TickerExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653690, MEMORY[0x263F24D18], (uint64_t)qword_267656A20, a1);
}

uint64_t static TickerExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB20EFC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656A38, MEMORY[0x263F24DC8]);
}

uint64_t static TickerExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653698, MEMORY[0x263F24DD8], (uint64_t)qword_267656A38, a1);
}

uint64_t sub_20AB20F5C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656A50);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656A50);
  return sub_20AB85D30();
}

uint64_t static TickerExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536A0, MEMORY[0x263F24DE8], (uint64_t)qword_267656A50, a1);
}

uint64_t TickerExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t TickerExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*TickerExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t TickerExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB21290(type metadata accessor for TickerExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for TickerExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656A80);
}

uint64_t TickerExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TickerExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*TickerExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t TickerExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for TickerExposureEvent(0) + 20);
  sub_20A97C0F4();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t TickerExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t TickerExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB21290(type metadata accessor for TickerExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AB21290@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for TickerExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656A90);
}

uint64_t TickerExposureEvent.Model.init(eventData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for TickerExposureEvent.Model(0) + 20);
  uint64_t v8 = sub_20AB85FE0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);

  return v9(v7, a2, v8);
}

uint64_t sub_20AB21404(uint64_t a1)
{
  unint64_t v2 = sub_20AB21690();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB21440(uint64_t a1)
{
  unint64_t v2 = sub_20AB21690();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TickerExposureEvent.Model.encode(to:)(void *a1)
{
  sub_20AB21B14(0, &qword_267656A68, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB21690();
  sub_20AB86DC0();
  v9[15] = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v1)
  {
    type metadata accessor for TickerExposureEvent.Model(0);
    v9[14] = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB21690()
{
  unint64_t result = qword_267656A70;
  if (!qword_267656A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656A70);
  }
  return result;
}

uint64_t TickerExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v25 = sub_20AB85FE0();
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_20AB85FC0();
  uint64_t v24 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v26 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB21B14(0, &qword_267656A78, MEMORY[0x263F8E040]);
  uint64_t v29 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = type metadata accessor for TickerExposureEvent.Model(0);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB21690();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v10;
  unint64_t v13 = v12;
  uint64_t v15 = v24;
  uint64_t v14 = v25;
  char v31 = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  uint64_t v16 = v26;
  sub_20AB86B80();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v20 = (uint64_t)v13;
  v17(v13, v16, v28);
  char v30 = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v29);
  uint64_t v18 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v20 + *(int *)(v21 + 20), v5, v14);
  sub_20AB21B78(v18, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AB21BDC(v18);
}

void sub_20AB21B14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB21690();
    unint64_t v7 = a3(a1, &type metadata for TickerExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB21B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TickerExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB21BDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TickerExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB21C38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TickerExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB21C50(void *a1)
{
  return TickerExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB21C68@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653690, MEMORY[0x263F24D18], (uint64_t)qword_267656A20, a1);
}

uint64_t sub_20AB21CA0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653698, MEMORY[0x263F24DD8], (uint64_t)qword_267656A38, a1);
}

uint64_t sub_20AB21CD8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536A0, MEMORY[0x263F24DE8], (uint64_t)qword_267656A50, a1);
}

uint64_t getEnumTagSinglePayload for TickerExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB21D24);
}

uint64_t sub_20AB21D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54, (uint64_t (*)(void))sub_20A97C0F4);
}

uint64_t storeEnumTagSinglePayload for TickerExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB21D64);
}

uint64_t sub_20AB21D64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A97BF54, (uint64_t (*)(void))sub_20A97C0F4);
}

uint64_t getEnumTagSinglePayload for TickerExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB21DA4);
}

uint64_t sub_20AB21DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_0(a1, a2, a3, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

uint64_t storeEnumTagSinglePayload for TickerExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB21DE4);
}

uint64_t sub_20AB21DE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, MEMORY[0x263F24E70], MEMORY[0x263F24E90]);
}

unsigned char *storeEnumTagSinglePayload for TickerExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB21EDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TickerExposureEvent.Model.CodingKeys()
{
  return &type metadata for TickerExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AB21F18()
{
  unint64_t result = qword_267656AA0;
  if (!qword_267656AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656AA0);
  }
  return result;
}

unint64_t sub_20AB21F70()
{
  unint64_t result = qword_267656AA8;
  if (!qword_267656AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656AA8);
  }
  return result;
}

unint64_t sub_20AB21FC8()
{
  unint64_t result = qword_267656AB0;
  if (!qword_267656AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656AB0);
  }
  return result;
}

uint64_t sub_20AB2201C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656AB8, MEMORY[0x263F24D10]);
}

uint64_t static SymbolChartDisplayErrorEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536A8, MEMORY[0x263F24D18], (uint64_t)qword_267656AB8, a1);
}

uint64_t static SymbolChartDisplayErrorEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB22084(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656AD0, MEMORY[0x263F24DC8]);
}

uint64_t static SymbolChartDisplayErrorEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536B0, MEMORY[0x263F24DD8], (uint64_t)qword_267656AD0, a1);
}

uint64_t sub_20AB220E4()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656AE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656AE8);
  return sub_20AB85D30();
}

uint64_t static SymbolChartDisplayErrorEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536B8, MEMORY[0x263F24DE8], (uint64_t)qword_267656AE8, a1);
}

uint64_t SymbolChartDisplayErrorEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SymbolChartDisplayErrorEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SymbolChartDisplayErrorEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolChartDisplayErrorEvent.symbolChartDisplayErrorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolChartDisplayErrorEvent(0) + 20);
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SymbolChartDisplayErrorEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656B20);
}

uint64_t SymbolChartDisplayErrorEvent.symbolChartDisplayErrorData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolChartDisplayErrorEvent(0) + 20);
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolChartDisplayErrorEvent.symbolChartDisplayErrorData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolChartDisplayErrorEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolChartDisplayErrorEvent(0) + 24);
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB22480(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t SymbolChartDisplayErrorEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolChartDisplayErrorEvent(0) + 24);
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolChartDisplayErrorEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolChartDisplayErrorEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for SymbolChartDisplayErrorEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t SymbolChartDisplayErrorEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SymbolChartDisplayErrorEvent.Model.symbolChartDisplayErrorData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SymbolChartDisplayErrorEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656B30);
}

uint64_t SymbolChartDisplayErrorEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolChartDisplayErrorEvent.Model(0) + 24);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SymbolChartDisplayErrorEvent.Model.init(eventData:symbolChartDisplayErrorData:symbolData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *a2;
  uint64_t v7 = *a3;
  uint64_t v8 = a3[1];
  char v9 = *((unsigned char *)a3 + 16);
  uint64_t v10 = a3[3];
  uint64_t v11 = a3[4];
  uint64_t v12 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a4, a1, v12);
  uint64_t result = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
  *(unsigned char *)(a4 + *(int *)(result + 20)) = v6;
  uint64_t v14 = a4 + *(int *)(result + 24);
  *(void *)uint64_t v14 = v7;
  *(void *)(v14 + 8) = v8;
  *(unsigned char *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v10;
  *(void *)(v14 + 32) = v11;
  return result;
}

uint64_t sub_20AB228EC()
{
  unint64_t v1 = 0xD00000000000001BLL;
  if (*v0 != 1) {
    unint64_t v1 = 0x61446C6F626D7973;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AB22954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB24A50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB2297C(uint64_t a1)
{
  unint64_t v2 = sub_20AB22C1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB229B8(uint64_t a1)
{
  unint64_t v2 = sub_20AB22C1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolChartDisplayErrorEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB2302C(0, &qword_267656B08, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB22C1C();
  sub_20AB86DC0();
  LOBYTE(v18[0]) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
    LOBYTE(v18[0]) = *(unsigned char *)(v3 + *(int *)(v10 + 20));
    char v22 = 1;
    sub_20A9CFE0C();
    sub_20AB86C50();
    uint64_t v11 = (uint64_t *)(v3 + *(int *)(v10 + 24));
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    char v14 = *((unsigned char *)v11 + 16);
    uint64_t v16 = v11[3];
    uint64_t v15 = v11[4];
    v18[0] = v12;
    v18[1] = v13;
    char v19 = v14;
    uint64_t v20 = v16;
    uint64_t v21 = v15;
    char v22 = 2;
    sub_20A97C61C();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB22C1C()
{
  unint64_t result = qword_267656B10;
  if (!qword_267656B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656B10);
  }
  return result;
}

uint64_t SymbolChartDisplayErrorEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v27 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB2302C(0, &qword_267656B18, MEMORY[0x263F8E040]);
  uint64_t v28 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB22C1C();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v23 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v26;
  LOBYTE(v29) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v15 = v27;
  uint64_t v14 = v28;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v4);
  char v34 = 1;
  sub_20A9CFDB4();
  sub_20AB86B80();
  *(unsigned char *)(v12 + *(int *)(v9 + 20)) = v29;
  char v34 = 2;
  sub_20A97C5C8();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v14);
  uint64_t v16 = v30;
  char v17 = v31;
  uint64_t v18 = v32;
  uint64_t v19 = v33;
  uint64_t v20 = v12 + *(int *)(v9 + 24);
  *(void *)uint64_t v20 = v29;
  *(void *)(v20 + 8) = v16;
  *(unsigned char *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = v18;
  *(void *)(v20 + 32) = v19;
  sub_20AB23090(v12, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return sub_20AB230F4(v12);
}

void sub_20AB2302C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB22C1C();
    unint64_t v7 = a3(a1, &type metadata for SymbolChartDisplayErrorEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB23090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB230F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolChartDisplayErrorEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB23150@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolChartDisplayErrorEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB23168(void *a1)
{
  return SymbolChartDisplayErrorEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB23180@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536A8, MEMORY[0x263F24D18], (uint64_t)qword_267656AB8, a1);
}

uint64_t sub_20AB231B8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536B0, MEMORY[0x263F24DD8], (uint64_t)qword_267656AD0, a1);
}

uint64_t sub_20AB231F0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536B8, MEMORY[0x263F24DE8], (uint64_t)qword_267656AE8, a1);
}

uint64_t sub_20AB23228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolChartDisplayErrorEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB23CBC);
}

uint64_t sub_20AB23CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for SymbolChartDisplayErrorEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB23E8C);
}

uint64_t sub_20AB23E8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  sub_20AB22480(0, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  sub_20AB22480(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_20AB24054()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB22480(319, &qword_267656B00, (void (*)(void))sub_20A9CFDB4, (void (*)(void))sub_20A9CFE0C);
    if (v1 <= 0x3F)
    {
      sub_20AB22480(319, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SymbolChartDisplayErrorEvent.Model(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v11;
    unsigned char v9[16] = v10[16];
    uint64_t v12 = *((void *)v10 + 4);
    *((void *)v9 + 3) = *((void *)v10 + 3);
    *((void *)v9 + 4) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SymbolChartDisplayErrorEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolChartDisplayErrorEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v10;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 32);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolChartDisplayErrorEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SymbolChartDisplayErrorEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  return a1;
}

uint64_t assignWithTake for SymbolChartDisplayErrorEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 32);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolChartDisplayErrorEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB2460C);
}

uint64_t sub_20AB2460C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolChartDisplayErrorEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB246E4);
}

uint64_t sub_20AB246E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AB247A4()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SymbolChartDisplayErrorEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB24910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartDisplayErrorEvent.Model.CodingKeys()
{
  return &type metadata for SymbolChartDisplayErrorEvent.Model.CodingKeys;
}

unint64_t sub_20AB2494C()
{
  unint64_t result = qword_267656B40;
  if (!qword_267656B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656B40);
  }
  return result;
}

unint64_t sub_20AB249A4()
{
  unint64_t result = qword_267656B48;
  if (!qword_267656B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656B48);
  }
  return result;
}

unint64_t sub_20AB249FC()
{
  unint64_t result = qword_267656B50;
  if (!qword_267656B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656B50);
  }
  return result;
}

uint64_t sub_20AB24A50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000020ABA96F0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t StocksSession.sessionID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StocksSession.appSessionID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StocksSession.userData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  char v3 = *(unsigned char *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  int v5 = *(_DWORD *)(v1 + 64);
  int v6 = *(_DWORD *)(v1 + 68);
  int v7 = *(_DWORD *)(v1 + 72);
  int v8 = *(_DWORD *)(v1 + 76);
  uint64_t v9 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  *(void *)a1 = *(void *)(v1 + 32);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = v5;
  *(_DWORD *)(a1 + 36) = v6;
  *(_DWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 44) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t StocksSession.sessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StocksSession();
  return sub_20AB2622C(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))type metadata accessor for SessionData);
}

uint64_t type metadata accessor for StocksSession()
{
  uint64_t result = qword_267656B60;
  if (!qword_267656B60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StocksSession.appData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for StocksSession() + 32));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t StocksSession.deviceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StocksSession() + 36);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  char v7 = *(unsigned char *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  uint64_t v9 = *(void *)(v3 + 48);
  uint64_t v10 = *(void *)(v3 + 56);
  uint64_t v11 = *(void *)(v3 + 64);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t StocksSession.contentEnvironmentData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StocksSession();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t StocksSession.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StocksSession() + 44);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(v3 + 40);

  return sub_20AB24E98(v4, v5, v6);
}

uint64_t sub_20AB24E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t StocksSession.debugData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for StocksSession() + 48));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t StocksSession.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for StocksSession();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t StocksSession.watchedSymbolListData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for StocksSession() + 56));

  return swift_bridgeObjectRetain();
}

uint64_t StocksSession.watchlistSummaryData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for StocksSession() + 60));

  return swift_bridgeObjectRetain();
}

unint64_t sub_20AB24FE4(char a1)
{
  unint64_t result = 0x496E6F6973736573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6973736553707061;
      break;
    case 2:
      unint64_t result = 0x6174614472657375;
      break;
    case 3:
      unint64_t result = 0x446E6F6973736573;
      break;
    case 4:
      unint64_t result = 0x61746144707061;
      break;
    case 5:
      unint64_t result = 0x6144656369766564;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD000000000000021;
      break;
    case 8:
      unint64_t result = 0x7461446775626564;
      break;
    case 9:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20AB25188()
{
  return sub_20AB24FE4(*v0);
}

uint64_t sub_20AB25190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB27938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB251B8(uint64_t a1)
{
  unint64_t v2 = sub_20AB256F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB251F4(uint64_t a1)
{
  unint64_t v2 = sub_20AB256F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StocksSession.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB26074(0, &qword_267656B58, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB256F0();
  sub_20AB86DC0();
  LOBYTE(v37) = 0;
  sub_20AB86C10();
  if (!v2)
  {
    LOBYTE(v37) = 1;
    sub_20AB86BC0();
    uint64_t v10 = *(void *)(v3 + 40);
    char v11 = *(unsigned char *)(v3 + 48);
    uint64_t v12 = *(void *)(v3 + 56);
    unsigned int v13 = *(_DWORD *)(v3 + 64);
    unsigned int v14 = *(_DWORD *)(v3 + 68);
    unsigned int v15 = *(_DWORD *)(v3 + 72);
    unsigned int v16 = *(_DWORD *)(v3 + 76);
    uint64_t v17 = *(void *)(v3 + 80);
    uint64_t v18 = *(void *)(v3 + 88);
    *(void *)&long long v37 = *(void *)(v3 + 32);
    *((void *)&v37 + 1) = v10;
    LOBYTE(v38) = v11;
    *((void *)&v38 + 1) = v12;
    unint64_t v39 = __PAIR64__(v14, v13);
    *(void *)&long long v40 = __PAIR64__(v16, v15);
    *((void *)&v40 + 1) = v17;
    uint64_t v41 = v18;
    char v43 = 2;
    sub_20AA72C1C();
    sub_20AB86C50();
    uint64_t v19 = (int *)type metadata accessor for StocksSession();
    LOBYTE(v37) = 3;
    type metadata accessor for SessionData();
    sub_20A982A80(&qword_26AC4EC48);
    sub_20AB86C50();
    uint64_t v20 = (long long *)(v3 + v19[8]);
    long long v21 = *v20;
    uint64_t v23 = *((void *)v20 + 2);
    uint64_t v22 = *((void *)v20 + 3);
    long long v37 = v21;
    *(void *)&long long v38 = v23;
    *((void *)&v38 + 1) = v22;
    char v43 = 4;
    sub_20AB25744();
    sub_20AB86C50();
    uint64_t v24 = (long long *)(v3 + v19[9]);
    long long v25 = *v24;
    uint64_t v26 = *((void *)v24 + 2);
    uint64_t v27 = *((void *)v24 + 3);
    char v28 = *((unsigned char *)v24 + 32);
    long long v29 = *(long long *)((char *)v24 + 40);
    uint64_t v31 = *((void *)v24 + 7);
    uint64_t v30 = *((void *)v24 + 8);
    long long v37 = v25;
    *(void *)&long long v38 = v26;
    *((void *)&v38 + 1) = v27;
    LOBYTE(v39) = v28;
    long long v40 = v29;
    uint64_t v41 = v31;
    uint64_t v42 = v30;
    char v43 = 5;
    sub_20AA8C5B4();
    sub_20AB86C50();
    LOBYTE(v37) = *(unsigned char *)(v3 + v19[10]);
    char v43 = 6;
    sub_20AB25798();
    sub_20AB86C50();
    uint64_t v32 = (long long *)(v3 + v19[11]);
    unint64_t v33 = *((void *)v32 + 4);
    char v34 = *((unsigned char *)v32 + 40);
    long long v35 = v32[1];
    long long v37 = *v32;
    long long v38 = v35;
    unint64_t v39 = v33;
    LOBYTE(v40) = v34;
    char v43 = 7;
    sub_20AA2E260();
    sub_20AB86BE0();
    long long v37 = *(_OWORD *)(v3 + v19[12]);
    char v43 = 8;
    sub_20AA11D20();
    sub_20AB86BE0();
    LOWORD(v37) = *(_WORD *)(v3 + v19[13]);
    char v43 = 9;
    sub_20A97C86C();
    sub_20AB86BE0();
    *(void *)&long long v37 = *(void *)(v3 + v19[14]);
    char v43 = 10;
    sub_20A992474();
    sub_20AB86BE0();
    *(void *)&long long v37 = *(void *)(v3 + v19[15]);
    char v43 = 11;
    sub_20AA423EC();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB256F0()
{
  unint64_t result = qword_26AC4EA88;
  if (!qword_26AC4EA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EA88);
  }
  return result;
}

unint64_t sub_20AB25744()
{
  unint64_t result = qword_26AC51470;
  if (!qword_26AC51470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51470);
  }
  return result;
}

unint64_t sub_20AB25798()
{
  unint64_t result = qword_26AC50848;
  if (!qword_26AC50848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50848);
  }
  return result;
}

uint64_t StocksSession.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for SessionData();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB26074(0, &qword_26AC51750, MEMORY[0x263F8E040]);
  uint64_t v43 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v41 - v10;
  long long v46 = (int *)type metadata accessor for StocksSession();
  MEMORY[0x270FA5388](v46);
  long long v44 = a1;
  long long v45 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB256F0();
  uint64_t v42 = v11;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  uint64_t v41 = a2;
  LOBYTE(v47) = 0;
  uint64_t v13 = sub_20AB86B40();
  unsigned int v14 = v45;
  uint64_t *v45 = v13;
  v14[1] = v15;
  LOBYTE(v47) = 1;
  v14[2] = sub_20AB86AF0();
  v14[3] = v16;
  char v53 = 2;
  sub_20AA72BC4();
  sub_20AB86B80();
  uint64_t v17 = *((void *)&v47 + 1);
  char v18 = v48;
  uint64_t v19 = *((void *)&v48 + 1);
  int v20 = v49;
  int v21 = HIDWORD(v49);
  int v22 = v50;
  int v23 = DWORD1(v50);
  uint64_t v24 = *((void *)&v50 + 1);
  uint64_t v25 = v51;
  v14[4] = v47;
  v14[5] = v17;
  *((unsigned char *)v14 + 48) = v18;
  v14[7] = v19;
  *((_DWORD *)v14 + 16) = v20;
  *((_DWORD *)v14 + 17) = v21;
  *((_DWORD *)v14 + 18) = v22;
  *((_DWORD *)v14 + 19) = v23;
  v14[10] = v24;
  v14[11] = v25;
  LOBYTE(v47) = 3;
  sub_20A982A80(&qword_26AC4E0E8);
  sub_20AB86B80();
  uint64_t v26 = v46;
  sub_20AB26120((uint64_t)v7, (uint64_t)v14 + v46[7]);
  char v53 = 4;
  sub_20AB26184();
  sub_20AB86B80();
  long long v27 = v48;
  char v28 = (_OWORD *)((char *)v14 + v26[8]);
  *char v28 = v47;
  v28[1] = v27;
  char v53 = 5;
  sub_20AA8C55C();
  sub_20AB86B80();
  long long v29 = v48;
  char v30 = v49;
  long long v31 = v50;
  uint64_t v32 = v51;
  uint64_t v33 = v52;
  char v34 = (char *)v14 + v26[9];
  *(_OWORD *)char v34 = v47;
  *((_OWORD *)v34 + 1) = v29;
  v34[32] = v30;
  *(_OWORD *)(v34 + 40) = v31;
  *((void *)v34 + 7) = v32;
  *((void *)v34 + 8) = v33;
  char v53 = 6;
  sub_20AB261D8();
  sub_20AB86B80();
  *((unsigned char *)v14 + v26[10]) = v47;
  char v53 = 7;
  sub_20AA2E208();
  sub_20AB86B10();
  uint64_t v35 = v49;
  char v36 = v50;
  long long v37 = (char *)v14 + v26[11];
  long long v38 = v48;
  *(_OWORD *)long long v37 = v47;
  *((_OWORD *)v37 + 1) = v38;
  *((void *)v37 + 4) = v35;
  v37[40] = v36;
  char v53 = 8;
  sub_20AA11CC8();
  sub_20AB86B10();
  *(_OWORD *)((char *)v14 + v26[12]) = v47;
  char v53 = 9;
  sub_20A97C818();
  sub_20AB86B10();
  *(_WORD *)((char *)v45 + v46[13]) = v47;
  char v53 = 10;
  sub_20A992420();
  sub_20AB86B10();
  *(uint64_t *)((char *)v45 + v46[14]) = v47;
  char v53 = 11;
  sub_20AA42394();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v42, v43);
  uint64_t v39 = (uint64_t)v45;
  *(uint64_t *)((char *)v45 + v46[15]) = v47;
  sub_20AB2622C(v39, v41, (uint64_t (*)(void))type metadata accessor for StocksSession);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return sub_20AB26294(v39, (uint64_t (*)(void))type metadata accessor for StocksSession);
}

void sub_20AB26074(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB256F0();
    unint64_t v7 = a3(a1, &type metadata for StocksSession.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB260D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20AB26120(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_20AB26184()
{
  unint64_t result = qword_26AC51478;
  if (!qword_26AC51478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51478);
  }
  return result;
}

unint64_t sub_20AB261D8()
{
  unint64_t result = qword_26AC50850;
  if (!qword_26AC50850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50850);
  }
  return result;
}

uint64_t sub_20AB2622C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20AB26294(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20AB262F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StocksSession.init(from:)(a1, a2);
}

uint64_t sub_20AB2630C(void *a1)
{
  return StocksSession.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for StocksSession(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v41 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v41 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(void *)(a1 + 56) = a2[7];
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    uint64_t v10 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v10;
    uint64_t v11 = a3[7];
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)((char *)a2 + v11);
    uint64_t v14 = *(uint64_t *)((char *)a2 + v11 + 16);
    *(void *)(v12 + 8) = *(uint64_t *)((char *)a2 + v11 + 8);
    *(void *)(v12 + 16) = v14;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v11 + 32);
    *(void *)(v12 + 24) = *(uint64_t *)((char *)a2 + v11 + 24);
    *(void *)(v12 + 32) = v15;
    *(_WORD *)(v12 + 40) = *(_WORD *)((char *)a2 + v11 + 40);
    uint64_t v16 = *(uint64_t *)((char *)a2 + v11 + 56);
    *(void *)(v12 + 48) = *(uint64_t *)((char *)a2 + v11 + 48);
    *(void *)(v12 + 56) = v16;
    uint64_t v52 = *(uint64_t *)((char *)a2 + v11 + 72);
    *(void *)(v12 + 64) = *(uint64_t *)((char *)a2 + v11 + 64);
    *(void *)(v12 + 72) = v52;
    uint64_t v17 = (int *)type metadata accessor for SessionData();
    uint64_t v18 = v17[12];
    uint64_t v50 = v13 + v18;
    uint64_t v51 = v12 + v18;
    sub_20AB26650();
    uint64_t v20 = v19;
    int v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v51, v50, v20);
    v21(v12 + v17[13], v13 + v17[13], v20);
    *(unsigned char *)(v12 + v17[14]) = *(unsigned char *)(v13 + v17[14]);
    uint64_t v22 = a3[8];
    uint64_t v23 = a3[9];
    uint64_t v24 = (void *)((char *)v4 + v22);
    uint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    void *v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = v25[3];
    v24[2] = v25[2];
    v24[3] = v27;
    char v28 = (char *)v4 + v23;
    uint64_t v29 = (uint64_t)a2 + v23;
    uint64_t v30 = *(void *)(v29 + 8);
    *(void *)char v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    uint64_t v31 = *(void *)(v29 + 24);
    *((void *)v28 + 2) = *(void *)(v29 + 16);
    *((void *)v28 + 3) = v31;
    v28[32] = *(unsigned char *)(v29 + 32);
    uint64_t v32 = *(void *)(v29 + 48);
    *((void *)v28 + 5) = *(void *)(v29 + 40);
    *((void *)v28 + 6) = v32;
    uint64_t v33 = *(void *)(v29 + 56);
    uint64_t v34 = *(void *)(v29 + 64);
    uint64_t v35 = a3[10];
    uint64_t v36 = a3[11];
    char v37 = *((unsigned char *)a2 + v35);
    *((void *)v28 + 7) = v33;
    *((void *)v28 + 8) = v34;
    *((unsigned char *)v4 + v35) = v37;
    long long v38 = (char *)v4 + v36;
    uint64_t v39 = (char *)a2 + v36;
    uint64_t v53 = *(uint64_t *)((char *)a2 + v36 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53 == 1)
    {
      long long v40 = *((_OWORD *)v39 + 1);
      *(_OWORD *)long long v38 = *(_OWORD *)v39;
      *((_OWORD *)v38 + 1) = v40;
      *(_OWORD *)(v38 + 25) = *(_OWORD *)(v39 + 25);
    }
    else
    {
      char *v38 = *v39;
      *(_WORD *)(v38 + 1) = *(_WORD *)(v39 + 1);
      *((void *)v38 + 1) = *((void *)v39 + 1);
      *((void *)v38 + 2) = v53;
      uint64_t v42 = *((void *)v39 + 4);
      *((void *)v38 + 3) = *((void *)v39 + 3);
      *((void *)v38 + 4) = v42;
      v38[40] = v39[40];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v43 = a3[12];
    uint64_t v44 = a3[13];
    long long v45 = (void *)((char *)v4 + v43);
    long long v46 = (uint64_t *)((char *)a2 + v43);
    uint64_t v47 = v46[1];
    void *v45 = *v46;
    v45[1] = v47;
    *(_WORD *)((char *)v4 + v44) = *(_WORD *)((char *)a2 + v44);
    uint64_t v48 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(void *)((char *)v4 + v48) = *(uint64_t *)((char *)a2 + v48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

void sub_20AB26650()
{
  if (!qword_26AC52078)
  {
    unint64_t v0 = sub_20AB85DD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC52078);
    }
  }
}

uint64_t destroy for StocksSession(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for SessionData();
  uint64_t v6 = v4 + *(int *)(v5 + 48);
  sub_20AB26650();
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v9(v6, v7);
  v9(v4 + *(int *)(v5 + 52), v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 44) + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StocksSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)(a2 + v9);
  uint64_t v12 = *(void *)(a2 + v9 + 16);
  *(void *)(v10 + 8) = *(void *)(a2 + v9 + 8);
  *(void *)(v10 + 16) = v12;
  uint64_t v13 = *(void *)(a2 + v9 + 32);
  *(void *)(v10 + 24) = *(void *)(a2 + v9 + 24);
  *(void *)(v10 + 32) = v13;
  *(_WORD *)(v10 + 40) = *(_WORD *)(a2 + v9 + 40);
  uint64_t v14 = *(void *)(a2 + v9 + 56);
  *(void *)(v10 + 48) = *(void *)(a2 + v9 + 48);
  *(void *)(v10 + 56) = v14;
  uint64_t v50 = *(void *)(a2 + v9 + 72);
  *(void *)(v10 + 64) = *(void *)(a2 + v9 + 64);
  *(void *)(v10 + 72) = v50;
  uint64_t v15 = (int *)type metadata accessor for SessionData();
  uint64_t v16 = v15[12];
  uint64_t v48 = v11 + v16;
  uint64_t v49 = v10 + v16;
  sub_20AB26650();
  uint64_t v18 = v17;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v49, v48, v18);
  v19(v10 + v15[13], v11 + v15[13], v18);
  *(unsigned char *)(v10 + v15[14]) = *(unsigned char *)(v11 + v15[14]);
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = v23[3];
  _OWORD v22[2] = v23[2];
  v22[3] = v25;
  uint64_t v26 = a1 + v21;
  uint64_t v27 = a2 + v21;
  uint64_t v28 = *(void *)(v27 + 8);
  *(void *)uint64_t v26 = *(void *)v27;
  *(void *)(v26 + 8) = v28;
  uint64_t v29 = *(void *)(v27 + 24);
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  *(void *)(v26 + 24) = v29;
  *(unsigned char *)(v26 + 32) = *(unsigned char *)(v27 + 32);
  uint64_t v30 = *(void *)(v27 + 48);
  *(void *)(v26 + 40) = *(void *)(v27 + 40);
  *(void *)(v26 + 48) = v30;
  uint64_t v31 = *(void *)(v27 + 56);
  uint64_t v32 = *(void *)(v27 + 64);
  uint64_t v33 = a3[10];
  uint64_t v34 = a3[11];
  char v35 = *(unsigned char *)(a2 + v33);
  *(void *)(v26 + 56) = v31;
  *(void *)(v26 + 64) = v32;
  *(unsigned char *)(a1 + v33) = v35;
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  uint64_t v38 = *(void *)(a2 + v34 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38 == 1)
  {
    long long v39 = *(_OWORD *)(v37 + 16);
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    *(_OWORD *)(v36 + 16) = v39;
    *(_OWORD *)(v36 + 25) = *(_OWORD *)(v37 + 25);
  }
  else
  {
    *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
    *(_WORD *)(v36 + 1) = *(_WORD *)(v37 + 1);
    *(void *)(v36 + 8) = *(void *)(v37 + 8);
    *(void *)(v36 + 16) = v38;
    uint64_t v40 = *(void *)(v37 + 32);
    *(void *)(v36 + 24) = *(void *)(v37 + 24);
    *(void *)(v36 + 32) = v40;
    *(unsigned char *)(v36 + 40) = *(unsigned char *)(v37 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v41 = a3[12];
  uint64_t v42 = a3[13];
  uint64_t v43 = (void *)(a1 + v41);
  uint64_t v44 = (void *)(a2 + v41);
  uint64_t v45 = v44[1];
  *uint64_t v43 = *v44;
  v43[1] = v45;
  *(_WORD *)(a1 + v42) = *(_WORD *)(a2 + v42);
  uint64_t v46 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v46) = *(void *)(a2 + v46);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StocksSession(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_DWORD *)uint64_t v7 = *(_DWORD *)(a2 + v6);
  *(void *)(v7 + 8) = *(void *)(a2 + v6 + 8);
  *(void *)(v7 + 16) = *(void *)(a2 + v6 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + 40) = *(unsigned char *)(v8 + 40);
  *(unsigned char *)(v7 + 41) = *(unsigned char *)(v8 + 41);
  *(void *)(v7 + 48) = *(void *)(v8 + 48);
  *(void *)(v7 + 56) = *(void *)(v8 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 72) = *(void *)(v8 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for SessionData();
  uint64_t v10 = v9[12];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  sub_20AB26650();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v15(v11, v12, v13);
  v15(v7 + v9[13], v8 + v9[13], v14);
  *(unsigned char *)(v7 + v9[14]) = *(unsigned char *)(v8 + v9[14]);
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = a2 + v16;
  void *v17 = *(void *)(a2 + v16);
  v17[1] = *(void *)(a2 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17[2] = *(void *)(v18 + 16);
  v17[3] = *(void *)(v18 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(void *)uint64_t v20 = *(void *)(a2 + v19);
  *(void *)(v20 + 8) = *(void *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(void *)(v20 + 24) = *(void *)(v21 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v20 + 32) = *(unsigned char *)(v21 + 32);
  *(void *)(v20 + 40) = *(void *)(v21 + 40);
  *(void *)(v20 + 48) = *(void *)(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v20 + 56) = *(void *)(v21 + 56);
  *(void *)(v20 + 64) = *(void *)(v21 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (long long *)(a2 + v22);
  uint64_t v25 = *(void *)(a1 + v22 + 16);
  uint64_t v26 = *(void *)(a2 + v22 + 16);
  if (v25 == 1)
  {
    if (v26 == 1)
    {
      long long v27 = *v24;
      long long v28 = v24[1];
      *(_OWORD *)(v23 + 25) = *(long long *)((char *)v24 + 25);
      *(_OWORD *)uint64_t v23 = v27;
      *(_OWORD *)(v23 + 16) = v28;
    }
    else
    {
      *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
      *(unsigned char *)(v23 + 1) = *((unsigned char *)v24 + 1);
      *(unsigned char *)(v23 + 2) = *((unsigned char *)v24 + 2);
      *(void *)(v23 + 8) = *((void *)v24 + 1);
      *(void *)(v23 + 16) = *((void *)v24 + 2);
      *(void *)(v23 + 24) = *((void *)v24 + 3);
      *(void *)(v23 + 32) = *((void *)v24 + 4);
      *(unsigned char *)(v23 + 40) = *((unsigned char *)v24 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v26 == 1)
  {
    sub_20AB26FB4(v23);
    long long v29 = *(long long *)((char *)v24 + 25);
    long long v30 = v24[1];
    *(_OWORD *)uint64_t v23 = *v24;
    *(_OWORD *)(v23 + 16) = v30;
    *(_OWORD *)(v23 + 25) = v29;
  }
  else
  {
    *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
    *(unsigned char *)(v23 + 1) = *((unsigned char *)v24 + 1);
    *(unsigned char *)(v23 + 2) = *((unsigned char *)v24 + 2);
    *(void *)(v23 + 8) = *((void *)v24 + 1);
    *(void *)(v23 + 16) = *((void *)v24 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v23 + 24) = *((void *)v24 + 3);
    *(void *)(v23 + 32) = *((void *)v24 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v23 + 40) = *((unsigned char *)v24 + 40);
  }
  uint64_t v31 = a3[12];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20AB26FB4(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for StocksSession(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)((char *)a2 + v9);
  *(_OWORD *)(v10 + 8) = *(_OWORD *)((char *)a2 + v9 + 8);
  *(_OWORD *)(v10 + 24) = *(_OWORD *)((char *)a2 + v9 + 24);
  v10[40] = *((unsigned char *)a2 + v9 + 40);
  v10[41] = *((unsigned char *)a2 + v9 + 41);
  long long v12 = *(_OWORD *)((char *)a2 + v9 + 64);
  *((_OWORD *)v10 + 3) = *(_OWORD *)((char *)a2 + v9 + 48);
  *((_OWORD *)v10 + 4) = v12;
  uint64_t v13 = (int *)type metadata accessor for SessionData();
  uint64_t v14 = v13[12];
  char v35 = &v10[v14];
  uint64_t v15 = &v11[v14];
  sub_20AB26650();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
  v18(v35, v15, v16);
  v18(&v10[v13[13]], &v11[v13[13]], v17);
  v10[v13[14]] = v11[v13[14]];
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (_OWORD *)((char *)a1 + v19);
  uint64_t v22 = (_OWORD *)((char *)a2 + v19);
  long long v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (char *)a1 + v20;
  uint64_t v25 = (char *)a2 + v20;
  *((void *)v24 + 8) = *((void *)v25 + 8);
  long long v26 = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = v26;
  long long v27 = *((_OWORD *)v25 + 1);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v27;
  uint64_t v28 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  long long v29 = (_OWORD *)((char *)a1 + v28);
  long long v30 = (_OWORD *)((char *)a2 + v28);
  long long v31 = v30[1];
  *long long v29 = *v30;
  v29[1] = v31;
  *(_OWORD *)((char *)v29 + 25) = *(_OWORD *)((char *)v30 + 25);
  uint64_t v32 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_WORD *)((char *)a1 + v32) = *(_WORD *)((char *)a2 + v32);
  uint64_t v33 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v33) = *(void *)((char *)a2 + v33);
  return a1;
}

uint64_t assignWithTake for StocksSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)(a2 + v10);
  uint64_t v13 = *(void *)(a2 + v10 + 16);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  *(void *)(v11 + 16) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v12 + 32);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  *(void *)(v11 + 32) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v11 + 40) = *(_WORD *)(v12 + 40);
  uint64_t v15 = *(void *)(v12 + 56);
  *(void *)(v11 + 48) = *(void *)(v12 + 48);
  *(void *)(v11 + 56) = v15;
  swift_bridgeObjectRelease();
  *(void *)(v11 + 64) = *(void *)(v12 + 64);
  swift_bridgeObjectRelease();
  *(void *)(v11 + 72) = *(void *)(v12 + 72);
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for SessionData();
  uint64_t v17 = v16[12];
  uint64_t v18 = v11 + v17;
  uint64_t v19 = v12 + v17;
  sub_20AB26650();
  uint64_t v21 = v20;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40);
  v22(v18, v19, v20);
  v22(v11 + v16[13], v12 + v16[13], v21);
  *(unsigned char *)(v11 + v16[14]) = *(unsigned char *)(v12 + v16[14]);
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)(a2 + v23 + 8);
  void *v24 = *(void *)(a2 + v23);
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v25 + 24);
  v24[2] = *(void *)(v25 + 16);
  v24[3] = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(a2 + v28 + 8);
  *(void *)uint64_t v29 = *(void *)(a2 + v28);
  *(void *)(v29 + 8) = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v30 + 24);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  *(void *)(v29 + 24) = v32;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
  uint64_t v33 = *(void *)(v30 + 48);
  *(void *)(v29 + 40) = *(void *)(v30 + 40);
  *(void *)(v29 + 48) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v30 + 64);
  *(void *)(v29 + 56) = *(void *)(v30 + 56);
  *(void *)(v29 + 64) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  if (*(void *)(a1 + v35 + 16) != 1)
  {
    uint64_t v38 = *(void *)(v37 + 16);
    if (v38 != 1)
    {
      *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
      *(unsigned char *)(v36 + 1) = *(unsigned char *)(v37 + 1);
      *(unsigned char *)(v36 + 2) = *(unsigned char *)(v37 + 2);
      *(void *)(v36 + 8) = *(void *)(v37 + 8);
      *(void *)(v36 + 16) = v38;
      swift_bridgeObjectRelease();
      uint64_t v40 = *(void *)(v37 + 32);
      *(void *)(v36 + 24) = *(void *)(v37 + 24);
      *(void *)(v36 + 32) = v40;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v36 + 40) = *(unsigned char *)(v37 + 40);
      goto LABEL_6;
    }
    sub_20AB26FB4(a1 + v35);
  }
  long long v39 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v39;
  *(_OWORD *)(v36 + 25) = *(_OWORD *)(v37 + 25);
LABEL_6:
  uint64_t v41 = a3[12];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  *uint64_t v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[14];
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  *(void *)(a1 + v46) = *(void *)(a2 + v46);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB274D4);
}

uint64_t sub_20AB274D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SessionData();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StocksSession(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB27598);
}

uint64_t sub_20AB27598(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SessionData();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_20AB27640()
{
  uint64_t result = type metadata accessor for SessionData();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StocksSession.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB277F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksSession.CodingKeys()
{
  return &type metadata for StocksSession.CodingKeys;
}

unint64_t sub_20AB27834()
{
  unint64_t result = qword_267656B70;
  if (!qword_267656B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656B70);
  }
  return result;
}

unint64_t sub_20AB2788C()
{
  unint64_t result = qword_26AC4EA98;
  if (!qword_26AC4EA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EA98);
  }
  return result;
}

unint64_t sub_20AB278E4()
{
  unint64_t result = qword_26AC4EA90;
  if (!qword_26AC4EA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EA90);
  }
  return result;
}

uint64_t sub_20AB27938(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973736553707061 && a2 == 0xEC00000044496E6FLL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614472657375 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446E6F6973736573 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61746144707061 && a2 == 0xE700000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6144656369766564 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA8650 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x800000020ABA7660 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446775626564 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7320 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA8FF0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

StocksAnalytics::ExternalAnalyticsEventType_optional __swiftcall ExternalAnalyticsEventType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t ExternalAnalyticsEventType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x56656C6369747261;
      break;
    case 2:
      uint64_t result = 0x656956616964656DLL;
      break;
    case 3:
      uint64_t result = 0x6E65704F707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB27F64(unsigned __int8 *a1, char *a2)
{
  return sub_20AA39AA8(*a1, *a2);
}

unint64_t sub_20AB27F74()
{
  unint64_t result = qword_267656B78;
  if (!qword_267656B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656B78);
  }
  return result;
}

uint64_t sub_20AB27FC8()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB280AC()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB28178()
{
  return sub_20AB86D80();
}

StocksAnalytics::ExternalAnalyticsEventType_optional sub_20AB28258(Swift::String *a1)
{
  return ExternalAnalyticsEventType.init(rawValue:)(*a1);
}

void sub_20AB28264(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000776569;
      uint64_t v3 = 0x56656C6369747261;
      goto LABEL_3;
    case 2:
      *a1 = 0x656956616964656DLL;
      a1[1] = 0xE900000000000077;
      break;
    case 3:
      *a1 = 0x6E65704F707061;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20AB28308()
{
  return sub_20AB86750();
}

uint64_t sub_20AB28368()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ExternalAnalyticsEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB28484);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsEventType()
{
  return &type metadata for ExternalAnalyticsEventType;
}

unint64_t sub_20AB284BC()
{
  unint64_t result = qword_267656B80;
  if (!qword_267656B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656B80);
  }
  return result;
}

StocksAnalytics::ListeningSource_optional __swiftcall ListeningSource.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t ListeningSource.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7070416E69;
      break;
    case 2:
      uint64_t result = 0x6C616E7265747865;
      break;
    case 3:
      uint64_t result = 0x79616C50726163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB285F4(unsigned __int8 *a1, char *a2)
{
  return sub_20AA38070(*a1, *a2);
}

unint64_t sub_20AB28604()
{
  unint64_t result = qword_267656B88;
  if (!qword_267656B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656B88);
  }
  return result;
}

uint64_t sub_20AB28658()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB2872C()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB287E8()
{
  return sub_20AB86D80();
}

StocksAnalytics::ListeningSource_optional sub_20AB288B8(Swift::String *a1)
{
  return ListeningSource.init(rawValue:)(*a1);
}

void sub_20AB288C4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7070416E69;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C616E7265747865;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x79616C50726163;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20AB28958()
{
  return sub_20AB86750();
}

uint64_t sub_20AB289B8()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ListeningSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB28AD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListeningSource()
{
  return &type metadata for ListeningSource;
}

unint64_t sub_20AB28B0C()
{
  unint64_t result = qword_267656B90;
  if (!qword_267656B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656B90);
  }
  return result;
}

uint64_t sub_20AB28B60(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656B98, MEMORY[0x263F24D10]);
}

uint64_t static SymbolRepositionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536C0, MEMORY[0x263F24D18], (uint64_t)qword_267656B98, a1);
}

uint64_t static SymbolRepositionEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB28BC8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656BB0, MEMORY[0x263F24DC8]);
}

uint64_t static SymbolRepositionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536C8, MEMORY[0x263F24DD8], (uint64_t)qword_267656BB0, a1);
}

uint64_t sub_20AB28C28()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656BC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656BC8);
  return sub_20AB85D30();
}

uint64_t static SymbolRepositionEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536D0, MEMORY[0x263F24DE8], (uint64_t)qword_267656BC8, a1);
}

uint64_t SymbolRepositionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SymbolRepositionEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SymbolRepositionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolRepositionEvent.previousSymbolPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolRepositionEvent(0) + 20);
  sub_20AB28DE4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SymbolRepositionEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656BF8);
}

void sub_20AB28DE4()
{
  if (!qword_26AC4E620)
  {
    sub_20A9EE544();
    sub_20A9EE598();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E620);
    }
  }
}

uint64_t SymbolRepositionEvent.previousSymbolPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolRepositionEvent(0) + 20);
  sub_20AB28DE4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolRepositionEvent.previousSymbolPositionData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolRepositionEvent.newSymbolPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolRepositionEvent(0) + 24);
  sub_20AB28DE4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SymbolRepositionEvent.newSymbolPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolRepositionEvent(0) + 24);
  sub_20AB28DE4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolRepositionEvent.newSymbolPositionData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolRepositionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for SymbolRepositionEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  sub_20AB28DE4();
  uint64_t v7 = v6;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v10)((void *)(v6 - 8), v5, v2, v6);
  uint64_t v8 = a1 + *(int *)(v4 + 24);

  return v10(v8, v2, v7);
}

uint64_t SymbolRepositionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SymbolRepositionEvent.Model.previousSymbolPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for SymbolRepositionEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SymbolRepositionEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656C08);
}

uint64_t SymbolRepositionEvent.Model.newSymbolPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for SymbolRepositionEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SymbolRepositionEvent.Model.init(eventData:previousSymbolPositionData:newSymbolPositionData:)@<X0>(uint64_t a1@<X0>, int *a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  int v6 = *a2;
  int v7 = *a3;
  uint64_t v8 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for SymbolRepositionEvent.Model(0);
  *(_DWORD *)(a4 + *(int *)(result + 20)) = v6;
  *(_DWORD *)(a4 + *(int *)(result + 24)) = v7;
  return result;
}

uint64_t sub_20AB29274()
{
  unint64_t v1 = 0xD00000000000001ALL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000015;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AB292E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB2ABB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB29308(uint64_t a1)
{
  unint64_t v2 = sub_20AB29594();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB29344(uint64_t a1)
{
  unint64_t v2 = sub_20AB29594();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolRepositionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB29980(0, &qword_267656BE0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB29594();
  sub_20AB86DC0();
  char v16 = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for SymbolRepositionEvent.Model(0);
    int v15 = *(_DWORD *)(v3 + *(int *)(v10 + 20));
    char v14 = 1;
    sub_20A9EE598();
    sub_20AB86C50();
    int v13 = *(_DWORD *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB29594()
{
  unint64_t result = qword_267656BE8;
  if (!qword_267656BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656BE8);
  }
  return result;
}

uint64_t SymbolRepositionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v22 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB29980(0, &qword_267656BF0, MEMORY[0x263F8E040]);
  uint64_t v24 = v6;
  uint64_t v21 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = type metadata accessor for SymbolRepositionEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB29594();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v18 = v9;
  uint64_t v19 = v11;
  uint64_t v13 = v21;
  uint64_t v12 = v22;
  char v29 = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  int v15 = v23;
  uint64_t v14 = v24;
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v15, v4);
  char v28 = 1;
  sub_20A9EE544();
  sub_20AB86B80();
  *(_DWORD *)&v19[*(int *)(v18 + 20)] = v26;
  char v27 = 2;
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
  uint64_t v16 = (uint64_t)v19;
  *(_DWORD *)&v19[*(int *)(v18 + 24)] = v25;
  sub_20AB299E4(v16, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AB29A48(v16);
}

void sub_20AB29980(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB29594();
    unint64_t v7 = a3(a1, &type metadata for SymbolRepositionEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB299E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolRepositionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB29A48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolRepositionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB29AA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolRepositionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB29ABC(void *a1)
{
  return SymbolRepositionEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB29AD4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536C0, MEMORY[0x263F24D18], (uint64_t)qword_267656B98, a1);
}

uint64_t sub_20AB29B0C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536C8, MEMORY[0x263F24DD8], (uint64_t)qword_267656BB0, a1);
}

uint64_t sub_20AB29B44@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536D0, MEMORY[0x263F24DE8], (uint64_t)qword_267656BC8, a1);
}

uint64_t sub_20AB29B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AB28DE4();
  uint64_t v8 = v7;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v11)((void *)(v7 - 8), v6, v4, v7);
  uint64_t v9 = a2 + *(int *)(a1 + 24);

  return v11(v9, v4, v8);
}

char *initializeBufferWithCopyOfBuffer for SymbolRepositionEvent(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_20AB28DE4();
    uint64_t v12 = v11;
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v13(v9, v10, v11);
    v13(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v12);
  }
  return a1;
}

uint64_t destroy for SymbolRepositionEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AB28DE4();
  uint64_t v7 = v6;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v6 - 8), v5, v6);
  uint64_t v8 = a1 + *(int *)(a2 + 24);

  return v10(v8, v7);
}

uint64_t initializeWithCopy for SymbolRepositionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB28DE4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v12(v8, v9, v10);
  v12(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v11);
  return a1;
}

uint64_t assignWithCopy for SymbolRepositionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB28DE4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v12(v8, v9, v10);
  v12(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v11);
  return a1;
}

uint64_t initializeWithTake for SymbolRepositionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB28DE4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v12(v8, v9, v10);
  v12(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v11);
  return a1;
}

uint64_t assignWithTake for SymbolRepositionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB28DE4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v12(v8, v9, v10);
  v12(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolRepositionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB2A248);
}

uint64_t sub_20AB2A248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20AB28DE4();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolRepositionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB2A354);
}

uint64_t sub_20AB2A354(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20AB28DE4();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_20AB2A458()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB28DE4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolRepositionEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v8) = *(_DWORD *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t initializeWithCopy for SymbolRepositionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithCopy for SymbolRepositionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for SymbolRepositionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for SymbolRepositionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolRepositionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB2A81C);
}

uint64_t sub_20AB2A81C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SymbolRepositionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB2A89C);
}

uint64_t sub_20AB2A89C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_20AB2A90C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SymbolRepositionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB2AA74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolRepositionEvent.Model.CodingKeys()
{
  return &type metadata for SymbolRepositionEvent.Model.CodingKeys;
}

unint64_t sub_20AB2AAB0()
{
  unint64_t result = qword_267656C18;
  if (!qword_267656C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656C18);
  }
  return result;
}

unint64_t sub_20AB2AB08()
{
  unint64_t result = qword_267656C20;
  if (!qword_267656C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656C20);
  }
  return result;
}

unint64_t sub_20AB2AB60()
{
  unint64_t result = qword_267656C28;
  if (!qword_267656C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656C28);
  }
  return result;
}

uint64_t sub_20AB2ABB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000020ABA9710 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA9730)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t AdState.init(bannerState:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_20AB86500();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(a1, v4);
  if (result == *MEMORY[0x263F58790])
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 96))(a1, v4);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
    char v7 = 3;
  }
  else
  {
    if (result != *MEMORY[0x263F58778])
    {
      if (result != *MEMORY[0x263F58780])
      {
        if (result == *MEMORY[0x263F58788])
        {
          char v7 = 1;
          goto LABEL_10;
        }
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
      }
      char v7 = 0;
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 96))(a1, v4);
    uint64_t v8 = sub_20AB864F0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
    char v7 = 2;
  }
LABEL_10:
  *a2 = v7;
  return result;
}

BOOL BannerAdState.instrumentationAllowed.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20AB86500();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  int v7 = v6;
  int v8 = *MEMORY[0x263F58790];
  if (v6 == *MEMORY[0x263F58790])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else if (v6 == *MEMORY[0x263F58778])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    uint64_t v9 = sub_20AB864F0();
    (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v5, v9);
  }
  else if (v6 != *MEMORY[0x263F58780] && v6 != *MEMORY[0x263F58788])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v7 == v8;
}

uint64_t UserSegmentationSegmentSetData.init(setIDs:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static UserSegmentationSegmentSetData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t UserSegmentationSegmentSetData.setIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserSegmentationSegmentSetData.setIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*UserSegmentationSegmentSetData.setIDs.modify())()
{
  return nullsub_1;
}

uint64_t sub_20AB2B0D0()
{
  return 0x734449746573;
}

uint64_t sub_20AB2B0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x734449746573 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AB2B174(uint64_t a1)
{
  unint64_t v2 = sub_20AB2B374();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB2B1B0(uint64_t a1)
{
  unint64_t v2 = sub_20AB2B374();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UserSegmentationSegmentSetData.encode(to:)(void *a1)
{
  sub_20AB2B5E4(0, &qword_26AC51920, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB2B374();
  sub_20AB86DC0();
  v10[1] = v8;
  sub_20AB2B3C8();
  sub_20AB2B648(&qword_26AC516F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB2B374()
{
  unint64_t result = qword_26AC50F88;
  if (!qword_26AC50F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F88);
  }
  return result;
}

void sub_20AB2B3C8()
{
  if (!qword_26AC516F0)
  {
    unint64_t v0 = sub_20AB86790();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC516F0);
    }
  }
}

uint64_t UserSegmentationSegmentSetData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20AB2B5E4(0, &qword_267656C30, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB2B374();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AB2B3C8();
    sub_20AB2B648(&qword_26AC51700);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB2B5E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB2B374();
    unint64_t v7 = a3(a1, &type metadata for UserSegmentationSegmentSetData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB2B648(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20AB2B3C8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AB2B6B0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return UserSegmentationSegmentSetData.init(from:)(a1, a2);
}

uint64_t sub_20AB2B6C8(void *a1)
{
  return UserSegmentationSegmentSetData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for UserSegmentationSegmentSetData()
{
  return &type metadata for UserSegmentationSegmentSetData;
}

unsigned char *storeEnumTagSinglePayload for UserSegmentationSegmentSetData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB2B78CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserSegmentationSegmentSetData.CodingKeys()
{
  return &type metadata for UserSegmentationSegmentSetData.CodingKeys;
}

unint64_t sub_20AB2B7C8()
{
  unint64_t result = qword_267656C38;
  if (!qword_267656C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656C38);
  }
  return result;
}

unint64_t sub_20AB2B820()
{
  unint64_t result = qword_26AC50F98;
  if (!qword_26AC50F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F98);
  }
  return result;
}

unint64_t sub_20AB2B878()
{
  unint64_t result = qword_26AC50F90;
  if (!qword_26AC50F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F90);
  }
  return result;
}

uint64_t sub_20AB2B8CC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656C40, MEMORY[0x263F24D10]);
}

uint64_t static PersonalizedAdsEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536D8, MEMORY[0x263F24D18], (uint64_t)qword_267656C40, a1);
}

uint64_t static PersonalizedAdsEngagementEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB2B934(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656C58, MEMORY[0x263F24DC8]);
}

uint64_t static PersonalizedAdsEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536E0, MEMORY[0x263F24DD8], (uint64_t)qword_267656C58, a1);
}

uint64_t sub_20AB2B994()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656C70);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656C70);
  return sub_20AB85D30();
}

uint64_t static PersonalizedAdsEngagementEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536E8, MEMORY[0x263F24DE8], (uint64_t)qword_267656C70, a1);
}

uint64_t PersonalizedAdsEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t PersonalizedAdsEngagementEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*PersonalizedAdsEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB2BEB8(type metadata accessor for PersonalizedAdsEngagementEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for PersonalizedAdsEngagementEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656CA8);
}

uint64_t PersonalizedAdsEngagementEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PersonalizedAdsEngagementEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.userSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 24);
  sub_20AB2BC3C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB2BC3C()
{
  if (!qword_267656C88)
  {
    sub_20AA016A4();
    sub_20AA016FC();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267656C88);
    }
  }
}

uint64_t PersonalizedAdsEngagementEvent.userSelectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PersonalizedAdsEngagementEvent(0) + 24);
  sub_20AB2BC3C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PersonalizedAdsEngagementEvent.userSelectionData.modify())()
{
  return nullsub_1;
}

uint64_t PersonalizedAdsEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for PersonalizedAdsEngagementEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  sub_20AB2BC3C();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t PersonalizedAdsEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t PersonalizedAdsEngagementEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB2BEB8(type metadata accessor for PersonalizedAdsEngagementEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AB2BEB8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for PersonalizedAdsEngagementEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656CB8);
}

uint64_t PersonalizedAdsEngagementEvent.Model.userSelectionData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.Model.init(eventData:timedData:userSelectionData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = *a3;
  uint64_t v8 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  uint64_t v10 = a4 + *(int *)(v9 + 20);
  uint64_t v11 = sub_20AB85FE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  *(unsigned char *)(a4 + *(int *)(v9 + 24)) = v7;
  return result;
}

uint64_t sub_20AB2C06C()
{
  unint64_t v1 = 0x74614464656D6974;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AB2C0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB2DB48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB2C0F4(uint64_t a1)
{
  unint64_t v2 = sub_20AB2C3C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB2C130(uint64_t a1)
{
  unint64_t v2 = sub_20AB2C3C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PersonalizedAdsEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB2C8E8(0, &qword_267656C90, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB2C3C8();
  sub_20AB86DC0();
  v12[15] = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
    v12[14] = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    v12[13] = *(unsigned char *)(v3 + *(int *)(v10 + 24));
    v12[12] = 2;
    sub_20AA016FC();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB2C3C8()
{
  unint64_t result = qword_267656C98;
  if (!qword_267656C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656C98);
  }
  return result;
}

uint64_t PersonalizedAdsEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_20AB85FE0();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_20AB85FC0();
  uint64_t v23 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  char v27 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB2C8E8(0, &qword_267656CA0, MEMORY[0x263F8E040]);
  uint64_t v28 = v8;
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB2C3C8();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = v11;
  uint64_t v21 = a1;
  uint64_t v14 = (uint64_t)v13;
  uint64_t v16 = v24;
  uint64_t v15 = v25;
  uint64_t v17 = v26;
  char v33 = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v14, v27, v29);
  char v32 = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14 + *(int *)(v20 + 20), v6, v17);
  char v30 = 2;
  sub_20AA016A4();
  sub_20AB86B80();
  uint64_t v18 = (uint64_t)v21;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v28);
  *(unsigned char *)(v14 + *(int *)(v20 + 24)) = v31;
  sub_20AB2C94C(v14, v22);
  __swift_destroy_boxed_opaque_existential_1(v18);
  return sub_20AB2C9B0(v14);
}

void sub_20AB2C8E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB2C3C8();
    unint64_t v7 = a3(a1, &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB2C94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB2C9B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PersonalizedAdsEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB2CA0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PersonalizedAdsEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB2CA24(void *a1)
{
  return PersonalizedAdsEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB2CA3C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536D8, MEMORY[0x263F24D18], (uint64_t)qword_267656C40, a1);
}

uint64_t sub_20AB2CA74@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536E0, MEMORY[0x263F24DD8], (uint64_t)qword_267656C58, a1);
}

uint64_t sub_20AB2CAAC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536E8, MEMORY[0x263F24DE8], (uint64_t)qword_267656C70, a1);
}

uint64_t sub_20AB2CAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  sub_20AB2BC3C();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for PersonalizedAdsEngagementEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB2BC3C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_20AB2BC3C();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB2BC3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB2BC3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB2BC3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB2BC3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB2D268);
}

uint64_t sub_20AB2D268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  sub_20AB2BC3C();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB2D3C8);
}

uint64_t sub_20AB2D3C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  sub_20AB2BC3C();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_20AB2D520()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AB2BC3C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB2D638);
}

uint64_t sub_20AB2D638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_20AB85FE0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 3) {
        return v14 - 2;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB2D75C);
}

uint64_t sub_20AB2D75C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AB2D86C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PersonalizedAdsEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB2DA08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsEngagementEvent.Model.CodingKeys()
{
  return &type metadata for PersonalizedAdsEngagementEvent.Model.CodingKeys;
}

unint64_t sub_20AB2DA44()
{
  unint64_t result = qword_267656CC8;
  if (!qword_267656CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656CC8);
  }
  return result;
}

unint64_t sub_20AB2DA9C()
{
  unint64_t result = qword_267656CD0;
  if (!qword_267656CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656CD0);
  }
  return result;
}

unint64_t sub_20AB2DAF4()
{
  unint64_t result = qword_267656CD8;
  if (!qword_267656CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656CD8);
  }
  return result;
}

uint64_t sub_20AB2DB48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA9750)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

StocksAnalytics::PersonalizedAdsUserSelectionType_optional __swiftcall PersonalizedAdsUserSelectionType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t PersonalizedAdsUserSelectionType.rawValue.getter()
{
  uint64_t v1 = 0x6E49646574706FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x74754F646574706FLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AB2DD6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA34C0C(*a1, *a2);
}

unint64_t sub_20AB2DD7C()
{
  unint64_t result = qword_267656CE0;
  if (!qword_267656CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656CE0);
  }
  return result;
}

uint64_t sub_20AB2DDD0()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB2DE74()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB2DF04()
{
  return sub_20AB86D80();
}

StocksAnalytics::PersonalizedAdsUserSelectionType_optional sub_20AB2DFA4(Swift::String *a1)
{
  return PersonalizedAdsUserSelectionType.init(rawValue:)(*a1);
}

void sub_20AB2DFB0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x6E49646574706FLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x74754F646574706FLL;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AB2E010()
{
  return sub_20AB86750();
}

uint64_t sub_20AB2E070()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for PersonalizedAdsUserSelectionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB2E18CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsUserSelectionType()
{
  return &type metadata for PersonalizedAdsUserSelectionType;
}

unint64_t sub_20AB2E1C4()
{
  unint64_t result = qword_267656CE8;
  if (!qword_267656CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656CE8);
  }
  return result;
}

uint64_t sub_20AB2E218(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656CF0, MEMORY[0x263F24D10]);
}

uint64_t static MediaEngageCompleteEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536F0, MEMORY[0x263F24D18], (uint64_t)qword_267656CF0, a1);
}

uint64_t static MediaEngageCompleteEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB2E280(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656D08, MEMORY[0x263F24DC8]);
}

uint64_t static MediaEngageCompleteEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676536F8, MEMORY[0x263F24DD8], (uint64_t)qword_267656D08, a1);
}

uint64_t sub_20AB2E2E0()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656D20);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656D20);
  return sub_20AB85D30();
}

uint64_t static MediaEngageCompleteEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653700, MEMORY[0x263F24DE8], (uint64_t)qword_267656D20, a1);
}

uint64_t MediaEngageCompleteEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t MediaEngageCompleteEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*MediaEngageCompleteEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 20);
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for MediaEngageCompleteEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC50B20);
}

uint64_t MediaEngageCompleteEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 20);
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 24);
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 24);
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 28);
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 28);
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 32);
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 32);
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.mediaData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 36);
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 36);
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 40);
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 40);
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.anfComponentData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.mediaEngagementCompletedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 44);
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.mediaEngagementCompletedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 44);
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.mediaEngagementCompletedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 48);
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 48);
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 52);
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageCompleteEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 52);
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 56);
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB2F3BC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t MediaEngageCompleteEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent(0) + 56);
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageCompleteEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageCompleteEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for MediaEngageCompleteEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = *MEMORY[0x263F24D30];
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v8, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v8, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v8, v25);
}

uint64_t MediaEngageCompleteEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t MediaEngageCompleteEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MediaEngageCompleteEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52B70);
}

uint64_t MediaEngageCompleteEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 24));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t MediaEngageCompleteEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 32));
  char v4 = *v3;
  uint64_t v6 = *((void *)v3 + 1);
  uint64_t v5 = *((void *)v3 + 2);
  int v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 28) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 36));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 40));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;

  return sub_20A9F9290(v4, v5);
}

uint64_t MediaEngageCompleteEvent.Model.mediaEngagementCompletedData.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  *a1 = *(void *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t MediaEngageCompleteEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 48));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageCompleteEvent.Model(0) + 52));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageCompleteEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 56));
  return result;
}

__n128 MediaEngageCompleteEvent.Model.init(eventData:newsArticleData:groupData:feedData:mediaData:viewData:anfComponentData:mediaEngagementCompletedData:issueData:channelData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, __n128 *a11, char *a12)
{
  long long v35 = *a2;
  uint64_t v15 = *((void *)a2 + 2);
  uint64_t v14 = *((void *)a2 + 3);
  char v16 = *((unsigned char *)a2 + 32);
  uint64_t v34 = *((void *)a2 + 5);
  char v33 = *((unsigned char *)a2 + 48);
  uint64_t v17 = *((void *)a2 + 7);
  char v18 = *((unsigned char *)a2 + 64);
  char v19 = *((unsigned char *)a2 + 65);
  char v20 = *((unsigned char *)a2 + 66);
  char v21 = *((unsigned char *)a2 + 67);
  long long v38 = a3[1];
  long long v39 = *a3;
  uint64_t v36 = *((void *)a3 + 5);
  uint64_t v37 = *((void *)a3 + 4);
  long long v41 = *a4;
  uint64_t v40 = *((void *)a4 + 2);
  uint64_t v45 = *((void *)a5 + 1);
  uint64_t v44 = *((void *)a5 + 2);
  int v43 = *((_DWORD *)a5 + 6);
  char v42 = a5[28];
  uint64_t v49 = *a6;
  uint64_t v48 = a6[1];
  char v46 = *a5;
  __int16 v47 = *((_WORD *)a6 + 8);
  uint64_t v50 = a7[1];
  uint64_t v51 = *a7;
  uint64_t v54 = *a10;
  uint64_t v52 = *a8;
  uint64_t v53 = a10[1];
  __n128 v59 = *a11;
  unint64_t v57 = a11[1].n128_u64[1];
  unint64_t v58 = a11[1].n128_u64[0];
  unsigned __int8 v55 = a11[2].n128_u8[1];
  unsigned __int8 v56 = a11[2].n128_u8[0];
  char v60 = *a12;
  uint64_t v22 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a9, a1, v22);
  uint64_t v23 = (int *)type metadata accessor for MediaEngageCompleteEvent.Model(0);
  uint64_t v24 = a9 + v23[5];
  *(void *)(v24 + 16) = v15;
  *(void *)(v24 + 24) = v14;
  *(unsigned char *)(v24 + 32) = v16;
  *(_OWORD *)uint64_t v24 = v35;
  *(void *)(v24 + 40) = v34;
  *(unsigned char *)(v24 + 48) = v33;
  *(void *)(v24 + 56) = v17;
  *(unsigned char *)(v24 + 64) = v18;
  *(unsigned char *)(v24 + 65) = v19;
  *(unsigned char *)(v24 + 66) = v20;
  *(unsigned char *)(v24 + 67) = v21;
  uint64_t v25 = a9 + v23[6];
  *(_OWORD *)uint64_t v25 = v39;
  *(_OWORD *)(v25 + 16) = v38;
  *(void *)(v25 + 32) = v37;
  *(void *)(v25 + 40) = v36;
  uint64_t v26 = a9 + v23[7];
  *(_OWORD *)uint64_t v26 = v41;
  *(void *)(v26 + 16) = v40;
  uint64_t v27 = a9 + v23[8];
  *(unsigned char *)uint64_t v27 = v46;
  *(void *)(v27 + 8) = v45;
  *(void *)(v27 + 16) = v44;
  *(_DWORD *)(v27 + 24) = v43;
  *(unsigned char *)(v27 + 28) = v42;
  uint64_t v28 = a9 + v23[9];
  *(void *)uint64_t v28 = v49;
  *(void *)(v28 + 8) = v48;
  *(_WORD *)(v28 + 16) = v47;
  uint64_t v29 = (void *)(a9 + v23[10]);
  *uint64_t v29 = v51;
  v29[1] = v50;
  *(void *)(a9 + v23[11]) = v52;
  char v30 = (void *)(a9 + v23[12]);
  *char v30 = v54;
  v30[1] = v53;
  char v31 = (__n128 *)(a9 + v23[13]);
  __n128 result = v59;
  *char v31 = v59;
  v31[1].n128_u64[0] = v58;
  v31[1].n128_u64[1] = v57;
  v31[2].n128_u8[0] = v56;
  v31[2].n128_u8[1] = v55;
  *(unsigned char *)(a9 + v23[14]) = v60;
  return result;
}

uint64_t sub_20AB300C8(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 2:
      uint64_t result = 0x74614470756F7267;
      break;
    case 3:
      unsigned int v3 = 1684366694;
      goto LABEL_7;
    case 4:
      uint64_t result = 0x746144616964656DLL;
      break;
    case 5:
      unsigned int v3 = 2003134838;
LABEL_7:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 6:
      uint64_t result = 0xD000000000000010;
      break;
    case 7:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 8:
      uint64_t result = 0x7461446575737369;
      break;
    case 9:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 10:
      uint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB30230()
{
  return sub_20AB300C8(*v0);
}

uint64_t sub_20AB30238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB35C60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB30260(uint64_t a1)
{
  unint64_t v2 = sub_20AB307B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB3029C(uint64_t a1)
{
  unint64_t v2 = sub_20AB307B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MediaEngageCompleteEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB31150(0, &qword_267656D38, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v40 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB307B4();
  sub_20AB86DC0();
  LOBYTE(v42) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for MediaEngageCompleteEvent.Model(0);
    uint64_t v11 = (long long *)(v3 + v10[5]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v42 = v12;
    *(void *)&long long v43 = v13;
    *((void *)&v43 + 1) = v14;
    LOBYTE(v44) = v15;
    *((void *)&v44 + 1) = v16;
    char v45 = v17;
    uint64_t v46 = v18;
    char v47 = v19;
    char v48 = v20;
    char v49 = v21;
    char v50 = (char)v11;
    char v41 = 1;
    sub_20A97A1AC();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[6]);
    long long v23 = v22[1];
    long long v42 = *v22;
    long long v43 = v23;
    long long v44 = v22[2];
    char v41 = 2;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v24 = (long long *)(v3 + v10[7]);
    uint64_t v25 = *((void *)v24 + 2);
    long long v42 = *v24;
    *(void *)&long long v43 = v25;
    char v41 = 3;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v26 = (char *)(v3 + v10[8]);
    char v27 = *v26;
    uint64_t v28 = *((void *)v26 + 1);
    uint64_t v29 = *((void *)v26 + 2);
    int v30 = *((_DWORD *)v26 + 6);
    LOBYTE(v26) = v26[28];
    LOBYTE(v42) = v27;
    *((void *)&v42 + 1) = v28;
    *(void *)&long long v43 = v29;
    DWORD2(v43) = v30;
    BYTE12(v43) = (_BYTE)v26;
    char v41 = 4;
    sub_20A9F7CFC();
    sub_20AB86C50();
    char v31 = (uint64_t *)(v3 + v10[9]);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 8);
    *(void *)&long long v42 = v32;
    *((void *)&v42 + 1) = v33;
    LOWORD(v43) = (_WORD)v31;
    char v41 = 5;
    sub_20A986C14();
    sub_20AB86C50();
    long long v42 = *(_OWORD *)(v3 + v10[10]);
    char v41 = 6;
    sub_20A9AE6E4();
    sub_20AB86BE0();
    *(void *)&long long v42 = *(void *)(v3 + v10[11]);
    char v41 = 7;
    sub_20AA332A0();
    sub_20AB86C50();
    long long v42 = *(_OWORD *)(v3 + v10[12]);
    char v41 = 8;
    sub_20A9870B4();
    sub_20AB86BE0();
    uint64_t v34 = (long long *)(v3 + v10[13]);
    long long v35 = *v34;
    uint64_t v36 = *((void *)v34 + 2);
    uint64_t v37 = *((void *)v34 + 3);
    char v38 = *((unsigned char *)v34 + 32);
    LOBYTE(v34) = *((unsigned char *)v34 + 33);
    long long v42 = v35;
    *(void *)&long long v43 = v36;
    *((void *)&v43 + 1) = v37;
    LOBYTE(v44) = v38;
    BYTE1(v44) = (_BYTE)v34;
    char v41 = 9;
    sub_20A9862D4();
    sub_20AB86C50();
    LOBYTE(v42) = *(unsigned char *)(v3 + v10[14]);
    char v41 = 10;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB307B4()
{
  unint64_t result = qword_267656D40;
  if (!qword_267656D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656D40);
  }
  return result;
}

uint64_t MediaEngageCompleteEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v50 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB31150(0, &qword_267656D48, MEMORY[0x263F8E040]);
  uint64_t v51 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v48 - v10;
  uint64_t v54 = (int *)type metadata accessor for MediaEngageCompleteEvent.Model(0);
  MEMORY[0x270FA5388](v54);
  unsigned __int8 v55 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_20AB307B4();
  sub_20AB86DA0();
  uint64_t v49 = v5;
  if (v2)
  {
    uint64_t v53 = v2;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    LODWORD(v51) = 0;
  }
  else
  {
    uint64_t v48 = a2;
    uint64_t v14 = v9;
    LOBYTE(v56) = 0;
    sub_20A985F3C(&qword_26AC4E0C8);
    sub_20AB86B80();
    uint64_t v16 = v55;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v55, v7, v5);
    char v65 = 1;
    sub_20A97A154();
    sub_20AB86B80();
    long long v17 = v57;
    char v18 = v58;
    uint64_t v19 = *((void *)&v58 + 1);
    char v20 = v59;
    uint64_t v21 = v60;
    char v22 = v61;
    char v23 = v62;
    char v24 = v63;
    char v25 = v64;
    uint64_t v26 = v54;
    char v27 = &v16[v54[5]];
    *(_OWORD *)char v27 = v56;
    *((_OWORD *)v27 + 1) = v17;
    v27[32] = v18;
    *((void *)v27 + 5) = v19;
    v27[48] = v20;
    *((void *)v27 + 7) = v21;
    v27[64] = v22;
    v27[65] = v23;
    v27[66] = v24;
    v27[67] = v25;
    char v65 = 2;
    sub_20A9864D0();
    sub_20AB86B10();
    uint64_t v28 = &v16[v26[6]];
    long long v29 = v57;
    *(_OWORD *)uint64_t v28 = v56;
    *((_OWORD *)v28 + 1) = v29;
    *((_OWORD *)v28 + 2) = v58;
    char v65 = 3;
    sub_20A986720();
    sub_20AB86B10();
    uint64_t v30 = v57;
    char v31 = &v16[v26[7]];
    *(_OWORD *)char v31 = v56;
    *((void *)v31 + 2) = v30;
    char v65 = 4;
    sub_20A9F7CA8();
    sub_20AB86B80();
    uint64_t v32 = *((void *)&v56 + 1);
    uint64_t v33 = v57;
    int v34 = DWORD2(v57);
    char v35 = BYTE12(v57);
    uint64_t v36 = &v16[v26[8]];
    char *v36 = v56;
    *((void *)v36 + 1) = v32;
    *((void *)v36 + 2) = v33;
    *((_DWORD *)v36 + 6) = v34;
    v36[28] = v35;
    char v65 = 5;
    sub_20A986BC0();
    sub_20AB86B80();
    uint64_t v37 = *((void *)&v56 + 1);
    __int16 v38 = v57;
    long long v39 = &v16[v26[9]];
    *(void *)long long v39 = v56;
    *((void *)v39 + 1) = v37;
    *((_WORD *)v39 + 8) = v38;
    char v65 = 6;
    sub_20A9AE68C();
    sub_20AB86B10();
    *(_OWORD *)&v16[v26[10]] = v56;
    char v65 = 7;
    sub_20AA33248();
    sub_20AB86B80();
    *(void *)&v16[v26[11]] = v56;
    char v65 = 8;
    sub_20A987060();
    sub_20AB86B10();
    *(_OWORD *)&v16[v26[12]] = v56;
    char v65 = 9;
    sub_20A986280();
    sub_20AB86B80();
    uint64_t v53 = 0;
    long long v40 = v57;
    char v41 = v58;
    char v42 = BYTE1(v58);
    long long v43 = &v55[v54[13]];
    *(_OWORD *)long long v43 = v56;
    *((_OWORD *)v43 + 1) = v40;
    v43[32] = v41;
    v43[33] = v42;
    char v65 = 10;
    sub_20A98757C();
    uint64_t v44 = v53;
    sub_20AB86B10();
    uint64_t v53 = v44;
    if (v44)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v51);
      LODWORD(v51) = 1;
      uint64_t v46 = v54;
      char v45 = v55;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v45, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A98937C(*(void *)&v45[v46[6]], *(void *)&v45[v46[6] + 8], *(void *)&v45[v46[6] + 16]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A9FA9C8(*(void *)&v45[v46[10]], *(void *)&v45[v46[10] + 8]);
      uint64_t result = swift_bridgeObjectRelease();
      if (v51)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v51);
      uint64_t v47 = (uint64_t)v55;
      v55[v54[14]] = v56;
      sub_20AB311B4(v47, v48);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      return sub_20AB31218(v47);
    }
  }
  return result;
}

void sub_20AB31150(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB307B4();
    unint64_t v7 = a3(a1, &type metadata for MediaEngageCompleteEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB311B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB31218(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaEngageCompleteEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB31274@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngageCompleteEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB3128C(void *a1)
{
  return MediaEngageCompleteEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB312A4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536F0, MEMORY[0x263F24D18], (uint64_t)qword_267656CF0, a1);
}

uint64_t sub_20AB312DC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676536F8, MEMORY[0x263F24DD8], (uint64_t)qword_267656D08, a1);
}

uint64_t sub_20AB31314@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653700, MEMORY[0x263F24DE8], (uint64_t)qword_267656D20, a1);
}

uint64_t sub_20AB3134C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = *MEMORY[0x263F24D30];
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v9, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v9, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  char v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);

  return v27(v25, v9, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaEngageCompleteEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    int v34 = (char *)a2 + v32;
    sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    __int16 v38 = (char *)a2 + v36;
    sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    char v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for MediaEngageCompleteEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t initializeWithCopy for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB33994);
}

uint64_t sub_20AB33994(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for MediaEngageCompleteEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB33F84);
}

uint64_t sub_20AB33F84(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  sub_20AB2F3BC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  sub_20AB2F3BC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  sub_20AB2F3BC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

void sub_20AB3456C()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB2F3BC(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    if (v1 <= 0x3F)
    {
      sub_20AB2F3BC(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
      if (v2 <= 0x3F)
      {
        sub_20AB2F3BC(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
        if (v3 <= 0x3F)
        {
          sub_20AB2F3BC(319, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
          if (v4 <= 0x3F)
          {
            sub_20AB2F3BC(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
            if (v5 <= 0x3F)
            {
              sub_20AB2F3BC(319, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
              if (v6 <= 0x3F)
              {
                sub_20AB2F3BC(319, &qword_26AC4E678, (void (*)(void))sub_20AA33248, (void (*)(void))sub_20AA332A0);
                if (v7 <= 0x3F)
                {
                  sub_20AB2F3BC(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                  if (v8 <= 0x3F)
                  {
                    sub_20AB2F3BC(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
                    if (v9 <= 0x3F)
                    {
                      sub_20AB2F3BC(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
                      if (v10 <= 0x3F) {
                        swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for MediaEngageCompleteEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)unint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    v10[32] = v11[32];
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    *((void *)v10 + 7) = *((void *)v11 + 7);
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    uint64_t v14 = (char *)a1 + v9;
    uint64_t v15 = (char *)a2 + v9;
    uint64_t v16 = *(void *)((char *)a2 + v9 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16)
    {
      *uint64_t v14 = *v15;
      *((void *)v14 + 1) = *((void *)v15 + 1);
      *((void *)v14 + 2) = v16;
      *((void *)v14 + 3) = *((void *)v15 + 3);
      uint64_t v17 = *((void *)v15 + 5);
      *((void *)v14 + 4) = *((void *)v15 + 4);
      *((void *)v14 + 5) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v19 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v19;
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    *uint64_t v22 = *v23;
    uint64_t v24 = *((void *)v23 + 2);
    *((void *)v22 + 1) = *((void *)v23 + 1);
    *((void *)v22 + 2) = v24;
    uint64_t v25 = (char *)a1 + v21;
    uint64_t v26 = (char *)a2 + v21;
    *uint64_t v25 = *v26;
    uint64_t v27 = *((void *)v26 + 2);
    *((void *)v25 + 1) = *((void *)v26 + 1);
    *((void *)v25 + 2) = v27;
    *((_DWORD *)v25 + 6) = *((_DWORD *)v26 + 6);
    v25[28] = v26[28];
    uint64_t v28 = a3[9];
    uint64_t v29 = a3[10];
    uint64_t v30 = (char *)a1 + v28;
    uint64_t v31 = (char *)a2 + v28;
    v30[16] = v31[16];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    v30[17] = v31[17];
    uint64_t v33 = (char *)a1 + v29;
    uint64_t v34 = (_OWORD *)((char *)a2 + v29);
    uint64_t v35 = *(void *)((char *)a2 + v29 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35 == 1)
    {
      *(_OWORD *)uint64_t v33 = *v34;
    }
    else
    {
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = v35;
      swift_bridgeObjectRetain();
    }
    uint64_t v36 = a3[12];
    *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    uint64_t v37 = (void *)((char *)a1 + v36);
    uint64_t v38 = (void *)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = a3[13];
    uint64_t v41 = a3[14];
    uint64_t v42 = (char *)a1 + v40;
    uint64_t v43 = (char *)a2 + v40;
    uint64_t v44 = *((void *)v43 + 1);
    *(void *)uint64_t v42 = *(void *)v43;
    *((void *)v42 + 1) = v44;
    uint64_t v45 = *((void *)v43 + 3);
    *((void *)v42 + 2) = *((void *)v43 + 2);
    *((void *)v42 + 3) = v45;
    v42[32] = v43[32];
    v42[33] = v43[33];
    *((unsigned char *)a1 + v41) = *((unsigned char *)a2 + v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 24) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 40) + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  uint64_t v15 = *(void *)(a2 + v8 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
    *(void *)(v13 + 8) = *(void *)(v14 + 8);
    *(void *)(v13 + 16) = v15;
    *(void *)(v13 + 24) = *(void *)(v14 + 24);
    uint64_t v16 = *(void *)(v14 + 40);
    *(void *)(v13 + 32) = *(void *)(v14 + 32);
    *(void *)(v13 + 40) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    *(_OWORD *)(v13 + 16) = v17;
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  uint64_t v22 = *(void *)(v21 + 16);
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(void *)(v20 + 16) = v22;
  uint64_t v23 = a1 + v19;
  uint64_t v24 = a2 + v19;
  *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
  uint64_t v25 = *(void *)(v24 + 16);
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  *(void *)(v23 + 16) = v25;
  *(_DWORD *)(v23 + 24) = *(_DWORD *)(v24 + 24);
  *(unsigned char *)(v23 + 28) = *(unsigned char *)(v24 + 28);
  uint64_t v26 = a3[9];
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(unsigned char *)(v28 + 16) = *(unsigned char *)(v29 + 16);
  uint64_t v30 = *(void *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  *(void *)(v28 + 8) = v30;
  *(unsigned char *)(v28 + 17) = *(unsigned char *)(v29 + 17);
  uint64_t v31 = a1 + v27;
  uint64_t v32 = (_OWORD *)(a2 + v27);
  uint64_t v33 = *(void *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v33 == 1)
  {
    *(_OWORD *)uint64_t v31 = *v32;
  }
  else
  {
    *(void *)uint64_t v31 = *(void *)v32;
    *(void *)(v31 + 8) = v33;
    swift_bridgeObjectRetain();
  }
  uint64_t v34 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  uint64_t v37 = v36[1];
  void *v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = a3[13];
  uint64_t v39 = a3[14];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  uint64_t v42 = *(void *)(v41 + 8);
  *(void *)uint64_t v40 = *(void *)v41;
  *(void *)(v40 + 8) = v42;
  uint64_t v43 = *(void *)(v41 + 24);
  *(void *)(v40 + 16) = *(void *)(v41 + 16);
  *(void *)(v40 + 24) = v43;
  *(unsigned char *)(v40 + 32) = *(unsigned char *)(v41 + 32);
  *(unsigned char *)(v40 + 33) = *(unsigned char *)(v41 + 33);
  *(unsigned char *)(a1 + v39) = *(unsigned char *)(a2 + v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v10 = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 40) = v10;
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (long long *)(a2 + v11);
  uint64_t v14 = *(void *)(a1 + v11 + 16);
  uint64_t v15 = *(void *)(a2 + v11 + 16);
  if (v14)
  {
    if (v15)
    {
      *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
      *(void *)(v12 + 8) = *((void *)v13 + 1);
      *(void *)(v12 + 16) = *((void *)v13 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
      *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
      *(void *)(v12 + 32) = *((void *)v13 + 4);
      *(void *)(v12 + 40) = *((void *)v13 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v12);
      long long v17 = v13[1];
      long long v16 = v13[2];
      *(_OWORD *)uint64_t v12 = *v13;
      *(_OWORD *)(v12 + 16) = v17;
      *(_OWORD *)(v12 + 32) = v16;
    }
  }
  else if (v15)
  {
    *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
    *(void *)(v12 + 8) = *((void *)v13 + 1);
    *(void *)(v12 + 16) = *((void *)v13 + 2);
    *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
    *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
    *(void *)(v12 + 32) = *((void *)v13 + 4);
    *(void *)(v12 + 40) = *((void *)v13 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *v13;
    long long v19 = v13[2];
    *(_OWORD *)(v12 + 16) = v13[1];
    *(_OWORD *)(v12 + 32) = v19;
    *(_OWORD *)uint64_t v12 = v18;
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)(a2 + v23);
  *(void *)(v24 + 8) = *(void *)(a2 + v23 + 8);
  *(void *)(v24 + 16) = *(void *)(a2 + v23 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v26 = *(_DWORD *)(v25 + 24);
  *(unsigned char *)(v24 + 28) = *(unsigned char *)(v25 + 28);
  *(_DWORD *)(v24 + 24) = v26;
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(void *)uint64_t v28 = *(void *)(a2 + v27);
  *(void *)(v28 + 8) = *(void *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 16) = *(unsigned char *)(v29 + 16);
  *(unsigned char *)(v28 + 17) = *(unsigned char *)(v29 + 17);
  uint64_t v30 = a3[10];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  uint64_t v33 = *(void *)(a1 + v30 + 8);
  uint64_t v34 = *(void *)(a2 + v30 + 8);
  if (v33 != 1)
  {
    if (v34 != 1)
    {
      *uint64_t v31 = *v32;
      v31[1] = v32[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_20A9FF03C((uint64_t)v31);
    goto LABEL_13;
  }
  if (v34 == 1)
  {
LABEL_13:
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    goto LABEL_15;
  }
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
LABEL_15:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  void *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[13];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  *(void *)uint64_t v39 = *(void *)(a2 + v38);
  *(void *)(v39 + 8) = *(void *)(a2 + v38 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v39 + 16) = *(void *)(v40 + 16);
  *(void *)(v39 + 24) = *(void *)(v40 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v39 + 32) = *(unsigned char *)(v40 + 32);
  *(unsigned char *)(v39 + 33) = *(unsigned char *)(v40 + 33);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t initializeWithTake for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  uint64_t v13 = (_OWORD *)(a1 + v8);
  uint64_t v14 = (long long *)(a2 + v8);
  long long v15 = v14[2];
  long long v16 = *v14;
  v13[1] = v14[1];
  v13[2] = v15;
  *uint64_t v13 = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  uint64_t v21 = (_OWORD *)(a1 + v18);
  uint64_t v22 = (long long *)(a2 + v18);
  long long v23 = *v22;
  *(_OWORD *)((char *)v21 + 13) = *(long long *)((char *)v22 + 13);
  *uint64_t v21 = v23;
  uint64_t v24 = a3[9];
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_WORD *)(v26 + 16) = *(_WORD *)(v27 + 16);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  uint64_t v28 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  uint64_t v29 = a3[13];
  uint64_t v30 = a3[14];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  long long v33 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v33;
  *(_WORD *)(v31 + 32) = *(_WORD *)(v32 + 32);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  return a1;
}

uint64_t assignWithTake for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  if (*(void *)(a1 + v12 + 16))
  {
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
      *(void *)(v13 + 8) = *(void *)(v14 + 8);
      *(void *)(v13 + 16) = v15;
      swift_bridgeObjectRelease();
      *(void *)(v13 + 24) = *(void *)(v14 + 24);
      uint64_t v16 = *(void *)(v14 + 40);
      *(void *)(v13 + 32) = *(void *)(v14 + 32);
      *(void *)(v13 + 40) = v16;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A98D5B8(v13);
  }
  long long v17 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v17;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
LABEL_6:
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  uint64_t v21 = *(void *)(v20 + 16);
  *(void *)(v19 + 8) = v22;
  *(void *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)(a2 + v23);
  uint64_t v26 = *(void *)(a2 + v23 + 16);
  *(void *)(v24 + 8) = *(void *)(a2 + v23 + 8);
  *(void *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v24 + 24) = *(_DWORD *)(v25 + 24);
  *(unsigned char *)(v24 + 28) = *(unsigned char *)(v25 + 28);
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(void *)(a2 + v27 + 8);
  *(void *)uint64_t v28 = *(void *)(a2 + v27);
  *(void *)(v28 + 8) = v30;
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 16) = *(_WORD *)(v29 + 16);
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)(a1 + v31);
  long long v33 = (void *)(a2 + v31);
  if (*(void *)(a1 + v31 + 8) != 1)
  {
    uint64_t v34 = v33[1];
    if (v34 != 1)
    {
      *uint64_t v32 = *v33;
      v32[1] = v34;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A9FF03C((uint64_t)v32);
  }
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
LABEL_11:
  uint64_t v35 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  void *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[13];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = *(void *)(a2 + v40 + 8);
  *(void *)uint64_t v41 = *(void *)(a2 + v40);
  *(void *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(v42 + 24);
  *(void *)(v41 + 16) = *(void *)(v42 + 16);
  *(void *)(v41 + 24) = v44;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v41 + 32) = *(unsigned char *)(v42 + 32);
  *(unsigned char *)(v41 + 33) = *(unsigned char *)(v42 + 33);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB357C8);
}

uint64_t sub_20AB357C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for MediaEngageCompleteEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB358A0);
}

uint64_t sub_20AB358A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AB35960()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MediaEngageCompleteEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB35B20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngageCompleteEvent.Model.CodingKeys()
{
  return &type metadata for MediaEngageCompleteEvent.Model.CodingKeys;
}

unint64_t sub_20AB35B5C()
{
  unint64_t result = qword_267656D50;
  if (!qword_267656D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656D50);
  }
  return result;
}

unint64_t sub_20AB35BB4()
{
  unint64_t result = qword_267656D58;
  if (!qword_267656D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656D58);
  }
  return result;
}

unint64_t sub_20AB35C0C()
{
  unint64_t result = qword_267656D60;
  if (!qword_267656D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656D60);
  }
  return result;
}

uint64_t sub_20AB35C60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA7AC0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000020ABA9770 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t static MediaEngagementData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t MediaEngagementData.mediaTimePlayed.getter()
{
  return *(void *)v0;
}

uint64_t MediaEngagementData.mediaTimePlayed.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*MediaEngagementData.mediaTimePlayed.modify())()
{
  return nullsub_1;
}

void MediaEngagementData.mediaUserAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

unsigned char *MediaEngagementData.mediaUserAction.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*MediaEngagementData.mediaUserAction.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngagementData.position.getter()
{
  return *(unsigned int *)(v0 + 12);
}

uint64_t MediaEngagementData.position.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 12) = result;
  return result;
}

uint64_t (*MediaEngagementData.position.modify())()
{
  return nullsub_1;
}

void MediaEngagementData.mediaPlayMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *MediaEngagementData.mediaPlayMethod.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*MediaEngagementData.mediaPlayMethod.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngagementData.init(mediaTimePlayed:mediaUserAction:position:mediaPlayMethod:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, int a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a2;
  char v6 = *a4;
  *(void *)a5 = result;
  *(unsigned char *)(a5 + 8) = v5;
  *(_DWORD *)(a5 + 12) = a3;
  *(unsigned char *)(a5 + 16) = v6;
  return result;
}

uint64_t sub_20AB36218()
{
  uint64_t result = 0x6D6954616964656DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x657355616964656DLL;
      break;
    case 2:
      uint64_t result = 0x6E6F697469736F70;
      break;
    case 3:
      uint64_t result = 0x616C50616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB362CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB36B68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB362F4(uint64_t a1)
{
  unint64_t v2 = sub_20AB3657C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB36330(uint64_t a1)
{
  unint64_t v2 = sub_20AB3657C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MediaEngagementData.encode(to:)(void *a1)
{
  sub_20AB36818(0, &qword_267656D68, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v12 - v7;
  int v9 = *(unsigned __int8 *)(v1 + 8);
  int v13 = *(_DWORD *)(v1 + 12);
  int v14 = v9;
  HIDWORD(v12) = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3657C();
  sub_20AB86DC0();
  char v20 = 0;
  sub_20AB86C70();
  if (!v2)
  {
    char v10 = BYTE4(v12);
    char v19 = v14;
    char v18 = 1;
    sub_20A9AAEC8();
    sub_20AB86C50();
    char v17 = 2;
    sub_20AB86C60();
    char v16 = v10;
    char v15 = 3;
    sub_20A9AAF1C();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AB3657C()
{
  unint64_t result = qword_267656D70;
  if (!qword_267656D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656D70);
  }
  return result;
}

uint64_t MediaEngagementData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AB36818(0, &qword_267656D78, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3657C();
  sub_20AB86DA0();
  if (!v2)
  {
    char v22 = 0;
    uint64_t v10 = sub_20AB86BA0();
    char v20 = 1;
    sub_20A9AB364();
    sub_20AB86B80();
    int v11 = v21;
    char v19 = 2;
    int v15 = sub_20AB86B90();
    int v16 = v11;
    char v17 = 3;
    sub_20A9AB3B8();
    sub_20AB86B10();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v13 = v18;
    *(void *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v16;
    *(_DWORD *)(a2 + 12) = v15;
    *(unsigned char *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB36818(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB3657C();
    unint64_t v7 = a3(a1, &type metadata for MediaEngagementData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB36884@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngagementData.init(from:)(a1, a2);
}

uint64_t sub_20AB3689C(void *a1)
{
  return MediaEngagementData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for MediaEngagementData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    int v3 = 3;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 16);
  }
  int v4 = v3 - 4;
  if (*(unsigned __int8 *)(a1 + 16) < 3u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaEngagementData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementData()
{
  return &type metadata for MediaEngagementData;
}

unsigned char *storeEnumTagSinglePayload for MediaEngagementData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB36A28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngagementData.CodingKeys()
{
  return &type metadata for MediaEngagementData.CodingKeys;
}

unint64_t sub_20AB36A64()
{
  unint64_t result = qword_267656D80;
  if (!qword_267656D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656D80);
  }
  return result;
}

unint64_t sub_20AB36ABC()
{
  unint64_t result = qword_267656D88;
  if (!qword_267656D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656D88);
  }
  return result;
}

unint64_t sub_20AB36B14()
{
  unint64_t result = qword_267656D90;
  if (!qword_267656D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656D90);
  }
  return result;
}

uint64_t sub_20AB36B68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D6954616964656DLL && a2 == 0xEF646579616C5065;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657355616964656DLL && a2 == 0xEF6E6F6974634172 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616C50616964656DLL && a2 == 0xEF646F6874654D79)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t ActionMethod.init(_:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_20AB36F8C();
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20AB864C0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    sub_20AB37040(a1, (uint64_t)v6);
    int v9 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v6, v7);
    if (v9 != *MEMORY[0x263F7DA78])
    {
      if (v9 == *MEMORY[0x263F7DA40])
      {
        char v10 = 3;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x263F7DA38])
      {
        char v10 = 2;
        goto LABEL_4;
      }
      if (v9 == *MEMORY[0x263F7DA60] || v9 == *MEMORY[0x263F7DA70] || v9 == *MEMORY[0x263F7DA68])
      {
        char v10 = 1;
        goto LABEL_4;
      }
      if (v9 != *MEMORY[0x263F7DA50]
        && v9 != *MEMORY[0x263F7DA58]
        && v9 != *MEMORY[0x263F7DA30]
        && v9 != *MEMORY[0x263F7DA48])
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
      }
    }
  }
  char v10 = 0;
LABEL_4:
  uint64_t result = sub_20AB36FE4(a1);
  *a2 = v10;
  return result;
}

void sub_20AB36F8C()
{
  if (!qword_267656D98)
  {
    sub_20AB864C0();
    unint64_t v0 = sub_20AB868D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267656D98);
    }
  }
}

uint64_t sub_20AB36FE4(uint64_t a1)
{
  sub_20AB36F8C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB37040(uint64_t a1, uint64_t a2)
{
  sub_20AB36F8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

StocksAnalytics::ContentEnvironmentData __swiftcall ContentEnvironmentData.init(contentEnvironment:)(StocksAnalytics::ContentEnvironmentData contentEnvironment)
{
  *uint64_t v1 = *(unsigned char *)contentEnvironment.contentEnvironment;
  return contentEnvironment;
}

uint64_t static ContentEnvironmentData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void ContentEnvironmentData.contentEnvironment.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ContentEnvironmentData.contentEnvironment.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*ContentEnvironmentData.contentEnvironment.modify())()
{
  return nullsub_1;
}

unint64_t sub_20AB370F0()
{
  return 0xD000000000000012;
}

uint64_t sub_20AB3710C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB3791C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AB37138(uint64_t a1)
{
  unint64_t v2 = sub_20AB3730C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB37174(uint64_t a1)
{
  unint64_t v2 = sub_20AB3730C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ContentEnvironmentData.encode(to:)(void *a1)
{
  sub_20AB3754C(0, &qword_26AC518F8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3730C();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AB37360();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB3730C()
{
  unint64_t result = qword_26AC50828;
  if (!qword_26AC50828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50828);
  }
  return result;
}

unint64_t sub_20AB37360()
{
  unint64_t result = qword_26AC4FAB0;
  if (!qword_26AC4FAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FAB0);
  }
  return result;
}

uint64_t ContentEnvironmentData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AB3754C(0, &qword_26AC517B8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3730C();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AB375B0();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB3754C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB3730C();
    unint64_t v7 = a3(a1, &type metadata for ContentEnvironmentData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB375B0()
{
  unint64_t result = qword_26AC4FAC0;
  if (!qword_26AC4FAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FAC0);
  }
  return result;
}

uint64_t sub_20AB3760C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ContentEnvironmentData.init(from:)(a1, a2);
}

uint64_t sub_20AB37624(void *a1)
{
  return ContentEnvironmentData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for ContentEnvironmentData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB37708);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentEnvironmentData()
{
  return &type metadata for ContentEnvironmentData;
}

unsigned char *storeEnumTagSinglePayload for ContentEnvironmentData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB377DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentEnvironmentData.CodingKeys()
{
  return &type metadata for ContentEnvironmentData.CodingKeys;
}

unint64_t sub_20AB37818()
{
  unint64_t result = qword_267656DA0;
  if (!qword_267656DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656DA0);
  }
  return result;
}

unint64_t sub_20AB37870()
{
  unint64_t result = qword_26AC50838;
  if (!qword_26AC50838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50838);
  }
  return result;
}

unint64_t sub_20AB378C8()
{
  unint64_t result = qword_26AC50830;
  if (!qword_26AC50830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50830);
  }
  return result;
}

uint64_t sub_20AB3791C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA9790)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

StocksAnalytics::AudioEngagementOrigin_optional __swiftcall AudioEngagementOrigin.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

uint64_t AudioEngagementOrigin.rawValue.getter()
{
  uint64_t v1 = 0x656C6369747261;
  if (*v0 != 1) {
    uint64_t v1 = 1684366694;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AB37A54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA360AC(*a1, *a2);
}

unint64_t sub_20AB37A64()
{
  unint64_t result = qword_267656DA8;
  if (!qword_267656DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656DA8);
  }
  return result;
}

uint64_t sub_20AB37AB8()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB37B54()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB37BDC()
{
  return sub_20AB86D80();
}

StocksAnalytics::AudioEngagementOrigin_optional sub_20AB37C74(Swift::String *a1)
{
  return AudioEngagementOrigin.init(rawValue:)(*a1);
}

void sub_20AB37C80(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x656C6369747261;
  if (v2 != 1)
  {
    uint64_t v5 = 1684366694;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AB37CD8()
{
  return sub_20AB86750();
}

uint64_t sub_20AB37D38()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for AudioEngagementOrigin(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB37E54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementOrigin()
{
  return &type metadata for AudioEngagementOrigin;
}

unint64_t sub_20AB37E8C()
{
  unint64_t result = qword_267656DB0;
  if (!qword_267656DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656DB0);
  }
  return result;
}

uint64_t sub_20AB37EE0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656DB8, MEMORY[0x263F24D10]);
}

uint64_t static ConsentScreenViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653708, MEMORY[0x263F24D18], (uint64_t)qword_267656DB8, a1);
}

uint64_t static ConsentScreenViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB37F48(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656DD0, MEMORY[0x263F24DC8]);
}

uint64_t static ConsentScreenViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653710, MEMORY[0x263F24DD8], (uint64_t)qword_267656DD0, a1);
}

uint64_t sub_20AB37FA8()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656DE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656DE8);
  return sub_20AB85D30();
}

uint64_t static ConsentScreenViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653718, MEMORY[0x263F24DE8], (uint64_t)qword_267656DE8, a1);
}

uint64_t ConsentScreenViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ConsentScreenViewEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ConsentScreenViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ConsentScreenViewEvent.consentScreenActionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ConsentScreenViewEvent(0) + 20);
  sub_20AB38164();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ConsentScreenViewEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656E20);
}

void sub_20AB38164()
{
  if (!qword_267656E00)
  {
    sub_20A9C37D8();
    sub_20A9C3830();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267656E00);
    }
  }
}

uint64_t ConsentScreenViewEvent.consentScreenActionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ConsentScreenViewEvent(0) + 20);
  sub_20AB38164();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ConsentScreenViewEvent.consentScreenActionData.modify())()
{
  return nullsub_1;
}

uint64_t ConsentScreenViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for ConsentScreenViewEvent(0) + 20);
  sub_20AB38164();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t ConsentScreenViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ConsentScreenViewEvent.Model.consentScreenActionData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ConsentScreenViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ConsentScreenViewEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656E30);
}

uint64_t ConsentScreenViewEvent.Model.init(eventData:consentScreenActionData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for ConsentScreenViewEvent.Model(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_20AB38434()
{
  if (*v0) {
    return 0xD000000000000017;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AB38478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB39918(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB384A0(uint64_t a1)
{
  unint64_t v2 = sub_20AB386E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB384DC(uint64_t a1)
{
  unint64_t v2 = sub_20AB386E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ConsentScreenViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB38A88(0, &qword_267656E08, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB386E4();
  sub_20AB86DC0();
  v11[15] = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    v11[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for ConsentScreenViewEvent.Model(0) + 20));
    unsigned char v11[13] = 1;
    sub_20A9C3830();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB386E4()
{
  unint64_t result = qword_267656E10;
  if (!qword_267656E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656E10);
  }
  return result;
}

uint64_t ConsentScreenViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v23 = sub_20AB85FC0();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB38A88(0, &qword_267656E18, MEMORY[0x263F8E040]);
  uint64_t v24 = v6;
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for ConsentScreenViewEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB386E4();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v12 = v11;
  uint64_t v13 = v21;
  char v27 = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v23;
  sub_20AB86B80();
  int v15 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v19 = (uint64_t)v12;
  v15(v12, v5, v14);
  char v25 = 1;
  sub_20A9C37D8();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v24);
  uint64_t v17 = v19;
  uint64_t v16 = v20;
  *(unsigned char *)(v19 + *(int *)(v9 + 20)) = v26;
  sub_20AB38AEC(v17, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AB38B50(v17);
}

void sub_20AB38A88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB386E4();
    unint64_t v7 = a3(a1, &type metadata for ConsentScreenViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB38AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConsentScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB38B50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConsentScreenViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB38BAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ConsentScreenViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB38BC4(void *a1)
{
  return ConsentScreenViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB38BDC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653708, MEMORY[0x263F24D18], (uint64_t)qword_267656DB8, a1);
}

uint64_t sub_20AB38C14@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653710, MEMORY[0x263F24DD8], (uint64_t)qword_267656DD0, a1);
}

uint64_t sub_20AB38C4C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653718, MEMORY[0x263F24DE8], (uint64_t)qword_267656DE8, a1);
}

uint64_t sub_20AB38C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AB38164();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for ConsentScreenViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AB38164();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ConsentScreenViewEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AB38164();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB38164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB38164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB38164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB38164();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB391EC);
}

uint64_t sub_20AB391EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20AB38164();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ConsentScreenViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB392F8);
}

uint64_t sub_20AB392F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20AB38164();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_20AB393FC()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB38164();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for ConsentScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB394D8);
}

uint64_t sub_20AB394D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for ConsentScreenViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB395BC);
}

uint64_t sub_20AB395BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_20AB39678()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConsentScreenViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB397D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConsentScreenViewEvent.Model.CodingKeys()
{
  return &type metadata for ConsentScreenViewEvent.Model.CodingKeys;
}

unint64_t sub_20AB39814()
{
  unint64_t result = qword_267656E40;
  if (!qword_267656E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656E40);
  }
  return result;
}

unint64_t sub_20AB3986C()
{
  unint64_t result = qword_267656E48;
  if (!qword_267656E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656E48);
  }
  return result;
}

unint64_t sub_20AB398C4()
{
  unint64_t result = qword_267656E50;
  if (!qword_267656E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656E50);
  }
  return result;
}

uint64_t sub_20AB39918(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020ABA97B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

StocksAnalytics::Milestone_optional __swiftcall Milestone.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t Milestone.rawValue.getter()
{
  uint64_t result = 1869768058;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7234932;
      break;
    case 2:
      uint64_t result = 0x694679746E657774;
      break;
    case 3:
      uint64_t result = 0x7974666966;
      break;
    case 4:
      uint64_t result = 0x4679746E65766573;
      break;
    case 5:
      uint64_t result = 0x72646E7548656E6FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB39B38(unsigned __int8 *a1, char *a2)
{
  return sub_20AA3381C(*a1, *a2);
}

unint64_t sub_20AB39B48()
{
  unint64_t result = qword_267656E58;
  if (!qword_267656E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656E58);
  }
  return result;
}

uint64_t sub_20AB39B9C()
{
  return sub_20AB4D264();
}

uint64_t sub_20AB39BA4()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB39CA0()
{
  return sub_20AB4F3E4();
}

StocksAnalytics::Milestone_optional sub_20AB39CA8(Swift::String *a1)
{
  return Milestone.init(rawValue:)(*a1);
}

void sub_20AB39CB4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1869768058;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE300000000000000;
      uint64_t v3 = 7234932;
      goto LABEL_3;
    case 2:
      *a1 = 0x694679746E657774;
      a1[1] = 0xEA00000000006576;
      break;
    case 3:
      *a1 = 0x7974666966;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x4679746E65766573;
      a1[1] = 0xEB00000000657669;
      break;
    case 5:
      *a1 = 0x72646E7548656E6FLL;
      a1[1] = 0xEA00000000006465;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20AB39D90()
{
  return sub_20AB86750();
}

uint64_t sub_20AB39DF0()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for Milestone(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB39F0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Milestone()
{
  return &type metadata for Milestone;
}

unint64_t sub_20AB39F44()
{
  unint64_t result = qword_267656E60;
  if (!qword_267656E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656E60);
  }
  return result;
}

uint64_t static SearchData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t SearchData.searchString.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchData.searchString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SearchData.searchString.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SearchData __swiftcall SearchData.init(searchString:)(StocksAnalytics::SearchData searchString)
{
  *uint64_t v1 = searchString;
  return searchString;
}

uint64_t sub_20AB3A030()
{
  return 0x7453686372616573;
}

uint64_t sub_20AB3A050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7453686372616573 && a2 == 0xEC000000676E6972)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AB3A100(uint64_t a1)
{
  unint64_t v2 = sub_20AB3A2C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB3A13C(uint64_t a1)
{
  unint64_t v2 = sub_20AB3A2C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchData.encode(to:)(void *a1)
{
  sub_20AB3A49C(0, &qword_267656E68, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3A2C4();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AB3A2C4()
{
  unint64_t result = qword_267656E70;
  if (!qword_267656E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656E70);
  }
  return result;
}

uint64_t SearchData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AB3A49C(0, &qword_267656E78, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3A2C4();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86B40();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB3A49C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB3A2C4();
    unint64_t v7 = a3(a1, &type metadata for SearchData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB3A508@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SearchData.init(from:)(a1, a2);
}

uint64_t sub_20AB3A520(void *a1)
{
  sub_20AB3A49C(0, &qword_267656E68, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3A2C4();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for SearchData()
{
  return &type metadata for SearchData;
}

unsigned char *storeEnumTagSinglePayload for SearchData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB3A718);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchData.CodingKeys()
{
  return &type metadata for SearchData.CodingKeys;
}

unint64_t sub_20AB3A754()
{
  unint64_t result = qword_267656E80;
  if (!qword_267656E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656E80);
  }
  return result;
}

unint64_t sub_20AB3A7AC()
{
  unint64_t result = qword_267656E88;
  if (!qword_267656E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656E88);
  }
  return result;
}

unint64_t sub_20AB3A804()
{
  unint64_t result = qword_267656E90;
  if (!qword_267656E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656E90);
  }
  return result;
}

uint64_t UserSegmentationTreatmentData.init(treatmentIDs:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static UserSegmentationTreatmentData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t UserSegmentationTreatmentData.treatmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UserSegmentationTreatmentData.treatmentIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*UserSegmentationTreatmentData.treatmentIDs.modify())()
{
  return nullsub_1;
}

uint64_t sub_20AB3A8BC()
{
  return 0x6E656D7461657274;
}

uint64_t sub_20AB3A8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E656D7461657274 && a2 == 0xEC00000073444974)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AB3A98C(uint64_t a1)
{
  unint64_t v2 = sub_20AB3AB8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB3A9C8(uint64_t a1)
{
  unint64_t v2 = sub_20AB3AB8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UserSegmentationTreatmentData.encode(to:)(void *a1)
{
  sub_20AB3ADFC(0, &qword_26AC51918, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3AB8C();
  sub_20AB86DC0();
  v10[1] = v8;
  sub_20AB3ABE0();
  sub_20AB3AE60(&qword_26AC51710);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB3AB8C()
{
  unint64_t result = qword_26AC50F58;
  if (!qword_26AC50F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F58);
  }
  return result;
}

void sub_20AB3ABE0()
{
  if (!qword_26AC51708)
  {
    unint64_t v0 = sub_20AB86790();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC51708);
    }
  }
}

uint64_t UserSegmentationTreatmentData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20AB3ADFC(0, &qword_267656E98, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3AB8C();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AB3ABE0();
    sub_20AB3AE60(&qword_26AC51718);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB3ADFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB3AB8C();
    unint64_t v7 = a3(a1, &type metadata for UserSegmentationTreatmentData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB3AE60(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20AB3ABE0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AB3AEC8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return UserSegmentationTreatmentData.init(from:)(a1, a2);
}

uint64_t sub_20AB3AEE0(void *a1)
{
  return UserSegmentationTreatmentData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for UserSegmentationTreatmentData()
{
  return &type metadata for UserSegmentationTreatmentData;
}

unsigned char *storeEnumTagSinglePayload for UserSegmentationTreatmentData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB3AFA4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserSegmentationTreatmentData.CodingKeys()
{
  return &type metadata for UserSegmentationTreatmentData.CodingKeys;
}

unint64_t sub_20AB3AFE0()
{
  unint64_t result = qword_267656EA0;
  if (!qword_267656EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656EA0);
  }
  return result;
}

unint64_t sub_20AB3B038()
{
  unint64_t result = qword_26AC50F68;
  if (!qword_26AC50F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F68);
  }
  return result;
}

unint64_t sub_20AB3B090()
{
  unint64_t result = qword_26AC50F60;
  if (!qword_26AC50F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F60);
  }
  return result;
}

unsigned char *WebSubscriptionData.init(webSubscriptionStatus:webSubscriptionChannelIDs:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = *result;
  *(void *)(a3 + 8) = a2;
  return result;
}

uint64_t static WebSubscriptionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void WebSubscriptionData.webSubscriptionStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *WebSubscriptionData.webSubscriptionStatus.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*WebSubscriptionData.webSubscriptionStatus.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionData.webSubscriptionChannelIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionData.webSubscriptionChannelIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*WebSubscriptionData.webSubscriptionChannelIDs.modify())()
{
  return nullsub_1;
}

unint64_t sub_20AB3B188()
{
  if (*v0) {
    return 0xD000000000000019;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_20AB3B1C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB3BB58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB3B1F0(uint64_t a1)
{
  unint64_t v2 = sub_20AB3B444();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB3B22C(uint64_t a1)
{
  unint64_t v2 = sub_20AB3B444();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WebSubscriptionData.encode(to:)(void *a1)
{
  sub_20AB3B724(0, &qword_26AC518D0, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v11 - v7;
  char v9 = *v1;
  v11[0] = *((void *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3B444();
  sub_20AB86DC0();
  char v14 = v9;
  char v13 = 0;
  sub_20AB3B498();
  sub_20AB86C50();
  if (!v2)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_20A9B8470();
    sub_20A9B8DEC(&qword_26AC516D8);
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AB3B444()
{
  unint64_t result = qword_26AC4FFD8;
  if (!qword_26AC4FFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FFD8);
  }
  return result;
}

unint64_t sub_20AB3B498()
{
  unint64_t result = qword_26AC506C0;
  if (!qword_26AC506C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC506C0);
  }
  return result;
}

uint64_t WebSubscriptionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AB3B724(0, &qword_267656EA8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3B444();
  sub_20AB86DA0();
  if (!v2)
  {
    char v15 = 0;
    sub_20AB3B788();
    sub_20AB86B80();
    char v10 = v16;
    sub_20A9B8470();
    char v14 = 1;
    sub_20A9B8DEC(&qword_26AC516E8);
    sub_20AB86B10();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v12 = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v10;
    *(void *)(a2 + 8) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_20AB3B724(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB3B444();
    unint64_t v7 = a3(a1, &type metadata for WebSubscriptionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB3B788()
{
  unint64_t result = qword_267656EB0;
  if (!qword_267656EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656EB0);
  }
  return result;
}

unint64_t sub_20AB3B7E0()
{
  unint64_t result = qword_26AC4FFF8;
  if (!qword_26AC4FFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FFF8);
  }
  return result;
}

unint64_t sub_20AB3B838()
{
  unint64_t result = qword_26AC4FFF0;
  if (!qword_26AC4FFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FFF0);
  }
  return result;
}

uint64_t sub_20AB3B88C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WebSubscriptionData.init(from:)(a1, a2);
}

uint64_t sub_20AB3B8A4(void *a1)
{
  return WebSubscriptionData.encode(to:)(a1);
}

uint64_t assignWithCopy for WebSubscriptionData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WebSubscriptionData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WebSubscriptionData()
{
  return &type metadata for WebSubscriptionData;
}

unsigned char *storeEnumTagSinglePayload for WebSubscriptionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB3BA18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WebSubscriptionData.CodingKeys()
{
  return &type metadata for WebSubscriptionData.CodingKeys;
}

unint64_t sub_20AB3BA54()
{
  unint64_t result = qword_267656EB8;
  if (!qword_267656EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656EB8);
  }
  return result;
}

unint64_t sub_20AB3BAAC()
{
  unint64_t result = qword_26AC4E140;
  if (!qword_26AC4E140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E140);
  }
  return result;
}

unint64_t sub_20AB3BB04()
{
  unint64_t result = qword_26AC4FFE0;
  if (!qword_26AC4FFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FFE0);
  }
  return result;
}

uint64_t sub_20AB3BB58(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA97D0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000020ABA97F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static PlaybackData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

float PlaybackData.playbackSpeed.getter()
{
  return *(float *)v0;
}

void PlaybackData.playbackSpeed.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*PlaybackData.playbackSpeed.modify())()
{
  return nullsub_1;
}

StocksAnalytics::PlaybackData __swiftcall PlaybackData.init(playbackSpeed:)(StocksAnalytics::PlaybackData playbackSpeed)
{
  v1->playbackSpeed = playbackSpeed.playbackSpeed;
  return playbackSpeed;
}

uint64_t sub_20AB3BC84()
{
  return 0x6B63616279616C70;
}

uint64_t sub_20AB3BCA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6B63616279616C70 && a2 == 0xED00006465657053)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AB3BD64(uint64_t a1)
{
  unint64_t v2 = sub_20AB3BF24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB3BDA0(uint64_t a1)
{
  unint64_t v2 = sub_20AB3BF24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PlaybackData.encode(to:)(void *a1)
{
  sub_20AB3C100(0, &qword_267656EC0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3BF24();
  sub_20AB86DC0();
  sub_20AB86C40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AB3BF24()
{
  unint64_t result = qword_267656EC8;
  if (!qword_267656EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656EC8);
  }
  return result;
}

uint64_t PlaybackData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_20AB3C100(0, &qword_267656ED0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3BF24();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AB86B70();
    int v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB3C100(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB3BF24();
    unint64_t v7 = a3(a1, &type metadata for PlaybackData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB3C16C@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return PlaybackData.init(from:)(a1, a2);
}

uint64_t sub_20AB3C184(void *a1)
{
  sub_20AB3C100(0, &qword_267656EC0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3BF24();
  sub_20AB86DC0();
  sub_20AB86C40();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for PlaybackData()
{
  return &type metadata for PlaybackData;
}

unsigned char *storeEnumTagSinglePayload for PlaybackData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB3C378);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaybackData.CodingKeys()
{
  return &type metadata for PlaybackData.CodingKeys;
}

unint64_t sub_20AB3C3B4()
{
  unint64_t result = qword_267656ED8;
  if (!qword_267656ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656ED8);
  }
  return result;
}

unint64_t sub_20AB3C40C()
{
  unint64_t result = qword_267656EE0;
  if (!qword_267656EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656EE0);
  }
  return result;
}

unint64_t sub_20AB3C464()
{
  unint64_t result = qword_267656EE8;
  if (!qword_267656EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656EE8);
  }
  return result;
}

StocksAnalytics::PaidSubscriberToSourceChannelMethod_optional __swiftcall PaidSubscriberToSourceChannelMethod.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t PaidSubscriberToSourceChannelMethod.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7070417377656ELL;
      break;
    case 2:
      uint64_t result = 0x65726F7453707061;
      break;
    case 3:
      uint64_t result = 0x6973626557627570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB3C5A4(unsigned __int8 *a1, char *a2)
{
  return sub_20AA34914(*a1, *a2);
}

unint64_t sub_20AB3C5B4()
{
  unint64_t result = qword_267656EF0;
  if (!qword_267656EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656EF0);
  }
  return result;
}

uint64_t sub_20AB3C608()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB3C6E4()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB3C7A8()
{
  return sub_20AB86D80();
}

StocksAnalytics::PaidSubscriberToSourceChannelMethod_optional sub_20AB3C880(Swift::String *a1)
{
  return PaidSubscriberToSourceChannelMethod.init(rawValue:)(*a1);
}

void sub_20AB3C88C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x7070417377656ELL;
      goto LABEL_3;
    case 2:
      *a1 = 0x65726F7453707061;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x6973626557627570;
      a1[1] = 0xEA00000000006574;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t sub_20AB3C928()
{
  return sub_20AB86750();
}

uint64_t sub_20AB3C988()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for PaidSubscriberToSourceChannelMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB3CAA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidSubscriberToSourceChannelMethod()
{
  return &type metadata for PaidSubscriberToSourceChannelMethod;
}

unint64_t sub_20AB3CADC()
{
  unint64_t result = qword_26AC51158;
  if (!qword_26AC51158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51158);
  }
  return result;
}

uint64_t sub_20AB3CB30()
{
  uint64_t v0 = sub_20AB859A0();
  __swift_allocate_value_buffer(v0, qword_267656EF8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_267656EF8);
  *(void *)uint64_t v1 = 0x7364612E6D6F63;
  *(void *)(v1 + 8) = 0xE700000000000000;
  *(void *)(v1 + 16) = 3;
  *(unsigned char *)(v1 + 24) = 0;
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v2();
}

uint64_t static VideoAdLoadEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653720, MEMORY[0x263F24D18], (uint64_t)qword_267656EF8, a1);
}

uint64_t static VideoAdLoadEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB3CC1C()
{
  uint64_t v0 = sub_20AB85C70();
  __swift_allocate_value_buffer(v0, qword_267656F10);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_267656F10);
  uint64_t v2 = *MEMORY[0x263F24DC0];
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static VideoAdLoadEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653728, MEMORY[0x263F24DD8], (uint64_t)qword_267656F10, a1);
}

uint64_t sub_20AB3CCDC()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656F28);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656F28);
  return sub_20AB85D30();
}

uint64_t static VideoAdLoadEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653730, MEMORY[0x263F24DE8], (uint64_t)qword_267656F28, a1);
}

uint64_t VideoAdLoadEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t VideoAdLoadEvent.adUserData.setter(uint64_t a1)
{
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*VideoAdLoadEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB3E094(type metadata accessor for VideoAdLoadEvent, (uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t type metadata accessor for VideoAdLoadEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656F68);
}

uint64_t VideoAdLoadEvent.eventData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 20);
  sub_20A97BF54();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 24);
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.userBundleSubscriptionContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 24);
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.userBundleSubscriptionContextData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 28);
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 28);
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 32);
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.videoAdData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 32);
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.videoAdData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 36);
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 36);
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adPlacementData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 40);
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 40);
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adFeedData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 44);
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdLoadEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 44);
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adGroupData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.adLoadData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 48);
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB3DA6C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t VideoAdLoadEvent.adLoadData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent(0) + 48);
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdLoadEvent.adLoadData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdLoadEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  Event = (int *)type metadata accessor for VideoAdLoadEvent(0);
  uint64_t v5 = a1 + Event[5];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + Event[6];
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + Event[7];
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + Event[8];
  uint64_t v12 = *MEMORY[0x263F24D30];
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + Event[9];
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + Event[10];
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v12, v17);
  uint64_t v18 = a1 + Event[11];
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v12, v19);
  uint64_t v20 = a1 + Event[12];
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104);

  return v22(v20, v2, v21);
}

uint64_t VideoAdLoadEvent.Model.adUserData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB3E094(type metadata accessor for VideoAdLoadEvent.Model, MEMORY[0x263F24E70], a1);
}

uint64_t sub_20AB3E094@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for VideoAdLoadEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267656F78);
}

uint64_t VideoAdLoadEvent.Model.userBundleSubscriptionContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 24);
  char v4 = *(unsigned char *)(v3 + 1);
  char v5 = *(unsigned char *)(v3 + 2);
  uint64_t v6 = *(void *)(v3 + 8);
  uint64_t v7 = *(void *)(v3 + 32);
  char v8 = *(unsigned char *)(v3 + 40);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(unsigned char *)(a1 + 1) = v4;
  *(unsigned char *)(a1 + 2) = v5;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 28));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.adPlacementData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for VideoAdLoadEvent.Model(0) + 36));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t VideoAdLoadEvent.Model.adFeedData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for VideoAdLoadEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t VideoAdLoadEvent.Model.adGroupData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for VideoAdLoadEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t VideoAdLoadEvent.Model.adLoadData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for VideoAdLoadEvent.Model(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 48));
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = (_BYTE)v4;
  return result;
}

__n128 VideoAdLoadEvent.Model.init(adUserData:eventData:userBundleSubscriptionContextData:channelData:videoAdData:adPlacementData:adFeedData:adGroupData:adLoadData:)@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, long long *a4@<X3>, __n128 *a5@<X4>, uint64_t *a6@<X5>, char *a7@<X6>, char *a8@<X7>, void *a9@<X8>, uint64_t *a10)
{
  uint64_t v12 = a1[1];
  char v13 = *a3;
  char v14 = a3[1];
  char v15 = a3[2];
  long long v28 = *(_OWORD *)(a3 + 8);
  uint64_t v16 = *((void *)a3 + 3);
  uint64_t v17 = *((void *)a3 + 4);
  char v18 = a3[40];
  long long v33 = *a4;
  uint64_t v32 = *((void *)a4 + 2);
  uint64_t v31 = *((void *)a4 + 3);
  char v30 = *((unsigned char *)a4 + 32);
  char v29 = *((unsigned char *)a4 + 33);
  __n128 v35 = *a5;
  unint64_t v34 = a5[1].n128_u64[0];
  uint64_t v37 = *a6;
  uint64_t v36 = a6[1];
  char v38 = *a7;
  char v39 = *a8;
  uint64_t v41 = *a10;
  char v40 = *((unsigned char *)a10 + 8);
  *a9 = *a1;
  a9[1] = v12;
  uint64_t v19 = (int *)type metadata accessor for VideoAdLoadEvent.Model(0);
  uint64_t v20 = (char *)a9 + v19[5];
  uint64_t v21 = sub_20AB85FC0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a2, v21);
  uint64_t v22 = (char *)a9 + v19[6];
  *uint64_t v22 = v13;
  v22[1] = v14;
  _OWORD v22[2] = v15;
  *(_OWORD *)(v22 + 8) = v28;
  *((void *)v22 + 3) = v16;
  *((void *)v22 + 4) = v17;
  v22[40] = v18;
  uint64_t v23 = (char *)a9 + v19[7];
  *(_OWORD *)uint64_t v23 = v33;
  *((void *)v23 + 2) = v32;
  *((void *)v23 + 3) = v31;
  v23[32] = v30;
  v23[33] = v29;
  uint64_t v24 = (__n128 *)((char *)a9 + v19[8]);
  __n128 result = v35;
  __n128 *v24 = v35;
  v24[1].n128_u64[0] = v34;
  char v26 = (void *)((char *)a9 + v19[9]);
  *char v26 = v37;
  v26[1] = v36;
  *((unsigned char *)a9 + v19[10]) = v38;
  *((unsigned char *)a9 + v19[11]) = v39;
  char v27 = (char *)a9 + v19[12];
  *(void *)char v27 = v41;
  v27[8] = v40;
  return result;
}

unint64_t sub_20AB3E548(char a1)
{
  unint64_t result = 0x6144726573556461;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746144746E657665;
      break;
    case 2:
      unint64_t result = 0xD000000000000021;
      break;
    case 3:
      unint64_t result = 0x446C656E6E616863;
      break;
    case 4:
      unint64_t result = 0x4464416F65646976;
      break;
    case 5:
      unint64_t result = 0x6D6563616C506461;
      break;
    case 6:
      unint64_t result = 0x6144646565466461;
      break;
    case 7:
      unint64_t result = 0x4470756F72476461;
      break;
    case 8:
      unint64_t result = 0x614464616F4C6461;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20AB3E678()
{
  return sub_20AB3E548(*v0);
}

uint64_t sub_20AB3E680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB42F24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB3E6A8(uint64_t a1)
{
  unint64_t v2 = sub_20AB3EB34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB3E6E4(uint64_t a1)
{
  unint64_t v2 = sub_20AB3EB34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VideoAdLoadEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB3F29C(0, &qword_267656F50, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v29[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB3EB34();
  sub_20AB86DC0();
  uint64_t v10 = v3[1];
  *(void *)char v29 = *v3;
  *(void *)&v29[8] = v10;
  char v32 = 0;
  sub_20A99A454();
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v11 = (int *)type metadata accessor for VideoAdLoadEvent.Model(0);
    v29[0] = 1;
    sub_20AB85FC0();
    sub_20A985F3C(&qword_26AC4E6F8);
    sub_20AB86C50();
    uint64_t v12 = (char *)v3 + v11[6];
    char v13 = v12[1];
    char v14 = v12[2];
    char v15 = v12[40];
    v29[0] = *v12;
    v29[1] = v13;
    v29[2] = v14;
    *(_OWORD *)&v29[8] = *(_OWORD *)(v12 + 8);
    long long v30 = *(_OWORD *)(v12 + 24);
    char v31 = v15;
    char v32 = 2;
    sub_20AA2E260();
    sub_20AB86C50();
    uint64_t v16 = (char *)v3 + v11[7];
    long long v17 = *(_OWORD *)v16;
    uint64_t v18 = *((void *)v16 + 2);
    uint64_t v19 = *((void *)v16 + 3);
    char v20 = v16[32];
    LOBYTE(v16) = v16[33];
    *(_OWORD *)char v29 = v17;
    *(void *)&v29[16] = v18;
    *(void *)&long long v30 = v19;
    BYTE8(v30) = v20;
    BYTE9(v30) = (_BYTE)v16;
    char v32 = 3;
    sub_20A9862D4();
    sub_20AB86C50();
    uint64_t v21 = (char *)v3 + v11[8];
    uint64_t v22 = *((void *)v21 + 2);
    *(_OWORD *)char v29 = *(_OWORD *)v21;
    *(void *)&v29[16] = v22;
    char v32 = 4;
    sub_20AA564D0();
    sub_20AB86BE0();
    uint64_t v23 = (void *)((char *)v3 + v11[9]);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    *(void *)char v29 = v25;
    *(void *)&v29[8] = v24;
    char v32 = 5;
    sub_20A99A9F4();
    sub_20AB86C50();
    v29[0] = *((unsigned char *)v3 + v11[10]);
    char v32 = 6;
    sub_20A99B0E4();
    sub_20AB86BE0();
    v29[0] = *((unsigned char *)v3 + v11[11]);
    char v32 = 7;
    sub_20A99B600();
    sub_20AB86BE0();
    char v26 = (char *)v3 + v11[12];
    uint64_t v27 = *(void *)v26;
    LOBYTE(v26) = v26[8];
    *(void *)char v29 = v27;
    v29[8] = (_BYTE)v26;
    char v32 = 8;
    sub_20AA328F0();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB3EB34()
{
  unint64_t result = qword_267656F58;
  if (!qword_267656F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656F58);
  }
  return result;
}

uint64_t VideoAdLoadEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB3F29C(0, &qword_267656F60, MEMORY[0x263F8E040]);
  uint64_t v37 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v41 = type metadata accessor for VideoAdLoadEvent.Model(0);
  MEMORY[0x270FA5388](v41);
  char v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  char v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20AB3EB34();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  uint64_t v36 = a2;
  uint64_t v15 = v9;
  char v45 = 0;
  sub_20A99A400();
  sub_20AB86B80();
  uint64_t v16 = *(void *)&v42[8];
  *(void *)char v13 = *(void *)v42;
  *((void *)v13 + 1) = v16;
  v42[0] = 1;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v17 = v39;
  sub_20AB86B80();
  uint64_t v18 = (int *)v41;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v13[*(int *)(v41 + 20)], v7, v17);
  char v45 = 2;
  sub_20AA2E208();
  sub_20AB86B80();
  char v19 = v42[1];
  char v20 = v42[2];
  char v21 = v44;
  uint64_t v22 = &v13[v18[6]];
  *uint64_t v22 = v42[0];
  v22[1] = v19;
  _OWORD v22[2] = v20;
  *(_OWORD *)(v22 + 8) = *(_OWORD *)&v42[8];
  *(_OWORD *)(v22 + 24) = v43;
  v22[40] = v21;
  char v45 = 3;
  sub_20A986280();
  sub_20AB86B80();
  uint64_t v23 = (uint64_t)v40;
  uint64_t v24 = *(void *)&v42[16];
  uint64_t v25 = v43;
  char v26 = BYTE8(v43);
  char v27 = BYTE9(v43);
  long long v28 = &v13[v18[7]];
  *(_OWORD *)long long v28 = *(_OWORD *)v42;
  *((void *)v28 + 2) = v24;
  *((void *)v28 + 3) = v25;
  v28[32] = v26;
  v28[33] = v27;
  char v45 = 4;
  sub_20AA56478();
  sub_20AB86B10();
  uint64_t v29 = *(void *)&v42[16];
  long long v30 = &v13[v18[8]];
  *(_OWORD *)long long v30 = *(_OWORD *)v42;
  *((void *)v30 + 2) = v29;
  char v45 = 5;
  sub_20A99A9A0();
  sub_20AB86B80();
  uint64_t v31 = *(void *)&v42[8];
  char v32 = &v13[v18[9]];
  *(void *)char v32 = *(void *)v42;
  *((void *)v32 + 1) = v31;
  char v45 = 6;
  sub_20A99B090();
  sub_20AB86B10();
  v13[v18[10]] = v42[0];
  char v45 = 7;
  sub_20A99B5AC();
  sub_20AB86B10();
  v13[v18[11]] = v42[0];
  char v45 = 8;
  sub_20AA32898();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v37);
  char v33 = v42[8];
  unint64_t v34 = &v13[v18[12]];
  *(void *)unint64_t v34 = *(void *)v42;
  v34[8] = v33;
  sub_20AB3F300((uint64_t)v13, v36);
  __swift_destroy_boxed_opaque_existential_1(v23);
  return sub_20AB3F364((uint64_t)v13);
}

void sub_20AB3F29C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB3EB34();
    unint64_t v7 = a3(a1, &type metadata for VideoAdLoadEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB3F300(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoAdLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB3F364(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoAdLoadEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB3F3C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdLoadEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB3F3D8(void *a1)
{
  return VideoAdLoadEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB3F3F0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653720, MEMORY[0x263F24D18], (uint64_t)qword_267656EF8, a1);
}

uint64_t sub_20AB3F428@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653728, MEMORY[0x263F24DD8], (uint64_t)qword_267656F10, a1);
}

uint64_t sub_20AB3F460@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653730, MEMORY[0x263F24DE8], (uint64_t)qword_267656F28, a1);
}

uint64_t sub_20AB3F498@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = *MEMORY[0x263F24D30];
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v13, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v13, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);

  return v23(v21, v4, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdLoadEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97BF54();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    unint64_t v34 = (char *)a2 + v32;
    sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for VideoAdLoadEvent(uint64_t a1, int *a2)
{
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);

  return v21(v19, v20);
}

uint64_t initializeWithCopy for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for VideoAdLoadEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdLoadEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB413F8);
}

uint64_t sub_20AB413F8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_18:
    return v9(v10, a2, v8);
  }
  sub_20A97BF54();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_17:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_18;
  }
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a3[12];

  return v22(v24, a2, v23);
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB418E0);
}

uint64_t sub_20AB418E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20AB3DA6C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_18:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97BF54();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_17:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_18;
  }
  sub_20AB3DA6C(0, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_17;
  }
  sub_20AB3DA6C(0, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a4[12];

  return v24(v26, a2, a2, v25);
}

void sub_20AB41DC0()
{
  sub_20AB3DA6C(319, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (v0 <= 0x3F)
  {
    sub_20A97BF54();
    if (v1 <= 0x3F)
    {
      sub_20AB3DA6C(319, &qword_267656F40, (void (*)(void))sub_20AA2E208, (void (*)(void))sub_20AA2E260);
      if (v2 <= 0x3F)
      {
        sub_20AB3DA6C(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
        if (v3 <= 0x3F)
        {
          sub_20AB3DA6C(319, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
          if (v4 <= 0x3F)
          {
            sub_20AB3DA6C(319, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
            if (v5 <= 0x3F)
            {
              sub_20AB3DA6C(319, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
              if (v6 <= 0x3F)
              {
                sub_20AB3DA6C(319, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
                if (v7 <= 0x3F)
                {
                  sub_20AB3DA6C(319, &qword_267656F48, (void (*)(void))sub_20AA32898, (void (*)(void))sub_20AA328F0);
                  if (v8 <= 0x3F) {
                    swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for VideoAdLoadEvent.Model(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FC0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *uint64_t v15 = *v16;
    *(_WORD *)(v15 + 1) = *(_WORD *)(v16 + 1);
    uint64_t v17 = *((void *)v16 + 2);
    *((void *)v15 + 1) = *((void *)v16 + 1);
    *((void *)v15 + 2) = v17;
    uint64_t v18 = *((void *)v16 + 4);
    *((void *)v15 + 3) = *((void *)v16 + 3);
    *((void *)v15 + 4) = v18;
    v15[40] = v16[40];
    uint64_t v19 = (char *)v4 + v14;
    uint64_t v20 = (char *)a2 + v14;
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = *((void *)v20 + 3);
    *((void *)v19 + 2) = *((void *)v20 + 2);
    *((void *)v19 + 3) = v22;
    v19[32] = v20[32];
    v19[33] = v20[33];
    uint64_t v23 = a3[8];
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)v4 + v23;
    uint64_t v26 = (char *)a2 + v23;
    *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
    uint64_t v27 = *((void *)v26 + 2);
    *((void *)v25 + 1) = *((void *)v26 + 1);
    *((void *)v25 + 2) = v27;
    uint64_t v28 = (void *)((char *)v4 + v24);
    uint64_t v29 = (void *)((char *)a2 + v24);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)v4 + v31) = *((unsigned char *)a2 + v31);
    uint64_t v32 = a3[12];
    uint64_t v33 = (char *)v4 + v32;
    uint64_t v34 = (char *)a2 + v32;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for VideoAdLoadEvent.Model(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for VideoAdLoadEvent.Model(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20AB85FC0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *uint64_t v14 = *v15;
  *(_WORD *)(v14 + 1) = *(_WORD *)(v15 + 1);
  uint64_t v16 = *((void *)v15 + 2);
  *((void *)v14 + 1) = *((void *)v15 + 1);
  *((void *)v14 + 2) = v16;
  uint64_t v17 = *((void *)v15 + 4);
  *((void *)v14 + 3) = *((void *)v15 + 3);
  *((void *)v14 + 4) = v17;
  v14[40] = v15[40];
  uint64_t v18 = (char *)a1 + v13;
  uint64_t v19 = (char *)a2 + v13;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = *((void *)v19 + 3);
  *((void *)v18 + 2) = *((void *)v19 + 2);
  *((void *)v18 + 3) = v21;
  v18[32] = v19[32];
  v18[33] = v19[33];
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  uint64_t v26 = *((void *)v25 + 2);
  *((void *)v24 + 1) = *((void *)v25 + 1);
  *((void *)v24 + 2) = v26;
  uint64_t v27 = (void *)((char *)a1 + v23);
  uint64_t v28 = (void *)((char *)a2 + v23);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
  uint64_t v31 = a3[12];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for VideoAdLoadEvent.Model(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20AB85FC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *uint64_t v11 = *((unsigned char *)a2 + v10);
  v11[1] = *((unsigned char *)a2 + v10 + 1);
  void v11[2] = *((unsigned char *)a2 + v10 + 2);
  *((void *)v11 + 1) = *(void *)((char *)a2 + v10 + 8);
  *((void *)v11 + 2) = *(void *)((char *)a2 + v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v11 + 3) = *((void *)v12 + 3);
  *((void *)v11 + 4) = *((void *)v12 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11[40] = v12[40];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *(void *)uint64_t v14 = *(void *)((char *)a2 + v13);
  *((void *)v14 + 1) = *(void *)((char *)a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v14 + 2) = *((void *)v15 + 2);
  *((void *)v14 + 3) = *((void *)v15 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[32] = v15[32];
  v14[33] = v15[33];
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  *((void *)v17 + 2) = *((void *)v18 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v22 = a3[12];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  return a1;
}

_OWORD *initializeWithTake for VideoAdLoadEvent.Model(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20AB85FC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (_OWORD *)((char *)a1 + v10);
  uint64_t v13 = (_OWORD *)((char *)a2 + v10);
  *(_OWORD *)((char *)v12 + 25) = *(_OWORD *)((char *)v13 + 25);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = (char *)a1 + v11;
  uint64_t v16 = (char *)a2 + v11;
  *((_WORD *)v15 + 16) = *((_WORD *)v16 + 16);
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v21 = (char *)a2 + v18;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((void *)v20 + 2) = *((void *)v21 + 2);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  uint64_t v22 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
  uint64_t v23 = a3[12];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  return a1;
}

void *assignWithTake for VideoAdLoadEvent.Model(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20AB85FC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *uint64_t v12 = *((unsigned char *)a2 + v11);
  v12[1] = *((unsigned char *)a2 + v11 + 1);
  v12[2] = *((unsigned char *)a2 + v11 + 2);
  uint64_t v14 = *(void *)((char *)a2 + v11 + 16);
  *((void *)v12 + 1) = *(void *)((char *)a2 + v11 + 8);
  *((void *)v12 + 2) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v13 + 4);
  *((void *)v12 + 3) = *((void *)v13 + 3);
  *((void *)v12 + 4) = v15;
  swift_bridgeObjectRelease();
  v12[40] = v13[40];
  uint64_t v16 = a3[7];
  long long v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)((char *)a2 + v16 + 8);
  *(void *)long long v17 = *(void *)((char *)a2 + v16);
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v18 + 3);
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *((void *)v17 + 3) = v20;
  swift_bridgeObjectRelease();
  v17[32] = v18[32];
  v17[33] = v18[33];
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  uint64_t v25 = *((void *)v23 + 1);
  uint64_t v24 = *((void *)v23 + 2);
  *((void *)v22 + 1) = v25;
  *((void *)v22 + 2) = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  *((unsigned char *)a1 + v31) = *((unsigned char *)a2 + v31);
  uint64_t v32 = a3[12];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v34[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdLoadEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB42AD8);
}

uint64_t sub_20AB42AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20AB85FC0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for VideoAdLoadEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB42B9C);
}

uint64_t sub_20AB42B9C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_20AB42C44()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VideoAdLoadEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB42DE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadEvent.Model.CodingKeys()
{
  return &type metadata for VideoAdLoadEvent.Model.CodingKeys;
}

unint64_t sub_20AB42E20()
{
  unint64_t result = qword_267656F88;
  if (!qword_267656F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656F88);
  }
  return result;
}

unint64_t sub_20AB42E78()
{
  unint64_t result = qword_267656F90;
  if (!qword_267656F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656F90);
  }
  return result;
}

unint64_t sub_20AB42ED0()
{
  unint64_t result = qword_267656F98;
  if (!qword_267656F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656F98);
  }
  return result;
}

uint64_t sub_20AB42F24(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144726573556461 && a2 == 0xEA00000000006174;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x800000020ABA7660 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4464416F65646976 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x614464616F4C6461 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

Swift::String_optional __swiftcall ExternalAnalyticsPanelIdProvider.panelIdentifier(with:)(Swift::OpaquePointer with)
{
  uint64_t v1 = 0;
  BOOL v2 = 0;
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

uint64_t ExternalAnalyticsPanelIdProvider.deinit()
{
  return v0;
}

uint64_t ExternalAnalyticsPanelIdProvider.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t sub_20AB4336C()
{
  return 0;
}

uint64_t dispatch thunk of ExternalAnalyticsPanelIdProviderType.panelIdentifier(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ExternalAnalyticsPanelIdProvider()
{
  return self;
}

uint64_t method lookup function for ExternalAnalyticsPanelIdProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ExternalAnalyticsPanelIdProvider);
}

uint64_t sub_20AB433C8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267656FA0, MEMORY[0x263F24D10]);
}

uint64_t static EditWatchlistNameEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653738, MEMORY[0x263F24D18], (uint64_t)qword_267656FA0, a1);
}

uint64_t static EditWatchlistNameEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB43430(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267656FB8, MEMORY[0x263F24DC8]);
}

uint64_t static EditWatchlistNameEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653740, MEMORY[0x263F24DD8], (uint64_t)qword_267656FB8, a1);
}

uint64_t sub_20AB43490()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267656FD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267656FD0);
  return sub_20AB85D30();
}

uint64_t static EditWatchlistNameEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653748, MEMORY[0x263F24DE8], (uint64_t)qword_267656FD0, a1);
}

uint64_t EditWatchlistNameEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t EditWatchlistNameEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*EditWatchlistNameEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EditWatchlistNameEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t EditWatchlistNameEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t EditWatchlistNameEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_20AB436AC(uint64_t a1)
{
  unint64_t v2 = sub_20AB43898();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB436E8(uint64_t a1)
{
  unint64_t v2 = sub_20AB43898();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EditWatchlistNameEvent.Model.encode(to:)(void *a1)
{
  sub_20AB43B84(0, &qword_267656FE8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB43898();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AB43898()
{
  unint64_t result = qword_267656FF0;
  if (!qword_267656FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267656FF0);
  }
  return result;
}

uint64_t EditWatchlistNameEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB43B84(0, &qword_267656FF8, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for EditWatchlistNameEvent.Model(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB43898();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_20A985F3C(&qword_26AC4E0C8);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_20AB43C08((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB43B84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB43898();
    unint64_t v7 = a3(a1, &type metadata for EditWatchlistNameEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for EditWatchlistNameEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657010);
}

uint64_t sub_20AB43C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditWatchlistNameEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB43C6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EditWatchlistNameEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB43C84(void *a1)
{
  sub_20AB43B84(0, &qword_267656FE8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB43898();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20AB43DF8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653738, MEMORY[0x263F24D18], (uint64_t)qword_267656FA0, a1);
}

uint64_t sub_20AB43E30@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653740, MEMORY[0x263F24DD8], (uint64_t)qword_267656FB8, a1);
}

uint64_t sub_20AB43E68@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653748, MEMORY[0x263F24DE8], (uint64_t)qword_267656FD0, a1);
}

uint64_t getEnumTagSinglePayload for EditWatchlistNameEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB43EB4);
}

uint64_t sub_20AB43EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t storeEnumTagSinglePayload for EditWatchlistNameEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB43EE0);
}

uint64_t sub_20AB43EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t type metadata accessor for EditWatchlistNameEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657000);
}

uint64_t getEnumTagSinglePayload for EditWatchlistNameEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB43F2C);
}

uint64_t sub_20AB43F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t storeEnumTagSinglePayload for EditWatchlistNameEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB43F58);
}

uint64_t sub_20AB43F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F24E70]);
}

unsigned char *storeEnumTagSinglePayload for EditWatchlistNameEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB4400CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EditWatchlistNameEvent.Model.CodingKeys()
{
  return &type metadata for EditWatchlistNameEvent.Model.CodingKeys;
}

unint64_t sub_20AB44048()
{
  unint64_t result = qword_267657020;
  if (!qword_267657020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657020);
  }
  return result;
}

unint64_t sub_20AB440A0()
{
  unint64_t result = qword_267657028;
  if (!qword_267657028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657028);
  }
  return result;
}

unint64_t sub_20AB440F8()
{
  unint64_t result = qword_267657030;
  if (!qword_267657030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657030);
  }
  return result;
}

uint64_t sub_20AB4414C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267657038, MEMORY[0x263F24D10]);
}

uint64_t static AppReviewPromptRequestEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653750, MEMORY[0x263F24D18], (uint64_t)qword_267657038, a1);
}

uint64_t static AppReviewPromptRequestEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB441B4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267657050, MEMORY[0x263F24DC8]);
}

uint64_t static AppReviewPromptRequestEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653758, MEMORY[0x263F24DD8], (uint64_t)qword_267657050, a1);
}

uint64_t sub_20AB44214()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267657068);
  __swift_project_value_buffer(v0, (uint64_t)qword_267657068);
  return sub_20AB85D30();
}

uint64_t static AppReviewPromptRequestEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653760, MEMORY[0x263F24DE8], (uint64_t)qword_267657068, a1);
}

uint64_t AppReviewPromptRequestEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AppReviewPromptRequestEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AppReviewPromptRequestEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppReviewPromptRequestEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t AppReviewPromptRequestEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AppReviewPromptRequestEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_20AB44430(uint64_t a1)
{
  unint64_t v2 = sub_20AB4461C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB4446C(uint64_t a1)
{
  unint64_t v2 = sub_20AB4461C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppReviewPromptRequestEvent.Model.encode(to:)(void *a1)
{
  sub_20AB44908(0, &qword_267657080, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB4461C();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AB4461C()
{
  unint64_t result = qword_267657088;
  if (!qword_267657088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657088);
  }
  return result;
}

uint64_t AppReviewPromptRequestEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB44908(0, &qword_267657090, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for AppReviewPromptRequestEvent.Model(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB4461C();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_20A985F3C(&qword_26AC4E0C8);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_20AB4498C((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB44908(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB4461C();
    unint64_t v7 = a3(a1, &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for AppReviewPromptRequestEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676570A8);
}

uint64_t sub_20AB4498C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppReviewPromptRequestEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB449F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppReviewPromptRequestEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB44A08(void *a1)
{
  sub_20AB44908(0, &qword_267657080, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB4461C();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20AB44B7C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653750, MEMORY[0x263F24D18], (uint64_t)qword_267657038, a1);
}

uint64_t sub_20AB44BB4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653758, MEMORY[0x263F24DD8], (uint64_t)qword_267657050, a1);
}

uint64_t sub_20AB44BEC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653760, MEMORY[0x263F24DE8], (uint64_t)qword_267657068, a1);
}

uint64_t getEnumTagSinglePayload for AppReviewPromptRequestEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB44C38);
}

uint64_t sub_20AB44C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptRequestEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB44C64);
}

uint64_t sub_20AB44C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t type metadata accessor for AppReviewPromptRequestEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657098);
}

uint64_t getEnumTagSinglePayload for AppReviewPromptRequestEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB44CB0);
}

uint64_t sub_20AB44CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t storeEnumTagSinglePayload for AppReviewPromptRequestEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB44CDC);
}

uint64_t sub_20AB44CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F24E70]);
}

unsigned char *storeEnumTagSinglePayload for AppReviewPromptRequestEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB44D90);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppReviewPromptRequestEvent.Model.CodingKeys()
{
  return &type metadata for AppReviewPromptRequestEvent.Model.CodingKeys;
}

unint64_t sub_20AB44DCC()
{
  unint64_t result = qword_2676570B8;
  if (!qword_2676570B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676570B8);
  }
  return result;
}

unint64_t sub_20AB44E24()
{
  unint64_t result = qword_2676570C0;
  if (!qword_2676570C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676570C0);
  }
  return result;
}

unint64_t sub_20AB44E7C()
{
  unint64_t result = qword_2676570C8;
  if (!qword_2676570C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676570C8);
  }
  return result;
}

StocksAnalytics::TrackVariant_optional __swiftcall TrackVariant.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t TrackVariant.rawValue.getter()
{
  uint64_t v1 = 0x656C706D6173;
  if (*v0 != 1) {
    uint64_t v1 = 1819047270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AB44F7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA38838(*a1, *a2);
}

unint64_t sub_20AB44F8C()
{
  unint64_t result = qword_2676570D0;
  if (!qword_2676570D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676570D0);
  }
  return result;
}

uint64_t sub_20AB44FE0()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB45078()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB450FC()
{
  return sub_20AB86D80();
}

StocksAnalytics::TrackVariant_optional sub_20AB45190(Swift::String *a1)
{
  return TrackVariant.init(rawValue:)(*a1);
}

void sub_20AB4519C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x656C706D6173;
  if (v2 != 1)
  {
    uint64_t v5 = 1819047270;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AB451F0()
{
  return sub_20AB86750();
}

uint64_t sub_20AB45250()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for TrackVariant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB4536CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TrackVariant()
{
  return &type metadata for TrackVariant;
}

unint64_t sub_20AB453A4()
{
  unint64_t result = qword_2676570D8;
  if (!qword_2676570D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676570D8);
  }
  return result;
}

StocksAnalytics::AdJournalEntryStatus_optional __swiftcall AdJournalEntryStatus.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t AdJournalEntryStatus.rawValue.getter()
{
  uint64_t result = 0x64657461657263;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64656C696166;
      break;
    case 2:
      uint64_t result = 0x676E69646E6570;
      break;
    case 3:
      uint64_t result = 0x6564726163736964;
      break;
    case 4:
      uint64_t result = 0x656C6C69666C7566;
      break;
    case 5:
      uint64_t result = 0x65746E6573657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB45510(unsigned __int8 *a1, char *a2)
{
  return sub_20AA36870(*a1, *a2);
}

unint64_t sub_20AB45520()
{
  unint64_t result = qword_2676570E0;
  if (!qword_2676570E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676570E0);
  }
  return result;
}

uint64_t sub_20AB45574()
{
  return sub_20AB4D378();
}

uint64_t sub_20AB4557C()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4566C()
{
  return sub_20AB4E9B8();
}

StocksAnalytics::AdJournalEntryStatus_optional sub_20AB45674(Swift::String *a1)
{
  return AdJournalEntryStatus.init(rawValue:)(*a1);
}

void sub_20AB45680(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x64657461657263;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x64656C696166;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E69646E6570;
      a1[1] = 0xE700000000000000;
      return;
    case 3:
      uint64_t v4 = 0x6564726163736964;
      goto LABEL_8;
    case 4:
      uint64_t v4 = 0x656C6C69666C7566;
      goto LABEL_8;
    case 5:
      uint64_t v4 = 0x65746E6573657270;
LABEL_8:
      *a1 = v4;
      a1[1] = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20AB45748()
{
  return sub_20AB86750();
}

uint64_t sub_20AB457A8()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for AdJournalEntryStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB458C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryStatus()
{
  return &type metadata for AdJournalEntryStatus;
}

unint64_t sub_20AB458FC()
{
  unint64_t result = qword_26AC50000;
  if (!qword_26AC50000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50000);
  }
  return result;
}

uint64_t sub_20AB45950(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_2676570E8, MEMORY[0x263F24D10]);
}

uint64_t static OutboundLinkTapEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653768, MEMORY[0x263F24D18], (uint64_t)qword_2676570E8, a1);
}

uint64_t static OutboundLinkTapEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB459B8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267657100, MEMORY[0x263F24DC8]);
}

uint64_t static OutboundLinkTapEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653770, MEMORY[0x263F24DD8], (uint64_t)qword_267657100, a1);
}

uint64_t sub_20AB45A18()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267657118);
  __swift_project_value_buffer(v0, (uint64_t)qword_267657118);
  return sub_20AB85D30();
}

uint64_t static OutboundLinkTapEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653778, MEMORY[0x263F24DE8], (uint64_t)qword_267657118, a1);
}

uint64_t OutboundLinkTapEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t OutboundLinkTapEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*OutboundLinkTapEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t OutboundLinkTapEvent.linkData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OutboundLinkTapEvent(0) + 20);
  sub_20AB45BD4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for OutboundLinkTapEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657150);
}

void sub_20AB45BD4()
{
  if (!qword_267657130)
  {
    sub_20AA22B10();
    sub_20AA22B68();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267657130);
    }
  }
}

uint64_t OutboundLinkTapEvent.linkData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OutboundLinkTapEvent(0) + 20);
  sub_20AB45BD4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*OutboundLinkTapEvent.linkData.modify())()
{
  return nullsub_1;
}

uint64_t OutboundLinkTapEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for OutboundLinkTapEvent(0) + 20);
  sub_20AB45BD4();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t OutboundLinkTapEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t OutboundLinkTapEvent.Model.linkData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for OutboundLinkTapEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for OutboundLinkTapEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657160);
}

uint64_t OutboundLinkTapEvent.Model.init(eventData:linkData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for OutboundLinkTapEvent.Model(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_20AB45EA4()
{
  if (*v0) {
    return 0x617461446B6E696CLL;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AB45EE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB47370(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB45F0C(uint64_t a1)
{
  unint64_t v2 = sub_20AB46150();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB45F48(uint64_t a1)
{
  unint64_t v2 = sub_20AB46150();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OutboundLinkTapEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB464F4(0, &qword_267657138, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB46150();
  sub_20AB86DC0();
  v11[15] = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    v11[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for OutboundLinkTapEvent.Model(0) + 20));
    unsigned char v11[13] = 1;
    sub_20AA22B68();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB46150()
{
  unint64_t result = qword_267657140;
  if (!qword_267657140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657140);
  }
  return result;
}

uint64_t OutboundLinkTapEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v23 = sub_20AB85FC0();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB464F4(0, &qword_267657148, MEMORY[0x263F8E040]);
  uint64_t v24 = v6;
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for OutboundLinkTapEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB46150();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v21;
  char v27 = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v23;
  sub_20AB86B80();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v19 = (uint64_t)v12;
  v15(v12, v5, v14);
  char v25 = 1;
  sub_20AA22B10();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v24);
  uint64_t v17 = v19;
  uint64_t v16 = v20;
  *(unsigned char *)(v19 + *(int *)(v9 + 20)) = v26;
  sub_20AB46558(v17, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AB465BC(v17);
}

void sub_20AB464F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB46150();
    unint64_t v7 = a3(a1, &type metadata for OutboundLinkTapEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB46558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OutboundLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB465BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OutboundLinkTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB46618@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OutboundLinkTapEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB46630(void *a1)
{
  return OutboundLinkTapEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB46648@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653768, MEMORY[0x263F24D18], (uint64_t)qword_2676570E8, a1);
}

uint64_t sub_20AB46680@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653770, MEMORY[0x263F24DD8], (uint64_t)qword_267657100, a1);
}

uint64_t sub_20AB466B8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653778, MEMORY[0x263F24DE8], (uint64_t)qword_267657118, a1);
}

uint64_t sub_20AB466F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AB45BD4();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for OutboundLinkTapEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AB45BD4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for OutboundLinkTapEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AB45BD4();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for OutboundLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB45BD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for OutboundLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB45BD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for OutboundLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB45BD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for OutboundLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB45BD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OutboundLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB46C58);
}

uint64_t sub_20AB46C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20AB45BD4();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for OutboundLinkTapEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB46D64);
}

uint64_t sub_20AB46D64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20AB45BD4();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_20AB46E68()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB45BD4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for OutboundLinkTapEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB46F44);
}

uint64_t sub_20AB46F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for OutboundLinkTapEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB47014);
}

uint64_t sub_20AB47014(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_20AB470D0()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OutboundLinkTapEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB47230);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OutboundLinkTapEvent.Model.CodingKeys()
{
  return &type metadata for OutboundLinkTapEvent.Model.CodingKeys;
}

unint64_t sub_20AB4726C()
{
  unint64_t result = qword_267657170;
  if (!qword_267657170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657170);
  }
  return result;
}

unint64_t sub_20AB472C4()
{
  unint64_t result = qword_267657178;
  if (!qword_267657178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657178);
  }
  return result;
}

unint64_t sub_20AB4731C()
{
  unint64_t result = qword_267657180;
  if (!qword_267657180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657180);
  }
  return result;
}

uint64_t sub_20AB47370(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446B6E696CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AB47470(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267657188, MEMORY[0x263F24D10]);
}

uint64_t static MediaViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653780, MEMORY[0x263F24D18], (uint64_t)qword_267657188, a1);
}

uint64_t static MediaViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB474D8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_2676571A0, MEMORY[0x263F24DC8]);
}

uint64_t static MediaViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653788, MEMORY[0x263F24DD8], (uint64_t)qword_2676571A0, a1);
}

uint64_t sub_20AB47538()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676571B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676571B8);
  return sub_20AB85D30();
}

uint64_t static MediaViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653790, MEMORY[0x263F24DE8], (uint64_t)qword_2676571B8, a1);
}

uint64_t MediaViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t MediaViewEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*MediaViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB48DF4(type metadata accessor for MediaViewEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for MediaViewEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52C28);
}

uint64_t MediaViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 24);
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 24);
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 28);
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 28);
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 32);
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 32);
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 36);
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 36);
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.mediaData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 40);
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 40);
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 44);
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 44);
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.anfComponentData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 48);
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.galleryData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 48);
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.galleryData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 52);
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 52);
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 56);
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 56);
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 60);
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaViewEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent(0) + 60);
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaViewEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t MediaViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for MediaViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v10, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v10, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v2, v25);
  uint64_t v26 = a1 + v4[15];
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104);

  return v28(v26, v10, v27);
}

uint64_t MediaViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t MediaViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB48DF4(type metadata accessor for MediaViewEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AB48DF4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for MediaViewEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52CE0);
}

uint64_t MediaViewEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t MediaViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 36));
  char v4 = *v3;
  uint64_t v6 = *((void *)v3 + 1);
  uint64_t v5 = *((void *)v3 + 2);
  int v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 28) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 40));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;

  return sub_20A9F9290(v4, v5);
}

uint64_t MediaViewEvent.Model.galleryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 48);
  uint64_t v4 = *(void *)(v3 + 16);
  int v5 = *(_DWORD *)(v3 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = v5;

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 52));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaViewEvent.Model(0) + 56));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaViewEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for MediaViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 60));
  return result;
}

__n128 MediaViewEvent.Model.init(eventData:timedData:newsArticleData:groupData:feedData:mediaData:viewData:anfComponentData:galleryData:issueData:channelData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, long long *a10, uint64_t *a11, __n128 *a12, char *a13)
{
  long long v40 = *a3;
  uint64_t v16 = *((void *)a3 + 2);
  uint64_t v17 = *((void *)a3 + 3);
  char v18 = *((unsigned char *)a3 + 32);
  uint64_t v19 = *((void *)a3 + 5);
  char v39 = *((unsigned char *)a3 + 48);
  uint64_t v38 = *((void *)a3 + 7);
  char v20 = *((unsigned char *)a3 + 64);
  char v21 = *((unsigned char *)a3 + 65);
  char v37 = *((unsigned char *)a3 + 66);
  char v36 = *((unsigned char *)a3 + 67);
  long long v43 = a4[1];
  long long v44 = *a4;
  uint64_t v42 = *((void *)a4 + 4);
  uint64_t v41 = *((void *)a4 + 5);
  long long v46 = *a5;
  uint64_t v45 = *((void *)a5 + 2);
  char v51 = *a6;
  uint64_t v50 = *((void *)a6 + 1);
  uint64_t v49 = *((void *)a6 + 2);
  int v48 = *((_DWORD *)a6 + 6);
  char v47 = a6[28];
  uint64_t v54 = *a7;
  uint64_t v53 = a7[1];
  __int16 v52 = *((_WORD *)a7 + 8);
  uint64_t v56 = *a8;
  uint64_t v55 = a8[1];
  long long v59 = *a10;
  uint64_t v58 = *((void *)a10 + 2);
  int v57 = *((_DWORD *)a10 + 6);
  uint64_t v60 = a11[1];
  uint64_t v61 = *a11;
  __n128 v66 = *a12;
  unint64_t v64 = a12[1].n128_u64[1];
  unint64_t v65 = a12[1].n128_u64[0];
  unsigned __int8 v62 = a12[2].n128_u8[1];
  unsigned __int8 v63 = a12[2].n128_u8[0];
  char v67 = *a13;
  uint64_t v22 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a9, a1, v22);
  uint64_t v23 = (int *)type metadata accessor for MediaViewEvent.Model(0);
  uint64_t v24 = a9 + v23[5];
  uint64_t v25 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v24, a2, v25);
  uint64_t v26 = a9 + v23[6];
  *(void *)(v26 + 16) = v16;
  *(void *)(v26 + 24) = v17;
  *(unsigned char *)(v26 + 32) = v18;
  *(void *)(v26 + 40) = v19;
  *(_OWORD *)uint64_t v26 = v40;
  *(unsigned char *)(v26 + 48) = v39;
  *(void *)(v26 + 56) = v38;
  *(unsigned char *)(v26 + 64) = v20;
  *(unsigned char *)(v26 + 65) = v21;
  *(unsigned char *)(v26 + 66) = v37;
  *(unsigned char *)(v26 + 67) = v36;
  uint64_t v27 = a9 + v23[7];
  *(_OWORD *)uint64_t v27 = v44;
  *(_OWORD *)(v27 + 16) = v43;
  *(void *)(v27 + 32) = v42;
  *(void *)(v27 + 40) = v41;
  uint64_t v28 = a9 + v23[8];
  *(_OWORD *)uint64_t v28 = v46;
  *(void *)(v28 + 16) = v45;
  uint64_t v29 = a9 + v23[9];
  *(unsigned char *)uint64_t v29 = v51;
  *(void *)(v29 + 8) = v50;
  *(void *)(v29 + 16) = v49;
  *(_DWORD *)(v29 + 24) = v48;
  *(unsigned char *)(v29 + 28) = v47;
  uint64_t v30 = a9 + v23[10];
  *(void *)uint64_t v30 = v54;
  *(void *)(v30 + 8) = v53;
  *(_WORD *)(v30 + 16) = v52;
  uint64_t v31 = (void *)(a9 + v23[11]);
  *uint64_t v31 = v56;
  v31[1] = v55;
  uint64_t v32 = a9 + v23[12];
  *(_OWORD *)uint64_t v32 = v59;
  *(void *)(v32 + 16) = v58;
  *(_DWORD *)(v32 + 24) = v57;
  uint64_t v33 = (void *)(a9 + v23[13]);
  *uint64_t v33 = v61;
  v33[1] = v60;
  uint64_t v34 = (__n128 *)(a9 + v23[14]);
  __n128 result = v66;
  *uint64_t v34 = v66;
  v34[1].n128_u64[0] = v65;
  v34[1].n128_u64[1] = v64;
  v34[2].n128_u8[0] = v63;
  v34[2].n128_u8[1] = v62;
  *(unsigned char *)(a9 + v23[15]) = v67;
  return result;
}

uint64_t sub_20AB49544(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 3:
      uint64_t result = 0x74614470756F7267;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_8;
    case 5:
      uint64_t result = 0x746144616964656DLL;
      break;
    case 6:
      unsigned int v3 = 2003134838;
LABEL_8:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 7:
      uint64_t result = 0xD000000000000010;
      break;
    case 8:
      uint64_t result = 0x447972656C6C6167;
      break;
    case 9:
      uint64_t result = 0x7461446575737369;
      break;
    case 10:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 11:
      uint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB496C0()
{
  return sub_20AB49544(*v0);
}

uint64_t sub_20AB496C8(uint64_t a1)
{
  unint64_t v2 = sub_20AB49CBC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB49704(uint64_t a1)
{
  unint64_t v2 = sub_20AB49CBC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MediaViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB4A828(0, &qword_2676571D0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v43 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB49CBC();
  sub_20AB86DC0();
  LOBYTE(v45) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for MediaViewEvent.Model(0);
    LOBYTE(v45) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (long long *)(v3 + v10[6]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v45 = v12;
    *(void *)&long long v46 = v13;
    *((void *)&v46 + 1) = v14;
    LOBYTE(v47) = v15;
    *((void *)&v47 + 1) = v16;
    char v48 = v17;
    uint64_t v49 = v18;
    char v50 = v19;
    char v51 = v20;
    char v52 = v21;
    char v53 = (char)v11;
    char v44 = 2;
    sub_20A97A1AC();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[7]);
    long long v23 = v22[1];
    long long v45 = *v22;
    long long v46 = v23;
    long long v47 = v22[2];
    char v44 = 3;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v24 = (long long *)(v3 + v10[8]);
    uint64_t v25 = *((void *)v24 + 2);
    long long v45 = *v24;
    *(void *)&long long v46 = v25;
    char v44 = 4;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v26 = (char *)(v3 + v10[9]);
    char v27 = *v26;
    uint64_t v28 = *((void *)v26 + 1);
    uint64_t v29 = *((void *)v26 + 2);
    int v30 = *((_DWORD *)v26 + 6);
    LOBYTE(v26) = v26[28];
    LOBYTE(v45) = v27;
    *((void *)&v45 + 1) = v28;
    *(void *)&long long v46 = v29;
    DWORD2(v46) = v30;
    BYTE12(v46) = (_BYTE)v26;
    char v44 = 5;
    sub_20A9F7CFC();
    sub_20AB86C50();
    uint64_t v31 = (uint64_t *)(v3 + v10[10]);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    LOWORD(v31) = *((_WORD *)v31 + 8);
    *(void *)&long long v45 = v32;
    *((void *)&v45 + 1) = v33;
    LOWORD(v46) = (_WORD)v31;
    char v44 = 6;
    sub_20A986C14();
    sub_20AB86C50();
    long long v45 = *(_OWORD *)(v3 + v10[11]);
    char v44 = 7;
    sub_20A9AE6E4();
    sub_20AB86BE0();
    uint64_t v34 = (long long *)(v3 + v10[12]);
    uint64_t v35 = *((void *)v34 + 2);
    int v36 = *((_DWORD *)v34 + 6);
    long long v45 = *v34;
    *(void *)&long long v46 = v35;
    DWORD2(v46) = v36;
    char v44 = 8;
    sub_20A9B6520();
    sub_20AB86BE0();
    long long v45 = *(_OWORD *)(v3 + v10[13]);
    char v44 = 9;
    sub_20A9870B4();
    sub_20AB86BE0();
    char v37 = (long long *)(v3 + v10[14]);
    long long v38 = *v37;
    uint64_t v39 = *((void *)v37 + 2);
    uint64_t v40 = *((void *)v37 + 3);
    char v41 = *((unsigned char *)v37 + 32);
    LOBYTE(v37) = *((unsigned char *)v37 + 33);
    long long v45 = v38;
    *(void *)&long long v46 = v39;
    *((void *)&v46 + 1) = v40;
    LOBYTE(v47) = v41;
    BYTE1(v47) = (_BYTE)v37;
    char v44 = 10;
    sub_20A9862D4();
    sub_20AB86C50();
    LOBYTE(v45) = *(unsigned char *)(v3 + v10[15]);
    char v44 = 11;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB49CBC()
{
  unint64_t result = qword_2676571D8;
  if (!qword_2676571D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676571D8);
  }
  return result;
}

uint64_t MediaViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v4 = sub_20AB85FE0();
  uint64_t v59 = *(void *)(v4 - 8);
  uint64_t v60 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20AB85FC0();
  uint64_t v61 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB4A828(0, &qword_2676571E0, MEMORY[0x263F8E040]);
  uint64_t v62 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v55 - v12;
  __n128 v66 = (int *)type metadata accessor for MediaViewEvent.Model(0);
  MEMORY[0x270FA5388](v66);
  unint64_t v65 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  unsigned __int8 v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_20AB49CBC();
  int v57 = v13;
  sub_20AB86DA0();
  uint64_t v58 = v7;
  if (v2)
  {
    uint64_t v64 = v2;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    LODWORD(v62) = 0;
    int v17 = 0;
    int v76 = 0;
  }
  else
  {
    uint64_t v55 = v11;
    LOBYTE(v67) = 0;
    sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
    sub_20AB86B80();
    char v19 = v65;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v65, v9, v7);
    LOBYTE(v67) = 1;
    sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
    uint64_t v20 = v60;
    sub_20AB86B80();
    char v21 = v66;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v19[v66[5]], v6, v20);
    char v77 = 2;
    sub_20A97A154();
    sub_20AB86B80();
    long long v22 = v68;
    char v23 = v69;
    uint64_t v24 = *((void *)&v69 + 1);
    char v25 = v70;
    uint64_t v26 = v71;
    char v27 = v72;
    char v28 = v73;
    char v29 = v74;
    char v30 = v75;
    uint64_t v31 = &v19[v21[6]];
    *(_OWORD *)uint64_t v31 = v67;
    *((_OWORD *)v31 + 1) = v22;
    v31[32] = v23;
    *((void *)v31 + 5) = v24;
    v31[48] = v25;
    *((void *)v31 + 7) = v26;
    v31[64] = v27;
    v31[65] = v28;
    v31[66] = v29;
    v31[67] = v30;
    char v77 = 3;
    sub_20A9864D0();
    sub_20AB86B10();
    uint64_t v32 = &v19[v21[7]];
    long long v33 = v68;
    *(_OWORD *)uint64_t v32 = v67;
    *((_OWORD *)v32 + 1) = v33;
    *((_OWORD *)v32 + 2) = v69;
    char v77 = 4;
    sub_20A986720();
    sub_20AB86B10();
    uint64_t v34 = v68;
    uint64_t v35 = &v19[v21[8]];
    *(_OWORD *)uint64_t v35 = v67;
    *((void *)v35 + 2) = v34;
    char v77 = 5;
    sub_20A9F7CA8();
    sub_20AB86B80();
    uint64_t v36 = *((void *)&v67 + 1);
    uint64_t v37 = v68;
    int v38 = DWORD2(v68);
    char v39 = BYTE12(v68);
    uint64_t v40 = &v19[v21[9]];
    *uint64_t v40 = v67;
    *((void *)v40 + 1) = v36;
    *((void *)v40 + 2) = v37;
    *((_DWORD *)v40 + 6) = v38;
    v40[28] = v39;
    char v77 = 6;
    sub_20A986BC0();
    sub_20AB86B80();
    uint64_t v41 = *((void *)&v67 + 1);
    __int16 v42 = v68;
    uint64_t v43 = &v19[v21[10]];
    *(void *)uint64_t v43 = v67;
    *((void *)v43 + 1) = v41;
    *((_WORD *)v43 + 8) = v42;
    char v77 = 7;
    sub_20A9AE68C();
    sub_20AB86B10();
    *(_OWORD *)&v19[v21[11]] = v67;
    char v77 = 8;
    sub_20A9B64C8();
    sub_20AB86B10();
    int v76 = 1;
    uint64_t v44 = v68;
    int v45 = DWORD2(v68);
    long long v46 = &v19[v21[12]];
    *(_OWORD *)long long v46 = v67;
    *((void *)v46 + 2) = v44;
    *((_DWORD *)v46 + 6) = v45;
    char v77 = 9;
    sub_20A987060();
    sub_20AB86B10();
    uint64_t v64 = 0;
    *(_OWORD *)&v65[v66[13]] = v67;
    char v77 = 10;
    sub_20A986280();
    uint64_t v47 = v64;
    sub_20AB86B80();
    uint64_t v64 = v47;
    if (v47)
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v62);
      LODWORD(v62) = 0;
      int v17 = 1;
    }
    else
    {
      long long v48 = v68;
      char v49 = v69;
      char v50 = BYTE1(v69);
      char v51 = &v65[v66[14]];
      *(_OWORD *)char v51 = v67;
      *((_OWORD *)v51 + 1) = v48;
      v51[32] = v49;
      v51[33] = v50;
      char v77 = 11;
      sub_20A98757C();
      uint64_t v52 = v64;
      sub_20AB86B10();
      uint64_t v64 = v52;
      if (!v52)
      {
        (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v62);
        uint64_t v54 = (uint64_t)v65;
        v65[v66[15]] = v67;
        sub_20AB4A88C(v54, v56);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
        return sub_20AB4A8F0(v54);
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v62);
      int v17 = 1;
      LODWORD(v62) = 1;
    }
    char v53 = v65;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v53, v58);
    uint64_t v18 = v66;
    (*(void (**)(char *, uint64_t))(v59 + 8))(&v53[v66[5]], v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A98937C(*(void *)&v53[v18[7]], *(void *)&v53[v18[7] + 8], *(void *)&v53[v18[7] + 16]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_20A9FA9C8(*(void *)&v53[v18[11]], *(void *)&v53[v18[11] + 8]);
    if (v76)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  if (v17)
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v62 & 1) == 0) {
      return result;
    }
    goto LABEL_10;
  }
  if (!v62) {
    return result;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AB4A828(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB49CBC();
    unint64_t v7 = a3(a1, &type metadata for MediaViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB4A88C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB4A8F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB4A94C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB4A964(void *a1)
{
  return MediaViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB4A97C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653780, MEMORY[0x263F24D18], (uint64_t)qword_267657188, a1);
}

uint64_t sub_20AB4A9B4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653788, MEMORY[0x263F24DD8], (uint64_t)qword_2676571A0, a1);
}

uint64_t sub_20AB4A9EC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653790, MEMORY[0x263F24DE8], (uint64_t)qword_2676571B8, a1);
}

uint64_t getEnumTagSinglePayload for MediaViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB4AA38);
}

uint64_t sub_20AB4AA38(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_24:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_23:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_24;
  }
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  char v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a3[15];

  return v25(v27, a2, v26);
}

uint64_t storeEnumTagSinglePayload for MediaViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB4B074);
}

uint64_t sub_20AB4B074(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_24:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_23:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_24;
  }
  sub_20AA83CF8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5B8, (void (*)(void))sub_20A9B64C8, (void (*)(void))sub_20A9B6520);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_23;
  }
  sub_20AA83CF8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a4[15];

  return v27(v29, a2, a2, v28);
}

uint64_t getEnumTagSinglePayload for MediaViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB4B6BC);
}

uint64_t sub_20AB4B6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB4B7E8);
}

uint64_t sub_20AB4B7E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AB4B8FC()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MediaViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB4BAF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaViewEvent.Model.CodingKeys()
{
  return &type metadata for MediaViewEvent.Model.CodingKeys;
}

unint64_t sub_20AB4BB30()
{
  unint64_t result = qword_2676571E8;
  if (!qword_2676571E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676571E8);
  }
  return result;
}

unint64_t sub_20AB4BB88()
{
  unint64_t result = qword_2676571F0;
  if (!qword_2676571F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676571F0);
  }
  return result;
}

unint64_t sub_20AB4BBE0()
{
  unint64_t result = qword_2676571F8;
  if (!qword_2676571F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676571F8);
  }
  return result;
}

StocksAnalytics::OnboardingScreenType_optional __swiftcall OnboardingScreenType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t OnboardingScreenType.rawValue.getter()
{
  int v1 = *v0;
  unint64_t v2 = 0xD000000000000011;
  if (v1 != 1) {
    unint64_t v2 = 0xD000000000000012;
  }
  if (*v0) {
    return v2;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AB4BCEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA364CC(*a1, *a2);
}

unint64_t sub_20AB4BCFC()
{
  unint64_t result = qword_267657200;
  if (!qword_267657200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657200);
  }
  return result;
}

uint64_t sub_20AB4BD50()
{
  return sub_20AB4D480();
}

uint64_t sub_20AB4BD58()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4BDE8()
{
  return sub_20AB4EBBC();
}

StocksAnalytics::OnboardingScreenType_optional sub_20AB4BDF0(Swift::String *a1)
{
  return OnboardingScreenType.init(rawValue:)(*a1);
}

void sub_20AB4BDFC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0x800000020ABA6EE0;
  unint64_t v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000012;
    unint64_t v4 = 0x800000020ABA6F00;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AB4BE5C()
{
  return sub_20AB86750();
}

uint64_t sub_20AB4BEBC()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for OnboardingScreenType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB4BFD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingScreenType()
{
  return &type metadata for OnboardingScreenType;
}

unint64_t sub_20AB4C010()
{
  unint64_t result = qword_267657208;
  if (!qword_267657208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657208);
  }
  return result;
}

StocksAnalytics::FeedType_optional __swiftcall FeedType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t FeedType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C6F626D7973;
      break;
    case 2:
      uint64_t result = 0x756F59726F66;
      break;
    case 3:
      uint64_t result = 6385509;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB4C140(unsigned __int8 *a1, char *a2)
{
  return sub_20AA342A4(*a1, *a2);
}

unint64_t sub_20AB4C150()
{
  unint64_t result = qword_267657210;
  if (!qword_267657210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657210);
  }
  return result;
}

uint64_t sub_20AB4C1A4()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4C270()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4C324()
{
  return sub_20AB86D80();
}

StocksAnalytics::FeedType_optional sub_20AB4C3EC(Swift::String *a1)
{
  return FeedType.init(rawValue:)(*a1);
}

void sub_20AB4C3F8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x6C6F626D7973;
      goto LABEL_3;
    case 2:
      *a1 = 0x756F59726F66;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 6385509;
      a1[1] = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20AB4C484()
{
  return sub_20AB86750();
}

uint64_t sub_20AB4C4E4()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for FeedType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB4C600);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedType()
{
  return &type metadata for FeedType;
}

unint64_t sub_20AB4C638()
{
  unint64_t result = qword_26AC514E8;
  if (!qword_26AC514E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514E8);
  }
  return result;
}

uint64_t sub_20AB4C68C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4C788()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4C87C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4C950()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4CA7C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4CB98()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4CC6C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4CD74()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4CE58()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4CF5C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4D048()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4D150()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4D264()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4D378()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4D480()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4D524()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4D608()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4D780()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4D8A4()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4D9BC()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4DB1C()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4DC70()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4DDF8()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4DF64()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4E0AC()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4E204()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4E31C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4E42C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4E59C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4E6C4()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4E7F8()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4E8C8()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4E9B8()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4EABC()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4EBBC()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4EC5C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4ED60()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4EE64()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4EF4C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4F02C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4F10C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4F1DC()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4F2EC()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB4F3E4()
{
  return sub_20AB86D80();
}

StocksAnalytics::SymbolChartDisplayErrorCode_optional __swiftcall SymbolChartDisplayErrorCode.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t SymbolChartDisplayErrorCode.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x7245726576726573;
      break;
    case 3:
      unint64_t result = 0x617461446F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB4F5E8(unsigned __int8 *a1, char *a2)
{
  return sub_20AA34EDC(*a1, *a2);
}

unint64_t sub_20AB4F5F8()
{
  unint64_t result = qword_267657218;
  if (!qword_267657218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657218);
  }
  return result;
}

uint64_t sub_20AB4F64C()
{
  return sub_20AB4D524();
}

uint64_t sub_20AB4F654()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB4F720()
{
  return sub_20AB4EF4C();
}

StocksAnalytics::SymbolChartDisplayErrorCode_optional sub_20AB4F728(Swift::String *a1)
{
  return SymbolChartDisplayErrorCode.init(rawValue:)(*a1);
}

void sub_20AB4F734(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  unint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x800000020ABA6F20;
      unint64_t v3 = 0xD000000000000012;
      goto LABEL_3;
    case 2:
      *a1 = 0x7245726576726573;
      a1[1] = 0xEB00000000726F72;
      break;
    case 3:
      *a1 = 0x617461446F6ELL;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20AB4F7D8()
{
  return sub_20AB86750();
}

uint64_t sub_20AB4F838()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for SymbolChartDisplayErrorCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB4F954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartDisplayErrorCode()
{
  return &type metadata for SymbolChartDisplayErrorCode;
}

unint64_t sub_20AB4F98C()
{
  unint64_t result = qword_267657220;
  if (!qword_267657220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657220);
  }
  return result;
}

uint64_t static BadgeData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void BadgeData.badgeType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *BadgeData.badgeType.setter(unsigned char *result)
{
  *int v1 = *result;
  return result;
}

uint64_t (*BadgeData.badgeType.modify())()
{
  return nullsub_1;
}

void BadgeData.storyType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *BadgeData.storyType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*BadgeData.storyType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::BadgeData __swiftcall BadgeData.init(badgeType:storyType:)(StocksAnalytics::BadgeType badgeType, StocksAnalytics::StoryType_optional storyType)
{
  char v3 = *(unsigned char *)storyType.value;
  *unint64_t v2 = *(unsigned char *)badgeType;
  v2[1] = v3;
  result.badgeType = badgeType;
  return result;
}

uint64_t sub_20AB4FA6C()
{
  if (*v0) {
    return 0x70795479726F7473;
  }
  else {
    return 0x7079546567646162;
  }
}

uint64_t sub_20AB4FAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB50424(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB4FACC(uint64_t a1)
{
  unint64_t v2 = sub_20AB4FCF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB4FB08(uint64_t a1)
{
  unint64_t v2 = sub_20AB4FCF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BadgeData.encode(to:)(void *a1)
{
  sub_20AB4FFD0(0, &qword_26AC51960, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  char v9 = *v1;
  int v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB4FCF0();
  sub_20AB86DC0();
  char v16 = v9;
  char v15 = 0;
  sub_20AB4FD44();
  sub_20AB86C50();
  if (!v2)
  {
    char v14 = v12;
    char v13 = 1;
    sub_20AB4FD98();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AB4FCF0()
{
  unint64_t result = qword_26AC51570;
  if (!qword_26AC51570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51570);
  }
  return result;
}

unint64_t sub_20AB4FD44()
{
  unint64_t result = qword_26AC51598;
  if (!qword_26AC51598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51598);
  }
  return result;
}

unint64_t sub_20AB4FD98()
{
  unint64_t result = qword_26AC51658;
  if (!qword_26AC51658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51658);
  }
  return result;
}

uint64_t BadgeData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AB4FFD0(0, &qword_26AC52D40, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB4FCF0();
  sub_20AB86DA0();
  if (!v2)
  {
    char v16 = 0;
    sub_20AB50034();
    sub_20AB86B80();
    char v10 = v17;
    char v14 = 1;
    sub_20AB50088();
    sub_20AB86B10();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB4FFD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB4FCF0();
    unint64_t v7 = a3(a1, &type metadata for BadgeData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB50034()
{
  unint64_t result = qword_26AC52D48;
  if (!qword_26AC52D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52D48);
  }
  return result;
}

unint64_t sub_20AB50088()
{
  unint64_t result = qword_26AC52D50;
  if (!qword_26AC52D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52D50);
  }
  return result;
}

uint64_t sub_20AB500E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return BadgeData.init(from:)(a1, a2);
}

uint64_t sub_20AB500FC(void *a1)
{
  return BadgeData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for BadgeData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65283 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65283 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 253;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB501E0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BadgeData()
{
  return &type metadata for BadgeData;
}

unsigned char *storeEnumTagSinglePayload for BadgeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB502E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BadgeData.CodingKeys()
{
  return &type metadata for BadgeData.CodingKeys;
}

unint64_t sub_20AB50320()
{
  unint64_t result = qword_267657228;
  if (!qword_267657228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657228);
  }
  return result;
}

unint64_t sub_20AB50378()
{
  unint64_t result = qword_26AC51580;
  if (!qword_26AC51580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51580);
  }
  return result;
}

unint64_t sub_20AB503D0()
{
  unint64_t result = qword_26AC51578;
  if (!qword_26AC51578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51578);
  }
  return result;
}

uint64_t sub_20AB50424(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7079546567646162 && a2 == 0xE900000000000065;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70795479726F7473 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void __swiftcall AmsMarketingItemData.init(amsPurchaseID:campaignID:isPaidBundleViaOffer:)(StocksAnalytics::AmsMarketingItemData *__return_ptr retstr, Swift::String_optional amsPurchaseID, Swift::String_optional campaignID, Swift::Bool_optional isPaidBundleViaOffer)
{
  retstr->amsPurchaseID = amsPurchaseID;
  retstr->campaignID = campaignID;
  retstr->isPaidBundleViaOffer = isPaidBundleViaOffer;
}

uint64_t static AmsMarketingItemData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AmsMarketingItemData.amsPurchaseID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AmsMarketingItemData.amsPurchaseID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AmsMarketingItemData.amsPurchaseID.modify())()
{
  return nullsub_1;
}

uint64_t AmsMarketingItemData.campaignID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AmsMarketingItemData.campaignID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AmsMarketingItemData.campaignID.modify())()
{
  return nullsub_1;
}

uint64_t AmsMarketingItemData.isPaidBundleViaOffer.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t AmsMarketingItemData.isPaidBundleViaOffer.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*AmsMarketingItemData.isPaidBundleViaOffer.modify())()
{
  return nullsub_1;
}

uint64_t sub_20AB50688()
{
  unint64_t v1 = 0x6E676961706D6163;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6863727550736D61;
  }
}

uint64_t sub_20AB506F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB51154(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB50720(uint64_t a1)
{
  unint64_t v2 = sub_20AB50958();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB5075C(uint64_t a1)
{
  unint64_t v2 = sub_20AB50958();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AmsMarketingItemData.encode(to:)(void *a1)
{
  sub_20AB50C1C(0, &qword_26AC518D8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  void v11[2] = v8;
  int v12 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB50958();
  sub_20AB86DC0();
  char v15 = 0;
  uint64_t v9 = v11[3];
  sub_20AB86BC0();
  if (!v9)
  {
    char v14 = 1;
    sub_20AB86BC0();
    char v13 = 2;
    sub_20AB86BD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB50958()
{
  unint64_t result = qword_26AC50008;
  if (!qword_26AC50008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50008);
  }
  return result;
}

uint64_t AmsMarketingItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AB50C1C(0, &qword_267657230, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB50958();
  sub_20AB86DA0();
  if (!v2)
  {
    char v22 = 0;
    uint64_t v10 = sub_20AB86AF0();
    uint64_t v13 = v12;
    uint64_t v19 = v10;
    char v21 = 1;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_20AB86AF0();
    uint64_t v16 = v15;
    uint64_t v18 = v14;
    char v20 = 2;
    swift_bridgeObjectRetain();
    char v17 = sub_20AB86B00();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(void *)a2 = v19;
    *(void *)(a2 + 8) = v13;
    *(void *)(a2 + 16) = v18;
    *(void *)(a2 + 24) = v16;
    *(unsigned char *)(a2 + 32) = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AB50C1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB50958();
    unint64_t v7 = a3(a1, &type metadata for AmsMarketingItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB50C84()
{
  unint64_t result = qword_26AC50030;
  if (!qword_26AC50030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50030);
  }
  return result;
}

unint64_t sub_20AB50CDC()
{
  unint64_t result = qword_26AC50028;
  if (!qword_26AC50028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50028);
  }
  return result;
}

uint64_t sub_20AB50D30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AmsMarketingItemData.init(from:)(a1, a2);
}

uint64_t sub_20AB50D48(void *a1)
{
  return AmsMarketingItemData.encode(to:)(a1);
}

uint64_t initializeWithCopy for AmsMarketingItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AmsMarketingItemData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AmsMarketingItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AmsMarketingItemData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AmsMarketingItemData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AmsMarketingItemData()
{
  return &type metadata for AmsMarketingItemData;
}

unsigned char *storeEnumTagSinglePayload for AmsMarketingItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB51014);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AmsMarketingItemData.CodingKeys()
{
  return &type metadata for AmsMarketingItemData.CodingKeys;
}

unint64_t sub_20AB51050()
{
  unint64_t result = qword_267657238;
  if (!qword_267657238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657238);
  }
  return result;
}

unint64_t sub_20AB510A8()
{
  unint64_t result = qword_26AC50018;
  if (!qword_26AC50018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50018);
  }
  return result;
}

unint64_t sub_20AB51100()
{
  unint64_t result = qword_26AC50010;
  if (!qword_26AC50010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50010);
  }
  return result;
}

uint64_t sub_20AB51154(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6863727550736D61 && a2 == 0xED00004449657361;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEA00000000004449 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA95B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20AB512D8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC50038, MEMORY[0x263F24D10]);
}

uint64_t static AppSessionStartEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4E150, MEMORY[0x263F24D18], (uint64_t)qword_26AC50038, a1);
}

uint64_t static AppSessionStartEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB51340(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC50050, MEMORY[0x263F24DC8]);
}

uint64_t static AppSessionStartEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4E158, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50050, a1);
}

uint64_t sub_20AB513A0()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267657240);
  __swift_project_value_buffer(v0, (uint64_t)qword_267657240);
  return sub_20AB85D30();
}

uint64_t static AppSessionStartEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC51F98, MEMORY[0x263F24DE8], (uint64_t)qword_267657240, a1);
}

uint64_t AppSessionStartEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AppSessionStartEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AppSessionStartEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionStartEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 20);
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AppSessionStartEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC50120);
}

uint64_t AppSessionStartEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 20);
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.watchedSymbolListData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionStartEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 24);
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AppSessionStartEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 24);
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionStartEvent.watchlistSummaryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 28);
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB518E4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t AppSessionStartEvent.watchlistSummaryData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppSessionStartEvent(0) + 28);
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AppSessionStartEvent.watchlistSummaryData.modify())()
{
  return nullsub_1;
}

uint64_t AppSessionStartEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  started = (int *)type metadata accessor for AppSessionStartEvent(0);
  uint64_t v5 = a1 + started[5];
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + started[6];
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + started[7];
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t AppSessionStartEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AppSessionStartEvent.Model.watchedSymbolListData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 20));

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AppSessionStartEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC50080);
}

uint64_t AppSessionStartEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for AppSessionStartEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AppSessionStartEvent.Model.watchlistSummaryData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for AppSessionStartEvent.Model(0) + 28));

  return swift_bridgeObjectRetain();
}

int *AppSessionStartEvent.Model.init(eventData:watchedSymbolListData:orientationData:watchlistSummaryData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, __int16 *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a2;
  __int16 v8 = *a3;
  uint64_t v9 = *a4;
  uint64_t v10 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t result = (int *)type metadata accessor for AppSessionStartEvent.Model(0);
  *(void *)(a5 + result[5]) = v7;
  *(_WORD *)(a5 + result[6]) = v8;
  *(void *)(a5 + result[7]) = v9;
  return result;
}

unint64_t sub_20AB51DE4()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB51E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB544D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB51EB8(uint64_t a1)
{
  unint64_t v2 = sub_20AB52188();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB51EF4(uint64_t a1)
{
  unint64_t v2 = sub_20AB52188();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppSessionStartEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB525FC(0, &qword_267657258, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB52188();
  sub_20AB86DC0();
  LOBYTE(v13) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    started = (int *)type metadata accessor for AppSessionStartEvent.Model(0);
    uint64_t v13 = *(void *)(v3 + started[5]);
    HIBYTE(v12) = 1;
    sub_20A992474();
    sub_20AB86C50();
    LOWORD(v13) = *(_WORD *)(v3 + started[6]);
    HIBYTE(v12) = 2;
    sub_20A97C86C();
    sub_20AB86C50();
    uint64_t v13 = *(void *)(v3 + started[7]);
    HIBYTE(v12) = 3;
    sub_20AA423EC();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB52188()
{
  unint64_t result = qword_26AC50068;
  if (!qword_26AC50068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50068);
  }
  return result;
}

uint64_t AppSessionStartEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v20 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB525FC(0, &qword_26AC517A0, MEMORY[0x263F8E040]);
  uint64_t v22 = v6;
  uint64_t v19 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v17 - v7;
  started = (int *)type metadata accessor for AppSessionStartEvent.Model(0);
  MEMORY[0x270FA5388](started);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB52188();
  uint64_t v23 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v17 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v20;
  LOBYTE(v25) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v21;
  uint64_t v15 = v22;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v24 = 1;
  sub_20A992420();
  sub_20AB86B80();
  *(void *)(v12 + started[5]) = v25;
  char v24 = 2;
  sub_20A97C818();
  sub_20AB86B80();
  *(_WORD *)(v12 + started[6]) = v25;
  char v24 = 3;
  sub_20AA42394();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v15);
  *(void *)(v12 + started[7]) = v25;
  sub_20AB52660(v12, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_20AB526C4(v12);
}

void sub_20AB525FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB52188();
    unint64_t v7 = a3(a1, &type metadata for AppSessionStartEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB52660(uint64_t a1, uint64_t a2)
{
  uint64_t started = type metadata accessor for AppSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 16))(a2, a1, started);
  return a2;
}

uint64_t sub_20AB526C4(uint64_t a1)
{
  uint64_t started = type metadata accessor for AppSessionStartEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(started - 8) + 8))(a1, started);
  return a1;
}

uint64_t sub_20AB52720@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppSessionStartEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB52738(void *a1)
{
  return AppSessionStartEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB52750@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4E150, MEMORY[0x263F24D18], (uint64_t)qword_26AC50038, a1);
}

uint64_t sub_20AB52788@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4E158, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50050, a1);
}

uint64_t sub_20AB527C0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC51F98, MEMORY[0x263F24DE8], (uint64_t)qword_267657240, a1);
}

uint64_t sub_20AB527F8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionStartEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for AppSessionStartEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for AppSessionStartEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB53600);
}

uint64_t sub_20AB53600(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB53854);
}

uint64_t sub_20AB53854(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_20AB518E4(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_20AB518E4(0, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_20AB53AA0()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB518E4(319, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
    if (v1 <= 0x3F)
    {
      sub_20AB518E4(319, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
      if (v2 <= 0x3F)
      {
        sub_20AB518E4(319, &qword_26AC4E658, (void (*)(void))sub_20AA42394, (void (*)(void))sub_20AA423EC);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for AppSessionStartEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v8) = *(_WORD *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AppSessionStartEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB54098);
}

uint64_t sub_20AB54098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AppSessionStartEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB5416C);
}

uint64_t sub_20AB5416C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AB54228()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppSessionStartEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB54398);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppSessionStartEvent.Model.CodingKeys()
{
  return &type metadata for AppSessionStartEvent.Model.CodingKeys;
}

unint64_t sub_20AB543D4()
{
  unint64_t result = qword_267657260;
  if (!qword_267657260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657260);
  }
  return result;
}

unint64_t sub_20AB5442C()
{
  unint64_t result = qword_26AC50078;
  if (!qword_26AC50078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50078);
  }
  return result;
}

unint64_t sub_20AB54484()
{
  unint64_t result = qword_26AC50070;
  if (!qword_26AC50070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50070);
  }
  return result;
}

uint64_t sub_20AB544D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7320 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA8FF0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t static EarningsData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t EarningsData.countOfDaysUntilEarnings.getter()
{
  return *v0;
}

uint64_t EarningsData.countOfDaysUntilEarnings.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*EarningsData.countOfDaysUntilEarnings.modify())()
{
  return nullsub_1;
}

uint64_t EarningsData.init(countOfDaysUntilEarnings:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t sub_20AB546F8()
{
  return 0xD000000000000018;
}

uint64_t sub_20AB54714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB54E8C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AB54740(uint64_t a1)
{
  unint64_t v2 = sub_20AB54900();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB5477C(uint64_t a1)
{
  unint64_t v2 = sub_20AB54900();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EarningsData.encode(to:)(void *a1)
{
  sub_20AB54AD4(0, &qword_26AC51840, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB54900();
  sub_20AB86DC0();
  sub_20AB86C60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AB54900()
{
  unint64_t result = qword_26AC4ECA0;
  if (!qword_26AC4ECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECA0);
  }
  return result;
}

uint64_t EarningsData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_20AB54AD4(0, &qword_267657268, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB54900();
  sub_20AB86DA0();
  if (!v2)
  {
    int v10 = sub_20AB86B90();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB54AD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB54900();
    unint64_t v7 = a3(a1, &type metadata for EarningsData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB54B40@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return EarningsData.init(from:)(a1, a2);
}

uint64_t sub_20AB54B58(void *a1)
{
  sub_20AB54AD4(0, &qword_26AC51840, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB54900();
  sub_20AB86DC0();
  sub_20AB86C60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for EarningsData()
{
  return &type metadata for EarningsData;
}

unsigned char *storeEnumTagSinglePayload for EarningsData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB54D4CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EarningsData.CodingKeys()
{
  return &type metadata for EarningsData.CodingKeys;
}

unint64_t sub_20AB54D88()
{
  unint64_t result = qword_267657270;
  if (!qword_267657270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657270);
  }
  return result;
}

unint64_t sub_20AB54DE0()
{
  unint64_t result = qword_26AC4ECB0;
  if (!qword_26AC4ECB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECB0);
  }
  return result;
}

unint64_t sub_20AB54E38()
{
  unint64_t result = qword_26AC4ECA8;
  if (!qword_26AC4ECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECA8);
  }
  return result;
}

uint64_t sub_20AB54E8C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x800000020ABA9850)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

StocksAnalytics::AppData __swiftcall AppData.init(appVersion:appBuildNumber:)(Swift::String appVersion, Swift::String appBuildNumber)
{
  *char v2 = appVersion;
  v2[1] = appBuildNumber;
  result.appBuildNumber = appBuildNumber;
  result.appVersion = appVersion;
  return result;
}

uint64_t static AppData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AppData.appVersion.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppData.appVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *char v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AppData.appVersion.modify())()
{
  return nullsub_1;
}

uint64_t AppData.appBuildNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppData.appBuildNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AppData.appBuildNumber.modify())()
{
  return nullsub_1;
}

uint64_t sub_20AB55038()
{
  if (*v0) {
    return 0x646C697542707061;
  }
  else {
    return 0x6973726556707061;
  }
}

uint64_t sub_20AB55084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB557D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB550AC(uint64_t a1)
{
  unint64_t v2 = sub_20AB552B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB550E8(uint64_t a1)
{
  unint64_t v2 = sub_20AB552B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppData.encode(to:)(void *a1)
{
  sub_20AB5551C(0, &qword_26AC51938, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  void v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB552B0();
  sub_20AB86DC0();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_20AB86C10();
  if (!v9)
  {
    char v12 = 1;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB552B0()
{
  unint64_t result = qword_26AC51458;
  if (!qword_26AC51458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51458);
  }
  return result;
}

uint64_t AppData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AB5551C(0, &qword_26AC517E0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB552B0();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  char v20 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_20AB86B40();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v19 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AB5551C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB552B0();
    unint64_t v7 = a3(a1, &type metadata for AppData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB55588@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppData.init(from:)(a1, a2);
}

uint64_t sub_20AB555A0(void *a1)
{
  return AppData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for AppData()
{
  return &type metadata for AppData;
}

unsigned char *storeEnumTagSinglePayload for AppData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB55694);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppData.CodingKeys()
{
  return &type metadata for AppData.CodingKeys;
}

unint64_t sub_20AB556D0()
{
  unint64_t result = qword_267657278;
  if (!qword_267657278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657278);
  }
  return result;
}

unint64_t sub_20AB55728()
{
  unint64_t result = qword_26AC4E220;
  if (!qword_26AC4E220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E220);
  }
  return result;
}

unint64_t sub_20AB55780()
{
  unint64_t result = qword_26AC51460;
  if (!qword_26AC51460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51460);
  }
  return result;
}

uint64_t sub_20AB557D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6973726556707061 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C697542707061 && a2 == 0xEE007265626D754ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static EngagementData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void EngagementData.audioEngagementStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *EngagementData.audioEngagementStatus.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*EngagementData.audioEngagementStatus.modify())()
{
  return nullsub_1;
}

StocksAnalytics::EngagementData __swiftcall EngagementData.init(audioEngagementStatus:)(StocksAnalytics::EngagementData audioEngagementStatus)
{
  *uint64_t v1 = *(unsigned char *)audioEngagementStatus.audioEngagementStatus;
  return audioEngagementStatus;
}

unint64_t sub_20AB55944()
{
  return 0xD000000000000015;
}

uint64_t sub_20AB55960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB56218(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AB5598C(uint64_t a1)
{
  unint64_t v2 = sub_20AB55B60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB559C8(uint64_t a1)
{
  unint64_t v2 = sub_20AB55B60();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EngagementData.encode(to:)(void *a1)
{
  sub_20AB55DA0(0, &qword_267657280, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB55B60();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AB55BB4();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB55B60()
{
  unint64_t result = qword_267657288;
  if (!qword_267657288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657288);
  }
  return result;
}

unint64_t sub_20AB55BB4()
{
  unint64_t result = qword_267657290;
  if (!qword_267657290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657290);
  }
  return result;
}

uint64_t EngagementData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AB55DA0(0, &qword_267657298, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB55B60();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AB55E04();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB55DA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB55B60();
    unint64_t v7 = a3(a1, &type metadata for EngagementData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB55E04()
{
  unint64_t result = qword_2676572A0;
  if (!qword_2676572A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676572A0);
  }
  return result;
}

unint64_t sub_20AB55E5C()
{
  unint64_t result = qword_2676572A8;
  if (!qword_2676572A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676572A8);
  }
  return result;
}

unint64_t sub_20AB55EB4()
{
  unint64_t result = qword_2676572B0;
  if (!qword_2676572B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676572B0);
  }
  return result;
}

uint64_t sub_20AB55F08@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return EngagementData.init(from:)(a1, a2);
}

uint64_t sub_20AB55F20(void *a1)
{
  return EngagementData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for EngagementData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB56004);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementData()
{
  return &type metadata for EngagementData;
}

unsigned char *storeEnumTagSinglePayload for EngagementData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AB560D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EngagementData.CodingKeys()
{
  return &type metadata for EngagementData.CodingKeys;
}

unint64_t sub_20AB56114()
{
  unint64_t result = qword_2676572B8;
  if (!qword_2676572B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676572B8);
  }
  return result;
}

unint64_t sub_20AB5616C()
{
  unint64_t result = qword_2676572C0;
  if (!qword_2676572C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676572C0);
  }
  return result;
}

unint64_t sub_20AB561C4()
{
  unint64_t result = qword_2676572C8;
  if (!qword_2676572C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676572C8);
  }
  return result;
}

uint64_t sub_20AB56218(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA9870)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t dispatch thunk of AppIntentExecutionTypeProviderType.appIntentType(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t static ResultData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void ResultData.resultType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ResultData.resultType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*ResultData.resultType.modify())()
{
  return nullsub_1;
}

uint64_t ResultData.failureReasonCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResultData.failureReasonCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ResultData.failureReasonCode.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ResultData __swiftcall ResultData.init(resultType:failureReasonCode:)(StocksAnalytics::ResultType resultType, Swift::String_optional failureReasonCode)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)resultType;
  *(Swift::String_optional *)(v2 + 8) = failureReasonCode;
  result.failureReasonCode = failureReasonCode;
  result.resultType = resultType;
  return result;
}

uint64_t sub_20AB5638C()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x7954746C75736572;
  }
}

uint64_t sub_20AB563D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB56C64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB563F8(uint64_t a1)
{
  unint64_t v2 = sub_20AB5660C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB56434(uint64_t a1)
{
  unint64_t v2 = sub_20AB5660C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResultData.encode(to:)(void *a1)
{
  sub_20AB568A8(0, &qword_2676572D0, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v12 - v7;
  char v9 = *v1;
  uint64_t v10 = *((void *)v1 + 1);
  v12[0] = *((void *)v1 + 2);
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB5660C();
  sub_20AB86DC0();
  char v15 = v9;
  char v14 = 0;
  sub_20AB56660();
  sub_20AB86C50();
  if (!v2)
  {
    char v13 = 1;
    sub_20AB86BC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AB5660C()
{
  unint64_t result = qword_2676572D8;
  if (!qword_2676572D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676572D8);
  }
  return result;
}

unint64_t sub_20AB56660()
{
  unint64_t result = qword_2676572E0;
  if (!qword_2676572E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676572E0);
  }
  return result;
}

uint64_t ResultData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AB568A8(0, &qword_2676572E8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB5660C();
  sub_20AB86DA0();
  if (!v2)
  {
    char v17 = 0;
    sub_20AB5690C();
    sub_20AB86B80();
    char v10 = v18;
    char v16 = 1;
    uint64_t v12 = sub_20AB86AF0();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_20AB568A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB5660C();
    unint64_t v7 = a3(a1, &type metadata for ResultData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB5690C()
{
  unint64_t result = qword_2676572F0;
  if (!qword_2676572F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676572F0);
  }
  return result;
}

uint64_t sub_20AB56968@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ResultData.init(from:)(a1, a2);
}

uint64_t sub_20AB56980(void *a1)
{
  return ResultData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for ResultData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ResultData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultData()
{
  return &type metadata for ResultData;
}

unsigned char *storeEnumTagSinglePayload for ResultData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB56B24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultData.CodingKeys()
{
  return &type metadata for ResultData.CodingKeys;
}

unint64_t sub_20AB56B60()
{
  unint64_t result = qword_2676572F8;
  if (!qword_2676572F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676572F8);
  }
  return result;
}

unint64_t sub_20AB56BB8()
{
  unint64_t result = qword_267657300;
  if (!qword_267657300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657300);
  }
  return result;
}

unint64_t sub_20AB56C10()
{
  unint64_t result = qword_267657308;
  if (!qword_267657308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657308);
  }
  return result;
}

uint64_t sub_20AB56C64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7954746C75736572 && a2 == 0xEA00000000006570;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA9890)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static SymbolPriceData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t SymbolPriceData.quoteAge.getter()
{
  return *v0;
}

uint64_t SymbolPriceData.quoteAge.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*SymbolPriceData.quoteAge.modify())()
{
  return nullsub_1;
}

uint64_t SymbolPriceData.sparklineAge.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t SymbolPriceData.sparklineAge.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*SymbolPriceData.sparklineAge.modify())()
{
  return nullsub_1;
}

uint64_t SymbolPriceData.init(quoteAge:sparklineAge:)@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_20AB56DD0()
{
  if (*v0) {
    return 0x6E696C6B72617073;
  }
  else {
    return 0x65674165746F7571;
  }
}

uint64_t sub_20AB56E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB574EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB56E3C(uint64_t a1)
{
  unint64_t v2 = sub_20AB57030();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB56E78(uint64_t a1)
{
  unint64_t v2 = sub_20AB57030();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolPriceData.encode(to:)(void *a1)
{
  sub_20AB57234(0, &qword_26AC51888, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - v7;
  int v11 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB57030();
  sub_20AB86DC0();
  char v13 = 0;
  sub_20AB86C60();
  if (!v2)
  {
    char v12 = 1;
    sub_20AB86C60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AB57030()
{
  unint64_t result = qword_26AC4F2B8;
  if (!qword_26AC4F2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F2B8);
  }
  return result;
}

uint64_t SymbolPriceData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_20AB57234(0, &qword_267657310, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB57030();
  sub_20AB86DA0();
  if (!v2)
  {
    char v15 = 0;
    int v10 = sub_20AB86B90();
    char v14 = 1;
    int v12 = sub_20AB86B90();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB57234(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB57030();
    unint64_t v7 = a3(a1, &type metadata for SymbolPriceData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB572A0@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return SymbolPriceData.init(from:)(a1, a2);
}

uint64_t sub_20AB572B8(void *a1)
{
  return SymbolPriceData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SymbolPriceData()
{
  return &type metadata for SymbolPriceData;
}

unsigned char *storeEnumTagSinglePayload for SymbolPriceData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB573ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolPriceData.CodingKeys()
{
  return &type metadata for SymbolPriceData.CodingKeys;
}

unint64_t sub_20AB573E8()
{
  unint64_t result = qword_267657318;
  if (!qword_267657318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657318);
  }
  return result;
}

unint64_t sub_20AB57440()
{
  unint64_t result = qword_26AC4F2C8;
  if (!qword_26AC4F2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F2C8);
  }
  return result;
}

unint64_t sub_20AB57498()
{
  unint64_t result = qword_26AC4F2C0;
  if (!qword_26AC4F2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F2C0);
  }
  return result;
}

uint64_t sub_20AB574EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65674165746F7571 && a2 == 0xE800000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E696C6B72617073 && a2 == 0xEC00000065674165)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

StocksAnalytics::CalendarAccessStatus_optional __swiftcall CalendarAccessStatus.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t CalendarAccessStatus.rawValue.getter()
{
  if (*v0) {
    return 0x776F6C6C61;
  }
  else {
    return 2037278052;
  }
}

uint64_t sub_20AB5768C(char *a1, char *a2)
{
  return sub_20AA367D4(*a1, *a2);
}

unint64_t sub_20AB5769C()
{
  unint64_t result = qword_267657320;
  if (!qword_267657320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657320);
  }
  return result;
}

uint64_t sub_20AB576F0()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB57768()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB577CC()
{
  return sub_20AB86D80();
}

StocksAnalytics::CalendarAccessStatus_optional sub_20AB57840(Swift::String *a1)
{
  return CalendarAccessStatus.init(rawValue:)(*a1);
}

void sub_20AB5784C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 2037278052;
  if (*v1) {
    uint64_t v2 = 0x776F6C6C61;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20AB57880()
{
  return sub_20AB86750();
}

uint64_t sub_20AB578E0()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for CalendarAccessStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB579FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarAccessStatus()
{
  return &type metadata for CalendarAccessStatus;
}

unint64_t sub_20AB57A34()
{
  unint64_t result = qword_267657328;
  if (!qword_267657328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657328);
  }
  return result;
}

uint64_t static SubscribeButtonContextData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void SubscribeButtonContextData.subscribeButtonLocation.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *SubscribeButtonContextData.subscribeButtonLocation.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*SubscribeButtonContextData.subscribeButtonLocation.modify())()
{
  return nullsub_1;
}

void SubscribeButtonContextData.subscribeButtonTargetType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *SubscribeButtonContextData.subscribeButtonTargetType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*SubscribeButtonContextData.subscribeButtonTargetType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SubscribeButtonContextData __swiftcall SubscribeButtonContextData.init(subscribeButtonLocation:subscribeButtonTargetType:)(StocksAnalytics::SubscribeButtonLocation subscribeButtonLocation, StocksAnalytics::SubscribeButtonTargetType subscribeButtonTargetType)
{
  char v3 = *(unsigned char *)subscribeButtonTargetType;
  *uint64_t v2 = *(unsigned char *)subscribeButtonLocation;
  v2[1] = v3;
  result.subscribeButtonLocation = subscribeButtonLocation;
  return result;
}

unint64_t sub_20AB57B14()
{
  if (*v0) {
    return 0xD000000000000019;
  }
  else {
    return 0xD000000000000017;
  }
}

uint64_t sub_20AB57B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB5857C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB57B7C(uint64_t a1)
{
  unint64_t v2 = sub_20AB57DA0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB57BB8(uint64_t a1)
{
  unint64_t v2 = sub_20AB57DA0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SubscribeButtonContextData.encode(to:)(void *a1)
{
  sub_20AB58080(0, &qword_267657330, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  char v9 = *v1;
  int v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB57DA0();
  sub_20AB86DC0();
  char v16 = v9;
  char v15 = 0;
  sub_20AB57DF4();
  sub_20AB86C50();
  if (!v2)
  {
    char v14 = v12;
    char v13 = 1;
    sub_20AB57E48();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AB57DA0()
{
  unint64_t result = qword_267657338;
  if (!qword_267657338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657338);
  }
  return result;
}

unint64_t sub_20AB57DF4()
{
  unint64_t result = qword_267657340;
  if (!qword_267657340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657340);
  }
  return result;
}

unint64_t sub_20AB57E48()
{
  unint64_t result = qword_267657348;
  if (!qword_267657348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657348);
  }
  return result;
}

uint64_t SubscribeButtonContextData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AB58080(0, &qword_267657350, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB57DA0();
  sub_20AB86DA0();
  if (!v2)
  {
    char v16 = 0;
    sub_20AB580E4();
    sub_20AB86B80();
    char v10 = v17;
    char v14 = 1;
    sub_20AB58138();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AB58080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB57DA0();
    unint64_t v7 = a3(a1, &type metadata for SubscribeButtonContextData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AB580E4()
{
  unint64_t result = qword_267657358;
  if (!qword_267657358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657358);
  }
  return result;
}

unint64_t sub_20AB58138()
{
  unint64_t result = qword_267657360;
  if (!qword_267657360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657360);
  }
  return result;
}

unint64_t sub_20AB58190()
{
  unint64_t result = qword_267657368;
  if (!qword_267657368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657368);
  }
  return result;
}

unint64_t sub_20AB581E8()
{
  unint64_t result = qword_267657370;
  if (!qword_267657370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657370);
  }
  return result;
}

uint64_t sub_20AB5823C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SubscribeButtonContextData.init(from:)(a1, a2);
}

uint64_t sub_20AB58254(void *a1)
{
  return SubscribeButtonContextData.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonContextData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65283 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65283 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 253;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB58338);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonContextData()
{
  return &type metadata for SubscribeButtonContextData;
}

unsigned char *storeEnumTagSinglePayload for SubscribeButtonContextData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB5843CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonContextData.CodingKeys()
{
  return &type metadata for SubscribeButtonContextData.CodingKeys;
}

unint64_t sub_20AB58478()
{
  unint64_t result = qword_267657378;
  if (!qword_267657378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657378);
  }
  return result;
}

unint64_t sub_20AB584D0()
{
  unint64_t result = qword_267657380;
  if (!qword_267657380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657380);
  }
  return result;
}

unint64_t sub_20AB58528()
{
  unint64_t result = qword_267657388;
  if (!qword_267657388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657388);
  }
  return result;
}

uint64_t sub_20AB5857C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000017 && a2 == 0x800000020ABA98B0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000020ABA98D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AB58668@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for HeartbeatEventService();
  uint64_t result = sub_20AB860C0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t result = sub_20AB58C34(&qword_26AC51D68);
    *a2 = v4;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20AB586E8()
{
  uint64_t v0 = sub_20AB863B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeartbeatEventService();
  sub_20AB86330();
  sub_20AB86050();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D000], v0);
  sub_20AB86070();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_20AB58854(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3F8);
  uint64_t result = sub_20AB860D0();
  if (!v8)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC4E3F0);
  uint64_t result = sub_20AB860D0();
  if (!v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA65BE0(0, &qword_26AC51E30);
  uint64_t result = sub_20AB860D0();
  if (v4)
  {
    type metadata accessor for HeartbeatEventService();
    swift_allocObject();
    return sub_20AB62764(&v7, &v5, &v3);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20AB58998(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20AA65BE0(0, &qword_26AC4E750);
  uint64_t result = sub_20AB860D0();
  if (v4)
  {
    sub_20A9D7BA0(&v3, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_20AB58C34(&qword_26AC51D60);
    sub_20AB86350();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for HeartbeatAssembly()
{
  return self;
}

uint64_t sub_20AB58AA4()
{
  uint64_t v0 = sub_20AB863B0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  long long v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB86120();
  sub_20AA65BE0(0, &qword_26AC51E28);
  sub_20AB86340();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D000], v0);
  sub_20AB86070();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20AB86130();
  sub_20AB86320();
  return swift_release();
}

uint64_t sub_20AB58C34(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HeartbeatEventService();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static ChannelData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ChannelData.channelID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelData.channelID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ChannelData.channelID.modify())()
{
  return nullsub_1;
}

uint64_t ChannelData.language.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ChannelData.language.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ChannelData.language.modify())()
{
  return nullsub_1;
}

uint64_t ChannelData.isBundleChannel.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ChannelData.isBundleChannel.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*ChannelData.isBundleChannel.modify())()
{
  return nullsub_1;
}

uint64_t ChannelData.isAdSupportedChannel.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t ChannelData.isAdSupportedChannel.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*ChannelData.isAdSupportedChannel.modify())()
{
  return nullsub_1;
}

void __swiftcall ChannelData.init(channelID:language:isBundleChannel:isAdSupportedChannel:)(StocksAnalytics::ChannelData *__return_ptr retstr, Swift::String channelID, Swift::String language, Swift::Bool isBundleChannel, Swift::Bool isAdSupportedChannel)
{
  retstr->channelID = channelID;
  retstr->language = language;
  retstr->isBundleChannel = isBundleChannel;
  retstr->isAdSupportedChannel = isAdSupportedChannel;
}

unint64_t sub_20AB58E04()
{
  unint64_t result = 0x496C656E6E616863;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65676175676E616CLL;
      break;
    case 2:
      unint64_t result = 0x656C646E75427369;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB58EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB598F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB58ED0(uint64_t a1)
{
  unint64_t v2 = sub_20AB5913C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB58F0C(uint64_t a1)
{
  unint64_t v2 = sub_20AB5913C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ChannelData.encode(to:)(void *a1)
{
  sub_20AB59478(0, &qword_26AC51820, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = v8;
  int v15 = *(unsigned __int8 *)(v1 + 32);
  v11[1] = *(unsigned __int8 *)(v1 + 33);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB5913C();
  sub_20AB86DC0();
  char v19 = 0;
  uint64_t v9 = v14;
  sub_20AB86C10();
  if (!v9)
  {
    char v18 = 1;
    sub_20AB86C10();
    char v17 = 2;
    sub_20AB86C20();
    char v16 = 3;
    sub_20AB86C20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AB5913C()
{
  unint64_t result = qword_26AC4EBB8;
  if (!qword_26AC4EBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBB8);
  }
  return result;
}

uint64_t ChannelData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AB59478(0, &qword_26AC51760, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB5913C();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  uint64_t v23 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_20AB86B40();
  uint64_t v15 = v14;
  uint64_t v21 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v22 = v15;
  int v24 = sub_20AB86B50();
  char v25 = 3;
  LOBYTE(v15) = sub_20AB86B50();
  uint64_t v17 = v24 & 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v18 = v15 & 1;
  uint64_t v19 = v22;
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v19;
  *(unsigned char *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 33) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AB59478(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB5913C();
    unint64_t v7 = a3(a1, &type metadata for ChannelData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB594E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ChannelData.init(from:)(a1, a2);
}

uint64_t sub_20AB594FC(void *a1)
{
  return ChannelData.encode(to:)(a1);
}

uint64_t initializeWithCopy for ChannelData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ChannelData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ChannelData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChannelData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 34)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChannelData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 34) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelData()
{
  return &type metadata for ChannelData;
}

unsigned char *storeEnumTagSinglePayload for ChannelData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB597B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChannelData.CodingKeys()
{
  return &type metadata for ChannelData.CodingKeys;
}

unint64_t sub_20AB597EC()
{
  unint64_t result = qword_267657390;
  if (!qword_267657390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657390);
  }
  return result;
}

unint64_t sub_20AB59844()
{
  unint64_t result = qword_26AC4EBC8;
  if (!qword_26AC4EBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBC8);
  }
  return result;
}

unint64_t sub_20AB5989C()
{
  unint64_t result = qword_26AC4EBC0;
  if (!qword_26AC4EBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBC0);
  }
  return result;
}

uint64_t sub_20AB598F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x496C656E6E616863 && a2 == 0xE900000000000044;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C646E75427369 && a2 == 0xEF6C656E6E616843 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA9920)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_20AB59AD8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267657398, MEMORY[0x263F24D10]);
}

uint64_t static SymbolChartEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653798, MEMORY[0x263F24D18], (uint64_t)qword_267657398, a1);
}

uint64_t static SymbolChartEngagementEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB59B40(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_2676573B0, MEMORY[0x263F24DC8]);
}

uint64_t static SymbolChartEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537A0, MEMORY[0x263F24DD8], (uint64_t)qword_2676573B0, a1);
}

uint64_t sub_20AB59BA0()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676573C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676573C8);
  return sub_20AB85D30();
}

uint64_t static SymbolChartEngagementEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537A8, MEMORY[0x263F24DE8], (uint64_t)qword_2676573C8, a1);
}

uint64_t SymbolChartEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SymbolChartEngagementEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SymbolChartEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolChartEngagementEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolChartEngagementEvent(0) + 20);
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SymbolChartEngagementEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657400);
}

uint64_t SymbolChartEngagementEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolChartEngagementEvent(0) + 20);
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolChartEngagementEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolChartEngagementEvent.symbolChartData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolChartEngagementEvent(0) + 24);
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB59F3C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t SymbolChartEngagementEvent.symbolChartData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolChartEngagementEvent(0) + 24);
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolChartEngagementEvent.symbolChartData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolChartEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for SymbolChartEngagementEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t SymbolChartEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SymbolChartEngagementEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolChartEngagementEvent.Model(0) + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SymbolChartEngagementEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657410);
}

uint64_t SymbolChartEngagementEvent.Model.symbolChartData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SymbolChartEngagementEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SymbolChartEngagementEvent.Model.init(eventData:symbolData:symbolChartData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  char v11 = *a3;
  uint64_t v12 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a4, a1, v12);
  uint64_t result = type metadata accessor for SymbolChartEngagementEvent.Model(0);
  uint64_t v14 = a4 + *(int *)(result + 20);
  *(void *)uint64_t v14 = v6;
  *(void *)(v14 + 8) = v7;
  *(unsigned char *)(v14 + 16) = v8;
  *(void *)(v14 + 24) = v9;
  *(void *)(v14 + 32) = v10;
  *(unsigned char *)(a4 + *(int *)(result + 24)) = v11;
  return result;
}

uint64_t sub_20AB5A3A8()
{
  uint64_t v1 = 0x61446C6F626D7973;
  if (*v0 != 1) {
    uint64_t v1 = 0x68436C6F626D7973;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AB5A418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB5C118(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB5A440(uint64_t a1)
{
  unint64_t v2 = sub_20AB5A6E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB5A47C(uint64_t a1)
{
  unint64_t v2 = sub_20AB5A6E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolChartEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB5AB24(0, &qword_2676573E8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB5A6E0();
  sub_20AB86DC0();
  LOBYTE(v19) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for SymbolChartEngagementEvent.Model(0);
    char v11 = (uint64_t *)(v3 + *(int *)(v10 + 20));
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    char v14 = *((unsigned char *)v11 + 16);
    uint64_t v16 = v11[3];
    uint64_t v15 = v11[4];
    uint64_t v19 = v12;
    uint64_t v20 = v13;
    char v21 = v14;
    uint64_t v22 = v16;
    uint64_t v23 = v15;
    HIBYTE(v18) = 1;
    sub_20A97C61C();
    sub_20AB86C50();
    LOBYTE(v19) = *(unsigned char *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v18) = 2;
    sub_20AB01A64();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB5A6E0()
{
  unint64_t result = qword_2676573F0;
  if (!qword_2676573F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676573F0);
  }
  return result;
}

uint64_t SymbolChartEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v27 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB5AB24(0, &qword_2676573F8, MEMORY[0x263F8E040]);
  uint64_t v28 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for SymbolChartEngagementEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB5A6E0();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v25;
  uint64_t v12 = v26;
  uint64_t v23 = v9;
  LOBYTE(v29) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  sub_20AB86B80();
  char v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v22 = v11;
  v14(v11, v27, v4);
  char v34 = 1;
  sub_20A97C5C8();
  sub_20AB86B80();
  uint64_t v15 = v30;
  char v16 = v31;
  uint64_t v17 = v32;
  uint64_t v18 = v33;
  uint64_t v19 = &v22[*(int *)(v23 + 20)];
  *(void *)uint64_t v19 = v29;
  *((void *)v19 + 1) = v15;
  v19[16] = v16;
  *((void *)v19 + 3) = v17;
  *((void *)v19 + 4) = v18;
  char v34 = 2;
  sub_20AB01A0C();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v28);
  uint64_t v20 = (uint64_t)v22;
  v22[*(int *)(v23 + 24)] = v29;
  sub_20AB5AB88(v20, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AB5ABEC(v20);
}

void sub_20AB5AB24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB5A6E0();
    unint64_t v7 = a3(a1, &type metadata for SymbolChartEngagementEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB5AB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolChartEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB5ABEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolChartEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB5AC48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolChartEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB5AC60(void *a1)
{
  return SymbolChartEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB5AC78@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653798, MEMORY[0x263F24D18], (uint64_t)qword_267657398, a1);
}

uint64_t sub_20AB5ACB0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537A0, MEMORY[0x263F24DD8], (uint64_t)qword_2676573B0, a1);
}

uint64_t sub_20AB5ACE8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537A8, MEMORY[0x263F24DE8], (uint64_t)qword_2676573C8, a1);
}

uint64_t sub_20AB5AD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolChartEngagementEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB5B7B4);
}

uint64_t sub_20AB5B7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for SymbolChartEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB5B984);
}

uint64_t sub_20AB5B984(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  sub_20AB59F3C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  sub_20AB59F3C(0, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_20AB5BB4C()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB59F3C(319, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    if (v1 <= 0x3F)
    {
      sub_20AB59F3C(319, &qword_2676573E0, (void (*)(void))sub_20AB01A0C, (void (*)(void))sub_20AB01A64);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for SymbolChartEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB5BCD4);
}

uint64_t sub_20AB5BCD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolChartEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB5BDAC);
}

uint64_t sub_20AB5BDAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AB5BE6C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SymbolChartEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB5BFD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartEngagementEvent.Model.CodingKeys()
{
  return &type metadata for SymbolChartEngagementEvent.Model.CodingKeys;
}

unint64_t sub_20AB5C014()
{
  unint64_t result = qword_267657420;
  if (!qword_267657420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657420);
  }
  return result;
}

unint64_t sub_20AB5C06C()
{
  unint64_t result = qword_267657428;
  if (!qword_267657428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657428);
  }
  return result;
}

unint64_t sub_20AB5C0C4()
{
  unint64_t result = qword_267657430;
  if (!qword_267657430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657430);
  }
  return result;
}

uint64_t sub_20AB5C118(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x68436C6F626D7973 && a2 == 0xEF61746144747261)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

StocksAnalytics::PaywallType_optional __swiftcall PaywallType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t PaywallType.rawValue.getter()
{
  uint64_t v1 = 1952870259;
  if (*v0 != 1) {
    uint64_t v1 = 1685217640;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AB5C354(char *a1, unsigned __int8 *a2)
{
  return sub_20AA38FE8(*a1, *a2);
}

unint64_t sub_20AB5C364()
{
  unint64_t result = qword_267657438;
  if (!qword_267657438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657438);
  }
  return result;
}

uint64_t sub_20AB5C3B8()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB5C44C()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB5C4CC()
{
  return sub_20AB86D80();
}

StocksAnalytics::PaywallType_optional sub_20AB5C55C(Swift::String *a1)
{
  return PaywallType.init(rawValue:)(*a1);
}

void sub_20AB5C568(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 1952870259;
  if (v2 != 1) {
    uint64_t v4 = 1685217640;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_20AB5C5B8()
{
  return sub_20AB86750();
}

uint64_t sub_20AB5C618()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for PaywallType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB5C734);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallType()
{
  return &type metadata for PaywallType;
}

unint64_t sub_20AB5C76C()
{
  unint64_t result = qword_26AC4EC20;
  if (!qword_26AC4EC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC20);
  }
  return result;
}

StocksAnalytics::UserType_optional __swiftcall UserType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t UserType.rawValue.getter()
{
  uint64_t v1 = 7824750;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E696E7275746572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AB5C874(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA340E4(*a1, *a2);
}

unint64_t sub_20AB5C884()
{
  unint64_t result = qword_267657440;
  if (!qword_267657440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657440);
  }
  return result;
}

uint64_t sub_20AB5C8D8()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB5C978()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB5CA04()
{
  return sub_20AB86D80();
}

StocksAnalytics::UserType_optional sub_20AB5CAA0(Swift::String *a1)
{
  return UserType.init(rawValue:)(*a1);
}

void sub_20AB5CAAC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 7824750;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6E696E7275746572;
    unint64_t v4 = 0xE900000000000067;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AB5CB08()
{
  return sub_20AB86750();
}

uint64_t sub_20AB5CB68()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for UserType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB5CC84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserType()
{
  return &type metadata for UserType;
}

unint64_t sub_20AB5CCBC()
{
  unint64_t result = qword_26AC51530;
  if (!qword_26AC51530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51530);
  }
  return result;
}

uint64_t sub_20AB5CD10(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC4EDC8, MEMORY[0x263F24D10]);
}

uint64_t static FeedViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4EDE0, MEMORY[0x263F24D18], (uint64_t)qword_26AC4EDC8, a1);
}

uint64_t static FeedViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB5CD78(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC4EDE8, MEMORY[0x263F24DC8]);
}

uint64_t static FeedViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4EE00, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4EDE8, a1);
}

uint64_t sub_20AB5CDD8()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_26AC51F60);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC51F60);
  return sub_20AB85D30();
}

uint64_t static FeedViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC52080, MEMORY[0x263F24DE8], (uint64_t)qword_26AC51F60, a1);
}

uint64_t FeedViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t FeedViewEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*FeedViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB5DE80(type metadata accessor for FeedViewEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for FeedViewEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4EEB8);
}

uint64_t FeedViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FeedViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 24);
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FeedViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 24);
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FeedViewEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 28);
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FeedViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 28);
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FeedViewEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 32);
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FeedViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 32);
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FeedViewEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 36);
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FeedViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 36);
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FeedViewEvent.viewEndData.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 40);
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FeedViewEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 40);
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FeedViewEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewEvent.feedViewExperienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 44);
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB5D900(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t FeedViewEvent.feedViewExperienceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent(0) + 44);
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FeedViewEvent.feedViewExperienceData.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for FeedViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v2, v14);
  uint64_t v15 = a1 + v4[10];
  uint64_t v16 = *MEMORY[0x263F24D30];
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v15, v16, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);

  return v20(v18, v2, v19);
}

uint64_t FeedViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t FeedViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB5DE80(type metadata accessor for FeedViewEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AB5DE80@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for FeedViewEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_26AC4E100);
}

uint64_t FeedViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 24);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t FeedViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedViewEvent.Model(0) + 28));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t FeedViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t FeedViewEvent.Model.viewEndData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t FeedViewEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t FeedViewEvent.Model.feedViewExperienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedViewEvent.Model(0);
  uint64_t v4 = (char *)(v1 + *(int *)(result + 44));
  char v5 = *v4;
  LODWORD(v4) = *((_DWORD *)v4 + 1);
  *(unsigned char *)a1 = v5;
  *(_DWORD *)(a1 + 4) = v4;
  return result;
}

uint64_t FeedViewEvent.Model.init(eventData:timedData:feedData:viewData:orientationData:viewEndData:activeWatchlistData:feedViewExperienceData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X3>, __int16 *a5@<X4>, char *a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v12 = *a3;
  uint64_t v13 = *((void *)a3 + 1);
  uint64_t v14 = *((void *)a3 + 2);
  uint64_t v16 = *a4;
  uint64_t v15 = a4[1];
  __int16 v17 = *((_WORD *)a4 + 8);
  __int16 v26 = *a5;
  char v27 = *a6;
  char v30 = *a8;
  char v28 = *a7;
  int v29 = *((_DWORD *)a8 + 1);
  uint64_t v18 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a9, a1, v18);
  uint64_t v19 = (int *)type metadata accessor for FeedViewEvent.Model(0);
  uint64_t v20 = a9 + v19[5];
  uint64_t v21 = sub_20AB85FE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a2, v21);
  uint64_t v23 = a9 + v19[6];
  *(unsigned char *)uint64_t v23 = v12;
  *(void *)(v23 + 8) = v13;
  *(void *)(v23 + 16) = v14;
  uint64_t v24 = a9 + v19[7];
  *(void *)uint64_t v24 = v16;
  *(void *)(v24 + 8) = v15;
  *(_WORD *)(v24 + 16) = v17;
  *(_WORD *)(a9 + v19[8]) = v26;
  *(unsigned char *)(a9 + v19[9]) = v27;
  *(unsigned char *)(a9 + v19[10]) = v28;
  uint64_t v25 = a9 + v19[11];
  *(unsigned char *)uint64_t v25 = v30;
  *(_DWORD *)(v25 + 4) = v29;
  return result;
}

uint64_t sub_20AB5E214(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unsigned int v3 = 1684366694;
      goto LABEL_5;
    case 3:
      unsigned int v3 = 2003134838;
LABEL_5:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 4:
      uint64_t result = 0x7461746E6569726FLL;
      break;
    case 5:
      uint64_t result = 0x44646E4577656976;
      break;
    case 6:
      uint64_t result = 0xD000000000000013;
      break;
    case 7:
      uint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB5E330()
{
  return sub_20AB5E214(*v0);
}

uint64_t sub_20AB5E338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB623C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB5E360(uint64_t a1)
{
  unint64_t v2 = sub_20AB5E7AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB5E39C(uint64_t a1)
{
  unint64_t v2 = sub_20AB5E7AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FeedViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB5EEE4(0, &qword_267657448, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB5E7AC();
  sub_20AB86DC0();
  LOBYTE(v22) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for FeedViewEvent.Model(0);
    LOBYTE(v22) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (char *)(v3 + v10[6]);
    char v12 = *v11;
    uint64_t v14 = *((void *)v11 + 1);
    uint64_t v13 = *((void *)v11 + 2);
    LOBYTE(v22) = v12;
    uint64_t v23 = v14;
    uint64_t v24 = v13;
    HIBYTE(v21) = 2;
    sub_20A986774();
    sub_20AB86C50();
    uint64_t v15 = (uint64_t *)(v3 + v10[7]);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    uint64_t v22 = v16;
    uint64_t v23 = v17;
    LOWORD(v24) = (_WORD)v15;
    HIBYTE(v21) = 3;
    sub_20A986C14();
    sub_20AB86C50();
    LOWORD(v22) = *(_WORD *)(v3 + v10[8]);
    HIBYTE(v21) = 4;
    sub_20A97C86C();
    sub_20AB86C50();
    LOBYTE(v22) = *(unsigned char *)(v3 + v10[9]);
    HIBYTE(v21) = 5;
    sub_20A97CB38();
    sub_20AB86C50();
    LOBYTE(v22) = *(unsigned char *)(v3 + v10[10]);
    HIBYTE(v21) = 6;
    sub_20A9875D0();
    sub_20AB86BE0();
    uint64_t v18 = (char *)(v3 + v10[11]);
    char v19 = *v18;
    LODWORD(v18) = *((_DWORD *)v18 + 1);
    LOBYTE(v22) = v19;
    HIDWORD(v22) = v18;
    HIBYTE(v21) = 7;
    sub_20AA0CDEC();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB5E7AC()
{
  unint64_t result = qword_26AC4EE08;
  if (!qword_26AC4EE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EE08);
  }
  return result;
}

uint64_t FeedViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB5EEE4(0, &qword_26AC51778, MEMORY[0x263F8E040]);
  uint64_t v33 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v12 = (char *)&v31 - v11;
  uint64_t v40 = type metadata accessor for FeedViewEvent.Model(0);
  MEMORY[0x270FA5388](v40);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  char v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_20AB5E7AC();
  uint64_t v35 = v12;
  uint64_t v16 = v41;
  sub_20AB86DA0();
  uint64_t v34 = v6;
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
  uint64_t v41 = v10;
  LOBYTE(v42) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v14, v8, v6);
  LOBYTE(v42) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  uint64_t v17 = v37;
  sub_20AB86B80();
  uint64_t v18 = (int *)v40;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v14[*(int *)(v40 + 20)], v5, v17);
  char v45 = 2;
  sub_20A986720();
  char v19 = v35;
  sub_20AB86B80();
  uint64_t v20 = v43;
  uint64_t v21 = v44;
  uint64_t v22 = &v14[v18[6]];
  *uint64_t v22 = v42;
  *((void *)v22 + 1) = v20;
  *((void *)v22 + 2) = v21;
  char v45 = 3;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v23 = (uint64_t)v39;
  uint64_t v24 = v41;
  uint64_t v25 = v43;
  __int16 v26 = v44;
  char v27 = &v14[v18[7]];
  *(void *)char v27 = v42;
  *((void *)v27 + 1) = v25;
  *((_WORD *)v27 + 8) = v26;
  char v45 = 4;
  sub_20A97C818();
  sub_20AB86B80();
  *(_WORD *)&v14[v18[8]] = v42;
  char v45 = 5;
  sub_20A97CAE4();
  sub_20AB86B80();
  v14[v18[9]] = v42;
  char v45 = 6;
  sub_20A98757C();
  sub_20AB86B10();
  v14[v18[10]] = v42;
  char v45 = 7;
  sub_20AA0CD94();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v33);
  int v28 = HIDWORD(v42);
  int v29 = &v14[v18[11]];
  *int v29 = v42;
  *((_DWORD *)v29 + 1) = v28;
  sub_20AB5EF48((uint64_t)v14, v32);
  __swift_destroy_boxed_opaque_existential_1(v23);
  return sub_20AB5EFAC((uint64_t)v14);
}

void sub_20AB5EEE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB5E7AC();
    unint64_t v7 = a3(a1, &type metadata for FeedViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB5EF48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB5EFAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB5F008@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB5F020(void *a1)
{
  return FeedViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB5F038@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4EDE0, MEMORY[0x263F24D18], (uint64_t)qword_26AC4EDC8, a1);
}

uint64_t sub_20AB5F070@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4EE00, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4EDE8, a1);
}

uint64_t sub_20AB5F0A8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC52080, MEMORY[0x263F24DE8], (uint64_t)qword_26AC51F60, a1);
}

uint64_t sub_20AB5F0E0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v4, v15);
  uint64_t v16 = a2 + a1[10];
  uint64_t v17 = *MEMORY[0x263F24D30];
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v16, v17, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);

  return v21(v19, v4, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    __int16 v26 = (char *)a2 + v24;
    sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    int v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for FeedViewEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

uint64_t initializeWithCopy for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for FeedViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB60B44);
}

uint64_t sub_20AB60B44(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_15;
  }
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_15;
  }
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_15;
  }
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_15;
  }
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a3[11];

  return v21(v23, a2, v22);
}

uint64_t storeEnumTagSinglePayload for FeedViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB60F70);
}

uint64_t sub_20AB60F70(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_16:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_15:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_16;
  }
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_15;
  }
  sub_20AB5D900(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_15;
  }
  sub_20AB5D900(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_15;
  }
  sub_20AB5D900(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_15;
  }
  sub_20AB5D900(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_15;
  }
  sub_20AB5D900(0, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a4[11];

  return v23(v25, a2, a2, v24);
}

void sub_20AB61394()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AB5D900(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
      if (v2 <= 0x3F)
      {
        sub_20AB5D900(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
        if (v3 <= 0x3F)
        {
          sub_20AB5D900(319, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
          if (v4 <= 0x3F)
          {
            sub_20AB5D900(319, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
            if (v5 <= 0x3F)
            {
              sub_20AB5D900(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
              if (v6 <= 0x3F)
              {
                sub_20AB5D900(319, &qword_26AC4E668, (void (*)(void))sub_20AA0CD94, (void (*)(void))sub_20AA0CDEC);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for FeedViewEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *uint64_t v14 = *v15;
    uint64_t v16 = *((void *)v15 + 2);
    *((void *)v14 + 1) = *((void *)v15 + 1);
    *((void *)v14 + 2) = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    *((_WORD *)v17 + 8) = *((_WORD *)v18 + 8);
    uint64_t v20 = a3[9];
    *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    uint64_t v21 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  *(void *)(v13 + 16) = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  uint64_t v18 = *(void *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  *(_WORD *)(v16 + 16) = *(_WORD *)(v17 + 16);
  uint64_t v19 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  *(unsigned char *)(v15 + 17) = *(unsigned char *)(v16 + 17);
  uint64_t v17 = a3[8];
  uint64_t v18 = (unsigned char *)(a1 + v17);
  uint64_t v19 = (unsigned char *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v20 = a3[11];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(_DWORD *)(v21 + 4) = *(_DWORD *)(v22 + 4);
  return a1;
}

uint64_t initializeWithTake for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  uint64_t v17 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  return a1;
}

uint64_t assignWithTake for FeedViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  uint64_t v14 = *(void *)(v13 + 16);
  *(void *)(v12 + 8) = v15;
  *(void *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v17 + 16) = *(_WORD *)(v18 + 16);
  uint64_t v20 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  *(_DWORD *)(v22 + 4) = *(_DWORD *)(v23 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB61E74);
}

uint64_t sub_20AB61E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB61FA0);
}

uint64_t sub_20AB61FA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AB620B4()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB62284);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedViewEvent.Model.CodingKeys()
{
  return &type metadata for FeedViewEvent.Model.CodingKeys;
}

unint64_t sub_20AB622C0()
{
  unint64_t result = qword_267657450;
  if (!qword_267657450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657450);
  }
  return result;
}

unint64_t sub_20AB62318()
{
  unint64_t result = qword_26AC4EE18[0];
  if (!qword_26AC4EE18[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AC4EE18);
  }
  return result;
}

unint64_t sub_20AB62370()
{
  unint64_t result = qword_26AC4EE10;
  if (!qword_26AC4EE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EE10);
  }
  return result;
}

uint64_t sub_20AB623C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA9940)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t dispatch thunk of HeartbeatEventServiceType.sendHeartbeat()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_20AB62764(long long *a1, long long *a2, long long *a3)
{
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  uint64_t v13 = a1;
  uint64_t v12 = sub_20AB86840();
  uint64_t v4 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20AB86830();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_20AB86610();
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v11 = sub_20AAB714C();
  sub_20AB86600();
  uint64_t v16 = MEMORY[0x263F8EE78];
  sub_20AB64004(&qword_26AC51E68, 255, MEMORY[0x263F8F0F8]);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F0F8];
  sub_20AB642A4(0, &qword_26AC51E58, MEMORY[0x263F8F0F8], MEMORY[0x263F8D488]);
  sub_20AB6404C(&qword_26AC51E60, &qword_26AC51E58, v9);
  sub_20AB86920();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F130], v12);
  *(void *)(v3 + 136) = sub_20AB86870();
  sub_20A9D7BA0(v13, v3 + 16);
  sub_20A9D7BA0(v14, v3 + 56);
  sub_20A9D7BA0(v15, v3 + 96);
  return v3;
}

void sub_20AB62A0C()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_20AB865E0();
  uint64_t v66 = *(void *)(v2 - 8);
  uint64_t v67 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v64 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_20AB86610();
  uint64_t v63 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v62 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85500();
  uint64_t v69 = *(void *)(v5 - 8);
  char v70 = (void (*)(char *, char *, uint64_t))v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB642A4(0, (unint64_t *)&qword_26AC4E3A8, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v60 - v9;
  uint64_t v72 = sub_20AB85140();
  uint64_t v75 = *(void *)(v72 - 8);
  uint64_t v11 = *(void *)(v75 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v72);
  uint64_t v71 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  long long v68 = (char *)&v60 - v14;
  MEMORY[0x270FA5388](v13);
  char v74 = (char *)&v60 - v15;
  uint64_t v16 = sub_20AB85480();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v0[5];
  char v73 = v0 + 2;
  __swift_project_boxed_opaque_existential_1(v0 + 2, v20);
  sub_20AB85570();
  char v21 = sub_20AB85430();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v17 + 8);
  v22(v19, v16);
  if ((v21 & 1) == 0)
  {
    if (qword_26AC51AC0 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_20AB86460();
    __swift_project_value_buffer(v32, (uint64_t)qword_26AC63580);
    uint64_t v28 = sub_20AB86450();
    os_log_type_t v29 = sub_20AB86820();
    if (!os_log_type_enabled(v28, v29)) {
      goto LABEL_17;
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    uint64_t v31 = "Not sending heartbeat event due to foreground heartbeat event being disabled";
    goto LABEL_16;
  }
  uint64_t v61 = v22;
  uint64_t v23 = v1[15];
  uint64_t v24 = v1[16];
  __swift_project_boxed_opaque_existential_1(v1 + 12, v23);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24) & 1) == 0)
  {
    if (qword_26AC51AC0 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_20AB86460();
    __swift_project_value_buffer(v33, (uint64_t)qword_26AC63580);
    uint64_t v28 = sub_20AB86450();
    os_log_type_t v29 = sub_20AB86820();
    if (!os_log_type_enabled(v28, v29)) {
      goto LABEL_17;
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    uint64_t v31 = "Not sending heartbeat because user has not agreed to in-app terms and conditions";
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(v73, v1[5]);
  sub_20AB85570();
  sub_20AB853D0();
  v61(v19, v16);
  sub_20AB854E0();
  (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v69 + 8))(v7, v70);
  sub_20AB85130();
  swift_bridgeObjectRelease();
  uint64_t v25 = v75;
  uint64_t v26 = v72;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v10, 1, v72) == 1)
  {
    sub_20AB640B0((uint64_t)v10);
    if (qword_26AC51AC0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_20AB86460();
    __swift_project_value_buffer(v27, (uint64_t)qword_26AC63580);
    uint64_t v28 = sub_20AB86450();
    os_log_type_t v29 = sub_20AB86810();
    if (!os_log_type_enabled(v28, v29)) {
      goto LABEL_17;
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    uint64_t v31 = "Failed to send heartbeat event due to failure to resolve heartbeat endpoint URL";
LABEL_16:
    _os_log_impl(&dword_20A976000, v28, v29, v31, v30, 2u);
    MEMORY[0x21052ADA0](v30, -1, -1);
LABEL_17:

    return;
  }
  char v70 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v70(v74, v10, v26);
  if (qword_26AC51B68 != -1) {
    swift_once();
  }
  id v34 = (id)qword_26AC51B60;
  sub_20AB86820();
  sub_20AB86440();

  uint64_t v35 = v25 + 16;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  uint64_t v37 = v68;
  v36(v68, v74, v26);
  v36(v71, v37, v26);
  unint64_t v38 = (*(unsigned __int8 *)(v35 + 64) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 64);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v1;
  v70((char *)(v39 + v38), v37, v26);
  __swift_project_boxed_opaque_existential_1(v73, v1[5]);
  swift_retain();
  sub_20AB85570();
  LOBYTE(v38) = sub_20AB85470();
  v61(v19, v16);
  if (v38)
  {
    uint64_t v40 = *(void (**)(char *, uint64_t))(v75 + 8);
    v75 += 8;
    v40(v71, v26);
    if (qword_26AC51AC0 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_20AB86460();
    __swift_project_value_buffer(v41, (uint64_t)qword_26AC63580);
    uint64_t v42 = sub_20AB86450();
    os_log_type_t v43 = sub_20AB86820();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl(&dword_20A976000, v42, v43, "Dispatching heartbeat request", v44, 2u);
      MEMORY[0x21052ADA0](v44, -1, -1);
    }

    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_20AB64208;
    *(void *)(v45 + 24) = v39;
    aBlock[4] = sub_20AAB724C;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20AB63DD8;
    aBlock[3] = &block_descriptor_2;
    long long v46 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v47 = v62;
    sub_20AB865F0();
    uint64_t v76 = MEMORY[0x263F8EE78];
    sub_20AB64004(&qword_26AC51E40, 255, MEMORY[0x263F8F030]);
    long long v48 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
    sub_20AB642A4(0, &qword_26AC51E48, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_20AB6404C(&qword_26AC51E50, &qword_26AC51E48, v48);
    char v49 = v64;
    uint64_t v50 = v67;
    sub_20AB86920();
    MEMORY[0x21052A2E0](0, v47, v49, v46);
    _Block_release(v46);
    swift_release();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v50);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v47, v65);
    v40(v74, v72);
    swift_release();
  }
  else
  {
    if (qword_26AC51AC0 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_20AB86460();
    __swift_project_value_buffer(v51, (uint64_t)qword_26AC63580);
    uint64_t v52 = sub_20AB86450();
    os_log_type_t v53 = sub_20AB86820();
    BOOL v54 = os_log_type_enabled(v52, v53);
    uint64_t v56 = v74;
    uint64_t v55 = v75;
    uint64_t v57 = (uint64_t)v71;
    if (v54)
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl(&dword_20A976000, v52, v53, "Not dispatching heartbeat request", v58, 2u);
      MEMORY[0x21052ADA0](v58, -1, -1);
    }

    sub_20AB635C0((uint64_t)v1, v57);
    swift_release();
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v59(v57, v26);
    v59((uint64_t)v56, v26);
  }
}

void sub_20AB635C0(uint64_t a1, uint64_t a2)
{
  uint64_t v68 = a2;
  uint64_t v3 = sub_20AB85CA0();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB851F0();
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v65 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v55 - v9;
  uint64_t v11 = sub_20AB851C0();
  uint64_t v61 = *(void *)(v11 - 8);
  uint64_t v62 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v64 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = (int *)type metadata accessor for HeartbeatData();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (uint64_t *)((char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = type metadata accessor for HeartbeatEvent.Model(0);
  MEMORY[0x270FA5388](v63);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC51AC0 != -1) {
    swift_once();
  }
  uint64_t v67 = v20;
  uint64_t v69 = v5;
  uint64_t v21 = sub_20AB86460();
  uint64_t v55 = __swift_project_value_buffer(v21, (uint64_t)qword_26AC63580);
  uint64_t v22 = sub_20AB86450();
  os_log_type_t v23 = sub_20AB86820();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_20A976000, v22, v23, "Building request", v24, 2u);
    MEMORY[0x21052ADA0](v24, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1((void *)(a1 + 56), *(void *)(a1 + 80));
  uint64_t v25 = sub_20AB85540();
  uint64_t v27 = v26;
  sub_20AB851B0();
  sub_20AB851E0();
  uint64_t v28 = sub_20AB851D0();
  uint64_t v58 = v29;
  uint64_t v59 = v28;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v70 + 8);
  uint64_t v66 = v6;
  v70 += 8;
  uint64_t v60 = v30;
  v30(v10, v6);
  uint64_t v31 = self;
  id v32 = objc_msgSend(v31, sel_currentDevice);
  id v33 = objc_msgSend(v32, sel_systemVersion);

  uint64_t v34 = sub_20AB866E0();
  uint64_t v36 = v35;

  id v37 = objc_msgSend(v31, sel_currentDevice);
  id v38 = objc_msgSend(v37, sel_sa_buildVersion);

  if (v38)
  {
    uint64_t v39 = sub_20AB866E0();
    uint64_t v41 = v40;

    *uint64_t v18 = v25;
    v18[1] = v27;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))((char *)v18 + v16[5], v15, v62);
    uint64_t v42 = (uint64_t *)((char *)v18 + v16[6]);
    uint64_t v43 = v58;
    *uint64_t v42 = v59;
    v42[1] = v43;
    uint64_t v44 = (uint64_t *)((char *)v18 + v16[7]);
    uint64_t *v44 = v34;
    v44[1] = v36;
    uint64_t v45 = (uint64_t *)((char *)v18 + v16[8]);
    uint64_t *v45 = v39;
    v45[1] = v41;
    uint64_t v46 = (uint64_t)v67;
    sub_20AB64308((uint64_t)v18, (uint64_t)v67);
    if (qword_26AC51B68 != -1) {
      swift_once();
    }
    uint64_t v47 = (void *)qword_26AC51B60;
    long long v48 = self;
    id v49 = v47;
    id v50 = objc_msgSend(v48, sel_mainBundle);
    sub_20AB86890();

    sub_20AB85EF0();
    id v51 = objc_msgSend(v48, sel_mainBundle);
    uint64_t v52 = (void *)sub_20AB85ED0();
    sub_20AB851B0();
    os_log_type_t v53 = v65;
    sub_20AB851E0();
    sub_20AB851D0();
    v60(v53, v66);
    BOOL v54 = v69;
    sub_20AB85C90();
    sub_20AB64004(&qword_26AC51C50, 255, (void (*)(uint64_t))type metadata accessor for HeartbeatEvent.Model);
    sub_20AB85C80();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v57);
    sub_20AB6436C(v46);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20AB63DD8(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_20AB63E1C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);

  return MEMORY[0x270FA0228](v0, 144, 7);
}

uint64_t type metadata accessor for HeartbeatEventService()
{
  return self;
}

void sub_20AB63E94()
{
  if (qword_26AC51AC0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20AB86460();
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC63580);
  unint64_t v1 = sub_20AB86450();
  os_log_type_t v2 = sub_20AB86820();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_20A976000, v1, v2, "See scene entering foreground, sending heartbeat", v3, 2u);
    MEMORY[0x21052ADA0](v3, -1, -1);
  }

  sub_20AB62A0C();
}

uint64_t sub_20AB63F80()
{
  return MEMORY[0x270F7A270](*v0);
}

uint64_t sub_20AB63FAC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20AB64004(&qword_26AC51D60, a2, (void (*)(uint64_t))type metadata accessor for HeartbeatEventService);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20AB64004(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AB6404C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20AB642A4(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20AB640B0(uint64_t a1)
{
  sub_20AB642A4(0, (unint64_t *)&qword_26AC4E3A8, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB6413C()
{
  uint64_t v1 = sub_20AB85140();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_20AB64208()
{
  uint64_t v1 = *(void *)(sub_20AB85140() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_20AB635C0(v2, v3);
}

uint64_t sub_20AB6426C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_20AB642A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20AB64308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeartbeatData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB6436C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HeartbeatEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB643C8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_20AB6449C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_20AADCF54((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_20AADCF54((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_20AB6449C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_20AB868F0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_20AB64658(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_20AB869D0();
  if (!v8)
  {
    sub_20AB86A40();
    __break(1u);
LABEL_17:
    uint64_t result = sub_20AB86AB0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_20AB64658(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_20AB646F0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_20AB648CC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_20AB648CC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_20AB646F0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_20AB64868(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_20AB869A0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_20AB86A40();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_20AB86730();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_20AB86AB0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_20AB86A40();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_20AB64868(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_20AB64A18();
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_20AB648CC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_20AB64A18();
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_20AB86AB0();
  __break(1u);
  return result;
}

void sub_20AB64A18()
{
  if (!qword_267657458)
  {
    unint64_t v0 = sub_20AB86C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267657458);
    }
  }
}

StocksAnalytics::Role_optional __swiftcall Role.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t Role.rawValue.getter()
{
  uint64_t v1 = 0x656C6369747261;
  if (*v0 != 1) {
    uint64_t v1 = 0x50676E69646E616CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AB64B30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA347E8(*a1, *a2);
}

unint64_t sub_20AB64B40()
{
  unint64_t result = qword_267657460;
  if (!qword_267657460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657460);
  }
  return result;
}

uint64_t sub_20AB64B94()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB64C40()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB64CD8()
{
  return sub_20AB86D80();
}

StocksAnalytics::Role_optional sub_20AB64D80(Swift::String *a1)
{
  return Role.init(rawValue:)(*a1);
}

void sub_20AB64D8C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x656C6369747261;
  if (v2 != 1)
  {
    uint64_t v5 = 0x50676E69646E616CLL;
    unint64_t v4 = 0xEB00000000656761;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AB64DF4()
{
  return sub_20AB86750();
}

uint64_t sub_20AB64E54()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for Role(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB64F70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Role()
{
  return &type metadata for Role;
}

unint64_t sub_20AB64FA8()
{
  unint64_t result = qword_26AC51450;
  if (!qword_26AC51450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51450);
  }
  return result;
}

uint64_t sub_20AB64FFC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC51E80, MEMORY[0x263F24D10]);
}

uint64_t static FeedLoadFailureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC51EA8, MEMORY[0x263F24D18], (uint64_t)qword_26AC51E80, a1);
}

uint64_t static FeedLoadFailureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB65064(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC51EB0, MEMORY[0x263F24DC8]);
}

uint64_t static FeedLoadFailureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(qword_26AC51EC8, MEMORY[0x263F24DD8], (uint64_t)qword_26AC51EB0, a1);
}

uint64_t sub_20AB650C4()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267657468);
  __swift_project_value_buffer(v0, (uint64_t)qword_267657468);
  return sub_20AB85D30();
}

uint64_t static FeedLoadFailureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537B0, MEMORY[0x263F24DE8], (uint64_t)qword_267657468, a1);
}

uint64_t FeedLoadFailureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t FeedLoadFailureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*FeedLoadFailureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t FeedLoadFailureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 20);
  sub_20A9D92C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for FeedLoadFailureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_26AC51E98);
}

uint64_t FeedLoadFailureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 20);
  sub_20A9D92C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*FeedLoadFailureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t FeedLoadFailureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for FeedLoadFailureEvent(0) + 20);
  sub_20A9D92C8();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t FeedLoadFailureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t FeedLoadFailureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedLoadFailureEvent.Model(0) + 20);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FeedLoadFailureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657498);
}

uint64_t FeedLoadFailureEvent.Model.init(eventData:feedData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v7 = *((void *)a2 + 2);
  uint64_t v8 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a3, a1, v8);
  uint64_t result = type metadata accessor for FeedLoadFailureEvent.Model(0);
  uint64_t v10 = a3 + *(int *)(result + 20);
  *(unsigned char *)uint64_t v10 = v5;
  *(void *)(v10 + 8) = v6;
  *(void *)(v10 + 16) = v7;
  return result;
}

uint64_t sub_20AB65518(uint64_t a1)
{
  unint64_t v2 = sub_20AB65768();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB65554(uint64_t a1)
{
  unint64_t v2 = sub_20AB65768();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FeedLoadFailureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB65B18(0, &qword_267657480, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v9 = &v15[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB65768();
  sub_20AB86DC0();
  char v16 = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (char *)(v3 + *(int *)(type metadata accessor for FeedLoadFailureEvent.Model(0) + 20));
    char v11 = *v10;
    uint64_t v13 = *((void *)v10 + 1);
    uint64_t v12 = *((void *)v10 + 2);
    char v16 = v11;
    uint64_t v17 = v13;
    uint64_t v18 = v12;
    v15[7] = 1;
    sub_20A986774();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB65768()
{
  unint64_t result = qword_267657488;
  if (!qword_267657488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657488);
  }
  return result;
}

uint64_t FeedLoadFailureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v27 = sub_20AB85FC0();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB65B18(0, &qword_267657490, MEMORY[0x263F8E040]);
  uint64_t v28 = v6;
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t Failure = type metadata accessor for FeedLoadFailureEvent.Model(0);
  MEMORY[0x270FA5388](Failure);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB65768();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v25;
  char v29 = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v27;
  sub_20AB86B80();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v23 = (uint64_t)v12;
  v15(v12, v5, v14);
  char v32 = 1;
  sub_20A986720();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v28);
  uint64_t v16 = v30;
  uint64_t v17 = v31;
  uint64_t v19 = v23;
  uint64_t v18 = v24;
  uint64_t v20 = v23 + *(int *)(Failure + 20);
  *(unsigned char *)uint64_t v20 = v29;
  *(void *)(v20 + 8) = v16;
  *(void *)(v20 + 16) = v17;
  sub_20AB65B7C(v19, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AB65BE0(v19);
}

void sub_20AB65B18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB65768();
    unint64_t v7 = a3(a1, &type metadata for FeedLoadFailureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB65B7C(uint64_t a1, uint64_t a2)
{
  uint64_t Failure = type metadata accessor for FeedLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Failure - 8) + 16))(a2, a1, Failure);
  return a2;
}

uint64_t sub_20AB65BE0(uint64_t a1)
{
  uint64_t Failure = type metadata accessor for FeedLoadFailureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(Failure - 8) + 8))(a1, Failure);
  return a1;
}

uint64_t sub_20AB65C3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedLoadFailureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB65C54(void *a1)
{
  return FeedLoadFailureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB65C6C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC51EA8, MEMORY[0x263F24D18], (uint64_t)qword_26AC51E80, a1);
}

uint64_t sub_20AB65CA4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(qword_26AC51EC8, MEMORY[0x263F24DD8], (uint64_t)qword_26AC51EB0, a1);
}

uint64_t sub_20AB65CDC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537B0, MEMORY[0x263F24DE8], (uint64_t)qword_267657468, a1);
}

uint64_t getEnumTagSinglePayload for FeedLoadFailureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB65D28);
}

uint64_t sub_20AB65D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20A9D92C8();
    char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for FeedLoadFailureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB65E34);
}

uint64_t sub_20AB65E34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20A9D92C8();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t getEnumTagSinglePayload for FeedLoadFailureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB65F4C);
}

uint64_t sub_20AB65F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FeedLoadFailureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB66024);
}

uint64_t sub_20AB66024(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AB660E4()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedLoadFailureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB66244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedLoadFailureEvent.Model.CodingKeys()
{
  return &type metadata for FeedLoadFailureEvent.Model.CodingKeys;
}

unint64_t sub_20AB66280()
{
  unint64_t result = qword_2676574A8;
  if (!qword_2676574A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676574A8);
  }
  return result;
}

unint64_t sub_20AB662D8()
{
  unint64_t result = qword_2676574B0;
  if (!qword_2676574B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676574B0);
  }
  return result;
}

unint64_t sub_20AB66330()
{
  unint64_t result = qword_2676574B8;
  if (!qword_2676574B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676574B8);
  }
  return result;
}

uint64_t dispatch thunk of AgreedToTermsAndConditionsProvider.agreedToTermsAndConditions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_20AB66398(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_2676574C0, MEMORY[0x263F24D10]);
}

uint64_t static AdEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537B8, MEMORY[0x263F24D18], (uint64_t)qword_2676574C0, a1);
}

uint64_t static AdEngagementEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB66400(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_2676574D8, MEMORY[0x263F24DC8]);
}

uint64_t static AdEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537C0, MEMORY[0x263F24DD8], (uint64_t)qword_2676574D8, a1);
}

uint64_t sub_20AB66460()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676574F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676574F0);
  return sub_20AB85D30();
}

uint64_t static AdEngagementEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537C8, MEMORY[0x263F24DE8], (uint64_t)qword_2676574F0, a1);
}

uint64_t AdEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AdEngagementEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AdEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AdEngagementEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 20);
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AdEngagementEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657520);
}

uint64_t AdEngagementEvent.adData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 20);
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdEngagementEvent.adData.modify())()
{
  return nullsub_1;
}

uint64_t AdEngagementEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 24);
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AdEngagementEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 24);
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdEngagementEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t AdEngagementEvent.adEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 28);
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AdEngagementEvent.adEngagementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 28);
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdEngagementEvent.adEngagementData.modify())()
{
  return nullsub_1;
}

uint64_t AdEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 32);
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB66B4C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t AdEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent(0) + 32);
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdEngagementEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t AdEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AdEngagementEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);

  return v13(v11, v2, v12);
}

uint64_t AdEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AdEngagementEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdEngagementEvent.Model(0) + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  __int16 v5 = *(_WORD *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 64);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  long long v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AdEngagementEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657530);
}

uint64_t AdEngagementEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AdEngagementEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t AdEngagementEvent.Model.adEngagementData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AdEngagementEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t AdEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AdEngagementEvent.Model(0) + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 AdEngagementEvent.Model.init(eventData:adData:viewData:adEngagementData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  __int16 v10 = *((_WORD *)a2 + 8);
  long long v22 = *(_OWORD *)(a2 + 5);
  long long v23 = *(_OWORD *)(a2 + 3);
  uint64_t v11 = a2[7];
  uint64_t v12 = a2[8];
  uint64_t v13 = *a3;
  uint64_t v14 = a3[1];
  __int16 v15 = *((_WORD *)a3 + 8);
  __n128 v29 = *a5;
  unint64_t v27 = a5[1].n128_u64[1];
  unint64_t v28 = a5[1].n128_u64[0];
  unsigned __int8 v26 = a5[2].n128_u8[0];
  char v24 = *a4;
  unsigned __int8 v25 = a5[2].n128_u8[1];
  uint64_t v16 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a6, a1, v16);
  uint64_t v17 = (int *)type metadata accessor for AdEngagementEvent.Model(0);
  uint64_t v18 = a6 + v17[5];
  *(void *)uint64_t v18 = v8;
  *(void *)(v18 + 8) = v9;
  *(_WORD *)(v18 + 16) = v10;
  *(_OWORD *)(v18 + 24) = v23;
  *(_OWORD *)(v18 + 40) = v22;
  *(void *)(v18 + 56) = v11;
  *(void *)(v18 + 64) = v12;
  uint64_t v19 = a6 + v17[6];
  *(void *)uint64_t v19 = v13;
  *(void *)(v19 + 8) = v14;
  *(_WORD *)(v19 + 16) = v15;
  *(unsigned char *)(a6 + v17[7]) = v24;
  uint64_t v20 = (__n128 *)(a6 + v17[8]);
  __n128 result = v29;
  *uint64_t v20 = v29;
  v20[1].n128_u64[0] = v28;
  v20[1].n128_u64[1] = v27;
  v20[2].n128_u8[0] = v26;
  v20[2].n128_u8[1] = v25;
  return result;
}

unint64_t sub_20AB67230()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x617461446461;
      break;
    case 2:
      unint64_t result = 0x6174614477656976;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB672E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB6A2E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB67310(uint64_t a1)
{
  unint64_t v2 = sub_20AB6766C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB6734C(uint64_t a1)
{
  unint64_t v2 = sub_20AB6766C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB67BC4(0, &qword_267657508, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB6766C();
  sub_20AB86DC0();
  LOBYTE(v25) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    __int16 v10 = (int *)type metadata accessor for AdEngagementEvent.Model(0);
    uint64_t v11 = v3 + v10[5];
    uint64_t v12 = *(void *)(v11 + 8);
    __int16 v13 = *(_WORD *)(v11 + 16);
    *(void *)&long long v25 = *(void *)v11;
    *((void *)&v25 + 1) = v12;
    LOWORD(v26) = v13;
    long long v14 = *(_OWORD *)(v11 + 40);
    long long v27 = *(_OWORD *)(v11 + 24);
    long long v28 = v14;
    long long v29 = *(_OWORD *)(v11 + 56);
    HIBYTE(v24) = 1;
    sub_20AA03D44();
    sub_20AB86C50();
    __int16 v15 = (uint64_t *)(v3 + v10[6]);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    *(void *)&long long v25 = v16;
    *((void *)&v25 + 1) = v17;
    LOWORD(v26) = (_WORD)v15;
    HIBYTE(v24) = 2;
    sub_20A986C14();
    sub_20AB86C50();
    LOBYTE(v25) = *(unsigned char *)(v3 + v10[7]);
    HIBYTE(v24) = 3;
    sub_20AA962D0();
    sub_20AB86C50();
    uint64_t v18 = (long long *)(v3 + v10[8]);
    long long v19 = *v18;
    uint64_t v20 = *((void *)v18 + 2);
    uint64_t v21 = *((void *)v18 + 3);
    char v22 = *((unsigned char *)v18 + 32);
    LOBYTE(v18) = *((unsigned char *)v18 + 33);
    long long v25 = v19;
    uint64_t v26 = v20;
    *(void *)&long long v27 = v21;
    BYTE8(v27) = v22;
    BYTE9(v27) = (_BYTE)v18;
    HIBYTE(v24) = 4;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB6766C()
{
  unint64_t result = qword_267657510;
  if (!qword_267657510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657510);
  }
  return result;
}

uint64_t AdEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v35 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB67BC4(0, &qword_267657518, MEMORY[0x263F8E040]);
  uint64_t v37 = v6;
  uint64_t v33 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = (int *)type metadata accessor for AdEngagementEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB6766C();
  uint64_t v36 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v33;
  uint64_t v13 = v34;
  uint64_t v30 = v11;
  uint64_t v31 = a1;
  LOBYTE(v38) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  long long v14 = v35;
  sub_20AB86B80();
  uint64_t v15 = v4;
  uint64_t v16 = (uint64_t)v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v30, v14, v15);
  char v43 = 1;
  sub_20AA03CF0();
  sub_20AB86B80();
  uint64_t v17 = *((void *)&v38 + 1);
  __int16 v18 = v39;
  uint64_t v19 = v16 + v9[5];
  *(void *)uint64_t v19 = v38;
  *(void *)(v19 + 8) = v17;
  *(_WORD *)(v19 + 16) = v18;
  *(_OWORD *)(v19 + 24) = v40;
  *(_OWORD *)(v19 + 40) = v41;
  *(_OWORD *)(v19 + 56) = v42;
  char v43 = 2;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v20 = *((void *)&v38 + 1);
  __int16 v21 = v39;
  uint64_t v22 = v16 + v9[6];
  *(void *)uint64_t v22 = v38;
  *(void *)(v22 + 8) = v20;
  *(_WORD *)(v22 + 16) = v21;
  char v43 = 3;
  sub_20AA9627C();
  sub_20AB86B80();
  *(unsigned char *)(v16 + v9[7]) = v38;
  char v43 = 4;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v36, v37);
  uint64_t v23 = v39;
  uint64_t v24 = v40;
  char v25 = BYTE8(v40);
  char v26 = BYTE9(v40);
  uint64_t v27 = v16 + v9[8];
  *(_OWORD *)uint64_t v27 = v38;
  *(void *)(v27 + 16) = v23;
  *(void *)(v27 + 24) = v24;
  *(unsigned char *)(v27 + 32) = v25;
  *(unsigned char *)(v27 + 33) = v26;
  sub_20AB67C28(v16, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return sub_20AB67C8C(v16);
}

void sub_20AB67BC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB6766C();
    unint64_t v7 = a3(a1, &type metadata for AdEngagementEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB67C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AdEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB67C8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AdEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB67CE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AdEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB67D00(void *a1)
{
  return AdEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB67D18@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537B8, MEMORY[0x263F24D18], (uint64_t)qword_2676574C0, a1);
}

uint64_t sub_20AB67D50@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537C0, MEMORY[0x263F24DD8], (uint64_t)qword_2676574D8, a1);
}

uint64_t sub_20AB67D88@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537C8, MEMORY[0x263F24DE8], (uint64_t)qword_2676574F0, a1);
}

uint64_t sub_20AB67DC0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v12, v4, v13);
}

uint64_t *initializeBufferWithCopyOfBuffer for AdEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    long long v14 = (char *)a2 + v12;
    sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    __int16 v18 = (char *)a2 + v16;
    sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    __int16 v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return a1;
}

uint64_t destroy for AdEngagementEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t initializeWithCopy for AdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for AdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for AdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for AdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB68F3C);
}

uint64_t sub_20AB68F3C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t storeEnumTagSinglePayload for AdEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB69214);
}

uint64_t sub_20AB69214(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  sub_20AB66B4C(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  sub_20AB66B4C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  sub_20AB66B4C(0, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  sub_20AB66B4C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_20AB694E4()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB66B4C(319, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
    if (v1 <= 0x3F)
    {
      sub_20AB66B4C(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
      if (v2 <= 0x3F)
      {
        sub_20AB66B4C(319, &qword_267655BF0, (void (*)(void))sub_20AA9627C, (void (*)(void))sub_20AA962D0);
        if (v3 <= 0x3F)
        {
          sub_20AB66B4C(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AdEngagementEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    uint64_t v13 = *((void *)v11 + 4);
    *((void *)v10 + 3) = *((void *)v11 + 3);
    *((void *)v10 + 4) = v13;
    uint64_t v14 = *((void *)v11 + 6);
    *((void *)v10 + 5) = *((void *)v11 + 5);
    *((void *)v10 + 6) = v14;
    uint64_t v15 = *((void *)v11 + 8);
    *((void *)v10 + 7) = *((void *)v11 + 7);
    *((void *)v10 + 8) = v15;
    uint64_t v16 = (char *)a1 + v9;
    uint64_t v17 = (char *)a2 + v9;
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    *((_WORD *)v16 + 8) = *((_WORD *)v17 + 8);
    uint64_t v19 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = *((void *)v21 + 3);
    *((void *)v20 + 2) = *((void *)v21 + 2);
    *((void *)v20 + 3) = v23;
    v20[32] = v21[32];
    v20[33] = v21[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AdEngagementEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  uint64_t v12 = *(void *)(v10 + 32);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  *(void *)(v9 + 32) = v12;
  uint64_t v13 = *(void *)(v10 + 48);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(void *)(v9 + 48) = v13;
  uint64_t v14 = *(void *)(v10 + 64);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(void *)(v9 + 64) = v14;
  uint64_t v15 = a1 + v8;
  uint64_t v16 = a2 + v8;
  uint64_t v17 = *(void *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  *(void *)(v15 + 8) = v17;
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  uint64_t v18 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v21;
  uint64_t v22 = *(void *)(v20 + 24);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(void *)(v19 + 24) = v22;
  *(unsigned char *)(v19 + 32) = *(unsigned char *)(v20 + 32);
  *(unsigned char *)(v19 + 33) = *(unsigned char *)(v20 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
  *(unsigned char *)(v11 + 17) = *(unsigned char *)(v12 + 17);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)(a2 + v13);
  *(void *)(v14 + 8) = *(void *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  *(void *)(v14 + 24) = *(void *)(v15 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 32) = *(unsigned char *)(v15 + 32);
  *(unsigned char *)(v14 + 33) = *(unsigned char *)(v15 + 33);
  return a1;
}

uint64_t initializeWithTake for AdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)(v9 + 64) = *(void *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  uint64_t v13 = a1 + v8;
  uint64_t v14 = (long long *)(a2 + v8);
  *(_WORD *)(v13 + 16) = *((_WORD *)v14 + 8);
  long long v15 = *v14;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  char v18 = *(unsigned char *)(a2 + v16);
  *(_OWORD *)uint64_t v13 = v15;
  *(unsigned char *)(a1 + v16) = v18;
  uint64_t v19 = a1 + v17;
  long long v20 = *(_OWORD *)(a2 + v17 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)(a2 + v17);
  *(_OWORD *)(v19 + 16) = v20;
  *(_WORD *)(v19 + 32) = *(_WORD *)(a2 + v17 + 32);
  return a1;
}

uint64_t assignWithTake for AdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 32);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v9 + 48);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v9 + 64);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14 + 8);
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  *(_WORD *)(v15 + 16) = *(_WORD *)(v16 + 16);
  uint64_t v18 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v20 + 24);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  *(void *)(v19 + 24) = v22;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v19 + 32) = *(unsigned char *)(v20 + 32);
  *(unsigned char *)(v19 + 33) = *(unsigned char *)(v20 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB69E88);
}

uint64_t sub_20AB69E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AdEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB69F60);
}

uint64_t sub_20AB69F60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AB6A020()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AdEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB6A1A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementEvent.Model.CodingKeys()
{
  return &type metadata for AdEngagementEvent.Model.CodingKeys;
}

unint64_t sub_20AB6A1DC()
{
  unint64_t result = qword_267657540;
  if (!qword_267657540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657540);
  }
  return result;
}

unint64_t sub_20AB6A234()
{
  unint64_t result = qword_267657548;
  if (!qword_267657548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657548);
  }
  return result;
}

unint64_t sub_20AB6A28C()
{
  unint64_t result = qword_267657550;
  if (!qword_267657550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657550);
  }
  return result;
}

uint64_t sub_20AB6A2E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA8450 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_20AB6A514(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC501D0, MEMORY[0x263F24D10]);
}

uint64_t static NewsArticleViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC501E8, MEMORY[0x263F24D18], (uint64_t)qword_26AC501D0, a1);
}

uint64_t static NewsArticleViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB6A57C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC501F0, MEMORY[0x263F24DC8]);
}

uint64_t static NewsArticleViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50208, MEMORY[0x263F24DD8], (uint64_t)qword_26AC501F0, a1);
}

uint64_t sub_20AB6A5DC()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_26AC51FA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC51FA0);
  return sub_20AB85D30();
}

uint64_t static NewsArticleViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC520B8, MEMORY[0x263F24DE8], (uint64_t)qword_26AC51FA0, a1);
}

uint64_t NewsArticleViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NewsArticleViewEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NewsArticleViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB6D258(type metadata accessor for NewsArticleViewEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for NewsArticleViewEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC50218);
}

uint64_t NewsArticleViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 24);
  sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 24);
  sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 28);
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 28);
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.feedPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 32);
  sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 32);
  sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.inGroupPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 36);
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 36);
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 40);
  sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 40);
  sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 44);
  sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 44);
  sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 48);
  sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 48);
  sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.articleScienceData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 52);
  sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 52);
  sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.userArticleContextData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 56);
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 56);
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 60);
  sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 60);
  sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.badgeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 64);
  sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.badgeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 64);
  sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.badgeData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 68);
  sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 68);
  sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.articleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 72);
  sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.articleViewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 72);
  sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.articleViewData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 76);
  sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 76);
  sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.viewEndData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 80);
  sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 80);
  sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.purchaseSessionData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 84);
  sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 84);
  sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.campaignData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.referringArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 88);
  sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.referringArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 88);
  sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.referringArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 92);
  sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NewsArticleViewEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 92);
  sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.paywallData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 96);
  sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB6C68C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t NewsArticleViewEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent(0) + 96);
  sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NewsArticleViewEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NewsArticleViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v10, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v10, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v2, v25);
  uint64_t v26 = a1 + v4[15];
  sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v26, v10, v27);
  uint64_t v28 = a1 + v4[16];
  sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v10, v29);
  uint64_t v30 = a1 + v4[17];
  sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v30, v2, v31);
  uint64_t v32 = a1 + v4[18];
  sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v32, v2, v33);
  uint64_t v34 = a1 + v4[19];
  sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v34, v2, v35);
  uint64_t v36 = a1 + v4[20];
  sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v36, v10, v37);
  uint64_t v38 = a1 + v4[21];
  sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 104))(v38, v10, v39);
  uint64_t v40 = a1 + v4[22];
  sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v40, v10, v41);
  uint64_t v42 = a1 + v4[23];
  sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v42, v10, v43);
  uint64_t v44 = a1 + v4[24];
  sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 104);

  return v46(v44, v10, v45);
}

uint64_t NewsArticleViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NewsArticleViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AB6D258(type metadata accessor for NewsArticleViewEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AB6D258@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for NewsArticleViewEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52DC0);
}

uint64_t NewsArticleViewEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleViewEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 28));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NewsArticleViewEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleViewEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 32));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NewsArticleViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 36);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 40));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t NewsArticleViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 44));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 48);
  long long v4 = *(_OWORD *)(v3 + 144);
  long long v5 = *(_OWORD *)(v3 + 176);
  long long v31 = *(_OWORD *)(v3 + 160);
  long long v32 = v5;
  long long v6 = *(_OWORD *)(v3 + 80);
  long long v7 = *(_OWORD *)(v3 + 112);
  long long v27 = *(_OWORD *)(v3 + 96);
  long long v8 = v27;
  long long v28 = v7;
  long long v9 = *(_OWORD *)(v3 + 112);
  long long v10 = *(_OWORD *)(v3 + 144);
  long long v29 = *(_OWORD *)(v3 + 128);
  long long v11 = v29;
  long long v30 = v10;
  long long v12 = *(_OWORD *)(v3 + 48);
  long long v13 = *(_OWORD *)(v3 + 80);
  long long v25 = *(_OWORD *)(v3 + 64);
  long long v14 = v25;
  long long v26 = v13;
  long long v15 = *(_OWORD *)(v3 + 16);
  long long v16 = *(_OWORD *)(v3 + 48);
  long long v23 = *(_OWORD *)(v3 + 32);
  long long v17 = v23;
  long long v24 = v16;
  long long v18 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  long long v19 = v22[0];
  v22[1] = v18;
  long long v20 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 160) = v31;
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v14;
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v33 = *(void *)(v3 + 192);
  *(void *)(a1 + 192) = *(void *)(v3 + 192);
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v15;
  return sub_20A9C5E44((uint64_t)v22);
}

uint64_t NewsArticleViewEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t NewsArticleViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t NewsArticleViewEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 60));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.badgeData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t NewsArticleViewEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 68));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.articleViewData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 72));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.viewEndData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 76));
  return result;
}

uint64_t NewsArticleViewEvent.Model.purchaseSessionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 80));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 84));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20AA261CC(v4, v5);
}

uint64_t NewsArticleViewEvent.Model.referringArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NewsArticleViewEvent.Model(0) + 88);
  char v4 = *(unsigned char *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v3 + 8);
  *(unsigned char *)(a1 + 24) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NewsArticleViewEvent.Model.paywallData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 92));
  return result;
}

uint64_t NewsArticleViewEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NewsArticleViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 96));
  return result;
}

__n128 NewsArticleViewEvent.Model.init(eventData:timedData:newsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:viewData:articleScienceData:userArticleContextData:orientationData:issueData:badgeData:channelData:articleViewData:viewEndData:purchaseSessionData:campaignData:referringArticleData:paywallData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, int *a4@<X3>, int *a5@<X4>, long long *a6@<X5>, long long *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, long long *a10, __int16 *a11, __int16 *a12, uint64_t *a13, __int16 *a14, long long *a15, uint64_t *a16, char *a17, uint64_t *a18, long long *a19, __n128 *a20,char *a21,char *a22)
{
  long long v54 = *a3;
  uint64_t v50 = *((void *)a3 + 3);
  uint64_t v51 = *((void *)a3 + 2);
  char v49 = *((unsigned char *)a3 + 32);
  uint64_t v24 = *((void *)a3 + 5);
  char v25 = *((unsigned char *)a3 + 48);
  uint64_t v26 = *((void *)a3 + 7);
  char v27 = *((unsigned char *)a3 + 64);
  char v28 = *((unsigned char *)a3 + 65);
  char v29 = *((unsigned char *)a3 + 66);
  char v30 = *((unsigned char *)a3 + 67);
  char v52 = *((unsigned char *)a4 + 4);
  int v53 = *a4;
  char v55 = *((unsigned char *)a5 + 4);
  int v56 = *a5;
  long long v58 = *a6;
  uint64_t v57 = *((void *)a6 + 2);
  long long v61 = a7[1];
  long long v62 = *a7;
  uint64_t v59 = *((void *)a7 + 5);
  uint64_t v60 = *((void *)a7 + 4);
  uint64_t v64 = a8[1];
  uint64_t v65 = *a8;
  __int16 v63 = *((_WORD *)a8 + 8);
  long long v101 = a10[10];
  long long v102 = a10[11];
  uint64_t v103 = *((void *)a10 + 24);
  long long v97 = a10[6];
  long long v98 = a10[7];
  long long v99 = a10[8];
  long long v100 = a10[9];
  long long v93 = a10[2];
  long long v94 = a10[3];
  long long v95 = a10[4];
  long long v96 = a10[5];
  long long v91 = *a10;
  long long v92 = a10[1];
  __int16 v67 = *a11;
  __int16 v68 = *a12;
  uint64_t v69 = a13[1];
  uint64_t v70 = *a13;
  __int16 v71 = *a14;
  long long v79 = *a15;
  uint64_t v75 = *((void *)a15 + 2);
  uint64_t v74 = *((void *)a15 + 3);
  char v72 = *((unsigned char *)a15 + 33);
  char v73 = *((unsigned char *)a15 + 32);
  uint64_t v76 = a16[1];
  uint64_t v77 = *a16;
  char v78 = *a17;
  uint64_t v80 = a18[1];
  uint64_t v81 = *a18;
  long long v88 = *a19;
  long long v86 = a19[1];
  uint64_t v82 = *((void *)a19 + 5);
  uint64_t v83 = *((void *)a19 + 4);
  __n128 v90 = *a20;
  unint64_t v85 = a20[1].n128_u64[0];
  unsigned __int8 v84 = a20[1].n128_u8[8];
  char v87 = *a21;
  char v89 = *a22;
  uint64_t v31 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(a9, a1, v31);
  long long v32 = (int *)type metadata accessor for NewsArticleViewEvent.Model(0);
  uint64_t v33 = a9 + v32[5];
  uint64_t v34 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v33, a2, v34);
  uint64_t v35 = a9 + v32[6];
  *(void *)(v35 + 16) = v51;
  *(void *)(v35 + 24) = v50;
  *(unsigned char *)(v35 + 32) = v49;
  *(void *)(v35 + 40) = v24;
  *(unsigned char *)(v35 + 48) = v25;
  *(void *)(v35 + 56) = v26;
  *(unsigned char *)(v35 + 64) = v27;
  *(unsigned char *)(v35 + 65) = v28;
  *(unsigned char *)(v35 + 66) = v29;
  *(unsigned char *)(v35 + 67) = v30;
  *(_OWORD *)uint64_t v35 = v54;
  uint64_t v36 = a9 + v32[7];
  *(_DWORD *)uint64_t v36 = v53;
  *(unsigned char *)(v36 + 4) = v52;
  uint64_t v37 = a9 + v32[8];
  *(_DWORD *)uint64_t v37 = v56;
  *(unsigned char *)(v37 + 4) = v55;
  uint64_t v38 = a9 + v32[9];
  *(_OWORD *)uint64_t v38 = v58;
  *(void *)(v38 + 16) = v57;
  uint64_t v39 = a9 + v32[10];
  *(_OWORD *)uint64_t v39 = v62;
  *(_OWORD *)(v39 + 16) = v61;
  *(void *)(v39 + 32) = v60;
  *(void *)(v39 + 40) = v59;
  uint64_t v40 = a9 + v32[11];
  *(void *)uint64_t v40 = v65;
  *(void *)(v40 + 8) = v64;
  *(_WORD *)(v40 + 16) = v63;
  uint64_t v41 = a9 + v32[12];
  *(void *)(v41 + 192) = v103;
  *(_OWORD *)(v41 + 160) = v101;
  *(_OWORD *)(v41 + 176) = v102;
  *(_OWORD *)(v41 + 96) = v97;
  *(_OWORD *)(v41 + 112) = v98;
  *(_OWORD *)(v41 + 128) = v99;
  *(_OWORD *)(v41 + 144) = v100;
  *(_OWORD *)(v41 + 32) = v93;
  *(_OWORD *)(v41 + 48) = v94;
  *(_OWORD *)(v41 + 64) = v95;
  *(_OWORD *)(v41 + 80) = v96;
  *(_OWORD *)uint64_t v41 = v91;
  *(_OWORD *)(v41 + 16) = v92;
  *(_WORD *)(a9 + v32[13]) = v67;
  *(_WORD *)(a9 + v32[14]) = v68;
  uint64_t v42 = (void *)(a9 + v32[15]);
  *uint64_t v42 = v70;
  v42[1] = v69;
  *(_WORD *)(a9 + v32[16]) = v71;
  uint64_t v43 = a9 + v32[17];
  *(void *)(v43 + 16) = v75;
  *(void *)(v43 + 24) = v74;
  *(unsigned char *)(v43 + 32) = v73;
  *(unsigned char *)(v43 + 33) = v72;
  *(_OWORD *)uint64_t v43 = v79;
  uint64_t v44 = (void *)(a9 + v32[18]);
  void *v44 = v77;
  v44[1] = v76;
  *(unsigned char *)(a9 + v32[19]) = v78;
  uint64_t v45 = (void *)(a9 + v32[20]);
  void *v45 = v81;
  v45[1] = v80;
  uint64_t v46 = a9 + v32[21];
  *(void *)(v46 + 32) = v83;
  *(void *)(v46 + 40) = v82;
  *(_OWORD *)uint64_t v46 = v88;
  *(_OWORD *)(v46 + 16) = v86;
  uint64_t v47 = (__n128 *)(a9 + v32[22]);
  v47[1].n128_u64[0] = v85;
  v47[1].n128_u8[8] = v84;
  __n128 result = v90;
  *uint64_t v47 = v90;
  *(unsigned char *)(a9 + v32[23]) = v87;
  *(unsigned char *)(a9 + v32[24]) = v89;
  return result;
}

uint64_t sub_20AB6DD6C(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      return 0x74614464656D6974;
    case 2:
      return 0x697472417377656ELL;
    case 3:
      return 0xD000000000000010;
    case 4:
    case 16:
    case 20:
      return 0xD000000000000013;
    case 5:
      unsigned int v3 = 1684366694;
      return v3 | 0x6174614400000000;
    case 6:
      return 0x74614470756F7267;
    case 7:
      unsigned int v3 = 2003134838;
      return v3 | 0x6174614400000000;
    case 8:
      return 0xD000000000000012;
    case 9:
      return 0xD000000000000016;
    case 10:
      return 0x7461746E6569726FLL;
    case 11:
      unsigned int v4 = 1970500457;
      return v4 | 0x7461446500000000;
    case 12:
      unsigned int v4 = 1734631778;
      return v4 | 0x7461446500000000;
    case 13:
      uint64_t v5 = 0x656E6E616863;
      goto LABEL_22;
    case 14:
      return 0x56656C6369747261;
    case 15:
      return 0x44646E4577656976;
    case 17:
      return 0x6E676961706D6163;
    case 18:
      return 0xD000000000000014;
    case 19:
      uint64_t v5 = 0x6C6177796170;
LABEL_22:
      uint64_t result = v5 & 0xFFFFFFFFFFFFLL | 0x446C000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB6DFDC()
{
  return sub_20AB6DD6C(*v0);
}

uint64_t sub_20AB6DFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB77370(a1, a2);
  *a3 = result;
  return result;
}

void sub_20AB6E00C(unsigned char *a1@<X8>)
{
  *a1 = 21;
}

uint64_t sub_20AB6E018(uint64_t a1)
{
  unint64_t v2 = sub_20AB6E9B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB6E054(uint64_t a1)
{
  unint64_t v2 = sub_20AB6E9B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NewsArticleViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB6F938(0, &qword_267657558, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v54 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB6E9B8();
  sub_20AB86DC0();
  LOBYTE(v56) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    long long v10 = (int *)type metadata accessor for NewsArticleViewEvent.Model(0);
    LOBYTE(v56) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    long long v11 = (long long *)(v3 + v10[6]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v56 = v12;
    *(void *)&long long v57 = v13;
    *((void *)&v57 + 1) = v14;
    LOBYTE(v58) = v15;
    *((void *)&v58 + 1) = v16;
    LOBYTE(v59) = v17;
    *((void *)&v59 + 1) = v18;
    LOBYTE(v60) = v19;
    BYTE1(v60) = v20;
    BYTE2(v60) = v21;
    BYTE3(v60) = (_BYTE)v11;
    LOBYTE(v70) = 2;
    sub_20A97A1AC();
    sub_20AB86C50();
    uint64_t v22 = (int *)(v3 + v10[7]);
    int v23 = *v22;
    LOBYTE(v22) = *((unsigned char *)v22 + 4);
    LODWORD(v56) = v23;
    BYTE4(v56) = (_BYTE)v22;
    LOBYTE(v70) = 3;
    sub_20A9EE598();
    sub_20AB86BE0();
    uint64_t v24 = (int *)(v3 + v10[8]);
    int v25 = *v24;
    LOBYTE(v24) = *((unsigned char *)v24 + 4);
    LODWORD(v56) = v25;
    BYTE4(v56) = (_BYTE)v24;
    LOBYTE(v70) = 4;
    sub_20A9EE7E8();
    sub_20AB86BE0();
    uint64_t v26 = (long long *)(v3 + v10[9]);
    uint64_t v27 = *((void *)v26 + 2);
    long long v56 = *v26;
    *(void *)&long long v57 = v27;
    LOBYTE(v70) = 5;
    sub_20A986774();
    sub_20AB86BE0();
    char v28 = (long long *)(v3 + v10[10]);
    long long v29 = v28[1];
    long long v56 = *v28;
    long long v57 = v29;
    long long v58 = v28[2];
    LOBYTE(v70) = 6;
    sub_20A986524();
    sub_20AB86BE0();
    char v30 = (uint64_t *)(v3 + v10[11]);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    LOWORD(v30) = *((_WORD *)v30 + 8);
    uint64_t v70 = v31;
    uint64_t v71 = v32;
    __int16 v72 = (__int16)v30;
    char v69 = 7;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v33 = (long long *)(v3 + v10[12]);
    long long v34 = v33[11];
    long long v66 = v33[10];
    long long v67 = v34;
    uint64_t v68 = *((void *)v33 + 24);
    long long v35 = v33[7];
    long long v62 = v33[6];
    long long v63 = v35;
    long long v36 = v33[9];
    long long v64 = v33[8];
    long long v65 = v36;
    long long v37 = v33[3];
    long long v58 = v33[2];
    long long v59 = v37;
    long long v38 = v33[5];
    long long v60 = v33[4];
    long long v61 = v38;
    long long v39 = *v33;
    long long v57 = v33[1];
    long long v56 = v39;
    char v55 = 8;
    sub_20A9C4D28();
    sub_20AB86C50();
    LOWORD(v56) = *(_WORD *)(v3 + v10[13]);
    char v55 = 9;
    sub_20A9C4F78();
    sub_20AB86C50();
    LOWORD(v56) = *(_WORD *)(v3 + v10[14]);
    char v55 = 10;
    sub_20A97C86C();
    sub_20AB86C50();
    long long v56 = *(_OWORD *)(v3 + v10[15]);
    char v55 = 11;
    sub_20A9870B4();
    sub_20AB86BE0();
    LOWORD(v56) = *(_WORD *)(v3 + v10[16]);
    char v55 = 12;
    sub_20AAD07A8();
    sub_20AB86BE0();
    uint64_t v40 = (long long *)(v3 + v10[17]);
    long long v41 = *v40;
    uint64_t v42 = *((void *)v40 + 2);
    uint64_t v43 = *((void *)v40 + 3);
    char v44 = *((unsigned char *)v40 + 32);
    LOBYTE(v40) = *((unsigned char *)v40 + 33);
    long long v56 = v41;
    *(void *)&long long v57 = v42;
    *((void *)&v57 + 1) = v43;
    LOBYTE(v58) = v44;
    BYTE1(v58) = (_BYTE)v40;
    char v55 = 13;
    sub_20A9862D4();
    sub_20AB86C50();
    uint64_t v45 = (uint64_t *)(v3 + v10[18]);
    uint64_t v47 = *v45;
    uint64_t v46 = v45[1];
    *(void *)&long long v56 = v47;
    *((void *)&v56 + 1) = v46;
    char v55 = 14;
    sub_20A9B0C0C();
    sub_20AB86C50();
    LOBYTE(v56) = *(unsigned char *)(v3 + v10[19]);
    char v55 = 15;
    sub_20A97CB38();
    sub_20AB86C50();
    long long v56 = *(_OWORD *)(v3 + v10[20]);
    char v55 = 16;
    sub_20A9D0E44();
    sub_20AB86BE0();
    long long v48 = (long long *)(v3 + v10[21]);
    long long v49 = v48[1];
    long long v56 = *v48;
    long long v57 = v49;
    long long v58 = v48[2];
    char v55 = 17;
    sub_20AA256F0();
    sub_20AB86BE0();
    uint64_t v50 = (long long *)(v3 + v10[22]);
    uint64_t v51 = *((void *)v50 + 2);
    char v52 = *((unsigned char *)v50 + 24);
    long long v56 = *v50;
    *(void *)&long long v57 = v51;
    BYTE8(v57) = v52;
    char v55 = 18;
    sub_20AA94A8C();
    sub_20AB86BE0();
    LOBYTE(v56) = *(unsigned char *)(v3 + v10[23]);
    char v55 = 19;
    sub_20A9D1360();
    sub_20AB86BE0();
    LOBYTE(v56) = *(unsigned char *)(v3 + v10[24]);
    char v55 = 20;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB6E9B8()
{
  unint64_t result = qword_26AC52D58;
  if (!qword_26AC52D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52D58);
  }
  return result;
}

uint64_t NewsArticleViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v90 = sub_20AB85FE0();
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x270FA5388](v90);
  unsigned int v4 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v89 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB6F938(0, &qword_26AC52D60, MEMORY[0x263F8E040]);
  uint64_t v93 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v87 - v10;
  long long v98 = (int *)type metadata accessor for NewsArticleViewEvent.Model(0);
  MEMORY[0x270FA5388](v98);
  long long v97 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v94 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_20AB6E9B8();
  long long v95 = v11;
  uint64_t v14 = v96;
  sub_20AB86DA0();
  uint64_t v87 = v5;
  if (v14)
  {
    uint64_t v96 = v14;
    LODWORD(v95) = 0;
    unsigned int v16 = 0;
  }
  else
  {
    char v15 = v4;
    LOBYTE(v102) = 0;
    sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
    sub_20AB86B80();
    uint64_t v33 = v97;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v97, v7, v5);
    LOBYTE(v102) = 1;
    sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
    uint64_t v34 = v90;
    sub_20AB86B80();
    long long v35 = v98;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(&v33[v98[5]], v15, v34);
    LOBYTE(v99) = 2;
    sub_20A97A154();
    sub_20AB86B80();
    long long v36 = v103;
    char v37 = v104;
    uint64_t v38 = *((void *)&v104 + 1);
    char v39 = v105;
    uint64_t v40 = *((void *)&v105 + 1);
    char v41 = v106;
    char v42 = BYTE1(v106);
    char v43 = BYTE2(v106);
    char v44 = BYTE3(v106);
    uint64_t v45 = &v33[v35[6]];
    *(_OWORD *)uint64_t v45 = v102;
    *((_OWORD *)v45 + 1) = v36;
    v45[32] = v37;
    *((void *)v45 + 5) = v38;
    v45[48] = v39;
    *((void *)v45 + 7) = v40;
    v45[64] = v41;
    v45[65] = v42;
    v45[66] = v43;
    v45[67] = v44;
    LOBYTE(v99) = 3;
    sub_20A9EE544();
    sub_20AB86B10();
    char v46 = BYTE4(v102);
    uint64_t v47 = &v33[v35[7]];
    *(_DWORD *)uint64_t v47 = v102;
    v47[4] = v46;
    LOBYTE(v99) = 4;
    sub_20A9EE794();
    sub_20AB86B10();
    char v48 = BYTE4(v102);
    long long v49 = &v33[v35[8]];
    *(_DWORD *)long long v49 = v102;
    v49[4] = v48;
    LOBYTE(v99) = 5;
    sub_20A986720();
    sub_20AB86B10();
    uint64_t v50 = v103;
    uint64_t v51 = &v33[v35[9]];
    *(_OWORD *)uint64_t v51 = v102;
    *((void *)v51 + 2) = v50;
    LOBYTE(v99) = 6;
    sub_20A9864D0();
    sub_20AB86B10();
    char v52 = &v33[v35[10]];
    long long v53 = v103;
    *(_OWORD *)char v52 = v102;
    *((_OWORD *)v52 + 1) = v53;
    *((_OWORD *)v52 + 2) = v104;
    LOBYTE(v99) = 7;
    sub_20A986BC0();
    sub_20AB86B80();
    uint64_t v54 = *((void *)&v102 + 1);
    __int16 v55 = v103;
    long long v56 = &v33[v35[11]];
    *(void *)long long v56 = v102;
    *((void *)v56 + 1) = v54;
    *((_WORD *)v56 + 8) = v55;
    char v117 = 8;
    sub_20A9C4CD4();
    sub_20AB86B80();
    long long v57 = &v33[v35[12]];
    long long v58 = v113;
    *((_OWORD *)v57 + 10) = v112;
    *((_OWORD *)v57 + 11) = v58;
    *((void *)v57 + 24) = v114;
    long long v59 = v109;
    *((_OWORD *)v57 + 6) = v108;
    *((_OWORD *)v57 + 7) = v59;
    long long v60 = v111;
    *((_OWORD *)v57 + 8) = v110;
    *((_OWORD *)v57 + 9) = v60;
    long long v61 = v105;
    *((_OWORD *)v57 + 2) = v104;
    *((_OWORD *)v57 + 3) = v61;
    long long v62 = v107;
    *((_OWORD *)v57 + 4) = v106;
    *((_OWORD *)v57 + 5) = v62;
    long long v63 = v103;
    *(_OWORD *)long long v57 = v102;
    *((_OWORD *)v57 + 1) = v63;
    char v116 = 9;
    sub_20A9C4F24();
    sub_20AB86B80();
    uint64_t v96 = 0;
    *(_WORD *)&v97[v98[13]] = v99;
    char v116 = 10;
    sub_20A97C818();
    uint64_t v64 = v96;
    sub_20AB86B80();
    uint64_t v96 = v64;
    if (v64
      || (*(_WORD *)&v97[v98[14]] = v99, v116 = 11, sub_20A987060(), uint64_t v65 = v96, sub_20AB86B10(), (v96 = v65) != 0))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v95, v93);
      LODWORD(v95) = 0;
      unsigned int v16 = 487;
    }
    else
    {
      *(_OWORD *)&v97[v98[15]] = v99;
      char v116 = 12;
      sub_20AAD0754();
      uint64_t v66 = v96;
      sub_20AB86B10();
      uint64_t v96 = v66;
      if (v66
        || (*(_WORD *)&v97[v98[16]] = v99, v116 = 13, sub_20A986280(), uint64_t v67 = v96, sub_20AB86B80(), (v96 = v67) != 0))
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v95, v93);
        LODWORD(v95) = 0;
        unsigned int v16 = 2535;
      }
      else
      {
        long long v68 = v100;
        char v69 = v101;
        char v70 = BYTE1(v101);
        uint64_t v71 = &v97[v98[17]];
        *(_OWORD *)uint64_t v71 = v99;
        *((_OWORD *)v71 + 1) = v68;
        v71[32] = v69;
        v71[33] = v70;
        char v116 = 14;
        sub_20A9B0BB8();
        uint64_t v72 = v96;
        sub_20AB86B80();
        uint64_t v96 = v72;
        if (v72)
        {
          (*(void (**)(char *, uint64_t))(v9 + 8))(v95, v93);
          LODWORD(v95) = 0;
          unsigned int v16 = 10727;
        }
        else
        {
          uint64_t v73 = *((void *)&v99 + 1);
          uint64_t v74 = &v97[v98[18]];
          *(void *)uint64_t v74 = v99;
          *((void *)v74 + 1) = v73;
          char v116 = 15;
          sub_20A97CAE4();
          uint64_t v75 = v96;
          sub_20AB86B80();
          uint64_t v96 = v75;
          if (!v75)
          {
            v97[v98[19]] = v99;
            char v116 = 16;
            sub_20A9D0DF0();
            uint64_t v76 = v96;
            sub_20AB86B10();
            uint64_t v96 = v76;
            if (!v76)
            {
              *(_OWORD *)&v97[v98[20]] = v99;
              char v116 = 17;
              sub_20AA2569C();
              uint64_t v77 = v96;
              sub_20AB86B10();
              uint64_t v96 = v77;
              if (v77)
              {
                (*(void (**)(char *, uint64_t))(v9 + 8))(v95, v93);
                __swift_destroy_boxed_opaque_existential_1(v94);
                LODWORD(v93) = 0;
                LODWORD(v94) = 0;
                LOBYTE(v32) = 1;
                int v20 = 1;
                int v21 = 1;
                int v22 = 1;
                int v23 = 1;
                int v24 = 1;
                int v91 = 1;
                int v115 = 1;
                LODWORD(v95) = 1;
                LODWORD(v92) = 1;
              }
              else
              {
                char v78 = &v97[v98[21]];
                long long v79 = v100;
                *(_OWORD *)char v78 = v99;
                *((_OWORD *)v78 + 1) = v79;
                *((_OWORD *)v78 + 2) = v101;
                char v116 = 18;
                sub_20AA94A34();
                uint64_t v80 = v96;
                sub_20AB86B10();
                uint64_t v96 = v80;
                if (v80)
                {
                  (*(void (**)(char *, uint64_t))(v9 + 8))(v95, v93);
                  __swift_destroy_boxed_opaque_existential_1(v94);
                  LODWORD(v94) = 0;
                  LOBYTE(v32) = 1;
                  int v20 = 1;
                  int v21 = 1;
                  int v22 = 1;
                  int v23 = 1;
                  int v24 = 1;
                  int v91 = 1;
                  int v115 = 1;
                  LODWORD(v95) = 1;
                  LODWORD(v92) = 1;
                  LODWORD(v93) = 1;
                }
                else
                {
                  uint64_t v81 = v100;
                  char v82 = BYTE8(v100);
                  uint64_t v83 = &v97[v98[22]];
                  *(_OWORD *)uint64_t v83 = v99;
                  *((void *)v83 + 2) = v81;
                  v83[24] = v82;
                  char v116 = 19;
                  sub_20A9D130C();
                  uint64_t v84 = v96;
                  sub_20AB86B10();
                  uint64_t v96 = v84;
                  if (!v84)
                  {
                    v97[v98[23]] = v99;
                    char v116 = 20;
                    sub_20A98757C();
                    uint64_t v85 = v96;
                    sub_20AB86B10();
                    uint64_t v96 = v85;
                    if (!v85)
                    {
                      (*(void (**)(char *, uint64_t))(v9 + 8))(v95, v93);
                      uint64_t v86 = (uint64_t)v97;
                      v97[v98[24]] = v99;
                      sub_20AB6F9EC(v86, v92);
                      __swift_destroy_boxed_opaque_existential_1(v94);
                      return sub_20AB6FA50(v86);
                    }
                  }
                  (*(void (**)(char *, uint64_t))(v9 + 8))(v95, v93);
                  __swift_destroy_boxed_opaque_existential_1(v94);
                  LOBYTE(v32) = 1;
                  int v20 = 1;
                  int v21 = 1;
                  int v22 = 1;
                  int v23 = 1;
                  int v24 = 1;
                  int v91 = 1;
                  int v115 = 1;
                  LODWORD(v95) = 1;
                  LODWORD(v92) = 1;
                  LODWORD(v93) = 1;
                  LODWORD(v94) = 1;
                }
              }
              char v17 = v97;
              uint64_t v18 = v98;
              goto LABEL_19;
            }
          }
          (*(void (**)(char *, uint64_t))(v9 + 8))(v95, v93);
          unsigned int v16 = 27111;
          LODWORD(v95) = 1;
        }
      }
    }
  }
  char v17 = v97;
  uint64_t v18 = v98;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(v94);
  int v20 = (v16 >> 2) & 1;
  int v21 = (v16 >> 5) & 1;
  int v22 = (v16 >> 6) & 1;
  int v23 = (v16 >> 7) & 1;
  int v24 = (v16 >> 8) & 1;
  int v91 = (v16 >> 11) & 1;
  int v115 = (v16 >> 13) & 1;
  if ((v16 & 1) == 0)
  {
    LODWORD(v94) = 0;
    LODWORD(v93) = 0;
    LODWORD(v92) = 0;
    if ((v16 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
  LODWORD(v92) = 0;
  LODWORD(v93) = 0;
  LODWORD(v94) = 0;
  int v32 = (v16 >> 1) & 1;
LABEL_19:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v17, v87);
  if ((v32 & 1) == 0)
  {
LABEL_6:
    if (v20) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(&v17[v18[5]], v90);
  if (v20)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  if (!v21)
  {
LABEL_8:
    if (v22) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_9:
    uint64_t result = sub_20A98937C(*(void *)&v17[v18[10]], *(void *)&v17[v18[10] + 8], *(void *)&v17[v18[10] + 16]);
    if ((v23 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  if (!v23)
  {
LABEL_10:
    if (v24) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = swift_bridgeObjectRelease();
  if (v24)
  {
LABEL_11:
    int v25 = &v17[v18[12]];
    long long v26 = *((_OWORD *)v25 + 11);
    long long v112 = *((_OWORD *)v25 + 10);
    long long v113 = v26;
    uint64_t v114 = *((void *)v25 + 24);
    long long v27 = *((_OWORD *)v25 + 7);
    long long v108 = *((_OWORD *)v25 + 6);
    long long v109 = v27;
    long long v28 = *((_OWORD *)v25 + 9);
    long long v110 = *((_OWORD *)v25 + 8);
    long long v111 = v28;
    long long v29 = *((_OWORD *)v25 + 3);
    long long v104 = *((_OWORD *)v25 + 2);
    long long v105 = v29;
    long long v30 = *((_OWORD *)v25 + 5);
    long long v106 = *((_OWORD *)v25 + 4);
    long long v107 = v30;
    long long v31 = *((_OWORD *)v25 + 1);
    long long v102 = *(_OWORD *)v25;
    long long v103 = v31;
    uint64_t result = sub_20A9C74B0((uint64_t)&v102);
    if ((v91 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  if (!v91)
  {
LABEL_12:
    if (v115) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = swift_bridgeObjectRelease();
  if (v115)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v95 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  if (!v95)
  {
LABEL_14:
    if (v92) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = swift_bridgeObjectRelease();
  if (v92)
  {
LABEL_15:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v93 & 1) == 0) {
      goto LABEL_16;
    }
LABEL_30:
    uint64_t result = sub_20AB6F99C(*(void *)&v17[v18[21]], *(void *)&v17[v18[21] + 8]);
    if ((v94 & 1) == 0) {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_29:
  if (v93) {
    goto LABEL_30;
  }
LABEL_16:
  if (!v94) {
    return result;
  }
  return swift_bridgeObjectRelease();
}

void sub_20AB6F938(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB6E9B8();
    unint64_t v7 = a3(a1, &type metadata for NewsArticleViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB6F99C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20AB6F9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB6FA50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewsArticleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB6FAAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsArticleViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB6FAC4(void *a1)
{
  return NewsArticleViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB6FADC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC501E8, MEMORY[0x263F24D18], (uint64_t)qword_26AC501D0, a1);
}

uint64_t sub_20AB6FB14@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50208, MEMORY[0x263F24DD8], (uint64_t)qword_26AC501F0, a1);
}

uint64_t sub_20AB6FB4C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC520B8, MEMORY[0x263F24DE8], (uint64_t)qword_26AC51FA0, a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for NewsArticleViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v88 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v88 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    char v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    int v21 = (char *)a1 + v20;
    int v22 = (char *)a2 + v20;
    sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    int v25 = (char *)a1 + v24;
    long long v26 = (char *)a2 + v24;
    sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    long long v30 = (char *)a2 + v28;
    sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    uint64_t v45 = (char *)a1 + v44;
    char v46 = (char *)a2 + v44;
    sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    long long v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = a3[16];
    long long v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)a2 + v52;
    sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = a3[17];
    long long v57 = (char *)a1 + v56;
    long long v58 = (char *)a2 + v56;
    sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    uint64_t v60 = a3[18];
    long long v61 = (char *)a1 + v60;
    long long v62 = (char *)a2 + v60;
    sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
    uint64_t v64 = a3[19];
    uint64_t v65 = (char *)a1 + v64;
    uint64_t v66 = (char *)a2 + v64;
    sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
    uint64_t v68 = a3[20];
    char v69 = (char *)a1 + v68;
    char v70 = (char *)a2 + v68;
    sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
    uint64_t v72 = a3[21];
    uint64_t v73 = (char *)a1 + v72;
    uint64_t v74 = (char *)a2 + v72;
    sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
    uint64_t v76 = a3[22];
    uint64_t v77 = (char *)a1 + v76;
    char v78 = (char *)a2 + v76;
    sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
    uint64_t v80 = a3[23];
    uint64_t v81 = (char *)a1 + v80;
    char v82 = (char *)a2 + v80;
    sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
    uint64_t v84 = a3[24];
    uint64_t v85 = (char *)a1 + v84;
    uint64_t v86 = (char *)a2 + v84;
    sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
  }
  return a1;
}

uint64_t destroy for NewsArticleViewEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = a1 + a2[16];
  sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = a1 + a2[17];
  sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
  uint64_t v31 = a1 + a2[18];
  sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  uint64_t v33 = a1 + a2[19];
  sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
  uint64_t v35 = a1 + a2[20];
  sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
  uint64_t v37 = a1 + a2[21];
  sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  uint64_t v39 = a1 + a2[22];
  sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  uint64_t v41 = a1 + a2[23];
  sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
  uint64_t v43 = a1 + a2[24];
  sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8);

  return v45(v43, v44);
}

uint64_t initializeWithCopy for NewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
  uint64_t v67 = a3[20];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
  uint64_t v71 = a3[21];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = a2 + v71;
  sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
  uint64_t v75 = a3[22];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = a2 + v75;
  sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
  uint64_t v79 = a3[23];
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 16))(v80, v81, v82);
  uint64_t v83 = a3[24];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = a2 + v83;
  sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
  return a1;
}

uint64_t assignWithCopy for NewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 24))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 24))(v64, v65, v66);
  uint64_t v67 = a3[20];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 24))(v68, v69, v70);
  uint64_t v71 = a3[21];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = a2 + v71;
  sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 24))(v72, v73, v74);
  uint64_t v75 = a3[22];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = a2 + v75;
  sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 24))(v76, v77, v78);
  uint64_t v79 = a3[23];
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 24))(v80, v81, v82);
  uint64_t v83 = a3[24];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = a2 + v83;
  sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 24))(v84, v85, v86);
  return a1;
}

uint64_t initializeWithTake for NewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
  uint64_t v67 = a3[20];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
  uint64_t v71 = a3[21];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = a2 + v71;
  sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
  uint64_t v75 = a3[22];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = a2 + v75;
  sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
  uint64_t v79 = a3[23];
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
  uint64_t v83 = a3[24];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = a2 + v83;
  sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 32))(v84, v85, v86);
  return a1;
}

uint64_t assignWithTake for NewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  uint64_t v63 = a3[19];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
  uint64_t v67 = a3[20];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = a2 + v67;
  sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
  uint64_t v71 = a3[21];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = a2 + v71;
  sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
  uint64_t v75 = a3[22];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = a2 + v75;
  sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 40))(v76, v77, v78);
  uint64_t v79 = a3[23];
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 40))(v80, v81, v82);
  uint64_t v83 = a3[24];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = a2 + v83;
  sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 40))(v84, v85, v86);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB738C4);
}

uint64_t sub_20AB738C4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_42:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_41:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_42;
  }
  sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a2)
  {
    uint64_t v8 = v24;
    uint64_t v12 = *(void *)(v24 - 8);
    uint64_t v13 = a3[16];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a2)
  {
    uint64_t v8 = v25;
    uint64_t v12 = *(void *)(v25 - 8);
    uint64_t v13 = a3[17];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a2)
  {
    uint64_t v8 = v26;
    uint64_t v12 = *(void *)(v26 - 8);
    uint64_t v13 = a3[18];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  if (*(_DWORD *)(*(void *)(v27 - 8) + 84) == a2)
  {
    uint64_t v8 = v27;
    uint64_t v12 = *(void *)(v27 - 8);
    uint64_t v13 = a3[19];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  if (*(_DWORD *)(*(void *)(v28 - 8) + 84) == a2)
  {
    uint64_t v8 = v28;
    uint64_t v12 = *(void *)(v28 - 8);
    uint64_t v13 = a3[20];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  if (*(_DWORD *)(*(void *)(v29 - 8) + 84) == a2)
  {
    uint64_t v8 = v29;
    uint64_t v12 = *(void *)(v29 - 8);
    uint64_t v13 = a3[21];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
  if (*(_DWORD *)(*(void *)(v30 - 8) + 84) == a2)
  {
    uint64_t v8 = v30;
    uint64_t v12 = *(void *)(v30 - 8);
    uint64_t v13 = a3[22];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  if (*(_DWORD *)(*(void *)(v31 - 8) + 84) == a2)
  {
    uint64_t v8 = v31;
    uint64_t v12 = *(void *)(v31 - 8);
    uint64_t v13 = a3[23];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48);
  uint64_t v35 = v33;
  uint64_t v36 = a1 + a3[24];

  return v34(v36, a2, v35);
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB743A4);
}

uint64_t sub_20AB743A4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_42:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_41:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_42;
  }
  sub_20AB6C68C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a3)
  {
    uint64_t v10 = v26;
    uint64_t v14 = *(void *)(v26 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v27 - 8) + 84) == a3)
  {
    uint64_t v10 = v27;
    uint64_t v14 = *(void *)(v27 - 8);
    uint64_t v15 = a4[17];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  if (*(_DWORD *)(*(void *)(v28 - 8) + 84) == a3)
  {
    uint64_t v10 = v28;
    uint64_t v14 = *(void *)(v28 - 8);
    uint64_t v15 = a4[18];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  if (*(_DWORD *)(*(void *)(v29 - 8) + 84) == a3)
  {
    uint64_t v10 = v29;
    uint64_t v14 = *(void *)(v29 - 8);
    uint64_t v15 = a4[19];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  if (*(_DWORD *)(*(void *)(v30 - 8) + 84) == a3)
  {
    uint64_t v10 = v30;
    uint64_t v14 = *(void *)(v30 - 8);
    uint64_t v15 = a4[20];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  if (*(_DWORD *)(*(void *)(v31 - 8) + 84) == a3)
  {
    uint64_t v10 = v31;
    uint64_t v14 = *(void *)(v31 - 8);
    uint64_t v15 = a4[21];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
  if (*(_DWORD *)(*(void *)(v32 - 8) + 84) == a3)
  {
    uint64_t v10 = v32;
    uint64_t v14 = *(void *)(v32 - 8);
    uint64_t v15 = a4[22];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  if (*(_DWORD *)(*(void *)(v33 - 8) + 84) == a3)
  {
    uint64_t v10 = v33;
    uint64_t v14 = *(void *)(v33 - 8);
    uint64_t v15 = a4[23];
    goto LABEL_41;
  }
  sub_20AB6C68C(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
  uint64_t v37 = v35;
  uint64_t v38 = a1 + a4[24];

  return v36(v38, a2, a2, v37);
}

void sub_20AB74E7C()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AB6C68C(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
      if (v2 <= 0x3F)
      {
        sub_20AB6C68C(319, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
        if (v3 <= 0x3F)
        {
          sub_20AB6C68C(319, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
          if (v4 <= 0x3F)
          {
            sub_20AB6C68C(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
            if (v5 <= 0x3F)
            {
              sub_20AB6C68C(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
              if (v6 <= 0x3F)
              {
                sub_20AB6C68C(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
                if (v7 <= 0x3F)
                {
                  sub_20AB6C68C(319, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
                  if (v8 <= 0x3F)
                  {
                    sub_20AB6C68C(319, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
                    if (v9 <= 0x3F)
                    {
                      sub_20AB6C68C(319, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
                      if (v10 <= 0x3F)
                      {
                        sub_20AB6C68C(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                        if (v11 <= 0x3F)
                        {
                          sub_20AB6C68C(319, &qword_26AC4E6A8, (void (*)(void))sub_20AAD0754, (void (*)(void))sub_20AAD07A8);
                          if (v12 <= 0x3F)
                          {
                            sub_20AB6C68C(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
                            if (v13 <= 0x3F)
                            {
                              sub_20AB6C68C(319, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
                              if (v14 <= 0x3F)
                              {
                                sub_20AB6C68C(319, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
                                if (v15 <= 0x3F)
                                {
                                  sub_20AB6C68C(319, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
                                  if (v16 <= 0x3F)
                                  {
                                    sub_20AB6C68C(319, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
                                    if (v17 <= 0x3F)
                                    {
                                      sub_20AB6C68C(319, &qword_26AC4E650, (void (*)(void))sub_20AA94A34, (void (*)(void))sub_20AA94A8C);
                                      if (v18 <= 0x3F)
                                      {
                                        sub_20AB6C68C(319, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
                                        if (v19 <= 0x3F)
                                        {
                                          sub_20AB6C68C(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
                                          if (v20 <= 0x3F) {
                                            swift_initStructMetadata();
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for NewsArticleViewEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (void *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    unint64_t v14 = (char *)a1 + v12;
    unint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)unint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    v14[32] = v15[32];
    *((void *)v14 + 5) = *((void *)v15 + 5);
    v14[48] = v15[48];
    *((void *)v14 + 7) = *((void *)v15 + 7);
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    unint64_t v18 = (char *)a1 + v13;
    unint64_t v19 = (char *)a2 + v13;
    *(_DWORD *)unint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    void v22[4] = v23[4];
    uint64_t v24 = (char *)a1 + v21;
    uint64_t v25 = (char *)a2 + v21;
    char *v24 = *v25;
    uint64_t v26 = *((void *)v25 + 2);
    *((void *)v24 + 1) = *((void *)v25 + 1);
    *((void *)v24 + 2) = v26;
    uint64_t v27 = a3[10];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = *(void *)((char *)a2 + v27 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      *uint64_t v28 = *v29;
      *((void *)v28 + 1) = *((void *)v29 + 1);
      *((void *)v28 + 2) = v30;
      *((void *)v28 + 3) = *((void *)v29 + 3);
      uint64_t v31 = *((void *)v29 + 5);
      *((void *)v28 + 4) = *((void *)v29 + 4);
      *((void *)v28 + 5) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v33 = *((_OWORD *)v29 + 1);
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v33;
      *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
    }
    uint64_t v34 = a3[11];
    uint64_t v35 = a3[12];
    uint64_t v36 = (char *)a1 + v34;
    uint64_t v37 = (char *)a2 + v34;
    uint64_t v38 = *((void *)v37 + 1);
    *(void *)uint64_t v36 = *(void *)v37;
    *((void *)v36 + 1) = v38;
    *((_WORD *)v36 + 8) = *((_WORD *)v37 + 8);
    uint64_t v39 = (char *)a1 + v35;
    uint64_t v40 = (char *)a2 + v35;
    long long v41 = *((_OWORD *)v40 + 1);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v41;
    long long v42 = *((_OWORD *)v40 + 3);
    *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
    *((_OWORD *)v39 + 3) = v42;
    *((_OWORD *)v39 + 4) = *((_OWORD *)v40 + 4);
    *((void *)v39 + 10) = *((void *)v40 + 10);
    *(_OWORD *)(v39 + 88) = *(_OWORD *)(v40 + 88);
    *(_OWORD *)(v39 + 104) = *(_OWORD *)(v40 + 104);
    *((_DWORD *)v39 + 30) = *((_DWORD *)v40 + 30);
    *((_OWORD *)v39 + 8) = *((_OWORD *)v40 + 8);
    v39[144] = v40[144];
    *(void *)(v39 + 148) = *(void *)(v40 + 148);
    long long v43 = *((_OWORD *)v40 + 11);
    *((_OWORD *)v39 + 10) = *((_OWORD *)v40 + 10);
    *((_OWORD *)v39 + 11) = v43;
    *((void *)v39 + 24) = *((void *)v40 + 24);
    uint64_t v44 = a3[14];
    *(_WORD *)((char *)a1 + a3[13]) = *(_WORD *)((char *)a2 + a3[13]);
    *(_WORD *)((char *)a1 + v44) = *(_WORD *)((char *)a2 + v44);
    uint64_t v45 = a3[15];
    uint64_t v46 = a3[16];
    uint64_t v47 = (void *)((char *)a1 + v45);
    uint64_t v48 = (void *)((char *)a2 + v45);
    uint64_t v49 = v48[1];
    *uint64_t v47 = *v48;
    v47[1] = v49;
    *(_WORD *)((char *)a1 + v46) = *(_WORD *)((char *)a2 + v46);
    uint64_t v50 = a3[17];
    uint64_t v51 = a3[18];
    uint64_t v52 = (char *)a1 + v50;
    uint64_t v53 = (char *)a2 + v50;
    uint64_t v54 = *((void *)v53 + 1);
    *(void *)uint64_t v52 = *(void *)v53;
    *((void *)v52 + 1) = v54;
    uint64_t v55 = *((void *)v53 + 3);
    *((void *)v52 + 2) = *((void *)v53 + 2);
    *((void *)v52 + 3) = v55;
    v52[32] = v53[32];
    v52[33] = v53[33];
    uint64_t v56 = (void *)((char *)a1 + v51);
    uint64_t v57 = (void *)((char *)a2 + v51);
    uint64_t v58 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = a3[20];
    *((unsigned char *)a1 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    uint64_t v60 = (void *)((char *)a1 + v59);
    uint64_t v61 = (void *)((char *)a2 + v59);
    uint64_t v62 = v61[1];
    *uint64_t v60 = *v61;
    v60[1] = v62;
    uint64_t v63 = a3[21];
    uint64_t v64 = (void *)((char *)a1 + v63);
    uint64_t v65 = (void *)((char *)a2 + v63);
    uint64_t v76 = *(void *)((char *)a2 + v63 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v76)
    {
      *uint64_t v64 = *v65;
      v64[1] = v76;
      uint64_t v66 = v65[3];
      v64[2] = v65[2];
      v64[3] = v66;
      uint64_t v67 = v65[4];
      uint64_t v68 = v65[5];
      v64[4] = v67;
      v64[5] = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v69 = *((_OWORD *)v65 + 1);
      *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v69;
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
    }
    uint64_t v70 = a3[22];
    uint64_t v71 = a3[23];
    uint64_t v72 = (char *)a1 + v70;
    uint64_t v73 = (char *)a2 + v70;
    uint64_t v74 = *((void *)v73 + 2);
    *((void *)v72 + 1) = *((void *)v73 + 1);
    *((void *)v72 + 2) = v74;
    *(void *)uint64_t v72 = *(void *)v73;
    v72[24] = v73[24];
    *((unsigned char *)a1 + v71) = *((unsigned char *)a2 + v71);
    *((unsigned char *)a1 + a3[24]) = *((unsigned char *)a2 + a3[24]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NewsArticleViewEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[10] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[21] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(unsigned char *)(v13 + 48) = *(unsigned char *)(v14 + 48);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(unsigned char *)(v21 + 4) = *(unsigned char *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
  uint64_t v25 = *(void *)(v24 + 16);
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  *(void *)(v23 + 16) = v25;
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void *)(a2 + v26 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29)
  {
    *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
    *(void *)(v27 + 8) = *(void *)(v28 + 8);
    *(void *)(v27 + 16) = v29;
    *(void *)(v27 + 24) = *(void *)(v28 + 24);
    uint64_t v30 = *(void *)(v28 + 40);
    *(void *)(v27 + 32) = *(void *)(v28 + 32);
    *(void *)(v27 + 40) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v31 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v31;
    *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
  }
  uint64_t v32 = a3[11];
  uint64_t v33 = a3[12];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  uint64_t v36 = *(void *)(v35 + 8);
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = v36;
  *(_WORD *)(v34 + 16) = *(_WORD *)(v35 + 16);
  uint64_t v37 = a1 + v33;
  uint64_t v38 = a2 + v33;
  long long v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  long long v40 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v40;
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(void *)(v37 + 80) = *(void *)(v38 + 80);
  *(_OWORD *)(v37 + 88) = *(_OWORD *)(v38 + 88);
  *(_OWORD *)(v37 + 104) = *(_OWORD *)(v38 + 104);
  *(_DWORD *)(v37 + 120) = *(_DWORD *)(v38 + 120);
  *(_OWORD *)(v37 + 128) = *(_OWORD *)(v38 + 128);
  *(unsigned char *)(v37 + 144) = *(unsigned char *)(v38 + 144);
  *(void *)(v37 + 148) = *(void *)(v38 + 148);
  long long v41 = *(_OWORD *)(v38 + 176);
  *(_OWORD *)(v37 + 160) = *(_OWORD *)(v38 + 160);
  *(_OWORD *)(v37 + 176) = v41;
  *(void *)(v37 + 192) = *(void *)(v38 + 192);
  uint64_t v42 = a3[14];
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  *(_WORD *)(a1 + v42) = *(_WORD *)(a2 + v42);
  uint64_t v43 = a3[15];
  uint64_t v44 = a3[16];
  uint64_t v45 = (void *)(a1 + v43);
  uint64_t v46 = (void *)(a2 + v43);
  uint64_t v47 = v46[1];
  void *v45 = *v46;
  v45[1] = v47;
  *(_WORD *)(a1 + v44) = *(_WORD *)(a2 + v44);
  uint64_t v48 = a3[17];
  uint64_t v49 = a3[18];
  uint64_t v50 = a1 + v48;
  uint64_t v51 = a2 + v48;
  uint64_t v52 = *(void *)(v51 + 8);
  *(void *)uint64_t v50 = *(void *)v51;
  *(void *)(v50 + 8) = v52;
  uint64_t v53 = *(void *)(v51 + 24);
  *(void *)(v50 + 16) = *(void *)(v51 + 16);
  *(void *)(v50 + 24) = v53;
  *(unsigned char *)(v50 + 32) = *(unsigned char *)(v51 + 32);
  *(unsigned char *)(v50 + 33) = *(unsigned char *)(v51 + 33);
  uint64_t v54 = (void *)(a1 + v49);
  uint64_t v55 = (void *)(a2 + v49);
  uint64_t v56 = v55[1];
  *uint64_t v54 = *v55;
  v54[1] = v56;
  uint64_t v57 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (void *)(a2 + v57);
  uint64_t v60 = v59[1];
  void *v58 = *v59;
  v58[1] = v60;
  uint64_t v61 = a3[21];
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  uint64_t v74 = *(void *)(a2 + v61 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v74)
  {
    *uint64_t v62 = *v63;
    v62[1] = v74;
    uint64_t v64 = v63[3];
    v62[2] = v63[2];
    v62[3] = v64;
    uint64_t v65 = v63[4];
    uint64_t v66 = v63[5];
    v62[4] = v65;
    v62[5] = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v67 = *((_OWORD *)v63 + 1);
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
    *((_OWORD *)v62 + 1) = v67;
    *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
  }
  uint64_t v68 = a3[22];
  uint64_t v69 = a3[23];
  uint64_t v70 = a1 + v68;
  uint64_t v71 = a2 + v68;
  uint64_t v72 = *(void *)(v71 + 16);
  *(void *)(v70 + 8) = *(void *)(v71 + 8);
  *(void *)(v70 + 16) = v72;
  *(void *)uint64_t v70 = *(void *)v71;
  *(unsigned char *)(v70 + 24) = *(unsigned char *)(v71 + 24);
  *(unsigned char *)(a1 + v69) = *(unsigned char *)(a2 + v69);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v14 = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 40) = v14;
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (int *)(a2 + v15);
  int v18 = *v17;
  *(unsigned char *)(v16 + 4) = *((unsigned char *)v17 + 4);
  *(_DWORD *)uint64_t v16 = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (int *)(a2 + v19);
  int v22 = *v21;
  *(unsigned char *)(v20 + 4) = *((unsigned char *)v21 + 4);
  *(_DWORD *)uint64_t v20 = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (long long *)(a2 + v26);
  uint64_t v29 = *(void *)(a1 + v26 + 16);
  uint64_t v30 = *(void *)(a2 + v26 + 16);
  if (v29)
  {
    if (v30)
    {
      *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
      *(void *)(v27 + 8) = *((void *)v28 + 1);
      *(void *)(v27 + 16) = *((void *)v28 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v27 + 24) = *((_DWORD *)v28 + 6);
      *(_DWORD *)(v27 + 28) = *((_DWORD *)v28 + 7);
      *(void *)(v27 + 32) = *((void *)v28 + 4);
      *(void *)(v27 + 40) = *((void *)v28 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v27);
      long long v32 = v28[1];
      long long v31 = v28[2];
      *(_OWORD *)uint64_t v27 = *v28;
      *(_OWORD *)(v27 + 16) = v32;
      *(_OWORD *)(v27 + 32) = v31;
    }
  }
  else if (v30)
  {
    *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
    *(void *)(v27 + 8) = *((void *)v28 + 1);
    *(void *)(v27 + 16) = *((void *)v28 + 2);
    *(_DWORD *)(v27 + 24) = *((_DWORD *)v28 + 6);
    *(_DWORD *)(v27 + 28) = *((_DWORD *)v28 + 7);
    *(void *)(v27 + 32) = *((void *)v28 + 4);
    *(void *)(v27 + 40) = *((void *)v28 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v33 = *v28;
    long long v34 = v28[2];
    *(_OWORD *)(v27 + 16) = v28[1];
    *(_OWORD *)(v27 + 32) = v34;
    *(_OWORD *)uint64_t v27 = v33;
  }
  uint64_t v35 = a3[11];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(void *)uint64_t v36 = *(void *)(a2 + v35);
  *(void *)(v36 + 8) = *(void *)(a2 + v35 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v36 + 16) = *(unsigned char *)(v37 + 16);
  *(unsigned char *)(v36 + 17) = *(unsigned char *)(v37 + 17);
  uint64_t v38 = a3[12];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  *(void *)uint64_t v39 = *(void *)(a2 + v38);
  *(void *)(v39 + 8) = *(void *)(a2 + v38 + 8);
  *(void *)(v39 + 16) = *(void *)(a2 + v38 + 16);
  *(void *)(v39 + 24) = *(void *)(a2 + v38 + 24);
  *(void *)(v39 + 32) = *(void *)(a2 + v38 + 32);
  *(void *)(v39 + 40) = *(void *)(a2 + v38 + 40);
  *(void *)(v39 + 48) = *(void *)(a2 + v38 + 48);
  *(void *)(v39 + 56) = *(void *)(a2 + v38 + 56);
  *(void *)(v39 + 64) = *(void *)(a2 + v38 + 64);
  *(void *)(v39 + 72) = *(void *)(a2 + v38 + 72);
  *(void *)(v39 + 80) = *(void *)(a2 + v38 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v39 + 88) = *(void *)(v40 + 88);
  *(void *)(v39 + 96) = *(void *)(v40 + 96);
  *(void *)(v39 + 104) = *(void *)(v40 + 104);
  *(void *)(v39 + 112) = *(void *)(v40 + 112);
  *(_DWORD *)(v39 + 120) = *(_DWORD *)(v40 + 120);
  *(void *)(v39 + 128) = *(void *)(v40 + 128);
  *(void *)(v39 + 136) = *(void *)(v40 + 136);
  *(unsigned char *)(v39 + 144) = *(unsigned char *)(v40 + 144);
  *(_DWORD *)(v39 + 148) = *(_DWORD *)(v40 + 148);
  *(_DWORD *)(v39 + 152) = *(_DWORD *)(v40 + 152);
  *(void *)(v39 + 160) = *(void *)(v40 + 160);
  *(void *)(v39 + 168) = *(void *)(v40 + 168);
  *(void *)(v39 + 176) = *(void *)(v40 + 176);
  *(void *)(v39 + 184) = *(void *)(v40 + 184);
  *(void *)(v39 + 192) = *(void *)(v40 + 192);
  uint64_t v41 = a3[13];
  uint64_t v42 = (unsigned char *)(a1 + v41);
  uint64_t v43 = (unsigned char *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  uint64_t v44 = a3[14];
  uint64_t v45 = (unsigned char *)(a1 + v44);
  uint64_t v46 = (unsigned char *)(a2 + v44);
  unsigned char *v45 = *v46;
  v45[1] = v46[1];
  uint64_t v47 = a3[15];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  uint64_t v50 = a3[17];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  *(void *)uint64_t v51 = *(void *)(a2 + v50);
  *(void *)(v51 + 8) = *(void *)(a2 + v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v51 + 16) = *(void *)(v52 + 16);
  *(void *)(v51 + 24) = *(void *)(v52 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v51 + 32) = *(unsigned char *)(v52 + 32);
  *(unsigned char *)(v51 + 33) = *(unsigned char *)(v52 + 33);
  uint64_t v53 = a3[18];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  *uint64_t v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v56 = a3[20];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (void *)(a2 + v56);
  *uint64_t v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = a3[21];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (void *)(a2 + v59);
  uint64_t v62 = *(void *)(a1 + v59 + 8);
  uint64_t v63 = *(void *)(a2 + v59 + 8);
  if (v62)
  {
    if (v63)
    {
      *uint64_t v60 = *v61;
      v60[1] = v61[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[2] = v61[2];
      v60[3] = v61[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v60[4] = v61[4];
      v60[5] = v61[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20AA2C03C((uint64_t)v60);
      long long v65 = *((_OWORD *)v61 + 1);
      long long v64 = *((_OWORD *)v61 + 2);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v65;
      *((_OWORD *)v60 + 2) = v64;
    }
  }
  else if (v63)
  {
    *uint64_t v60 = *v61;
    v60[1] = v61[1];
    v60[2] = v61[2];
    v60[3] = v61[3];
    v60[4] = v61[4];
    v60[5] = v61[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v66 = *(_OWORD *)v61;
    long long v67 = *((_OWORD *)v61 + 2);
    *((_OWORD *)v60 + 1) = *((_OWORD *)v61 + 1);
    *((_OWORD *)v60 + 2) = v67;
    *(_OWORD *)uint64_t v60 = v66;
  }
  uint64_t v68 = a3[22];
  uint64_t v69 = a1 + v68;
  uint64_t v70 = a2 + v68;
  *(void *)uint64_t v69 = *(void *)(a2 + v68);
  *(void *)(v69 + 8) = *(void *)(a2 + v68 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v69 + 16) = *(void *)(v70 + 16);
  *(unsigned char *)(v69 + 24) = *(unsigned char *)(v70 + 24);
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  return a1;
}

uint64_t initializeWithTake for NewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  long long v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(unsigned char *)(v21 + 4) = *(unsigned char *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(void *)(v23 + 16) = *(void *)(v24 + 16);
  uint64_t v25 = a3[10];
  uint64_t v26 = a3[11];
  uint64_t v27 = (_OWORD *)(a1 + v25);
  uint64_t v28 = (_OWORD *)(a2 + v25);
  long long v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  v27[2] = v28[2];
  uint64_t v30 = a1 + v26;
  uint64_t v31 = a2 + v26;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  uint64_t v32 = a3[12];
  uint64_t v33 = a3[13];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(void *)(v34 + 192) = *(void *)(v35 + 192);
  long long v36 = *(_OWORD *)(v35 + 48);
  *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
  *(_OWORD *)(v34 + 48) = v36;
  long long v37 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v37;
  long long v38 = *(_OWORD *)(v35 + 112);
  *(_OWORD *)(v34 + 96) = *(_OWORD *)(v35 + 96);
  *(_OWORD *)(v34 + 112) = v38;
  long long v39 = *(_OWORD *)(v35 + 80);
  *(_OWORD *)(v34 + 64) = *(_OWORD *)(v35 + 64);
  *(_OWORD *)(v34 + 80) = v39;
  long long v40 = *(_OWORD *)(v35 + 176);
  *(_OWORD *)(v34 + 160) = *(_OWORD *)(v35 + 160);
  *(_OWORD *)(v34 + 176) = v40;
  long long v41 = *(_OWORD *)(v35 + 144);
  *(_OWORD *)(v34 + 128) = *(_OWORD *)(v35 + 128);
  *(_OWORD *)(v34 + 144) = v41;
  *(_WORD *)(a1 + v33) = *(_WORD *)(a2 + v33);
  uint64_t v42 = a3[15];
  *(_WORD *)(a1 + a3[14]) = *(_WORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v42) = *(_OWORD *)(a2 + v42);
  uint64_t v43 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  long long v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  *(_WORD *)(v44 + 32) = *(_WORD *)(v45 + 32);
  uint64_t v47 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v47) = *(unsigned char *)(a2 + v47);
  uint64_t v48 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  uint64_t v49 = (_OWORD *)(a1 + v48);
  uint64_t v50 = (_OWORD *)(a2 + v48);
  long long v51 = v50[1];
  *uint64_t v49 = *v50;
  v49[1] = v51;
  v49[2] = v50[2];
  uint64_t v52 = a3[22];
  uint64_t v53 = a3[23];
  uint64_t v54 = (_OWORD *)(a1 + v52);
  uint64_t v55 = (_OWORD *)(a2 + v52);
  *uint64_t v54 = *v55;
  *(_OWORD *)((char *)v54 + 9) = *(_OWORD *)((char *)v55 + 9);
  *(unsigned char *)(a1 + v53) = *(unsigned char *)(a2 + v53);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  return a1;
}

uint64_t assignWithTake for NewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  uint64_t v25 = *(void *)(v24 + 16);
  *(void *)(v23 + 8) = v26;
  *(void *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  if (*(void *)(a1 + v27 + 16))
  {
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30)
    {
      *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
      *(void *)(v28 + 8) = *(void *)(v29 + 8);
      *(void *)(v28 + 16) = v30;
      swift_bridgeObjectRelease();
      *(void *)(v28 + 24) = *(void *)(v29 + 24);
      uint64_t v31 = *(void *)(v29 + 40);
      *(void *)(v28 + 32) = *(void *)(v29 + 32);
      *(void *)(v28 + 40) = v31;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A98D5B8(v28);
  }
  long long v32 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v32;
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
LABEL_6:
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = *(void *)(a2 + v33 + 8);
  *(void *)uint64_t v34 = *(void *)(a2 + v33);
  *(void *)(v34 + 8) = v36;
  swift_bridgeObjectRelease();
  *(_WORD *)(v34 + 16) = *(_WORD *)(v35 + 16);
  uint64_t v37 = a3[12];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  long long v40 = *(_OWORD *)(a2 + v37 + 16);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)(a2 + v37);
  *(_OWORD *)(v38 + 16) = v40;
  long long v41 = *(_OWORD *)(a2 + v37 + 48);
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(a2 + v37 + 32);
  *(_OWORD *)(v38 + 48) = v41;
  *(_OWORD *)(v38 + 64) = *(_OWORD *)(a2 + v37 + 64);
  *(void *)(v38 + 80) = *(void *)(a2 + v37 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v38 + 88) = *(_OWORD *)(v39 + 88);
  *(_OWORD *)(v38 + 104) = *(_OWORD *)(v39 + 104);
  *(_DWORD *)(v38 + 120) = *(_DWORD *)(v39 + 120);
  *(_OWORD *)(v38 + 128) = *(_OWORD *)(v39 + 128);
  *(unsigned char *)(v38 + 144) = *(unsigned char *)(v39 + 144);
  *(void *)(v38 + 148) = *(void *)(v39 + 148);
  long long v42 = *(_OWORD *)(v39 + 176);
  *(_OWORD *)(v38 + 160) = *(_OWORD *)(v39 + 160);
  *(_OWORD *)(v38 + 176) = v42;
  *(void *)(v38 + 192) = *(void *)(v39 + 192);
  uint64_t v43 = a3[13];
  uint64_t v44 = a3[14];
  uint64_t v45 = (unsigned char *)(a1 + v43);
  long long v46 = (unsigned char *)(a2 + v43);
  unsigned char *v45 = *v46;
  v45[1] = v46[1];
  uint64_t v47 = (unsigned char *)(a1 + v44);
  uint64_t v48 = (unsigned char *)(a2 + v44);
  *uint64_t v47 = *v48;
  v47[1] = v48[1];
  uint64_t v49 = a3[15];
  uint64_t v50 = (void *)(a1 + v49);
  long long v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[17];
  *(_WORD *)(a1 + a3[16]) = *(_WORD *)(a2 + a3[16]);
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v57 = *(void *)(a2 + v54);
  uint64_t v58 = *(void *)(a2 + v54 + 8);
  *(void *)uint64_t v55 = v57;
  *(void *)(v55 + 8) = v58;
  swift_bridgeObjectRelease();
  uint64_t v59 = *(void *)(v56 + 24);
  *(void *)(v55 + 16) = *(void *)(v56 + 16);
  *(void *)(v55 + 24) = v59;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v55 + 32) = *(unsigned char *)(v56 + 32);
  *(unsigned char *)(v55 + 33) = *(unsigned char *)(v56 + 33);
  uint64_t v60 = a3[18];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (uint64_t *)(a2 + v60);
  uint64_t v64 = *v62;
  uint64_t v63 = v62[1];
  *uint64_t v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  uint64_t v65 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  long long v66 = (void *)(a1 + v65);
  long long v67 = (uint64_t *)(a2 + v65);
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  *long long v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  uint64_t v70 = a3[21];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  if (!*(void *)(a1 + v70 + 8))
  {
LABEL_10:
    long long v76 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v76;
    *(_OWORD *)(v71 + 32) = *(_OWORD *)(v72 + 32);
    goto LABEL_11;
  }
  uint64_t v73 = *(void *)(v72 + 8);
  if (!v73)
  {
    sub_20AA2C03C(v71);
    goto LABEL_10;
  }
  *(void *)uint64_t v71 = *(void *)v72;
  *(void *)(v71 + 8) = v73;
  swift_bridgeObjectRelease();
  uint64_t v74 = *(void *)(v72 + 24);
  *(void *)(v71 + 16) = *(void *)(v72 + 16);
  *(void *)(v71 + 24) = v74;
  swift_bridgeObjectRelease();
  uint64_t v75 = *(void *)(v72 + 40);
  *(void *)(v71 + 32) = *(void *)(v72 + 32);
  *(void *)(v71 + 40) = v75;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v77 = a3[22];
  uint64_t v78 = a1 + v77;
  uint64_t v79 = a2 + v77;
  uint64_t v80 = *(void *)(a2 + v77 + 8);
  *(void *)uint64_t v78 = *(void *)(a2 + v77);
  *(void *)(v78 + 8) = v80;
  swift_bridgeObjectRelease();
  *(void *)(v78 + 16) = *(void *)(v79 + 16);
  *(unsigned char *)(v78 + 24) = *(unsigned char *)(v79 + 24);
  uint64_t v81 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v81) = *(unsigned char *)(a2 + v81);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB76DC0);
}

uint64_t sub_20AB76DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB76EEC);
}

uint64_t sub_20AB76EEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AB77000()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewsArticleViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *uint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB77230);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleViewEvent.Model.CodingKeys()
{
  return &type metadata for NewsArticleViewEvent.Model.CodingKeys;
}

unint64_t sub_20AB7726C()
{
  unint64_t result = qword_267657560;
  if (!qword_267657560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657560);
  }
  return result;
}

unint64_t sub_20AB772C4()
{
  unint64_t result = qword_26AC52E48;
  if (!qword_26AC52E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52E48);
  }
  return result;
}

unint64_t sub_20AB7731C()
{
  unint64_t result = qword_26AC52E50;
  if (!qword_26AC52E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52E50);
  }
  return result;
}

uint64_t sub_20AB77370(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA79D0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA79F0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA77E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA7800 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7461446567646162 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x56656C6369747261 && a2 == 0xEF61746144776569 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7920 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6E676961706D6163 && a2 == 0xEC00000061746144 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA9C30 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 20;
    }
    else {
      return 21;
    }
  }
}

uint64_t sub_20AB77C54(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267657568, MEMORY[0x263F24D10]);
}

uint64_t static SubscribeButtonTapEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537D0, MEMORY[0x263F24D18], (uint64_t)qword_267657568, a1);
}

uint64_t static SubscribeButtonTapEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB77CBC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267657580, MEMORY[0x263F24DC8]);
}

uint64_t static SubscribeButtonTapEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537D8, MEMORY[0x263F24DD8], (uint64_t)qword_267657580, a1);
}

uint64_t sub_20AB77D1C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267657598);
  __swift_project_value_buffer(v0, (uint64_t)qword_267657598);
  return sub_20AB85D30();
}

uint64_t static SubscribeButtonTapEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537E0, MEMORY[0x263F24DE8], (uint64_t)qword_267657598, a1);
}

uint64_t SubscribeButtonTapEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SubscribeButtonTapEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SubscribeButtonTapEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 20);
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SubscribeButtonTapEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676575D0);
}

uint64_t SubscribeButtonTapEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 20);
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 24);
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 24);
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 28);
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 28);
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 32);
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 32);
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 36);
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 36);
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 40);
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 40);
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.purchaseSessionData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 44);
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 44);
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.purchaseData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 48);
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SubscribeButtonTapEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 48);
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.paywallData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.subscribeButtonContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 52);
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB78C50(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t SubscribeButtonTapEvent.subscribeButtonContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent(0) + 52);
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SubscribeButtonTapEvent.subscribeButtonContextData.modify())()
{
  return nullsub_1;
}

uint64_t SubscribeButtonTapEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SubscribeButtonTapEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = *MEMORY[0x263F24D30];
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  uint64_t v10 = a1 + v4[7];
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v8, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v8, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v8, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v8, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v2, v23);
}

uint64_t SubscribeButtonTapEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SubscribeButtonTapEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SubscribeButtonTapEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676575E0);
}

uint64_t SubscribeButtonTapEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 24);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  LODWORD(v3) = *(_DWORD *)(v3 + 64);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(_DWORD *)(a1 + 64) = v3;
  return sub_20A99BE1C(v4, v5);
}

uint64_t SubscribeButtonTapEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 32);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);

  return sub_20A99BE1C(v4, v5);
}

uint64_t SubscribeButtonTapEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 36));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t SubscribeButtonTapEvent.Model.purchaseSessionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 40));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SubscribeButtonTapEvent.Model(0) + 44));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t SubscribeButtonTapEvent.Model.paywallData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t SubscribeButtonTapEvent.Model.subscribeButtonContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 SubscribeButtonTapEvent.Model.init(eventData:viewData:newsArticleData:feedData:channelData:groupData:purchaseSessionData:purchaseData:paywallData:subscribeButtonContextData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, long long *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, char *a10, __int16 *a11)
{
  uint64_t v14 = *a2;
  uint64_t v13 = a2[1];
  __int16 v15 = *((_WORD *)a2 + 8);
  long long v32 = a3[1];
  long long v33 = *a3;
  long long v31 = a3[2];
  uint64_t v16 = *((void *)a3 + 6);
  uint64_t v17 = *((void *)a3 + 7);
  int v18 = *((_DWORD *)a3 + 16);
  long long v34 = *a4;
  uint64_t v19 = *((void *)a4 + 2);
  long long v37 = *a5;
  uint64_t v20 = *((void *)a5 + 2);
  uint64_t v36 = *((void *)a5 + 3);
  __int16 v35 = *((_WORD *)a5 + 16);
  __n128 v40 = (__n128)a6[1];
  long long v41 = *a6;
  uint64_t v38 = *((void *)a6 + 5);
  uint64_t v39 = *((void *)a6 + 4);
  uint64_t v42 = a7[1];
  uint64_t v43 = *a7;
  uint64_t v45 = a8[1];
  uint64_t v46 = *a8;
  char v44 = *((unsigned char *)a8 + 16);
  char v47 = *a10;
  __int16 v48 = *a11;
  uint64_t v21 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a9, a1, v21);
  uint64_t v22 = (int *)type metadata accessor for SubscribeButtonTapEvent.Model(0);
  uint64_t v23 = a9 + v22[5];
  *(void *)uint64_t v23 = v14;
  *(void *)(v23 + 8) = v13;
  *(_WORD *)(v23 + 16) = v15;
  uint64_t v24 = a9 + v22[6];
  *(_OWORD *)uint64_t v24 = v33;
  *(_OWORD *)(v24 + 16) = v32;
  *(_OWORD *)(v24 + 32) = v31;
  *(void *)(v24 + 48) = v16;
  *(void *)(v24 + 56) = v17;
  *(_DWORD *)(v24 + 64) = v18;
  uint64_t v25 = a9 + v22[7];
  *(_OWORD *)uint64_t v25 = v34;
  *(void *)(v25 + 16) = v19;
  uint64_t v26 = a9 + v22[8];
  *(_OWORD *)uint64_t v26 = v37;
  *(void *)(v26 + 16) = v20;
  *(void *)(v26 + 24) = v36;
  *(_WORD *)(v26 + 32) = v35;
  uint64_t v27 = a9 + v22[9];
  __n128 result = v40;
  *(_OWORD *)uint64_t v27 = v41;
  *(__n128 *)(v27 + 16) = v40;
  *(void *)(v27 + 32) = v39;
  *(void *)(v27 + 40) = v38;
  uint64_t v29 = (void *)(a9 + v22[10]);
  *uint64_t v29 = v43;
  v29[1] = v42;
  uint64_t v30 = a9 + v22[11];
  *(void *)uint64_t v30 = v46;
  *(void *)(v30 + 8) = v45;
  *(unsigned char *)(v30 + 16) = v44;
  *(unsigned char *)(a9 + v22[12]) = v47;
  *(_WORD *)(a9 + v22[13]) = v48;
  return result;
}

uint64_t sub_20AB7979C(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 2003134838;
      return v3 | 0x6174614400000000;
    case 2:
      return 0x697472417377656ELL;
    case 3:
      unsigned int v3 = 1684366694;
      return v3 | 0x6174614400000000;
    case 4:
      uint64_t v4 = 0x656E6E616863;
      goto LABEL_11;
    case 5:
      return 0x74614470756F7267;
    case 6:
      return 0xD000000000000013;
    case 7:
      return 0x6573616863727570;
    case 8:
      uint64_t v4 = 0x6C6177796170;
LABEL_11:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x446C000000000000;
      break;
    case 9:
      uint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB798F0()
{
  return sub_20AB7979C(*v0);
}

uint64_t sub_20AB798F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB7ECFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB79920(uint64_t a1)
{
  unint64_t v2 = sub_20AB79DDC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB7995C(uint64_t a1)
{
  unint64_t v2 = sub_20AB79DDC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SubscribeButtonTapEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB7A64C(0, &qword_2676575B8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB79DDC();
  sub_20AB86DC0();
  LOBYTE(v32) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for SubscribeButtonTapEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(void *)&long long v32 = v12;
    *((void *)&v32 + 1) = v13;
    LOWORD(v33) = (_WORD)v11;
    char v37 = 1;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v14 = (long long *)(v3 + v10[6]);
    int v15 = *((_DWORD *)v14 + 16);
    long long v16 = v14[1];
    long long v32 = *v14;
    long long v33 = v16;
    long long v17 = v14[3];
    long long v34 = v14[2];
    long long v35 = v17;
    int v36 = v15;
    char v37 = 2;
    sub_20A97A1AC();
    sub_20AB86BE0();
    int v18 = (long long *)(v3 + v10[7]);
    uint64_t v19 = *((void *)v18 + 2);
    long long v32 = *v18;
    *(void *)&long long v33 = v19;
    char v37 = 3;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v20 = (long long *)(v3 + v10[8]);
    __int16 v21 = *((_WORD *)v20 + 16);
    long long v22 = v20[1];
    long long v32 = *v20;
    long long v33 = v22;
    LOWORD(v34) = v21;
    char v37 = 4;
    sub_20A9862D4();
    sub_20AB86BE0();
    uint64_t v23 = (long long *)(v3 + v10[9]);
    long long v24 = v23[1];
    long long v32 = *v23;
    long long v33 = v24;
    long long v34 = v23[2];
    char v37 = 5;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v25 = (uint64_t *)(v3 + v10[10]);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    *(void *)&long long v32 = v27;
    *((void *)&v32 + 1) = v26;
    char v37 = 6;
    sub_20A9D0E44();
    sub_20AB86C50();
    uint64_t v28 = (uint64_t *)(v3 + v10[11]);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    LOBYTE(v28) = *((unsigned char *)v28 + 16);
    *(void *)&long long v32 = v29;
    *((void *)&v32 + 1) = v30;
    LOBYTE(v33) = (_BYTE)v28;
    char v37 = 7;
    sub_20A9D1094();
    sub_20AB86C50();
    LOBYTE(v32) = *(unsigned char *)(v3 + v10[12]);
    char v37 = 8;
    sub_20A9D1360();
    sub_20AB86BE0();
    LOWORD(v32) = *(_WORD *)(v3 + v10[13]);
    char v37 = 9;
    sub_20AB581E8();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB79DDC()
{
  unint64_t result = qword_2676575C0;
  if (!qword_2676575C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676575C0);
  }
  return result;
}

uint64_t SubscribeButtonTapEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB7A64C(0, &qword_2676575C8, MEMORY[0x263F8E040]);
  uint64_t v41 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v44 = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  MEMORY[0x270FA5388](v44);
  uint64_t v42 = a1;
  uint64_t v43 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB79DDC();
  sub_20AB86DA0();
  uint64_t v39 = v5;
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  uint64_t v38 = a2;
  uint64_t v13 = v9;
  LOBYTE(v45) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  sub_20AB86B80();
  uint64_t v14 = v43;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v43, v7, v5);
  char v51 = 1;
  sub_20A986BC0();
  sub_20AB86B80();
  int v15 = (int *)v44;
  uint64_t v16 = *((void *)&v45 + 1);
  __int16 v17 = v46;
  int v18 = &v14[*(int *)(v44 + 20)];
  *(void *)int v18 = v45;
  *((void *)v18 + 1) = v16;
  *((_WORD *)v18 + 8) = v17;
  char v51 = 2;
  sub_20A97A154();
  sub_20AB86B10();
  int v19 = v49;
  uint64_t v20 = &v14[v15[6]];
  long long v21 = v46;
  *(_OWORD *)uint64_t v20 = v45;
  *((_OWORD *)v20 + 1) = v21;
  long long v22 = v48;
  *((_OWORD *)v20 + 2) = v47;
  *((_OWORD *)v20 + 3) = v22;
  *((_DWORD *)v20 + 16) = v19;
  char v51 = 3;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v23 = v46;
  long long v24 = &v14[v15[7]];
  *(_OWORD *)long long v24 = v45;
  *((void *)v24 + 2) = v23;
  char v51 = 4;
  sub_20A986280();
  sub_20AB86B10();
  __int16 v25 = v47;
  uint64_t v26 = &v14[v15[8]];
  long long v27 = v46;
  *(_OWORD *)uint64_t v26 = v45;
  *((_OWORD *)v26 + 1) = v27;
  *((_WORD *)v26 + 16) = v25;
  char v51 = 5;
  sub_20A9864D0();
  sub_20AB86B10();
  uint64_t v28 = &v14[v15[9]];
  long long v29 = v46;
  *(_OWORD *)uint64_t v28 = v45;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v47;
  char v51 = 6;
  sub_20A9D0DF0();
  sub_20AB86B80();
  int v50 = 1;
  uint64_t v30 = *((void *)&v45 + 1);
  long long v31 = &v14[v15[10]];
  *(void *)long long v31 = v45;
  *((void *)v31 + 1) = v30;
  char v51 = 7;
  sub_20A9D1040();
  sub_20AB86B80();
  uint64_t v32 = *((void *)&v45 + 1);
  char v33 = v46;
  long long v34 = &v14[v15[11]];
  *(void *)long long v34 = v45;
  *((void *)v34 + 1) = v32;
  v34[16] = v33;
  char v51 = 8;
  sub_20A9D130C();
  sub_20AB86B10();
  v14[v15[12]] = v45;
  char v51 = 9;
  sub_20AB58190();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v41);
  uint64_t v35 = (uint64_t)v43;
  *(_WORD *)&v43[*(int *)(v44 + 52)] = v45;
  sub_20AB7A6B0(v35, v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return sub_20AB7A714(v35);
}

void sub_20AB7A64C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB79DDC();
    unint64_t v7 = a3(a1, &type metadata for SubscribeButtonTapEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB7A6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB7A714(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SubscribeButtonTapEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB7A770@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SubscribeButtonTapEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB7A788(void *a1)
{
  return SubscribeButtonTapEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB7A7A0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537D0, MEMORY[0x263F24D18], (uint64_t)qword_267657568, a1);
}

uint64_t sub_20AB7A7D8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537D8, MEMORY[0x263F24DD8], (uint64_t)qword_267657580, a1);
}

uint64_t sub_20AB7A810@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537E0, MEMORY[0x263F24DE8], (uint64_t)qword_267657598, a1);
}

uint64_t sub_20AB7A848@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = *MEMORY[0x263F24D30];
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  uint64_t v11 = a2 + a1[7];
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v9, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v9, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v9, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v9, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  __int16 v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for SubscribeButtonTapEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    __int16 v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    char v33 = (char *)a1 + v32;
    long long v34 = (char *)a2 + v32;
    sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for SubscribeButtonTapEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB7CB1C);
}

uint64_t sub_20AB7CB1C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonTapEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB7D088);
}

uint64_t sub_20AB7D088(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  sub_20AB78C50(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  sub_20AB78C50(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  sub_20AB78C50(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  sub_20AB78C50(0, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_20AB7D5EC()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB78C50(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    if (v1 <= 0x3F)
    {
      sub_20AB78C50(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
      if (v2 <= 0x3F)
      {
        sub_20AB78C50(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
        if (v3 <= 0x3F)
        {
          sub_20AB78C50(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
          if (v4 <= 0x3F)
          {
            sub_20AB78C50(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
            if (v5 <= 0x3F)
            {
              sub_20AB78C50(319, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
              if (v6 <= 0x3F)
              {
                sub_20AB78C50(319, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
                if (v7 <= 0x3F)
                {
                  sub_20AB78C50(319, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
                  if (v8 <= 0x3F)
                  {
                    sub_20AB78C50(319, &qword_2676575B0, (void (*)(void))sub_20AB58190, (void (*)(void))sub_20AB581E8);
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SubscribeButtonTapEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = *(void *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    if (v15)
    {
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v15;
      uint64_t v16 = *((void *)v14 + 3);
      *((void *)v13 + 2) = *((void *)v14 + 2);
      *((void *)v13 + 3) = v16;
      v13[32] = v14[32];
      *((void *)v13 + 5) = *((void *)v14 + 5);
      v13[48] = v14[48];
      *((void *)v13 + 7) = *((void *)v14 + 7);
      *((_DWORD *)v13 + 16) = *((_DWORD *)v14 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v18 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v18;
      *((_DWORD *)v13 + 16) = *((_DWORD *)v14 + 16);
      long long v19 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v19;
    }
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    *uint64_t v22 = *v23;
    uint64_t v24 = *((void *)v23 + 2);
    *((void *)v22 + 1) = *((void *)v23 + 1);
    *((void *)v22 + 2) = v24;
    uint64_t v25 = (char *)a1 + v21;
    uint64_t v26 = (char *)a2 + v21;
    uint64_t v27 = *(void *)((char *)a2 + v21 + 8);
    swift_bridgeObjectRetain();
    if (v27)
    {
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      uint64_t v28 = *((void *)v26 + 3);
      *((void *)v25 + 2) = *((void *)v26 + 2);
      *((void *)v25 + 3) = v28;
      *((_WORD *)v25 + 16) = *((_WORD *)v26 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v29 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v29;
      *((_WORD *)v25 + 16) = *((_WORD *)v26 + 16);
    }
    uint64_t v30 = a3[9];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *((void *)v32 + 2);
    if (v33)
    {
      *uint64_t v31 = *v32;
      *((void *)v31 + 1) = *((void *)v32 + 1);
      *((void *)v31 + 2) = v33;
      *((void *)v31 + 3) = *((void *)v32 + 3);
      uint64_t v34 = *((void *)v32 + 5);
      *((void *)v31 + 4) = *((void *)v32 + 4);
      *((void *)v31 + 5) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v35 = *((_OWORD *)v32 + 1);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v35;
      *((_OWORD *)v31 + 2) = *((_OWORD *)v32 + 2);
    }
    uint64_t v36 = a3[10];
    uint64_t v37 = a3[11];
    uint64_t v38 = (void *)((char *)a1 + v36);
    uint64_t v39 = (void *)((char *)a2 + v36);
    uint64_t v40 = v39[1];
    void *v38 = *v39;
    v38[1] = v40;
    uint64_t v41 = (char *)a1 + v37;
    uint64_t v42 = (char *)a2 + v37;
    uint64_t v43 = *((void *)v42 + 1);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    v41[16] = v42[16];
    uint64_t v44 = a3[13];
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *(_WORD *)((char *)a1 + v44) = *(_WORD *)((char *)a2 + v44);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SubscribeButtonTapEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[6] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[8] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[9] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  if (v14)
  {
    *(void *)uint64_t v12 = *(void *)v13;
    *(void *)(v12 + 8) = v14;
    uint64_t v15 = *(void *)(v13 + 24);
    *(void *)(v12 + 16) = *(void *)(v13 + 16);
    *(void *)(v12 + 24) = v15;
    *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
    *(void *)(v12 + 40) = *(void *)(v13 + 40);
    *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
    *(void *)(v12 + 56) = *(void *)(v13 + 56);
    *(_DWORD *)(v12 + 64) = *(_DWORD *)(v13 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *(_OWORD *)(v13 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    *(_OWORD *)(v12 + 48) = v16;
    *(_DWORD *)(v12 + 64) = *(_DWORD *)(v13 + 64);
    long long v17 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    *(_OWORD *)(v12 + 16) = v17;
  }
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(unsigned char *)uint64_t v20 = *(unsigned char *)v21;
  uint64_t v22 = *(void *)(v21 + 16);
  *(void *)(v20 + 8) = *(void *)(v21 + 8);
  *(void *)(v20 + 16) = v22;
  uint64_t v23 = a1 + v19;
  uint64_t v24 = a2 + v19;
  uint64_t v25 = *(void *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(void *)uint64_t v23 = *(void *)v24;
    *(void *)(v23 + 8) = v25;
    uint64_t v26 = *(void *)(v24 + 24);
    *(void *)(v23 + 16) = *(void *)(v24 + 16);
    *(void *)(v23 + 24) = v26;
    *(_WORD *)(v23 + 32) = *(_WORD *)(v24 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v27;
    *(_WORD *)(v23 + 32) = *(_WORD *)(v24 + 32);
  }
  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(v30 + 16);
  if (v31)
  {
    *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
    *(void *)(v29 + 8) = *(void *)(v30 + 8);
    *(void *)(v29 + 16) = v31;
    *(void *)(v29 + 24) = *(void *)(v30 + 24);
    uint64_t v32 = *(void *)(v30 + 40);
    *(void *)(v29 + 32) = *(void *)(v30 + 32);
    *(void *)(v29 + 40) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
  }
  uint64_t v34 = a3[10];
  uint64_t v35 = a3[11];
  uint64_t v36 = (void *)(a1 + v34);
  uint64_t v37 = (void *)(a2 + v34);
  uint64_t v38 = v37[1];
  void *v36 = *v37;
  v36[1] = v38;
  uint64_t v39 = a1 + v35;
  uint64_t v40 = a2 + v35;
  uint64_t v41 = *(void *)(v40 + 8);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v41;
  *(unsigned char *)(v39 + 16) = *(unsigned char *)(v40 + 16);
  uint64_t v42 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(_WORD *)(a1 + v42) = *(_WORD *)(a2 + v42);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v8 + 17) = *(unsigned char *)(v9 + 17);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)(a1 + v10 + 8);
  uint64_t v14 = *(void *)(a2 + v10 + 8);
  if (v13)
  {
    if (v14)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *(void *)(v12 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v11 + 16) = *(void *)(v12 + 16);
      *(void *)(v11 + 24) = *(void *)(v12 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
      uint64_t v15 = *(void *)(v12 + 40);
      *(unsigned char *)(v11 + 48) = *(unsigned char *)(v12 + 48);
      *(void *)(v11 + 40) = v15;
      *(void *)(v11 + 56) = *(void *)(v12 + 56);
      *(unsigned char *)(v11 + 64) = *(unsigned char *)(v12 + 64);
      *(unsigned char *)(v11 + 65) = *(unsigned char *)(v12 + 65);
      *(unsigned char *)(v11 + 66) = *(unsigned char *)(v12 + 66);
      *(unsigned char *)(v11 + 67) = *(unsigned char *)(v12 + 67);
    }
    else
    {
      sub_20A9D6C28(v11);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      long long v18 = *(_OWORD *)(v12 + 32);
      long long v17 = *(_OWORD *)(v12 + 48);
      long long v19 = *(_OWORD *)(v12 + 16);
      *(_DWORD *)(v11 + 64) = *(_DWORD *)(v12 + 64);
      *(_OWORD *)(v11 + 32) = v18;
      *(_OWORD *)(v11 + 48) = v17;
      *(_OWORD *)(v11 + 16) = v19;
    }
  }
  else if (v14)
  {
    *(void *)uint64_t v11 = *(void *)v12;
    *(void *)(v11 + 8) = *(void *)(v12 + 8);
    *(void *)(v11 + 16) = *(void *)(v12 + 16);
    *(void *)(v11 + 24) = *(void *)(v12 + 24);
    *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
    uint64_t v16 = *(void *)(v12 + 40);
    *(unsigned char *)(v11 + 48) = *(unsigned char *)(v12 + 48);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 56) = *(void *)(v12 + 56);
    *(unsigned char *)(v11 + 64) = *(unsigned char *)(v12 + 64);
    *(unsigned char *)(v11 + 65) = *(unsigned char *)(v12 + 65);
    *(unsigned char *)(v11 + 66) = *(unsigned char *)(v12 + 66);
    *(unsigned char *)(v11 + 67) = *(unsigned char *)(v12 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    long long v20 = *(_OWORD *)(v12 + 16);
    long long v21 = *(_OWORD *)(v12 + 32);
    long long v22 = *(_OWORD *)(v12 + 48);
    *(_DWORD *)(v11 + 64) = *(_DWORD *)(v12 + 64);
    *(_OWORD *)(v11 + 32) = v21;
    *(_OWORD *)(v11 + 48) = v22;
    *(_OWORD *)(v11 + 16) = v20;
  }
  uint64_t v23 = a3[7];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (long long *)(a2 + v26);
  uint64_t v29 = *(void *)(a1 + v26 + 8);
  uint64_t v30 = *(void *)(a2 + v26 + 8);
  if (v29)
  {
    if (v30)
    {
      *(void *)uint64_t v27 = *(void *)v28;
      *(void *)(v27 + 8) = *((void *)v28 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v27 + 16) = *((void *)v28 + 2);
      *(void *)(v27 + 24) = *((void *)v28 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v27 + 32) = *((unsigned char *)v28 + 32);
      *(unsigned char *)(v27 + 33) = *((unsigned char *)v28 + 33);
    }
    else
    {
      sub_20A9A0F9C(v27);
      __int16 v31 = *((_WORD *)v28 + 16);
      long long v32 = v28[1];
      *(_OWORD *)uint64_t v27 = *v28;
      *(_OWORD *)(v27 + 16) = v32;
      *(_WORD *)(v27 + 32) = v31;
    }
  }
  else if (v30)
  {
    *(void *)uint64_t v27 = *(void *)v28;
    *(void *)(v27 + 8) = *((void *)v28 + 1);
    *(void *)(v27 + 16) = *((void *)v28 + 2);
    *(void *)(v27 + 24) = *((void *)v28 + 3);
    *(unsigned char *)(v27 + 32) = *((unsigned char *)v28 + 32);
    *(unsigned char *)(v27 + 33) = *((unsigned char *)v28 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v33 = *v28;
    long long v34 = v28[1];
    *(_WORD *)(v27 + 32) = *((_WORD *)v28 + 16);
    *(_OWORD *)uint64_t v27 = v33;
    *(_OWORD *)(v27 + 16) = v34;
  }
  uint64_t v35 = a3[9];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = (long long *)(a2 + v35);
  uint64_t v38 = *(void *)(a1 + v35 + 16);
  uint64_t v39 = *(void *)(a2 + v35 + 16);
  if (v38)
  {
    if (v39)
    {
      *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
      *(void *)(v36 + 8) = *((void *)v37 + 1);
      *(void *)(v36 + 16) = *((void *)v37 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v36 + 24) = *((_DWORD *)v37 + 6);
      *(_DWORD *)(v36 + 28) = *((_DWORD *)v37 + 7);
      *(void *)(v36 + 32) = *((void *)v37 + 4);
      *(void *)(v36 + 40) = *((void *)v37 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v36);
      long long v41 = v37[1];
      long long v40 = v37[2];
      *(_OWORD *)uint64_t v36 = *v37;
      *(_OWORD *)(v36 + 16) = v41;
      *(_OWORD *)(v36 + 32) = v40;
    }
  }
  else if (v39)
  {
    *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
    *(void *)(v36 + 8) = *((void *)v37 + 1);
    *(void *)(v36 + 16) = *((void *)v37 + 2);
    *(_DWORD *)(v36 + 24) = *((_DWORD *)v37 + 6);
    *(_DWORD *)(v36 + 28) = *((_DWORD *)v37 + 7);
    *(void *)(v36 + 32) = *((void *)v37 + 4);
    *(void *)(v36 + 40) = *((void *)v37 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v42 = *v37;
    long long v43 = v37[2];
    *(_OWORD *)(v36 + 16) = v37[1];
    *(_OWORD *)(v36 + 32) = v43;
    *(_OWORD *)uint64_t v36 = v42;
  }
  uint64_t v44 = a3[10];
  long long v45 = (void *)(a1 + v44);
  long long v46 = (void *)(a2 + v44);
  void *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[11];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  *(void *)uint64_t v48 = *(void *)(a2 + v47);
  *(void *)(v48 + 8) = *(void *)(a2 + v47 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v48 + 16) = *(unsigned char *)(v49 + 16);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v50 = a3[13];
  char v51 = (unsigned char *)(a1 + v50);
  uint64_t v52 = (unsigned char *)(a2 + v50);
  unsigned char *v51 = *v52;
  v51[1] = v52[1];
  return a1;
}

uint64_t initializeWithTake for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_WORD *)(v9 + 16) = *(_WORD *)(v10 + 16);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)(v11 + 64) = *(_DWORD *)(v12 + 64);
  long long v13 = *(_OWORD *)(v12 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v12 + 32);
  *(_OWORD *)(v11 + 48) = v13;
  long long v14 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  uint64_t v19 = a1 + v16;
  uint64_t v20 = a2 + v16;
  long long v21 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v21;
  *(_WORD *)(v19 + 32) = *(_WORD *)(v20 + 32);
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = (_OWORD *)(a1 + v22);
  uint64_t v25 = (_OWORD *)(a2 + v22);
  long long v26 = v25[1];
  _OWORD *v24 = *v25;
  v24[1] = v26;
  v24[2] = v25[2];
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  uint64_t v27 = a3[11];
  uint64_t v28 = a3[12];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(unsigned char *)(v29 + 16) = *(unsigned char *)(v30 + 16);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  *(_WORD *)(a1 + a3[13]) = *(_WORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 16) = *(_WORD *)(v9 + 16);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  if (*(void *)(a1 + v11 + 8))
  {
    uint64_t v14 = *(void *)(v13 + 8);
    if (v14)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = v14;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(v13 + 24);
      *(void *)(v12 + 16) = *(void *)(v13 + 16);
      *(void *)(v12 + 24) = v15;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
      *(void *)(v12 + 40) = *(void *)(v13 + 40);
      *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
      *(void *)(v12 + 56) = *(void *)(v13 + 56);
      *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
      *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
      *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
      *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
      goto LABEL_6;
    }
    sub_20A9D6C28(v12);
  }
  long long v16 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(v12 + 48) = v16;
  *(_DWORD *)(v12 + 64) = *(_DWORD *)(v13 + 64);
  long long v17 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v17;
LABEL_6:
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  uint64_t v21 = *(void *)(v20 + 16);
  *(void *)(v19 + 8) = v22;
  *(void *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  if (*(void *)(a1 + v23 + 8))
  {
    uint64_t v26 = *(void *)(v25 + 8);
    if (v26)
    {
      *(void *)uint64_t v24 = *(void *)v25;
      *(void *)(v24 + 8) = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(v25 + 24);
      *(void *)(v24 + 16) = *(void *)(v25 + 16);
      *(void *)(v24 + 24) = v27;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v24 + 32) = *(unsigned char *)(v25 + 32);
      *(unsigned char *)(v24 + 33) = *(unsigned char *)(v25 + 33);
      goto LABEL_11;
    }
    sub_20A9A0F9C(v24);
  }
  long long v28 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v28;
  *(_WORD *)(v24 + 32) = *(_WORD *)(v25 + 32);
LABEL_11:
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  if (!*(void *)(a1 + v29 + 16))
  {
LABEL_15:
    long long v34 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v34;
    *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
    goto LABEL_16;
  }
  uint64_t v32 = *(void *)(v31 + 16);
  if (!v32)
  {
    sub_20A98D5B8(v30);
    goto LABEL_15;
  }
  *(unsigned char *)uint64_t v30 = *(unsigned char *)v31;
  *(void *)(v30 + 8) = *(void *)(v31 + 8);
  *(void *)(v30 + 16) = v32;
  swift_bridgeObjectRelease();
  *(void *)(v30 + 24) = *(void *)(v31 + 24);
  uint64_t v33 = *(void *)(v31 + 40);
  *(void *)(v30 + 32) = *(void *)(v31 + 32);
  *(void *)(v30 + 40) = v33;
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v35 = a3[10];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  void *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[11];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = *(void *)(a2 + v40 + 8);
  *(void *)uint64_t v41 = *(void *)(a2 + v40);
  *(void *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v41 + 16) = *(unsigned char *)(v42 + 16);
  uint64_t v44 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(_WORD *)(a1 + v44) = *(_WORD *)(a2 + v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB7E874);
}

uint64_t sub_20AB7E874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SubscribeButtonTapEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB7E94C);
}

uint64_t sub_20AB7E94C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AB7EA0C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SubscribeButtonTapEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB7EBBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonTapEvent.Model.CodingKeys()
{
  return &type metadata for SubscribeButtonTapEvent.Model.CodingKeys;
}

unint64_t sub_20AB7EBF8()
{
  unint64_t result = qword_2676575F0;
  if (!qword_2676575F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676575F0);
  }
  return result;
}

unint64_t sub_20AB7EC50()
{
  unint64_t result = qword_2676575F8;
  if (!qword_2676575F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676575F8);
  }
  return result;
}

unint64_t sub_20AB7ECA8()
{
  unint64_t result = qword_267657600;
  if (!qword_267657600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657600);
  }
  return result;
}

uint64_t sub_20AB7ECFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7920 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000020ABA9C50)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_20AB7F174()
{
  uint64_t v0 = sub_20AB859A0();
  __swift_allocate_value_buffer(v0, qword_267657608);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_267657608);
  *(void *)uint64_t v1 = 0x7364612E6D6F63;
  *(void *)(v1 + 8) = 0xE700000000000000;
  *(void *)(v1 + 16) = 3;
  *(unsigned char *)(v1 + 24) = 0;
  BOOL v2 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v2();
}

uint64_t static VideoAdEngagementEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537E8, MEMORY[0x263F24D18], (uint64_t)qword_267657608, a1);
}

uint64_t static VideoAdEngagementEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AB7F260()
{
  uint64_t v0 = sub_20AB85C70();
  __swift_allocate_value_buffer(v0, qword_267657620);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_267657620);
  uint64_t v2 = *MEMORY[0x263F24DC0];
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static VideoAdEngagementEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537F0, MEMORY[0x263F24DD8], (uint64_t)qword_267657620, a1);
}

uint64_t sub_20AB7F320()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267657638);
  __swift_project_value_buffer(v0, (uint64_t)qword_267657638);
  return sub_20AB85D30();
}

uint64_t static VideoAdEngagementEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676537F8, MEMORY[0x263F24DE8], (uint64_t)qword_267657638, a1);
}

uint64_t VideoAdEngagementEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t VideoAdEngagementEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*VideoAdEngagementEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 20);
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for VideoAdEngagementEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657670);
}

uint64_t VideoAdEngagementEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 20);
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 24);
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 24);
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 28);
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 28);
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 32);
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.videoAdData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 32);
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.videoAdData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.videoAdEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 36);
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t VideoAdEngagementEvent.videoAdEngagementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 36);
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.videoAdEngagementData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 40);
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AB7FD5C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t VideoAdEngagementEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent(0) + 40);
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*VideoAdEngagementEvent.adPlacementData.modify())()
{
  return nullsub_1;
}

uint64_t VideoAdEngagementEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for VideoAdEngagementEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);

  return v18(v16, v2, v17);
}

uint64_t VideoAdEngagementEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t VideoAdEngagementEvent.Model.adUserData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 20));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for VideoAdEngagementEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267657680);
}

uint64_t VideoAdEngagementEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t VideoAdEngagementEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t VideoAdEngagementEvent.Model.videoAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 32);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_DWORD *)a1 = *(_DWORD *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t VideoAdEngagementEvent.Model.videoAdEngagementData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for VideoAdEngagementEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t VideoAdEngagementEvent.Model.adPlacementData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for VideoAdEngagementEvent.Model(0) + 40));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

__n128 VideoAdEngagementEvent.Model.init(eventData:adUserData:channelData:feedData:videoAdData:videoAdEngagementData:adPlacementData:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, long long *a3@<X2>, __n128 *a4@<X3>, int *a5@<X4>, __int16 *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v12 = *((void *)a3 + 2);
  uint64_t v13 = *((void *)a3 + 3);
  char v14 = *((unsigned char *)a3 + 32);
  char v15 = *((unsigned char *)a3 + 33);
  long long v26 = *a3;
  __n128 v27 = *a4;
  unint64_t v16 = a4[1].n128_u64[0];
  int v17 = *a5;
  uint64_t v28 = *((void *)a5 + 2);
  uint64_t v29 = *((void *)a5 + 1);
  __int16 v30 = *a6;
  uint64_t v31 = a7[1];
  uint64_t v32 = *a7;
  uint64_t v18 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a8, a1, v18);
  uint64_t v19 = (int *)type metadata accessor for VideoAdEngagementEvent.Model(0);
  uint64_t v20 = (void *)(a8 + v19[5]);
  *uint64_t v20 = v10;
  v20[1] = v11;
  uint64_t v21 = a8 + v19[6];
  *(_OWORD *)uint64_t v21 = v26;
  *(void *)(v21 + 16) = v12;
  *(void *)(v21 + 24) = v13;
  *(unsigned char *)(v21 + 32) = v14;
  *(unsigned char *)(v21 + 33) = v15;
  uint64_t v22 = (__n128 *)(a8 + v19[7]);
  __n128 result = v27;
  *uint64_t v22 = v27;
  v22[1].n128_u64[0] = v16;
  uint64_t v24 = a8 + v19[8];
  *(_DWORD *)uint64_t v24 = v17;
  *(void *)(v24 + 8) = v29;
  *(void *)(v24 + 16) = v28;
  *(_WORD *)(a8 + v19[9]) = v30;
  uint64_t v25 = (void *)(a8 + v19[10]);
  *uint64_t v25 = v32;
  v25[1] = v31;
  return result;
}

unint64_t sub_20AB805A0(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6144726573556461;
      break;
    case 2:
      unint64_t result = 0x446C656E6E616863;
      break;
    case 3:
      unint64_t result = 0x6174614464656566;
      break;
    case 4:
      unint64_t result = 0x4464416F65646976;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x6D6563616C506461;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20AB806A4()
{
  return sub_20AB805A0(*v0);
}

uint64_t sub_20AB806AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AB8423C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AB806D4(uint64_t a1)
{
  unint64_t v2 = sub_20AB80AAC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AB80710(uint64_t a1)
{
  unint64_t v2 = sub_20AB80AAC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VideoAdEngagementEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AB81114(0, &qword_267657658, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v29 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB80AAC();
  sub_20AB86DC0();
  LOBYTE(v29) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for VideoAdEngagementEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *(void *)&long long v29 = v13;
    *((void *)&v29 + 1) = v12;
    char v34 = 1;
    sub_20A99A454();
    sub_20AB86C50();
    char v14 = (long long *)(v3 + v10[6]);
    long long v15 = *v14;
    uint64_t v16 = *((void *)v14 + 2);
    uint64_t v17 = *((void *)v14 + 3);
    char v18 = *((unsigned char *)v14 + 32);
    LOBYTE(v14) = *((unsigned char *)v14 + 33);
    long long v29 = v15;
    uint64_t v30 = v16;
    uint64_t v31 = v17;
    char v32 = v18;
    char v33 = (char)v14;
    char v34 = 2;
    sub_20A9862D4();
    sub_20AB86C50();
    uint64_t v19 = (long long *)(v3 + v10[7]);
    uint64_t v20 = *((void *)v19 + 2);
    long long v29 = *v19;
    uint64_t v30 = v20;
    char v34 = 3;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v21 = (int *)(v3 + v10[8]);
    int v22 = *v21;
    uint64_t v24 = *((void *)v21 + 1);
    uint64_t v23 = *((void *)v21 + 2);
    LODWORD(v29) = v22;
    *((void *)&v29 + 1) = v24;
    uint64_t v30 = v23;
    char v34 = 4;
    sub_20AA564D0();
    sub_20AB86C50();
    LOWORD(v29) = *(_WORD *)(v3 + v10[9]);
    char v34 = 5;
    sub_20AAE4A80();
    sub_20AB86C50();
    uint64_t v25 = (uint64_t *)(v3 + v10[10]);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    *(void *)&long long v29 = v27;
    *((void *)&v29 + 1) = v26;
    char v34 = 6;
    sub_20A99A9F4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AB80AAC()
{
  unint64_t result = qword_267657660;
  if (!qword_267657660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657660);
  }
  return result;
}

uint64_t VideoAdEngagementEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB81114(0, &qword_267657668, MEMORY[0x263F8E040]);
  uint64_t v37 = v6;
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = (int *)type metadata accessor for VideoAdEngagementEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AB80AAC();
  uint64_t v38 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v35;
  char v32 = a1;
  uint64_t v13 = (uint64_t)v11;
  LOBYTE(v39) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  char v14 = v36;
  uint64_t v15 = v37;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v13, v14, v4);
  char v44 = 1;
  sub_20A99A400();
  sub_20AB86B80();
  uint64_t v16 = *((void *)&v39 + 1);
  uint64_t v17 = (void *)(v13 + v9[5]);
  void *v17 = v39;
  v17[1] = v16;
  char v44 = 2;
  sub_20A986280();
  sub_20AB86B80();
  uint64_t v18 = v40;
  uint64_t v19 = v41;
  char v20 = v42;
  char v21 = v43;
  uint64_t v22 = v13 + v9[6];
  *(_OWORD *)uint64_t v22 = v39;
  *(void *)(v22 + 16) = v18;
  *(void *)(v22 + 24) = v19;
  *(unsigned char *)(v22 + 32) = v20;
  *(unsigned char *)(v22 + 33) = v21;
  char v44 = 3;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v23 = v40;
  uint64_t v24 = v13 + v9[7];
  *(_OWORD *)uint64_t v24 = v39;
  *(void *)(v24 + 16) = v23;
  char v44 = 4;
  sub_20AA56478();
  sub_20AB86B80();
  uint64_t v25 = *((void *)&v39 + 1);
  uint64_t v26 = v40;
  uint64_t v27 = v13 + v9[8];
  *(_DWORD *)uint64_t v27 = v39;
  *(void *)(v27 + 8) = v25;
  *(void *)(v27 + 16) = v26;
  char v44 = 5;
  sub_20AAE4A28();
  sub_20AB86B80();
  *(_WORD *)(v13 + v9[9]) = v39;
  char v44 = 6;
  sub_20A99A9A0();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v38, v15);
  uint64_t v28 = *((void *)&v39 + 1);
  long long v29 = (void *)(v13 + v9[10]);
  *long long v29 = v39;
  v29[1] = v28;
  sub_20AB81178(v13, v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  return sub_20AB811DC(v13);
}

void sub_20AB81114(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AB80AAC();
    unint64_t v7 = a3(a1, &type metadata for VideoAdEngagementEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AB81178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VideoAdEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AB811DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoAdEngagementEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AB81238@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VideoAdEngagementEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AB81250(void *a1)
{
  return VideoAdEngagementEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AB81268@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537E8, MEMORY[0x263F24D18], (uint64_t)qword_267657608, a1);
}

uint64_t sub_20AB812A0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537F0, MEMORY[0x263F24DD8], (uint64_t)qword_267657620, a1);
}

uint64_t sub_20AB812D8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676537F8, MEMORY[0x263F24DE8], (uint64_t)qword_267657638, a1);
}

uint64_t sub_20AB81310@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104);

  return v19(v17, v4, v18);
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdEngagementEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    char v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for VideoAdEngagementEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t initializeWithCopy for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB82B88);
}

uint64_t sub_20AB82B88(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_13;
  }
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_13;
  }
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_13;
  }
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_13;
  }
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[10];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB82F68);
}

uint64_t sub_20AB82F68(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  sub_20AB7FD5C(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  sub_20AB7FD5C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_13;
  }
  sub_20AB7FD5C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_13;
  }
  sub_20AB7FD5C(0, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_13;
  }
  sub_20AB7FD5C(0, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  sub_20AB7FD5C(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a4[10];

  return v22(v24, a2, a2, v23);
}

void sub_20AB83340()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AB7FD5C(319, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
    if (v1 <= 0x3F)
    {
      sub_20AB7FD5C(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
      if (v2 <= 0x3F)
      {
        sub_20AB7FD5C(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
        if (v3 <= 0x3F)
        {
          sub_20AB7FD5C(319, &qword_2676555D0, (void (*)(void))sub_20AA56478, (void (*)(void))sub_20AA564D0);
          if (v4 <= 0x3F)
          {
            sub_20AB7FD5C(319, &qword_267657650, (void (*)(void))sub_20AAE4A28, (void (*)(void))sub_20AAE4A80);
            if (v5 <= 0x3F)
            {
              sub_20AB7FD5C(319, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for VideoAdEngagementEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = *((void *)v14 + 3);
    *((void *)v13 + 2) = *((void *)v14 + 2);
    *((void *)v13 + 3) = v16;
    *((_WORD *)v13 + 16) = *((_WORD *)v14 + 16);
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)a1 + v17;
    uint64_t v20 = (char *)a2 + v17;
    *uint64_t v19 = *v20;
    uint64_t v21 = *((void *)v20 + 2);
    *((void *)v19 + 1) = *((void *)v20 + 1);
    *((void *)v19 + 2) = v21;
    uint64_t v22 = (char *)a1 + v18;
    uint64_t v23 = (char *)a2 + v18;
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    uint64_t v24 = *((void *)v23 + 2);
    *((void *)v22 + 1) = *((void *)v23 + 1);
    *((void *)v22 + 2) = v24;
    uint64_t v25 = a3[10];
    *(_WORD *)((char *)a1 + a3[9]) = *(_WORD *)((char *)a2 + a3[9]);
    uint64_t v26 = (uint64_t *)((char *)a1 + v25);
    uint64_t v27 = (uint64_t *)((char *)a2 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for VideoAdEngagementEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v14;
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  uint64_t v20 = *(void *)(v19 + 16);
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(void *)(v18 + 16) = v20;
  uint64_t v21 = a1 + v17;
  uint64_t v22 = a2 + v17;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  uint64_t v23 = *(void *)(v22 + 16);
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(void *)(v21 + 16) = v23;
  uint64_t v24 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = *(void *)(v12 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
  *(unsigned char *)(v11 + 33) = *(unsigned char *)(v12 + 33);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (unsigned char *)(a1 + v19);
  uint64_t v21 = (unsigned char *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_WORD *)(v8 + 32) = *(_WORD *)(v9 + 32);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  uint64_t v17 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  return a1;
}

uint64_t assignWithTake for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(unsigned char *)(v13 + 33) = *(unsigned char *)(v14 + 33);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  uint64_t v21 = *(void *)(v19 + 8);
  uint64_t v20 = *(void *)(v19 + 16);
  *(void *)(v18 + 8) = v21;
  *(void *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  uint64_t v25 = *(void *)(v24 + 16);
  *(void *)(v23 + 8) = v26;
  *(void *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  *(_WORD *)(a1 + a3[9]) = *(_WORD *)(a2 + a3[9]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AB83DD8);
}

uint64_t sub_20AB83DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for VideoAdEngagementEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AB83EB0);
}

uint64_t sub_20AB83EB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AB83F70()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VideoAdEngagementEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB840FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementEvent.Model.CodingKeys()
{
  return &type metadata for VideoAdEngagementEvent.Model.CodingKeys;
}

unint64_t sub_20AB84138()
{
  unint64_t result = qword_267657690;
  if (!qword_267657690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657690);
  }
  return result;
}

unint64_t sub_20AB84190()
{
  unint64_t result = qword_267657698;
  if (!qword_267657698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267657698);
  }
  return result;
}

unint64_t sub_20AB841E8()
{
  unint64_t result = qword_2676576A0;
  if (!qword_2676576A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676576A0);
  }
  return result;
}

uint64_t sub_20AB8423C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4464416F65646976 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA9C70 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t destroy for ExternalAnalyticsRequestMetaData(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ExternalAnalyticsRequestMetaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = v9;
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ExternalAnalyticsRequestMetaData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v5 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 40) = v5;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
      *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
      *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
    }
    else
    {
      sub_20A9D6C28(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v8 = *(_OWORD *)(a2 + 32);
      long long v7 = *(_OWORD *)(a2 + 48);
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v8;
      *(_OWORD *)(a1 + 48) = v7;
      *(_OWORD *)(a1 + 16) = v9;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v6 = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
    *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
    *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v10 = *(_OWORD *)(a2 + 16);
    long long v11 = *(_OWORD *)(a2 + 32);
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 16) = v10;
  }
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ExternalAnalyticsRequestMetaData(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 8)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    sub_20A9D6C28(a1);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
LABEL_6:
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExternalAnalyticsRequestMetaData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExternalAnalyticsRequestMetaData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 88) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalAnalyticsRequestMetaData()
{
  return &type metadata for ExternalAnalyticsRequestMetaData;
}

StocksAnalytics::NetworkEventType_optional __swiftcall NetworkEventType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 12;
  if (v3 < 0xC) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

unint64_t NetworkEventType.rawValue.getter()
{
  unint64_t result = 0x7472616843736473;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65746F7551736473;
      break;
    case 2:
      unint64_t result = 0x7377654E736473;
      break;
    case 3:
      unint64_t result = 0x6372616553736473;
      break;
    case 4:
      unint64_t result = 0x6E676953736473;
      break;
    case 5:
      unint64_t result = 0x6B72617053736473;
      break;
    case 6:
      unint64_t result = 0x6E696C6B72617073;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x6168436F6F686179;
      break;
    case 9:
      unint64_t result = 0x6C754D6F6F686179;
      break;
    case 0xA:
      unint64_t result = 0x77654E6F6F686179;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AB84C10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA37838(*a1, *a2);
}

unint64_t sub_20AB84C20()
{
  unint64_t result = qword_2676576A8;
  if (!qword_2676576A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676576A8);
  }
  return result;
}

uint64_t sub_20AB84C74()
{
  return sub_20AB86D80();
}

uint64_t sub_20AB84CDC()
{
  NetworkEventType.rawValue.getter();
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AB84D40()
{
  return sub_20AB86D80();
}

StocksAnalytics::NetworkEventType_optional sub_20AB84DA4(Swift::String *a1)
{
  return NetworkEventType.init(rawValue:)(*a1);
}

unint64_t sub_20AB84DB0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = NetworkEventType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20AB84DD8()
{
  return sub_20AB86750();
}

uint64_t sub_20AB84E38()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for NetworkEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AB84F54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkEventType()
{
  return &type metadata for NetworkEventType;
}

unint64_t sub_20AB84F8C()
{
  unint64_t result = qword_26AC4F590;
  if (!qword_26AC4F590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F590);
  }
  return result;
}

uint64_t sub_20AB84FE0()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_20AB84FF0()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_20AB85000()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_20AB85010()
{
  return MEMORY[0x270EEDEA0]();
}

uint64_t sub_20AB85020()
{
  return MEMORY[0x270EEDEB8]();
}

uint64_t sub_20AB85030()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_20AB85040()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_20AB85050()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_20AB85060()
{
  return MEMORY[0x270EEE378]();
}

uint64_t sub_20AB85070()
{
  return MEMORY[0x270EEE3B8]();
}

uint64_t sub_20AB85080()
{
  return MEMORY[0x270EEE3D0]();
}

uint64_t sub_20AB85090()
{
  return MEMORY[0x270EEE3E0]();
}

uint64_t sub_20AB850A0()
{
  return MEMORY[0x270EEE410]();
}

uint64_t sub_20AB850B0()
{
  return MEMORY[0x270EEE4C0]();
}

uint64_t sub_20AB850C0()
{
  return MEMORY[0x270EEE520]();
}

uint64_t sub_20AB850D0()
{
  return MEMORY[0x270EEE5C0]();
}

uint64_t sub_20AB850E0()
{
  return MEMORY[0x270EEE610]();
}

uint64_t sub_20AB850F0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_20AB85100()
{
  return MEMORY[0x270F79E50]();
}

uint64_t sub_20AB85110()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_20AB85120()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_20AB85130()
{
  return MEMORY[0x270EEFF00]();
}

uint64_t sub_20AB85140()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_20AB85150()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_20AB85160()
{
  return MEMORY[0x270EF02B0]();
}

uint64_t sub_20AB85170()
{
  return MEMORY[0x270EF02C8]();
}

uint64_t sub_20AB85180()
{
  return MEMORY[0x270EF07E0]();
}

uint64_t sub_20AB85190()
{
  return MEMORY[0x270EF0AF0]();
}

uint64_t sub_20AB851A0()
{
  return MEMORY[0x270EF0AF8]();
}

uint64_t sub_20AB851B0()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_20AB851C0()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_20AB851D0()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_20AB851E0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_20AB851F0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_20AB85200()
{
  return MEMORY[0x270EF0DA0]();
}

uint64_t sub_20AB85210()
{
  return MEMORY[0x270EF0DF8]();
}

uint64_t sub_20AB85220()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_20AB85230()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_20AB85240()
{
  return MEMORY[0x270EF15A0]();
}

uint64_t sub_20AB85250()
{
  return MEMORY[0x270EF1600]();
}

uint64_t sub_20AB85260()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_20AB85270()
{
  return MEMORY[0x270F77F68]();
}

uint64_t sub_20AB85280()
{
  return MEMORY[0x270F77F70]();
}

uint64_t sub_20AB85290()
{
  return MEMORY[0x270F77F78]();
}

uint64_t sub_20AB852A0()
{
  return MEMORY[0x270F77F80]();
}

uint64_t sub_20AB852B0()
{
  return MEMORY[0x270F77F88]();
}

uint64_t sub_20AB852C0()
{
  return MEMORY[0x270F77F90]();
}

uint64_t sub_20AB852D0()
{
  return MEMORY[0x270F77F98]();
}

uint64_t sub_20AB852E0()
{
  return MEMORY[0x270F77FA0]();
}

uint64_t sub_20AB852F0()
{
  return MEMORY[0x270F77FA8]();
}

uint64_t sub_20AB85300()
{
  return MEMORY[0x270F77FB0]();
}

uint64_t sub_20AB85310()
{
  return MEMORY[0x270F77FB8]();
}

uint64_t sub_20AB85320()
{
  return MEMORY[0x270F77FC0]();
}

uint64_t sub_20AB85330()
{
  return MEMORY[0x270F77FC8]();
}

uint64_t sub_20AB85340()
{
  return MEMORY[0x270F77FD0]();
}

uint64_t sub_20AB85350()
{
  return MEMORY[0x270F77FD8]();
}

uint64_t sub_20AB85360()
{
  return MEMORY[0x270F77FE0]();
}

uint64_t sub_20AB85370()
{
  return MEMORY[0x270F77FE8]();
}

uint64_t sub_20AB85380()
{
  return MEMORY[0x270F77FF0]();
}

uint64_t sub_20AB85390()
{
  return MEMORY[0x270F77FF8]();
}

uint64_t sub_20AB853A0()
{
  return MEMORY[0x270F781C8]();
}

uint64_t sub_20AB853B0()
{
  return MEMORY[0x270F78220]();
}

uint64_t sub_20AB853C0()
{
  return MEMORY[0x270F78228]();
}

uint64_t sub_20AB853D0()
{
  return MEMORY[0x270F78230]();
}

uint64_t sub_20AB853E0()
{
  return MEMORY[0x270F78268]();
}

uint64_t sub_20AB853F0()
{
  return MEMORY[0x270F78270]();
}

uint64_t sub_20AB85400()
{
  return MEMORY[0x270F78280]();
}

uint64_t sub_20AB85410()
{
  return MEMORY[0x270F78288]();
}

uint64_t sub_20AB85420()
{
  return MEMORY[0x270F782B0]();
}

uint64_t sub_20AB85430()
{
  return MEMORY[0x270F782F0]();
}

uint64_t sub_20AB85440()
{
  return MEMORY[0x270F78300]();
}

uint64_t sub_20AB85450()
{
  return MEMORY[0x270F78320]();
}

uint64_t sub_20AB85460()
{
  return MEMORY[0x270F78348]();
}

uint64_t sub_20AB85470()
{
  return MEMORY[0x270F78370]();
}

uint64_t sub_20AB85480()
{
  return MEMORY[0x270F78398]();
}

uint64_t sub_20AB85490()
{
  return MEMORY[0x270F78558]();
}

uint64_t sub_20AB854A0()
{
  return MEMORY[0x270F78678]();
}

uint64_t sub_20AB854B0()
{
  return MEMORY[0x270F786B0]();
}

uint64_t sub_20AB854C0()
{
  return MEMORY[0x270F786C0]();
}

uint64_t sub_20AB854D0()
{
  return MEMORY[0x270F78710]();
}

uint64_t sub_20AB854E0()
{
  return MEMORY[0x270F78718]();
}

uint64_t sub_20AB854F0()
{
  return MEMORY[0x270F78720]();
}

uint64_t sub_20AB85500()
{
  return MEMORY[0x270F78728]();
}

uint64_t sub_20AB85510()
{
  return MEMORY[0x270F78760]();
}

uint64_t sub_20AB85520()
{
  return MEMORY[0x270F78768]();
}

uint64_t sub_20AB85530()
{
  return MEMORY[0x270F788B8]();
}

uint64_t sub_20AB85540()
{
  return MEMORY[0x270F788D0]();
}

uint64_t sub_20AB85550()
{
  return MEMORY[0x270F788D8]();
}

uint64_t sub_20AB85560()
{
  return MEMORY[0x270F78970]();
}

uint64_t sub_20AB85570()
{
  return MEMORY[0x270F78978]();
}

uint64_t sub_20AB85580()
{
  return MEMORY[0x270F78A10]();
}

uint64_t sub_20AB85590()
{
  return MEMORY[0x270F78A18]();
}

uint64_t sub_20AB855A0()
{
  return MEMORY[0x270F78A20]();
}

uint64_t sub_20AB855B0()
{
  return MEMORY[0x270F78A28]();
}

uint64_t sub_20AB855C0()
{
  return MEMORY[0x270F78A30]();
}

uint64_t sub_20AB855D0()
{
  return MEMORY[0x270F78A38]();
}

uint64_t sub_20AB855E0()
{
  return MEMORY[0x270F78A40]();
}

uint64_t sub_20AB855F0()
{
  return MEMORY[0x270F78A48]();
}

uint64_t sub_20AB85600()
{
  return MEMORY[0x270F78A90]();
}

uint64_t sub_20AB85610()
{
  return MEMORY[0x270F78A98]();
}

uint64_t sub_20AB85620()
{
  return MEMORY[0x270F78AA0]();
}

uint64_t sub_20AB85630()
{
  return MEMORY[0x270F78C78]();
}

uint64_t sub_20AB85640()
{
  return MEMORY[0x270F78C80]();
}

uint64_t sub_20AB85650()
{
  return MEMORY[0x270F78C88]();
}

uint64_t sub_20AB85660()
{
  return MEMORY[0x270F78C98]();
}

uint64_t sub_20AB85670()
{
  return MEMORY[0x270F78CA0]();
}

uint64_t sub_20AB85680()
{
  return MEMORY[0x270F78D18]();
}

uint64_t sub_20AB85690()
{
  return MEMORY[0x270F78D50]();
}

uint64_t sub_20AB856A0()
{
  return MEMORY[0x270F78D68]();
}

uint64_t sub_20AB856B0()
{
  return MEMORY[0x270F78D88]();
}

uint64_t sub_20AB856E0()
{
  return MEMORY[0x270F7A890]();
}

uint64_t sub_20AB85700()
{
  return MEMORY[0x270F7A8A0]();
}

uint64_t sub_20AB85710()
{
  return MEMORY[0x270F7A8A8]();
}

uint64_t sub_20AB85720()
{
  return MEMORY[0x270F7A8B8]();
}

uint64_t sub_20AB85730()
{
  return MEMORY[0x270F7A8C0]();
}

uint64_t _s11TeaSettings0B0C15StocksAnalyticsE10Analytics2V9DebuggingV6JitterCfd_0()
{
  return MEMORY[0x270F7A8C8]();
}

uint64_t sub_20AB85750()
{
  return MEMORY[0x270F7A920]();
}

uint64_t sub_20AB85760()
{
  return MEMORY[0x270F7A928]();
}

uint64_t sub_20AB85770()
{
  return MEMORY[0x270F7A958]();
}

uint64_t sub_20AB85780()
{
  return MEMORY[0x270F7A960]();
}

uint64_t sub_20AB85790()
{
  return MEMORY[0x270F7A968]();
}

uint64_t sub_20AB857A0()
{
  return MEMORY[0x270F7A970]();
}

uint64_t sub_20AB857B0()
{
  return MEMORY[0x270F0C218]();
}

uint64_t sub_20AB857C0()
{
  return MEMORY[0x270F0C220]();
}

uint64_t sub_20AB857D0()
{
  return MEMORY[0x270F0C228]();
}

uint64_t sub_20AB857E0()
{
  return MEMORY[0x270F0C240]();
}

uint64_t sub_20AB857F0()
{
  return MEMORY[0x270F0C248]();
}

uint64_t sub_20AB85800()
{
  return MEMORY[0x270F0C250]();
}

uint64_t sub_20AB85810()
{
  return MEMORY[0x270F0C258]();
}

uint64_t sub_20AB85820()
{
  return MEMORY[0x270F0C260]();
}

uint64_t sub_20AB85830()
{
  return MEMORY[0x270F0C268]();
}

uint64_t sub_20AB85840()
{
  return MEMORY[0x270F0C270]();
}

uint64_t sub_20AB85850()
{
  return MEMORY[0x270F0C278]();
}

uint64_t sub_20AB85860()
{
  return MEMORY[0x270F0C280]();
}

uint64_t sub_20AB85870()
{
  return MEMORY[0x270F0C288]();
}

uint64_t sub_20AB85880()
{
  return MEMORY[0x270F0C290]();
}

uint64_t sub_20AB85890()
{
  return MEMORY[0x270F0C298]();
}

uint64_t sub_20AB858A0()
{
  return MEMORY[0x270F0C2A0]();
}

uint64_t sub_20AB858B0()
{
  return MEMORY[0x270F0C2A8]();
}

uint64_t sub_20AB858C0()
{
  return MEMORY[0x270F0C2B0]();
}

uint64_t sub_20AB858D0()
{
  return MEMORY[0x270F0C2B8]();
}

uint64_t sub_20AB858E0()
{
  return MEMORY[0x270F0C2C0]();
}

uint64_t sub_20AB858F0()
{
  return MEMORY[0x270F0C2C8]();
}

uint64_t sub_20AB85900()
{
  return MEMORY[0x270F0C2D0]();
}

uint64_t sub_20AB85910()
{
  return MEMORY[0x270F0C2D8]();
}

uint64_t sub_20AB85920()
{
  return MEMORY[0x270F0C2E0]();
}

uint64_t sub_20AB85930()
{
  return MEMORY[0x270F0C2E8]();
}

uint64_t sub_20AB85940()
{
  return MEMORY[0x270F0C2F0]();
}

uint64_t sub_20AB85950()
{
  return MEMORY[0x270F0C300]();
}

uint64_t sub_20AB85960()
{
  return MEMORY[0x270F0C308]();
}

uint64_t sub_20AB85970()
{
  return MEMORY[0x270F0C310]();
}

uint64_t sub_20AB85980()
{
  return MEMORY[0x270F0C318]();
}

uint64_t sub_20AB85990()
{
  return MEMORY[0x270F0C320]();
}

uint64_t sub_20AB859A0()
{
  return MEMORY[0x270F0C328]();
}

uint64_t sub_20AB859B0()
{
  return MEMORY[0x270F0C338]();
}

uint64_t sub_20AB859C0()
{
  return MEMORY[0x270F0C340]();
}

uint64_t sub_20AB859D0()
{
  return MEMORY[0x270F0C360]();
}

uint64_t sub_20AB859E0()
{
  return MEMORY[0x270F0C370]();
}

uint64_t sub_20AB859F0()
{
  return MEMORY[0x270F0C378]();
}

uint64_t sub_20AB85A00()
{
  return MEMORY[0x270F0C380]();
}

uint64_t sub_20AB85A10()
{
  return MEMORY[0x270F0C388]();
}

uint64_t sub_20AB85A20()
{
  return MEMORY[0x270F0C390]();
}

uint64_t sub_20AB85A30()
{
  return MEMORY[0x270F0C3A0]();
}

uint64_t sub_20AB85A40()
{
  return MEMORY[0x270F0C3A8]();
}

uint64_t sub_20AB85A50()
{
  return MEMORY[0x270F0C3B0]();
}

uint64_t sub_20AB85A60()
{
  return MEMORY[0x270F0C3B8]();
}

uint64_t sub_20AB85A70()
{
  return MEMORY[0x270F0C3D0]();
}

uint64_t sub_20AB85A80()
{
  return MEMORY[0x270F0C3D8]();
}

uint64_t sub_20AB85A90()
{
  return MEMORY[0x270F0C3E0]();
}

uint64_t sub_20AB85AA0()
{
  return MEMORY[0x270F0C3E8]();
}

uint64_t sub_20AB85AB0()
{
  return MEMORY[0x270F0C3F0]();
}

uint64_t sub_20AB85AC0()
{
  return MEMORY[0x270F0C400]();
}

uint64_t sub_20AB85AD0()
{
  return MEMORY[0x270F0C408]();
}

uint64_t sub_20AB85AE0()
{
  return MEMORY[0x270F0C410]();
}

uint64_t sub_20AB85AF0()
{
  return MEMORY[0x270F0C418]();
}

uint64_t sub_20AB85B00()
{
  return MEMORY[0x270F0C420]();
}

uint64_t sub_20AB85B10()
{
  return MEMORY[0x270F0C428]();
}

uint64_t sub_20AB85B20()
{
  return MEMORY[0x270F0C430]();
}

uint64_t sub_20AB85B30()
{
  return MEMORY[0x270F0C438]();
}

uint64_t sub_20AB85B40()
{
  return MEMORY[0x270F0C440]();
}

uint64_t sub_20AB85B50()
{
  return MEMORY[0x270F0C448]();
}

uint64_t sub_20AB85B60()
{
  return MEMORY[0x270F0C450]();
}

uint64_t sub_20AB85B70()
{
  return MEMORY[0x270F0C458]();
}

uint64_t sub_20AB85B80()
{
  return MEMORY[0x270F0C468]();
}

uint64_t sub_20AB85B90()
{
  return MEMORY[0x270F0C470]();
}

uint64_t sub_20AB85BA0()
{
  return MEMORY[0x270F0C478]();
}

uint64_t sub_20AB85BB0()
{
  return MEMORY[0x270F0C480]();
}

uint64_t sub_20AB85BC0()
{
  return MEMORY[0x270F0C488]();
}

uint64_t sub_20AB85BD0()
{
  return MEMORY[0x270F0C490]();
}

uint64_t sub_20AB85BE0()
{
  return MEMORY[0x270F0C498]();
}

uint64_t sub_20AB85C50()
{
  return MEMORY[0x270F0C4F8]();
}

uint64_t sub_20AB85C60()
{
  return MEMORY[0x270F0C500]();
}

uint64_t sub_20AB85C70()
{
  return MEMORY[0x270F0C508]();
}

uint64_t sub_20AB85C80()
{
  return MEMORY[0x270F0C510]();
}

uint64_t sub_20AB85C90()
{
  return MEMORY[0x270F0C518]();
}

uint64_t sub_20AB85CA0()
{
  return MEMORY[0x270F0C520]();
}

uint64_t sub_20AB85CB0()
{
  return MEMORY[0x270F0C528]();
}

uint64_t sub_20AB85CC0()
{
  return MEMORY[0x270F0C538]();
}

uint64_t sub_20AB85CD0()
{
  return MEMORY[0x270F0C540]();
}

uint64_t sub_20AB85CE0()
{
  return MEMORY[0x270F0C548]();
}

uint64_t sub_20AB85CF0()
{
  return MEMORY[0x270F0C550]();
}

uint64_t sub_20AB85D00()
{
  return MEMORY[0x270F0C558]();
}

uint64_t sub_20AB85D10()
{
  return MEMORY[0x270F0C568]();
}

uint64_t sub_20AB85D20()
{
  return MEMORY[0x270F0C570]();
}

uint64_t sub_20AB85D30()
{
  return MEMORY[0x270F0C578]();
}

uint64_t sub_20AB85D40()
{
  return MEMORY[0x270F0C580]();
}

uint64_t sub_20AB85D50()
{
  return MEMORY[0x270F0C588]();
}

uint64_t sub_20AB85D60()
{
  return MEMORY[0x270F0C590]();
}

uint64_t sub_20AB85D70()
{
  return MEMORY[0x270F0C598]();
}

uint64_t sub_20AB85D80()
{
  return MEMORY[0x270F0C5A0]();
}

uint64_t sub_20AB85D90()
{
  return MEMORY[0x270F0C5A8]();
}

uint64_t sub_20AB85DA0()
{
  return MEMORY[0x270F0C5B0]();
}

uint64_t sub_20AB85DB0()
{
  return MEMORY[0x270F0C5B8]();
}

uint64_t sub_20AB85DC0()
{
  return MEMORY[0x270F0C5C0]();
}

uint64_t sub_20AB85DD0()
{
  return MEMORY[0x270F0C5C8]();
}

uint64_t sub_20AB85DE0()
{
  return MEMORY[0x270F0C5D0]();
}

uint64_t sub_20AB85DF0()
{
  return MEMORY[0x270F0C5D8]();
}

uint64_t sub_20AB85E00()
{
  return MEMORY[0x270F0C5E8]();
}

uint64_t sub_20AB85E10()
{
  return MEMORY[0x270F0C5F0]();
}

uint64_t sub_20AB85E20()
{
  return MEMORY[0x270F0C5F8]();
}

uint64_t sub_20AB85E30()
{
  return MEMORY[0x270F0C610]();
}

uint64_t sub_20AB85E40()
{
  return MEMORY[0x270F0C618]();
}

uint64_t sub_20AB85E50()
{
  return MEMORY[0x270F0C620]();
}

uint64_t sub_20AB85E60()
{
  return MEMORY[0x270F0C628]();
}

uint64_t sub_20AB85E70()
{
  return MEMORY[0x270F0C630]();
}

uint64_t sub_20AB85E80()
{
  return MEMORY[0x270F0C638]();
}

uint64_t sub_20AB85E90()
{
  return MEMORY[0x270F0C640]();
}

uint64_t sub_20AB85EA0()
{
  return MEMORY[0x270F0C648]();
}

uint64_t sub_20AB85EB0()
{
  return MEMORY[0x270F0C650]();
}

uint64_t sub_20AB85EC0()
{
  return MEMORY[0x270F0C660]();
}

uint64_t sub_20AB85ED0()
{
  return MEMORY[0x270F0C668]();
}

uint64_t sub_20AB85EE0()
{
  return MEMORY[0x270F0C670]();
}

uint64_t sub_20AB85EF0()
{
  return MEMORY[0x270F0C678]();
}

uint64_t sub_20AB85F00()
{
  return MEMORY[0x270F0C680]();
}

uint64_t sub_20AB85F10()
{
  return MEMORY[0x270F0C688]();
}

uint64_t sub_20AB85F20()
{
  return MEMORY[0x270F0C690]();
}

uint64_t sub_20AB85F40()
{
  return MEMORY[0x270F0C6B8]();
}

uint64_t sub_20AB85F50()
{
  return MEMORY[0x270F0C6D8]();
}

uint64_t sub_20AB85F60()
{
  return MEMORY[0x270F0C6E8]();
}

uint64_t sub_20AB85F70()
{
  return MEMORY[0x270F0C700]();
}

uint64_t sub_20AB85F80()
{
  return MEMORY[0x270F0C708]();
}

uint64_t sub_20AB85F90()
{
  return MEMORY[0x270F0C710]();
}

uint64_t sub_20AB85FA0()
{
  return MEMORY[0x270F0C718]();
}

uint64_t sub_20AB85FB0()
{
  return MEMORY[0x270F0C720]();
}

uint64_t sub_20AB85FC0()
{
  return MEMORY[0x270F0C730]();
}

uint64_t sub_20AB85FD0()
{
  return MEMORY[0x270F0C748]();
}

uint64_t sub_20AB85FE0()
{
  return MEMORY[0x270F0C750]();
}

uint64_t sub_20AB85FF0()
{
  return MEMORY[0x270F79E98]();
}

uint64_t sub_20AB86000()
{
  return MEMORY[0x270F79EA0]();
}

uint64_t sub_20AB86010()
{
  return MEMORY[0x270F79EA8]();
}

uint64_t sub_20AB86020()
{
  return MEMORY[0x270F79EB0]();
}

uint64_t sub_20AB86030()
{
  return MEMORY[0x270F79EB8]();
}

uint64_t sub_20AB86040()
{
  return MEMORY[0x270F79EC0]();
}

uint64_t sub_20AB86050()
{
  return MEMORY[0x270F79EC8]();
}

uint64_t sub_20AB86060()
{
  return MEMORY[0x270F79ED0]();
}

uint64_t sub_20AB86070()
{
  return MEMORY[0x270F79ED8]();
}

uint64_t sub_20AB86080()
{
  return MEMORY[0x270F79F98]();
}

uint64_t sub_20AB86090()
{
  return MEMORY[0x270F79FA0]();
}

uint64_t sub_20AB860A0()
{
  return MEMORY[0x270F79FE0]();
}

uint64_t sub_20AB860B0()
{
  return MEMORY[0x270F79FE8]();
}

uint64_t sub_20AB860C0()
{
  return MEMORY[0x270F7A000]();
}

uint64_t sub_20AB860D0()
{
  return MEMORY[0x270F7A008]();
}

uint64_t sub_20AB860E0()
{
  return MEMORY[0x270F7A040]();
}

uint64_t sub_20AB860F0()
{
  return MEMORY[0x270F7A060]();
}

uint64_t sub_20AB86100()
{
  return MEMORY[0x270F7A070]();
}

uint64_t sub_20AB86110()
{
  return MEMORY[0x270F7A090]();
}

uint64_t sub_20AB86120()
{
  return MEMORY[0x270F7A0C0]();
}

uint64_t sub_20AB86130()
{
  return MEMORY[0x270F7A0C8]();
}

uint64_t sub_20AB86140()
{
  return MEMORY[0x270F7A0D0]();
}

uint64_t sub_20AB86150()
{
  return MEMORY[0x270F7A110]();
}

uint64_t sub_20AB86160()
{
  return MEMORY[0x270F7A198]();
}

uint64_t sub_20AB86170()
{
  return MEMORY[0x270F7A1A8]();
}

uint64_t sub_20AB86180()
{
  return MEMORY[0x270F7A1B8]();
}

uint64_t sub_20AB86190()
{
  return MEMORY[0x270F7A1C8]();
}

uint64_t sub_20AB861A0()
{
  return MEMORY[0x270F7A1D0]();
}

uint64_t sub_20AB861B0()
{
  return MEMORY[0x270F7A1D8]();
}

uint64_t sub_20AB861C0()
{
  return MEMORY[0x270F7A1E8]();
}

uint64_t sub_20AB861D0()
{
  return MEMORY[0x270F7A218]();
}

uint64_t sub_20AB861E0()
{
  return MEMORY[0x270F7A220]();
}

uint64_t sub_20AB86210()
{
  return MEMORY[0x270F7A280]();
}

uint64_t sub_20AB86230()
{
  return MEMORY[0x270F7A290]();
}

uint64_t sub_20AB86240()
{
  return MEMORY[0x270F7A298]();
}

uint64_t sub_20AB86250()
{
  return MEMORY[0x270F7A2A0]();
}

uint64_t sub_20AB86260()
{
  return MEMORY[0x270F7A2A8]();
}

uint64_t sub_20AB86280()
{
  return MEMORY[0x270F7AAF8]();
}

uint64_t sub_20AB86290()
{
  return MEMORY[0x270F7A2C8]();
}

uint64_t sub_20AB862A0()
{
  return MEMORY[0x270F7A2D0]();
}

uint64_t sub_20AB862B0()
{
  return MEMORY[0x270F7A2E8]();
}

uint64_t sub_20AB862C0()
{
  return MEMORY[0x270F7A310]();
}

uint64_t sub_20AB862D0()
{
  return MEMORY[0x270F7A320]();
}

uint64_t sub_20AB862E0()
{
  return MEMORY[0x270F7A330]();
}

uint64_t sub_20AB862F0()
{
  return MEMORY[0x270F7A390]();
}

uint64_t sub_20AB86300()
{
  return MEMORY[0x270F7A3A0]();
}

uint64_t sub_20AB86310()
{
  return MEMORY[0x270F7A410]();
}

uint64_t sub_20AB86320()
{
  return MEMORY[0x270F7A418]();
}

uint64_t sub_20AB86330()
{
  return MEMORY[0x270F7A420]();
}

uint64_t sub_20AB86340()
{
  return MEMORY[0x270F7A428]();
}

uint64_t sub_20AB86350()
{
  return MEMORY[0x270F7A438]();
}

uint64_t sub_20AB86360()
{
  return MEMORY[0x270F7A448]();
}

uint64_t sub_20AB86370()
{
  return MEMORY[0x270F7A450]();
}

uint64_t sub_20AB86380()
{
  return MEMORY[0x270F7AB08]();
}

uint64_t sub_20AB86390()
{
  return MEMORY[0x270F7A480]();
}

uint64_t sub_20AB863A0()
{
  return MEMORY[0x270F7A488]();
}

uint64_t sub_20AB863B0()
{
  return MEMORY[0x270F7A560]();
}

uint64_t sub_20AB863C0()
{
  return MEMORY[0x270F7A580]();
}

uint64_t sub_20AB863D0()
{
  return MEMORY[0x270F7A658]();
}

uint64_t sub_20AB863E0()
{
  return MEMORY[0x270F7A688]();
}

uint64_t sub_20AB863F0()
{
  return MEMORY[0x270F7A690]();
}

uint64_t sub_20AB86400()
{
  return MEMORY[0x270F7A698]();
}

uint64_t sub_20AB86410()
{
  return MEMORY[0x270F7A760]();
}

uint64_t sub_20AB86420()
{
  return MEMORY[0x270F7A778]();
}

uint64_t sub_20AB86430()
{
  return MEMORY[0x270F07E90]();
}

uint64_t sub_20AB86440()
{
  return MEMORY[0x270FA2C68]();
}

uint64_t sub_20AB86450()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_20AB86460()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_20AB86470()
{
  return MEMORY[0x270FA2E30]();
}

uint64_t sub_20AB86480()
{
  return MEMORY[0x270F7ABD0]();
}

uint64_t sub_20AB86490()
{
  return MEMORY[0x270F7AD58]();
}

uint64_t sub_20AB864A0()
{
  return MEMORY[0x270F7AF58]();
}

uint64_t sub_20AB864B0()
{
  return MEMORY[0x270F7AF60]();
}

uint64_t sub_20AB864C0()
{
  return MEMORY[0x270F7BB60]();
}

uint64_t sub_20AB864D0()
{
  return MEMORY[0x270F7C8B0]();
}

uint64_t sub_20AB864E0()
{
  return MEMORY[0x270EE4008]();
}

uint64_t sub_20AB864F0()
{
  return MEMORY[0x270F4E5A8]();
}

uint64_t sub_20AB86500()
{
  return MEMORY[0x270F4E5B0]();
}

uint64_t sub_20AB86510()
{
  return MEMORY[0x270F4E5B8]();
}

uint64_t sub_20AB86520()
{
  return MEMORY[0x270F4E5C0]();
}

uint64_t sub_20AB86530()
{
  return MEMORY[0x270F4E5C8]();
}

uint64_t sub_20AB86540()
{
  return MEMORY[0x270F4E5D0]();
}

uint64_t sub_20AB86550()
{
  return MEMORY[0x270F4E5D8]();
}

uint64_t sub_20AB86560()
{
  return MEMORY[0x270F4E5E0]();
}

uint64_t sub_20AB86570()
{
  return MEMORY[0x270F4E618]();
}

uint64_t sub_20AB86580()
{
  return MEMORY[0x270F4E620]();
}

uint64_t sub_20AB86590()
{
  return MEMORY[0x270F4E628]();
}

uint64_t sub_20AB865A0()
{
  return MEMORY[0x270F4E630]();
}

uint64_t sub_20AB865B0()
{
  return MEMORY[0x270F4E638]();
}

uint64_t sub_20AB865C0()
{
  return MEMORY[0x270F4E6E0]();
}

uint64_t sub_20AB865D0()
{
  return MEMORY[0x270F4E708]();
}

uint64_t sub_20AB865E0()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_20AB865F0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_20AB86600()
{
  return MEMORY[0x270FA0A00]();
}

uint64_t sub_20AB86610()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_20AB86620()
{
  return MEMORY[0x270FA0AC0]();
}

uint64_t sub_20AB86630()
{
  return MEMORY[0x270FA0B00]();
}

uint64_t sub_20AB86640()
{
  return MEMORY[0x270FA0BC8]();
}

uint64_t sub_20AB86650()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_20AB86660()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_20AB86670()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_20AB86680()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_20AB86690()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_20AB866A0()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_20AB866B0()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_20AB866C0()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_20AB866D0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_20AB866E0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_20AB866F0()
{
  return MEMORY[0x270F7A7C0]();
}

uint64_t sub_20AB86710()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_20AB86720()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_20AB86730()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_20AB86740()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_20AB86750()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_20AB86760()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_20AB86770()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_20AB86780()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_20AB86790()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_20AB867A0()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_20AB867B0()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_20AB867D0()
{
  return MEMORY[0x270EF1CF0]();
}

uint64_t sub_20AB867E0()
{
  return MEMORY[0x270EF1CF8]();
}

uint64_t sub_20AB867F0()
{
  return MEMORY[0x270EF1D08]();
}

uint64_t sub_20AB86810()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_20AB86820()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_20AB86830()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_20AB86840()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_20AB86850()
{
  return MEMORY[0x270FA0D70]();
}

uint64_t sub_20AB86860()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_20AB86870()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_20AB86880()
{
  return MEMORY[0x270F07EB0]();
}

uint64_t sub_20AB86890()
{
  return MEMORY[0x270F7CAD0]();
}

uint64_t sub_20AB868A0()
{
  return MEMORY[0x270FA2ED0]();
}

uint64_t sub_20AB868B0()
{
  return MEMORY[0x270FA2F00]();
}

uint64_t sub_20AB868C0()
{
  return MEMORY[0x270F0C758]();
}

uint64_t sub_20AB868D0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_20AB868E0()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_20AB868F0()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_20AB86900()
{
  return MEMORY[0x270EF24C0]();
}

uint64_t sub_20AB86910()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_20AB86920()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_20AB86930()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_20AB86940()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_20AB86950()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_20AB86960()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_20AB86970()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_20AB86980()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_20AB86990()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_20AB869A0()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_20AB869B0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_20AB869C0()
{
  return MEMORY[0x270F9EAE0]();
}

uint64_t sub_20AB869D0()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_20AB869E0()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_20AB869F0()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_20AB86A00()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_20AB86A10()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_20AB86A20()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_20AB86A30()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_20AB86A40()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_20AB86A50()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_20AB86A60()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_20AB86A70()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_20AB86A80()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_20AB86A90()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_20AB86AA0()
{
  return MEMORY[0x270F9F0B8]();
}

uint64_t sub_20AB86AB0()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_20AB86AC0()
{
  return MEMORY[0x270F9F1A8]();
}

uint64_t sub_20AB86AD0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_20AB86AE0()
{
  return MEMORY[0x270F0C760]();
}

uint64_t sub_20AB86AF0()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_20AB86B00()
{
  return MEMORY[0x270F9F278]();
}

uint64_t sub_20AB86B10()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_20AB86B20()
{
  return MEMORY[0x270F9F2B8]();
}

uint64_t sub_20AB86B30()
{
  return MEMORY[0x270F9F2C0]();
}

uint64_t sub_20AB86B40()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_20AB86B50()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_20AB86B60()
{
  return MEMORY[0x270F9F2F8]();
}

uint64_t sub_20AB86B70()
{
  return MEMORY[0x270F9F300]();
}

uint64_t sub_20AB86B80()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_20AB86B90()
{
  return MEMORY[0x270F9F330]();
}

uint64_t sub_20AB86BA0()
{
  return MEMORY[0x270F9F338]();
}

uint64_t sub_20AB86BB0()
{
  return MEMORY[0x270F0C768]();
}

uint64_t sub_20AB86BC0()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_20AB86BD0()
{
  return MEMORY[0x270F9F3B8]();
}

uint64_t sub_20AB86BE0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_20AB86BF0()
{
  return MEMORY[0x270F9F3F0]();
}

uint64_t sub_20AB86C00()
{
  return MEMORY[0x270F9F3F8]();
}

uint64_t sub_20AB86C10()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_20AB86C20()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_20AB86C30()
{
  return MEMORY[0x270F9F438]();
}

uint64_t sub_20AB86C40()
{
  return MEMORY[0x270F9F440]();
}

uint64_t sub_20AB86C50()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_20AB86C60()
{
  return MEMORY[0x270F9F470]();
}

uint64_t sub_20AB86C70()
{
  return MEMORY[0x270F9F478]();
}

uint64_t sub_20AB86C80()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_20AB86C90()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_20AB86CA0()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_20AB86CB0()
{
  return MEMORY[0x270F9F838]();
}

uint64_t sub_20AB86CC0()
{
  return MEMORY[0x270F9F8C8]();
}

uint64_t sub_20AB86CD0()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_20AB86CE0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_20AB86CF0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_20AB86D00()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_20AB86D10()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_20AB86D20()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_20AB86D30()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_20AB86D40()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_20AB86D60()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_20AB86D70()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_20AB86D80()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_20AB86D90()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_20AB86DA0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_20AB86DB0()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_20AB86DC0()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t NFSeedBuild()
{
  return MEMORY[0x270F50030]();
}

uint64_t NFStoreDemoMode()
{
  return MEMORY[0x270F50038]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

void exit(int a1)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x270FA0358]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return MEMORY[0x270FA05B8]();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return MEMORY[0x270FA05C0]();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return MEMORY[0x270FA05C8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_unownedRelease()
{
  return MEMORY[0x270FA0610]();
}

uint64_t swift_unownedRetain()
{
  return MEMORY[0x270FA0618]();
}

uint64_t swift_unownedRetainStrong()
{
  return MEMORY[0x270FA0620]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x270EDB7D8](a1, a2, a3, a4, a5);
}