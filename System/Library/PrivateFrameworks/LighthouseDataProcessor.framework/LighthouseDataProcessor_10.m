uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV011EnumerationH0V2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t *v35;
  uint64_t v36;
  char v37;
  void *v38;
  void *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  void *v48;
  void *v50;
  char v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  void *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;

  v75 = a1;
  v76 = a2;
  v2 = sub_254E14FC8();
  v65 = *(void *)(v2 - 8);
  v66 = v2;
  v3 = MEMORY[0x270FA5388](v2);
  v64 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  v63 = (char *)&v61 - v5;
  v6 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v70 = *(void *)(v6 - 8);
  v71 = v6;
  MEMORY[0x270FA5388](v6);
  v62 = (uint64_t *)((char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E161C8);
  MEMORY[0x270FA5388](v68);
  v72 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0CB20);
  v10 = MEMORY[0x270FA5388](v9 - 8);
  v67 = (uint64_t *)((char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x270FA5388](v10);
  v74 = (uint64_t)&v61 - v13;
  MEMORY[0x270FA5388](v12);
  v69 = (uint64_t)&v61 - v14;
  v15 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E122B8);
  v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C648);
  v24 = MEMORY[0x270FA5388](v23 - 8);
  v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x270FA5388](v24);
  v29 = (char *)&v61 - v28;
  MEMORY[0x270FA5388](v27);
  v31 = (char *)&v61 - v30;
  v32 = type metadata accessor for ToolKitProtoTypedValue.EnumerationValue(0);
  sub_2545C9310((uint64_t)v75 + *(int *)(v32 + 20), (uint64_t)v31, &qword_269E0C648);
  v73 = v32;
  sub_2545C9310((uint64_t)v76 + *(int *)(v32 + 20), (uint64_t)v29, &qword_269E0C648);
  v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_2545C9310((uint64_t)v31, (uint64_t)v22, &qword_269E0C648);
  sub_2545C9310((uint64_t)v29, v33, &qword_269E0C648);
  v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_2545C9374((uint64_t)v29, &qword_269E0C648);
    sub_2545C9374((uint64_t)v31, &qword_269E0C648);
    if (v34(v33, 1, v15) == 1)
    {
      sub_2545C9374((uint64_t)v22, &qword_269E0C648);
      goto LABEL_8;
    }
LABEL_6:
    v35 = &qword_269E122B8;
    v36 = (uint64_t)v22;
LABEL_17:
    sub_2545C9374(v36, v35);
    goto LABEL_18;
  }
  sub_2545C9310((uint64_t)v22, (uint64_t)v26, &qword_269E0C648);
  if (v34(v33, 1, v15) == 1)
  {
    sub_2545C9374((uint64_t)v29, &qword_269E0C648);
    sub_2545C9374((uint64_t)v31, &qword_269E0C648);
    sub_254DCF224((uint64_t)v26, type metadata accessor for ToolKitProtoTypeIdentifier);
    goto LABEL_6;
  }
  sub_254DCF1BC(v33, (uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
  v37 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v26, (uint64_t)v18);
  sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2545C9374((uint64_t)v29, &qword_269E0C648);
  sub_2545C9374((uint64_t)v31, &qword_269E0C648);
  sub_254DCF224((uint64_t)v26, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2545C9374((uint64_t)v22, &qword_269E0C648);
  if ((v37 & 1) == 0)
  {
LABEL_18:
    v40 = 0;
    return v40 & 1;
  }
LABEL_8:
  v39 = v75;
  v38 = v76;
  if (*v75 == *v76 && v75[1] == v76[1] || (v40 = 0, (sub_254E15E08() & 1) != 0))
  {
    v41 = v73;
    v42 = v69;
    sub_2545C9310((uint64_t)v39 + *(int *)(v73 + 24), v69, &qword_269E0CB20);
    v43 = v74;
    sub_2545C9310((uint64_t)v38 + *(int *)(v41 + 24), v74, &qword_269E0CB20);
    v44 = v72;
    v45 = v72 + *(int *)(v68 + 48);
    sub_2545C9310(v42, v72, &qword_269E0CB20);
    sub_2545C9310(v43, v45, &qword_269E0CB20);
    v46 = v71;
    v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
    if (v47(v44, 1, v71) == 1)
    {
      sub_2545C9374(v43, &qword_269E0CB20);
      sub_2545C9374(v42, &qword_269E0CB20);
      if (v47(v45, 1, v46) == 1)
      {
        sub_2545C9374(v44, &qword_269E0CB20);
LABEL_21:
        v52 = v73;
        v53 = (char *)v39 + *(int *)(v73 + 28);
        v55 = v65;
        v54 = v66;
        v56 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
        v57 = v63;
        v56(v63, v53, v66);
        v58 = (char *)v38 + *(int *)(v52 + 28);
        v59 = v64;
        v56(v64, v58, v54);
        sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        v40 = sub_254E157D8();
        v60 = *(void (**)(char *, uint64_t))(v55 + 8);
        v60(v59, v54);
        v60(v57, v54);
        return v40 & 1;
      }
    }
    else
    {
      v48 = v67;
      sub_2545C9310(v44, (uint64_t)v67, &qword_269E0CB20);
      if (v47(v45, 1, v46) != 1)
      {
        v50 = v62;
        sub_254DCF1BC(v45, (uint64_t)v62, type metadata accessor for ToolKitProtoDisplayRepresentation);
        v51 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v48, v50);
        sub_254DCF224((uint64_t)v50, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2545C9374(v74, &qword_269E0CB20);
        sub_2545C9374(v42, &qword_269E0CB20);
        sub_254DCF224((uint64_t)v48, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2545C9374(v44, &qword_269E0CB20);
        if (v51) {
          goto LABEL_21;
        }
        goto LABEL_18;
      }
      sub_2545C9374(v74, &qword_269E0CB20);
      sub_2545C9374(v42, &qword_269E0CB20);
      sub_254DCF224((uint64_t)v48, type metadata accessor for ToolKitProtoDisplayRepresentation);
    }
    v35 = &qword_269E161C8;
    v36 = v44;
    goto LABEL_17;
  }
  return v40 & 1;
}

uint64_t sub_254DB9070(char *a1, uint64_t (*a2)(void))
{
  return sub_254DB909C(a1, a2, type metadata accessor for ToolKitProtoTypedValue.CollectionValue, (uint64_t (*)(void, void))sub_254DDD29C);
}

uint64_t sub_254DB909C(char *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void, void))
{
  v51 = a4;
  v53 = a3;
  uint64_t v6 = sub_254E14FC8();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v47 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  v46 = (char *)&v46 - v9;
  uint64_t v10 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v50 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E122B8);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C648);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  v23 = (char *)&v46 - v22;
  MEMORY[0x270FA5388](v21);
  v25 = (char *)&v46 - v24;
  uint64_t v26 = v53(0);
  uint64_t v27 = *(int *)(v26 + 20);
  v52 = a1;
  uint64_t v28 = (uint64_t)&a1[v27];
  uint64_t v29 = v26;
  sub_2545C9310(v28, (uint64_t)v25, &qword_269E0C648);
  uint64_t v30 = *(int *)(v29 + 20);
  v53 = a2;
  sub_2545C9310((uint64_t)a2 + v30, (uint64_t)v23, &qword_269E0C648);
  uint64_t v31 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_2545C9310((uint64_t)v25, (uint64_t)v16, &qword_269E0C648);
  sub_2545C9310((uint64_t)v23, v31, &qword_269E0C648);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v32((uint64_t)v16, 1, v10) == 1)
  {
    sub_2545C9374((uint64_t)v23, &qword_269E0C648);
    sub_2545C9374((uint64_t)v25, &qword_269E0C648);
    if (v32(v31, 1, v10) == 1)
    {
      sub_2545C9374((uint64_t)v16, &qword_269E0C648);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2545C9310((uint64_t)v16, (uint64_t)v20, &qword_269E0C648);
  if (v32(v31, 1, v10) == 1)
  {
    sub_2545C9374((uint64_t)v23, &qword_269E0C648);
    sub_2545C9374((uint64_t)v25, &qword_269E0C648);
    sub_254DCF224((uint64_t)v20, type metadata accessor for ToolKitProtoTypeIdentifier);
LABEL_6:
    sub_2545C9374((uint64_t)v16, &qword_269E122B8);
LABEL_10:
    char v43 = 0;
    return v43 & 1;
  }
  uint64_t v33 = v50;
  sub_254DCF1BC(v31, v50, type metadata accessor for ToolKitProtoTypeIdentifier);
  char v34 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v20, v33);
  sub_254DCF224(v33, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2545C9374((uint64_t)v23, &qword_269E0C648);
  sub_2545C9374((uint64_t)v25, &qword_269E0C648);
  sub_254DCF224((uint64_t)v20, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2545C9374((uint64_t)v16, &qword_269E0C648);
  if ((v34 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  v35 = v52;
  v36 = v53;
  if ((v51(*(void *)v52, *(void *)v53) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v38 = v48;
  uint64_t v37 = v49;
  v39 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v40 = v46;
  v39(v46, &v35[*(int *)(v29 + 24)], v49);
  v41 = (char *)v36 + *(int *)(v29 + 24);
  v42 = v47;
  v39(v47, v41, v37);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v43 = sub_254E157D8();
  v44 = *(void (**)(char *, uint64_t))(v38 + 8);
  v44(v42, v37);
  v44(v40, v37);
  return v43 & 1;
}

uint64_t _s23LighthouseDataProcessor17ToolKitProtoQueryV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v50 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v48 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v53 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16060);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12488);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v48 - v20;
  MEMORY[0x270FA5388](v19);
  v23 = (char *)&v48 - v22;
  uint64_t v24 = type metadata accessor for ToolKitProtoQuery(0);
  uint64_t v25 = *(int *)(v24 + 20);
  v54 = a1;
  uint64_t v26 = (uint64_t)&a1[v25];
  uint64_t v27 = (int *)v24;
  sub_2545C9310(v26, (uint64_t)v23, &qword_269E12488);
  uint64_t v28 = v27[5];
  v55 = a2;
  sub_2545C9310((uint64_t)&a2[v28], (uint64_t)v21, &qword_269E12488);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E12488);
  sub_2545C9310((uint64_t)v21, v29, &qword_269E12488);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_2545C9374((uint64_t)v21, &qword_269E12488);
    sub_2545C9374((uint64_t)v23, &qword_269E12488);
    if (v30(v29, 1, v8) == 1)
    {
      sub_2545C9374((uint64_t)v14, &qword_269E12488);
LABEL_8:
      char v34 = v55;
      if (*v54 == *v55)
      {
        uint64_t v35 = v27[6];
        v36 = &v54[v35];
        unsigned __int8 v37 = v54[v35 + 8];
        uint64_t v38 = &v55[v35];
        int v39 = v55[v35 + 8];
        if (v37)
        {
          if (!v39) {
            goto LABEL_11;
          }
        }
        else
        {
          if (*(void *)v36 != *(void *)v38) {
            LOBYTE(v39) = 1;
          }
          if (v39) {
            goto LABEL_11;
          }
        }
        uint64_t v42 = v51;
        uint64_t v41 = v52;
        char v43 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v51 + 16);
        v44 = v49;
        v43(v49, &v54[v27[7]], v52);
        v45 = &v34[v27[7]];
        v46 = v50;
        v43(v50, v45, v41);
        sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        char v31 = sub_254E157D8();
        v47 = *(void (**)(char *, uint64_t))(v42 + 8);
        v47(v46, v41);
        v47(v44, v41);
        return v31 & 1;
      }
LABEL_11:
      char v31 = 0;
      return v31 & 1;
    }
  }
  else
  {
    sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E12488);
    if (v30(v29, 1, v8) != 1)
    {
      uint64_t v32 = v53;
      sub_254DCF1BC(v29, v53, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
      char V12AnyPredicateV2eeoiySbAE_AEtFZ_0 = _s23LighthouseDataProcessor17ToolKitProtoQueryV12AnyPredicateV2eeoiySbAE_AEtFZ_0((uint64_t)v18, v32);
      sub_254DCF224(v32, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
      sub_2545C9374((uint64_t)v21, &qword_269E12488);
      sub_2545C9374((uint64_t)v23, &qword_269E12488);
      sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
      sub_2545C9374((uint64_t)v14, &qword_269E12488);
      if ((V12AnyPredicateV2eeoiySbAE_AEtFZ_0 & 1) == 0) {
        goto LABEL_11;
      }
      goto LABEL_8;
    }
    sub_2545C9374((uint64_t)v21, &qword_269E12488);
    sub_2545C9374((uint64_t)v23, &qword_269E12488);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
  }
  sub_2545C9374((uint64_t)v14, &qword_269E16060);
  char v31 = 0;
  return v31 & 1;
}

uint64_t _s23LighthouseDataProcessor17ToolKitProtoQueryV12AnyPredicateV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v37 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16030);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12490);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v37 - v20;
  MEMORY[0x270FA5388](v19);
  v23 = (char *)&v37 - v22;
  uint64_t v39 = a1;
  sub_2545C9310(a1, (uint64_t)&v37 - v22, &qword_269E12490);
  uint64_t v40 = a2;
  sub_2545C9310(a2, (uint64_t)v21, &qword_269E12490);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E12490);
  sub_2545C9310((uint64_t)v21, v24, &qword_269E12490);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) != 1)
  {
    sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E12490);
    if (v25(v24, 1, v8) != 1)
    {
      uint64_t v26 = v38;
      sub_254DCF1BC(v24, v38, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      char v27 = static ToolKitProtoQuery.ToolKitProtoAnyPredicateKind.== infix(_:_:)(v18, v26);
      sub_254DCF224(v26, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      sub_2545C9374((uint64_t)v21, &qword_269E12490);
      sub_2545C9374((uint64_t)v23, &qword_269E12490);
      sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      sub_2545C9374((uint64_t)v14, &qword_269E12490);
      if (v27) {
        goto LABEL_8;
      }
LABEL_9:
      char v34 = 0;
      return v34 & 1;
    }
    sub_2545C9374((uint64_t)v21, &qword_269E12490);
    sub_2545C9374((uint64_t)v23, &qword_269E12490);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
LABEL_6:
    sub_2545C9374((uint64_t)v14, &qword_269E16030);
    goto LABEL_9;
  }
  sub_2545C9374((uint64_t)v21, &qword_269E12490);
  sub_2545C9374((uint64_t)v23, &qword_269E12490);
  if (v25(v24, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_2545C9374((uint64_t)v14, &qword_269E12490);
LABEL_8:
  uint64_t v28 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  uint64_t v30 = v43;
  uint64_t v29 = v44;
  char v31 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  uint64_t v32 = v41;
  v31(v41, v39 + *(int *)(v28 + 20), v44);
  uint64_t v33 = v42;
  v31(v42, v40 + *(int *)(v28 + 20), v29);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v34 = sub_254E157D8();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v29);
  v35(v32, v29);
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0G0V4PairV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  v60 = &v57[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  v59 = &v57[-v7];
  uint64_t v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v64 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10640);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  v65 = &v57[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v57[-v14];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C360);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  v63 = (uint64_t *)&v57[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v68 = &v57[-v20];
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v69 = &v57[-v22];
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (uint64_t *)&v57[-v24];
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = &v57[-v27];
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = &v57[-v29];
  uint64_t v66 = a1;
  sub_2545C9310(a1, (uint64_t)&v57[-v29], &qword_269E0C360);
  uint64_t v67 = a2;
  sub_2545C9310(a2, (uint64_t)v28, &qword_269E0C360);
  uint64_t v31 = (uint64_t)&v15[*(int *)(v11 + 48)];
  sub_2545C9310((uint64_t)v30, (uint64_t)v15, &qword_269E0C360);
  sub_2545C9310((uint64_t)v28, v31, &qword_269E0C360);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v32((uint64_t)v15, 1, v8) != 1)
  {
    sub_2545C9310((uint64_t)v15, (uint64_t)v25, &qword_269E0C360);
    if (v32(v31, 1, v8) != 1)
    {
      uint64_t v34 = v31;
      uint64_t v35 = v64;
      sub_254DCF1BC(v34, (uint64_t)v64, type metadata accessor for ToolKitProtoTypedValue);
      int v58 = sub_254DBC0B0(v25, v35, (uint64_t (*)(uint64_t *, uint64_t *))static ToolKitProtoTypedValueKind.== infix(_:_:), (void (*)(uint64_t))sub_254720B10, (void (*)(uint64_t))sub_254720AF8, type metadata accessor for ToolKitProtoTypedValue);
      sub_254DCF224((uint64_t)v35, type metadata accessor for ToolKitProtoTypedValue);
      sub_2545C9374((uint64_t)v28, &qword_269E0C360);
      sub_2545C9374((uint64_t)v30, &qword_269E0C360);
      sub_254DCF224((uint64_t)v25, type metadata accessor for ToolKitProtoTypedValue);
      sub_2545C9374((uint64_t)v15, &qword_269E0C360);
      if ((v58 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_8;
    }
    sub_2545C9374((uint64_t)v28, &qword_269E0C360);
    sub_2545C9374((uint64_t)v30, &qword_269E0C360);
    sub_254DCF224((uint64_t)v25, type metadata accessor for ToolKitProtoTypedValue);
LABEL_6:
    uint64_t v33 = (uint64_t)v15;
LABEL_14:
    sub_2545C9374(v33, &qword_269E10640);
    goto LABEL_15;
  }
  sub_2545C9374((uint64_t)v28, &qword_269E0C360);
  sub_2545C9374((uint64_t)v30, &qword_269E0C360);
  if (v32(v31, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_2545C9374((uint64_t)v15, &qword_269E0C360);
LABEL_8:
  uint64_t v36 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
  uint64_t v37 = v66;
  uint64_t v38 = v69;
  sub_2545C9310(v66 + *(int *)(v36 + 20), (uint64_t)v69, &qword_269E0C360);
  uint64_t v39 = v68;
  sub_2545C9310(v67 + *(int *)(v36 + 20), (uint64_t)v68, &qword_269E0C360);
  uint64_t v40 = *(int *)(v11 + 48);
  uint64_t v41 = (uint64_t)v38;
  uint64_t v42 = v65;
  uint64_t v43 = (uint64_t)&v65[v40];
  sub_2545C9310(v41, (uint64_t)v65, &qword_269E0C360);
  sub_2545C9310((uint64_t)v39, v43, &qword_269E0C360);
  if (v32((uint64_t)v42, 1, v8) == 1)
  {
    sub_2545C9374((uint64_t)v39, &qword_269E0C360);
    sub_2545C9374(v41, &qword_269E0C360);
    if (v32(v43, 1, v8) == 1)
    {
      sub_2545C9374((uint64_t)v42, &qword_269E0C360);
LABEL_18:
      uint64_t v49 = v37 + *(int *)(v36 + 24);
      uint64_t v51 = v61;
      uint64_t v50 = v62;
      uint64_t v52 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v61 + 16);
      uint64_t v53 = v59;
      v52(v59, v49, v62);
      uint64_t v54 = v67 + *(int *)(v36 + 24);
      v55 = v60;
      v52(v60, v54, v50);
      sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v45 = sub_254E157D8();
      v56 = *(void (**)(unsigned char *, uint64_t))(v51 + 8);
      v56(v55, v50);
      v56(v53, v50);
      return v45 & 1;
    }
    goto LABEL_13;
  }
  uint64_t v44 = v63;
  sub_2545C9310((uint64_t)v42, (uint64_t)v63, &qword_269E0C360);
  if (v32(v43, 1, v8) == 1)
  {
    sub_2545C9374((uint64_t)v68, &qword_269E0C360);
    sub_2545C9374((uint64_t)v69, &qword_269E0C360);
    sub_254DCF224((uint64_t)v44, type metadata accessor for ToolKitProtoTypedValue);
LABEL_13:
    uint64_t v33 = (uint64_t)v42;
    goto LABEL_14;
  }
  v47 = v64;
  sub_254DCF1BC(v43, (uint64_t)v64, type metadata accessor for ToolKitProtoTypedValue);
  char v48 = sub_254DBC0B0(v44, v47, (uint64_t (*)(uint64_t *, uint64_t *))static ToolKitProtoTypedValueKind.== infix(_:_:), (void (*)(uint64_t))sub_254720B10, (void (*)(uint64_t))sub_254720AF8, type metadata accessor for ToolKitProtoTypedValue);
  sub_254DCF224((uint64_t)v47, type metadata accessor for ToolKitProtoTypedValue);
  sub_2545C9374((uint64_t)v68, &qword_269E0C360);
  sub_2545C9374((uint64_t)v69, &qword_269E0C360);
  sub_254DCF224((uint64_t)v44, type metadata accessor for ToolKitProtoTypedValue);
  sub_2545C9374((uint64_t)v42, &qword_269E0C360);
  if (v48) {
    goto LABEL_18;
  }
LABEL_15:
  char v45 = 0;
  return v45 & 1;
}

uint64_t _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0G0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v37 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16088);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12470);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v37 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v37 - v22;
  uint64_t v39 = a1;
  sub_2545C9310(a1, (uint64_t)&v37 - v22, &qword_269E12470);
  uint64_t v40 = a2;
  sub_2545C9310(a2, (uint64_t)v21, &qword_269E12470);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E12470);
  sub_2545C9310((uint64_t)v21, v24, &qword_269E12470);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) != 1)
  {
    sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E12470);
    if (v25(v24, 1, v8) != 1)
    {
      uint64_t v26 = v38;
      sub_254DCF1BC(v24, v38, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      char v27 = _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0defG4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v18, v26);
      sub_254DCF224(v26, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      sub_2545C9374((uint64_t)v21, &qword_269E12470);
      sub_2545C9374((uint64_t)v23, &qword_269E12470);
      sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      sub_2545C9374((uint64_t)v14, &qword_269E12470);
      if (v27) {
        goto LABEL_8;
      }
LABEL_9:
      char v34 = 0;
      return v34 & 1;
    }
    sub_2545C9374((uint64_t)v21, &qword_269E12470);
    sub_2545C9374((uint64_t)v23, &qword_269E12470);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
LABEL_6:
    sub_2545C9374((uint64_t)v14, &qword_269E16088);
    goto LABEL_9;
  }
  sub_2545C9374((uint64_t)v21, &qword_269E12470);
  sub_2545C9374((uint64_t)v23, &qword_269E12470);
  if (v25(v24, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_2545C9374((uint64_t)v14, &qword_269E12470);
LABEL_8:
  uint64_t v28 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  uint64_t v30 = v43;
  uint64_t v29 = v44;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  uint64_t v32 = v41;
  v31(v41, v39 + *(int *)(v28 + 20), v44);
  uint64_t v33 = v42;
  v31(v42, v40 + *(int *)(v28 + 20), v29);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v34 = sub_254E157D8();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v29);
  v35(v32, v29);
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  v104 = a2;
  uint64_t v3 = sub_254E14FC8();
  uint64_t v86 = *(void *)(v3 - 8);
  uint64_t v87 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  v85 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v84 = (char *)&v82 - v6;
  uint64_t v7 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v93 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v83 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16068);
  MEMORY[0x270FA5388](v90);
  uint64_t v94 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12450);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v88 = (uint64_t)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v95 = (uint64_t)&v82 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v91 = (uint64_t)&v82 - v15;
  uint64_t v16 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  uint64_t v98 = *(void *)(v16 - 8);
  uint64_t v99 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v89 = (uint64_t)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16250);
  MEMORY[0x270FA5388](v97);
  uint64_t v100 = (uint64_t)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12468);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v96 = (uint64_t)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v102 = (uint64_t)&v82 - v23;
  MEMORY[0x270FA5388](v22);
  v103 = (int *)((char *)&v82 - v24);
  uint64_t v25 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (uint64_t *)((char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16078);
  uint64_t v30 = v29 - 8;
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v82 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12460);
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  uint64_t v36 = (uint64_t *)((char *)&v82 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  uint64_t v39 = (char *)&v82 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v82 - v40;
  uint64_t v42 = type metadata accessor for ToolKitProtoComparisonPredicate(0);
  uint64_t v43 = *(int *)(v42 + 20);
  v101 = a1;
  uint64_t v44 = (uint64_t)a1 + v43;
  char v45 = (int *)v42;
  sub_2545C9310(v44, (uint64_t)v41, &qword_269E12460);
  sub_2545C9310((uint64_t)v104 + v45[5], (uint64_t)v39, &qword_269E12460);
  uint64_t v46 = (uint64_t)&v32[*(int *)(v30 + 56)];
  sub_2545C9310((uint64_t)v41, (uint64_t)v32, &qword_269E12460);
  sub_2545C9310((uint64_t)v39, v46, &qword_269E12460);
  v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (v47((uint64_t)v32, 1, v25) == 1)
  {
    sub_2545C9374((uint64_t)v39, &qword_269E12460);
    sub_2545C9374((uint64_t)v41, &qword_269E12460);
    if (v47(v46, 1, v25) == 1)
    {
      sub_2545C9374((uint64_t)v32, &qword_269E12460);
      goto LABEL_8;
    }
LABEL_6:
    char v48 = &qword_269E16078;
    uint64_t v49 = (uint64_t)v32;
LABEL_24:
    sub_2545C9374(v49, v48);
    goto LABEL_25;
  }
  sub_2545C9310((uint64_t)v32, (uint64_t)v36, &qword_269E12460);
  if (v47(v46, 1, v25) == 1)
  {
    sub_2545C9374((uint64_t)v39, &qword_269E12460);
    sub_2545C9374((uint64_t)v41, &qword_269E12460);
    sub_254DCF224((uint64_t)v36, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
    goto LABEL_6;
  }
  sub_254DCF1BC(v46, (uint64_t)v28, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  char v50 = _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V6EntityV8PropertyV2eeoiySbAI_AItFZ_0(v36, v28);
  sub_254DCF224((uint64_t)v28, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  sub_2545C9374((uint64_t)v39, &qword_269E12460);
  sub_2545C9374((uint64_t)v41, &qword_269E12460);
  sub_254DCF224((uint64_t)v36, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  sub_2545C9374((uint64_t)v32, &qword_269E12460);
  if ((v50 & 1) == 0) {
    goto LABEL_25;
  }
LABEL_8:
  uint64_t v51 = v101;
  uint64_t v52 = (uint64_t)v103;
  sub_2545C9310((uint64_t)v101 + v45[6], (uint64_t)v103, &qword_269E12468);
  uint64_t v53 = v102;
  sub_2545C9310((uint64_t)v104 + v45[6], v102, &qword_269E12468);
  uint64_t v54 = v100;
  uint64_t v55 = v100 + *(int *)(v97 + 48);
  sub_2545C9310(v52, v100, &qword_269E12468);
  sub_2545C9310(v53, v55, &qword_269E12468);
  uint64_t v56 = v99;
  v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48);
  if (v57(v54, 1, v99) == 1)
  {
    sub_2545C9374(v53, &qword_269E12468);
    sub_2545C9374(v52, &qword_269E12468);
    if (v57(v55, 1, v56) == 1)
    {
      sub_2545C9374(v54, &qword_269E12468);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  uint64_t v58 = v96;
  sub_2545C9310(v54, v96, &qword_269E12468);
  if (v57(v55, 1, v56) == 1)
  {
    sub_2545C9374(v102, &qword_269E12468);
    sub_2545C9374((uint64_t)v103, &qword_269E12468);
    sub_254DCF224(v58, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
LABEL_13:
    char v48 = &qword_269E16250;
    uint64_t v49 = v54;
    goto LABEL_24;
  }
  uint64_t v59 = v89;
  sub_254DCF1BC(v55, v89, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
  char v60 = _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0G0V2eeoiySbAE_AEtFZ_0(v58, v59);
  sub_254DCF224(v59, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
  sub_2545C9374(v102, &qword_269E12468);
  sub_2545C9374((uint64_t)v103, &qword_269E12468);
  sub_254DCF224(v58, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
  sub_2545C9374(v54, &qword_269E12468);
  if ((v60 & 1) == 0)
  {
LABEL_25:
    char v62 = 0;
    return v62 & 1;
  }
LABEL_15:
  uint64_t v61 = v104;
  if (*v51 == *v104 && v51[1] == v104[1] || (char v62 = 0, (sub_254E15E08() & 1) != 0))
  {
    uint64_t v63 = v91;
    sub_2545C9310((uint64_t)v51 + v45[7], v91, &qword_269E12450);
    v103 = v45;
    uint64_t v64 = v95;
    sub_2545C9310((uint64_t)v61 + v45[7], v95, &qword_269E12450);
    uint64_t v65 = v94;
    uint64_t v66 = v94 + *(int *)(v90 + 48);
    sub_2545C9310(v63, v94, &qword_269E12450);
    sub_2545C9310(v64, v66, &qword_269E12450);
    uint64_t v67 = v93;
    v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
    if (v68(v65, 1, v93) == 1)
    {
      sub_2545C9374(v64, &qword_269E12450);
      sub_2545C9374(v63, &qword_269E12450);
      if (v68(v66, 1, v67) == 1)
      {
        sub_2545C9374(v65, &qword_269E12450);
LABEL_28:
        uint64_t v73 = (uint64_t)v103;
        v74 = (char *)v51 + v103[8];
        uint64_t v76 = v86;
        uint64_t v75 = v87;
        v77 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
        v78 = v84;
        v77(v84, v74, v87);
        v79 = (char *)v61 + *(int *)(v73 + 32);
        v80 = v85;
        v77(v85, v79, v75);
        sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        char v62 = sub_254E157D8();
        v81 = *(void (**)(char *, uint64_t))(v76 + 8);
        v81(v80, v75);
        v81(v78, v75);
        return v62 & 1;
      }
    }
    else
    {
      uint64_t v69 = v88;
      sub_2545C9310(v65, v88, &qword_269E12450);
      if (v68(v66, 1, v67) != 1)
      {
        uint64_t v71 = v83;
        sub_254DCF1BC(v66, v83, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
        char v72 = _s23LighthouseDataProcessor38ToolKitProtoContentItemClassDescriptorV2eeoiySbAC_ACtFZ_0(v69, v71);
        sub_254DCF224(v71, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
        sub_2545C9374(v95, &qword_269E12450);
        sub_2545C9374(v63, &qword_269E12450);
        sub_254DCF224(v69, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
        sub_2545C9374(v65, &qword_269E12450);
        if (v72) {
          goto LABEL_28;
        }
        goto LABEL_25;
      }
      sub_2545C9374(v95, &qword_269E12450);
      sub_2545C9374(v63, &qword_269E12450);
      sub_254DCF224(v69, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
    }
    char v48 = &qword_269E16068;
    uint64_t v49 = v65;
    goto LABEL_24;
  }
  return v62 & 1;
}

uint64_t sub_254DBB8E8(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_254E14FC8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v19 - v11;
  if (sub_254DE76B8(*a1, a1[1], *a2, a2[1]))
  {
    BOOL v13 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v13 || (char v14 = 0, (sub_254E15E08() & 1) != 0))
    {
      uint64_t v15 = a3(0);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v16(v12, (char *)a1 + *(int *)(v15 + 24), v6);
      v16(v10, (char *)a2 + *(int *)(v15 + 24), v6);
      sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v14 = sub_254E157D8();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
      v17(v10, v6);
      v17(v12, v6);
    }
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor021ToolKitProtoAssistantD16SchemaDefinitionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v52 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v50 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v55 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15FF0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E122E0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v50 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v50 - v22;
  uint64_t v24 = type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition(0);
  uint64_t v25 = *(int *)(v24 + 28);
  uint64_t v56 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = (int *)v24;
  sub_2545C9310(v26, (uint64_t)v23, &qword_269E122E0);
  uint64_t v28 = v27[7];
  v57 = a2;
  sub_2545C9310((uint64_t)a2 + v28, (uint64_t)v21, &qword_269E122E0);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E122E0);
  sub_2545C9310((uint64_t)v21, v29, &qword_269E122E0);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_2545C9374((uint64_t)v21, &qword_269E122E0);
    sub_2545C9374((uint64_t)v23, &qword_269E122E0);
    if (v30(v29, 1, v8) == 1)
    {
      sub_2545C9374((uint64_t)v14, &qword_269E122E0);
      goto LABEL_10;
    }
LABEL_6:
    sub_2545C9374((uint64_t)v14, &qword_269E15FF0);
    goto LABEL_7;
  }
  sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E122E0);
  if (v30(v29, 1, v8) == 1)
  {
    sub_2545C9374((uint64_t)v21, &qword_269E122E0);
    sub_2545C9374((uint64_t)v23, &qword_269E122E0);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
    goto LABEL_6;
  }
  uint64_t v33 = v55;
  sub_254DCF1BC(v29, (uint64_t)v55, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  char v34 = _s23LighthouseDataProcessor37ToolKitProtoAssistantSchemaIdentifierV2eeoiySbAC_ACtFZ_0(v18, v33);
  sub_254DCF224((uint64_t)v33, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2545C9374((uint64_t)v21, &qword_269E122E0);
  sub_2545C9374((uint64_t)v23, &qword_269E122E0);
  sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2545C9374((uint64_t)v14, &qword_269E122E0);
  if ((v34 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_10:
  uint64_t v35 = v56;
  uint64_t v36 = v57;
  if (*v56 != *v57 || v56[1] != v57[1])
  {
    char v31 = 0;
    if ((sub_254E15E08() & 1) == 0) {
      return v31 & 1;
    }
  }
  uint64_t v37 = v27[8];
  uint64_t v38 = (void *)((char *)v35 + v37);
  uint64_t v39 = *(void *)((char *)v35 + v37 + 8);
  uint64_t v40 = (void *)((char *)v36 + v37);
  uint64_t v41 = v40[1];
  if (!v39)
  {
    if (!v41) {
      goto LABEL_20;
    }
LABEL_7:
    char v31 = 0;
    return v31 & 1;
  }
  if (!v41) {
    goto LABEL_7;
  }
  if (*v38 == *v40 && v39 == v41 || (char v31 = 0, (sub_254E15E08() & 1) != 0))
  {
LABEL_20:
    if (sub_254DE502C(v35[2], v36[2]) & 1) != 0 && (sub_254DE1E18(v35[3], v36[3]))
    {
      uint64_t v42 = (char *)v35 + v27[9];
      uint64_t v44 = v53;
      uint64_t v43 = v54;
      char v45 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
      uint64_t v46 = v51;
      v45(v51, v42, v54);
      v47 = (char *)v36 + v27[9];
      char v48 = v52;
      v45(v52, v47, v43);
      sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v31 = sub_254E157D8();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v44 + 8);
      v49(v48, v43);
      v49(v46, v43);
      return v31 & 1;
    }
    goto LABEL_7;
  }
  return v31 & 1;
}

uint64_t sub_254DBC05C(uint64_t *a1, char *a2)
{
  return sub_254DBC0B0(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static ToolKitProtoTypedValueKind.== infix(_:_:), (void (*)(uint64_t))sub_254720B10, (void (*)(uint64_t))sub_254720AF8, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t sub_254DBC0B0(uint64_t *a1, char *a2, uint64_t (*a3)(uint64_t *, uint64_t *), void (*a4)(uint64_t), void (*a5)(uint64_t), uint64_t (*a6)(void))
{
  uint64_t v26 = a3;
  uint64_t v27 = a6;
  uint64_t v10 = sub_254E14FC8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = *a1;
  uint64_t v18 = *(void *)a2;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v18 & 0xF000000000000007) == 0) {
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v29 = *a1;
  if ((~v18 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_6:
    a5(v18);
    a4(v17);
    a4(v18);
LABEL_9:
    char v23 = 0;
    return v23 & 1;
  }
  uint64_t v28 = v18;
  swift_retain_n();
  char v19 = v26(&v29, &v28);
  swift_release();
  a4(v17);
  if ((v19 & 1) == 0) {
    goto LABEL_9;
  }
LABEL_8:
  uint64_t v20 = v27(0);
  uint64_t v21 = (char *)a1 + *(int *)(v20 + 20);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v22(v16, v21, v10);
  v22(v14, &a2[*(int *)(v20 + 20)], v10);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v23 = sub_254E157D8();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v14, v10);
  v24(v16, v10);
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor018ToolKitProtoSystemD8ProtocolV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v37 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15F80);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E124B8);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v37 - v20;
  MEMORY[0x270FA5388](v19);
  char v23 = (char *)&v37 - v22;
  uint64_t v39 = a1;
  sub_2545C9310(a1, (uint64_t)&v37 - v22, &qword_269E124B8);
  uint64_t v40 = a2;
  sub_2545C9310(a2, (uint64_t)v21, &qword_269E124B8);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E124B8);
  sub_2545C9310((uint64_t)v21, v24, &qword_269E124B8);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) != 1)
  {
    sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E124B8);
    if (v25(v24, 1, v8) != 1)
    {
      uint64_t v26 = v38;
      sub_254DCF1BC(v24, v38, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      char v27 = static ToolKitProtoSystemToolProtocolKind.== infix(_:_:)((uint64_t)v18, v26);
      sub_254DCF224(v26, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      sub_2545C9374((uint64_t)v21, &qword_269E124B8);
      sub_2545C9374((uint64_t)v23, &qword_269E124B8);
      sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      sub_2545C9374((uint64_t)v14, &qword_269E124B8);
      if (v27) {
        goto LABEL_8;
      }
LABEL_9:
      char v34 = 0;
      return v34 & 1;
    }
    sub_2545C9374((uint64_t)v21, &qword_269E124B8);
    sub_2545C9374((uint64_t)v23, &qword_269E124B8);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
LABEL_6:
    sub_2545C9374((uint64_t)v14, &qword_269E15F80);
    goto LABEL_9;
  }
  sub_2545C9374((uint64_t)v21, &qword_269E124B8);
  sub_2545C9374((uint64_t)v23, &qword_269E124B8);
  if (v25(v24, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_2545C9374((uint64_t)v14, &qword_269E124B8);
LABEL_8:
  uint64_t v28 = type metadata accessor for ToolKitProtoSystemToolProtocol(0);
  uint64_t v30 = v43;
  uint64_t v29 = v44;
  char v31 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  uint64_t v32 = v41;
  v31(v41, v39 + *(int *)(v28 + 20), v44);
  uint64_t v33 = v42;
  v31(v42, v40 + *(int *)(v28 + 20), v29);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v34 = sub_254E157D8();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v29);
  v35(v32, v29);
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor018ToolKitProtoSystemD8ProtocolV20ConditionallyEnabledV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (*a1 == *a2)
  {
    uint64_t v12 = type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0);
    uint64_t v13 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v13(v10, &a1[*(int *)(v12 + 20)], v4);
    v13(v8, &a2[*(int *)(v12 + 20)], v4);
    sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v11 = sub_254E157D8();
    char v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s23LighthouseDataProcessor018ToolKitProtoSystemD8ProtocolV16IntentSideEffectV2eeoiySbAE_AEtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - v9;
  if (a1[5])
  {
    if (a2[5])
    {
LABEL_3:
      uint64_t v11 = type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0);
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v12(v10, &a1[*(int *)(v11 + 20)], v4);
      v12(v8, &a2[*(int *)(v11 + 20)], v4);
      sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v13 = sub_254E157D8();
      char v14 = *(void (**)(char *, uint64_t))(v5 + 8);
      v14(v8, v4);
      v14(v10, v4);
      return v13 & 1;
    }
LABEL_5:
    char v13 = 0;
    return v13 & 1;
  }
  if (a2[5]) {
    goto LABEL_5;
  }
  unint64_t v16 = *(unsigned int *)a2 | ((unint64_t)a2[4] << 32);
  char v13 = 0;
  if (((*(unsigned int *)a1 | ((unint64_t)a1[4] << 32)) & 0x100000000) != 0)
  {
    if (*(_DWORD *)a1)
    {
      if ((v16 & 0x100000000) != 0 && *(_DWORD *)a2) {
        goto LABEL_3;
      }
    }
    else if ((v16 & 0x100000000) != 0 && !*(_DWORD *)a2)
    {
      goto LABEL_3;
    }
  }
  else if ((v16 & 0x100000000) == 0 && *(_DWORD *)a1 == *(_DWORD *)a2)
  {
    goto LABEL_3;
  }
  return v13 & 1;
}

uint64_t _s23LighthouseDataProcessor34ToolKitProtoAssistantSchemaVersionV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  if (*(void *)a1 == *(void *)a2
    && *((void *)a1 + 1) == *((void *)a2 + 1)
    && *((void *)a1 + 2) == *((void *)a2 + 2))
  {
    uint64_t v11 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v12(v10, &a1[*(int *)(v11 + 28)], v4);
    v12(v8, &a2[*(int *)(v11 + 28)], v4);
    sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v13 = sub_254E157D8();
    char v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s23LighthouseDataProcessor37ToolKitProtoAssistantSchemaIdentifierV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v38 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16318);
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C980);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v38 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v38 - v21;
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *((void *)a1 + 1);
  uint64_t v44 = a1;
  char v45 = a2;
  if (v23 == *(void *)a2 && v24 == *((void *)a2 + 1) || (char v25 = 0, (sub_254E15E08() & 1) != 0))
  {
    uint64_t v39 = v4;
    uint64_t v26 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
    sub_2545C9310((uint64_t)&v44[*(int *)(v26 + 20)], (uint64_t)v22, &qword_269E0C980);
    sub_2545C9310((uint64_t)&v45[*(int *)(v26 + 20)], (uint64_t)v20, &qword_269E0C980);
    uint64_t v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2545C9310((uint64_t)v22, (uint64_t)v13, &qword_269E0C980);
    sub_2545C9310((uint64_t)v20, v27, &qword_269E0C980);
    uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v28((uint64_t)v13, 1, v8) == 1)
    {
      sub_2545C9374((uint64_t)v20, &qword_269E0C980);
      sub_2545C9374((uint64_t)v22, &qword_269E0C980);
      if (v28(v27, 1, v8) == 1)
      {
        sub_2545C9374((uint64_t)v13, &qword_269E0C980);
LABEL_11:
        uint64_t v31 = v43;
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
        uint64_t v33 = v41;
        uint64_t v34 = v39;
        v32(v41, &v44[*(int *)(v26 + 24)], v39);
        uint64_t v35 = v42;
        v32(v42, &v45[*(int *)(v26 + 24)], v34);
        sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        char v25 = sub_254E157D8();
        uint64_t v36 = *(void (**)(char *, uint64_t))(v31 + 8);
        v36(v35, v34);
        v36(v33, v34);
        return v25 & 1;
      }
    }
    else
    {
      sub_2545C9310((uint64_t)v13, (uint64_t)v17, &qword_269E0C980);
      if (v28(v27, 1, v8) != 1)
      {
        uint64_t v29 = v40;
        sub_254DCF1BC(v27, (uint64_t)v40, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
        char v30 = _s23LighthouseDataProcessor34ToolKitProtoAssistantSchemaVersionV2eeoiySbAC_ACtFZ_0(v17, v29);
        sub_254DCF224((uint64_t)v29, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
        sub_2545C9374((uint64_t)v20, &qword_269E0C980);
        sub_2545C9374((uint64_t)v22, &qword_269E0C980);
        sub_254DCF224((uint64_t)v17, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
        sub_2545C9374((uint64_t)v13, &qword_269E0C980);
        if (v30) {
          goto LABEL_11;
        }
LABEL_12:
        char v25 = 0;
        return v25 & 1;
      }
      sub_2545C9374((uint64_t)v20, &qword_269E0C980);
      sub_2545C9374((uint64_t)v22, &qword_269E0C980);
      sub_254DCF224((uint64_t)v17, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
    }
    sub_2545C9374((uint64_t)v13, &qword_269E16318);
    goto LABEL_12;
  }
  return v25 & 1;
}

uint64_t _s23LighthouseDataProcessor018ToolKitProtoSystemD8ProtocolV15AssistantSchemaV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v37 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15FF0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E122E0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v37 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v37 - v22;
  uint64_t v39 = a1;
  sub_2545C9310(a1, (uint64_t)&v37 - v22, &qword_269E122E0);
  uint64_t v40 = a2;
  sub_2545C9310(a2, (uint64_t)v21, &qword_269E122E0);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E122E0);
  sub_2545C9310((uint64_t)v21, v24, &qword_269E122E0);
  char v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) != 1)
  {
    sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E122E0);
    if (v25(v24, 1, v8) != 1)
    {
      uint64_t v26 = v38;
      sub_254DCF1BC(v24, (uint64_t)v38, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      char v27 = _s23LighthouseDataProcessor37ToolKitProtoAssistantSchemaIdentifierV2eeoiySbAC_ACtFZ_0(v18, v26);
      sub_254DCF224((uint64_t)v26, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      sub_2545C9374((uint64_t)v21, &qword_269E122E0);
      sub_2545C9374((uint64_t)v23, &qword_269E122E0);
      sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      sub_2545C9374((uint64_t)v14, &qword_269E122E0);
      if (v27) {
        goto LABEL_8;
      }
LABEL_9:
      char v34 = 0;
      return v34 & 1;
    }
    sub_2545C9374((uint64_t)v21, &qword_269E122E0);
    sub_2545C9374((uint64_t)v23, &qword_269E122E0);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
LABEL_6:
    sub_2545C9374((uint64_t)v14, &qword_269E15FF0);
    goto LABEL_9;
  }
  sub_2545C9374((uint64_t)v21, &qword_269E122E0);
  sub_2545C9374((uint64_t)v23, &qword_269E122E0);
  if (v25(v24, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_2545C9374((uint64_t)v14, &qword_269E122E0);
LABEL_8:
  uint64_t v28 = type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0);
  uint64_t v30 = v43;
  uint64_t v29 = v44;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  uint64_t v32 = v41;
  v31(v41, v39 + *(int *)(v28 + 20), v44);
  uint64_t v33 = v42;
  v31(v42, v40 + *(int *)(v28 + 20), v29);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v34 = sub_254E157D8();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v29);
  v35(v32, v29);
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD19InvocationSignatureV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_254DDD5B4(*(void **)a1, *(void **)a2) & 1) != 0
    && (sub_254DDD5B4(*(void **)(a1 + 8), *(void **)(a2 + 8)) & 1) != 0
    && (sub_254DA4838(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) != 0)
  {
    uint64_t v11 = type metadata accessor for ToolKitProtoToolInvocationSignature(0);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v10, a1 + *(int *)(v11 + 28), v4);
    v12(v8, a2 + *(int *)(v11 + 28), v4);
    sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v13 = sub_254E157D8();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V6EntityV8PropertyV2eeoiySbAI_AItFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v43 = (char *)&v39 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v42 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10648);
  MEMORY[0x270FA5388](v11);
  char v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3F8);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v46 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v39 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v39 - v20;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v22 = 0, (sub_254E15E08() & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (char v22 = 0, (sub_254E15E08() & 1) != 0))
    {
      uint64_t v41 = v4;
      uint64_t v23 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
      sub_2545C9310((uint64_t)a1 + *(int *)(v23 + 24), (uint64_t)v21, &qword_269E0C3F8);
      uint64_t v40 = v23;
      sub_2545C9310((uint64_t)a2 + *(int *)(v23 + 24), (uint64_t)v19, &qword_269E0C3F8);
      uint64_t v24 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_2545C9310((uint64_t)v21, (uint64_t)v13, &qword_269E0C3F8);
      sub_2545C9310((uint64_t)v19, v24, &qword_269E0C3F8);
      char v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v25((uint64_t)v13, 1, v8) == 1)
      {
        sub_2545C9374((uint64_t)v19, &qword_269E0C3F8);
        sub_2545C9374((uint64_t)v21, &qword_269E0C3F8);
        if (v25(v24, 1, v8) == 1)
        {
          sub_2545C9374((uint64_t)v13, &qword_269E0C3F8);
LABEL_14:
          uint64_t v29 = v40;
          uint64_t v30 = (char *)a1 + *(int *)(v40 + 28);
          uint64_t v31 = v45;
          uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
          uint64_t v33 = v43;
          uint64_t v34 = v41;
          v32(v43, v30, v41);
          uint64_t v35 = (char *)a2 + *(int *)(v29 + 28);
          uint64_t v36 = v44;
          v32(v44, v35, v34);
          sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
          char v22 = sub_254E157D8();
          uint64_t v37 = *(void (**)(char *, uint64_t))(v31 + 8);
          v37(v36, v34);
          v37(v33, v34);
          return v22 & 1;
        }
      }
      else
      {
        uint64_t v26 = v46;
        sub_2545C9310((uint64_t)v13, v46, &qword_269E0C3F8);
        if (v25(v24, 1, v8) != 1)
        {
          uint64_t v27 = v42;
          sub_254DCF1BC(v24, v42, type metadata accessor for ToolKitProtoTypeInstance);
          char v28 = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v26, v27);
          sub_254DCF224(v27, type metadata accessor for ToolKitProtoTypeInstance);
          sub_2545C9374((uint64_t)v19, &qword_269E0C3F8);
          sub_2545C9374((uint64_t)v21, &qword_269E0C3F8);
          sub_254DCF224(v26, type metadata accessor for ToolKitProtoTypeInstance);
          sub_2545C9374((uint64_t)v13, &qword_269E0C3F8);
          if (v28) {
            goto LABEL_14;
          }
LABEL_15:
          char v22 = 0;
          return v22 & 1;
        }
        sub_2545C9374((uint64_t)v19, &qword_269E0C3F8);
        sub_2545C9374((uint64_t)v21, &qword_269E0C3F8);
        sub_254DCF224(v26, type metadata accessor for ToolKitProtoTypeInstance);
      }
      sub_2545C9374((uint64_t)v13, &qword_269E10648);
      goto LABEL_15;
    }
  }
  return v22 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V6EntityV2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v75 = a1;
  uint64_t v76 = a2;
  uint64_t v2 = sub_254E14FC8();
  uint64_t v64 = *(void *)(v2 - 8);
  uint64_t v65 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v63 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  char v62 = (char *)&v61 - v5;
  uint64_t v6 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v71 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v66 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10E90);
  MEMORY[0x270FA5388](v68);
  uint64_t v72 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C9E8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v67 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v74 = (uint64_t)&v61 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v69 = (uint64_t)&v61 - v14;
  uint64_t v15 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E122B8);
  uint64_t v20 = v19 - 8;
  MEMORY[0x270FA5388](v19);
  char v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C648);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)&v61 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v61 - v30;
  uint64_t v32 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity(0);
  sub_2545C9310((uint64_t)v75 + *(int *)(v32 + 40), (uint64_t)v31, &qword_269E0C648);
  uint64_t v73 = v32;
  sub_2545C9310((uint64_t)v76 + *(int *)(v32 + 40), (uint64_t)v29, &qword_269E0C648);
  uint64_t v33 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_2545C9310((uint64_t)v31, (uint64_t)v22, &qword_269E0C648);
  sub_2545C9310((uint64_t)v29, v33, &qword_269E0C648);
  uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v34((uint64_t)v22, 1, v15) == 1)
  {
    sub_2545C9374((uint64_t)v29, &qword_269E0C648);
    sub_2545C9374((uint64_t)v31, &qword_269E0C648);
    if (v34(v33, 1, v15) == 1)
    {
      sub_2545C9374((uint64_t)v22, &qword_269E0C648);
      goto LABEL_9;
    }
LABEL_6:
    uint64_t v35 = &qword_269E122B8;
    uint64_t v36 = (uint64_t)v22;
LABEL_7:
    sub_2545C9374(v36, v35);
    goto LABEL_23;
  }
  sub_2545C9310((uint64_t)v22, (uint64_t)v26, &qword_269E0C648);
  if (v34(v33, 1, v15) == 1)
  {
    sub_2545C9374((uint64_t)v29, &qword_269E0C648);
    sub_2545C9374((uint64_t)v31, &qword_269E0C648);
    sub_254DCF224((uint64_t)v26, type metadata accessor for ToolKitProtoTypeIdentifier);
    goto LABEL_6;
  }
  sub_254DCF1BC(v33, (uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
  char v37 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v26, (uint64_t)v18);
  sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2545C9374((uint64_t)v29, &qword_269E0C648);
  sub_2545C9374((uint64_t)v31, &qword_269E0C648);
  sub_254DCF224((uint64_t)v26, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2545C9374((uint64_t)v22, &qword_269E0C648);
  if ((v37 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_9:
  uint64_t v39 = v75;
  uint64_t v38 = v76;
  if ((sub_254DDD6D0(*v75, *v76) & 1) == 0 || (sub_254DE2210(v39[1], v38[1]) & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v40 = v73;
  uint64_t v41 = v69;
  sub_2545C9310((uint64_t)v39 + *(int *)(v73 + 44), v69, &qword_269E0C9E8);
  uint64_t v42 = v74;
  sub_2545C9310((uint64_t)v38 + *(int *)(v40 + 44), v74, &qword_269E0C9E8);
  uint64_t v43 = v72;
  uint64_t v44 = v72 + *(int *)(v68 + 48);
  sub_2545C9310(v41, v72, &qword_269E0C9E8);
  sub_2545C9310(v42, v44, &qword_269E0C9E8);
  uint64_t v45 = v71;
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v46(v43, 1, v71) != 1)
  {
    uint64_t v47 = v67;
    sub_2545C9310(v43, v67, &qword_269E0C9E8);
    if (v46(v44, 1, v45) != 1)
    {
      uint64_t v48 = v66;
      sub_254DCF1BC(v44, v66, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      char v49 = _s23LighthouseDataProcessor37ToolKitProtoTypeDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v47, v48);
      sub_254DCF224(v48, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      sub_2545C9374(v74, &qword_269E0C9E8);
      sub_2545C9374(v41, &qword_269E0C9E8);
      sub_254DCF224(v47, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      sub_2545C9374(v43, &qword_269E0C9E8);
      if (v49) {
        goto LABEL_18;
      }
LABEL_23:
      char v58 = 0;
      return v58 & 1;
    }
    sub_2545C9374(v74, &qword_269E0C9E8);
    sub_2545C9374(v41, &qword_269E0C9E8);
    sub_254DCF224(v47, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
    goto LABEL_16;
  }
  sub_2545C9374(v42, &qword_269E0C9E8);
  sub_2545C9374(v41, &qword_269E0C9E8);
  if (v46(v44, 1, v45) != 1)
  {
LABEL_16:
    uint64_t v35 = &qword_269E10E90;
    uint64_t v36 = v43;
    goto LABEL_7;
  }
  sub_2545C9374(v43, &qword_269E0C9E8);
LABEL_18:
  if ((sub_254DE1E18(v39[2], v38[2]) & 1) == 0
    || (sub_254DE26F0(v39[3], v38[3]) & 1) == 0
    || (sub_254DE2BD0(v39[4], v38[4]) & 1) == 0
    || (sub_254DE2BD4(v39[5], v38[5]) & 1) == 0)
  {
    goto LABEL_23;
  }
  uint64_t v50 = v73;
  uint64_t v51 = (char *)v39 + *(int *)(v73 + 48);
  uint64_t v53 = v64;
  uint64_t v52 = v65;
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  uint64_t v55 = v62;
  v54(v62, v51, v65);
  uint64_t v56 = (char *)v38 + *(int *)(v50 + 48);
  v57 = v63;
  v54(v63, v56, v52);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v58 = sub_254E157D8();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v57, v52);
  v59(v55, v52);
  return v58 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD17DefinitionClosureV8Version1V2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v45 = (char *)&v44 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v49 = (uint64_t *)((char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10658);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C438);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v44 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v50 = a1;
  uint64_t v26 = (uint64_t)a1 + v25;
  uint64_t v27 = v24;
  sub_2545C9310(v26, (uint64_t)v23, &qword_269E0C438);
  uint64_t v28 = *(int *)(v27 + 20);
  uint64_t v51 = a2;
  sub_2545C9310((uint64_t)a2 + v28, (uint64_t)v21, &qword_269E0C438);
  uint64_t v29 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E0C438);
  sub_2545C9310((uint64_t)v21, v29, &qword_269E0C438);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v30((uint64_t)v14, 1, v8) == 1)
  {
    sub_2545C9374((uint64_t)v21, &qword_269E0C438);
    sub_2545C9374((uint64_t)v23, &qword_269E0C438);
    if (v30(v29, 1, v8) == 1)
    {
      sub_2545C9374((uint64_t)v14, &qword_269E0C438);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E0C438);
  if (v30(v29, 1, v8) == 1)
  {
    sub_2545C9374((uint64_t)v21, &qword_269E0C438);
    sub_2545C9374((uint64_t)v23, &qword_269E0C438);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoToolDefinition.Version1);
LABEL_6:
    sub_2545C9374((uint64_t)v14, &qword_269E10658);
LABEL_10:
    char v41 = 0;
    return v41 & 1;
  }
  uint64_t v31 = v49;
  sub_254DCF1BC(v29, (uint64_t)v49, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  char v32 = _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V2eeoiySbAE_AEtFZ_0((uint64_t)v18, v31);
  sub_254DCF224((uint64_t)v31, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  sub_2545C9374((uint64_t)v21, &qword_269E0C438);
  sub_2545C9374((uint64_t)v23, &qword_269E0C438);
  sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  sub_2545C9374((uint64_t)v14, &qword_269E0C438);
  if ((v32 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v33 = v50;
  uint64_t v34 = v51;
  if ((sub_254DE55B4(*v50, *v51) & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v36 = v47;
  uint64_t v35 = v48;
  char v37 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v38 = v45;
  v37(v45, (char *)v33 + *(int *)(v27 + 24), v48);
  uint64_t v39 = (char *)v34 + *(int *)(v27 + 24);
  uint64_t v40 = v46;
  v37(v46, v39, v35);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v41 = sub_254E157D8();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v40, v35);
  v42(v38, v35);
  return v41 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD13SummaryStringV9ComponentV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v11 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  int v12 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v14 = *(void *)a2;
  uint64_t v13 = *(void *)(a2 + 8);
  int v15 = *(unsigned __int8 *)(a2 + 16);
  if (v12 == 255)
  {
    if (v15 == 255)
    {
LABEL_16:
      uint64_t v17 = v7;
      uint64_t v18 = v6;
      uint64_t v19 = type metadata accessor for ToolKitProtoToolSummaryString.Component(0);
      uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
      v20(v9, a1 + *(int *)(v19 + 20), v4);
      v20(v17, a2 + *(int *)(v19 + 20), v4);
      sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v16 = sub_254E157D8();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v18 + 8);
      v21(v17, v4);
      v21(v9, v4);
      return v16 & 1;
    }
LABEL_9:
    sub_254BB98DC(*(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
    sub_254BB98DC(v11, v10, v12);
    sub_254BB98FC(v11, v10, v12);
    sub_254BB98FC(v14, v13, v15);
    char v16 = 0;
    return v16 & 1;
  }
  if (v15 == 255) {
    goto LABEL_9;
  }
  if (v12)
  {
    if (v15)
    {
      uint64_t v25 = v7;
      uint64_t v26 = v6;
      if (v11 != v14 || v10 != v13) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
LABEL_11:
    sub_254BB98DC(*(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
    sub_254BB98DC(v11, v10, v12);
    sub_254BB9914();
    sub_254BB9914();
    char v16 = 0;
    return v16 & 1;
  }
  if (v15) {
    goto LABEL_11;
  }
  uint64_t v25 = v7;
  uint64_t v26 = v6;
  if (v11 == v14 && v10 == v13)
  {
LABEL_14:
    sub_254BB98DC(v11, v10, v15);
    sub_254BB98DC(v11, v10, v12);
    sub_254BB9914();
    sub_254BB9914();
    uint64_t v7 = v25;
    uint64_t v6 = v26;
    goto LABEL_16;
  }
LABEL_15:
  int v24 = sub_254E15E08();
  sub_254BB98DC(v14, v13, v15);
  sub_254BB98DC(v11, v10, v12);
  sub_254BB9914();
  sub_254BB9914();
  char v16 = 0;
  uint64_t v7 = v25;
  uint64_t v6 = v26;
  if (v24) {
    goto LABEL_16;
  }
  return v16 & 1;
}

uint64_t sub_254DBF06C(char *a1, char *a2, void (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t), uint64_t (*a5)(void))
{
  uint64_t v34 = a5;
  uint64_t v35 = a3;
  uint64_t v8 = sub_254E14FC8();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v14 = &v32[-v13];
  uint64_t v16 = *(void *)a1;
  uint64_t v15 = *((void *)a1 + 1);
  uint64_t v17 = *(void *)a2;
  uint64_t v18 = *((void *)a2 + 1);
  if (v15 != 1)
  {
    if (v18 != 1)
    {
      if (v15)
      {
        if (v18)
        {
          uint64_t v26 = v12;
          if (v16 == v17 && v15 == v18)
          {
            uint64_t v27 = v35;
            v35(*(void *)a1, *((void *)a1 + 1));
            v27(v16, v15);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v12 = v26;
          }
          else
          {
            int v33 = sub_254E15E08();
            uint64_t v29 = v17;
            uint64_t v30 = v35;
            v35(v29, v18);
            v30(v16, v15);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v22 = 0;
            uint64_t v12 = v26;
            if ((v33 & 1) == 0) {
              return v22 & 1;
            }
          }
          goto LABEL_3;
        }
      }
      else if (!v18)
      {
        uint64_t v31 = v12;
        swift_bridgeObjectRelease_n();
        uint64_t v12 = v31;
        goto LABEL_3;
      }
      uint64_t v28 = v35;
      v35(*(void *)a2, *((void *)a2 + 1));
      v28(v16, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      char v22 = 0;
      return v22 & 1;
    }
LABEL_5:
    int v24 = v35;
    v35(*(void *)a2, *((void *)a2 + 1));
    v24(v16, v15);
    a4(v16, v15);
    a4(v17, v18);
    goto LABEL_6;
  }
  if (v18 != 1) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v19 = v12;
  uint64_t v20 = v34(0);
  uint64_t v21 = *(void (**)(unsigned char *, char *, uint64_t))(v19 + 16);
  v21(v14, &a1[*(int *)(v20 + 20)], v8);
  v21(v11, &a2[*(int *)(v20 + 20)], v8);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v22 = sub_254E157D8();
  uint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v19 + 8);
  v23(v11, v8);
  v23(v14, v8);
  return v22 & 1;
}

uint64_t _s23LighthouseDataProcessor25ToolKitProtoAppDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v43 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v39 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  uint64_t v46 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15F18);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C400);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v39 - v19;
  MEMORY[0x270FA5388](v18);
  char v22 = (char *)&v39 - v21;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v23 = 0, (sub_254E15E08() & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
      || (char v23 = 0, (sub_254E15E08() & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v23 = 0, (sub_254E15E08() & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (char v23 = 0, (sub_254E15E08() & 1) != 0))
        {
          if (*(void *)(a1 + 64) == *(void *)(a2 + 64) && *(void *)(a1 + 72) == *(void *)(a2 + 72)
            || (char v23 = 0, (sub_254E15E08() & 1) != 0))
          {
            char v41 = v10;
            uint64_t v24 = type metadata accessor for ToolKitProtoAppDefinition(0);
            sub_2545C9310(a1 + *(int *)(v24 + 44), (uint64_t)v22, &qword_269E0C400);
            uint64_t v40 = v24;
            sub_2545C9310(a2 + *(int *)(v24 + 44), (uint64_t)v20, &qword_269E0C400);
            uint64_t v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
            sub_2545C9310((uint64_t)v22, (uint64_t)v13, &qword_269E0C400);
            sub_2545C9310((uint64_t)v20, v25, &qword_269E0C400);
            uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
            if (v26((uint64_t)v13, 1, v8) == 1)
            {
              sub_2545C9374((uint64_t)v20, &qword_269E0C400);
              sub_2545C9374((uint64_t)v22, &qword_269E0C400);
              if (v26(v25, 1, v8) == 1)
              {
                sub_2545C9374((uint64_t)v13, &qword_269E0C400);
LABEL_23:
                if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80)
                  && (sub_254DDD5B4(*(void **)(a1 + 88), *(void **)(a2 + 88)) & 1) != 0)
                {
                  uint64_t v29 = v40;
                  uint64_t v30 = a1 + *(int *)(v40 + 48);
                  uint64_t v32 = v44;
                  uint64_t v31 = v45;
                  int v33 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
                  uint64_t v34 = v42;
                  v33(v42, v30, v45);
                  uint64_t v35 = a2 + *(int *)(v29 + 48);
                  uint64_t v36 = v43;
                  v33(v43, v35, v31);
                  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
                  char v23 = sub_254E157D8();
                  char v37 = *(void (**)(char *, uint64_t))(v32 + 8);
                  v37(v36, v31);
                  v37(v34, v31);
                  return v23 & 1;
                }
LABEL_26:
                char v23 = 0;
                return v23 & 1;
              }
            }
            else
            {
              sub_2545C9310((uint64_t)v13, (uint64_t)v17, &qword_269E0C400);
              if (v26(v25, 1, v8) != 1)
              {
                uint64_t v27 = v41;
                sub_254DCF1BC(v25, (uint64_t)v41, type metadata accessor for ToolKitProtoAppDefinition.Device);
                char v28 = sub_254DBF06C(v17, v27, (void (*)(uint64_t, uint64_t))sub_254BBAE90, (void (*)(uint64_t, uint64_t))sub_254BBAEA4, type metadata accessor for ToolKitProtoAppDefinition.Device);
                sub_254DCF224((uint64_t)v27, type metadata accessor for ToolKitProtoAppDefinition.Device);
                sub_2545C9374((uint64_t)v20, &qword_269E0C400);
                sub_2545C9374((uint64_t)v22, &qword_269E0C400);
                sub_254DCF224((uint64_t)v17, type metadata accessor for ToolKitProtoAppDefinition.Device);
                sub_2545C9374((uint64_t)v13, &qword_269E0C400);
                if ((v28 & 1) == 0) {
                  goto LABEL_26;
                }
                goto LABEL_23;
              }
              sub_2545C9374((uint64_t)v20, &qword_269E0C400);
              sub_2545C9374((uint64_t)v22, &qword_269E0C400);
              sub_254DCF224((uint64_t)v17, type metadata accessor for ToolKitProtoAppDefinition.Device);
            }
            sub_2545C9374((uint64_t)v13, &qword_269E15F18);
            goto LABEL_26;
          }
        }
      }
    }
  }
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V2eeoiySbAE_AEtFZ_0(uint64_t a1, void *a2)
{
  uint64_t v189 = sub_254E14FC8();
  uint64_t v188 = *(void *)(v189 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v189);
  v187 = (char *)&v182 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v186 = (char *)&v182 - v6;
  uint64_t v201 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  uint64_t v196 = *(void *)(v201 - 8);
  MEMORY[0x270FA5388](v201);
  uint64_t v190 = (uint64_t)&v182 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16320);
  uint64_t v8 = MEMORY[0x270FA5388](v198);
  uint64_t v194 = (uint64_t)&v182 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v200 = (uint64_t)&v182 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C430);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v191 = (uint64_t)&v182 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v192 = (uint64_t)&v182 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v193 = (uint64_t)&v182 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v195 = (uint64_t)&v182 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  char v22 = (char *)&v182 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v199 = (uint64_t)&v182 - v23;
  uint64_t v207 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  uint64_t v203 = *(void *)(v207 - 8);
  MEMORY[0x270FA5388](v207);
  uint64_t v197 = (uint64_t)&v182 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16328);
  MEMORY[0x270FA5388](v202);
  uint64_t v208 = (uint64_t)&v182 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C420);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v204 = (uint64_t)&v182 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v205 = (uint64_t)&v182 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v206 = (uint64_t)&v182 - v31;
  uint64_t v32 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  uint64_t v214 = *(void *)(v32 - 8);
  uint64_t v215 = v32;
  MEMORY[0x270FA5388](v32);
  v209 = (char *)&v182 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16330);
  MEMORY[0x270FA5388](v211);
  uint64_t v216 = (uint64_t)&v182 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C410);
  uint64_t v36 = MEMORY[0x270FA5388](v35 - 8);
  v210 = (char *)&v182 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v212 = (uint64_t)&v182 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v213 = (uint64_t)&v182 - v40;
  uint64_t v41 = type metadata accessor for ToolKitProtoAppDefinition(0);
  uint64_t v222 = *(void *)(v41 - 8);
  uint64_t v223 = v41;
  MEMORY[0x270FA5388](v41);
  uint64_t v217 = (uint64_t)&v182 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16338);
  MEMORY[0x270FA5388](v219);
  uint64_t v224 = (uint64_t)&v182 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C408);
  uint64_t v45 = MEMORY[0x270FA5388](v44 - 8);
  uint64_t v218 = (uint64_t)&v182 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v220 = (uint64_t)&v182 - v48;
  MEMORY[0x270FA5388](v47);
  uint64_t v221 = (uint64_t)&v182 - v49;
  uint64_t v50 = type metadata accessor for ToolKitProtoTypeInstance(0);
  uint64_t v225 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (uint64_t *)((char *)&v182 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10648);
  MEMORY[0x270FA5388](v53);
  uint64_t v55 = (char *)&v182 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3F8);
  uint64_t v57 = MEMORY[0x270FA5388](v56 - 8);
  uint64_t v59 = (uint64_t *)((char *)&v182 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v60 = MEMORY[0x270FA5388](v57);
  char v62 = (char *)&v182 - v61;
  MEMORY[0x270FA5388](v60);
  uint64_t v64 = (char *)&v182 - v63;
  uint64_t v65 = *(void *)a1;
  uint64_t v66 = *(void *)(a1 + 8);
  uint64_t v67 = *a2;
  uint64_t v68 = a2[1];
  v226 = a2;
  if (v65 != v67 || v66 != v68)
  {
    char v69 = 0;
    if ((sub_254E15E08() & 1) == 0) {
      return v69 & 1;
    }
  }
  if (*(void *)(a1 + 16) != v226[2] || *(void *)(a1 + 24) != v226[3])
  {
    char v69 = 0;
    if ((sub_254E15E08() & 1) == 0) {
      return v69 & 1;
    }
  }
  uint64_t v70 = v226;
  if (*(unsigned __int8 *)(a1 + 32) != *((unsigned __int8 *)v226 + 32)
    || (sub_254DE502C(*(void *)(a1 + 40), v226[5]) & 1) == 0)
  {
LABEL_16:
    char v69 = 0;
    return v69 & 1;
  }
  v183 = v22;
  uint64_t v71 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  uint64_t v72 = *(int *)(v71 + 76);
  v185 = (uint64_t *)a1;
  sub_2545C9310(a1 + v72, (uint64_t)v64, &qword_269E0C3F8);
  v184 = (int *)v71;
  sub_2545C9310((uint64_t)v70 + *(int *)(v71 + 76), (uint64_t)v62, &qword_269E0C3F8);
  uint64_t v73 = (uint64_t)&v55[*(int *)(v53 + 48)];
  sub_2545C9310((uint64_t)v64, (uint64_t)v55, &qword_269E0C3F8);
  sub_2545C9310((uint64_t)v62, v73, &qword_269E0C3F8);
  uint64_t v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v225 + 48);
  if (v74((uint64_t)v55, 1, v50) == 1)
  {
    sub_2545C9374((uint64_t)v62, &qword_269E0C3F8);
    sub_2545C9374((uint64_t)v64, &qword_269E0C3F8);
    if (v74(v73, 1, v50) == 1)
    {
      sub_2545C9374((uint64_t)v55, &qword_269E0C3F8);
      goto LABEL_19;
    }
LABEL_14:
    uint64_t v75 = &qword_269E10648;
    uint64_t v76 = (uint64_t)v55;
LABEL_15:
    sub_2545C9374(v76, v75);
    goto LABEL_16;
  }
  sub_2545C9310((uint64_t)v55, (uint64_t)v59, &qword_269E0C3F8);
  if (v74(v73, 1, v50) == 1)
  {
    sub_2545C9374((uint64_t)v62, &qword_269E0C3F8);
    sub_2545C9374((uint64_t)v64, &qword_269E0C3F8);
    sub_254DCF224((uint64_t)v59, type metadata accessor for ToolKitProtoTypeInstance);
    goto LABEL_14;
  }
  sub_254DCF1BC(v73, (uint64_t)v52, type metadata accessor for ToolKitProtoTypeInstance);
  char v78 = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v59, v52);
  sub_254DCF224((uint64_t)v52, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2545C9374((uint64_t)v62, &qword_269E0C3F8);
  sub_2545C9374((uint64_t)v64, &qword_269E0C3F8);
  sub_254DCF224((uint64_t)v59, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2545C9374((uint64_t)v55, &qword_269E0C3F8);
  if ((v78 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_19:
  v79 = v184;
  uint64_t v80 = v184[20];
  v81 = v185;
  uint64_t v82 = (uint64_t *)((char *)v185 + v80);
  uint64_t v83 = *(uint64_t *)((char *)v185 + v80 + 8);
  v84 = (void *)((char *)v226 + v80);
  uint64_t v85 = v84[1];
  if (v83)
  {
    if (!v85) {
      goto LABEL_16;
    }
    if (*v82 != *v84 || v83 != v85)
    {
      char v86 = sub_254E15E08();
      v81 = v185;
      char v69 = 0;
      if ((v86 & 1) == 0) {
        return v69 & 1;
      }
    }
  }
  else if (v85)
  {
    goto LABEL_16;
  }
  uint64_t v87 = v221;
  sub_2545C9310((uint64_t)v81 + v79[21], v221, &qword_269E0C408);
  uint64_t v88 = v220;
  sub_2545C9310((uint64_t)v226 + v79[21], v220, &qword_269E0C408);
  uint64_t v89 = v224;
  uint64_t v90 = v224 + *(int *)(v219 + 48);
  sub_2545C9310(v87, v224, &qword_269E0C408);
  sub_2545C9310(v88, v90, &qword_269E0C408);
  uint64_t v91 = v223;
  uint64_t v92 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v222 + 48);
  if (v92(v89, 1, v223) == 1)
  {
    sub_2545C9374(v88, &qword_269E0C408);
    sub_2545C9374(v87, &qword_269E0C408);
    if (v92(v90, 1, v91) == 1)
    {
      sub_2545C9374(v89, &qword_269E0C408);
      goto LABEL_33;
    }
    goto LABEL_31;
  }
  uint64_t v93 = v218;
  sub_2545C9310(v89, v218, &qword_269E0C408);
  if (v92(v90, 1, v91) == 1)
  {
    sub_2545C9374(v88, &qword_269E0C408);
    sub_2545C9374(v87, &qword_269E0C408);
    sub_254DCF224(v93, type metadata accessor for ToolKitProtoAppDefinition);
LABEL_31:
    uint64_t v75 = &qword_269E16338;
    uint64_t v76 = v89;
    goto LABEL_15;
  }
  uint64_t v94 = v217;
  sub_254DCF1BC(v90, v217, type metadata accessor for ToolKitProtoAppDefinition);
  char v95 = _s23LighthouseDataProcessor25ToolKitProtoAppDefinitionV2eeoiySbAC_ACtFZ_0(v93, v94);
  sub_254DCF224(v94, type metadata accessor for ToolKitProtoAppDefinition);
  sub_2545C9374(v88, &qword_269E0C408);
  sub_2545C9374(v87, &qword_269E0C408);
  sub_254DCF224(v93, type metadata accessor for ToolKitProtoAppDefinition);
  sub_2545C9374(v89, &qword_269E0C408);
  if ((v95 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_33:
  uint64_t v96 = v79[22];
  uint64_t v97 = v185;
  uint64_t v98 = (uint64_t *)((char *)v185 + v96);
  uint64_t v99 = *(uint64_t *)((char *)v185 + v96 + 8);
  uint64_t v100 = (void *)((char *)v226 + v96);
  uint64_t v101 = v100[1];
  if (v99)
  {
    if (!v101) {
      goto LABEL_16;
    }
    if (*v98 != *v100 || v99 != v101)
    {
      char v102 = sub_254E15E08();
      uint64_t v97 = v185;
      char v69 = 0;
      if ((v102 & 1) == 0) {
        return v69 & 1;
      }
    }
  }
  else if (v101)
  {
    goto LABEL_16;
  }
  v103 = v226;
  v104 = v97;
  if ((sub_254DE5EC4(v97[6], v226[6]) & 1) == 0 || (sub_254DDD5B4((void *)v104[7], (void *)v103[7]) & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v105 = v213;
  sub_2545C9310((uint64_t)v104 + v79[23], v213, &qword_269E0C410);
  uint64_t v106 = v212;
  sub_2545C9310((uint64_t)v103 + v79[23], v212, &qword_269E0C410);
  uint64_t v107 = v216;
  uint64_t v108 = v216 + *(int *)(v211 + 48);
  sub_2545C9310(v105, v216, &qword_269E0C410);
  sub_2545C9310(v106, v108, &qword_269E0C410);
  uint64_t v109 = v215;
  v110 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v214 + 48);
  if (v110(v107, 1, v215) == 1)
  {
    sub_2545C9374(v106, &qword_269E0C410);
    sub_2545C9374(v105, &qword_269E0C410);
    if (v110(v108, 1, v109) == 1)
    {
      sub_2545C9374(v107, &qword_269E0C410);
      goto LABEL_49;
    }
    goto LABEL_47;
  }
  v111 = v210;
  sub_2545C9310(v107, (uint64_t)v210, &qword_269E0C410);
  if (v110(v108, 1, v109) == 1)
  {
    sub_2545C9374(v106, &qword_269E0C410);
    sub_2545C9374(v105, &qword_269E0C410);
    sub_254DCF224((uint64_t)v111, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
LABEL_47:
    uint64_t v75 = &qword_269E16330;
    uint64_t v76 = v107;
    goto LABEL_15;
  }
  v112 = v209;
  sub_254DCF1BC(v108, (uint64_t)v209, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
  char v113 = _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V11DeprecationV2eeoiySbAG_AGtFZ_0(v111, v112);
  sub_254DCF224((uint64_t)v112, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
  sub_2545C9374(v106, &qword_269E0C410);
  sub_2545C9374(v105, &qword_269E0C410);
  sub_254DCF224((uint64_t)v111, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
  sub_2545C9374(v107, &qword_269E0C410);
  if ((v113 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_49:
  v114 = v185;
  v115 = v226;
  if ((sub_254DE2210(v185[8], v226[8]) & 1) == 0
    || !sub_254DE6124(v114[9], v115[9])
    || *((unsigned __int8 *)v114 + 80) != *((unsigned __int8 *)v115 + 80)
    || (sub_254DE1E18(v114[11], v115[11]) & 1) == 0
    || (sub_254DE6190(v185[12], v226[12]) & 1) == 0)
  {
    goto LABEL_16;
  }
  v116 = v184;
  uint64_t v117 = v206;
  sub_2545C9310((uint64_t)v185 + v184[24], v206, &qword_269E0C420);
  uint64_t v118 = v205;
  sub_2545C9310((uint64_t)v226 + v116[24], v205, &qword_269E0C420);
  uint64_t v119 = v208;
  uint64_t v120 = v208 + *(int *)(v202 + 48);
  sub_2545C9310(v117, v208, &qword_269E0C420);
  sub_2545C9310(v118, v120, &qword_269E0C420);
  v121 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v203 + 48);
  if (v121(v119, 1, v207) == 1)
  {
    sub_2545C9374(v205, &qword_269E0C420);
    sub_2545C9374(v206, &qword_269E0C420);
    if (v121(v120, 1, v207) == 1)
    {
      sub_2545C9374(v208, &qword_269E0C420);
      goto LABEL_61;
    }
    goto LABEL_59;
  }
  sub_2545C9310(v208, v204, &qword_269E0C420);
  if (v121(v120, 1, v207) == 1)
  {
    sub_2545C9374(v205, &qword_269E0C420);
    sub_2545C9374(v206, &qword_269E0C420);
    sub_254DCF224(v204, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
LABEL_59:
    uint64_t v75 = &qword_269E16328;
    uint64_t v76 = v208;
    goto LABEL_15;
  }
  uint64_t v122 = v197;
  sub_254DCF1BC(v120, v197, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
  uint64_t v123 = v204;
  char v124 = _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V0D4IconV2eeoiySbAG_AGtFZ_0(v204, v122);
  sub_254DCF224(v122, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
  sub_2545C9374(v205, &qword_269E0C420);
  sub_2545C9374(v206, &qword_269E0C420);
  sub_254DCF224(v123, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
  sub_2545C9374(v208, &qword_269E0C420);
  if ((v124 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_61:
  if ((sub_254DE502C(v185[13], v226[13]) & 1) == 0) {
    goto LABEL_16;
  }
  v125 = v184;
  uint64_t v126 = v199;
  sub_2545C9310((uint64_t)v185 + v184[25], v199, &qword_269E0C430);
  uint64_t v127 = (uint64_t)v183;
  sub_2545C9310((uint64_t)v226 + v125[25], (uint64_t)v183, &qword_269E0C430);
  uint64_t v128 = v200;
  uint64_t v129 = v200 + *(int *)(v198 + 48);
  sub_2545C9310(v126, v200, &qword_269E0C430);
  sub_2545C9310(v127, v129, &qword_269E0C430);
  v130 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v196 + 48);
  if (v130(v128, 1, v201) == 1)
  {
    sub_2545C9374((uint64_t)v183, &qword_269E0C430);
    sub_2545C9374(v199, &qword_269E0C430);
    if (v130(v129, 1, v201) == 1)
    {
      sub_2545C9374(v200, &qword_269E0C430);
      goto LABEL_69;
    }
    goto LABEL_67;
  }
  sub_2545C9310(v200, v195, &qword_269E0C430);
  if (v130(v129, 1, v201) == 1)
  {
    sub_2545C9374((uint64_t)v183, &qword_269E0C430);
    sub_2545C9374(v199, &qword_269E0C430);
    sub_254DCF224(v195, type metadata accessor for ToolKitProtoContainerDefinition);
LABEL_67:
    uint64_t v75 = &qword_269E16320;
    uint64_t v76 = v200;
    goto LABEL_15;
  }
  uint64_t v131 = v190;
  sub_254DCF1BC(v129, v190, type metadata accessor for ToolKitProtoContainerDefinition);
  uint64_t v132 = v195;
  char v133 = _s23LighthouseDataProcessor31ToolKitProtoContainerDefinitionV2eeoiySbAC_ACtFZ_0(v195, v131);
  sub_254DCF224(v131, type metadata accessor for ToolKitProtoContainerDefinition);
  sub_2545C9374((uint64_t)v183, &qword_269E0C430);
  sub_2545C9374(v199, &qword_269E0C430);
  sub_254DCF224(v132, type metadata accessor for ToolKitProtoContainerDefinition);
  sub_2545C9374(v200, &qword_269E0C430);
  if ((v133 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_69:
  v134 = v184;
  uint64_t v135 = v193;
  sub_2545C9310((uint64_t)v185 + v184[26], v193, &qword_269E0C430);
  uint64_t v136 = v192;
  sub_2545C9310((uint64_t)v226 + v134[26], v192, &qword_269E0C430);
  uint64_t v137 = v194;
  uint64_t v138 = v194 + *(int *)(v198 + 48);
  sub_2545C9310(v135, v194, &qword_269E0C430);
  sub_2545C9310(v136, v138, &qword_269E0C430);
  if (v130(v137, 1, v201) == 1)
  {
    sub_2545C9374(v192, &qword_269E0C430);
    sub_2545C9374(v193, &qword_269E0C430);
    if (v130(v138, 1, v201) == 1)
    {
      sub_2545C9374(v194, &qword_269E0C430);
      goto LABEL_76;
    }
    goto LABEL_74;
  }
  sub_2545C9310(v194, v191, &qword_269E0C430);
  if (v130(v138, 1, v201) == 1)
  {
    sub_2545C9374(v192, &qword_269E0C430);
    sub_2545C9374(v193, &qword_269E0C430);
    sub_254DCF224(v191, type metadata accessor for ToolKitProtoContainerDefinition);
LABEL_74:
    uint64_t v75 = &qword_269E16320;
    uint64_t v76 = v194;
    goto LABEL_15;
  }
  uint64_t v139 = v190;
  sub_254DCF1BC(v138, v190, type metadata accessor for ToolKitProtoContainerDefinition);
  uint64_t v140 = v191;
  char v141 = _s23LighthouseDataProcessor31ToolKitProtoContainerDefinitionV2eeoiySbAC_ACtFZ_0(v191, v139);
  sub_254DCF224(v139, type metadata accessor for ToolKitProtoContainerDefinition);
  sub_2545C9374(v192, &qword_269E0C430);
  sub_2545C9374(v193, &qword_269E0C430);
  sub_254DCF224(v140, type metadata accessor for ToolKitProtoContainerDefinition);
  sub_2545C9374(v194, &qword_269E0C430);
  if ((v141 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_76:
  if ((sub_254DE2BD0(v185[14], v226[14]) & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v142 = v184[27];
  v143 = (uint64_t *)((char *)v185 + v142);
  uint64_t v144 = *(uint64_t *)((char *)v185 + v142 + 8);
  v145 = (void *)((char *)v226 + v142);
  uint64_t v146 = v145[1];
  if (v144)
  {
    if (!v146) {
      goto LABEL_16;
    }
    BOOL v147 = *v143 == *v145;
    v148 = v185;
    v149 = v184;
    if (!v147 || v144 != v146)
    {
      char v150 = sub_254E15E08();
      v148 = v185;
      char v69 = 0;
      if ((v150 & 1) == 0) {
        return v69 & 1;
      }
    }
  }
  else
  {
    v148 = v185;
    v149 = v184;
    if (v146) {
      goto LABEL_16;
    }
  }
  uint64_t v151 = v149[28];
  v152 = (uint64_t *)((char *)v148 + v151);
  uint64_t v153 = v152[1];
  v154 = (void *)((char *)v226 + v151);
  uint64_t v155 = v154[1];
  if (v153)
  {
    if (!v155) {
      goto LABEL_16;
    }
    BOOL v147 = *v152 == *v154;
    v156 = v185;
    v157 = v184;
    if (!v147 || v153 != v155)
    {
      char v158 = sub_254E15E08();
      v156 = v185;
      char v69 = 0;
      if ((v158 & 1) == 0) {
        return v69 & 1;
      }
    }
  }
  else
  {
    v156 = v185;
    v157 = v184;
    if (v155) {
      goto LABEL_16;
    }
  }
  uint64_t v159 = v157[29];
  v160 = (uint64_t *)((char *)v156 + v159);
  uint64_t v161 = v160[1];
  v162 = (void *)((char *)v226 + v159);
  uint64_t v163 = v162[1];
  if (v161)
  {
    if (!v163) {
      goto LABEL_16;
    }
    BOOL v147 = *v160 == *v162;
    v164 = v185;
    v165 = v184;
    if (!v147 || v161 != v163)
    {
      char v166 = sub_254E15E08();
      v164 = v185;
      char v69 = 0;
      if ((v166 & 1) == 0) {
        return v69 & 1;
      }
    }
  }
  else
  {
    v164 = v185;
    v165 = v184;
    if (v163) {
      goto LABEL_16;
    }
  }
  uint64_t v167 = v165[30];
  v168 = (uint64_t *)((char *)v164 + v167);
  uint64_t v169 = v168[1];
  v170 = (void *)((char *)v226 + v167);
  uint64_t v171 = v170[1];
  if (!v169)
  {
    v172 = v185;
    if (!v171) {
      goto LABEL_109;
    }
    goto LABEL_16;
  }
  if (!v171) {
    goto LABEL_16;
  }
  BOOL v147 = *v168 == *v170;
  v172 = v185;
  if (v147 && v169 == v171 || (v173 = sub_254E15E08(), v172 = v185, char v69 = 0, (v173 & 1) != 0))
  {
LABEL_109:
    if ((sub_254DDD5B4((void *)v172[15], (void *)v226[15]) & 1) != 0
      && (sub_254DE66DC(v185[16], v226[16]) & 1) != 0)
    {
      v174 = v184;
      uint64_t v175 = v188;
      v176 = *(void (**)(char *, char *, uint64_t))(v188 + 16);
      v177 = v186;
      uint64_t v178 = v189;
      v176(v186, (char *)v185 + v184[31], v189);
      v179 = (char *)v226 + v174[31];
      v180 = v187;
      v176(v187, v179, v178);
      sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v69 = sub_254E157D8();
      v181 = *(void (**)(char *, uint64_t))(v175 + 8);
      v181(v180, v178);
      v181(v177, v178);
      return v69 & 1;
    }
    goto LABEL_16;
  }
  return v69 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV9PrimitiveV2eeoiySbAE_AEtFZ_0(char *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v17[-v9];
  int v11 = *a2;
  if (*a1 == 41)
  {
    if (v11 != 41)
    {
LABEL_7:
      char v14 = 0;
      return v14 & 1;
    }
  }
  else
  {
    char v19 = *a1;
    if (v11 == 41) {
      goto LABEL_7;
    }
    unsigned __int8 v18 = v11;
    if (!_s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV0deF13PrimitiveKindO2eeoiySbAE_AEtFZ_0(&v19, &v18)) {
      goto LABEL_7;
    }
  }
  uint64_t v12 = type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0);
  uint64_t v13 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v5 + 16);
  v13(v10, (unsigned __int8 *)&a1[*(int *)(v12 + 20)], v4);
  v13(v8, &a2[*(int *)(v12 + 20)], v4);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v14 = sub_254E157D8();
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v37 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16268);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C650);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  unsigned __int8 v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v37 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v37 - v22;
  uint64_t v39 = a1;
  sub_2545C9310(a1, (uint64_t)&v37 - v22, &qword_269E0C650);
  uint64_t v40 = a2;
  sub_2545C9310(a2, (uint64_t)v21, &qword_269E0C650);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E0C650);
  sub_2545C9310((uint64_t)v21, v24, &qword_269E0C650);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) != 1)
  {
    sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E0C650);
    if (v25(v24, 1, v8) != 1)
    {
      uint64_t v26 = v38;
      sub_254DCF1BC(v24, v38, type metadata accessor for ToolKitProtoTypeIdentifierKind);
      char v27 = _s23LighthouseDataProcessor30ToolKitProtoTypeIdentifierKindO2eeoiySbAC_ACtFZ_0((uint64_t)v18, v26);
      sub_254DCF224(v26, type metadata accessor for ToolKitProtoTypeIdentifierKind);
      sub_2545C9374((uint64_t)v21, &qword_269E0C650);
      sub_2545C9374((uint64_t)v23, &qword_269E0C650);
      sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifierKind);
      sub_2545C9374((uint64_t)v14, &qword_269E0C650);
      if (v27) {
        goto LABEL_8;
      }
LABEL_9:
      char v34 = 0;
      return v34 & 1;
    }
    sub_2545C9374((uint64_t)v21, &qword_269E0C650);
    sub_2545C9374((uint64_t)v23, &qword_269E0C650);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifierKind);
LABEL_6:
    sub_2545C9374((uint64_t)v14, &qword_269E16268);
    goto LABEL_9;
  }
  sub_2545C9374((uint64_t)v21, &qword_269E0C650);
  sub_2545C9374((uint64_t)v23, &qword_269E0C650);
  if (v25(v24, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_2545C9374((uint64_t)v14, &qword_269E0C650);
LABEL_8:
  uint64_t v28 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  uint64_t v30 = v43;
  uint64_t v29 = v44;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  uint64_t v32 = v41;
  v31(v41, v39 + *(int *)(v28 + 20), v44);
  uint64_t v33 = v42;
  v31(v42, v40 + *(int *)(v28 + 20), v29);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v34 = sub_254E157D8();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v29);
  v35(v32, v29);
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *a1;
  uint64_t v12 = *a2;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v12 & 0xF000000000000007) == 0) {
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v20 = *a1;
  if ((~v12 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_6:
    sub_254720AF8(v12);
    sub_254720B10(v11);
    sub_254720B10(v12);
LABEL_9:
    char v16 = 0;
    return v16 & 1;
  }
  uint64_t v19 = v12;
  sub_254720AF8(v11);
  swift_retain();
  char v13 = _s23LighthouseDataProcessor28ToolKitProtoTypeInstanceKindO2eeoiySbAC_ACtFZ_0(&v20, (unint64_t *)&v19);
  swift_release();
  sub_254720B10(v11);
  if ((v13 & 1) == 0) {
    goto LABEL_9;
  }
LABEL_8:
  uint64_t v14 = type metadata accessor for ToolKitProtoTypeInstance(0);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v15(v10, (char *)a1 + *(int *)(v14 + 20), v4);
  v15(v8, (char *)a2 + *(int *)(v14 + 20), v4);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v16 = sub_254E157D8();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return v16 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V9ParameterV2eeoiySbAG_AGtFZ_0(void *a1, uint64_t *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v73 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v71 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v70 = (char *)&v66 - v7;
  uint64_t v79 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata(0);
  uint64_t v76 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v69 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15F78);
  MEMORY[0x270FA5388](v75);
  uint64_t v80 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E124C0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v74 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v77 = (uint64_t)&v66 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v78 = (uint64_t)&v66 - v15;
  uint64_t v16 = type metadata accessor for ToolKitProtoTypeInstance(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  v81 = (uint64_t *)((char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10648);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3F8);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (uint64_t *)((char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v66 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v66 - v29;
  if (*a1 == *a2 && a1[1] == a2[1] || (char v31 = 0, (sub_254E15E08() & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (char v31 = 0, (sub_254E15E08() & 1) != 0))
    {
      uint64_t v32 = a1[8];
      uint64_t v33 = a2[8];
      if (v32)
      {
        if (!v33) {
          goto LABEL_37;
        }
        if (a1[7] != a2[7] || v32 != v33)
        {
          char v31 = 0;
          if ((sub_254E15E08() & 1) == 0) {
            return v31 & 1;
          }
        }
      }
      else if (v33)
      {
        goto LABEL_37;
      }
      uint64_t v34 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter(0);
      uint64_t v68 = a2;
      uint64_t v35 = v17;
      uint64_t v36 = v34;
      sub_2545C9310((uint64_t)a1 + *(int *)(v34 + 40), (uint64_t)v30, &qword_269E0C3F8);
      uint64_t v67 = v36;
      uint64_t v37 = *(int *)(v36 + 40);
      uint64_t v38 = v35;
      uint64_t v39 = v68;
      sub_2545C9310((uint64_t)v68 + v37, (uint64_t)v28, &qword_269E0C3F8);
      uint64_t v40 = (uint64_t)&v21[*(int *)(v19 + 48)];
      sub_2545C9310((uint64_t)v30, (uint64_t)v21, &qword_269E0C3F8);
      sub_2545C9310((uint64_t)v28, v40, &qword_269E0C3F8);
      uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
      if (v41((uint64_t)v21, 1, v16) == 1)
      {
        sub_2545C9374((uint64_t)v28, &qword_269E0C3F8);
        sub_2545C9374((uint64_t)v30, &qword_269E0C3F8);
        if (v41(v40, 1, v16) == 1)
        {
          sub_2545C9374((uint64_t)v21, &qword_269E0C3F8);
          uint64_t v39 = v68;
LABEL_22:
          if ((sub_254DE6730(a1[4], v39[4]) & 1) == 0
            || (sub_254DE1E18(a1[5], v39[5]) & 1) == 0
            || !sub_254DDFE6C(a1[6], v39[6]))
          {
            goto LABEL_37;
          }
          uint64_t v46 = v67;
          uint64_t v47 = v78;
          sub_2545C9310((uint64_t)a1 + *(int *)(v67 + 44), v78, &qword_269E124C0);
          uint64_t v48 = v77;
          sub_2545C9310((uint64_t)v39 + *(int *)(v46 + 44), v77, &qword_269E124C0);
          uint64_t v49 = v80;
          uint64_t v50 = v80 + *(int *)(v75 + 48);
          sub_2545C9310(v47, v80, &qword_269E124C0);
          sub_2545C9310(v48, v50, &qword_269E124C0);
          uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
          uint64_t v52 = v79;
          if (v51(v49, 1, v79) == 1)
          {
            sub_2545C9374(v48, &qword_269E124C0);
            sub_2545C9374(v47, &qword_269E124C0);
            if (v51(v50, 1, v52) == 1)
            {
              sub_2545C9374(v49, &qword_269E124C0);
LABEL_28:
              uint64_t v53 = v67;
              uint64_t v54 = (char *)a1 + *(int *)(v67 + 48);
              uint64_t v56 = v72;
              uint64_t v55 = v73;
              uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
              uint64_t v58 = v70;
              v57(v70, v54, v73);
              uint64_t v59 = (char *)v39 + *(int *)(v53 + 48);
              uint64_t v60 = v71;
              v57(v71, v59, v55);
              sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
              char v31 = sub_254E157D8();
              uint64_t v61 = *(void (**)(char *, uint64_t))(v56 + 8);
              v61(v60, v55);
              v61(v58, v55);
              return v31 & 1;
            }
            goto LABEL_31;
          }
          uint64_t v62 = v74;
          sub_2545C9310(v49, v74, &qword_269E124C0);
          if (v51(v50, 1, v52) == 1)
          {
            sub_2545C9374(v48, &qword_269E124C0);
            sub_2545C9374(v47, &qword_269E124C0);
            sub_254DCF224(v62, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
LABEL_31:
            uint64_t v42 = &qword_269E15F78;
            uint64_t v43 = v49;
            goto LABEL_20;
          }
          uint64_t v63 = v69;
          sub_254DCF1BC(v50, v69, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
          if ((*(void *)v62 != *(void *)v63 || *(void *)(v62 + 8) != *(void *)(v63 + 8))
            && (sub_254E15E08() & 1) == 0
            || (sub_254DDD5B4(*(void **)(v62 + 16), *(void **)(v63 + 16)) & 1) == 0)
          {
            sub_254DCF224(v63, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
            sub_2545C9374(v48, &qword_269E124C0);
            sub_2545C9374(v47, &qword_269E124C0);
            sub_254DCF224(v62, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
            uint64_t v43 = v49;
            uint64_t v42 = &qword_269E124C0;
            goto LABEL_20;
          }
          sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
          char v64 = sub_254E157D8();
          sub_254DCF224(v63, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
          sub_2545C9374(v48, &qword_269E124C0);
          sub_2545C9374(v47, &qword_269E124C0);
          sub_254DCF224(v62, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
          sub_2545C9374(v49, &qword_269E124C0);
          if (v64) {
            goto LABEL_28;
          }
LABEL_37:
          char v31 = 0;
          return v31 & 1;
        }
      }
      else
      {
        sub_2545C9310((uint64_t)v21, (uint64_t)v25, &qword_269E0C3F8);
        if (v41(v40, 1, v16) != 1)
        {
          uint64_t v44 = v81;
          sub_254DCF1BC(v40, (uint64_t)v81, type metadata accessor for ToolKitProtoTypeInstance);
          char v45 = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v25, v44);
          sub_254DCF224((uint64_t)v44, type metadata accessor for ToolKitProtoTypeInstance);
          sub_2545C9374((uint64_t)v28, &qword_269E0C3F8);
          sub_2545C9374((uint64_t)v30, &qword_269E0C3F8);
          sub_254DCF224((uint64_t)v25, type metadata accessor for ToolKitProtoTypeInstance);
          sub_2545C9374((uint64_t)v21, &qword_269E0C3F8);
          if ((v45 & 1) == 0) {
            goto LABEL_37;
          }
          goto LABEL_22;
        }
        sub_2545C9374((uint64_t)v28, &qword_269E0C3F8);
        sub_2545C9374((uint64_t)v30, &qword_269E0C3F8);
        sub_254DCF224((uint64_t)v25, type metadata accessor for ToolKitProtoTypeInstance);
      }
      uint64_t v42 = &qword_269E10648;
      uint64_t v43 = (uint64_t)v21;
LABEL_20:
      sub_2545C9374(v43, v42);
      goto LABEL_37;
    }
  }
  return v31 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V9ParameterV12RelationshipV2eeoiySbAI_AItFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v38 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15F70);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E124C8);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v38 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v38 - v21;
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *((void *)a1 + 1);
  uint64_t v44 = a1;
  char v45 = a2;
  if (v23 == *(void *)a2 && v24 == *((void *)a2 + 1) || (char v25 = 0, (sub_254E15E08() & 1) != 0))
  {
    uint64_t v39 = v4;
    uint64_t v26 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(0);
    sub_2545C9310((uint64_t)&v44[*(int *)(v26 + 20)], (uint64_t)v22, &qword_269E124C8);
    sub_2545C9310((uint64_t)&v45[*(int *)(v26 + 20)], (uint64_t)v20, &qword_269E124C8);
    uint64_t v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2545C9310((uint64_t)v22, (uint64_t)v13, &qword_269E124C8);
    sub_2545C9310((uint64_t)v20, v27, &qword_269E124C8);
    uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v28((uint64_t)v13, 1, v8) == 1)
    {
      sub_2545C9374((uint64_t)v20, &qword_269E124C8);
      sub_2545C9374((uint64_t)v22, &qword_269E124C8);
      if (v28(v27, 1, v8) == 1)
      {
        sub_2545C9374((uint64_t)v13, &qword_269E124C8);
LABEL_11:
        uint64_t v31 = v43;
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
        uint64_t v33 = v41;
        uint64_t v34 = v39;
        v32(v41, &v44[*(int *)(v26 + 24)], v39);
        uint64_t v35 = v42;
        v32(v42, &v45[*(int *)(v26 + 24)], v34);
        sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        char v25 = sub_254E157D8();
        uint64_t v36 = *(void (**)(char *, uint64_t))(v31 + 8);
        v36(v35, v34);
        v36(v33, v34);
        return v25 & 1;
      }
    }
    else
    {
      sub_2545C9310((uint64_t)v13, (uint64_t)v17, &qword_269E124C8);
      if (v28(v27, 1, v8) != 1)
      {
        uint64_t v29 = v40;
        sub_254DCF1BC(v27, v40, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        char v30 = _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V9ParameterV12RelationshipV8RelationV2eeoiySbAK_AKtFZ_0((uint64_t)v17, v29);
        sub_254DCF224(v29, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        sub_2545C9374((uint64_t)v20, &qword_269E124C8);
        sub_2545C9374((uint64_t)v22, &qword_269E124C8);
        sub_254DCF224((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        sub_2545C9374((uint64_t)v13, &qword_269E124C8);
        if (v30) {
          goto LABEL_11;
        }
LABEL_12:
        char v25 = 0;
        return v25 & 1;
      }
      sub_2545C9374((uint64_t)v20, &qword_269E124C8);
      sub_2545C9374((uint64_t)v22, &qword_269E124C8);
      sub_254DCF224((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    }
    sub_2545C9374((uint64_t)v13, &qword_269E15F70);
    goto LABEL_12;
  }
  return v25 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V9ParameterV12RelationshipV8RelationV2eeoiySbAK_AKtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v37 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15F38);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E124D0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v37 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v37 - v22;
  uint64_t v39 = a1;
  sub_2545C9310(a1, (uint64_t)&v37 - v22, &qword_269E124D0);
  uint64_t v40 = a2;
  sub_2545C9310(a2, (uint64_t)v21, &qword_269E124D0);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E124D0);
  sub_2545C9310((uint64_t)v21, v24, &qword_269E124D0);
  char v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) != 1)
  {
    sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E124D0);
    if (v25(v24, 1, v8) != 1)
    {
      uint64_t v26 = v38;
      sub_254DCF1BC(v24, v38, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      char v27 = static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind.== infix(_:_:)((uint64_t)v18, v26);
      sub_254DCF224(v26, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      sub_2545C9374((uint64_t)v21, &qword_269E124D0);
      sub_2545C9374((uint64_t)v23, &qword_269E124D0);
      sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      sub_2545C9374((uint64_t)v14, &qword_269E124D0);
      if (v27) {
        goto LABEL_8;
      }
LABEL_9:
      char v34 = 0;
      return v34 & 1;
    }
    sub_2545C9374((uint64_t)v21, &qword_269E124D0);
    sub_2545C9374((uint64_t)v23, &qword_269E124D0);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
LABEL_6:
    sub_2545C9374((uint64_t)v14, &qword_269E15F38);
    goto LABEL_9;
  }
  sub_2545C9374((uint64_t)v21, &qword_269E124D0);
  sub_2545C9374((uint64_t)v23, &qword_269E124D0);
  if (v25(v24, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_2545C9374((uint64_t)v14, &qword_269E124D0);
LABEL_8:
  uint64_t v28 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  uint64_t v30 = v43;
  uint64_t v29 = v44;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  uint64_t v32 = v41;
  v31(v41, v39 + *(int *)(v28 + 20), v44);
  uint64_t v33 = v42;
  v31(v42, v40 + *(int *)(v28 + 20), v29);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v34 = sub_254E157D8();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v29);
  v35(v32, v29);
  return v34 & 1;
}

uint64_t sub_254DC31A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_254E14FC8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - v11;
  if ((sub_254DDD29C(*(void *)a1, *(void *)a2) & 1) != 0
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8))
  {
    uint64_t v14 = a3(0);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v15(v12, a1 + *(int *)(v14 + 24), v6);
    v15(v10, a2 + *(int *)(v14 + 24), v6);
    sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v13 = sub_254E157D8();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v10, v6);
    v16(v12, v6);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V7DecimalV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v47 - v8;
  uint64_t v10 = sub_254E14F68();
  uint64_t v56 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E162A8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12418);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v47 - v19;
  MEMORY[0x270FA5388](v18);
  if (*a1 != *a2) {
    goto LABEL_9;
  }
  uint64_t v51 = v12;
  uint64_t v52 = v9;
  uint64_t v23 = v56;
  uint64_t v53 = v7;
  uint64_t v54 = v10;
  if (*((void *)a1 + 1) != *((void *)a2 + 1)) {
    goto LABEL_9;
  }
  uint64_t v49 = v4;
  uint64_t v50 = v22;
  uint64_t v24 = (char *)&v47 - v21;
  uint64_t v25 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal(0);
  uint64_t v26 = *(int *)(v25 + 24);
  uint64_t v47 = a1;
  sub_2545C9310((uint64_t)&a1[v26], (uint64_t)v24, &qword_269E12418);
  uint64_t v48 = v25;
  sub_2545C9310((uint64_t)&a2[*(int *)(v25 + 24)], (uint64_t)v20, &qword_269E12418);
  uint64_t v27 = (uint64_t)v15;
  uint64_t v28 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_2545C9310((uint64_t)v24, (uint64_t)v15, &qword_269E12418);
  uint64_t v29 = v28;
  sub_2545C9310((uint64_t)v20, v28, &qword_269E12418);
  uint64_t v30 = v23;
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  uint64_t v32 = v54;
  if (v31(v27, 1, v54) == 1)
  {
    sub_2545C9374((uint64_t)v20, &qword_269E12418);
    sub_2545C9374((uint64_t)v24, &qword_269E12418);
    if (v31(v29, 1, v32) == 1)
    {
      sub_2545C9374(v27, &qword_269E12418);
LABEL_12:
      uint64_t v39 = v48;
      uint64_t v40 = v55;
      uint64_t v41 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v55 + 16);
      uint64_t v42 = v52;
      uint64_t v43 = v49;
      v41(v52, &v47[*(int *)(v48 + 28)], v49);
      uint64_t v44 = &a2[*(int *)(v39 + 28)];
      char v45 = v53;
      v41(v53, v44, v43);
      sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v34 = sub_254E157D8();
      uint64_t v46 = *(void (**)(char *, uint64_t))(v40 + 8);
      v46(v45, v43);
      v46(v42, v43);
      return v34 & 1;
    }
    goto LABEL_8;
  }
  uint64_t v33 = v50;
  sub_2545C9310(v27, v50, &qword_269E12418);
  if (v31(v29, 1, v32) == 1)
  {
    sub_2545C9374((uint64_t)v20, &qword_269E12418);
    sub_2545C9374((uint64_t)v24, &qword_269E12418);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v32);
LABEL_8:
    sub_2545C9374(v27, &qword_269E162A8);
    goto LABEL_9;
  }
  uint64_t v36 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v51, v29, v32);
  sub_254DCF10C(&qword_269E162B0, MEMORY[0x263F50478]);
  char v37 = sub_254E157D8();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v30 + 8);
  v38(v36, v32);
  sub_2545C9374((uint64_t)v20, &qword_269E12418);
  sub_2545C9374((uint64_t)v24, &qword_269E12418);
  v38((char *)v33, v32);
  sub_2545C9374(v27, &qword_269E12418);
  if (v37) {
    goto LABEL_12;
  }
LABEL_9:
  char v34 = 0;
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v37 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16290);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12410);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v37 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v37 - v22;
  uint64_t v39 = a1;
  sub_2545C9310(a1, (uint64_t)&v37 - v22, &qword_269E12410);
  uint64_t v40 = a2;
  sub_2545C9310(a2, (uint64_t)v21, &qword_269E12410);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E12410);
  sub_2545C9310((uint64_t)v21, v24, &qword_269E12410);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) != 1)
  {
    sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E12410);
    if (v25(v24, 1, v8) != 1)
    {
      uint64_t v26 = v38;
      sub_254DCF1BC(v24, (uint64_t)v38, type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind);
      char v27 = _s23LighthouseDataProcessor22ToolKitProtoTypedValueV0def9PrimitiveH4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v18, v26);
      sub_254DCF224((uint64_t)v26, type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind);
      sub_2545C9374((uint64_t)v21, &qword_269E12410);
      sub_2545C9374((uint64_t)v23, &qword_269E12410);
      sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind);
      sub_2545C9374((uint64_t)v14, &qword_269E12410);
      if (v27) {
        goto LABEL_8;
      }
LABEL_9:
      char v34 = 0;
      return v34 & 1;
    }
    sub_2545C9374((uint64_t)v21, &qword_269E12410);
    sub_2545C9374((uint64_t)v23, &qword_269E12410);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind);
LABEL_6:
    sub_2545C9374((uint64_t)v14, &qword_269E16290);
    goto LABEL_9;
  }
  sub_2545C9374((uint64_t)v21, &qword_269E12410);
  sub_2545C9374((uint64_t)v23, &qword_269E12410);
  if (v25(v24, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_2545C9374((uint64_t)v14, &qword_269E12410);
LABEL_8:
  uint64_t v28 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue(0);
  uint64_t v30 = v43;
  uint64_t v29 = v44;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  uint64_t v32 = v41;
  v31(v41, v39 + *(int *)(v28 + 20), v44);
  uint64_t v33 = v42;
  v31(v42, v40 + *(int *)(v28 + 20), v29);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v34 = sub_254E157D8();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v29);
  v35(v32, v29);
  return v34 & 1;
}

uint64_t sub_254DC3DF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_254E14FC8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v19 - v11;
  BOOL v13 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v13 || (char v14 = 0, (sub_254E15E08() & 1) != 0))
  {
    if (sub_254DDD5B4(*(void **)(a1 + 16), *(void **)(a2 + 16)))
    {
      uint64_t v15 = a3(0);
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v16(v12, a1 + *(int *)(v15 + 24), v6);
      v16(v10, a2 + *(int *)(v15 + 24), v6);
      sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v14 = sub_254E157D8();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
      v17(v10, v6);
      v17(v12, v6);
    }
    else
    {
      char v14 = 0;
    }
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V11DeprecationV2eeoiySbAG_AGtFZ_0(char *a1, char *a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - v9;
  if (*(void *)a1 != *(void *)a2 || *((void *)a1 + 1) != *((void *)a2 + 1))
  {
    char v12 = 0;
    if ((sub_254E15E08() & 1) == 0) {
      return v12 & 1;
    }
  }
  uint64_t v13 = *((void *)a1 + 3);
  uint64_t v14 = *((void *)a2 + 3);
  if (!v13)
  {
    if (!v14)
    {
LABEL_14:
      uint64_t v15 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v10, &a1[*(int *)(v15 + 24)], v4);
      v16(v8, &a2[*(int *)(v15 + 24)], v4);
      sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v12 = sub_254E157D8();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
      return v12 & 1;
    }
LABEL_13:
    char v12 = 0;
    return v12 & 1;
  }
  if (!v14) {
    goto LABEL_13;
  }
  if (*((void *)a1 + 2) == *((void *)a2 + 2) && v13 == v14) {
    goto LABEL_14;
  }
  char v12 = 0;
  if (sub_254E15E08()) {
    goto LABEL_14;
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V0D4IconV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v37 - v7;
  uint64_t v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15F20);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C418);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v37 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v37 - v22;
  uint64_t v39 = a1;
  sub_2545C9310(a1, (uint64_t)&v37 - v22, &qword_269E0C418);
  uint64_t v40 = a2;
  sub_2545C9310(a2, (uint64_t)v21, &qword_269E0C418);
  uint64_t v24 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_2545C9310((uint64_t)v23, (uint64_t)v14, &qword_269E0C418);
  sub_2545C9310((uint64_t)v21, v24, &qword_269E0C418);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, v8) != 1)
  {
    sub_2545C9310((uint64_t)v14, (uint64_t)v18, &qword_269E0C418);
    if (v25(v24, 1, v8) != 1)
    {
      uint64_t v26 = v38;
      sub_254DCF1BC(v24, v38, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
      char v27 = _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V0defD8IconKindO2eeoiySbAG_AGtFZ_0((uint64_t)v18, v26);
      sub_254DCF224(v26, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
      sub_2545C9374((uint64_t)v21, &qword_269E0C418);
      sub_2545C9374((uint64_t)v23, &qword_269E0C418);
      sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
      sub_2545C9374((uint64_t)v14, &qword_269E0C418);
      if (v27) {
        goto LABEL_8;
      }
LABEL_9:
      char v34 = 0;
      return v34 & 1;
    }
    sub_2545C9374((uint64_t)v21, &qword_269E0C418);
    sub_2545C9374((uint64_t)v23, &qword_269E0C418);
    sub_254DCF224((uint64_t)v18, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
LABEL_6:
    sub_2545C9374((uint64_t)v14, &qword_269E15F20);
    goto LABEL_9;
  }
  sub_2545C9374((uint64_t)v21, &qword_269E0C418);
  sub_2545C9374((uint64_t)v23, &qword_269E0C418);
  if (v25(v24, 1, v8) != 1) {
    goto LABEL_6;
  }
  sub_2545C9374((uint64_t)v14, &qword_269E0C418);
LABEL_8:
  uint64_t v28 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  uint64_t v30 = v43;
  uint64_t v29 = v44;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  uint64_t v32 = v41;
  v31(v41, v39 + *(int *)(v28 + 20), v44);
  uint64_t v33 = v42;
  v31(v42, v40 + *(int *)(v28 + 20), v29);
  sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
  char v34 = sub_254E157D8();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v33, v29);
  v35(v32, v29);
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V0D4IconV0d6SymbolI0V2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - v9;
  BOOL v11 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v11 || (char v12 = 0, (sub_254E15E08() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16))
    {
LABEL_7:
      char v12 = 0;
      return v12 & 1;
    }
    if (*(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32)
      || (char v12 = 0, (sub_254E15E08() & 1) != 0))
    {
      uint64_t v14 = *(void *)(a1 + 48);
      uint64_t v15 = *(void *)(a2 + 48);
      if (!v14)
      {
        if (v15) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
      if (!v15) {
        goto LABEL_7;
      }
      if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && v14 == v15 || (char v12 = 0, (sub_254E15E08() & 1) != 0))
      {
LABEL_19:
        uint64_t v16 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0);
        uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v17(v10, a1 + *(int *)(v16 + 32), v4);
        v17(v8, a2 + *(int *)(v16 + 32), v4);
        sub_254DCF10C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        char v12 = sub_254E157D8();
        uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
        v18(v8, v4);
        v18(v10, v4);
      }
    }
  }
  return v12 & 1;
}

unint64_t sub_254DC491C()
{
  unint64_t result = qword_269E14D30;
  if (!qword_269E14D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14D30);
  }
  return result;
}

unint64_t sub_254DC4974()
{
  unint64_t result = qword_269E14D38;
  if (!qword_269E14D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14D38);
  }
  return result;
}

uint64_t sub_254DC49C8()
{
  return sub_254DCF10C(&qword_269E14D40, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_254DC4A10()
{
  return sub_254DCF10C(&qword_269E122C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_254DC4A58()
{
  return sub_254DCF10C(&qword_269E14888, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_254DC4AA0()
{
  return sub_254DCF10C(&qword_269E14D48, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_254DC4AE8()
{
  return sub_254DCF10C(&qword_269E14D50, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier.Primitive);
}

uint64_t sub_254DC4B30()
{
  return sub_254DCF10C(&qword_269E14D58, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier.Primitive);
}

uint64_t sub_254DC4B78()
{
  return sub_254DCF10C(&qword_269E14890, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier.Primitive);
}

uint64_t sub_254DC4BC0()
{
  return sub_254DCF10C(&qword_269E14D60, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier.Primitive);
}

unint64_t sub_254DC4C0C()
{
  unint64_t result = qword_269E14D68;
  if (!qword_269E14D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14D68);
  }
  return result;
}

unint64_t sub_254DC4C64()
{
  unint64_t result = qword_269E14D70;
  if (!qword_269E14D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14D70);
  }
  return result;
}

uint64_t sub_254DC4CB8()
{
  return sub_254DCF10C(&qword_269E14D78, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
}

uint64_t sub_254DC4D00()
{
  return sub_254DCF10C(&qword_269E14D80, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
}

uint64_t sub_254DC4D48()
{
  return sub_254DCF10C(&qword_269E14898, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
}

uint64_t sub_254DC4D90()
{
  return sub_254DCF10C(&qword_269E14D88, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
}

uint64_t sub_254DC4DD8()
{
  return sub_254DCF10C(&qword_269E14D90, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol);
}

uint64_t sub_254DC4E20()
{
  return sub_254DCF10C(&qword_269E148E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol);
}

uint64_t sub_254DC4E68()
{
  return sub_254DCF10C(&qword_269E148A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol);
}

uint64_t sub_254DC4EB0()
{
  return sub_254DCF10C(&qword_269E14D98, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol);
}

uint64_t sub_254DC4EF8()
{
  return sub_254DCF10C(&qword_269E14DA0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity);
}

uint64_t sub_254DC4F40()
{
  return sub_254DCF10C(&qword_269E14DA8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity);
}

uint64_t sub_254DC4F88()
{
  return sub_254DCF10C(&qword_269E148A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity);
}

uint64_t sub_254DC4FD0()
{
  return sub_254DCF10C(&qword_269E14DB0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity);
}

uint64_t sub_254DC5018()
{
  return sub_254DCF10C(&qword_269E14DB8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema);
}

uint64_t sub_254DC5060()
{
  return sub_254DCF10C(&qword_269E14DC0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema);
}

uint64_t sub_254DC50A8()
{
  return sub_254DCF10C(&qword_269E148B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema);
}

uint64_t sub_254DC50F0()
{
  return sub_254DCF10C(&qword_269E14DC8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema);
}

uint64_t sub_254DC5138()
{
  return sub_254DCF10C(&qword_269E14DD0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable);
}

uint64_t sub_254DC5180()
{
  return sub_254DCF10C(&qword_269E14DD8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable);
}

uint64_t sub_254DC51C8()
{
  return sub_254DCF10C(&qword_269E148B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable);
}

uint64_t sub_254DC5210()
{
  return sub_254DCF10C(&qword_269E14DE0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable);
}

uint64_t sub_254DC5258()
{
  return sub_254DCF10C(&qword_269E14DE8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition);
}

uint64_t sub_254DC52A0()
{
  return sub_254DCF10C(&qword_269E14DF0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition);
}

uint64_t sub_254DC52E8()
{
  return sub_254DCF10C(&qword_269E148C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition);
}

uint64_t sub_254DC5330()
{
  return sub_254DCF10C(&qword_269E14DF8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition);
}

uint64_t sub_254DC5378()
{
  return sub_254DCF10C(&qword_269E14E00, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1);
}

uint64_t sub_254DC53C0()
{
  return sub_254DCF10C(&qword_269E122C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1);
}

uint64_t sub_254DC5408()
{
  return sub_254DCF10C(&qword_269E148C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1);
}

uint64_t sub_254DC5450()
{
  return sub_254DCF10C(&qword_269E14E08, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1);
}

uint64_t sub_254DC5498()
{
  return sub_254DCF10C(&qword_269E14E10, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity);
}

uint64_t sub_254DC54E0()
{
  return sub_254DCF10C(&qword_269E14E18, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity);
}

uint64_t sub_254DC5528()
{
  return sub_254DCF10C(&qword_269E148F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity);
}

uint64_t sub_254DC5570()
{
  return sub_254DCF10C(&qword_269E14E20, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity);
}

unint64_t sub_254DC55BC()
{
  unint64_t result = qword_269E14E28;
  if (!qword_269E14E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14E28);
  }
  return result;
}

unint64_t sub_254DC5614()
{
  unint64_t result = qword_269E14E30;
  if (!qword_269E14E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14E30);
  }
  return result;
}

uint64_t sub_254DC5668()
{
  return sub_254DCF10C(&qword_269E14E38, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_254DC56B0()
{
  return sub_254DCF10C(&qword_269E148D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_254DC56F8()
{
  return sub_254DCF10C(&qword_269E14900, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_254DC5740()
{
  return sub_254DCF10C(&qword_269E14E40, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_254DC5788()
{
  return sub_254DCF10C(&qword_269E14E48, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration);
}

uint64_t sub_254DC57D0()
{
  return sub_254DCF10C(&qword_269E14E50, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration);
}

uint64_t sub_254DC5818()
{
  return sub_254DCF10C(&qword_269E14910, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration);
}

uint64_t sub_254DC5860()
{
  return sub_254DCF10C(&qword_269E14E58, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration);
}

unint64_t sub_254DC58AC()
{
  unint64_t result = qword_269E14E60;
  if (!qword_269E14E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14E60);
  }
  return result;
}

unint64_t sub_254DC5904()
{
  unint64_t result = qword_269E14E68;
  if (!qword_269E14E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14E68);
  }
  return result;
}

uint64_t sub_254DC5958()
{
  return sub_254DCF10C(&qword_269E14E70, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
}

uint64_t sub_254DC59A0()
{
  return sub_254DCF10C(&qword_269E14908, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
}

uint64_t sub_254DC59E8()
{
  return sub_254DCF10C(&qword_269E14918, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
}

uint64_t sub_254DC5A30()
{
  return sub_254DCF10C(&qword_269E14E78, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
}

uint64_t sub_254DC5A78()
{
  return sub_254DCF10C(&qword_269E14E80, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query);
}

uint64_t sub_254DC5AC0()
{
  return sub_254DCF10C(&qword_269E14E88, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query);
}

uint64_t sub_254DC5B08()
{
  return sub_254DCF10C(&qword_269E14920, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query);
}

uint64_t sub_254DC5B50()
{
  return sub_254DCF10C(&qword_269E14E90, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query);
}

uint64_t sub_254DC5B98()
{
  return sub_254DCF10C(&qword_269E14E98, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
}

uint64_t sub_254DC5BE0()
{
  return sub_254DCF10C(&qword_269E14EA0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
}

uint64_t sub_254DC5C28()
{
  return sub_254DCF10C(&qword_269E14930, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
}

uint64_t sub_254DC5C70()
{
  return sub_254DCF10C(&qword_269E14EA8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
}

uint64_t sub_254DC5CB8()
{
  return sub_254DCF10C(&qword_269E14EB0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata);
}

uint64_t sub_254DC5D00()
{
  return sub_254DCF10C(&qword_269E14EB8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata);
}

uint64_t sub_254DC5D48()
{
  return sub_254DCF10C(&qword_269E14938, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata);
}

uint64_t sub_254DC5D90()
{
  return sub_254DCF10C(&qword_269E14EC0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates.PredicateMetadata);
}

uint64_t sub_254DC5DD8()
{
  return sub_254DCF10C(&qword_269E14EC8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t sub_254DC5E20()
{
  return sub_254DCF10C(&qword_269E0E510, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t sub_254DC5E68()
{
  return sub_254DCF10C(&qword_269E0E518, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t sub_254DC5EB0()
{
  return sub_254DCF10C(&qword_269E14ED0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t sub_254DC5EF8()
{
  return sub_254DCF10C(&qword_269E14ED8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.ID);
}

uint64_t sub_254DC5F40()
{
  return sub_254DCF10C(&qword_269E14EE0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.ID);
}

uint64_t sub_254DC5F88()
{
  return sub_254DCF10C(&qword_269E14940, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.ID);
}

uint64_t sub_254DC5FD0()
{
  return sub_254DCF10C(&qword_269E14EE8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.ID);
}

uint64_t sub_254DC6018()
{
  return sub_254DCF10C(&qword_269E14EF0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue);
}

uint64_t sub_254DC6060()
{
  return sub_254DCF10C(&qword_269E14EF8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue);
}

uint64_t sub_254DC60A8()
{
  return sub_254DCF10C(&qword_269E14948, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue);
}

uint64_t sub_254DC60F0()
{
  return sub_254DCF10C(&qword_269E14F00, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue);
}

uint64_t sub_254DC6138()
{
  return sub_254DCF10C(&qword_269E14F08, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
}

uint64_t sub_254DC6180()
{
  return sub_254DCF10C((unint64_t *)&qword_269E14F10, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
}

uint64_t sub_254DC61C8()
{
  return sub_254DCF10C(&qword_269E14950, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
}

uint64_t sub_254DC6210()
{
  return sub_254DCF10C(&qword_269E14F18, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
}

unint64_t sub_254DC625C()
{
  unint64_t result = qword_269E14F20;
  if (!qword_269E14F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14F20);
  }
  return result;
}

unint64_t sub_254DC62B4()
{
  unint64_t result = qword_269E14F28;
  if (!qword_269E14F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14F28);
  }
  return result;
}

uint64_t sub_254DC6308()
{
  return sub_254DCF10C(&qword_269E14F30, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Measurement);
}

uint64_t sub_254DC6350()
{
  return sub_254DCF10C(&qword_269E14F38, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Measurement);
}

uint64_t sub_254DC6398()
{
  return sub_254DCF10C(&qword_269E14958, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Measurement);
}

uint64_t sub_254DC63E0()
{
  return sub_254DCF10C(&qword_269E14F40, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Measurement);
}

uint64_t sub_254DC6428()
{
  return sub_254DCF10C(&qword_269E14F48, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount);
}

uint64_t sub_254DC6470()
{
  return sub_254DCF10C(&qword_269E14F50, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount);
}

uint64_t sub_254DC64B8()
{
  return sub_254DCF10C(&qword_269E14960, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount);
}

uint64_t sub_254DC6500()
{
  return sub_254DCF10C(&qword_269E14F58, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount);
}

uint64_t sub_254DC6548()
{
  return sub_254DCF10C(&qword_269E14F60, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod);
}

uint64_t sub_254DC6590()
{
  return sub_254DCF10C(&qword_269E14F68, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod);
}

uint64_t sub_254DC65D8()
{
  return sub_254DCF10C(&qword_269E14968, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod);
}

uint64_t sub_254DC6620()
{
  return sub_254DCF10C(&qword_269E14F70, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod);
}

unint64_t sub_254DC666C()
{
  unint64_t result = qword_269E14F78;
  if (!qword_269E14F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14F78);
  }
  return result;
}

unint64_t sub_254DC66C4()
{
  unint64_t result = qword_269E14F80;
  if (!qword_269E14F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14F80);
  }
  return result;
}

uint64_t sub_254DC6718()
{
  return sub_254DCF10C(&qword_269E14F88, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Placemark);
}

uint64_t sub_254DC6760()
{
  return sub_254DCF10C(&qword_269E14F90, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Placemark);
}

uint64_t sub_254DC67A8()
{
  return sub_254DCF10C(&qword_269E14970, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Placemark);
}

uint64_t sub_254DC67F0()
{
  return sub_254DCF10C(&qword_269E14F98, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Placemark);
}

uint64_t sub_254DC6838()
{
  return sub_254DCF10C(&qword_269E14FA0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Person);
}

uint64_t sub_254DC6880()
{
  return sub_254DCF10C(&qword_269E14FA8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Person);
}

uint64_t sub_254DC68C8()
{
  return sub_254DCF10C(&qword_269E14978, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Person);
}

uint64_t sub_254DC6910()
{
  return sub_254DCF10C(&qword_269E14FB0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Person);
}

uint64_t sub_254DC6958()
{
  return sub_254DCF10C(&qword_269E14FB8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.File);
}

uint64_t sub_254DC69A0()
{
  return sub_254DCF10C(&qword_269E14FC0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.File);
}

uint64_t sub_254DC69E8()
{
  return sub_254DCF10C(&qword_269E14980, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.File);
}

uint64_t sub_254DC6A30()
{
  return sub_254DCF10C(&qword_269E14FC8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.File);
}

uint64_t sub_254DC6A78()
{
  return sub_254DCF10C(&qword_269E14FD0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App);
}

uint64_t sub_254DC6AC0()
{
  return sub_254DCF10C(&qword_269E14FD8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App);
}

uint64_t sub_254DC6B08()
{
  return sub_254DCF10C(&qword_269E14988, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App);
}

uint64_t sub_254DC6B50()
{
  return sub_254DCF10C(&qword_269E14FE0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App);
}

uint64_t sub_254DC6B98()
{
  return sub_254DCF10C(&qword_269E14FE8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
}

uint64_t sub_254DC6BE0()
{
  return sub_254DCF10C(&qword_269E14FF0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
}

uint64_t sub_254DC6C28()
{
  return sub_254DCF10C(&qword_269E14990, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
}

uint64_t sub_254DC6C70()
{
  return sub_254DCF10C(&qword_269E14FF8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
}

unint64_t sub_254DC6CBC()
{
  unint64_t result = qword_269E15000;
  if (!qword_269E15000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15000);
  }
  return result;
}

unint64_t sub_254DC6D14()
{
  unint64_t result = qword_269E15008;
  if (!qword_269E15008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15008);
  }
  return result;
}

uint64_t sub_254DC6D68()
{
  return sub_254DCF10C(&qword_269E15010, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
}

uint64_t sub_254DC6DB0()
{
  return sub_254DCF10C(&qword_269E15018, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
}

uint64_t sub_254DC6DF8()
{
  return sub_254DCF10C(&qword_269E14998, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
}

uint64_t sub_254DC6E40()
{
  return sub_254DCF10C(&qword_269E15020, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
}

uint64_t sub_254DC6E88()
{
  return sub_254DCF10C(&qword_269E15028, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EnumerationValue);
}

uint64_t sub_254DC6ED0()
{
  return sub_254DCF10C(&qword_269E15030, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EnumerationValue);
}

uint64_t sub_254DC6F18()
{
  return sub_254DCF10C(&qword_269E149A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EnumerationValue);
}

uint64_t sub_254DC6F60()
{
  return sub_254DCF10C(&qword_269E15038, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EnumerationValue);
}

uint64_t sub_254DC6FA8()
{
  return sub_254DCF10C(&qword_269E15040, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EntityValue);
}

uint64_t sub_254DC6FF0()
{
  return sub_254DCF10C(&qword_269E15048, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EntityValue);
}

uint64_t sub_254DC7038()
{
  return sub_254DCF10C(&qword_269E149A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EntityValue);
}

uint64_t sub_254DC7080()
{
  return sub_254DCF10C(&qword_269E15050, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EntityValue);
}

uint64_t sub_254DC70C8()
{
  return sub_254DCF10C(&qword_269E15058, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.CollectionValue);
}

uint64_t sub_254DC7110()
{
  return sub_254DCF10C(&qword_269E15060, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.CollectionValue);
}

uint64_t sub_254DC7158()
{
  return sub_254DCF10C(&qword_269E149B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.CollectionValue);
}

uint64_t sub_254DC71A0()
{
  return sub_254DCF10C(&qword_269E15068, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.CollectionValue);
}

uint64_t sub_254DC71E8()
{
  return sub_254DCF10C(&qword_269E15070, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.QueryValue);
}

uint64_t sub_254DC7230()
{
  return sub_254DCF10C(&qword_269E15078, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.QueryValue);
}

uint64_t sub_254DC7278()
{
  return sub_254DCF10C(&qword_269E149B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.QueryValue);
}

uint64_t sub_254DC72C0()
{
  return sub_254DCF10C(&qword_269E15080, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.QueryValue);
}

uint64_t sub_254DC7308()
{
  return sub_254DCF10C(&qword_269E15088, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue);
}

uint64_t sub_254DC7350()
{
  return sub_254DCF10C(&qword_269E15090, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue);
}

uint64_t sub_254DC7398()
{
  return sub_254DCF10C(&qword_269E149C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue);
}

uint64_t sub_254DC73E0()
{
  return sub_254DCF10C(&qword_269E15098, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue);
}

uint64_t sub_254DC7428()
{
  return sub_254DCF10C(&qword_269E150A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue);
}

uint64_t sub_254DC7470()
{
  return sub_254DCF10C(&qword_269E150A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue);
}

uint64_t sub_254DC74B8()
{
  return sub_254DCF10C(&qword_269E149C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue);
}

uint64_t sub_254DC7500()
{
  return sub_254DCF10C(&qword_269E150B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue);
}

uint64_t sub_254DC7548()
{
  return sub_254DCF10C(&qword_269E150B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t sub_254DC7590()
{
  return sub_254DCF10C(&qword_269E150C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t sub_254DC75D8()
{
  return sub_254DCF10C(&qword_269E149D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t sub_254DC7620()
{
  return sub_254DCF10C(&qword_269E150C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t sub_254DC7668()
{
  return sub_254DCF10C(&qword_269E150D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
}

uint64_t sub_254DC76B0()
{
  return sub_254DCF10C(&qword_269E150D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
}

uint64_t sub_254DC76F8()
{
  return sub_254DCF10C(&qword_269E149D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
}

uint64_t sub_254DC7740()
{
  return sub_254DCF10C(&qword_269E150E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
}

uint64_t sub_254DC7788()
{
  return sub_254DCF10C(&qword_269E150E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t sub_254DC77D0()
{
  return sub_254DCF10C(&qword_269E10650, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t sub_254DC7818()
{
  return sub_254DCF10C(&qword_269E149E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t sub_254DC7860()
{
  return sub_254DCF10C(&qword_269E150F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t sub_254DC78A8()
{
  return sub_254DCF10C(&qword_269E150F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Optional);
}

uint64_t sub_254DC78F0()
{
  return sub_254DCF10C(&qword_269E15100, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Optional);
}

uint64_t sub_254DC7938()
{
  return sub_254DCF10C(&qword_269E149E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Optional);
}

uint64_t sub_254DC7980()
{
  return sub_254DCF10C(&qword_269E15108, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Optional);
}

uint64_t sub_254DC79C8()
{
  return sub_254DCF10C(&qword_269E15110, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Union);
}

uint64_t sub_254DC7A10()
{
  return sub_254DCF10C(&qword_269E15118, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Union);
}

uint64_t sub_254DC7A58()
{
  return sub_254DCF10C(&qword_269E149F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Union);
}

uint64_t sub_254DC7AA0()
{
  return sub_254DCF10C(&qword_269E15120, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Union);
}

uint64_t sub_254DC7AE8()
{
  return sub_254DCF10C(&qword_269E15128, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Restricted);
}

uint64_t sub_254DC7B30()
{
  return sub_254DCF10C(&qword_269E15130, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Restricted);
}

uint64_t sub_254DC7B78()
{
  return sub_254DCF10C(&qword_269E14A00, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Restricted);
}

uint64_t sub_254DC7BC0()
{
  return sub_254DCF10C(&qword_269E15138, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Restricted);
}

uint64_t sub_254DC7C08()
{
  return sub_254DCF10C(&qword_269E15140, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Deferred);
}

uint64_t sub_254DC7C50()
{
  return sub_254DCF10C(&qword_269E15148, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Deferred);
}

uint64_t sub_254DC7C98()
{
  return sub_254DCF10C(&qword_269E14A08, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Deferred);
}

uint64_t sub_254DC7CE0()
{
  return sub_254DCF10C(&qword_269E15150, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance.Deferred);
}

uint64_t sub_254DC7D28()
{
  return sub_254DCF10C(&qword_269E15158, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext);
}

uint64_t sub_254DC7D70()
{
  return sub_254DCF10C(&qword_269E149F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext);
}

uint64_t sub_254DC7DB8()
{
  return sub_254DCF10C(&qword_269E14A10, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext);
}

uint64_t sub_254DC7E00()
{
  return sub_254DCF10C(&qword_269E15160, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext);
}

unint64_t sub_254DC7E4C()
{
  unint64_t result = qword_269E15168;
  if (!qword_269E15168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15168);
  }
  return result;
}

unint64_t sub_254DC7EA4()
{
  unint64_t result = qword_269E15170;
  if (!qword_269E15170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15170);
  }
  return result;
}

unint64_t sub_254DC7EFC()
{
  unint64_t result = qword_269E15178;
  if (!qword_269E15178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15178);
  }
  return result;
}

unint64_t sub_254DC7F54()
{
  unint64_t result = qword_269E15180;
  if (!qword_269E15180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15180);
  }
  return result;
}

uint64_t sub_254DC7FA8()
{
  return sub_254DCF10C(&qword_269E15188, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet);
}

uint64_t sub_254DC7FF0()
{
  return sub_254DCF10C(&qword_269E15190, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet);
}

uint64_t sub_254DC8038()
{
  return sub_254DCF10C(&qword_269E14A18, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet);
}

uint64_t sub_254DC8080()
{
  return sub_254DCF10C(&qword_269E15198, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet);
}

uint64_t sub_254DC80C8()
{
  return sub_254DCF10C(&qword_269E151A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
}

uint64_t sub_254DC8110()
{
  return sub_254DCF10C(&qword_269E151A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
}

uint64_t sub_254DC8158()
{
  return sub_254DCF10C(&qword_269E14A20, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
}

uint64_t sub_254DC81A0()
{
  return sub_254DCF10C(&qword_269E151B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
}

uint64_t sub_254DC81E8()
{
  return sub_254DCF10C(&qword_269E151B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t sub_254DC8230()
{
  return sub_254DCF10C(&qword_269E151C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t sub_254DC8278()
{
  return sub_254DCF10C(&qword_269E14A28, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t sub_254DC82C0()
{
  return sub_254DCF10C(&qword_269E151C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t sub_254DC8308()
{
  return sub_254DCF10C(&qword_269E151D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
}

uint64_t sub_254DC8350()
{
  return sub_254DCF10C(&qword_269E151D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
}

uint64_t sub_254DC8398()
{
  return sub_254DCF10C(&qword_269E14A30, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
}

uint64_t sub_254DC83E0()
{
  return sub_254DCF10C(&qword_269E151E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
}

uint64_t sub_254DC8428()
{
  return sub_254DCF10C(&qword_269E151E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
}

uint64_t sub_254DC8470()
{
  return sub_254DCF10C(&qword_269E151F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
}

uint64_t sub_254DC84B8()
{
  return sub_254DCF10C(&qword_269E14A38, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
}

uint64_t sub_254DC8500()
{
  return sub_254DCF10C(&qword_269E151F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
}

uint64_t sub_254DC8548()
{
  return sub_254DCF10C(&qword_269E15200, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs);
}

uint64_t sub_254DC8590()
{
  return sub_254DCF10C(&qword_269E15208, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs);
}

uint64_t sub_254DC85D8()
{
  return sub_254DCF10C(&qword_269E14A40, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs);
}

uint64_t sub_254DC8620()
{
  return sub_254DCF10C(&qword_269E15210, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs);
}

uint64_t sub_254DC8668()
{
  return sub_254DCF10C(&qword_269E15218, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith);
}

uint64_t sub_254DC86B0()
{
  return sub_254DCF10C(&qword_269E15220, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith);
}

uint64_t sub_254DC86F8()
{
  return sub_254DCF10C(&qword_269E14A48, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith);
}

uint64_t sub_254DC8740()
{
  return sub_254DCF10C(&qword_269E15228, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith);
}

unint64_t sub_254DC878C()
{
  unint64_t result = qword_269E15230;
  if (!qword_269E15230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15230);
  }
  return result;
}

unint64_t sub_254DC87E4()
{
  unint64_t result = qword_269E15238;
  if (!qword_269E15238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15238);
  }
  return result;
}

unint64_t sub_254DC883C()
{
  unint64_t result = qword_269E15240;
  if (!qword_269E15240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15240);
  }
  return result;
}

unint64_t sub_254DC8894()
{
  unint64_t result = qword_269E15248;
  if (!qword_269E15248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15248);
  }
  return result;
}

unint64_t sub_254DC88EC()
{
  unint64_t result = qword_269E15250;
  if (!qword_269E15250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15250);
  }
  return result;
}

unint64_t sub_254DC8944()
{
  unint64_t result = qword_269E15258;
  if (!qword_269E15258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15258);
  }
  return result;
}

uint64_t sub_254DC8998()
{
  return sub_254DCF10C(&qword_269E15260, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t sub_254DC89E0()
{
  return sub_254DCF10C(&qword_269E15268, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t sub_254DC8A28()
{
  return sub_254DCF10C(&qword_269E14A50, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t sub_254DC8A70()
{
  return sub_254DCF10C(&qword_269E15270, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t sub_254DC8AB8()
{
  return sub_254DCF10C(&qword_269E15278, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
}

uint64_t sub_254DC8B00()
{
  return sub_254DCF10C(&qword_269E15280, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
}

uint64_t sub_254DC8B48()
{
  return sub_254DCF10C(&qword_269E14A58, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
}

uint64_t sub_254DC8B90()
{
  return sub_254DCF10C(&qword_269E15288, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
}

uint64_t sub_254DC8BD8()
{
  return sub_254DCF10C(&qword_269E15290, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

uint64_t sub_254DC8C20()
{
  return sub_254DCF10C(&qword_269E15298, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

uint64_t sub_254DC8C68()
{
  return sub_254DCF10C(&qword_269E14A60, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

uint64_t sub_254DC8CB0()
{
  return sub_254DCF10C(&qword_269E152A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

uint64_t sub_254DC8CF8()
{
  return sub_254DCF10C(&qword_269E152A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_254DC8D40()
{
  return sub_254DCF10C(&qword_269E14A90, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_254DC8D88()
{
  return sub_254DCF10C(&qword_269E14A68, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_254DC8DD0()
{
  return sub_254DCF10C(&qword_269E152B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_254DC8E18()
{
  return sub_254DCF10C(&qword_269E152B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t sub_254DC8E60()
{
  return sub_254DCF10C(&qword_269E152C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t sub_254DC8EA8()
{
  return sub_254DCF10C(&qword_269E14A70, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t sub_254DC8EF0()
{
  return sub_254DCF10C(&qword_269E152C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t sub_254DC8F38()
{
  return sub_254DCF10C(&qword_269E152D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair);
}

uint64_t sub_254DC8F80()
{
  return sub_254DCF10C(&qword_269E152D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair);
}

uint64_t sub_254DC8FC8()
{
  return sub_254DCF10C(&qword_269E14A78, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair);
}

uint64_t sub_254DC9010()
{
  return sub_254DCF10C(&qword_269E152E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair);
}

uint64_t sub_254DC9058()
{
  return sub_254DCF10C(&qword_269E152E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_254DC90A0()
{
  return sub_254DCF10C(&qword_269E152F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_254DC90E8()
{
  return sub_254DCF10C(&qword_269E14A80, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_254DC9130()
{
  return sub_254DCF10C(&qword_269E152F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_254DC9178()
{
  return sub_254DCF10C(&qword_269E15300, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_254DC91C0()
{
  return sub_254DCF10C(&qword_269E14928, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_254DC9208()
{
  return sub_254DCF10C(&qword_269E14A88, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_254DC9250()
{
  return sub_254DCF10C(&qword_269E15308, (void (*)(uint64_t))type metadata accessor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_254DC9298()
{
  return sub_254DCF10C(&qword_269E15310, (void (*)(uint64_t))type metadata accessor for ToolKitProtoCompoundPredicate);
}

uint64_t sub_254DC92E0()
{
  return sub_254DCF10C(&qword_269E15318, (void (*)(uint64_t))type metadata accessor for ToolKitProtoCompoundPredicate);
}

uint64_t sub_254DC9328()
{
  return sub_254DCF10C(&qword_269E14A98, (void (*)(uint64_t))type metadata accessor for ToolKitProtoCompoundPredicate);
}

uint64_t sub_254DC9370()
{
  return sub_254DCF10C(&qword_269E15320, (void (*)(uint64_t))type metadata accessor for ToolKitProtoCompoundPredicate);
}

unint64_t sub_254DC93BC()
{
  unint64_t result = qword_269E15328;
  if (!qword_269E15328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15328);
  }
  return result;
}

unint64_t sub_254DC9414()
{
  unint64_t result = qword_269E15330;
  if (!qword_269E15330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15330);
  }
  return result;
}

uint64_t sub_254DC9468()
{
  return sub_254DCF10C(&qword_269E15338, (void (*)(uint64_t))type metadata accessor for ToolKitProtoStringSearchPredicate);
}

uint64_t sub_254DC94B0()
{
  return sub_254DCF10C(&qword_269E15340, (void (*)(uint64_t))type metadata accessor for ToolKitProtoStringSearchPredicate);
}

uint64_t sub_254DC94F8()
{
  return sub_254DCF10C(&qword_269E14AA0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoStringSearchPredicate);
}

uint64_t sub_254DC9540()
{
  return sub_254DCF10C(&qword_269E15348, (void (*)(uint64_t))type metadata accessor for ToolKitProtoStringSearchPredicate);
}

uint64_t sub_254DC9588()
{
  return sub_254DCF10C(&qword_269E15350, (void (*)(uint64_t))type metadata accessor for ToolKitProtoStringSearchPredicate.Template);
}

uint64_t sub_254DC95D0()
{
  return sub_254DCF10C(&qword_269E15358, (void (*)(uint64_t))type metadata accessor for ToolKitProtoStringSearchPredicate.Template);
}

uint64_t sub_254DC9618()
{
  return sub_254DCF10C(&qword_269E14AA8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoStringSearchPredicate.Template);
}

uint64_t sub_254DC9660()
{
  return sub_254DCF10C(&qword_269E15360, (void (*)(uint64_t))type metadata accessor for ToolKitProtoStringSearchPredicate.Template);
}

uint64_t sub_254DC96A8()
{
  return sub_254DCF10C(&qword_269E15368, (void (*)(uint64_t))type metadata accessor for ToolKitProtoIdSearchPredicate);
}

uint64_t sub_254DC96F0()
{
  return sub_254DCF10C(&qword_269E15370, (void (*)(uint64_t))type metadata accessor for ToolKitProtoIdSearchPredicate);
}

uint64_t sub_254DC9738()
{
  return sub_254DCF10C(&qword_269E14AB0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoIdSearchPredicate);
}

uint64_t sub_254DC9780()
{
  return sub_254DCF10C(&qword_269E15378, (void (*)(uint64_t))type metadata accessor for ToolKitProtoIdSearchPredicate);
}

uint64_t sub_254DC97C8()
{
  return sub_254DCF10C(&qword_269E15380, (void (*)(uint64_t))type metadata accessor for ToolKitProtoIdSearchPredicate.Template);
}

uint64_t sub_254DC9810()
{
  return sub_254DCF10C(&qword_269E15388, (void (*)(uint64_t))type metadata accessor for ToolKitProtoIdSearchPredicate.Template);
}

uint64_t sub_254DC9858()
{
  return sub_254DCF10C(&qword_269E14AB8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoIdSearchPredicate.Template);
}

uint64_t sub_254DC98A0()
{
  return sub_254DCF10C(&qword_269E15390, (void (*)(uint64_t))type metadata accessor for ToolKitProtoIdSearchPredicate.Template);
}

uint64_t sub_254DC98E8()
{
  return sub_254DCF10C(&qword_269E15398, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSearchableItemPredicate);
}

uint64_t sub_254DC9930()
{
  return sub_254DCF10C(&qword_269E153A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSearchableItemPredicate);
}

uint64_t sub_254DC9978()
{
  return sub_254DCF10C(&qword_269E14AC0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSearchableItemPredicate);
}

uint64_t sub_254DC99C0()
{
  return sub_254DCF10C(&qword_269E153A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSearchableItemPredicate);
}

uint64_t sub_254DC9A08()
{
  return sub_254DCF10C(&qword_269E153B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSearchableItemPredicate.Template);
}

uint64_t sub_254DC9A50()
{
  return sub_254DCF10C(&qword_269E153B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSearchableItemPredicate.Template);
}

uint64_t sub_254DC9A98()
{
  return sub_254DCF10C(&qword_269E14AC8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSearchableItemPredicate.Template);
}

uint64_t sub_254DC9AE0()
{
  return sub_254DCF10C(&qword_269E153C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSearchableItemPredicate.Template);
}

uint64_t sub_254DC9B28()
{
  return sub_254DCF10C(&qword_269E153C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAllPredicate);
}

uint64_t sub_254DC9B70()
{
  return sub_254DCF10C(&qword_269E153D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAllPredicate);
}

uint64_t sub_254DC9BB8()
{
  return sub_254DCF10C(&qword_269E14AD0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAllPredicate);
}

uint64_t sub_254DC9C00()
{
  return sub_254DCF10C(&qword_269E153D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAllPredicate);
}

uint64_t sub_254DC9C48()
{
  return sub_254DCF10C(&qword_269E153E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoValidPredicate);
}

uint64_t sub_254DC9C90()
{
  return sub_254DCF10C(&qword_269E153E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoValidPredicate);
}

uint64_t sub_254DC9CD8()
{
  return sub_254DCF10C(&qword_269E14AD8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoValidPredicate);
}

uint64_t sub_254DC9D20()
{
  return sub_254DCF10C(&qword_269E153F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoValidPredicate);
}

uint64_t sub_254DC9D68()
{
  return sub_254DCF10C(&qword_269E153F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSuggestedPredicate);
}

uint64_t sub_254DC9DB0()
{
  return sub_254DCF10C(&qword_269E15400, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSuggestedPredicate);
}

uint64_t sub_254DC9DF8()
{
  return sub_254DCF10C(&qword_269E14AE0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSuggestedPredicate);
}

uint64_t sub_254DC9E40()
{
  return sub_254DCF10C(&qword_269E15408, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSuggestedPredicate);
}

uint64_t sub_254DC9E88()
{
  return sub_254DCF10C(&qword_269E15410, (void (*)(uint64_t))type metadata accessor for ToolKitProtoQuery);
}

uint64_t sub_254DC9ED0()
{
  return sub_254DCF10C(&qword_269E15418, (void (*)(uint64_t))type metadata accessor for ToolKitProtoQuery);
}

uint64_t sub_254DC9F18()
{
  return sub_254DCF10C(&qword_269E14AE8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoQuery);
}

uint64_t sub_254DC9F60()
{
  return sub_254DCF10C(&qword_269E15420, (void (*)(uint64_t))type metadata accessor for ToolKitProtoQuery);
}

unint64_t sub_254DC9FAC()
{
  unint64_t result = qword_269E15428;
  if (!qword_269E15428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15428);
  }
  return result;
}

unint64_t sub_254DCA004()
{
  unint64_t result = qword_269E15430;
  if (!qword_269E15430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15430);
  }
  return result;
}

uint64_t sub_254DCA058()
{
  return sub_254DCF10C(&qword_269E15438, (void (*)(uint64_t))type metadata accessor for ToolKitProtoQuery.AnyPredicate);
}

uint64_t sub_254DCA0A0()
{
  return sub_254DCF10C(&qword_269E15440, (void (*)(uint64_t))type metadata accessor for ToolKitProtoQuery.AnyPredicate);
}

uint64_t sub_254DCA0E8()
{
  return sub_254DCF10C(&qword_269E14AF0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoQuery.AnyPredicate);
}

uint64_t sub_254DCA130()
{
  return sub_254DCF10C(&qword_269E15448, (void (*)(uint64_t))type metadata accessor for ToolKitProtoQuery.AnyPredicate);
}

uint64_t sub_254DCA178()
{
  return sub_254DCF10C(&qword_269E15450, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_254DCA1C0()
{
  return sub_254DCF10C(&qword_269E15458, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_254DCA208()
{
  return sub_254DCF10C(&qword_269E14AF8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_254DCA250()
{
  return sub_254DCF10C(&qword_269E15460, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_254DCA298()
{
  return sub_254DCF10C(&qword_269E15468, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement);
}

uint64_t sub_254DCA2E0()
{
  return sub_254DCF10C(&qword_269E148D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement);
}

uint64_t sub_254DCA328()
{
  return sub_254DCF10C(&qword_269E14B00, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement);
}

uint64_t sub_254DCA370()
{
  return sub_254DCF10C(&qword_269E15470, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement);
}

unint64_t sub_254DCA3BC()
{
  unint64_t result = qword_269E15478;
  if (!qword_269E15478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15478);
  }
  return result;
}

unint64_t sub_254DCA414()
{
  unint64_t result = qword_269E15480;
  if (!qword_269E15480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15480);
  }
  return result;
}

uint64_t sub_254DCA468()
{
  return sub_254DCF10C(&qword_269E15488, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
}

uint64_t sub_254DCA4B0()
{
  return sub_254DCF10C(&qword_269E15490, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
}

uint64_t sub_254DCA4F8()
{
  return sub_254DCF10C(&qword_269E14B08, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
}

uint64_t sub_254DCA540()
{
  return sub_254DCF10C(&qword_269E15498, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
}

uint64_t sub_254DCA588()
{
  return sub_254DCF10C(&qword_269E154A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
}

uint64_t sub_254DCA5D0()
{
  return sub_254DCF10C(&qword_269E154A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
}

uint64_t sub_254DCA618()
{
  return sub_254DCF10C(&qword_269E14B10, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
}

uint64_t sub_254DCA660()
{
  return sub_254DCF10C(&qword_269E154B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
}

unint64_t sub_254DCA6AC()
{
  unint64_t result = qword_269E154B8;
  if (!qword_269E154B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E154B8);
  }
  return result;
}

unint64_t sub_254DCA704()
{
  unint64_t result = qword_269E154C0;
  if (!qword_269E154C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E154C0);
  }
  return result;
}

uint64_t sub_254DCA758()
{
  return sub_254DCF10C(&qword_269E154C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
}

uint64_t sub_254DCA7A0()
{
  return sub_254DCF10C(&qword_269E154D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
}

uint64_t sub_254DCA7E8()
{
  return sub_254DCF10C(&qword_269E14B18, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
}

uint64_t sub_254DCA830()
{
  return sub_254DCF10C(&qword_269E154D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
}

uint64_t sub_254DCA878()
{
  return sub_254DCF10C(&qword_269E154E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag);
}

uint64_t sub_254DCA8C0()
{
  return sub_254DCF10C(&qword_269E154E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag);
}

uint64_t sub_254DCA908()
{
  return sub_254DCF10C(&qword_269E14B20, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag);
}

uint64_t sub_254DCA950()
{
  return sub_254DCF10C(&qword_269E154F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag);
}

uint64_t sub_254DCA998()
{
  return sub_254DCF10C(&qword_269E154F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolSummaryString);
}

uint64_t sub_254DCA9E0()
{
  return sub_254DCF10C(&qword_269E15500, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolSummaryString);
}

uint64_t sub_254DCAA28()
{
  return sub_254DCF10C(&qword_269E14B30, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolSummaryString);
}

uint64_t sub_254DCAA70()
{
  return sub_254DCF10C(&qword_269E15508, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolSummaryString);
}

uint64_t sub_254DCAAB8()
{
  return sub_254DCF10C(&qword_269E15510, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolSummaryString.Component);
}

uint64_t sub_254DCAB00()
{
  return sub_254DCF10C(&qword_269E14B28, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolSummaryString.Component);
}

uint64_t sub_254DCAB48()
{
  return sub_254DCF10C(&qword_269E14B38, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolSummaryString.Component);
}

uint64_t sub_254DCAB90()
{
  return sub_254DCF10C(&qword_269E15518, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolSummaryString.Component);
}

uint64_t sub_254DCABD8()
{
  return sub_254DCF10C(&qword_269E15520, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolInvocationSignature);
}

uint64_t sub_254DCAC20()
{
  return sub_254DCF10C(&qword_269E15528, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolInvocationSignature);
}

uint64_t sub_254DCAC68()
{
  return sub_254DCF10C(&qword_269E14B50, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolInvocationSignature);
}

uint64_t sub_254DCACB0()
{
  return sub_254DCF10C(&qword_269E15530, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolInvocationSignature);
}

uint64_t sub_254DCACF8()
{
  return sub_254DCF10C(&qword_269E15538, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

uint64_t sub_254DCAD40()
{
  return sub_254DCF10C(&qword_269E14B40, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

uint64_t sub_254DCAD88()
{
  return sub_254DCF10C(&qword_269E14B48, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

uint64_t sub_254DCADD0()
{
  return sub_254DCF10C(&qword_269E15540, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

uint64_t sub_254DCAE18()
{
  return sub_254DCF10C(&qword_269E15548, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSampleInvocationDefinition);
}

uint64_t sub_254DCAE60()
{
  return sub_254DCF10C(&qword_269E148E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSampleInvocationDefinition);
}

uint64_t sub_254DCAEA8()
{
  return sub_254DCF10C(&qword_269E14B60, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSampleInvocationDefinition);
}

uint64_t sub_254DCAEF0()
{
  return sub_254DCF10C(&qword_269E15550, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSampleInvocationDefinition);
}

uint64_t sub_254DCAF38()
{
  return sub_254DCF10C(&qword_269E15558, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t sub_254DCAF80()
{
  return sub_254DCF10C(&qword_269E15560, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t sub_254DCAFC8()
{
  return sub_254DCF10C(&qword_269E14B68, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t sub_254DCB010()
{
  return sub_254DCF10C(&qword_269E15568, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t sub_254DCB058()
{
  return sub_254DCF10C(&qword_269E15570, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_254DCB0A0()
{
  return sub_254DCF10C(&qword_269E122D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_254DCB0E8()
{
  return sub_254DCF10C(&qword_269E14B70, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_254DCB130()
{
  return sub_254DCF10C(&qword_269E15578, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_254DCB178()
{
  return sub_254DCF10C(&qword_269E15580, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition);
}

uint64_t sub_254DCB1C0()
{
  return sub_254DCF10C(&qword_269E15588, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition);
}

uint64_t sub_254DCB208()
{
  return sub_254DCF10C(&qword_269E14B80, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition);
}

uint64_t sub_254DCB250()
{
  return sub_254DCF10C(&qword_269E15590, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition);
}

uint64_t sub_254DCB298()
{
  return sub_254DCF10C(&qword_269E15598, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition);
}

uint64_t sub_254DCB2E0()
{
  return sub_254DCF10C(&qword_269E155A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition);
}

uint64_t sub_254DCB328()
{
  return sub_254DCF10C(&qword_269E14B88, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition);
}

uint64_t sub_254DCB370()
{
  return sub_254DCF10C(&qword_269E155A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition);
}

uint64_t sub_254DCB3B8()
{
  return sub_254DCF10C(&qword_269E155B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
}

uint64_t sub_254DCB400()
{
  return sub_254DCF10C(&qword_269E155B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
}

uint64_t sub_254DCB448()
{
  return sub_254DCF10C(&qword_269E14B90, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
}

uint64_t sub_254DCB490()
{
  return sub_254DCF10C(&qword_269E155C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
}

uint64_t sub_254DCB4D8()
{
  return sub_254DCF10C(&qword_269E155C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
}

uint64_t sub_254DCB520()
{
  return sub_254DCF10C(&qword_269E155D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
}

uint64_t sub_254DCB568()
{
  return sub_254DCF10C(&qword_269E14B98, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
}

uint64_t sub_254DCB5B0()
{
  return sub_254DCF10C(&qword_269E155D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
}

uint64_t sub_254DCB5F8()
{
  return sub_254DCF10C(&qword_269E155E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol);
}

uint64_t sub_254DCB640()
{
  return sub_254DCF10C(&qword_269E14C08, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol);
}

uint64_t sub_254DCB688()
{
  return sub_254DCF10C(&qword_269E14BA0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol);
}

uint64_t sub_254DCB6D0()
{
  return sub_254DCF10C(&qword_269E155E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol);
}

uint64_t sub_254DCB718()
{
  return sub_254DCF10C(&qword_269E155F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
}

uint64_t sub_254DCB760()
{
  return sub_254DCF10C(&qword_269E155F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
}

uint64_t sub_254DCB7A8()
{
  return sub_254DCF10C(&qword_269E14BA8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
}

uint64_t sub_254DCB7F0()
{
  return sub_254DCF10C(&qword_269E15600, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
}

uint64_t sub_254DCB838()
{
  return sub_254DCF10C(&qword_269E15608, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
}

uint64_t sub_254DCB880()
{
  return sub_254DCF10C(&qword_269E15610, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
}

uint64_t sub_254DCB8C8()
{
  return sub_254DCF10C(&qword_269E14BB0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
}

uint64_t sub_254DCB910()
{
  return sub_254DCF10C(&qword_269E15618, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
}

uint64_t sub_254DCB958()
{
  return sub_254DCF10C(&qword_269E15620, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
}

uint64_t sub_254DCB9A0()
{
  return sub_254DCF10C(&qword_269E15628, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
}

uint64_t sub_254DCB9E8()
{
  return sub_254DCF10C(&qword_269E14BB8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
}

uint64_t sub_254DCBA30()
{
  return sub_254DCF10C(&qword_269E15630, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
}

uint64_t sub_254DCBA78()
{
  return sub_254DCF10C(&qword_269E15638, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
}

uint64_t sub_254DCBAC0()
{
  return sub_254DCF10C(&qword_269E15640, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
}

uint64_t sub_254DCBB08()
{
  return sub_254DCF10C(&qword_269E14BC0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
}

uint64_t sub_254DCBB50()
{
  return sub_254DCF10C(&qword_269E15648, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
}

uint64_t sub_254DCBB98()
{
  return sub_254DCF10C(&qword_269E15650, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
}

uint64_t sub_254DCBBE0()
{
  return sub_254DCF10C(&qword_269E15658, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
}

uint64_t sub_254DCBC28()
{
  return sub_254DCF10C(&qword_269E14BC8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
}

uint64_t sub_254DCBC70()
{
  return sub_254DCF10C(&qword_269E15660, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
}

uint64_t sub_254DCBCB8()
{
  return sub_254DCF10C(&qword_269E15668, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
}

uint64_t sub_254DCBD00()
{
  return sub_254DCF10C(&qword_269E15670, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
}

uint64_t sub_254DCBD48()
{
  return sub_254DCF10C(&qword_269E14BD0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
}

uint64_t sub_254DCBD90()
{
  return sub_254DCF10C(&qword_269E15678, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
}

uint64_t sub_254DCBDD8()
{
  return sub_254DCF10C(&qword_269E15680, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
}

uint64_t sub_254DCBE20()
{
  return sub_254DCF10C(&qword_269E15688, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
}

uint64_t sub_254DCBE68()
{
  return sub_254DCF10C(&qword_269E14BD8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
}

uint64_t sub_254DCBEB0()
{
  return sub_254DCF10C(&qword_269E15690, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
}

uint64_t sub_254DCBEF8()
{
  return sub_254DCF10C(&qword_269E15698, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
}

uint64_t sub_254DCBF40()
{
  return sub_254DCF10C(&qword_269E156A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
}

uint64_t sub_254DCBF88()
{
  return sub_254DCF10C(&qword_269E14BE0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
}

uint64_t sub_254DCBFD0()
{
  return sub_254DCF10C(&qword_269E156A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
}

uint64_t sub_254DCC018()
{
  return sub_254DCF10C(&qword_269E156B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
}

uint64_t sub_254DCC060()
{
  return sub_254DCF10C(&qword_269E156B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
}

uint64_t sub_254DCC0A8()
{
  return sub_254DCF10C(&qword_269E14BE8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
}

uint64_t sub_254DCC0F0()
{
  return sub_254DCF10C(&qword_269E156C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
}

uint64_t sub_254DCC138()
{
  return sub_254DCF10C(&qword_269E156C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol);
}

uint64_t sub_254DCC180()
{
  return sub_254DCF10C(&qword_269E156D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol);
}

uint64_t sub_254DCC1C8()
{
  return sub_254DCF10C(&qword_269E14BF0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol);
}

uint64_t sub_254DCC210()
{
  return sub_254DCF10C(&qword_269E156D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoSystemToolProtocol.SynthesizedToolProtocol);
}

uint64_t sub_254DCC258()
{
  return sub_254DCF10C(&qword_269E156E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition);
}

uint64_t sub_254DCC2A0()
{
  return sub_254DCF10C(&qword_269E156E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition);
}

uint64_t sub_254DCC2E8()
{
  return sub_254DCF10C(&qword_269E14BF8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition);
}

uint64_t sub_254DCC330()
{
  return sub_254DCF10C(&qword_269E156F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition);
}

uint64_t sub_254DCC378()
{
  return sub_254DCF10C(&qword_269E156F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1);
}

uint64_t sub_254DCC3C0()
{
  return sub_254DCF10C(&qword_269E0E4A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1);
}

uint64_t sub_254DCC408()
{
  return sub_254DCF10C(&qword_269E14C18, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1);
}

uint64_t sub_254DCC450()
{
  return sub_254DCF10C(&qword_269E15700, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1);
}

unint64_t sub_254DCC49C()
{
  unint64_t result = qword_269E15708;
  if (!qword_269E15708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15708);
  }
  return result;
}

unint64_t sub_254DCC4F4()
{
  unint64_t result = qword_269E15710;
  if (!qword_269E15710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15710);
  }
  return result;
}

unint64_t sub_254DCC54C()
{
  unint64_t result = qword_269E15718;
  if (!qword_269E15718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15718);
  }
  return result;
}

unint64_t sub_254DCC5A4()
{
  unint64_t result = qword_269E15720;
  if (!qword_269E15720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15720);
  }
  return result;
}

unint64_t sub_254DCC5FC()
{
  unint64_t result = qword_269E15728;
  if (!qword_269E15728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15728);
  }
  return result;
}

unint64_t sub_254DCC654()
{
  unint64_t result = qword_269E15730;
  if (!qword_269E15730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15730);
  }
  return result;
}

unint64_t sub_254DCC6AC()
{
  unint64_t result = qword_269E15738;
  if (!qword_269E15738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15738);
  }
  return result;
}

unint64_t sub_254DCC704()
{
  unint64_t result = qword_269E15740;
  if (!qword_269E15740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15740);
  }
  return result;
}

uint64_t sub_254DCC758()
{
  return sub_254DCF10C(&qword_269E15748, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter);
}

uint64_t sub_254DCC7A0()
{
  return sub_254DCF10C(&qword_269E14B78, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter);
}

uint64_t sub_254DCC7E8()
{
  return sub_254DCF10C(&qword_269E14C28, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter);
}

uint64_t sub_254DCC830()
{
  return sub_254DCF10C(&qword_269E15750, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter);
}

unint64_t sub_254DCC87C()
{
  unint64_t result = qword_269E15758;
  if (!qword_269E15758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15758);
  }
  return result;
}

unint64_t sub_254DCC8D4()
{
  unint64_t result = qword_269E15760;
  if (!qword_269E15760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15760);
  }
  return result;
}

uint64_t sub_254DCC928()
{
  return sub_254DCF10C(&qword_269E15768, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
}

uint64_t sub_254DCC970()
{
  return sub_254DCF10C(&qword_269E14C20, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
}

uint64_t sub_254DCC9B8()
{
  return sub_254DCF10C(&qword_269E14C30, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
}

uint64_t sub_254DCCA00()
{
  return sub_254DCF10C(&qword_269E15770, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
}

uint64_t sub_254DCCA48()
{
  return sub_254DCF10C(&qword_269E15778, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t sub_254DCCA90()
{
  return sub_254DCF10C(&qword_269E14B58, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t sub_254DCCAD8()
{
  return sub_254DCF10C(&qword_269E14C38, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t sub_254DCCB20()
{
  return sub_254DCF10C(&qword_269E15780, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t sub_254DCCB68()
{
  return sub_254DCF10C(&qword_269E15788, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
}

uint64_t sub_254DCCBB0()
{
  return sub_254DCF10C(&qword_269E15790, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
}

uint64_t sub_254DCCBF8()
{
  return sub_254DCF10C(&qword_269E14C40, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
}

uint64_t sub_254DCCC40()
{
  return sub_254DCF10C(&qword_269E15798, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
}

uint64_t sub_254DCCC88()
{
  return sub_254DCF10C(&qword_269E157A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
}

uint64_t sub_254DCCCD0()
{
  return sub_254DCF10C(&qword_269E157A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
}

uint64_t sub_254DCCD18()
{
  return sub_254DCF10C(&qword_269E14C48, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
}

uint64_t sub_254DCCD60()
{
  return sub_254DCF10C(&qword_269E157B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
}

uint64_t sub_254DCCDA8()
{
  return sub_254DCF10C(&qword_269E157B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
}

uint64_t sub_254DCCDF0()
{
  return sub_254DCF10C(&qword_269E157C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
}

uint64_t sub_254DCCE38()
{
  return sub_254DCF10C(&qword_269E14C50, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
}

uint64_t sub_254DCCE80()
{
  return sub_254DCF10C(&qword_269E157C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
}

uint64_t sub_254DCCEC8()
{
  return sub_254DCF10C(&qword_269E157D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
}

uint64_t sub_254DCCF10()
{
  return sub_254DCF10C(&qword_269E157D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
}

uint64_t sub_254DCCF58()
{
  return sub_254DCF10C(&qword_269E14C58, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
}

uint64_t sub_254DCCFA0()
{
  return sub_254DCF10C(&qword_269E157E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
}

uint64_t sub_254DCCFE8()
{
  return sub_254DCF10C(&qword_269E157E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
}

uint64_t sub_254DCD030()
{
  return sub_254DCF10C(&qword_269E157F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
}

uint64_t sub_254DCD078()
{
  return sub_254DCF10C(&qword_269E14C60, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
}

uint64_t sub_254DCD0C0()
{
  return sub_254DCF10C(&qword_269E157F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
}

uint64_t sub_254DCD108()
{
  return sub_254DCF10C(&qword_269E15800, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
}

uint64_t sub_254DCD150()
{
  return sub_254DCF10C(&qword_269E15808, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
}

uint64_t sub_254DCD198()
{
  return sub_254DCF10C(&qword_269E14C68, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
}

uint64_t sub_254DCD1E0()
{
  return sub_254DCF10C(&qword_269E15810, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
}

uint64_t sub_254DCD228()
{
  return sub_254DCF10C(&qword_269E15818, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
}

uint64_t sub_254DCD270()
{
  return sub_254DCF10C(&qword_269E15820, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
}

uint64_t sub_254DCD2B8()
{
  return sub_254DCF10C(&qword_269E14C70, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
}

uint64_t sub_254DCD300()
{
  return sub_254DCF10C(&qword_269E15828, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.ToolMetadata);
}

uint64_t sub_254DCD348()
{
  return sub_254DCF10C(&qword_269E15830, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
}

uint64_t sub_254DCD390()
{
  return sub_254DCF10C(&qword_269E14C00, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
}

uint64_t sub_254DCD3D8()
{
  return sub_254DCF10C(&qword_269E14C78, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
}

uint64_t sub_254DCD420()
{
  return sub_254DCF10C(&qword_269E15838, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
}

uint64_t sub_254DCD468()
{
  return sub_254DCF10C(&qword_269E15840, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
}

uint64_t sub_254DCD4B0()
{
  return sub_254DCF10C(&qword_269E15848, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
}

uint64_t sub_254DCD4F8()
{
  return sub_254DCF10C(&qword_269E14C80, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
}

uint64_t sub_254DCD540()
{
  return sub_254DCF10C(&qword_269E15850, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
}

unint64_t sub_254DCD58C()
{
  unint64_t result = qword_269E15858;
  if (!qword_269E15858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15858);
  }
  return result;
}

unint64_t sub_254DCD5E4()
{
  unint64_t result = qword_269E15860;
  if (!qword_269E15860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15860);
  }
  return result;
}

uint64_t sub_254DCD638()
{
  return sub_254DCF10C(&qword_269E15868, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
}

uint64_t sub_254DCD680()
{
  return sub_254DCF10C(&qword_269E15870, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
}

uint64_t sub_254DCD6C8()
{
  return sub_254DCF10C(&qword_269E14C88, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
}

uint64_t sub_254DCD710()
{
  return sub_254DCF10C(&qword_269E15878, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
}

uint64_t sub_254DCD758()
{
  return sub_254DCF10C(&qword_269E15880, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset);
}

uint64_t sub_254DCD7A0()
{
  return sub_254DCF10C(&qword_269E15888, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset);
}

uint64_t sub_254DCD7E8()
{
  return sub_254DCF10C(&qword_269E14C90, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset);
}

uint64_t sub_254DCD830()
{
  return sub_254DCF10C(&qword_269E15890, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolExternalAsset);
}

uint64_t sub_254DCD878()
{
  return sub_254DCF10C(&qword_269E15898, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_254DCD8C0()
{
  return sub_254DCF10C(&qword_269E158A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_254DCD908()
{
  return sub_254DCF10C(&qword_269E14C98, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_254DCD950()
{
  return sub_254DCF10C(&qword_269E158A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_254DCD998()
{
  return sub_254DCF10C(&qword_269E158B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAppDefinition);
}

uint64_t sub_254DCD9E0()
{
  return sub_254DCF10C(&qword_269E158B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAppDefinition);
}

uint64_t sub_254DCDA28()
{
  return sub_254DCF10C(&qword_269E14CA0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAppDefinition);
}

uint64_t sub_254DCDA70()
{
  return sub_254DCF10C(&qword_269E158C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAppDefinition);
}

unint64_t sub_254DCDABC()
{
  unint64_t result = qword_269E158C8;
  if (!qword_269E158C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E158C8);
  }
  return result;
}

unint64_t sub_254DCDB14()
{
  unint64_t result = qword_269E158D0;
  if (!qword_269E158D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E158D0);
  }
  return result;
}

uint64_t sub_254DCDB68()
{
  return sub_254DCF10C(&qword_269E158D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAppDefinition.Device);
}

uint64_t sub_254DCDBB0()
{
  return sub_254DCF10C(&qword_269E158E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAppDefinition.Device);
}

uint64_t sub_254DCDBF8()
{
  return sub_254DCF10C(&qword_269E14CA8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAppDefinition.Device);
}

uint64_t sub_254DCDC40()
{
  return sub_254DCF10C(&qword_269E158E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoAppDefinition.Device);
}

uint64_t sub_254DCDC88()
{
  return sub_254DCF10C(&qword_269E158F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContainerDefinition);
}

uint64_t sub_254DCDCD0()
{
  return sub_254DCF10C(&qword_269E14C10, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContainerDefinition);
}

uint64_t sub_254DCDD18()
{
  return sub_254DCF10C(&qword_269E14CB0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContainerDefinition);
}

uint64_t sub_254DCDD60()
{
  return sub_254DCF10C(&qword_269E158F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContainerDefinition);
}

unint64_t sub_254DCDDAC()
{
  unint64_t result = qword_269E15900;
  if (!qword_269E15900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15900);
  }
  return result;
}

unint64_t sub_254DCDE04()
{
  unint64_t result = qword_269E15908;
  if (!qword_269E15908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15908);
  }
  return result;
}

unint64_t sub_254DCDE5C()
{
  unint64_t result = qword_269E15910;
  if (!qword_269E15910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15910);
  }
  return result;
}

unint64_t sub_254DCDEB4()
{
  unint64_t result = qword_269E15918;
  if (!qword_269E15918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15918);
  }
  return result;
}

uint64_t sub_254DCDF08()
{
  return sub_254DCF10C(&qword_269E15920, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContainerDefinition.Device);
}

uint64_t sub_254DCDF50()
{
  return sub_254DCF10C(&qword_269E15928, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContainerDefinition.Device);
}

uint64_t sub_254DCDF98()
{
  return sub_254DCF10C(&qword_269E14CB8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContainerDefinition.Device);
}

uint64_t sub_254DCDFE0()
{
  return sub_254DCF10C(&qword_269E15930, (void (*)(uint64_t))type metadata accessor for ToolKitProtoContainerDefinition.Device);
}

uint64_t sub_254DCE028()
{
  return sub_254DCF10C(&qword_269E15938, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t sub_254DCE070()
{
  return sub_254DCF10C(&qword_269E10EA0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t sub_254DCE0B8()
{
  return sub_254DCF10C(&qword_269E14CC0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t sub_254DCE100()
{
  return sub_254DCF10C(&qword_269E15940, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t sub_254DCE148()
{
  return sub_254DCF10C(&qword_269E15948, (void (*)(uint64_t))type metadata accessor for ToolKitProtoPluginModelData);
}

uint64_t sub_254DCE190()
{
  return sub_254DCF10C(&qword_269E15950, (void (*)(uint64_t))type metadata accessor for ToolKitProtoPluginModelData);
}

uint64_t sub_254DCE1D8()
{
  return sub_254DCF10C(&qword_269E14CC8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoPluginModelData);
}

uint64_t sub_254DCE220()
{
  return sub_254DCF10C(&qword_269E15958, (void (*)(uint64_t))type metadata accessor for ToolKitProtoPluginModelData);
}

uint64_t sub_254DCE268()
{
  return sub_254DCF10C(&qword_269E15960, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation);
}

uint64_t sub_254DCE2B0()
{
  return sub_254DCF10C(&qword_269E15968, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation);
}

uint64_t sub_254DCE2F8()
{
  return sub_254DCF10C(&qword_269E14CD0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation);
}

uint64_t sub_254DCE340()
{
  return sub_254DCF10C(&qword_269E15970, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation);
}

uint64_t sub_254DCE388()
{
  return sub_254DCF10C(&qword_269E15978, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
}

uint64_t sub_254DCE3D0()
{
  return sub_254DCF10C(&qword_269E15980, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
}

uint64_t sub_254DCE418()
{
  return sub_254DCF10C(&qword_269E14CD8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
}

uint64_t sub_254DCE460()
{
  return sub_254DCF10C(&qword_269E15988, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
}

uint64_t sub_254DCE4A8()
{
  return sub_254DCF10C(&qword_269E15990, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
}

uint64_t sub_254DCE4F0()
{
  return sub_254DCF10C(&qword_269E15998, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
}

uint64_t sub_254DCE538()
{
  return sub_254DCF10C(&qword_269E14CE0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
}

uint64_t sub_254DCE580()
{
  return sub_254DCF10C(&qword_269E159A0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
}

uint64_t sub_254DCE5C8()
{
  return sub_254DCF10C(&qword_269E159A8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

uint64_t sub_254DCE610()
{
  return sub_254DCF10C(&qword_269E159B0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

uint64_t sub_254DCE658()
{
  return sub_254DCF10C(&qword_269E14CE8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

uint64_t sub_254DCE6A0()
{
  return sub_254DCF10C(&qword_269E159B8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

uint64_t sub_254DCE6E8()
{
  return sub_254DCF10C(&qword_269E159C0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
}

uint64_t sub_254DCE730()
{
  return sub_254DCF10C(&qword_269E159C8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
}

uint64_t sub_254DCE778()
{
  return sub_254DCF10C(&qword_269E14CF0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
}

uint64_t sub_254DCE7C0()
{
  return sub_254DCF10C(&qword_269E159D0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
}

uint64_t sub_254DCE808()
{
  return sub_254DCF10C(&qword_269E159D8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_254DCE850()
{
  return sub_254DCF10C(&qword_269E159E0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_254DCE898()
{
  return sub_254DCF10C(&qword_269E14CF8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_254DCE8E0()
{
  return sub_254DCF10C(&qword_269E159E8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_254DCE928()
{
  return sub_254DCF10C(&qword_269E159F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
}

uint64_t sub_254DCE970()
{
  return sub_254DCF10C(&qword_269E159F8, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
}

uint64_t sub_254DCE9B8()
{
  return sub_254DCF10C(&qword_269E14D00, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
}

uint64_t sub_254DCEA00()
{
  return sub_254DCF10C(&qword_269E15A00, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
}

uint64_t sub_254DCEA48()
{
  return sub_254DCF10C(&qword_269E15A08, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
}

uint64_t sub_254DCEA90()
{
  return sub_254DCF10C(&qword_269E15A10, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
}

uint64_t sub_254DCEAD8()
{
  return sub_254DCF10C(&qword_269E14D08, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
}

uint64_t sub_254DCEB20()
{
  return sub_254DCF10C(&qword_269E15A18, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
}

uint64_t sub_254DCEB68()
{
  return sub_254DCF10C(&qword_269E15A20, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
}

uint64_t sub_254DCEBB0()
{
  return sub_254DCF10C(&qword_269E15A28, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
}

uint64_t sub_254DCEBF8()
{
  return sub_254DCF10C(&qword_269E14D10, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
}

uint64_t sub_254DCEC40()
{
  return sub_254DCF10C(&qword_269E15A30, (void (*)(uint64_t))type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
}

uint64_t sub_254DCEC88()
{
  return sub_254DCF10C(&qword_269E15A38, (void (*)(uint64_t))type metadata accessor for ToolKitProtoCoercionDefinition);
}

uint64_t sub_254DCECD0()
{
  return sub_254DCF10C(&qword_269E148F0, (void (*)(uint64_t))type metadata accessor for ToolKitProtoCoercionDefinition);
}

uint64_t sub_254DCED18()
{
  return sub_254DCF10C(&qword_269E14D18, (void (*)(uint64_t))type metadata accessor for ToolKitProtoCoercionDefinition);
}

uint64_t sub_254DCED60()
{
  return sub_254DCF10C(&qword_269E15A40, (void (*)(uint64_t))type metadata accessor for ToolKitProtoCoercionDefinition);
}

unint64_t sub_254DCEDAC()
{
  unint64_t result = qword_269E15A48;
  if (!qword_269E15A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15A48);
  }
  return result;
}

unint64_t sub_254DCEE04()
{
  unint64_t result = qword_269E15A50;
  if (!qword_269E15A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E15A50);
  }
  return result;
}

uint64_t sub_254DCEE58()
{
  return sub_254DCF10C(&qword_269E15A58, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinitionClosure);
}

uint64_t sub_254DCEEA0()
{
  return sub_254DCF10C(&qword_269E15A60, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinitionClosure);
}

uint64_t sub_254DCEEE8()
{
  return sub_254DCF10C(&qword_269E14D20, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinitionClosure);
}

uint64_t sub_254DCEF30()
{
  return sub_254DCF10C(&qword_269E15A68, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinitionClosure);
}

uint64_t sub_254DCEF78()
{
  return sub_254DCF10C(&qword_269E15A70, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1);
}

uint64_t sub_254DCEFC0()
{
  return sub_254DCF10C(&qword_269E15A78, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1);
}

uint64_t sub_254DCF008()
{
  return sub_254DCF10C(&qword_269E14D28, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1);
}

uint64_t sub_254DCF050()
{
  return sub_254DCF10C(&qword_269E15A80, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1);
}

uint64_t sub_254DCF0A0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unint64_t sub_254DCF0B0()
{
  unint64_t result = qword_269E16230;
  if (!qword_269E16230)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269E16228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16230);
  }
  return result;
}

uint64_t sub_254DCF10C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_254DCF154(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254DCF1BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_254DCF224(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ToolKitProtoStringSearchPredicate.Template.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoIdSearchPredicate.Template.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoSearchableItemPredicate.Template.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoTypeDefinition.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoValidPredicate.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoSuggestedPredicate.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoAllPredicate.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoToolDefinitionClosure.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t sub_254DCF350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_254D3D7B4(a1, a2, a3, a4);
}

uint64_t sub_254DCF368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_254D44830(a1, a2, a3, a4);
}

uint64_t sub_254DCF380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_254D84CB4(a1, a2, a3, a4);
}

id sub_254DCF3A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C350);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E008]), sel_init);
  sub_254DCF5D8(a1, (uint64_t)v7);
  uint64_t v9 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9) != 1)
  {
    sub_254DCF640((uint64_t)v7, (uint64_t)v4);
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DF68]), sel_init);
    BOOL v11 = v10;
    if (v10)
    {
      id v12 = v10;
      uint64_t v13 = (void *)sub_254E157E8();
      objc_msgSend(v12, sel_setDomain_, v13);
    }
    if (v8
      && (id v14 = objc_allocWithZone(MEMORY[0x263F6E010]),
          id v15 = v8,
          id v16 = objc_msgSend(v14, sel_init),
          objc_msgSend(v15, sel_setPlanGenerationModelOutputError_, v16),
          v15,
          v16,
          (id v17 = objc_msgSend(v15, sel_planGenerationModelOutputError)) != 0))
    {
      uint64_t v18 = v17;
      objc_msgSend(v17, sel_setError_, v11);

      sub_254DCF6A4((uint64_t)v4);
    }
    else
    {
      sub_254DCF6A4((uint64_t)v4);
    }
  }
  return v8;
}

uint64_t sub_254DCF5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254DCF640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254DCF6A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t TranscriptProtoPayloadEnum.eventTypeString.getter()
{
  uint64_t v1 = v0;
  unint64_t v2 = 0xD000000000000010;
  uint64_t v3 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254DD3848(v1, (uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x7265755174786554;
      break;
    case 2u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x7551686365657053;
      break;
    case 3u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x74736575716552;
      break;
    case 4u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x616572436E616C50;
      break;
    case 5u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x72436E6F69746341;
      break;
    case 6u:
    case 0x16u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD000000000000013;
      break;
    case 7u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x4373656972657551;
      break;
    case 8u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x656C626169726156;
      break;
    case 9u:
    case 0xBu:
    case 0x19u:
    case 0x29u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      break;
    case 0xAu:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x6C61636974697243;
      break;
    case 0xCu:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x7543746E65696C43;
      break;
    case 0xDu:
    case 0x20u:
    case 0x21u:
    case 0x27u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD000000000000014;
      break;
    case 0xEu:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x78456E6F69746341;
      break;
    case 0xFu:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x4573656972657551;
      break;
    case 0x10u:
    case 0x14u:
    case 0x1Cu:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD000000000000017;
      break;
    case 0x11u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD00000000000001CLL;
      break;
    case 0x12u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD00000000000001BLL;
      break;
    case 0x13u:
    case 0x25u:
    case 0x26u:
    case 0x28u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD000000000000015;
      break;
    case 0x15u:
    case 0x18u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD000000000000011;
      break;
    case 0x17u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD000000000000019;
      break;
    case 0x1Au:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x61436E6F69746341;
      break;
    case 0x1Bu:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x746552736C6F6F54;
      break;
    case 0x1Du:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD000000000000012;
      break;
    case 0x1Eu:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD000000000000016;
      break;
    case 0x1Fu:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD000000000000018;
      break;
    case 0x22u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD000000000000023;
      break;
    case 0x23u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x6F7365526C6F6F54;
      break;
    case 0x24u:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x6F6465526F646E55;
      break;
    case 0x2Au:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0xD00000000000001FLL;
      break;
    case 0x2Bu:
      return v2;
    case 0x2Cu:
      unint64_t v2 = 0x616C50664F646E45;
      break;
    case 0x2Du:
      unint64_t v2 = 0x74616E696D726554;
      break;
    default:
      sub_254DD38B0((uint64_t)v5, type metadata accessor for TranscriptProtoPayloadEnum);
      unint64_t v2 = 0x536E6F6973736553;
      break;
  }
  return v2;
}

uint64_t TranscriptProtoPayloadEnum.payloadType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254DD3848(v2, (uint64_t)v6, type metadata accessor for TranscriptProtoPayloadEnum);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      *a1 = 0;
      return sub_254DD38B0((uint64_t)v6, type metadata accessor for TranscriptProtoPayloadEnum);
    case 2:
      char v8 = 1;
      goto LABEL_45;
    case 3:
      char v8 = 39;
      goto LABEL_45;
    case 4:
      char v8 = 2;
      goto LABEL_45;
    case 5:
      char v8 = 3;
      goto LABEL_45;
    case 6:
      char v8 = 4;
      goto LABEL_45;
    case 7:
      char v8 = 5;
      goto LABEL_45;
    case 8:
      char v8 = 6;
      goto LABEL_45;
    case 9:
      uint64_t result = sub_254DD38B0((uint64_t)v6, type metadata accessor for TranscriptProtoPayloadEnum);
      *a1 = 8;
      return result;
    case 10:
      char v8 = 9;
      goto LABEL_45;
    case 11:
      char v8 = 44;
      goto LABEL_45;
    case 12:
      char v8 = 10;
      goto LABEL_45;
    case 13:
      char v8 = 13;
      goto LABEL_45;
    case 14:
      char v8 = 14;
      goto LABEL_45;
    case 15:
      char v8 = 15;
      goto LABEL_45;
    case 16:
      char v8 = 16;
      goto LABEL_45;
    case 17:
      char v8 = 17;
      goto LABEL_45;
    case 18:
      char v8 = 18;
      goto LABEL_45;
    case 19:
      char v8 = 19;
      goto LABEL_45;
    case 20:
      char v8 = 20;
      goto LABEL_45;
    case 21:
      char v8 = 21;
      goto LABEL_45;
    case 22:
      char v8 = 22;
      goto LABEL_45;
    case 23:
      char v8 = 24;
      goto LABEL_45;
    case 24:
      char v8 = 23;
      goto LABEL_45;
    case 25:
      char v8 = 25;
      goto LABEL_45;
    case 26:
      char v8 = 27;
      goto LABEL_45;
    case 27:
      char v8 = 26;
      goto LABEL_45;
    case 28:
      char v8 = 28;
      goto LABEL_45;
    case 29:
      char v8 = 29;
      goto LABEL_45;
    case 30:
      char v8 = 30;
      goto LABEL_45;
    case 31:
      char v8 = 31;
      goto LABEL_45;
    case 32:
      char v8 = 40;
      goto LABEL_45;
    case 33:
      char v8 = 32;
      goto LABEL_45;
    case 34:
      char v8 = 33;
      goto LABEL_45;
    case 35:
      char v8 = 34;
      goto LABEL_45;
    case 36:
      char v8 = 35;
      goto LABEL_45;
    case 37:
      char v8 = 36;
      goto LABEL_45;
    case 38:
      char v8 = 37;
      goto LABEL_45;
    case 39:
      char v8 = 38;
      goto LABEL_45;
    case 40:
      char v8 = 45;
      goto LABEL_45;
    case 41:
      char v8 = 46;
      goto LABEL_45;
    case 42:
      char v8 = 47;
      goto LABEL_45;
    case 43:
      *a1 = 7;
      return result;
    case 44:
      *a1 = 11;
      return result;
    case 45:
      *a1 = 12;
      return result;
    default:
      char v8 = 43;
LABEL_45:
      *a1 = v8;
      return sub_254DD38B0((uint64_t)v6, type metadata accessor for TranscriptProtoPayloadEnum);
  }
}

BOOL static TranscriptProtoPayloadEnum.PayloadType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranscriptProtoStatementID.asExprID.getter()
{
  return 101;
}

uint64_t TranscriptProtoEvent.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F6B8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F700);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F820);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v30 = (uint64_t)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F4B8);
  MEMORY[0x270FA5388](v10 - 8);
  id v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_254E15B68();
  sub_254E15878();
  swift_bridgeObjectRetain();
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  swift_bridgeObjectRetain();
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  swift_bridgeObjectRetain();
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  uint64_t v13 = (int *)type metadata accessor for TranscriptProtoEvent(0);
  sub_2545C9310(v0 + v13[14], (uint64_t)v12, &qword_26B26F4B8);
  uint64_t v14 = sub_254E14F58();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_2545C9374((uint64_t)v12, &qword_26B26F4B8);
  }
  else
  {
    uint64_t v16 = sub_254E14D98();
    v28[1] = v28;
    uint64_t v29 = v4;
    id v17 = v13;
    uint64_t v18 = *(void *)(v16 - 8);
    MEMORY[0x270FA5388](v16);
    uint64_t v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_254E14F48();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    sub_254E14CB8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v16);
    uint64_t v13 = v17;
    uint64_t v4 = v29;
  }
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  sub_2545C9310(v0 + v13[11], (uint64_t)v7, &qword_26B26F700);
  uint64_t v21 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v7, 1, v21) == 1)
  {
    uint64_t v22 = &qword_26B26F700;
    uint64_t v23 = (uint64_t)v7;
LABEL_8:
    sub_2545C9374(v23, v22);
    goto LABEL_10;
  }
  uint64_t v24 = v30;
  sub_2545C9310((uint64_t)v7, v30, &qword_26B26F820);
  sub_254DD38B0((uint64_t)v7, type metadata accessor for TranscriptProtoPayload);
  uint64_t v25 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25) == 1)
  {
    uint64_t v22 = &qword_26B26F820;
    uint64_t v23 = v24;
    goto LABEL_8;
  }
  TranscriptProtoPayloadEnum.eventTypeString.getter();
  sub_254DD38B0(v24, type metadata accessor for TranscriptProtoPayloadEnum);
LABEL_10:
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  sub_2545C9310(v1 + v13[16], (uint64_t)v4, &qword_26B26F6B8);
  uint64_t v26 = type metadata accessor for TranscriptProtoSpanID(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v4, 1, v26) == 1)
  {
    sub_2545C9374((uint64_t)v4, &qword_26B26F6B8);
  }
  else
  {
    sub_254DD3424(&qword_26B26F698, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSpanID);
    sub_254E15268();
    sub_254DD38B0((uint64_t)v4, type metadata accessor for TranscriptProtoSpanID);
  }
  sub_254E15878();
  swift_bridgeObjectRelease();
  return v31;
}

unint64_t TranscriptProtoStatementOutcomeEnum.description.getter()
{
  uint64_t v1 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254DD3848(v0, (uint64_t)v3, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  unint64_t v4 = 0x73736563637553;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v4 = 0xD000000000000012;
      break;
    case 2u:
    case 5u:
    case 0xAu:
      unint64_t v4 = 0xD000000000000013;
      break;
    case 3u:
      unint64_t v4 = 0xD000000000000015;
      break;
    case 4u:
      unint64_t v4 = 0xD000000000000017;
      break;
    case 6u:
      unint64_t v4 = 0xD00000000000001BLL;
      break;
    case 7u:
      unint64_t v4 = 0xD000000000000011;
      break;
    case 8u:
      unint64_t v4 = 0xD000000000000012;
      break;
    case 9u:
      unint64_t v4 = 0x6572756C696146;
      break;
    default:
      break;
  }
  sub_254DD38B0((uint64_t)v3, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  return v4;
}

uint64_t TranscriptProtoPayloadEnum.description.getter()
{
  uint64_t v118 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  MEMORY[0x270FA5388](v118);
  uint64_t v117 = (uint64_t)&v104 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  MEMORY[0x270FA5388](v116);
  uint64_t v115 = (uint64_t)&v104 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  MEMORY[0x270FA5388](v114);
  uint64_t v113 = (uint64_t)&v104 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  MEMORY[0x270FA5388](v112);
  uint64_t v111 = (uint64_t)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  MEMORY[0x270FA5388](v109);
  uint64_t v108 = (uint64_t)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  MEMORY[0x270FA5388](v107);
  uint64_t v106 = (uint64_t)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for TranscriptProtoActionSuccess(0);
  MEMORY[0x270FA5388](v105);
  uint64_t v110 = (uint64_t)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v131 = (uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3B8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v121 = (uint64_t)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3B0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v135 = (uint64_t)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  uint64_t v132 = *(void *)(v134 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v134);
  uint64_t v119 = (uint64_t)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v120 = (uint64_t)&v104 - v15;
  uint64_t v126 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x270FA5388](v126);
  char v133 = (uint64_t *)((char *)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v129 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  MEMORY[0x270FA5388](v129);
  uint64_t v128 = (uint64_t *)((char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  MEMORY[0x270FA5388](matched - 8);
  uint64_t v127 = (uint64_t *)((char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x270FA5388](v20 - 8);
  v125 = (uint64_t *)((char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v123 = type metadata accessor for TranscriptProtoClientCustom(0);
  MEMORY[0x270FA5388](v123);
  v130 = (uint64_t *)((char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for TranscriptProtoSessionError(0);
  MEMORY[0x270FA5388](v23);
  char v124 = (uint64_t *)((char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t Results = type metadata accessor for TranscriptProtoQueryResults(0);
  uint64_t v122 = *(void *)(Results - 8);
  MEMORY[0x270FA5388](Results - 8);
  char v27 = (char *)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  Stepuint64_t Results = type metadata accessor for TranscriptProtoQueryStepResults(0);
  MEMORY[0x270FA5388](StepResults - 8);
  uint64_t v136 = (uint64_t *)((char *)&v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = type metadata accessor for TranscriptProtoVariableStep(0);
  MEMORY[0x270FA5388](v30 - 8);
  unint64_t v32 = (uint64_t *)((char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t Step = type metadata accessor for TranscriptProtoQueryStep(0);
  MEMORY[0x270FA5388](Step - 8);
  uint64_t v35 = (uint64_t *)((char *)&v104 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = type metadata accessor for TranscriptProtoClientAction(0);
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v38 = (char *)&v104 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x270FA5388](v39 - 8);
  uint64_t v41 = (char *)&v104 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v44 = (char *)&v104 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for TranscriptProtoTextQuery(0);
  MEMORY[0x270FA5388](v45 - 8);
  uint64_t v47 = (char *)&v104 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v50 = (char *)&v104 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254DD3848(v137, (uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v52 = 0xD00000000000001BLL;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_254DD37E0((uint64_t)v50, (uint64_t)v47, type metadata accessor for TranscriptProtoTextQuery);
      unint64_t v139 = 0x203A72657375;
      unint64_t v140 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      sub_254E15878();
      swift_bridgeObjectRelease();
      uint64_t v53 = v139;
      uint64_t v54 = type metadata accessor for TranscriptProtoTextQuery;
      uint64_t v55 = (uint64_t)v47;
      goto LABEL_72;
    case 2:
      sub_254DD37E0((uint64_t)v50, (uint64_t)v44, type metadata accessor for TranscriptProtoSpeechQuery);
      unint64_t v139 = 0x203A72657375;
      unint64_t v140 = 0xE600000000000000;
      if (*(void *)(*(void *)v44 + 16))
      {
        type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
        swift_bridgeObjectRetain();
      }
      sub_254E15878();
      swift_bridgeObjectRelease();
      unint64_t v85 = v139;
      sub_254DD38B0((uint64_t)v44, type metadata accessor for TranscriptProtoSpeechQuery);
      return v85;
    case 3:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0x74736575716552;
    case 4:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0x616572436E616C50;
    case 5:
      sub_254DD37E0((uint64_t)v50, (uint64_t)v41, type metadata accessor for TranscriptProtoAction);
      uint64_t v53 = TranscriptProtoAction.description.getter();
      sub_254DD38B0((uint64_t)v41, type metadata accessor for TranscriptProtoAction);
      return v53;
    case 6:
      sub_254DD37E0((uint64_t)v50, (uint64_t)v38, type metadata accessor for TranscriptProtoClientAction);
      uint64_t v53 = TranscriptProtoClientAction.description.getter();
      uint64_t v54 = type metadata accessor for TranscriptProtoClientAction;
      uint64_t v55 = (uint64_t)v38;
      goto LABEL_72;
    case 7:
      sub_254DD37E0((uint64_t)v50, (uint64_t)v35, type metadata accessor for TranscriptProtoQueryStep);
      uint64_t v56 = *v35;
      uint64_t v57 = type metadata accessor for TranscriptProtoParameterQuery(0);
      uint64_t v53 = MEMORY[0x25A27EDA0](v56, v57);
      uint64_t v58 = type metadata accessor for TranscriptProtoQueryStep;
      goto LABEL_71;
    case 8:
      sub_254DD37E0((uint64_t)v50, (uint64_t)v32, type metadata accessor for TranscriptProtoVariableStep);
      uint64_t v59 = *v32;
      uint64_t v60 = type metadata accessor for TranscriptProtoVariableSetter(0);
      uint64_t v53 = MEMORY[0x25A27EDA0](v59, v60);
      uint64_t v54 = type metadata accessor for TranscriptProtoVariableStep;
      uint64_t v55 = (uint64_t)v32;
      goto LABEL_72;
    case 9:
      unint64_t v139 = 0;
      unint64_t v140 = 0xE000000000000000;
      sub_254E15B68();
      swift_bridgeObjectRelease();
      unint64_t v139 = 0xD000000000000013;
      unint64_t v140 = 0x8000000254E56C30;
      sub_254E15878();
      swift_bridgeObjectRelease();
      return v139;
    case 10:
      uint64_t v35 = v124;
      sub_254DD37E0((uint64_t)v50, (uint64_t)v124, type metadata accessor for TranscriptProtoSessionError);
      unint64_t v139 = 0;
      unint64_t v140 = 0xE000000000000000;
      sub_254E15878();
      sub_254E15C28();
      sub_254E15878();
      uint64_t v53 = v139;
      uint64_t v58 = type metadata accessor for TranscriptProtoSessionError;
      goto LABEL_71;
    case 11:
    case 41:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000010;
    case 12:
      uint64_t v35 = v130;
      sub_254DD37E0((uint64_t)v50, (uint64_t)v130, type metadata accessor for TranscriptProtoClientCustom);
      unint64_t v139 = 0;
      unint64_t v140 = 0xE000000000000000;
      sub_254E15B68();
      swift_bridgeObjectRelease();
      unint64_t v139 = 0x203A6D6F74737563;
      unint64_t v140 = 0xE800000000000000;
      uint64_t v61 = *v35;
      unint64_t v62 = v35[1];
      unint64_t v63 = 0;
      switch(v62 >> 62)
      {
        case 1uLL:
          LODWORD(v63) = HIDWORD(v61) - v61;
          if (__OFSUB__(HIDWORD(v61), v61))
          {
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
LABEL_87:
            __break(1u);
            JUMPOUT(0x254DD2D2CLL);
          }
          unint64_t v63 = (int)v63;
LABEL_62:
          unint64_t v138 = v63;
          sub_254E15DF8();
          sub_254E15878();
          swift_bridgeObjectRelease();
          sub_254E15878();
          uint64_t v90 = v35[2];
          unint64_t v91 = v35[3];
          unint64_t v92 = 0;
          switch(v91 >> 62)
          {
            case 1uLL:
              LODWORD(v92) = HIDWORD(v90) - v90;
              if (__OFSUB__(HIDWORD(v90), v90)) {
                goto LABEL_86;
              }
              unint64_t v92 = (int)v92;
LABEL_70:
              unint64_t v138 = v92;
              sub_254E15DF8();
              sub_254E15878();
              swift_bridgeObjectRelease();
              sub_254E15878();
              sub_254DD3424(&qword_269E0F040, (void (*)(uint64_t))type metadata accessor for TranscriptProtoClientCustom);
              sub_254E15268();
              sub_254E15878();
              swift_bridgeObjectRelease();
              uint64_t v53 = v139;
              uint64_t v58 = type metadata accessor for TranscriptProtoClientCustom;
              break;
            case 2uLL:
              uint64_t v99 = v90 + 16;
              uint64_t v98 = *(void *)(v90 + 16);
              uint64_t v97 = *(void *)(v99 + 8);
              BOOL v89 = __OFSUB__(v97, v98);
              unint64_t v92 = v97 - v98;
              if (!v89) {
                goto LABEL_70;
              }
              goto LABEL_87;
            case 3uLL:
              goto LABEL_70;
            default:
              unint64_t v92 = BYTE6(v91);
              goto LABEL_70;
          }
          break;
        case 2uLL:
          uint64_t v88 = v61 + 16;
          uint64_t v87 = *(void *)(v61 + 16);
          uint64_t v86 = *(void *)(v88 + 8);
          BOOL v89 = __OFSUB__(v86, v87);
          unint64_t v63 = v86 - v87;
          if (!v89) {
            goto LABEL_62;
          }
          goto LABEL_85;
        case 3uLL:
          goto LABEL_62;
        default:
          unint64_t v63 = BYTE6(v62);
          goto LABEL_62;
      }
      goto LABEL_71;
    case 13:
      uint64_t v35 = v125;
      sub_254DD37E0((uint64_t)v50, (uint64_t)v125, type metadata accessor for TranscriptProtoSystemPromptResolution);
      uint64_t v53 = TranscriptProtoSystemPromptResolution.description.getter();
      uint64_t v58 = type metadata accessor for TranscriptProtoSystemPromptResolution;
      goto LABEL_71;
    case 14:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0x78456E6F69746341;
    case 15:
      char v64 = v136;
      sub_254DD37E0((uint64_t)v50, (uint64_t)v136, type metadata accessor for TranscriptProtoQueryStepResults);
      uint64_t v65 = *v64;
      int64_t v66 = *(void *)(v65 + 16);
      unint64_t v67 = MEMORY[0x263F8EE78];
      if (v66)
      {
        unint64_t v138 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_25484A04C(0, v66, 0);
        uint64_t v68 = *(unsigned __int8 *)(v122 + 80);
        uint64_t v137 = v65;
        uint64_t v69 = v65 + ((v68 + 32) & ~v68);
        uint64_t v70 = *(void *)(v122 + 72);
        do
        {
          sub_254DD3848(v69, (uint64_t)v27, type metadata accessor for TranscriptProtoQueryResults);
          unint64_t v139 = 0x203A646E756F66;
          unint64_t v140 = 0xE700000000000000;
          uint64_t v71 = type metadata accessor for TranscriptProtoCandidate(0);
          uint64_t v72 = swift_bridgeObjectRetain();
          MEMORY[0x25A27EDA0](v72, v71);
          sub_254E15878();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v73 = v139;
          unint64_t v74 = v140;
          sub_254DD38B0((uint64_t)v27, type metadata accessor for TranscriptProtoQueryResults);
          unint64_t v67 = v138;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25484A04C(0, *(void *)(v67 + 16) + 1, 1);
            unint64_t v67 = v138;
          }
          unint64_t v76 = *(void *)(v67 + 16);
          unint64_t v75 = *(void *)(v67 + 24);
          if (v76 >= v75 >> 1)
          {
            sub_25484A04C(v75 > 1, v76 + 1, 1);
            unint64_t v67 = v138;
          }
          *(void *)(v67 + 16) = v76 + 1;
          unint64_t v77 = v67 + 16 * v76;
          *(void *)(v77 + 32) = v73;
          *(void *)(v77 + 40) = v74;
          v69 += v70;
          --v66;
        }
        while (v66);
        swift_bridgeObjectRelease();
      }
      unint64_t v139 = v67;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C638);
      sub_25483E5C4();
      uint64_t v53 = sub_254E157B8();
      swift_bridgeObjectRelease();
      uint64_t v54 = type metadata accessor for TranscriptProtoQueryStepResults;
      uint64_t v55 = (uint64_t)v136;
      goto LABEL_72;
    case 16:
    case 20:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000017;
    case 17:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD00000000000001CLL;
    case 18:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD00000000000001BLL;
    case 19:
    case 37:
    case 38:
    case 40:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000015;
    case 21:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000011;
    case 22:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000013;
    case 23:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000019;
    case 24:
      uint64_t v35 = v127;
      sub_254DD37E0((uint64_t)v50, (uint64_t)v127, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      unint64_t v139 = 0;
      unint64_t v140 = 0xE000000000000000;
      sub_254E15B68();
      swift_bridgeObjectRelease();
      unint64_t v139 = 0x20646E756F66;
      unint64_t v140 = 0xE600000000000000;
      unint64_t v138 = *(void *)(*v35 + 16);
      sub_254E15DF8();
      sub_254E15878();
      swift_bridgeObjectRelease();
      sub_254E15878();
      uint64_t v53 = v139;
      uint64_t v58 = type metadata accessor for TranscriptProtoEntitySpanMatchResult;
      goto LABEL_71;
    case 25:
      uint64_t v35 = v128;
      sub_254DD37E0((uint64_t)v50, (uint64_t)v128, type metadata accessor for TranscriptProtoContextRetrieved);
      unint64_t v139 = 0;
      unint64_t v140 = 0xE000000000000000;
      sub_254E15B68();
      sub_254E15878();
      sub_254E15C28();
      uint64_t v53 = v139;
      uint64_t v58 = type metadata accessor for TranscriptProtoContextRetrieved;
LABEL_71:
      uint64_t v54 = v58;
      uint64_t v55 = (uint64_t)v35;
LABEL_72:
      sub_254DD38B0(v55, v54);
      return v53;
    case 26:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0x43206E6F69746361;
    case 27:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0x657220736C6F6F54;
    case 28:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000017;
    case 29:
      uint64_t v35 = v133;
      sub_254DD37E0((uint64_t)v50, (uint64_t)v133, type metadata accessor for TranscriptProtoStatementResult);
      uint64_t v78 = v131;
      sub_2545C9310((uint64_t)v35 + *(int *)(v126 + 24), v131, &qword_269E0C3F0);
      uint64_t v79 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48))(v78, 1, v79) == 1)
      {
        sub_2545C9374(v78, &qword_269E0C3F0);
        uint64_t v81 = v134;
        uint64_t v80 = v135;
LABEL_56:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v132 + 56))(v80, 1, 1, v81);
LABEL_57:
        sub_2545C9374(v80, &qword_269E0C3B0);
        sub_254DD38B0((uint64_t)v35, type metadata accessor for TranscriptProtoStatementResult);
        return 0x203A746C75736572;
      }
      uint64_t v82 = v121;
      sub_2545C9310(v78, v121, &qword_269E0C3B8);
      sub_254DD38B0(v78, type metadata accessor for TranscriptProtoStatementResultPayload);
      uint64_t v83 = type metadata accessor for TranscriptProtoStatementOutcome(0);
      int v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 48))(v82, 1, v83);
      uint64_t v81 = v134;
      uint64_t v80 = v135;
      if (v84 == 1)
      {
        sub_2545C9374(v82, &qword_269E0C3B8);
        goto LABEL_56;
      }
      sub_2545C9310(v82, v135, &qword_269E0C3B0);
      sub_254DD38B0(v82, type metadata accessor for TranscriptProtoStatementOutcome);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v80, 1, v81) == 1) {
        goto LABEL_57;
      }
      uint64_t v93 = v120;
      sub_254DD37E0(v80, v120, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      uint64_t v94 = v119;
      sub_254DD3848(v93, v119, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v95 = v110;
          sub_254DD37E0(v94, v110, type metadata accessor for TranscriptProtoActionSuccess);
          unint64_t v139 = 0;
          unint64_t v140 = 0xE000000000000000;
          sub_254E15B68();
          swift_bridgeObjectRelease();
          unint64_t v139 = 0x203A746C75736572;
          unint64_t v140 = 0xE800000000000000;
          __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C360);
          sub_254E15AD8();
          sub_254E15878();
          swift_bridgeObjectRelease();
          sub_254E15878();
          sub_254E15878();
          swift_bridgeObjectRelease();
          uint64_t v53 = v139;
          uint64_t v96 = type metadata accessor for TranscriptProtoActionSuccess;
          goto LABEL_78;
        case 1u:
          uint64_t v95 = v106;
          sub_254DD37E0(v94, v106, type metadata accessor for TranscriptProtoActionConfirmation);
          unint64_t v139 = 0;
          unint64_t v140 = 0xE000000000000000;
          sub_254E15878();
          sub_254E15C28();
          uint64_t v53 = v139;
          uint64_t v96 = type metadata accessor for TranscriptProtoActionConfirmation;
          goto LABEL_78;
        case 2u:
          uint64_t v95 = v108;
          sub_254DD37E0(v94, v108, type metadata accessor for TranscriptProtoParameterNeedsValue);
          unint64_t v139 = 0;
          unint64_t v140 = 0xE000000000000000;
          sub_254E15878();
          sub_254E15C28();
          uint64_t v53 = v139;
          uint64_t v96 = type metadata accessor for TranscriptProtoParameterNeedsValue;
LABEL_78:
          sub_254DD38B0(v95, v96);
          sub_254DD38B0(v93, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          uint64_t v58 = type metadata accessor for TranscriptProtoStatementResult;
          goto LABEL_71;
        case 3u:
          uint64_t v101 = v111;
          sub_254DD37E0(v94, v111, type metadata accessor for TranscriptProtoParameterConfirmation);
          unint64_t v139 = 0;
          unint64_t v140 = 0xE000000000000000;
          sub_254E15878();
          sub_254E15C28();
          unint64_t v102 = v139;
          v103 = type metadata accessor for TranscriptProtoParameterConfirmation;
          goto LABEL_83;
        case 4u:
          uint64_t v101 = v113;
          sub_254DD37E0(v94, v113, type metadata accessor for TranscriptProtoParameterDisambiguation);
          unint64_t v139 = 0;
          unint64_t v140 = 0xE000000000000000;
          sub_254E15878();
          sub_254E15C28();
          unint64_t v102 = v139;
          v103 = type metadata accessor for TranscriptProtoParameterDisambiguation;
          goto LABEL_83;
        case 5u:
          uint64_t v101 = v115;
          sub_254DD37E0(v94, v115, type metadata accessor for TranscriptProtoParameterNotAllowed);
          unint64_t v139 = 0;
          unint64_t v140 = 0xE000000000000000;
          sub_254E15878();
          sub_254E15C28();
          unint64_t v102 = v139;
          v103 = type metadata accessor for TranscriptProtoParameterNotAllowed;
          goto LABEL_83;
        case 6u:
          uint64_t v101 = v117;
          sub_254DD37E0(v94, v117, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
          unint64_t v139 = 0;
          unint64_t v140 = 0xE000000000000000;
          sub_254E15878();
          sub_254E15C28();
          unint64_t v102 = v139;
          v103 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound;
LABEL_83:
          sub_254DD38B0(v101, v103);
          sub_254DD38B0(v93, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          sub_254DD38B0((uint64_t)v35, type metadata accessor for TranscriptProtoStatementResult);
          unint64_t v52 = v102;
          break;
        default:
          sub_254DD38B0(v93, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          sub_254DD38B0((uint64_t)v35, type metadata accessor for TranscriptProtoStatementResult);
          sub_254DD38B0(v94, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          return 0xD000000000000013;
      }
      return v52;
    case 30:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000016;
    case 31:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000018;
    case 32:
    case 33:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000014;
    case 34:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000023;
    case 35:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0x6F7365526C6F6F54;
    case 36:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0x6F6465526F646E55;
    case 39:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD000000000000014;
    case 42:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0xD00000000000001FLL;
    case 43:
      return v52;
    case 44:
      return 0xD00000000000001FLL;
    case 45:
      return 0xD00000000000001CLL;
    default:
      sub_254DD38B0((uint64_t)v50, type metadata accessor for TranscriptProtoPayloadEnum);
      return 0x536E6F6973736553;
  }
}

uint64_t TranscriptProtoAction.description.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F850);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (unsigned int *)((char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_254E15B68();
  sub_254E15878();
  uint64_t v4 = type metadata accessor for TranscriptProtoAction(0);
  sub_2545C9310(v0 + *(int *)(v4 + 28), (uint64_t)v3, &qword_26B26F850);
  uint64_t v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_2545C9374((uint64_t)v3, &qword_26B26F850);
  }
  else
  {
    v7[2] = 101;
    v7[3] = 0xE100000000000000;
    v7[1] = *v3 - 1;
    sub_254E15DF8();
    sub_254E15878();
    swift_bridgeObjectRelease();
    sub_254DD38B0((uint64_t)v3, type metadata accessor for TranscriptProtoStatementID);
  }
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  swift_bridgeObjectRetain();
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  swift_bridgeObjectRetain();
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  swift_bridgeObjectRetain();
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  type metadata accessor for TranscriptProtoActionParameterValue(0);
  swift_bridgeObjectRetain();
  sub_254E15788();
  sub_254E15878();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_254E15878();
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  return v8;
}

unint64_t TranscriptProtoClientAction.description.getter()
{
  return 0xD000000000000015;
}

uint64_t TranscriptProtoSystemPromptResolution.description.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C2F0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_254E15B68();
  sub_254E15878();
  long long v6 = *(_OWORD *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269E16340);
  sub_254E15C28();
  sub_254E15878();
  uint64_t v4 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  sub_2545C9310(v0 + *(int *)(v4 + 24), (uint64_t)v3, &qword_269E0C2F0);
  sub_254E15858();
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  return v7;
}

uint64_t sub_254DD3424(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TranscriptProtoPayloadEnum.PayloadType.hash(into:)()
{
  return sub_254E15EE8();
}

uint64_t TranscriptProtoPayloadEnum.PayloadType.hashValue.getter()
{
  return sub_254E15F08();
}

unint64_t TranscriptProtoActionFailureFailureEnum.description.getter()
{
  uint64_t v1 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254DD3848(v0, (uint64_t)v3, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
  uint64_t v4 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  int v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 16, v4);
  unint64_t result = 0xD000000000000017;
  switch(v5)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      return result;
    case 3:
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6173694469666977;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x466B726F7774656ELL;
      break;
    case 7:
      unint64_t result = 0x466C616974726170;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 10:
      unint64_t result = 0x6F4E797469746E65;
      break;
    case 12:
      unint64_t result = 0x6F54656C62616E75;
      break;
    case 13:
      unint64_t result = 0x61436E6F69746361;
      break;
    case 14:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 15:
      unint64_t result = 0x69686374614D6F6ELL;
      break;
    case 16:
      unint64_t result = 0x54656C62616E752ELL;
      break;
    default:
      sub_254DD38B0((uint64_t)v3, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
      unint64_t result = 0xD000000000000015;
      break;
  }
  return result;
}

uint64_t sub_254DD37E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_254DD3848(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254DD38B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_254DD3914()
{
  unint64_t result = qword_269E16348;
  if (!qword_269E16348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16348);
  }
  return result;
}

uint64_t _s11PayloadTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD1) {
    goto LABEL_17;
  }
  if (a2 + 47 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 47) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 47;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 47;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 47;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x30;
  int v8 = v6 - 48;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11PayloadTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 47 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 47) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD0)
  {
    unsigned int v6 = ((a2 - 209) >> 8) + 1;
    *unint64_t result = a2 + 47;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DD3AC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 47;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProtoPayloadEnum.PayloadType()
{
  return &type metadata for TranscriptProtoPayloadEnum.PayloadType;
}

unint64_t ReliabilityCategory.name.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0 >> 4)
  {
    case 1:
      return result;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 8:
      unint64_t result = 0x745372657070614DLL;
      break;
    default:
      unint64_t result = 0x617461444D424549;
      break;
  }
  return result;
}

unint64_t IEBMDataIssues.rawValue.getter()
{
  unint64_t result = 0x6576457974706D65;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x5364696C61766E69;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x746E6576456C696ELL;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t DataUploadIssues.rawValue.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t DataEncodingError.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0xD000000000000011;
  }
}

unint64_t DataDecodingError.rawValue.getter()
{
  return 0xD000000000000011;
}

unint64_t FeaturizationError.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000019;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t AppIntentProcessingIssues.rawValue.getter()
{
  return 0x496C6F6F546C696ELL;
}

unint64_t IFTranscriptSELFMapperIssues.rawValue.getter()
{
  unint64_t result = 0xD00000000000001DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000024;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t IFTelemetryTimestampIssues.rawValue.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t MapperStats.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000014;
  if (*v0 == 1) {
    unint64_t v1 = 0xD000000000000013;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

LighthouseDataProcessor::IEBMDataIssues_optional __swiftcall IEBMDataIssues.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_254E15CC8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t sub_254DD3F50(unsigned __int8 *a1, char *a2)
{
  return sub_254707A84(*a1, *a2);
}

uint64_t sub_254DD3F5C()
{
  return sub_254DFBFD4();
}

uint64_t sub_254DD3F64()
{
  return sub_2547082B8();
}

uint64_t sub_254DD3F6C()
{
  return sub_2547088C4();
}

LighthouseDataProcessor::IEBMDataIssues_optional sub_254DD3F74(Swift::String *a1)
{
  return IEBMDataIssues.init(rawValue:)(*a1);
}

unint64_t sub_254DD3F80@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = IEBMDataIssues.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t DataUploadIssues.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_254DD4444(a1);
}

uint64_t sub_254DD3FB4()
{
  return sub_254DD44B4();
}

uint64_t sub_254DD3FD0()
{
  return sub_254E15868();
}

uint64_t sub_254DD3FEC()
{
  return sub_254DD453C();
}

uint64_t sub_254DD4008@<X0>(BOOL *a1@<X8>)
{
  return sub_254DD4594(a1);
}

void sub_254DD4014(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x8000000254E4B580;
}

LighthouseDataProcessor::DataEncodingError_optional __swiftcall DataEncodingError.init(rawValue:)(Swift::String rawValue)
{
  return (LighthouseDataProcessor::DataEncodingError_optional)sub_254DD41B8(v1);
}

uint64_t sub_254DD4040(char *a1, char *a2)
{
  return sub_254707DB4(*a1, *a2);
}

uint64_t sub_254DD404C()
{
  return sub_254DFC10C();
}

uint64_t sub_254DD4054()
{
  sub_254E15868();

  return swift_bridgeObjectRelease();
}

uint64_t sub_254DD40C8()
{
  return sub_25470879C();
}

LighthouseDataProcessor::DataEncodingError_optional sub_254DD40D0(Swift::String *a1)
{
  return DataEncodingError.init(rawValue:)(*a1);
}

void sub_254DD40DC(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000015;
  }
  else {
    unint64_t v2 = 0xD000000000000011;
  }
  unint64_t v3 = 0x8000000254E4B5A0;
  if (*v1) {
    unint64_t v3 = 0x8000000254E4B5C0;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t DataDecodingError.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_254DD4444(a1);
}

uint64_t sub_254DD412C()
{
  return sub_254DD44B4();
}

uint64_t sub_254DD4148()
{
  return sub_254E15868();
}

uint64_t sub_254DD4164()
{
  return sub_254DD453C();
}

uint64_t sub_254DD4180@<X0>(BOOL *a1@<X8>)
{
  return sub_254DD4594(a1);
}

void sub_254DD418C(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000254E4B5E0;
}

LighthouseDataProcessor::FeaturizationError_optional __swiftcall FeaturizationError.init(rawValue:)(Swift::String rawValue)
{
  return (LighthouseDataProcessor::FeaturizationError_optional)sub_254DD41B8(v1);
}

uint64_t sub_254DD41B8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_254E15CC8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_254DD4218(char *a1, char *a2)
{
  return sub_2547073D4(*a1, *a2);
}

uint64_t sub_254DD4224()
{
  return sub_254DFC194();
}

uint64_t sub_254DD422C()
{
  sub_254E15868();

  return swift_bridgeObjectRelease();
}

uint64_t sub_254DD42A0()
{
  return sub_254708B44();
}

LighthouseDataProcessor::FeaturizationError_optional sub_254DD42A8(Swift::String *a1)
{
  return FeaturizationError.init(rawValue:)(*a1);
}

void sub_254DD42B4(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000019;
  }
  else {
    unint64_t v2 = 0xD000000000000014;
  }
  unint64_t v3 = 0x8000000254E4B600;
  if (*v1) {
    unint64_t v3 = 0x8000000254E4B620;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t AppIntentProcessingIssues.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_254DD4444(a1);
}

uint64_t sub_254DD4304()
{
  return sub_254DD44B4();
}

uint64_t sub_254DD4320()
{
  return sub_254E15868();
}

uint64_t sub_254DD433C()
{
  return sub_254DD453C();
}

uint64_t sub_254DD4358@<X0>(BOOL *a1@<X8>)
{
  return sub_254DD4594(a1);
}

void sub_254DD4364(void *a1@<X8>)
{
  *a1 = 0x496C6F6F546C696ELL;
  a1[1] = 0xE900000000000044;
}

LighthouseDataProcessor::IFTranscriptSELFMapperIssues_optional __swiftcall IFTranscriptSELFMapperIssues.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_254E15CC8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_254DD43E0(char *a1, char *a2)
{
  return sub_25470709C(*a1, *a2);
}

uint64_t sub_254DD43EC()
{
  return sub_254DFC21C();
}

uint64_t sub_254DD43F4()
{
  return sub_254708010();
}

uint64_t sub_254DD43FC()
{
  return sub_254708C6C();
}

LighthouseDataProcessor::IFTranscriptSELFMapperIssues_optional sub_254DD4404(Swift::String *a1)
{
  return IFTranscriptSELFMapperIssues.init(rawValue:)(*a1);
}

unint64_t sub_254DD4410@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = IFTranscriptSELFMapperIssues.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t IFTelemetryTimestampIssues.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_254DD4444(a1);
}

uint64_t sub_254DD4444@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_254E15CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_254DD4498()
{
  return sub_254DD44B4();
}

uint64_t sub_254DD44B4()
{
  return sub_254E15F08();
}

uint64_t sub_254DD4504()
{
  return sub_254E15868();
}

uint64_t sub_254DD4520()
{
  return sub_254DD453C();
}

uint64_t sub_254DD453C()
{
  return sub_254E15F08();
}

uint64_t sub_254DD4588@<X0>(BOOL *a1@<X8>)
{
  return sub_254DD4594(a1);
}

uint64_t sub_254DD4594@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_254E15CC8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_254DD45E4(void *a1@<X8>)
{
  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x8000000254E4B700;
}

LighthouseDataProcessor::MapperStats_optional __swiftcall MapperStats.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254E15CC8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t sub_254DD4664()
{
  unint64_t result = qword_269E16350;
  if (!qword_269E16350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16350);
  }
  return result;
}

unint64_t sub_254DD46BC()
{
  unint64_t result = qword_269E16358;
  if (!qword_269E16358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16358);
  }
  return result;
}

unint64_t sub_254DD4714()
{
  unint64_t result = qword_269E16360;
  if (!qword_269E16360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16360);
  }
  return result;
}

unint64_t sub_254DD476C()
{
  unint64_t result = qword_269E16368;
  if (!qword_269E16368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16368);
  }
  return result;
}

unint64_t sub_254DD47C4()
{
  unint64_t result = qword_269E16370;
  if (!qword_269E16370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16370);
  }
  return result;
}

unint64_t sub_254DD481C()
{
  unint64_t result = qword_269E16378;
  if (!qword_269E16378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16378);
  }
  return result;
}

unint64_t sub_254DD4874()
{
  unint64_t result = qword_269E16380;
  if (!qword_269E16380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16380);
  }
  return result;
}

unint64_t sub_254DD48CC()
{
  unint64_t result = qword_269E16388;
  if (!qword_269E16388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16388);
  }
  return result;
}

uint64_t sub_254DD4920(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_254707CBC(*a1, *a2);
}

unint64_t sub_254DD4930()
{
  unint64_t result = qword_269E16390;
  if (!qword_269E16390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16390);
  }
  return result;
}

uint64_t sub_254DD4984()
{
  return sub_254DFC314();
}

uint64_t sub_254DD498C()
{
  return sub_254708534();
}

uint64_t sub_254DD4994()
{
  return sub_254708820();
}

LighthouseDataProcessor::MapperStats_optional sub_254DD499C(Swift::String *a1)
{
  return MapperStats.init(rawValue:)(*a1);
}

unint64_t sub_254DD49A8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MapperStats.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ReliabilityCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x18) {
    goto LABEL_17;
  }
  if (a2 + 232 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 232) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 232;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 232;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 232;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 4) & 0xFFFFFFEF | (16 * ((*a1 >> 3) & 1))) ^ 0x1F;
  if (v6 >= 0x17) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for ReliabilityCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 232 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 232) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x18) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x17)
  {
    unsigned int v6 = ((a2 - 24) >> 8) + 1;
    *unint64_t result = a2 - 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DD4B48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 & 0x10) != 0) - 2 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_254DD4B70(unsigned __int8 *a1)
{
  return *a1 >> 4;
}

unsigned char *sub_254DD4B7C(unsigned char *result)
{
  *result &= 0xFu;
  return result;
}

unsigned char *sub_254DD4B8C(unsigned char *result, char a2)
{
  *unint64_t result = *result & 7 | (16 * a2);
  return result;
}

ValueMetadata *type metadata accessor for ReliabilityCategory()
{
  return &type metadata for ReliabilityCategory;
}

unsigned char *storeEnumTagSinglePayload for IEBMDataIssues(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DD4C7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IEBMDataIssues()
{
  return &type metadata for IEBMDataIssues;
}

ValueMetadata *type metadata accessor for DataUploadIssues()
{
  return &type metadata for DataUploadIssues;
}

ValueMetadata *type metadata accessor for DataEncodingError()
{
  return &type metadata for DataEncodingError;
}

ValueMetadata *type metadata accessor for DataDecodingError()
{
  return &type metadata for DataDecodingError;
}

unsigned char *_s23LighthouseDataProcessor17DataEncodingErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DD4DBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeaturizationError()
{
  return &type metadata for FeaturizationError;
}

ValueMetadata *type metadata accessor for AppIntentProcessingIssues()
{
  return &type metadata for AppIntentProcessingIssues;
}

unsigned char *storeEnumTagSinglePayload for IFTranscriptSELFMapperIssues(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DD4ED0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IFTranscriptSELFMapperIssues()
{
  return &type metadata for IFTranscriptSELFMapperIssues;
}

unsigned char *_s23LighthouseDataProcessor16DataUploadIssuesOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x254DD4FA4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IFTelemetryTimestampIssues()
{
  return &type metadata for IFTelemetryTimestampIssues;
}

unsigned char *storeEnumTagSinglePayload for MapperStats(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DD50A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapperStats()
{
  return &type metadata for MapperStats;
}

void sub_254DD50E0(uint64_t a1, unint64_t a2, char *a3)
{
}

void sub_254DD50EC(uint64_t a1, unint64_t a2, char *a3)
{
}

void sub_254DD50F8(uint64_t a1, unint64_t a2, char *a3, uint64_t (*a4)(void))
{
  char v7 = *a3;
  swift_bridgeObjectRetain_n();
  int v8 = sub_254E15708();
  os_log_type_t v9 = a4();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_254658670(a1, a2, &v12);
    sub_254E15B08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2545B9000, v8, v9, "%s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v11, -1, -1);
    MEMORY[0x25A27FC50](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  LOBYTE(v12) = v7;
  _s23LighthouseDataProcessor20CoreAnalyticsServiceO017submitReliabilityE08category6reasonyAA0H8CategoryO_SStFZ_0(&v12, a1, a2);
}

uint64_t sub_254DD527C(uint64_t a1)
{
  return sub_254DD532C(a1, qword_26B2707B8, &qword_26B26A998, (id *)&qword_26B2707B0);
}

uint64_t sub_254DD52A8(uint64_t a1)
{
  return sub_254DD532C(a1, qword_269E70698, qword_269E0C0B0, (id *)&qword_269E706C8);
}

uint64_t sub_254DD52D4(uint64_t a1)
{
  return sub_254DD532C(a1, qword_26B270798, qword_26B26A5D8, (id *)&qword_26B270790);
}

uint64_t sub_254DD5300(uint64_t a1)
{
  return sub_254DD532C(a1, qword_269E706B0, &qword_269E0C0C0, (id *)&qword_269E706D0);
}

uint64_t sub_254DD532C(uint64_t a1, uint64_t *a2, void *a3, id *a4)
{
  uint64_t v7 = sub_254E15718();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  id v8 = *a4;
  return sub_254E15728();
}

uint64_t sub_254DD53B8()
{
  sub_254DD54E0();
  uint64_t result = sub_254E15AC8();
  qword_26B2707B0 = result;
  return result;
}

uint64_t sub_254DD5420()
{
  sub_254DD54E0();
  uint64_t result = sub_254E15AC8();
  qword_269E706C8 = result;
  return result;
}

uint64_t sub_254DD5488()
{
  sub_254DD54E0();
  uint64_t result = sub_254E15AC8();
  qword_26B270790 = result;
  return result;
}

unint64_t sub_254DD54E0()
{
  unint64_t result = qword_26B270088;
  if (!qword_26B270088)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B270088);
  }
  return result;
}

uint64_t sub_254DD5520()
{
  sub_254DD54E0();
  uint64_t result = sub_254E15AC8();
  qword_269E706D0 = result;
  return result;
}

void *sub_254DD5578(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3A8);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3A0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DE38]), sel_init);
  uint64_t v13 = v12;
  if (v12)
  {
    objc_msgSend(v12, sel_setExists_, 1);
    id v14 = objc_allocWithZone(MEMORY[0x263F6DE48]);
    id v15 = v13;
    id v16 = objc_msgSend(v14, sel_init);
    objc_msgSend(v15, sel_setFailure_, v16);
  }
  sub_2545C9310(a1, (uint64_t)v8, &qword_269E0C3A8);
  uint64_t v17 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v8, 1, v17) == 1)
  {
    sub_254DD5C98((uint64_t)v8);
    uint64_t v18 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  }
  else
  {
    sub_2545C9310((uint64_t)v8, (uint64_t)v11, &qword_269E0C3A0);
    sub_254DD5D5C((uint64_t)v8, type metadata accessor for TranscriptProtoActionFailureFailure);
    uint64_t v19 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v11, 1, v19) != 1)
    {
      switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 16, v2))
      {
        case 1u:
          if (v13)
          {
            id v25 = objc_msgSend(v13, sel_failure);
            if (v25)
            {
              uint64_t v26 = v25;
              objc_msgSend(v25, sel_setPreflightCheckFailure_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 2u:
          if (v13)
          {
            id v27 = objc_msgSend(v13, sel_failure);
            if (v27)
            {
              uint64_t v26 = v27;
              objc_msgSend(v27, sel_setPreciseLocationDisabled_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 3u:
          if (v13)
          {
            id v28 = objc_msgSend(v13, sel_failure);
            if (v28)
            {
              uint64_t v26 = v28;
              objc_msgSend(v28, sel_setLocationDisabled_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 4u:
          if (v13)
          {
            id v29 = objc_msgSend(v13, sel_failure);
            if (v29)
            {
              uint64_t v26 = v29;
              objc_msgSend(v29, sel_setWifiDisabled_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 5u:
          if (v13)
          {
            id v30 = objc_msgSend(v13, sel_failure);
            if (v30)
            {
              uint64_t v26 = v30;
              objc_msgSend(v30, sel_setBluetoothDisabled_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 6u:
          if (v13)
          {
            id v31 = objc_msgSend(v13, sel_failure);
            if (v31)
            {
              uint64_t v26 = v31;
              objc_msgSend(v31, sel_setNetworkFailure_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 7u:
          if (v13)
          {
            id v32 = objc_msgSend(v13, sel_failure);
            if (v32)
            {
              uint64_t v26 = v32;
              objc_msgSend(v32, sel_setPartialFailure_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 8u:
          if (v13)
          {
            id v33 = objc_msgSend(v13, sel_failure);
            if (v33)
            {
              uint64_t v26 = v33;
              objc_msgSend(v33, sel_setUnsupportedOnDevice_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 9u:
          if (v13)
          {
            id v34 = objc_msgSend(v13, sel_failure);
            if (v34)
            {
              uint64_t v26 = v34;
              objc_msgSend(v34, sel_setFeatureCurrentlyRestricted_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 0xAu:
          if (v13)
          {
            id v35 = objc_msgSend(v13, sel_failure);
            if (v35)
            {
              uint64_t v26 = v35;
              objc_msgSend(v35, sel_setEntityNotFound_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 0xBu:
          if (v13)
          {
            id v36 = objc_msgSend(v13, sel_failure);
            if (v36)
            {
              uint64_t v26 = v36;
              objc_msgSend(v36, sel_setActionNotAllowed_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 0xCu:
          if (v13)
          {
            id v37 = objc_msgSend(v13, sel_failure);
            if (v37)
            {
              uint64_t v26 = v37;
              objc_msgSend(v37, sel_setUnableToUndo_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 0xDu:
          if (v13)
          {
            id v38 = objc_msgSend(v13, sel_failure);
            if (v38)
            {
              uint64_t v26 = v38;
              objc_msgSend(v38, sel_setActionCanceled_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 0xEu:
          if (v13)
          {
            id v39 = objc_msgSend(v13, sel_failure);
            if (v39)
            {
              uint64_t v26 = v39;
              objc_msgSend(v39, sel_setValueDisambiguationRejected_, 1);
              goto LABEL_57;
            }
          }
          break;
        case 0xFu:
          if (v13)
          {
            id v40 = objc_msgSend(v13, sel_failure);
            if (v40)
            {
              uint64_t v26 = v40;
              objc_msgSend(v40, sel_setNoMatchingTool_, 1);
LABEL_57:
            }
          }
          break;
        case 0x10u:
          return v13;
        default:
          sub_254DD5CF8((uint64_t)v11, (uint64_t)v5);
          id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DE40]), sel_init);
          if (v20)
          {
            uint64_t v21 = v20;
            objc_msgSend(v20, sel_setCode_, *((void *)v5 + 4));
            uint64_t v22 = (void *)sub_254E157E8();
            objc_msgSend(v21, sel_setDomain_, v22);

            if (v13)
            {
              id v23 = objc_msgSend(v13, sel_failure);
              if (v23)
              {
                uint64_t v24 = v23;
                objc_msgSend(v23, sel_setActionFailureDeveloperDefinedError_, v21);
              }
            }

            sub_254DD5D5C((uint64_t)v5, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
          }
          else
          {

            sub_254DD5D5C((uint64_t)v5, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
            uint64_t v13 = 0;
          }
          break;
      }
    }
  }
  return v13;
}

uint64_t sub_254DD5C98(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3A8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_254DD5CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254DD5D5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t SELFPnREmitter.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t static SELFPnREmitter.instance.getter()
{
  return swift_initStaticObject();
}

uint64_t SELFPnREmitter.init()()
{
  return v0;
}

uint64_t SELFPnREmitter.deinit()
{
  return v0;
}

uint64_t SELFPnREmitter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void _s23LighthouseDataProcessor14SELFPnREmitterC27uploadProvisionalPnRLatency3foryAA18IELatencySELFEvent_p_tF_0(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    objc_msgSend(objc_msgSend(self, sel_sharedStream), sel_emitMessage_, v3);

    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_269E0C090 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_254E15718();
    __swift_project_value_buffer(v5, (uint64_t)qword_269E70698);
    oslog = sub_254E15708();
    os_log_type_t v6 = sub_254E15A38();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_2545B9000, oslog, v6, "uploadProvisionalPnRLatency failed due to createSELFEvent is nil.", v7, 2u);
      MEMORY[0x25A27FC50](v7, -1, -1);
    }
  }
}

uint64_t dispatch thunk of SELFPnREmitterInterface.uploadProvisionalPnRLatency(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for SELFPnREmitter()
{
  return self;
}

uint64_t method lookup function for SELFPnREmitter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SELFPnREmitter);
}

uint64_t dispatch thunk of SELFPnREmitter.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

void CoreAnalyticsEmitter.sendSageMetrics(eventCategory:eventPayload:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v60 = a2;
  uint64_t v5 = type metadata accessor for UsageMetricsDefinitions();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v56 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v54 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v57 = &v49[-v9];
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v49[-v10];
  uint64_t v12 = sub_254E14D98();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26A6B0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = &v49[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v58 = (void (*)(uint64_t, unint64_t, uint64_t (*)(), uint64_t))v5;
  uint64_t v61 = (unsigned char *)a3;
  sub_254DE884C(0, (uint64_t)v17);
  uint64_t v18 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v59 = v12;
  if (v18(v17, 1, v12) == 1)
  {
    sub_2545C9374((uint64_t)v17, &qword_26B26A6B0);
    if (qword_269E0C090 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_254E15718();
    __swift_project_value_buffer(v19, (uint64_t)qword_269E70698);
    id v20 = v54;
    sub_25483F970((uint64_t)v61, (uint64_t)v54);
    unint64_t v21 = v60;
    swift_bridgeObjectRetain_n();
    uint64_t v22 = sub_254E15708();
    os_log_type_t v23 = sub_254E15A38();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v63 = v25;
      *(_DWORD *)uint64_t v24 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_254658670(a1, v21, &v63);
      sub_254E15B08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2080;
      sub_254719840();
      uint64_t v26 = sub_254E15DF8();
      uint64_t v62 = sub_254658670(v26, v27, &v63);
      sub_254E15B08();
      swift_bridgeObjectRelease();
      sub_25483F9D4((uint64_t)v20);
      _os_log_impl(&dword_2545B9000, v22, v23, "Date can not be fuzzed for: %s, Date: %s, exiting CoreAnalytics logging", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v25, -1, -1);
      MEMORY[0x25A27FC50](v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_25483F9D4((uint64_t)v20);
    }
  }
  else
  {
    id v28 = *(void (**)(unint64_t, unsigned char *, uint64_t))(v13 + 32);
    uint64_t v53 = v13 + 32;
    uint64_t v54 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
    unint64_t v52 = v28;
    v28((unint64_t)v54, v17, v59);
    if (qword_269E0C090 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_254E15718();
    __swift_project_value_buffer(v29, (uint64_t)qword_269E70698);
    sub_25483F970((uint64_t)v61, (uint64_t)v11);
    unint64_t v30 = v60;
    swift_bridgeObjectRetain_n();
    id v31 = sub_254E15708();
    os_log_type_t v32 = sub_254E15A38();
    int v33 = v32;
    BOOL v34 = os_log_type_enabled(v31, v32);
    uint64_t v51 = a1;
    if (v34)
    {
      uint64_t v35 = a1;
      uint64_t v36 = swift_slowAlloc();
      int v50 = v33;
      uint64_t v37 = v36;
      uint64_t v38 = swift_slowAlloc();
      uint64_t v63 = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_254658670(v35, v30, &v63);
      sub_254E15B08();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2080;
      sub_254719840();
      uint64_t v39 = sub_254E15DF8();
      uint64_t v62 = sub_254658670(v39, v40, &v63);
      sub_254E15B08();
      swift_bridgeObjectRelease();
      sub_25483F9D4((uint64_t)v11);
      _os_log_impl(&dword_2545B9000, v31, (os_log_type_t)v50, "Logging CoreAnalytics event type: %s, Date: %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v38, -1, -1);
      MEMORY[0x25A27FC50](v37, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_25483F9D4((uint64_t)v11);
    }

    uint64_t v58 = *(void (**)(uint64_t, unint64_t, uint64_t (*)(), uint64_t))(v55 + 16);
    uint64_t v41 = v57;
    uint64_t v42 = sub_25483F970((uint64_t)v61, (uint64_t)v57);
    uint64_t v61 = v49;
    MEMORY[0x270FA5388](v42);
    uint64_t v43 = v54;
    uint64_t v44 = v59;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 16))(&v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], v54, v59);
    unint64_t v45 = (*(unsigned __int8 *)(v56 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    unint64_t v46 = (v6 + *(unsigned __int8 *)(v13 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v47 = swift_allocObject();
    sub_254DD7908((uint64_t)v41, v47 + v45);
    v52(v47 + v46, &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], v44);
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = sub_254DD796C;
    *(void *)(v48 + 24) = v47;
    v58(v51, v60, sub_254DD7A38, v48);
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v43, v44);
  }
}

uint64_t static CoreAnalyticsEmitter.instance.getter()
{
  return swift_initStaticObject();
}

uint64_t sub_254DD6760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E163A0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254E15958();
  uint64_t v11 = sub_254E15978();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v12[5] = a2;
  v12[6] = a3;
  v12[7] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_254DD7344((uint64_t)v10, (uint64_t)&unk_269E163B0, (uint64_t)v12);
  swift_release();
  return sub_2545C9374((uint64_t)v10, &qword_269E163A0);
}

unint64_t sub_254DD68A0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B26AAD8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_254E1AE80;
  *(void *)(inited + 32) = 0x6449746E65696C63;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 48) = sub_254E157E8();
  *(void *)(inited + 56) = 0x6D61747365746164;
  *(void *)(inited + 64) = 0xE900000000000070;
  sub_254E14CA8();
  *(void *)(inited + 72) = sub_254E15988();
  *(void *)(inited + 80) = 0xD000000000000010;
  *(void *)(inited + 88) = 0x8000000254E51DD0;
  type metadata accessor for UsageMetricsDefinitions();
  uint64_t v1 = sub_254E157E8();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v1;
  strcpy((char *)(inited + 104), "errorMessage");
  *(unsigned char *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  *(void *)(inited + 120) = sub_254E157E8();
  *(void *)(inited + 128) = 0x7475626972747461;
  *(void *)(inited + 136) = 0xEF687461506E6F69;
  *(void *)(inited + 144) = sub_254E157E8();
  *(void *)(inited + 152) = 0x6F6F54726F727265;
  *(void *)(inited + 160) = 0xEB0000000064496CLL;
  *(void *)(inited + 168) = sub_254E157E8();
  *(void *)(inited + 176) = 0x6F4364656C696166;
  *(void *)(inited + 184) = 0xEB00000000746E75;
  sub_254720178(0, &qword_269E16398);
  *(void *)(inited + 192) = sub_254E15AA8();
  strcpy((char *)(inited + 200), "successCount");
  *(unsigned char *)(inited + 213) = 0;
  *(_WORD *)(inited + 214) = -5120;
  *(void *)(inited + 216) = sub_254E15AA8();
  *(void *)(inited + 224) = 0xD000000000000017;
  *(void *)(inited + 232) = 0x8000000254E51E10;
  *(void *)(inited + 240) = sub_254E15AF8();
  *(void *)(inited + 248) = 0xD000000000000015;
  *(void *)(inited + 256) = 0x8000000254E51DF0;
  *(void *)(inited + 264) = sub_254E15AF8();
  *(void *)(inited + 272) = 0xD000000000000010;
  *(void *)(inited + 280) = 0x8000000254E51E30;
  *(void *)(inited + 288) = sub_254E15AF8();
  return sub_25464A880(inited);
}

Swift::Void __swiftcall CoreAnalyticsEmitter.sendCoreAnalytics(eventName:eventPayload:)(Swift::String eventName, Swift::OpaquePointer eventPayload)
{
  uint64_t v3 = v2;
  object = eventName._object;
  uint64_t countAndFlagsBits = eventName._countAndFlagsBits;
  if (qword_269E0C090 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_254E15718();
  __swift_project_value_buffer(v7, (uint64_t)qword_269E70698);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_254E15708();
  os_log_type_t v9 = sub_254E15A38();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v15 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_254658670(countAndFlagsBits, (unint64_t)object, &v15);
    sub_254E15B08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2545B9000, v8, v9, "Logging CoreAnalytics for event type: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v11, -1, -1);
    MEMORY[0x25A27FC50](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = *(void (**)(uint64_t, void *, uint64_t (*)(), uint64_t))(v3 + 16);
  uint64_t v13 = (Swift::OpaquePointer *)swift_allocObject();
  v13[2]._rawValue = eventPayload._rawValue;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_254DD7A98;
  *(void *)(v14 + 24) = v13;
  swift_bridgeObjectRetain();
  v12(countAndFlagsBits, object, sub_254DD7D6C, v14);
  swift_release();
}

uint64_t sub_254DD6E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  return MEMORY[0x270FA2498](sub_254DD6E2C, 0, 0);
}

uint64_t sub_254DD6E2C()
{
  id v31 = v0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = (void *)sub_254E157E8();
  v0[3] = 1107296256;
  v0[6] = v2;
  v0[7] = v1;
  v0[2] = MEMORY[0x263EF8330];
  v0[4] = sub_254E124C8;
  v0[5] = &block_descriptor_2;
  uint64_t v4 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  LOBYTE(v1) = AnalyticsSendEventLazy();
  _Block_release(v4);

  if (v1)
  {
    if (qword_269E0C090 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_254E15718();
    __swift_project_value_buffer(v5, (uint64_t)qword_269E70698);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_254E15708();
    os_log_type_t v7 = sub_254E15A38();
    if (os_log_type_enabled(v6, v7))
    {
      unint64_t v8 = v0[9];
      unint64_t v27 = (uint64_t (*)(uint64_t))v0[10];
      uint64_t v9 = v0[8];
      uint64_t v10 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = v29;
      *(_DWORD *)uint64_t v10 = 136315394;
      swift_bridgeObjectRetain();
      v0[2] = sub_254658670(v9, v8, &v30);
      sub_254E15B08();
      uint64_t v11 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 12) = 2080;
      if (!v27(v11)) {
        sub_25464A880(MEMORY[0x263F8EE78]);
      }
      sub_254720178(0, (unint64_t *)&qword_26B26AAD0);
      uint64_t v12 = sub_254E15788();
      unint64_t v14 = v13;
      swift_bridgeObjectRelease();
      v0[2] = sub_254658670(v12, v14, &v30);
      sub_254E15B08();
      swift_bridgeObjectRelease();
      swift_release_n();
      os_log_type_t v15 = v7;
      uint64_t v16 = "Logged CoreAnalytics event type: %s, payload: %s";
LABEL_14:
      _os_log_impl(&dword_2545B9000, v6, v15, v16, (uint8_t *)v10, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v29, -1, -1);
      MEMORY[0x25A27FC50](v10, -1, -1);
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_269E0C090 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_254E15718();
    __swift_project_value_buffer(v17, (uint64_t)qword_269E70698);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_254E15708();
    os_log_type_t v18 = sub_254E15A48();
    if (os_log_type_enabled(v6, v18))
    {
      unint64_t v19 = v0[9];
      id v28 = (uint64_t (*)(uint64_t))v0[10];
      uint64_t v20 = v0[8];
      uint64_t v10 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = v29;
      *(_DWORD *)uint64_t v10 = 136315394;
      swift_bridgeObjectRetain();
      v0[2] = sub_254658670(v20, v19, &v30);
      sub_254E15B08();
      uint64_t v21 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 12) = 2080;
      if (!v28(v21)) {
        sub_25464A880(MEMORY[0x263F8EE78]);
      }
      sub_254720178(0, (unint64_t *)&qword_26B26AAD0);
      uint64_t v22 = sub_254E15788();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      v0[2] = sub_254658670(v22, v24, &v30);
      sub_254E15B08();
      swift_bridgeObjectRelease();
      swift_release_n();
      os_log_type_t v15 = v18;
      uint64_t v16 = "CoreAnalytics rejected event type: %s, payload: %s";
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_release_n();
LABEL_16:

  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_254DD7344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E163A0);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254DD7BFC(a1, (uint64_t)v8);
  uint64_t v9 = sub_254E15978();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2545C9374((uint64_t)v8, &qword_269E163A0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_254E15948();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_254E15968();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t CoreAnalyticsEmitter.deinit()
{
  swift_release();
  return v0;
}

uint64_t CoreAnalyticsEmitter.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

void sub_254DD7588(uint64_t a1, uint64_t a2, Swift::OpaquePointer a3)
{
}

uint64_t sub_254DD75AC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_254DD7688;
  return v6(a1);
}

uint64_t sub_254DD7688()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_254DD7780()
{
  uint64_t v1 = (int *)(type metadata accessor for UsageMetricsDefinitions() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_254E14D98();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v3 + v4 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(v6 + 64);
  uint64_t v10 = v2 | v7 | 7;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v11(v0 + v3 + v1[7], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11(v0 + v8, v5);

  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_254DD7908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UsageMetricsDefinitions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_254DD796C()
{
  type metadata accessor for UsageMetricsDefinitions();
  sub_254E14D98();

  return sub_254DD68A0();
}

uint64_t sub_254DD7A38()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_254DD7A60()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_254DD7A98()
{
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of CoreAnalyticsEmitterInterface.sendCoreAnalytics(eventName:eventPayload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for CoreAnalyticsEmitter()
{
  return self;
}

uint64_t method lookup function for CoreAnalyticsEmitter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoreAnalyticsEmitter);
}

uint64_t sub_254DD7AF0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_254DD7B38()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_254653D60;
  *(void *)(v4 + 88) = v3;
  *(_OWORD *)(v4 + 72) = v5;
  *(void *)(v4 + 64) = v2;
  return MEMORY[0x270FA2498](sub_254DD6E2C, 0, 0);
}

uint64_t sub_254DD7BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E163A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254DD7C64()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_254DD7C9C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[1] = sub_254653D60;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269E163B8 + dword_269E163B8);
  return v6(a1, v4);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_254DD7D78()
{
  uint64_t v0 = sub_254E15718();
  __swift_allocate_value_buffer(v0, qword_26B26A5F0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26B26A5F0);
  if (qword_26B26A5E8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B270798);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t BiomeEventIngestProcessor.__allocating_init(eventIngestor:config:userDefaults:biomeUseCase:telemetry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  BiomeEventIngestProcessor.init(eventIngestor:config:userDefaults:biomeUseCase:telemetry:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

char *BiomeEventIngestProcessor.init(eventIngestor:config:userDefaults:biomeUseCase:telemetry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)v6;
  *(void *)&v6[*(void *)(*(void *)v6 + 136)] = 0;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v12 + 80) - 8) + 32))(&v6[*(void *)(*(void *)v6 + 112)], a1);
  uint64_t v13 = &v6[*(void *)(*(void *)v6 + 120)];
  uint64_t v14 = type metadata accessor for IngestConfig();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a2, v14);
  *((void *)v6 + 2) = a3;
  os_log_type_t v15 = &v6[*(void *)(*(void *)v6 + 128)];
  *(void *)os_log_type_t v15 = a4;
  *((void *)v15 + 1) = a5;
  *(void *)&v6[*(void *)(*(void *)v6 + 136)] = a6;
  swift_release();
  return v6;
}

uint64_t sub_254DD8028()
{
  *(void *)(v1 + 48) = v0;
  *(void *)(v1 + 56) = *v0;
  return MEMORY[0x270FA2498](sub_254DD8070, 0, 0);
}

uint64_t sub_254DD8070()
{
  id v28 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  v0[8] = v2;
  uint64_t v3 = v1 + v2;
  uint64_t v4 = type metadata accessor for IngestConfig();
  v0[9] = v4;
  uint64_t v27 = *(void *)(v3 + *(int *)(v4 + 40));
  if (CollectionPolicy.canCollect()())
  {
    long long v5 = sub_254B925BC();
    v0[10] = v5;
    os_log_type_t v15 = v5;
    uint64_t v16 = v0[7];
    uint64_t v17 = sub_254E14E08();
    v0[11] = v17;
    v0[12] = *(void *)(v17 - 8);
    uint64_t v18 = swift_task_alloc();
    v0[13] = v18;
    id v19 = objc_msgSend(v15, sel_configuration);
    id v20 = objc_msgSend(v19, sel_streamUUID);

    sub_254E14DD8();
    uint64_t v21 = (void *)sub_254E157E8();
    id v22 = objc_msgSend(v15, sel_publisherWithUseCase_, v21);

    v0[14] = sub_254DD87D0(v22, v18);
    swift_beginAccess();
    uint64_t v23 = *(void *)(v16 + 96);
    uint64_t v24 = *(void *)(v16 + 80);
    uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v23 + 16) + **(int **)(v23 + 16));
    uint64_t v25 = (void *)swift_task_alloc();
    v0[15] = v25;
    void *v25 = v0;
    v25[1] = sub_254DD84F4;
    return v26(v24, v23);
  }
  else
  {
    if (qword_26B26A608 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_254E15718();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B26A5F0);
    swift_retain_n();
    uint64_t v7 = sub_254E15708();
    os_log_type_t v8 = sub_254E15A28();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v27 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v11 = IngestConfig.streamIdString.getter();
      v0[5] = sub_254658670(v11, v12, &v27);
      sub_254E15B08();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2545B9000, v7, v8, "Skipping %s: collection demands were not met", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v10, -1, -1);
      MEMORY[0x25A27FC50](v9, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_254DD84F4()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_254DD8724;
  }
  else
  {
    swift_endAccess();
    uint64_t v2 = sub_254DD8610;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_254DD8610()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  long long v5 = (void *)v0[10];
  if (v2)
  {
    swift_unknownObjectRetain();
    uint64_t v6 = sub_254B9256C();
    sub_254DD9D4C(v2, v6, v7);

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  }
  else
  {
    (*(void (**)(void, void))(v4 + 8))(v0[13], v0[11]);
  }
  swift_task_dealloc();
  os_log_type_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_254DD8724()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v4 = (void *)v0[10];
  swift_endAccess();

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  long long v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_254DD87D0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v42 = a1;
  uint64_t v5 = *v2;
  uint64_t v6 = (uint64_t)v2 + *(void *)(*v2 + 120);
  uint64_t v41 = *(void *)(*v2 + 88);
  type metadata accessor for IngestConfig();
  uint64_t v7 = sub_254B9256C();
  uint64_t v45 = sub_254DD97F4(v7, v8);
  swift_bridgeObjectRelease();
  int v9 = *(_DWORD *)(v6 + 20);
  int v39 = *(unsigned __int8 *)(v6 + 24);
  int v40 = v9;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  uint64_t v44 = v10 + 16;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  v37[1] = v11 + 16;
  unint64_t v52 = sub_254DDA930;
  uint64_t v53 = (void *)v10;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v49 = 1107296256;
  v37[2] = &v50;
  int v50 = sub_254DFD464;
  uint64_t v51 = &block_descriptor_3;
  uint64_t v38 = _Block_copy(&aBlock);
  uint64_t v43 = v10;
  swift_retain();
  swift_release();
  uint64_t v12 = sub_254E14E08();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  os_log_type_t v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v16 + v14 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v18 = (v16 + v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  id v19 = (char *)swift_allocObject();
  uint64_t v20 = *(void *)(v5 + 80);
  uint64_t v21 = v5;
  uint64_t v22 = v11;
  *((void *)v19 + 2) = v20;
  *((void *)v19 + 3) = v41;
  *((void *)v19 + 4) = *(void *)(v21 + 96);
  *((void *)v19 + 5) = v3;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v19[v16], v15, v12);
  uint64_t v23 = &v19[v17];
  *(_DWORD *)uint64_t v23 = v40;
  v23[4] = v39;
  *(void *)&v19[v18] = v11;
  unint64_t v52 = sub_254DDAA38;
  uint64_t v53 = v19;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v49 = 1107296256;
  int v50 = sub_254DFDAF0;
  uint64_t v51 = &block_descriptor_17;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v25 = v38;
  id v26 = objc_msgSend(v42, sel_drivableSinkWithBookmark_completion_shouldContinue_, v45, v38, v24);
  _Block_release(v24);
  _Block_release(v25);

  if (qword_26B26A608 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_254E15718();
  __swift_project_value_buffer(v27, (uint64_t)qword_26B26A5F0);
  uint64_t v28 = v43;
  swift_retain_n();
  swift_retain();
  uint64_t v29 = sub_254E15708();
  os_log_type_t v30 = sub_254E15A38();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t aBlock = v32;
    *(_DWORD *)uint64_t v31 = 134218242;
    swift_beginAccess();
    uint64_t v47 = *(void *)(v22 + 16);
    sub_254E15B08();
    swift_release();
    *(_WORD *)(v31 + 12) = 2080;
    swift_beginAccess();
    uint64_t v46 = *(void *)(v28 + 16);
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B26A680);
    uint64_t v33 = sub_254E15858();
    uint64_t v46 = sub_254658670(v33, v34, &aBlock);
    sub_254E15B08();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_2545B9000, v29, v30, "Processed %ld events. End Bookmark: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v32, -1, -1);
    MEMORY[0x25A27FC50](v31, -1, -1);
  }
  else
  {
    swift_release();
    swift_release_n();
  }
  swift_unknownObjectRelease();

  swift_beginAccess();
  uint64_t v35 = *(void *)(v28 + 16);
  swift_unknownObjectRetain();
  swift_release();
  swift_release();
  return v35;
}

void sub_254DD8DA0(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(a1, sel_state);
  if (!v6)
  {
    swift_beginAccess();
    *(void *)(a3 + 16) = a2;
    swift_unknownObjectRelease();
    uint64_t v17 = qword_26B26A608;
    swift_unknownObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_254E15718();
    __swift_project_value_buffer(v18, (uint64_t)qword_26B26A5F0);
    unint64_t v8 = sub_254E15708();
    os_log_type_t v19 = sub_254E15A28();
    if (!os_log_type_enabled(v8, v19)) {
      goto LABEL_23;
    }
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_2545B9000, v8, v19, "Stream completed", v10, 2u);
LABEL_22:
    MEMORY[0x25A27FC50](v10, -1, -1);
LABEL_23:

    return;
  }
  if (v6 == (id)1)
  {
    if (qword_26B26A608 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_254E15718();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B26A5F0);
    uint64_t v23 = a1;
    unint64_t v8 = sub_254E15708();
    os_log_type_t v9 = sub_254E15A48();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      v24[0] = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      id v12 = [v23 error];
      if (v12)
      {
        uint64_t v13 = v12;
        swift_getErrorValue();
        uint64_t v14 = sub_254E15E68();
        unint64_t v16 = v15;
      }
      else
      {
        unint64_t v16 = 0xE300000000000000;
        uint64_t v14 = 7104878;
      }
      sub_254658670(v14, v16, v24);
      sub_254E15B08();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2545B9000, v8, v9, "Error on stream with %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v11, -1, -1);
      goto LABEL_22;
    }
  }
  else
  {
    if (qword_26B26A608 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_254E15718();
    __swift_project_value_buffer(v20, (uint64_t)qword_26B26A5F0);
    uint64_t v23 = sub_254E15708();
    os_log_type_t v21 = sub_254E15A58();
    if (os_log_type_enabled(v23, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_2545B9000, v23, v21, "Unexpected completion state on stream", v22, 2u);
      MEMORY[0x25A27FC50](v22, -1, -1);
    }
  }
}

uint64_t sub_254DD9158(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(uint64_t *)((char *)a2 + *(void *)(*a2 + 136)))
  {
    swift_retain();
    sub_254E14E98();
    swift_release();
  }
  swift_unknownObjectRetain();
  self;
  unint64_t v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    os_log_type_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_eventBodyData);
    if (!v10)
    {
      if (qword_26B26A608 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_254E15718();
      __swift_project_value_buffer(v20, (uint64_t)qword_26B26A5F0);
      os_log_type_t v21 = sub_254E15708();
      os_log_type_t v22 = sub_254E15A58();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_2545B9000, v21, v22, "Event missing body data", v23, 2u);
        MEMORY[0x25A27FC50](v23, -1, -1);
      }

      goto LABEL_26;
    }
    uint64_t v11 = v10;
    uint64_t v12 = sub_254E14C88();
    unint64_t v14 = v13;

    if ((a4 & 0x100000000) != 0 || objc_msgSend(v9, sel_eventBodyDataVersion) == a4)
    {
      unint64_t v15 = (void *)MEMORY[0x25A27F530]();
      sub_254DD9704(a2, v12, v14, v9);
      uint64_t v24 = (void *)(a5 + 16);
      swift_beginAccess();
      if (!__OFADD__(*v24, 1))
      {
        ++*v24;
        if (*(uint64_t *)((char *)a2 + *(void *)(*a2 + 136)))
        {
          swift_retain();
          sub_254E14E88();
          sub_2545DDDFC(v12, v14);
          swift_release();
        }
        else
        {
          sub_2545DDDFC(v12, v14);
        }
LABEL_26:
        swift_unknownObjectRelease();
        return 1;
      }
      __break(1u);
    }
    else if (qword_26B26A608 == -1)
    {
LABEL_22:
      uint64_t v25 = sub_254E15718();
      __swift_project_value_buffer(v25, (uint64_t)qword_26B26A5F0);
      id v26 = sub_254E15708();
      os_log_type_t v27 = sub_254E15A48();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl(&dword_2545B9000, v26, v27, "Ignore incompatible data version", v28, 2u);
        MEMORY[0x25A27FC50](v28, -1, -1);
      }
      sub_2545DDDFC(v12, v14);
      swift_unknownObjectRelease();

      return 1;
    }
    swift_once();
    goto LABEL_22;
  }
  swift_unknownObjectRelease();
  if (qword_26B26A608 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_254E15718();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B26A5F0);
  uint64_t v17 = sub_254E15708();
  os_log_type_t v18 = sub_254E15A58();
  if (os_log_type_enabled(v17, v18))
  {
    os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v19 = 0;
    _os_log_impl(&dword_2545B9000, v17, v18, "Can't get BMStoreEvent out of the stream", v19, 2u);
    MEMORY[0x25A27FC50](v19, -1, -1);
  }

  return 1;
}

uint64_t sub_254DD9704(uint64_t *a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v6 = *a1;
  objc_msgSend(a4, sel_timestamp);
  double v8 = v7;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, void, double))(*(void *)(v6 + 96) + 8))(a2, a3, *(void *)(v6 + 80), v8);
  return swift_endAccess();
}

uint64_t sub_254DD97F4(uint64_t a1, unint64_t a2)
{
  v37[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *(void **)(v2 + 16);
  uint64_t v6 = (void *)sub_254E157E8();
  id v7 = objc_msgSend(v5, sel_valueForKey_, v6);

  if (v7)
  {
    sub_254E15B28();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v36, 0, sizeof(v36));
  }
  sub_254DDA880((uint64_t)v36, (uint64_t)v37);
  if (!v37[3])
  {
    sub_2546509CC((uint64_t)v37);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  double v8 = self;
  id v9 = objc_msgSend(self, sel_bm_allowedClassesForSecureCodingBMBookmark);
  sub_254E159B8();

  id v10 = (void *)sub_254E159A8();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_254E14C68();
  v37[0] = 0;
  id v12 = objc_msgSend(v8, sel_unarchivedObjectOfClasses_fromData_error_, v10, v11, v37);

  if (!v12)
  {
    id v23 = v37[0];
    uint64_t v24 = (void *)sub_254E14C48();

    swift_willThrow();
    if (qword_26B26A608 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_254E15718();
    __swift_project_value_buffer(v25, (uint64_t)qword_26B26A5F0);
    id v26 = v24;
    id v27 = v24;
    uint64_t v28 = sub_254E15708();
    os_log_type_t v29 = sub_254E15A48();
    if (os_log_type_enabled(v28, v29))
    {
      os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v30 = 138412290;
      id v32 = v24;
      uint64_t v33 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v37[0] = v33;
      sub_254E15B08();
      *uint64_t v31 = v33;

      _os_log_impl(&dword_2545B9000, v28, v29, "Error decoding bookmark: %@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269E163F0);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v31, -1, -1);
      MEMORY[0x25A27FC50](v30, -1, -1);
      sub_2545DDDFC(v34, v35);
    }
    else
    {
      sub_2545DDDFC(v34, v35);
    }
    return 0;
  }
  id v13 = v37[0];
  sub_254E15B28();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B26A670);
  if (swift_dynamicCast()) {
    uint64_t v14 = *(void *)&v36[0];
  }
  else {
    uint64_t v14 = 0;
  }
  if (qword_26B26A608 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_254E15718();
  __swift_project_value_buffer(v15, (uint64_t)qword_26B26A5F0);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_254E15708();
  os_log_type_t v17 = sub_254E15A38();
  if (os_log_type_enabled(v16, v17))
  {
    os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v19 = (void *)swift_slowAlloc();
    v37[0] = v19;
    *(_DWORD *)os_log_type_t v18 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&v36[0] = sub_254658670(a1, a2, (uint64_t *)v37);
    sub_254E15B08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2545B9000, v16, v17, "Bookmark for %s found", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v19, -1, -1);
    MEMORY[0x25A27FC50](v18, -1, -1);
    unint64_t v21 = v35;
    uint64_t v20 = v34;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v20 = v34;
    unint64_t v21 = v35;
  }
  sub_2545DDDFC(v20, v21);

  return v14;
}

void sub_254DD9D4C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  v32[1] = *(id *)MEMORY[0x263EF8340];
  if (qword_26B26A608 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_254E15718();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B26A5F0);
  swift_bridgeObjectRetain_n();
  double v8 = sub_254E15708();
  os_log_type_t v9 = sub_254E15A38();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    v32[0] = v11;
    *(_DWORD *)id v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_254658670(a2, a3, (uint64_t *)v32);
    sub_254E15B08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2545B9000, v8, v9, "Saving bookmark for %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v11, -1, -1);
    MEMORY[0x25A27FC50](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v12 = self;
  v32[0] = 0;
  id v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v32);
  id v14 = v32[0];
  if (v13)
  {
    uint64_t v15 = sub_254E14C88();
    unint64_t v17 = v16;

    os_log_type_t v18 = *(void **)(v4 + 16);
    sub_2545D7BF0(v15, v17);
    os_log_type_t v19 = (void *)sub_254E14C68();
    sub_2545DDDFC(v15, v17);
    uint64_t v20 = (void *)sub_254E157E8();
    objc_msgSend(v18, sel_setValue_forKey_, v19, v20);
    sub_2545DDDFC(v15, v17);
  }
  else
  {
    unint64_t v21 = v14;
    os_log_type_t v22 = (void *)sub_254E14C48();

    swift_willThrow();
    id v23 = v22;
    id v24 = v22;
    uint64_t v25 = sub_254E15708();
    os_log_type_t v26 = sub_254E15A48();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)id v27 = 138412290;
      id v29 = v22;
      os_log_type_t v30 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v32[0] = v30;
      sub_254E15B08();
      *uint64_t v28 = v30;

      _os_log_impl(&dword_2545B9000, v25, v26, "Error encoding bookmark: %@", v27, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269E163F0);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v28, -1, -1);
      MEMORY[0x25A27FC50](v27, -1, -1);
    }
    else
    {
    }
  }
}

id *BiomeEventIngestProcessor.deinit()
{
  uint64_t v1 = *v0;

  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 14));
  uint64_t v2 = (char *)v0 + *((void *)*v0 + 15);
  uint64_t v3 = type metadata accessor for IngestConfig();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t BiomeEventIngestProcessor.__deallocating_deinit()
{
  BiomeEventIngestProcessor.deinit();

  return swift_deallocClassInstance();
}

LighthouseDataProcessor::BiomeEventIngestError_optional __swiftcall BiomeEventIngestError.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254E15CC8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t BiomeEventIngestError.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000019;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_254DDA374(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2547072DC(*a1, *a2);
}

uint64_t sub_254DDA380()
{
  return sub_254DFC3BC();
}

uint64_t sub_254DDA388()
{
  return sub_2547080EC();
}

uint64_t sub_254DDA390()
{
  return sub_254708BC8();
}

LighthouseDataProcessor::BiomeEventIngestError_optional sub_254DDA398(Swift::String *a1)
{
  return BiomeEventIngestError.init(rawValue:)(*a1);
}

unint64_t sub_254DDA3A4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BiomeEventIngestError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_254DDA3E0()
{
  unint64_t result = qword_269E163D0;
  if (!qword_269E163D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E163D0);
  }
  return result;
}

uint64_t sub_254DDA434()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for IngestConfig();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for BiomeEventIngestProcessor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for BiomeEventIngestProcessor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for BiomeEventIngestProcessor);
}

uint64_t dispatch thunk of BiomeEventIngestProcessor.__allocating_init(eventIngestor:config:userDefaults:biomeUseCase:telemetry:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of BiomeEventIngestProcessor.ingest()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 200) + **(int **)(*(void *)v0 + 200));
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_254653D60;
  return v4();
}

unsigned char *storeEnumTagSinglePayload for BiomeEventIngestError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DDA730);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomeEventIngestError()
{
  return &type metadata for BiomeEventIngestError;
}

uint64_t dispatch thunk of EventIngestor.append(data:timestamp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of EventIngestor.commit()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_25465416C;
  return v7(a1, a2);
}

uint64_t sub_254DDA880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B270080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254DDA8E8()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_254DDA920()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_254DDA930(void *a1, uint64_t a2)
{
  sub_254DD8DA0(a1, a2, v2);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_254DDA950()
{
  uint64_t v1 = sub_254E14E08();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_254DDAA38(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_254E14E08() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  unint64_t v6 = *(uint64_t **)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v8 = *(unsigned int *)(v1 + ((v5 + 3) & 0xFFFFFFFFFFFFFFFCLL)) | ((unint64_t)*(unsigned __int8 *)(v1 + ((v5 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4) << 32);

  return sub_254DD9158(a1, v6, v1 + v4, v8, v7);
}

id sub_254DDAB08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
  uint64_t v78 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v81 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10888);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v80 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F850);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  id v12 = (unsigned int *)((char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  id v14 = (unsigned int *)((char *)&v77 - v13);
  uint64_t v15 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  uint64_t v79 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v82 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C300);
  MEMORY[0x270FA5388](v17 - 8);
  os_log_type_t v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C2F8);
  MEMORY[0x270FA5388](v20 - 8);
  os_log_type_t v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E170]), sel_init);
  sub_2545C9310(a1, (uint64_t)v19, &qword_269E0C300);
  uint64_t v24 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v19, 1, v24) == 1)
  {
    sub_2545C9374((uint64_t)v19, &qword_269E0C300);
    uint64_t v25 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v22, 1, 1, v25);

    return 0;
  }
  id v77 = v23;
  sub_2545C9310((uint64_t)v19, (uint64_t)v22, &qword_269E0C2F8);
  sub_254DDB6DC((uint64_t)v19, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
  uint64_t v26 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v22, 1, v26) == 1)
  {

    return 0;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v36 = v81;
      sub_254DDB60C((uint64_t)v22, v81, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E090]), sel_init);
      uint64_t v38 = *(void *)v36;
      uint64_t v39 = *(void *)(*(void *)v36 + 16);
      if (v39)
      {
        uint64_t v40 = v38 + ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80));
        uint64_t v82 = *(void *)(v78 + 72);
        uint64_t v80 = v38;
        swift_bridgeObjectRetain();
        uint64_t v41 = &qword_26B26F850;
        id v42 = &off_2653B2000;
        do
        {
          sub_254DDB674(v40, (uint64_t)v4, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
          id v43 = [objc_allocWithZone(MEMORY[0x263F6E138]) (SEL)v42[394]];
          if (v43)
          {
            uint64_t v44 = v43;
            uint64_t v45 = v2;
            uint64_t v46 = *(int *)(v2 + 20);
            uint64_t v47 = v41;
            uint64_t v48 = &v4[v46];
            id v49 = [objc_allocWithZone(MEMORY[0x263F6E140]) (SEL)v42[394]];
            uint64_t v50 = (uint64_t)v48;
            uint64_t v41 = v47;
            sub_2545C9310(v50, (uint64_t)v12, v47);
            uint64_t v51 = type metadata accessor for TranscriptProtoStatementID(0);
            if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v12, 1, v51) == 1)
            {
              sub_2545C9374((uint64_t)v12, v47);
            }
            else
            {
              uint64_t v52 = *v12;
              sub_254DDB6DC((uint64_t)v12, type metadata accessor for TranscriptProtoStatementID);
              uint64_t v53 = v52;
              uint64_t v41 = v47;
              objc_msgSend(v49, sel_setIndex_, v53);
            }
            objc_msgSend(v44, sel_setStatementId_, v49);

            uint64_t v2 = v45;
            if (v37)
            {
              objc_msgSend(v37, sel_addCandidates_, v44);

              sub_254DDB6DC((uint64_t)v4, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
            }
            else
            {
              sub_254DDB6DC((uint64_t)v4, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
            }
            id v42 = &off_2653B2000;
          }
          else
          {
            sub_254DDB6DC((uint64_t)v4, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
          }
          v40 += v82;
          --v39;
        }
        while (v39);
        swift_bridgeObjectRelease();
      }
      id v27 = v77;
      if (v77)
      {
        objc_msgSend(v77, sel_setSpeech_, v37);

        sub_254DDB6DC(v81, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      }
      else
      {
        sub_254DDB6DC(v81, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      }
      break;
    case 2u:
      id v27 = v77;
      if (v77)
      {
        id v54 = objc_allocWithZone(MEMORY[0x263F6E0B0]);
        id v55 = v27;
        id v56 = objc_msgSend(v54, sel_init);
        objc_msgSend(v55, sel_setTouch_, v56);

        id v57 = objc_msgSend(v55, sel_touch);
        goto LABEL_27;
      }
      break;
    case 3u:
      id v27 = v77;
      if (v77)
      {
        id v58 = objc_allocWithZone(MEMORY[0x263F6E088]);
        id v59 = v27;
        id v60 = objc_msgSend(v58, sel_init);
        objc_msgSend(v59, sel_setHeadGesture_, v60);

        id v57 = objc_msgSend(v59, sel_headGesture);
LABEL_27:
        id v61 = v57;
        if (v61)
        {
          uint64_t v62 = v61;
          objc_msgSend(v61, sel_setExists_, 1);
        }
      }
      break;
    default:
      uint64_t v29 = v82;
      sub_254DDB60C((uint64_t)v22, v82, type metadata accessor for TranscriptProtoRequestContentTextContent);
      id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E0A0]), sel_init);
      if (v30)
      {
        uint64_t v31 = v29 + *(int *)(v15 + 20);
        id v32 = objc_allocWithZone(MEMORY[0x263F6E140]);
        id v33 = v30;
        id v34 = objc_msgSend(v32, sel_init);
        sub_2545C9310(v31, (uint64_t)v14, &qword_26B26F850);
        uint64_t v35 = type metadata accessor for TranscriptProtoStatementID(0);
        if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v14, 1, v35) == 1)
        {
          sub_2545C9374((uint64_t)v14, &qword_26B26F850);
        }
        else
        {
          uint64_t v63 = *v14;
          sub_254DDB6DC((uint64_t)v14, type metadata accessor for TranscriptProtoStatementID);
          objc_msgSend(v34, sel_setIndex_, v63);
        }
        objc_msgSend(v33, sel_setStatementId_, v34);
      }
      uint64_t v64 = sub_254E14E08();
      uint64_t v65 = *(void *)(v64 - 8);
      MEMORY[0x270FA5388](v64);
      unint64_t v67 = (char *)&v77 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_254E14DF8();
      id v68 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
      uint64_t v69 = (void *)sub_254E14DC8();
      id v70 = objc_msgSend(v68, sel_initWithNSUUID_, v69);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v67, v64);
      if (v30) {
        objc_msgSend(v30, sel_setLinkId_, v70);
      }
      uint64_t v71 = v82;
      uint64_t v72 = v80;
      sub_254DDB674(v82, v80, type metadata accessor for TranscriptProtoRequestContentTextContent);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v79 + 56))(v72, 0, 1, v15);
      id v73 = sub_254E07D28(v72, (uint64_t)v70);
      unint64_t v75 = v74;
      sub_2545C9374(v72, &qword_269E10888);
      id v76 = v73;
      id v27 = v77;
      if (v77)
      {
        objc_msgSend(v77, sel_setText_, v30);

        sub_254DDB6DC(v71, type metadata accessor for TranscriptProtoRequestContentTextContent);
      }
      else
      {
        sub_254DDB6DC(v71, type metadata accessor for TranscriptProtoRequestContentTextContent);
      }
      break;
  }
  return v27;
}

uint64_t sub_254DDB60C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_254DDB674(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254DDB6DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_254DDB73C()
{
  uint64_t v0 = sub_254E153B8();
  __swift_allocate_value_buffer(v0, qword_269E706D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_269E706D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269E105D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269E105E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_254E1A030;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "sessionId";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_254E15388();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "events";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  return sub_254E15398();
}

uint64_t sub_254DDB8F4()
{
  uint64_t result = sub_254E150B8();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for DillSessionEvent(0);
        sub_254DE7D8C(&qword_269E16400, (void (*)(uint64_t))type metadata accessor for DillSessionEvent);
        sub_254E15218();
      }
      else if (result == 1)
      {
        sub_254E15138();
      }
      uint64_t result = sub_254E150B8();
    }
  }
  return result;
}

uint64_t sub_254DDBA10()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_254E152D8();
      if (!v1)
      {
LABEL_8:
        if (!*(void *)(v0[2] + 16)
          || (type metadata accessor for DillSessionEvent(0),
              sub_254DE7D8C(&qword_269E16400, (void (*)(uint64_t))type metadata accessor for DillSessionEvent),
              uint64_t result = sub_254E15368(),
              !v1))
        {
          type metadata accessor for DillSession(0);
          return sub_254E14FA8();
        }
      }
      return result;
  }
}

double sub_254DDBB80@<D0>(uint64_t a1@<X8>)
{
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  double result = 0.0;
  *(_OWORD *)a1 = xmmword_254E1AED0;
  *(void *)(a1 + 16) = MEMORY[0x263F8EE78];
  return result;
}

unint64_t sub_254DDBBC4()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_254DDBBE0()
{
  return sub_254DDB8F4();
}

uint64_t sub_254DDBBF8()
{
  return sub_254DDBA10();
}

uint64_t sub_254DDBC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254DE7D8C(&qword_269E16430, (void (*)(uint64_t))type metadata accessor for DillSession);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_254DDBC8C@<X0>(uint64_t a1@<X8>)
{
  return sub_2547F5CB4(&qword_269E0C0D0, (uint64_t)qword_269E706D8, a1);
}

uint64_t sub_254DDBCB0()
{
  sub_254DE7D8C(&qword_269E10D50, (void (*)(uint64_t))type metadata accessor for DillSession);

  return sub_254E15268();
}

uint64_t sub_254DDBD1C()
{
  sub_254DE7D8C(&qword_269E10D50, (void (*)(uint64_t))type metadata accessor for DillSession);

  return sub_254E15278();
}

uint64_t sub_254DDBD9C()
{
  uint64_t v0 = sub_254E153B8();
  __swift_allocate_value_buffer(v0, qword_269E706F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269E706F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269E105D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269E105E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_254E1A030;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "timestamp";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x263F50718];
  uint64_t v8 = sub_254E15388();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 100;
  *(void *)uint64_t v10 = "transcript";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v9();
  return sub_254E15398();
}

uint64_t sub_254DDBF58()
{
  while (1)
  {
    uint64_t result = sub_254E150B8();
    if (v0 || (v2 & 1) != 0) {
      break;
    }
    if (result == 100)
    {
      sub_254DDBFE8();
    }
    else if (result == 1)
    {
      sub_254E151C8();
    }
  }
  return result;
}

uint64_t sub_254DDBFE8()
{
  uint64_t result = sub_254E15128();
  if (v0) {
    return sub_25466C0F8(0, 0xF000000000000000);
  }
  return result;
}

uint64_t sub_254DDC0B0()
{
  if (*(double *)v0 == 0.0 || (uint64_t result = sub_254E15328(), !v1))
  {
    if (*(void *)(v0 + 16) >> 60 == 15 || (uint64_t result = sub_254DDC178(v0), !v1))
    {
      type metadata accessor for DillSessionEvent(0);
      return sub_254E14FA8();
    }
  }
  return result;
}

uint64_t sub_254DDC178(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = *(void *)(result + 8);
    sub_2545D7BF0(v2, v1);
    sub_254E152D8();
    return sub_25466C0F8(v2, v1);
  }
  return result;
}

uint64_t sub_254DDC208@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(a1 + 8) = xmmword_254E18B60;
  uint64_t result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(void *)a1 = 0;
  return result;
}

unint64_t sub_254DDC244()
{
  return 0xD000000000000021;
}

uint64_t sub_254DDC260()
{
  return sub_254DDBF58();
}

uint64_t sub_254DDC278()
{
  return sub_254DDC0B0();
}

uint64_t sub_254DDC290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254DE7D8C(&qword_269E16438, (void (*)(uint64_t))type metadata accessor for DillSessionEvent);

  return MEMORY[0x270F44AE8](a1, a2, v4);
}

uint64_t sub_254DDC30C@<X0>(uint64_t a1@<X8>)
{
  return sub_2547F5CB4(&qword_269E0C0D8, (uint64_t)qword_269E706F0, a1);
}

uint64_t sub_254DDC330()
{
  sub_254DE7D8C(&qword_269E16400, (void (*)(uint64_t))type metadata accessor for DillSessionEvent);

  return sub_254E15268();
}

uint64_t sub_254DDC39C()
{
  sub_254DE7D8C(&qword_269E16400, (void (*)(uint64_t))type metadata accessor for DillSessionEvent);

  return sub_254E15278();
}

uint64_t sub_254DDC41C()
{
  return sub_254DE7D8C(&qword_269E163F8, (void (*)(uint64_t))type metadata accessor for DillSessionEvent);
}

uint64_t sub_254DDC464()
{
  return sub_254DE7D8C(&qword_269E16400, (void (*)(uint64_t))type metadata accessor for DillSessionEvent);
}

uint64_t sub_254DDC4AC()
{
  return sub_254DE7D8C(&qword_269E16408, (void (*)(uint64_t))type metadata accessor for DillSessionEvent);
}

uint64_t sub_254DDC4F4()
{
  return sub_254DE7D8C(&qword_269E16410, (void (*)(uint64_t))type metadata accessor for DillSessionEvent);
}

uint64_t sub_254DDC53C()
{
  return sub_254DE7D8C(&qword_269E16418, (void (*)(uint64_t))type metadata accessor for DillSession);
}

uint64_t sub_254DDC584()
{
  return sub_254DE7D8C(&qword_269E10D50, (void (*)(uint64_t))type metadata accessor for DillSession);
}

uint64_t sub_254DDC5CC()
{
  return sub_254DE7D8C(&qword_269E16420, (void (*)(uint64_t))type metadata accessor for DillSession);
}

uint64_t sub_254DDC614()
{
  return sub_254DE7D8C(&qword_269E16428, (void (*)(uint64_t))type metadata accessor for DillSession);
}

uint64_t sub_254DDC65C@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_2545D7BF0(a2, a3);
      uint64_t v10 = (char *)sub_254E14C08();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_254E14C28();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_254E14C18();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x254DDC8C0);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_2545DDDFC(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_254E14C08();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_254E14C28();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_254E14C18();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_254DDC8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContextProtoEntityMatch(0);
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v55 - v8;
  uint64_t v10 = type metadata accessor for ToolKitProtoTypedValue(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  size_t v13 = (uint64_t *)((char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C360);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10640);
  MEMORY[0x270FA5388](v17);
  BOOL v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ContextProtoSpanMatchedEntity(0);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = *(void *)(a1 + 16);
  if (v26 != *(void *)(a2 + 16))
  {
LABEL_34:
    char v53 = 0;
    return v53 & 1;
  }
  uint64_t v66 = v17;
  uint64_t v69 = (uint64_t *)((char *)&v55 - v24);
  id v70 = (uint64_t *)v25;
  if (!v26 || a1 == a2)
  {
    char v53 = 1;
    return v53 & 1;
  }
  uint64_t v68 = v22;
  uint64_t v27 = 0;
  unint64_t v28 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v63 = a2 + v28;
  uint64_t v64 = a1 + v28;
  uint64_t v29 = *(void *)(v23 + 72);
  id v61 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v62 = v29;
  id v59 = v16;
  id v60 = v13;
  uint64_t v57 = v10;
  id v58 = v19;
  uint64_t v56 = v26;
  while (1)
  {
    uint64_t v65 = v27;
    uint64_t v30 = v62 * v27;
    uint64_t v31 = (uint64_t)v69;
    sub_254DE7E3C(v64 + v62 * v27, (uint64_t)v69, type metadata accessor for ContextProtoSpanMatchedEntity);
    uint64_t v32 = v63 + v30;
    uint64_t v33 = (uint64_t)v70;
    sub_254DE7E3C(v32, (uint64_t)v70, type metadata accessor for ContextProtoSpanMatchedEntity);
    uint64_t v34 = *(int *)(v68 + 20);
    uint64_t v35 = v31 + v34;
    uint64_t v36 = v33 + v34;
    uint64_t v37 = (uint64_t)&v19[*(int *)(v66 + 48)];
    sub_2545C9310(v35, (uint64_t)v19, &qword_269E0C360);
    sub_2545C9310(v36, v37, &qword_269E0C360);
    uint64_t v38 = *v61;
    if ((*v61)(v19, 1, v10) == 1)
    {
      if (v38((char *)v37, 1, v10) == 1)
      {
        sub_2545C9374((uint64_t)v19, &qword_269E0C360);
        goto LABEL_15;
      }
      id v54 = &qword_269E10640;
LABEL_32:
      sub_2545C9374((uint64_t)v19, v54);
LABEL_33:
      sub_254DE7EA4((uint64_t)v70, type metadata accessor for ContextProtoSpanMatchedEntity);
      sub_254DE7EA4((uint64_t)v69, type metadata accessor for ContextProtoSpanMatchedEntity);
      goto LABEL_34;
    }
    sub_2545C9310((uint64_t)v19, (uint64_t)v16, &qword_269E0C360);
    if (v38((char *)v37, 1, v10) == 1)
    {
      id v54 = &qword_269E10640;
LABEL_31:
      sub_254DE7EA4((uint64_t)v16, type metadata accessor for ToolKitProtoTypedValue);
      goto LABEL_32;
    }
    sub_254DE7DD4(v37, (uint64_t)v13, type metadata accessor for ToolKitProtoTypedValue);
    uint64_t v39 = *v16;
    uint64_t v40 = *v13;
    if ((~*v16 & 0xF000000000000007) == 0)
    {
      if ((~v40 & 0xF000000000000007) != 0) {
        goto LABEL_29;
      }
      goto LABEL_14;
    }
    uint64_t v72 = *v16;
    if ((~v40 & 0xF000000000000007) == 0)
    {
      sub_254720AF8(v39);
LABEL_29:
      sub_254720AF8(v40);
      sub_254720B10(v39);
      sub_254720B10(v40);
LABEL_30:
      sub_254DE7EA4((uint64_t)v13, type metadata accessor for ToolKitProtoTypedValue);
      id v54 = &qword_269E0C360;
      goto LABEL_31;
    }
    uint64_t v71 = v40;
    sub_254720AF8(v39);
    swift_retain();
    char v41 = static ToolKitProtoTypedValueKind.== infix(_:_:)(&v72, &v71);
    swift_release();
    sub_254720B10(v39);
    if ((v41 & 1) == 0) {
      goto LABEL_30;
    }
LABEL_14:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v42 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v13, type metadata accessor for ToolKitProtoTypedValue);
    sub_254DE7EA4((uint64_t)v16, type metadata accessor for ToolKitProtoTypedValue);
    sub_2545C9374((uint64_t)v19, &qword_269E0C360);
    if ((v42 & 1) == 0) {
      goto LABEL_33;
    }
LABEL_15:
    uint64_t v43 = *v69;
    uint64_t v44 = *v70;
    uint64_t v45 = *(void *)(*v69 + 16);
    if (v45 != *(void *)(*v70 + 16)) {
      goto LABEL_33;
    }
    if (v45 && v43 != v44) {
      break;
    }
LABEL_22:
    uint64_t v51 = (uint64_t)v69;
    uint64_t v52 = (uint64_t)v70;
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v53 = sub_254E157D8();
    sub_254DE7EA4(v52, type metadata accessor for ContextProtoSpanMatchedEntity);
    sub_254DE7EA4(v51, type metadata accessor for ContextProtoSpanMatchedEntity);
    if (v53)
    {
      uint64_t v27 = v65 + 1;
      uint64_t v10 = v57;
      uint64_t v16 = v59;
      size_t v13 = v60;
      BOOL v19 = v58;
      if (v65 + 1 != v56) {
        continue;
      }
    }
    return v53 & 1;
  }
  unint64_t v46 = 0;
  unint64_t v47 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  uint64_t v48 = *(void *)(v67 + 72);
  while (1)
  {
    uint64_t result = sub_254DE7E3C(v43 + v47, (uint64_t)v9, type metadata accessor for ContextProtoEntityMatch);
    if (v46 >= *(void *)(v44 + 16)) {
      break;
    }
    sub_254DE7E3C(v44 + v47, (uint64_t)v7, type metadata accessor for ContextProtoEntityMatch);
    char v50 = static ContextProtoEntityMatch.== infix(_:_:)(v9, v7);
    sub_254DE7EA4((uint64_t)v7, type metadata accessor for ContextProtoEntityMatch);
    sub_254DE7EA4((uint64_t)v9, type metadata accessor for ContextProtoEntityMatch);
    if ((v50 & 1) == 0) {
      goto LABEL_33;
    }
    ++v46;
    v47 += v48;
    if (v45 == v46) {
      goto LABEL_22;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_254DDD058(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ContextProtoRetrievedContext, type metadata accessor for ContextProtoRetrievedContext, (uint64_t (*)(char *, char *))static ContextProtoRetrievedContext.== infix(_:_:), type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t sub_254DDD0AC(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ContextProtoRetrievedTool, type metadata accessor for ContextProtoRetrievedTool, (uint64_t (*)(char *, char *))static ContextProtoRetrievedTool.== infix(_:_:), type metadata accessor for ContextProtoRetrievedTool);
}

uint64_t sub_254DDD100(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *), uint64_t (*a6)(void))
{
  uint64_t v11 = a3(0) - 8;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 == *(void *)(a2 + 16))
  {
    if (!v18 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v28 = a2;
      BOOL v19 = a5;
      unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v21 = *(void *)(v15 + 72);
      uint64_t v22 = v18 - 1;
      do
      {
        sub_254DE7E3C(a1 + v20, (uint64_t)v17, a4);
        sub_254DE7E3C(v28 + v20, (uint64_t)v14, a4);
        char v23 = v19(v17, v14);
        sub_254DE7EA4((uint64_t)v14, a6);
        sub_254DE7EA4((uint64_t)v17, a6);
        BOOL v25 = v22-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v20 += v21;
      }
      while (v25);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_254DDD29C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v21 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  if (!v11 || a1 == a2)
  {
    char v17 = 1;
    return v17 & 1;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v22 = *(void *)(v8 + 72);
  uint64_t v13 = v11 - 1;
  while (1)
  {
    sub_254DE7E3C(a1 + v12, (uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
    sub_254DE7E3C(a2 + v12, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    uint64_t v14 = *v10;
    uint64_t v15 = *v7;
    if ((~*v10 & 0xF000000000000007) != 0) {
      break;
    }
    if ((~v15 & 0xF000000000000007) != 0) {
      goto LABEL_18;
    }
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v17 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
    BOOL v19 = v13-- != 0;
    if (v17)
    {
      v12 += v22;
      if (v19) {
        continue;
      }
    }
    return v17 & 1;
  }
  uint64_t v24 = *v10;
  if ((~v15 & 0xF000000000000007) != 0)
  {
    uint64_t v23 = v15;
    sub_254720AF8(v14);
    sub_254720AF8(v14);
    char v16 = _s23LighthouseDataProcessor26ToolKitProtoTypedValueKindO2eeoiySbAC_ACtFZ_0(&v24, (unint64_t *)&v23);
    swift_release();
    sub_254720B10(v14);
    if ((v16 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  swift_retain();
LABEL_18:
  sub_254720AF8(v15);
  sub_254720B10(v14);
  sub_254720B10(v15);
LABEL_19:
  sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
LABEL_20:
  char v17 = 0;
  return v17 & 1;
}

uint64_t sub_254DDD560(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t (*)(char *, char *))static TranscriptProtoASTFlatExprUpdateVariant.== infix(_:_:), type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant);
}

uint64_t sub_254DDD5B4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_254E15E08(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_254E15E08() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_254DDD67C(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t (*)(char *, char *))static TranscriptProtoUpdateParameterExpression_UpdateParameter.== infix(_:_:), type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

uint64_t sub_254DDD6D0(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V6EntityV8PropertyV2eeoiySbAI_AItFZ_0, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_254DDD724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0CB20);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E161C8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  char v17 = (uint64_t *)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v21 = (uint64_t *)((char *)&v39 - v20);
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16))
  {
LABEL_25:
    char v35 = 0;
    return v35 & 1;
  }
  uint64_t v42 = v11;
  uint64_t v47 = v4;
  if (v22 && a1 != a2)
  {
    uint64_t v48 = v18;
    uint64_t v40 = v7;
    char v41 = v10;
    unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v43 = *(void *)(v19 + 72);
    uint64_t v44 = a1;
    uint64_t v45 = a2;
    unint64_t v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v24 = v22 - 1;
    uint64_t v25 = v42;
    while (1)
    {
      sub_254DE7E3C(a1 + v23, (uint64_t)v21, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
      sub_254DE7E3C(a2 + v23, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
      BOOL v26 = *v21 == *v17 && v21[1] == v17[1];
      if (!v26 && (sub_254E15E08() & 1) == 0) {
        break;
      }
      uint64_t v27 = *(int *)(v48 + 20);
      uint64_t v28 = (uint64_t)v17 + v27;
      uint64_t v29 = (uint64_t)&v13[*(int *)(v25 + 48)];
      sub_2545C9310((uint64_t)v21 + v27, (uint64_t)v13, &qword_269E0CB20);
      sub_2545C9310(v28, v29, &qword_269E0CB20);
      uint64_t v30 = v47;
      uint64_t v31 = *v46;
      if ((*v46)(v13, 1, v47) == 1)
      {
        if (v31((char *)v29, 1, v30) != 1) {
          goto LABEL_23;
        }
        sub_2545C9374((uint64_t)v13, &qword_269E0CB20);
      }
      else
      {
        uint64_t v32 = v41;
        sub_2545C9310((uint64_t)v13, (uint64_t)v41, &qword_269E0CB20);
        if (v31((char *)v29, 1, v30) == 1)
        {
          sub_254DE7EA4((uint64_t)v32, type metadata accessor for ToolKitProtoDisplayRepresentation);
LABEL_23:
          sub_2545C9374((uint64_t)v13, &qword_269E161C8);
          break;
        }
        uint64_t v33 = v40;
        sub_254DE7DD4(v29, (uint64_t)v40, type metadata accessor for ToolKitProtoDisplayRepresentation);
        char v34 = static ToolKitProtoDisplayRepresentation.== infix(_:_:)(v32, v33);
        sub_254DE7EA4((uint64_t)v33, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_254DE7EA4((uint64_t)v32, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2545C9374((uint64_t)v13, &qword_269E0CB20);
        uint64_t v25 = v42;
        if ((v34 & 1) == 0) {
          break;
        }
      }
      sub_254E14FC8();
      sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v35 = sub_254E157D8();
      sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
      sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
      BOOL v37 = v24-- != 0;
      if (v35)
      {
        a1 = v44;
        v23 += v43;
        a2 = v45;
        if (v37) {
          continue;
        }
      }
      return v35 & 1;
    }
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
    sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
    goto LABEL_25;
  }
  char v35 = 1;
  return v35 & 1;
}

uint64_t sub_254DDDC28(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoStatementResult, type metadata accessor for TranscriptProtoStatementResult, (uint64_t (*)(char *, char *))static TranscriptProtoStatementResult.== infix(_:_:), type metadata accessor for TranscriptProtoStatementResult);
}

uint64_t sub_254DDDC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F850);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v51 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E105E8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v20 = (uint64_t *)((char *)&v40 - v19);
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21 != *(void *)(a2 + 16))
  {
LABEL_33:
    char v37 = 0;
    return v37 & 1;
  }
  uint64_t v48 = v12;
  char v41 = v7;
  uint64_t v42 = v10;
  if (v21 && a1 != a2)
  {
    uint64_t v50 = v17;
    unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v43 = *(void *)(v18 + 72);
    uint64_t v44 = v4;
    unint64_t v46 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v47 = a1;
    uint64_t v23 = v21 - 1;
    uint64_t v24 = v42;
    uint64_t v25 = (uint64_t)v48;
    uint64_t v45 = a2;
    while (1)
    {
      uint64_t v49 = v23;
      sub_254DE7E3C(v47 + v22, (uint64_t)v20, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      sub_254DE7E3C(a2 + v22, (uint64_t)v16, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      BOOL v26 = *v20 == *v16 && v20[1] == v16[1];
      if (!v26 && (sub_254E15E08() & 1) == 0) {
        break;
      }
      uint64_t v27 = *(int *)(v50 + 20);
      uint64_t v28 = (uint64_t)v16 + v27;
      uint64_t v29 = v25 + *(int *)(v24 + 48);
      sub_2545C9310((uint64_t)v20 + v27, v25, &qword_26B26F850);
      sub_2545C9310(v28, v29, &qword_26B26F850);
      uint64_t v30 = *v46;
      if ((*v46)(v25, 1, v4) == 1)
      {
        if (v30(v29, 1, v4) != 1)
        {
          uint64_t v38 = &qword_269E105E8;
          goto LABEL_31;
        }
        uint64_t v25 = (uint64_t)v48;
        sub_2545C9374((uint64_t)v48, &qword_26B26F850);
      }
      else
      {
        sub_2545C9310(v25, v51, &qword_26B26F850);
        if (v30(v29, 1, v4) == 1)
        {
          uint64_t v38 = &qword_269E105E8;
LABEL_30:
          sub_254DE7EA4(v51, type metadata accessor for TranscriptProtoStatementID);
LABEL_31:
          sub_2545C9374((uint64_t)v48, v38);
          break;
        }
        uint64_t v31 = (uint64_t)v41;
        sub_254DE7DD4(v29, (uint64_t)v41, type metadata accessor for TranscriptProtoStatementID);
        if (*(_DWORD *)v51 != *(_DWORD *)v31) {
          goto LABEL_27;
        }
        uint64_t v32 = *(void *)(v51 + 16);
        uint64_t v33 = *(void *)(v31 + 16);
        if (v32)
        {
          if (!v33 || (*(void *)(v51 + 8) != *(void *)(v31 + 8) || v32 != v33) && (sub_254E15E08() & 1) == 0)
          {
LABEL_27:
            sub_254DE7EA4(v31, type metadata accessor for TranscriptProtoStatementID);
            uint64_t v38 = &qword_26B26F850;
            goto LABEL_30;
          }
        }
        else if (v33)
        {
          goto LABEL_27;
        }
        uint64_t v34 = v51;
        sub_254E14FC8();
        sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        char v35 = sub_254E157D8();
        uint64_t v36 = v31;
        uint64_t v24 = v42;
        sub_254DE7EA4(v36, type metadata accessor for TranscriptProtoStatementID);
        sub_254DE7EA4(v34, type metadata accessor for TranscriptProtoStatementID);
        uint64_t v25 = (uint64_t)v48;
        sub_2545C9374((uint64_t)v48, &qword_26B26F850);
        if ((v35 & 1) == 0) {
          break;
        }
      }
      sub_254E14FC8();
      sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v37 = sub_254E157D8();
      sub_254DE7EA4((uint64_t)v16, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      sub_254DE7EA4((uint64_t)v20, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      uint64_t v23 = v49 - 1;
      if (v37)
      {
        uint64_t v4 = v44;
        v22 += v43;
        a2 = v45;
        if (v49) {
          continue;
        }
      }
      return v37 & 1;
    }
    sub_254DE7EA4((uint64_t)v16, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
    sub_254DE7EA4((uint64_t)v20, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
    goto LABEL_33;
  }
  char v37 = 1;
  return v37 & 1;
}

uint64_t sub_254DDE288(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0E978);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10768);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  char v37 = v10;
  uint64_t v38 = v4;
  if (!v22 || a1 == a2)
  {
    char v31 = 1;
    return v31 & 1;
  }
  uint64_t v44 = v11;
  char v35 = v7;
  uint64_t v36 = (char *)&v35 - v20;
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v39 = *(void *)(v19 + 72);
  uint64_t v40 = a1;
  uint64_t v42 = v18;
  uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v24 = v22 - 1;
  uint64_t v41 = a2;
  uint64_t v25 = v38;
  while (1)
  {
    sub_254DE7E3C(a1 + v23, (uint64_t)v21, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_254DE7E3C(a2 + v23, (uint64_t)v17, type metadata accessor for TranscriptProtoASTFlatValue);
    uint64_t v26 = (uint64_t)&v13[*(int *)(v44 + 48)];
    sub_2545C9310((uint64_t)v21, (uint64_t)v13, &qword_269E0E978);
    sub_2545C9310((uint64_t)v17, v26, &qword_269E0E978);
    uint64_t v27 = *v43;
    if ((*v43)(v13, 1, v25) != 1) {
      break;
    }
    if (v27((char *)v26, 1, v25) != 1) {
      goto LABEL_18;
    }
    sub_2545C9374((uint64_t)v13, &qword_269E0E978);
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v31 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_254DE7EA4((uint64_t)v21, type metadata accessor for TranscriptProtoASTFlatValue);
    BOOL v33 = v24-- != 0;
    if (v31)
    {
      a1 = v40;
      v23 += v39;
      a2 = v41;
      if (v33) {
        continue;
      }
    }
    return v31 & 1;
  }
  uint64_t v28 = (uint64_t)v37;
  sub_2545C9310((uint64_t)v13, (uint64_t)v37, &qword_269E0E978);
  if (v27((char *)v26, 1, v25) != 1)
  {
    uint64_t v29 = (uint64_t)v35;
    sub_254DE7DD4(v26, (uint64_t)v35, type metadata accessor for TranscriptProtoAstflatValueEnum);
    char v30 = static TranscriptProtoAstflatValueEnum.== infix(_:_:)(v28, v29);
    sub_254DE7EA4(v29, type metadata accessor for TranscriptProtoAstflatValueEnum);
    uint64_t v25 = v38;
    sub_254DE7EA4(v28, type metadata accessor for TranscriptProtoAstflatValueEnum);
    sub_2545C9374((uint64_t)v13, &qword_269E0E978);
    uint64_t v21 = v36;
    if ((v30 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  sub_254DE7EA4(v28, type metadata accessor for TranscriptProtoAstflatValueEnum);
  uint64_t v21 = v36;
LABEL_18:
  sub_2545C9374((uint64_t)v13, &qword_269E10768);
LABEL_19:
  sub_254DE7EA4((uint64_t)v17, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_254DE7EA4((uint64_t)v21, type metadata accessor for TranscriptProtoASTFlatValue);
LABEL_20:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_254DDE768(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ContextProtoToolRetrievalType, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t (*)(char *, char *))static ContextProtoToolRetrievalType.== infix(_:_:), type metadata accessor for ContextProtoToolRetrievalType);
}

uint64_t sub_254DDE7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v17 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v18 = *(void *)(v8 + 72);
    while (1)
    {
      sub_254DE7E3C(a1 + v12, (uint64_t)v10, type metadata accessor for TranscriptProtoGlobalToolIdentifier);
      sub_254DE7E3C(a2 + v12, (uint64_t)v7, type metadata accessor for TranscriptProtoGlobalToolIdentifier);
      BOOL v13 = *v10 == *v7 && v10[1] == v7[1];
      if (!v13 && (sub_254E15E08() & 1) == 0) {
        break;
      }
      uint64_t v14 = v10[3];
      uint64_t v15 = v7[3];
      if (v14)
      {
        if (!v15 || (v10[2] != v7[2] || v14 != v15) && (sub_254E15E08() & 1) == 0) {
          break;
        }
      }
      else if (v15)
      {
        break;
      }
      sub_254E14FC8();
      sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      if ((sub_254E157D8() & 1) == 0) {
        break;
      }
      sub_254DE7EA4((uint64_t)v7, type metadata accessor for TranscriptProtoGlobalToolIdentifier);
      sub_254DE7EA4((uint64_t)v10, type metadata accessor for TranscriptProtoGlobalToolIdentifier);
      v12 += v18;
      if (!--v11) {
        return 1;
      }
    }
    sub_254DE7EA4((uint64_t)v7, type metadata accessor for TranscriptProtoGlobalToolIdentifier);
    sub_254DE7EA4((uint64_t)v10, type metadata accessor for TranscriptProtoGlobalToolIdentifier);
  }
  return 0;
}

uint64_t sub_254DDEA3C(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoRetrievedContextStatement, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor40TranscriptProtoRetrievedContextStatementV2eeoiySbAC_ACtFZ_0, type metadata accessor for TranscriptProtoRetrievedContextStatement);
}

uint64_t sub_254DDEA90(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t (*)(char *, char *))static TranscriptProtoDynamicEnumerationEntityStatement.== infix(_:_:), type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement);
}

uint64_t sub_254DDEAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoCandidate(0);
  uint64_t v71 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C610);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10848);
  MEMORY[0x270FA5388](v72);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TranscriptProtoParameter(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = type metadata accessor for TranscriptProtoParameterSet(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = *(void *)(a1 + 16);
  if (v25 != *(void *)(a2 + 16))
  {
LABEL_36:
    char v51 = 0;
    return v51 & 1;
  }
  id v61 = (uint64_t *)((char *)&v52 - v23);
  uint64_t v62 = (uint64_t *)v24;
  uint64_t v57 = v13;
  uint64_t v67 = v12;
  if (!v25 || a1 == a2)
  {
    char v51 = 1;
    return v51 & 1;
  }
  uint64_t v55 = v25;
  uint64_t v56 = v21;
  id v58 = v6;
  id v59 = v9;
  uint64_t v26 = 0;
  unint64_t v27 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(void *)(v22 + 72);
  uint64_t v65 = v16;
  uint64_t v66 = (unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
  uint64_t v68 = v4;
  uint64_t v32 = v61;
  char v31 = v62;
  uint64_t v53 = a2 + v27;
  uint64_t v54 = v28;
  uint64_t v52 = v30;
  uint64_t v64 = v18;
  uint64_t v33 = (uint64_t)v59;
  while (1)
  {
    uint64_t v60 = v26;
    uint64_t v34 = v30 * v26;
    sub_254DE7E3C(v28 + v30 * v26, (uint64_t)v32, type metadata accessor for TranscriptProtoParameterSet);
    sub_254DE7E3C(v29 + v34, (uint64_t)v31, type metadata accessor for TranscriptProtoParameterSet);
    uint64_t v35 = *v31;
    uint64_t v69 = *v32;
    uint64_t v70 = *(void *)(v69 + 16);
    uint64_t v71 = v35;
    uint64_t v36 = v67;
    if (v70 != *(void *)(v35 + 16))
    {
LABEL_35:
      sub_254DE7EA4((uint64_t)v62, type metadata accessor for TranscriptProtoParameterSet);
      sub_254DE7EA4((uint64_t)v61, type metadata accessor for TranscriptProtoParameterSet);
      goto LABEL_36;
    }
    uint64_t v37 = v71;
    if (v70)
    {
      if (v69 != v71) {
        break;
      }
    }
LABEL_28:
    uint64_t v32 = v61;
    char v31 = v62;
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v51 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v31, type metadata accessor for TranscriptProtoParameterSet);
    sub_254DE7EA4((uint64_t)v32, type metadata accessor for TranscriptProtoParameterSet);
    if (v51)
    {
      uint64_t v26 = v60 + 1;
      uint64_t v28 = v54;
      uint64_t v4 = v68;
      uint64_t v30 = v52;
      uint64_t v29 = v53;
      if (v60 + 1 != v55) {
        continue;
      }
    }
    return v51 & 1;
  }
  unint64_t v38 = 0;
  unint64_t v39 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v63 = *(void *)(v57 + 72);
  while (1)
  {
    uint64_t result = sub_254DE7E3C(v69 + v39, (uint64_t)v18, type metadata accessor for TranscriptProtoParameter);
    if (v38 >= *(void *)(v37 + 16)) {
      break;
    }
    sub_254DE7E3C(v37 + v39, (uint64_t)v16, type metadata accessor for TranscriptProtoParameter);
    BOOL v41 = *(void *)v18 == *(void *)v16 && *((void *)v18 + 1) == *((void *)v16 + 1);
    if (!v41 && (sub_254E15E08() & 1) == 0) {
      goto LABEL_34;
    }
    char v42 = v16[24];
    if (v18[24])
    {
      if (!v16[24]) {
        goto LABEL_34;
      }
    }
    else
    {
      if (*((void *)v18 + 2) != *((void *)v16 + 2)) {
        char v42 = 1;
      }
      if (v42) {
        goto LABEL_34;
      }
    }
    uint64_t v43 = *(int *)(v36 + 24);
    uint64_t v44 = (uint64_t)&v16[v43];
    uint64_t v45 = (uint64_t)&v11[*(int *)(v72 + 48)];
    sub_2545C9310((uint64_t)&v18[v43], (uint64_t)v11, &qword_269E0C610);
    sub_2545C9310(v44, v45, &qword_269E0C610);
    unint64_t v46 = *v66;
    if ((*v66)(v11, 1, v4) == 1)
    {
      unsigned int v47 = v46((char *)v45, 1, v4);
      uint64_t v16 = v65;
      if (v47 != 1) {
        goto LABEL_33;
      }
      sub_2545C9374((uint64_t)v11, &qword_269E0C610);
      uint64_t v18 = v64;
    }
    else
    {
      sub_2545C9310((uint64_t)v11, v33, &qword_269E0C610);
      if (v46((char *)v45, 1, v4) == 1)
      {
        sub_254DE7EA4(v33, type metadata accessor for TranscriptProtoCandidate);
        uint64_t v16 = v65;
LABEL_33:
        sub_2545C9374((uint64_t)v11, &qword_269E10848);
        uint64_t v18 = v64;
LABEL_34:
        sub_254DE7EA4((uint64_t)v16, type metadata accessor for TranscriptProtoParameter);
        sub_254DE7EA4((uint64_t)v18, type metadata accessor for TranscriptProtoParameter);
        goto LABEL_35;
      }
      uint64_t v48 = (uint64_t)v58;
      sub_254DE7DD4(v45, (uint64_t)v58, type metadata accessor for TranscriptProtoCandidate);
      char v49 = static TranscriptProtoCandidate.== infix(_:_:)(v33, v48);
      sub_254DE7EA4(v48, type metadata accessor for TranscriptProtoCandidate);
      sub_254DE7EA4(v33, type metadata accessor for TranscriptProtoCandidate);
      sub_2545C9374((uint64_t)v11, &qword_269E0C610);
      uint64_t v36 = v67;
      uint64_t v18 = v64;
      uint64_t v16 = v65;
      if ((v49 & 1) == 0) {
        goto LABEL_34;
      }
    }
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    uint64_t v4 = v68;
    char v50 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v16, type metadata accessor for TranscriptProtoParameter);
    sub_254DE7EA4((uint64_t)v18, type metadata accessor for TranscriptProtoParameter);
    if ((v50 & 1) == 0) {
      goto LABEL_35;
    }
    ++v38;
    v39 += v63;
    uint64_t v37 = v71;
    if (v70 == v38) {
      goto LABEL_28;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_254DDF260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoCandidate(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C610);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10848);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TranscriptProtoParameter(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v21 = (char *)&v39 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16))
  {
LABEL_31:
    char v35 = 0;
    return v35 & 1;
  }
  uint64_t v47 = v11;
  if (v22 && a1 != a2)
  {
    uint64_t v48 = v18;
    unint64_t v39 = v7;
    uint64_t v40 = v10;
    uint64_t v44 = v4;
    uint64_t v45 = a1;
    uint64_t v46 = a2;
    unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v42 = *(void *)(v19 + 72);
    uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v24 = v22 - 1;
    while (1)
    {
      sub_254DE7E3C(v45 + v23, (uint64_t)v21, type metadata accessor for TranscriptProtoParameter);
      sub_254DE7E3C(v46 + v23, (uint64_t)v17, type metadata accessor for TranscriptProtoParameter);
      BOOL v25 = *(void *)v21 == *(void *)v17 && *((void *)v21 + 1) == *((void *)v17 + 1);
      if (!v25 && (sub_254E15E08() & 1) == 0) {
        break;
      }
      char v26 = v17[24];
      if (v21[24])
      {
        if (!v17[24]) {
          break;
        }
      }
      else
      {
        if (*((void *)v21 + 2) != *((void *)v17 + 2)) {
          char v26 = 1;
        }
        if (v26) {
          break;
        }
      }
      uint64_t v27 = *(int *)(v48 + 24);
      uint64_t v28 = (uint64_t)&v17[v27];
      uint64_t v29 = (uint64_t)&v13[*(int *)(v47 + 48)];
      sub_2545C9310((uint64_t)&v21[v27], (uint64_t)v13, &qword_269E0C610);
      sub_2545C9310(v28, v29, &qword_269E0C610);
      uint64_t v30 = v44;
      char v31 = *v43;
      if ((*v43)(v13, 1, v44) == 1)
      {
        if (v31((char *)v29, 1, v30) != 1) {
          goto LABEL_29;
        }
        sub_2545C9374((uint64_t)v13, &qword_269E0C610);
      }
      else
      {
        uint64_t v41 = v24;
        uint64_t v32 = (uint64_t)v40;
        sub_2545C9310((uint64_t)v13, (uint64_t)v40, &qword_269E0C610);
        if (v31((char *)v29, 1, v30) == 1)
        {
          sub_254DE7EA4(v32, type metadata accessor for TranscriptProtoCandidate);
LABEL_29:
          sub_2545C9374((uint64_t)v13, &qword_269E10848);
          break;
        }
        uint64_t v33 = (uint64_t)v39;
        sub_254DE7DD4(v29, (uint64_t)v39, type metadata accessor for TranscriptProtoCandidate);
        char v34 = static TranscriptProtoCandidate.== infix(_:_:)(v32, v33);
        sub_254DE7EA4(v33, type metadata accessor for TranscriptProtoCandidate);
        sub_254DE7EA4(v32, type metadata accessor for TranscriptProtoCandidate);
        sub_2545C9374((uint64_t)v13, &qword_269E0C610);
        uint64_t v24 = v41;
        if ((v34 & 1) == 0) {
          break;
        }
      }
      sub_254E14FC8();
      sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v35 = sub_254E157D8();
      sub_254DE7EA4((uint64_t)v17, type metadata accessor for TranscriptProtoParameter);
      sub_254DE7EA4((uint64_t)v21, type metadata accessor for TranscriptProtoParameter);
      BOOL v37 = v24-- != 0;
      if (v35)
      {
        v23 += v42;
        if (v37) {
          continue;
        }
      }
      return v35 & 1;
    }
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for TranscriptProtoParameter);
    sub_254DE7EA4((uint64_t)v21, type metadata accessor for TranscriptProtoParameter);
    goto LABEL_31;
  }
  char v35 = 1;
  return v35 & 1;
}

uint64_t sub_254DDF780(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t (*)(char *, char *))static ToolKitProtoToolDefinition.Version1.== infix(_:_:), type metadata accessor for ToolKitProtoToolDefinition.Version1);
}

uint64_t sub_254DDF7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C360);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v52 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10640);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  uint64_t v14 = MEMORY[0x270FA5388](Predicate);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v20 = (char *)&v43 - v19;
  uint64_t v50 = a2;
  uint64_t v51 = a1;
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21 != *(void *)(a2 + 16))
  {
LABEL_36:
    char v38 = 0;
    return v38 & 1;
  }
  uint64_t v47 = v17;
  if (v21 && v51 != v50)
  {
    uint64_t v48 = v12;
    uint64_t v49 = v4;
    uint64_t v44 = v7;
    unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v46 = v10;
    uint64_t v43 = *(void *)(v18 + 72);
    uint64_t v23 = v21 - 1;
    uint64_t v24 = v47;
    while (1)
    {
      sub_254DE7E3C(v51 + v22, (uint64_t)v20, type metadata accessor for TranscriptProtoQueryPredicate);
      sub_254DE7E3C(v50 + v22, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryPredicate);
      BOOL v25 = *(void *)v20 == *(void *)v16 && *((void *)v20 + 1) == *((void *)v16 + 1);
      if (!v25 && (sub_254E15E08() & 1) == 0 || v20[16] != v16[16]) {
        break;
      }
      uint64_t v26 = *(int *)(v24 + 24);
      uint64_t v27 = (uint64_t)&v16[v26];
      uint64_t v28 = (uint64_t)&v12[*(int *)(v46 + 48)];
      sub_2545C9310((uint64_t)&v20[v26], (uint64_t)v12, &qword_269E0C360);
      sub_2545C9310(v27, v28, &qword_269E0C360);
      uint64_t v29 = *v45;
      uint64_t v30 = v49;
      if ((*v45)(v12, 1, v49) == 1)
      {
        if (v29((char *)v28, 1, v30) != 1)
        {
          uint64_t v41 = &qword_269E10640;
          goto LABEL_34;
        }
        sub_2545C9374((uint64_t)v12, &qword_269E0C360);
        uint64_t v24 = v47;
      }
      else
      {
        sub_2545C9310((uint64_t)v12, (uint64_t)v52, &qword_269E0C360);
        if (v29((char *)v28, 1, v30) == 1)
        {
          uint64_t v41 = &qword_269E10640;
          goto LABEL_33;
        }
        char v31 = v44;
        sub_254DE7DD4(v28, (uint64_t)v44, type metadata accessor for ToolKitProtoTypedValue);
        uint64_t v32 = *v52;
        uint64_t v33 = *v31;
        if ((~*v52 & 0xF000000000000007) != 0)
        {
          uint64_t v54 = *v52;
          if ((~v33 & 0xF000000000000007) == 0)
          {
            sub_254720AF8(v32);
LABEL_31:
            sub_254720AF8(v33);
            sub_254720B10(v32);
            sub_254720B10(v33);
LABEL_32:
            sub_254DE7EA4((uint64_t)v44, type metadata accessor for ToolKitProtoTypedValue);
            uint64_t v41 = &qword_269E0C360;
LABEL_33:
            sub_254DE7EA4((uint64_t)v52, type metadata accessor for ToolKitProtoTypedValue);
LABEL_34:
            sub_2545C9374((uint64_t)v12, v41);
            break;
          }
          uint64_t v53 = v33;
          sub_254720AF8(v32);
          swift_retain();
          char v34 = static ToolKitProtoTypedValueKind.== infix(_:_:)(&v54, &v53);
          swift_release();
          sub_254720B10(v32);
          if ((v34 & 1) == 0) {
            goto LABEL_32;
          }
        }
        else if ((~v33 & 0xF000000000000007) != 0)
        {
          goto LABEL_31;
        }
        char v35 = v52;
        uint64_t v36 = (uint64_t)v44;
        sub_254E14FC8();
        sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        char v37 = sub_254E157D8();
        sub_254DE7EA4(v36, type metadata accessor for ToolKitProtoTypedValue);
        sub_254DE7EA4((uint64_t)v35, type metadata accessor for ToolKitProtoTypedValue);
        sub_2545C9374((uint64_t)v48, &qword_269E0C360);
        uint64_t v24 = v47;
        if ((v37 & 1) == 0) {
          break;
        }
      }
      sub_254E14FC8();
      sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v38 = sub_254E157D8();
      sub_254DE7EA4((uint64_t)v16, type metadata accessor for TranscriptProtoQueryPredicate);
      sub_254DE7EA4((uint64_t)v20, type metadata accessor for TranscriptProtoQueryPredicate);
      BOOL v40 = v23-- != 0;
      if (v38)
      {
        v22 += v43;
        uint64_t v12 = v48;
        if (v40) {
          continue;
        }
      }
      return v38 & 1;
    }
    sub_254DE7EA4((uint64_t)v16, type metadata accessor for TranscriptProtoQueryPredicate);
    sub_254DE7EA4((uint64_t)v20, type metadata accessor for TranscriptProtoQueryPredicate);
    goto LABEL_36;
  }
  char v38 = 1;
  return v38 & 1;
}

uint64_t sub_254DDFE18(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ContextProtoDynamicEnumerationEntity, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t (*)(char *, char *))static ContextProtoDynamicEnumerationEntity.== infix(_:_:), type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_254DDFE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoCandidate(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t Results = type metadata accessor for TranscriptProtoQueryResults(0);
  uint64_t v12 = MEMORY[0x270FA5388](Results);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18 != *(void *)(a2 + 16))
  {
LABEL_17:
    char v31 = 0;
    return v31 & 1;
  }
  if (!v18 || a1 == a2)
  {
    char v31 = 1;
    return v31 & 1;
  }
  uint64_t v33 = v5;
  uint64_t v34 = v18;
  uint64_t v19 = 0;
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v39 = a2 + v20;
  uint64_t v40 = a1 + v20;
  uint64_t v21 = *(void *)(v15 + 72);
  char v37 = v14;
  uint64_t v38 = v21;
  uint64_t v35 = Results;
  uint64_t v36 = (char *)&v32 - v16;
  while (1)
  {
    uint64_t v41 = v19;
    uint64_t v22 = v38 * v19;
    sub_254DE7E3C(v40 + v38 * v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryResults);
    sub_254DE7E3C(v39 + v22, (uint64_t)v14, type metadata accessor for TranscriptProtoQueryResults);
    uint64_t v23 = *(void *)v17;
    uint64_t v24 = *(void *)v14;
    uint64_t v25 = *(void *)(*(void *)v17 + 16);
    if (v25 != *(void *)(*(void *)v14 + 16))
    {
LABEL_16:
      sub_254DE7EA4((uint64_t)v37, type metadata accessor for TranscriptProtoQueryResults);
      sub_254DE7EA4((uint64_t)v36, type metadata accessor for TranscriptProtoQueryResults);
      goto LABEL_17;
    }
    if (v25 && v23 != v24) {
      break;
    }
LABEL_12:
    uint64_t v17 = v36;
    uint64_t v14 = v37;
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v31 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v14, type metadata accessor for TranscriptProtoQueryResults);
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryResults);
    if (v31)
    {
      uint64_t v19 = v41 + 1;
      if (v41 + 1 != v34) {
        continue;
      }
    }
    return v31 & 1;
  }
  unint64_t v26 = 0;
  unint64_t v27 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v28 = *(void *)(v33 + 72);
  while (1)
  {
    uint64_t result = sub_254DE7E3C(v23 + v27, (uint64_t)v10, type metadata accessor for TranscriptProtoCandidate);
    if (v26 >= *(void *)(v24 + 16)) {
      break;
    }
    sub_254DE7E3C(v24 + v27, (uint64_t)v8, type metadata accessor for TranscriptProtoCandidate);
    char v30 = static TranscriptProtoCandidate.== infix(_:_:)(v10, v8);
    sub_254DE7EA4((uint64_t)v8, type metadata accessor for TranscriptProtoCandidate);
    sub_254DE7EA4((uint64_t)v10, type metadata accessor for TranscriptProtoCandidate);
    if ((v30 & 1) == 0) {
      goto LABEL_16;
    }
    ++v26;
    v27 += v28;
    if (v25 == v26) {
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_254DE0244(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoCandidate, type metadata accessor for TranscriptProtoCandidate, (uint64_t (*)(char *, char *))static TranscriptProtoCandidate.== infix(_:_:), type metadata accessor for TranscriptProtoCandidate);
}

uint64_t sub_254DE0298(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoResponseParameter, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor32TranscriptProtoResponseParameterV2eeoiySbAC_ACtFZ_0, type metadata accessor for TranscriptProtoResponseParameter);
}

uint64_t sub_254DE02EC(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoInterpretedStatementResult, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t (*)(char *, char *))static TranscriptProtoInterpretedStatementResult.== infix(_:_:), type metadata accessor for TranscriptProtoInterpretedStatementResult);
}

uint64_t sub_254DE0340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoUitype(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0E7C8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E108C0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TranscriptProtoUIType(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  char v37 = v10;
  uint64_t v38 = v4;
  if (!v22 || a1 == a2)
  {
    char v31 = 1;
    return v31 & 1;
  }
  uint64_t v44 = v11;
  uint64_t v35 = v7;
  uint64_t v36 = (char *)&v35 - v20;
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v39 = *(void *)(v19 + 72);
  uint64_t v40 = a1;
  uint64_t v42 = v18;
  uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v24 = v22 - 1;
  uint64_t v41 = a2;
  uint64_t v25 = v38;
  while (1)
  {
    sub_254DE7E3C(a1 + v23, (uint64_t)v21, type metadata accessor for TranscriptProtoUIType);
    sub_254DE7E3C(a2 + v23, (uint64_t)v17, type metadata accessor for TranscriptProtoUIType);
    uint64_t v26 = (uint64_t)&v13[*(int *)(v44 + 48)];
    sub_2545C9310((uint64_t)v21, (uint64_t)v13, &qword_269E0E7C8);
    sub_2545C9310((uint64_t)v17, v26, &qword_269E0E7C8);
    unint64_t v27 = *v43;
    if ((*v43)(v13, 1, v25) != 1) {
      break;
    }
    if (v27((char *)v26, 1, v25) != 1) {
      goto LABEL_18;
    }
    sub_2545C9374((uint64_t)v13, &qword_269E0E7C8);
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v31 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for TranscriptProtoUIType);
    sub_254DE7EA4((uint64_t)v21, type metadata accessor for TranscriptProtoUIType);
    BOOL v33 = v24-- != 0;
    if (v31)
    {
      a1 = v40;
      v23 += v39;
      a2 = v41;
      if (v33) {
        continue;
      }
    }
    return v31 & 1;
  }
  uint64_t v28 = (uint64_t)v37;
  sub_2545C9310((uint64_t)v13, (uint64_t)v37, &qword_269E0E7C8);
  if (v27((char *)v26, 1, v25) != 1)
  {
    uint64_t v29 = (uint64_t)v35;
    sub_254DE7DD4(v26, (uint64_t)v35, type metadata accessor for TranscriptProtoUitype);
    char v30 = static TranscriptProtoUitype.== infix(_:_:)(v28, v29);
    sub_254DE7EA4(v29, type metadata accessor for TranscriptProtoUitype);
    uint64_t v25 = v38;
    sub_254DE7EA4(v28, type metadata accessor for TranscriptProtoUitype);
    sub_2545C9374((uint64_t)v13, &qword_269E0E7C8);
    uint64_t v21 = v36;
    if ((v30 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  sub_254DE7EA4(v28, type metadata accessor for TranscriptProtoUitype);
  uint64_t v21 = v36;
LABEL_18:
  sub_2545C9374((uint64_t)v13, &qword_269E108C0);
LABEL_19:
  sub_254DE7EA4((uint64_t)v17, type metadata accessor for TranscriptProtoUIType);
  sub_254DE7EA4((uint64_t)v21, type metadata accessor for TranscriptProtoUIType);
LABEL_20:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_254DE0820(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  uint64_t v4 = MEMORY[0x270FA5388](v45);
  uint64_t v57 = (uint64_t *)((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v56 = (uint64_t *)((char *)&v43 - v6);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E119C8);
  MEMORY[0x270FA5388](v47);
  uint64_t v46 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TranscriptProtoLabel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v52 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E108B0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v50 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E108A8);
  MEMORY[0x270FA5388](v53);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for TranscriptProtoUILabel(0);
  uint64_t v15 = MEMORY[0x270FA5388](v51);
  uint64_t v58 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v43 - v18;
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20 != *(void *)(a2 + 16)) {
    goto LABEL_28;
  }
  if (!v20 || v54 == v55)
  {
    char v37 = 1;
    return v37 & 1;
  }
  unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v22 = *(void *)(v17 + 72);
  unint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v24 = v20 - 1;
  uint64_t v25 = v50;
  uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v49 = v22;
  uint64_t v44 = v8;
  while (1)
  {
    sub_254DE7E3C(v54 + v21, (uint64_t)v19, type metadata accessor for TranscriptProtoUILabel);
    uint64_t v26 = v58;
    sub_254DE7E3C(v55 + v21, v58, type metadata accessor for TranscriptProtoUILabel);
    uint64_t v27 = (uint64_t)&v14[*(int *)(v53 + 48)];
    sub_2545C9310((uint64_t)v19, (uint64_t)v14, &qword_269E108B0);
    sub_2545C9310(v26, v27, &qword_269E108B0);
    uint64_t v28 = *v23;
    if ((*v23)(v14, 1, v8) == 1)
    {
      if (v28((char *)v27, 1, v8) != 1)
      {
        uint64_t v41 = &qword_269E108A8;
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    sub_2545C9310((uint64_t)v14, v25, &qword_269E108B0);
    if (v28((char *)v27, 1, v8) == 1) {
      break;
    }
    uint64_t v29 = v25;
    uint64_t v30 = v52;
    sub_254DE7DD4(v27, v52, type metadata accessor for TranscriptProtoLabel);
    uint64_t v31 = v46;
    uint64_t v32 = v46 + *(int *)(v47 + 48);
    sub_254DE7E3C(v29, v46, type metadata accessor for TranscriptProtoLabel);
    BOOL v33 = v56;
    sub_254DE7E3C(v30, v32, type metadata accessor for TranscriptProtoLabel);
    sub_254DE7DD4(v31, (uint64_t)v33, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    uint64_t v34 = v32;
    uint64_t v35 = v57;
    sub_254DE7DD4(v34, (uint64_t)v57, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    if ((*v33 != *v35 || v33[1] != v35[1]) && (sub_254E15E08() & 1) == 0
      || (v56[2] != v57[2] || v56[3] != v57[3]) && (sub_254E15E08() & 1) == 0
      || (sub_254E14FC8(),
          sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]),
          (sub_254E157D8() & 1) == 0))
    {
      sub_254DE7EA4((uint64_t)v57, type metadata accessor for TranscriptProtoUIConfirmationLabel);
      sub_254DE7EA4((uint64_t)v56, type metadata accessor for TranscriptProtoUIConfirmationLabel);
      sub_254DE7EA4(v52, type metadata accessor for TranscriptProtoLabel);
      uint64_t v41 = &qword_269E108B0;
      uint64_t v40 = v50;
      goto LABEL_26;
    }
    sub_254DE7EA4((uint64_t)v57, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    sub_254DE7EA4((uint64_t)v56, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    sub_254DE7EA4(v52, type metadata accessor for TranscriptProtoLabel);
    uint64_t v25 = v50;
    sub_254DE7EA4(v50, type metadata accessor for TranscriptProtoLabel);
    uint64_t v8 = v44;
LABEL_17:
    sub_2545C9374((uint64_t)v14, &qword_269E108B0);
    uint64_t v36 = v58;
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v37 = sub_254E157D8();
    sub_254DE7EA4(v36, type metadata accessor for TranscriptProtoUILabel);
    sub_254DE7EA4((uint64_t)v19, type metadata accessor for TranscriptProtoUILabel);
    BOOL v39 = v24-- != 0;
    if (v37)
    {
      unint64_t v23 = v48;
      v21 += v49;
      if (v39) {
        continue;
      }
    }
    return v37 & 1;
  }
  uint64_t v41 = &qword_269E108A8;
  uint64_t v40 = v25;
LABEL_26:
  sub_254DE7EA4(v40, type metadata accessor for TranscriptProtoLabel);
LABEL_27:
  sub_2545C9374((uint64_t)v14, v41);
  sub_254DE7EA4(v58, type metadata accessor for TranscriptProtoUILabel);
  sub_254DE7EA4((uint64_t)v19, type metadata accessor for TranscriptProtoUILabel);
LABEL_28:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_254DE0F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0E738);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10930);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TranscriptProtoVisualOutput(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  char v37 = v10;
  uint64_t v38 = v4;
  if (!v22 || a1 == a2)
  {
    char v31 = 1;
    return v31 & 1;
  }
  uint64_t v44 = v11;
  uint64_t v35 = v7;
  uint64_t v36 = (char *)&v35 - v20;
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v39 = *(void *)(v19 + 72);
  uint64_t v40 = a1;
  uint64_t v42 = v18;
  uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v24 = v22 - 1;
  uint64_t v41 = a2;
  uint64_t v25 = v38;
  while (1)
  {
    sub_254DE7E3C(a1 + v23, (uint64_t)v21, type metadata accessor for TranscriptProtoVisualOutput);
    sub_254DE7E3C(a2 + v23, (uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutput);
    uint64_t v26 = (uint64_t)&v13[*(int *)(v44 + 48)];
    sub_2545C9310((uint64_t)v21, (uint64_t)v13, &qword_269E0E738);
    sub_2545C9310((uint64_t)v17, v26, &qword_269E0E738);
    uint64_t v27 = *v43;
    if ((*v43)(v13, 1, v25) != 1) {
      break;
    }
    if (v27((char *)v26, 1, v25) != 1) {
      goto LABEL_18;
    }
    sub_2545C9374((uint64_t)v13, &qword_269E0E738);
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v31 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutput);
    sub_254DE7EA4((uint64_t)v21, type metadata accessor for TranscriptProtoVisualOutput);
    BOOL v33 = v24-- != 0;
    if (v31)
    {
      a1 = v40;
      v23 += v39;
      a2 = v41;
      if (v33) {
        continue;
      }
    }
    return v31 & 1;
  }
  uint64_t v28 = (uint64_t)v37;
  sub_2545C9310((uint64_t)v13, (uint64_t)v37, &qword_269E0E738);
  if (v27((char *)v26, 1, v25) != 1)
  {
    uint64_t v29 = (uint64_t)v35;
    sub_254DE7DD4(v26, (uint64_t)v35, type metadata accessor for TranscriptProtoVisualOutputType);
    char v30 = static TranscriptProtoVisualOutputType.== infix(_:_:)(v28, v29);
    sub_254DE7EA4(v29, type metadata accessor for TranscriptProtoVisualOutputType);
    uint64_t v25 = v38;
    sub_254DE7EA4(v28, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_2545C9374((uint64_t)v13, &qword_269E0E738);
    unint64_t v21 = v36;
    if ((v30 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  sub_254DE7EA4(v28, type metadata accessor for TranscriptProtoVisualOutputType);
  unint64_t v21 = v36;
LABEL_18:
  sub_2545C9374((uint64_t)v13, &qword_269E10930);
LABEL_19:
  sub_254DE7EA4((uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutput);
  sub_254DE7EA4((uint64_t)v21, type metadata accessor for TranscriptProtoVisualOutput);
LABEL_20:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_254DE1464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoStatementID(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v17 = *(void *)(v8 + 72);
    while (1)
    {
      sub_254DE7E3C(a1 + v12, (uint64_t)v10, type metadata accessor for TranscriptProtoStatementID);
      sub_254DE7E3C(a2 + v12, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
      if (*(_DWORD *)v10 != *(_DWORD *)v7) {
        break;
      }
      uint64_t v13 = *((void *)v10 + 2);
      uint64_t v14 = *((void *)v7 + 2);
      if (v13)
      {
        if (!v14 || (*((void *)v10 + 1) != *((void *)v7 + 1) || v13 != v14) && (sub_254E15E08() & 1) == 0) {
          break;
        }
      }
      else if (v14)
      {
        break;
      }
      sub_254E14FC8();
      sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      if ((sub_254E157D8() & 1) == 0) {
        break;
      }
      sub_254DE7EA4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
      sub_254DE7EA4((uint64_t)v10, type metadata accessor for TranscriptProtoStatementID);
      v12 += v17;
      if (!--v11) {
        return 1;
      }
    }
    sub_254DE7EA4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_254DE7EA4((uint64_t)v10, type metadata accessor for TranscriptProtoStatementID);
  }
  return 0;
}

uint64_t sub_254DE16D4(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ToolKitProtoComparisonPredicate, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t (*)(char *, char *))static ToolKitProtoComparisonPredicate.== infix(_:_:), type metadata accessor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_254DE1728(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ContextProtoEntityMatch, type metadata accessor for ContextProtoEntityMatch, (uint64_t (*)(char *, char *))static ContextProtoEntityMatch.== infix(_:_:), type metadata accessor for ContextProtoEntityMatch);
}

uint64_t sub_254DE177C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C360);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v54 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10640);
  MEMORY[0x270FA5388](v10);
  unint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranscriptProtoVariableSetter(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v20 = (uint64_t *)((char *)&v43 - v19);
  uint64_t v51 = a2;
  uint64_t v52 = a1;
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21 != *(void *)(a2 + 16)) {
    goto LABEL_31;
  }
  uint64_t v50 = v17;
  uint64_t v48 = v10;
  if (!v21 || v52 == v51)
  {
    char v38 = 1;
    return v38 & 1;
  }
  uint64_t v46 = v7;
  unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v23 = *(void *)(v18 + 72);
  uint64_t v44 = v4;
  uint64_t v45 = v23;
  uint64_t v24 = v21 - 1;
  uint64_t v49 = v16;
  uint64_t v53 = (uint64_t *)((char *)&v43 - v19);
  while (1)
  {
    sub_254DE7E3C(v52 + v22, (uint64_t)v20, type metadata accessor for TranscriptProtoVariableSetter);
    sub_254DE7E3C(v51 + v22, (uint64_t)v16, type metadata accessor for TranscriptProtoVariableSetter);
    uint64_t v25 = *(int *)(v50 + 20);
    uint64_t v26 = (uint64_t)v20 + v25;
    uint64_t v27 = (uint64_t)v16 + v25;
    uint64_t v28 = (uint64_t)&v12[*(int *)(v48 + 48)];
    sub_2545C9310(v26, (uint64_t)v12, &qword_269E0C360);
    sub_2545C9310(v27, v28, &qword_269E0C360);
    uint64_t v29 = *v47;
    if ((*v47)(v12, 1, v4) != 1) {
      break;
    }
    if (v29((char *)v28, 1, v4) != 1)
    {
      char v30 = v53;
      uint64_t v41 = &qword_269E10640;
      goto LABEL_29;
    }
    sub_2545C9374((uint64_t)v12, &qword_269E0C360);
    char v30 = v53;
LABEL_15:
    if ((sub_254DA246C(*v30, *v16) & 1) == 0) {
      goto LABEL_30;
    }
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    uint64_t v16 = v49;
    char v38 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v16, type metadata accessor for TranscriptProtoVariableSetter);
    sub_254DE7EA4((uint64_t)v30, type metadata accessor for TranscriptProtoVariableSetter);
    BOOL v40 = v24-- != 0;
    if (v38)
    {
      v22 += v45;
      uint64_t v20 = v53;
      if (v40) {
        continue;
      }
    }
    return v38 & 1;
  }
  sub_2545C9310((uint64_t)v12, (uint64_t)v54, &qword_269E0C360);
  if (v29((char *)v28, 1, v4) == 1)
  {
    char v30 = v53;
    uint64_t v41 = &qword_269E10640;
    goto LABEL_28;
  }
  char v31 = v46;
  sub_254DE7DD4(v28, (uint64_t)v46, type metadata accessor for ToolKitProtoTypedValue);
  uint64_t v32 = *v54;
  uint64_t v33 = *v31;
  if ((~*v54 & 0xF000000000000007) == 0)
  {
    if ((~v33 & 0xF000000000000007) != 0) {
      goto LABEL_26;
    }
    goto LABEL_14;
  }
  uint64_t v56 = *v54;
  if ((~v33 & 0xF000000000000007) != 0)
  {
    uint64_t v55 = v33;
    sub_254720AF8(v32);
    swift_retain();
    char v34 = static ToolKitProtoTypedValueKind.== infix(_:_:)(&v56, &v55);
    swift_release();
    sub_254720B10(v32);
    if ((v34 & 1) == 0) {
      goto LABEL_27;
    }
LABEL_14:
    uint64_t v35 = v54;
    uint64_t v36 = (uint64_t)v46;
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    uint64_t v16 = v49;
    char v37 = sub_254E157D8();
    uint64_t v4 = v44;
    sub_254DE7EA4(v36, type metadata accessor for ToolKitProtoTypedValue);
    sub_254DE7EA4((uint64_t)v35, type metadata accessor for ToolKitProtoTypedValue);
    sub_2545C9374((uint64_t)v12, &qword_269E0C360);
    char v30 = v53;
    if ((v37 & 1) == 0) {
      goto LABEL_30;
    }
    goto LABEL_15;
  }
  sub_254720AF8(v32);
LABEL_26:
  sub_254720AF8(v33);
  sub_254720B10(v32);
  sub_254720B10(v33);
LABEL_27:
  sub_254DE7EA4((uint64_t)v46, type metadata accessor for ToolKitProtoTypedValue);
  uint64_t v41 = &qword_269E0C360;
  char v30 = v53;
LABEL_28:
  sub_254DE7EA4((uint64_t)v54, type metadata accessor for ToolKitProtoTypedValue);
LABEL_29:
  sub_2545C9374((uint64_t)v12, v41);
LABEL_30:
  sub_254DE7EA4((uint64_t)v16, type metadata accessor for TranscriptProtoVariableSetter);
  sub_254DE7EA4((uint64_t)v30, type metadata accessor for TranscriptProtoVariableSetter);
LABEL_31:
  char v38 = 0;
  return v38 & 1;
}

uint64_t sub_254DE1DC4(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ToolKitProtoComparisonPredicate.Template, type metadata accessor for ToolKitProtoComparisonPredicate.Template, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV8TemplateV2eeoiySbAE_AEtFZ_0, type metadata accessor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_254DE1E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoSampleInvocationDefinition(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v37 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v29 = 1;
      return v29 & 1;
    }
    uint64_t v12 = 0;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v38 = a1 + v13;
    uint64_t v14 = a2 + v13;
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_254DE7E3C(v38 + v15 * v12, (uint64_t)v10, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
      sub_254DE7E3C(v14 + v15 * v12, (uint64_t)v7, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
      uint64_t v16 = (void *)*v10;
      uint64_t v17 = (void *)*v7;
      uint64_t v18 = *(void *)(*v10 + 16);
      if (v18 != *(void *)(*v7 + 16)) {
        break;
      }
      if (v18) {
        BOOL v19 = v16 == v17;
      }
      else {
        BOOL v19 = 1;
      }
      if (!v19)
      {
        BOOL v20 = v16[4] == v17[4] && v16[5] == v17[5];
        if (!v20 && (sub_254E15E08() & 1) == 0) {
          break;
        }
        if (v18 != 1)
        {
          BOOL v21 = v16[6] == v17[6] && v16[7] == v17[7];
          if (!v21 && (sub_254E15E08() & 1) == 0) {
            break;
          }
          uint64_t v22 = v18 - 2;
          if (v22)
          {
            char v30 = v17 + 9;
            char v31 = v16 + 9;
            do
            {
              BOOL v32 = *(v31 - 1) == *(v30 - 1) && *v31 == *v30;
              if (!v32 && (sub_254E15E08() & 1) == 0) {
                goto LABEL_58;
              }
              v30 += 2;
              v31 += 2;
            }
            while (--v22);
          }
        }
      }
      uint64_t v23 = v10[3];
      uint64_t v24 = v7[3];
      if (v23)
      {
        if (!v24 || (v10[2] != v7[2] || v23 != v24) && (sub_254E15E08() & 1) == 0) {
          break;
        }
      }
      else if (v24)
      {
        break;
      }
      uint64_t v25 = (void *)v10[1];
      uint64_t v26 = (void *)v7[1];
      uint64_t v27 = v25[2];
      if (v27 != v26[2]) {
        break;
      }
      if (v27 && v25 != v26)
      {
        if ((v25[4] != v26[4] || v25[5] != v26[5]) && (sub_254E15E08() & 1) == 0) {
          break;
        }
        if (v27 != 1)
        {
          if ((v25[6] != v26[6] || v25[7] != v26[7]) && (sub_254E15E08() & 1) == 0) {
            break;
          }
          uint64_t v28 = v27 - 2;
          if (v28)
          {
            uint64_t v33 = v26 + 9;
            char v34 = v25 + 9;
            do
            {
              BOOL v35 = *(v34 - 1) == *(v33 - 1) && *v34 == *v33;
              if (!v35 && (sub_254E15E08() & 1) == 0) {
                goto LABEL_58;
              }
              v33 += 2;
              v34 += 2;
            }
            while (--v28);
          }
        }
      }
      sub_254E14FC8();
      sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v29 = sub_254E157D8();
      sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
      sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
      if ((v29 & 1) != 0 && ++v12 != v11) {
        continue;
      }
      return v29 & 1;
    }
LABEL_58:
    sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
    sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
  }
  char v29 = 0;
  return v29 & 1;
}

uint64_t sub_254DE2210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12498);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16010);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ToolKitProtoRuntimeRequirement(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  BOOL v21 = (char *)&v35 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  uint64_t v37 = v10;
  uint64_t v38 = v4;
  if (!v22 || a1 == a2)
  {
    char v31 = 1;
    return v31 & 1;
  }
  uint64_t v44 = v11;
  BOOL v35 = v7;
  uint64_t v36 = (char *)&v35 - v20;
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v39 = *(void *)(v19 + 72);
  uint64_t v40 = a1;
  uint64_t v42 = v18;
  uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v24 = v22 - 1;
  uint64_t v41 = a2;
  uint64_t v25 = v38;
  while (1)
  {
    sub_254DE7E3C(a1 + v23, (uint64_t)v21, type metadata accessor for ToolKitProtoRuntimeRequirement);
    sub_254DE7E3C(a2 + v23, (uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirement);
    uint64_t v26 = (uint64_t)&v13[*(int *)(v44 + 48)];
    sub_2545C9310((uint64_t)v21, (uint64_t)v13, &qword_269E12498);
    sub_2545C9310((uint64_t)v17, v26, &qword_269E12498);
    uint64_t v27 = *v43;
    if ((*v43)(v13, 1, v25) != 1) {
      break;
    }
    if (v27((char *)v26, 1, v25) != 1) {
      goto LABEL_18;
    }
    sub_2545C9374((uint64_t)v13, &qword_269E12498);
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v31 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirement);
    sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoRuntimeRequirement);
    BOOL v33 = v24-- != 0;
    if (v31)
    {
      a1 = v40;
      v23 += v39;
      a2 = v41;
      if (v33) {
        continue;
      }
    }
    return v31 & 1;
  }
  uint64_t v28 = (uint64_t)v37;
  sub_2545C9310((uint64_t)v13, (uint64_t)v37, &qword_269E12498);
  if (v27((char *)v26, 1, v25) != 1)
  {
    uint64_t v29 = (uint64_t)v35;
    sub_254DE7DD4(v26, (uint64_t)v35, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    char v30 = static ToolKitProtoRuntimeRequirementKind.== infix(_:_:)(v28, v29);
    sub_254DE7EA4(v29, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    uint64_t v25 = v38;
    sub_254DE7EA4(v28, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    sub_2545C9374((uint64_t)v13, &qword_269E12498);
    BOOL v21 = v36;
    if ((v30 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  sub_254DE7EA4(v28, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
  BOOL v21 = v36;
LABEL_18:
  sub_2545C9374((uint64_t)v13, &qword_269E16010);
LABEL_19:
  sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirement);
  sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoRuntimeRequirement);
LABEL_20:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_254DE26F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoSystemTypeProtocolKind(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12408);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E161F8);
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ToolKitProtoSystemTypeProtocol(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  BOOL v21 = (char *)&v35 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  uint64_t v37 = v10;
  uint64_t v38 = v4;
  if (!v22 || a1 == a2)
  {
    char v31 = 1;
    return v31 & 1;
  }
  uint64_t v44 = v11;
  BOOL v35 = v7;
  uint64_t v36 = (char *)&v35 - v20;
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v39 = *(void *)(v19 + 72);
  uint64_t v40 = a1;
  uint64_t v42 = v18;
  uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v24 = v22 - 1;
  uint64_t v41 = a2;
  uint64_t v25 = v38;
  while (1)
  {
    sub_254DE7E3C(a1 + v23, (uint64_t)v21, type metadata accessor for ToolKitProtoSystemTypeProtocol);
    sub_254DE7E3C(a2 + v23, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemTypeProtocol);
    uint64_t v26 = (uint64_t)&v13[*(int *)(v44 + 48)];
    sub_2545C9310((uint64_t)v21, (uint64_t)v13, &qword_269E12408);
    sub_2545C9310((uint64_t)v17, v26, &qword_269E12408);
    uint64_t v27 = *v43;
    if ((*v43)(v13, 1, v25) != 1) {
      break;
    }
    if (v27((char *)v26, 1, v25) != 1) {
      goto LABEL_18;
    }
    sub_2545C9374((uint64_t)v13, &qword_269E12408);
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v31 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemTypeProtocol);
    sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoSystemTypeProtocol);
    BOOL v33 = v24-- != 0;
    if (v31)
    {
      a1 = v40;
      v23 += v39;
      a2 = v41;
      if (v33) {
        continue;
      }
    }
    return v31 & 1;
  }
  uint64_t v28 = (uint64_t)v37;
  sub_2545C9310((uint64_t)v13, (uint64_t)v37, &qword_269E12408);
  if (v27((char *)v26, 1, v25) != 1)
  {
    uint64_t v29 = (uint64_t)v35;
    sub_254DE7DD4(v26, (uint64_t)v35, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
    char v30 = static ToolKitProtoSystemTypeProtocolKind.== infix(_:_:)(v28, v29);
    sub_254DE7EA4(v29, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
    uint64_t v25 = v38;
    sub_254DE7EA4(v28, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
    sub_2545C9374((uint64_t)v13, &qword_269E12408);
    BOOL v21 = v36;
    if ((v30 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  sub_254DE7EA4(v28, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
  BOOL v21 = v36;
LABEL_18:
  sub_2545C9374((uint64_t)v13, &qword_269E161F8);
LABEL_19:
  sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemTypeProtocol);
  sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoSystemTypeProtocol);
LABEL_20:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_254DE2BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoTypeInstance(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3F8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v52 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10648);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ToolKitProtoCoercionDefinition(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (unsigned __int8 *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v20 = (unsigned __int8 *)&v43 - v19;
  uint64_t v51 = a1;
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21 != *(void *)(a2 + 16))
  {
LABEL_31:
    char v38 = 0;
    return v38 & 1;
  }
  uint64_t v48 = v17;
  if (v21)
  {
    uint64_t v22 = a2;
    if (v51 != a2)
    {
      uint64_t v49 = v12;
      uint64_t v50 = v4;
      uint64_t v44 = v7;
      uint64_t v45 = v16;
      unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      uint64_t v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
      uint64_t v47 = v10;
      uint64_t v43 = *(void *)(v18 + 72);
      uint64_t v24 = v21 - 1;
      uint64_t v25 = v48;
      while (1)
      {
        sub_254DE7E3C(v51 + v23, (uint64_t)v20, type metadata accessor for ToolKitProtoCoercionDefinition);
        sub_254DE7E3C(v22 + v23, (uint64_t)v16, type metadata accessor for ToolKitProtoCoercionDefinition);
        if (*v20 != *v16) {
          break;
        }
        uint64_t v26 = *(int *)(v25 + 20);
        uint64_t v27 = (uint64_t)&v16[v26];
        uint64_t v28 = (uint64_t)&v12[*(int *)(v47 + 48)];
        sub_2545C9310((uint64_t)&v20[v26], (uint64_t)v12, &qword_269E0C3F8);
        sub_2545C9310(v27, v28, &qword_269E0C3F8);
        uint64_t v29 = *v46;
        uint64_t v30 = v50;
        if ((*v46)(v12, 1, v50) == 1)
        {
          if (v29((char *)v28, 1, v30) != 1)
          {
            uint64_t v41 = &qword_269E10648;
            uint64_t v16 = v45;
            goto LABEL_29;
          }
          sub_2545C9374((uint64_t)v12, &qword_269E0C3F8);
          uint64_t v25 = v48;
          uint64_t v16 = v45;
        }
        else
        {
          sub_2545C9310((uint64_t)v12, (uint64_t)v52, &qword_269E0C3F8);
          if (v29((char *)v28, 1, v30) == 1)
          {
            uint64_t v41 = &qword_269E10648;
            goto LABEL_28;
          }
          char v31 = v44;
          sub_254DE7DD4(v28, (uint64_t)v44, type metadata accessor for ToolKitProtoTypeInstance);
          uint64_t v32 = *v52;
          uint64_t v33 = *v31;
          if ((~*v52 & 0xF000000000000007) != 0)
          {
            uint64_t v54 = *v52;
            if ((~v33 & 0xF000000000000007) == 0)
            {
              sub_254720AF8(v32);
LABEL_26:
              sub_254720AF8(v33);
              sub_254720B10(v32);
              sub_254720B10(v33);
LABEL_27:
              sub_254DE7EA4((uint64_t)v44, type metadata accessor for ToolKitProtoTypeInstance);
              uint64_t v41 = &qword_269E0C3F8;
LABEL_28:
              uint64_t v16 = v45;
              sub_254DE7EA4((uint64_t)v52, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_29:
              sub_2545C9374((uint64_t)v12, v41);
              break;
            }
            uint64_t v53 = v33;
            sub_254720AF8(v32);
            swift_retain();
            char v34 = static ToolKitProtoTypeInstanceKind.== infix(_:_:)(&v54, &v53);
            swift_release();
            sub_254720B10(v32);
            if ((v34 & 1) == 0) {
              goto LABEL_27;
            }
          }
          else if ((~v33 & 0xF000000000000007) != 0)
          {
            goto LABEL_26;
          }
          BOOL v35 = v52;
          uint64_t v36 = (uint64_t)v44;
          sub_254E14FC8();
          sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
          char v37 = sub_254E157D8();
          sub_254DE7EA4(v36, type metadata accessor for ToolKitProtoTypeInstance);
          sub_254DE7EA4((uint64_t)v35, type metadata accessor for ToolKitProtoTypeInstance);
          sub_2545C9374((uint64_t)v49, &qword_269E0C3F8);
          uint64_t v25 = v48;
          uint64_t v16 = v45;
          if ((v37 & 1) == 0) {
            break;
          }
        }
        sub_254E14FC8();
        sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        char v38 = sub_254E157D8();
        sub_254DE7EA4((uint64_t)v16, type metadata accessor for ToolKitProtoCoercionDefinition);
        sub_254DE7EA4((uint64_t)v20, type metadata accessor for ToolKitProtoCoercionDefinition);
        BOOL v40 = v24-- != 0;
        if (v38)
        {
          v23 += v43;
          uint64_t v12 = v49;
          if (v40) {
            continue;
          }
        }
        return v38 & 1;
      }
      sub_254DE7EA4((uint64_t)v16, type metadata accessor for ToolKitProtoCoercionDefinition);
      sub_254DE7EA4((uint64_t)v20, type metadata accessor for ToolKitProtoCoercionDefinition);
      goto LABEL_31;
    }
  }
  char v38 = 1;
  return v38 & 1;
}

uint64_t sub_254DE3208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContextProtoSampleInvocation(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_19:
    char v15 = 0;
    return v15 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v20 = *(void *)(v8 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_254DE7E3C(a1 + v12, (uint64_t)v10, type metadata accessor for ContextProtoSampleInvocation);
      sub_254DE7E3C(a2 + v12, (uint64_t)v7, type metadata accessor for ContextProtoSampleInvocation);
      BOOL v14 = *(void *)v10 == *(void *)v7 && *((void *)v10 + 1) == *((void *)v7 + 1);
      if (!v14 && (sub_254E15E08() & 1) == 0 || *((float *)v10 + 4) != *((float *)v7 + 4)) {
        break;
      }
      sub_254E14FC8();
      sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v15 = sub_254E157D8();
      sub_254DE7EA4((uint64_t)v7, type metadata accessor for ContextProtoSampleInvocation);
      sub_254DE7EA4((uint64_t)v10, type metadata accessor for ContextProtoSampleInvocation);
      BOOL v17 = v13-- != 0;
      if (v15)
      {
        v12 += v20;
        if (v17) {
          continue;
        }
      }
      return v15 & 1;
    }
    sub_254DE7EA4((uint64_t)v7, type metadata accessor for ContextProtoSampleInvocation);
    sub_254DE7EA4((uint64_t)v10, type metadata accessor for ContextProtoSampleInvocation);
    goto LABEL_19;
  }
  char v15 = 1;
  return v15 & 1;
}

uint64_t sub_254DE3470(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoParameterQuery, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor29TranscriptProtoParameterQueryV2eeoiySbAC_ACtFZ_0, type metadata accessor for TranscriptProtoParameterQuery);
}

uint64_t sub_254DE34C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoTypeInstance(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v21 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  if (!v11 || a1 == a2)
  {
    char v17 = 1;
    return v17 & 1;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v22 = *(void *)(v8 + 72);
  uint64_t v13 = v11 - 1;
  while (1)
  {
    sub_254DE7E3C(a1 + v12, (uint64_t)v10, type metadata accessor for ToolKitProtoTypeInstance);
    sub_254DE7E3C(a2 + v12, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    uint64_t v14 = *v10;
    uint64_t v15 = *v7;
    if ((~*v10 & 0xF000000000000007) != 0) {
      break;
    }
    if ((~v15 & 0xF000000000000007) != 0) {
      goto LABEL_18;
    }
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v17 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoTypeInstance);
    BOOL v19 = v13-- != 0;
    if (v17)
    {
      v12 += v22;
      if (v19) {
        continue;
      }
    }
    return v17 & 1;
  }
  uint64_t v24 = *v10;
  if ((~v15 & 0xF000000000000007) != 0)
  {
    uint64_t v23 = v15;
    swift_retain_n();
    char v16 = static ToolKitProtoTypeInstanceKind.== infix(_:_:)(&v24, &v23);
    swift_release();
    sub_254720B10(v14);
    if ((v16 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  swift_retain();
LABEL_18:
  sub_254720AF8(v15);
  sub_254720B10(v14);
  sub_254720B10(v15);
LABEL_19:
  sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_20:
  char v17 = 0;
  return v17 & 1;
}

uint64_t sub_254DE3784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoRestrictionContext(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v21 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  if (!v11 || a1 == a2)
  {
    char v17 = 1;
    return v17 & 1;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v22 = *(void *)(v8 + 72);
  uint64_t v13 = v11 - 1;
  while (1)
  {
    sub_254DE7E3C(a1 + v12, (uint64_t)v10, type metadata accessor for ToolKitProtoRestrictionContext);
    sub_254DE7E3C(a2 + v12, (uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext);
    uint64_t v14 = *v10;
    uint64_t v15 = *v7;
    if ((~*v10 & 0xF000000000000007) != 0) {
      break;
    }
    if ((~v15 & 0xF000000000000007) != 0) {
      goto LABEL_18;
    }
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v17 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext);
    sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoRestrictionContext);
    BOOL v19 = v13-- != 0;
    if (v17)
    {
      v12 += v22;
      if (v19) {
        continue;
      }
    }
    return v17 & 1;
  }
  uint64_t v24 = *v10;
  if ((~v15 & 0xF000000000000007) != 0)
  {
    uint64_t v23 = v15;
    sub_254720AF8(v14);
    sub_254720AF8(v14);
    char v16 = _s23LighthouseDataProcessor34ToolKitProtoRestrictionContextKindO2eeoiySbAC_ACtFZ_0((unint64_t *)&v24, (unint64_t *)&v23);
    swift_release();
    sub_254720B10(v14);
    if ((v16 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  swift_retain();
LABEL_18:
  sub_254720AF8(v15);
  sub_254720B10(v14);
  sub_254720B10(v15);
LABEL_19:
  sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext);
  sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoRestrictionContext);
LABEL_20:
  char v17 = 0;
  return v17 & 1;
}

uint64_t sub_254DE3A48(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoProgramStatement, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor31TranscriptProtoProgramStatementV2eeoiySbAC_ACtFZ_0, type metadata accessor for TranscriptProtoProgramStatement);
}

uint64_t sub_254DE3A9C(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v131 = type metadata accessor for DillSessionEvent(0);
  uint64_t v4 = MEMORY[0x270FA5388](v131);
  uint64_t v6 = (char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v124 - v8;
  uint64_t v132 = a1;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 != *(void *)(a2 + 16)) {
    goto LABEL_138;
  }
  if (!v10 || v132 == a2)
  {
    char v117 = 1;
    return v117 & 1;
  }
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v130 = *(void *)(v7 + 72);
  uint64_t v12 = v10 - 1;
  uint64_t v127 = v6;
  while (1)
  {
    sub_254DE7E3C(v132 + v11, (uint64_t)v9, type metadata accessor for DillSessionEvent);
    sub_254DE7E3C(a2 + v11, (uint64_t)v6, type metadata accessor for DillSessionEvent);
    if (*(double *)v9 != *(double *)v6) {
      goto LABEL_137;
    }
    uint64_t v13 = *((void *)v9 + 1);
    unint64_t v14 = *((void *)v9 + 2);
    uint64_t v15 = *((void *)v6 + 1);
    unint64_t v16 = *((void *)v6 + 2);
    if (v14 >> 60 == 15)
    {
      if (v16 >> 60 != 15) {
        break;
      }
      goto LABEL_128;
    }
    if (v16 >> 60 == 15) {
      break;
    }
    unint64_t v17 = v14 >> 62;
    uint64_t v18 = 0;
    switch(v14 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v13), v13))
        {
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
        }
        uint64_t v19 = v12;
        unint64_t v20 = v16;
        uint64_t v21 = a2;
        uint64_t v22 = v15;
        uint64_t v18 = HIDWORD(v13) - (int)v13;
LABEL_16:
        uint64_t v25 = *((void *)v9 + 1);
        unint64_t v26 = *((void *)v9 + 2);
        sub_2545D7BF0(v13, v14);
        unint64_t v14 = v26;
        uint64_t v13 = v25;
        uint64_t v15 = v22;
        a2 = v21;
        unint64_t v16 = v20;
        uint64_t v12 = v19;
        uint64_t v6 = v127;
        break;
      case 2uLL:
        uint64_t v24 = *(void *)(v13 + 16);
        uint64_t v23 = *(void *)(v13 + 24);
        uint64_t v18 = v23 - v24;
        if (__OFSUB__(v23, v24)) {
          goto LABEL_141;
        }
        uint64_t v19 = v12;
        unint64_t v20 = v16;
        uint64_t v21 = a2;
        uint64_t v22 = v15;
        goto LABEL_16;
      case 3uLL:
        break;
      default:
        uint64_t v18 = BYTE6(v14);
        break;
    }
    unint64_t v27 = v16 >> 62;
    switch(v16 >> 62)
    {
      case 1uLL:
        LODWORD(v28) = HIDWORD(v15) - v15;
        if (__OFSUB__(HIDWORD(v15), v15)) {
          goto LABEL_142;
        }
        uint64_t v28 = (int)v28;
LABEL_22:
        if (v18 != v28) {
          goto LABEL_136;
        }
        if (v18 < 1)
        {
LABEL_33:
          sub_25466C0F8(v13, v14);
        }
        else
        {
          switch((int)v17)
          {
            case 1:
              uint64_t v125 = a2;
              uint64_t v38 = (int)v13;
              uint64_t v128 = v13;
              if ((int)v13 > v13 >> 32) {
                goto LABEL_144;
              }
              unint64_t v126 = v14;
              uint64_t v129 = v15;
              sub_2545D7BF0(v15, v16);
              uint64_t v39 = sub_254E14C08();
              if (v39)
              {
                uint64_t v40 = v39;
                uint64_t v41 = sub_254E14C28();
                if (__OFSUB__(v38, v41)) {
                  goto LABEL_146;
                }
                char v124 = (char *)(v40 + v38 - v41);
              }
              else
              {
                char v124 = 0;
              }
              a2 = v125;
              sub_254E14C18();
              if (!v27)
              {
                uint64_t v71 = v129;
                __s1[0] = v129;
                LOWORD(__s1[1]) = v16;
                BYTE2(__s1[1]) = BYTE2(v16);
                BYTE3(__s1[1]) = BYTE3(v16);
                BYTE4(__s1[1]) = BYTE4(v16);
                BYTE5(__s1[1]) = BYTE5(v16);
                if (!v124) {
                  goto LABEL_169;
                }
                int v53 = memcmp(v124, __s1, BYTE6(v16));
LABEL_88:
                uint64_t v54 = v71;
LABEL_89:
                sub_25466C0F8(v54, v16);
                uint64_t v57 = v128;
LABEL_90:
                unint64_t v58 = v126;
LABEL_91:
                sub_25466C0F8(v57, v58);
                if (v53) {
                  goto LABEL_137;
                }
                goto LABEL_128;
              }
              if (v27 == 1)
              {
                uint64_t v65 = (int)v129;
                uint64_t v66 = (v129 >> 32) - (int)v129;
                if (v129 >> 32 < (int)v129) {
                  goto LABEL_155;
                }
                swift_retain();
                uint64_t v67 = (char *)sub_254E14C08();
                if (v67)
                {
                  uint64_t v68 = sub_254E14C28();
                  if (__OFSUB__(v65, v68)) {
                    goto LABEL_162;
                  }
                  v67 += v65 - v68;
                }
                a2 = v125;
                uint64_t v69 = sub_254E14C18();
                if (v69 >= v66) {
                  size_t v70 = v66;
                }
                else {
                  size_t v70 = v69;
                }
                if (!v124) {
                  goto LABEL_165;
                }
                if (!v67) {
                  goto LABEL_166;
                }
                int v53 = memcmp(v124, v67, v70);
                uint64_t v71 = v129;
                sub_25466C0F8(v129, v16);
                goto LABEL_88;
              }
              uint64_t v92 = *(void *)(v129 + 16);
              uint64_t v93 = *(void *)(v129 + 24);
              swift_retain();
              swift_retain();
              uint64_t v94 = sub_254E14C08();
              if (v94)
              {
                uint64_t v95 = v94;
                uint64_t v96 = sub_254E14C28();
                if (__OFSUB__(v92, v96)) {
                  goto LABEL_161;
                }
                uint64_t v97 = v92;
                uint64_t v98 = (const void *)(v95 + v92 - v96);
              }
              else
              {
                uint64_t v97 = v92;
                uint64_t v98 = 0;
              }
              int64_t v113 = v93 - v97;
              if (__OFSUB__(v93, v97)) {
                goto LABEL_156;
              }
              uint64_t v114 = sub_254E14C18();
              if (v114 >= v113) {
                size_t v115 = v113;
              }
              else {
                size_t v115 = v114;
              }
              if (!v124) {
                goto LABEL_175;
              }
              if (!v98) {
                goto LABEL_176;
              }
              int v100 = memcmp(v124, v98, v115);
              swift_release();
              uint64_t v116 = v129;
              swift_release();
              sub_25466C0F8(v116, v16);
              uint64_t v102 = v128;
LABEL_126:
              unint64_t v103 = v126;
LABEL_127:
              sub_25466C0F8(v102, v103);
              if (v100) {
                goto LABEL_137;
              }
              break;
            case 2:
              unint64_t v126 = v14;
              uint64_t v42 = v14 & 0x3FFFFFFFFFFFFFFFLL;
              char v124 = *(char **)(v13 + 16);
              uint64_t v43 = v13;
              uint64_t v129 = v15;
              sub_25466C0E4(v15, v16);
              uint64_t v128 = v43;
              swift_retain();
              swift_retain();
              uint64_t v44 = sub_254E14C08();
              uint64_t v125 = v42;
              if (v44)
              {
                uint64_t v45 = v44;
                uint64_t v46 = sub_254E14C28();
                if (__OFSUB__(v124, v46)) {
                  goto LABEL_145;
                }
                uint64_t v47 = &v124[v45 - v46];
              }
              else
              {
                uint64_t v47 = 0;
              }
              sub_254E14C18();
              if (!v27)
              {
                uint64_t v83 = v129;
                __s1[0] = v129;
                LOWORD(__s1[1]) = v16;
                BYTE2(__s1[1]) = BYTE2(v16);
                BYTE3(__s1[1]) = BYTE3(v16);
                BYTE4(__s1[1]) = BYTE4(v16);
                BYTE5(__s1[1]) = BYTE5(v16);
                if (!v47) {
                  goto LABEL_168;
                }
                int v84 = memcmp(v47, __s1, BYTE6(v16));
                swift_release();
                uint64_t v85 = v128;
                swift_release();
                sub_25466C0F8(v83, v16);
                sub_25466C0F8(v85, v126);
                if (v84) {
                  goto LABEL_137;
                }
                goto LABEL_128;
              }
              if (v27 == 1)
              {
                uint64_t v59 = (int)v129;
                uint64_t v60 = (v129 >> 32) - (int)v129;
                if (v129 >> 32 < (int)v129) {
                  goto LABEL_149;
                }
                swift_retain();
                uint64_t v61 = sub_254E14C08();
                if (v61)
                {
                  char v124 = v47;
                  uint64_t v62 = v61;
                  uint64_t v63 = sub_254E14C28();
                  if (__OFSUB__(v59, v63)) {
                    goto LABEL_160;
                  }
                  uint64_t v64 = (const void *)(v62 + v59 - v63);
                  uint64_t v47 = v124;
                }
                else
                {
                  uint64_t v64 = 0;
                }
                uint64_t v109 = sub_254E14C18();
                if (v109 >= v60) {
                  size_t v110 = v60;
                }
                else {
                  size_t v110 = v109;
                }
                if (!v47) {
                  goto LABEL_173;
                }
                if (!v64) {
                  goto LABEL_174;
                }
                int v53 = memcmp(v47, v64, v110);
                uint64_t v111 = v129;
                sub_25466C0F8(v129, v16);
                swift_release();
                uint64_t v112 = v128;
                swift_release();
                sub_25466C0F8(v111, v16);
                uint64_t v57 = v112;
                goto LABEL_90;
              }
              uint64_t v86 = *(void *)(v129 + 16);
              char v124 = *(char **)(v129 + 24);
              swift_retain();
              swift_retain();
              uint64_t v87 = sub_254E14C08();
              if (v87)
              {
                uint64_t v88 = v87;
                uint64_t v89 = sub_254E14C28();
                if (__OFSUB__(v86, v89)) {
                  goto LABEL_159;
                }
                uint64_t v90 = v86;
                unint64_t v91 = (const void *)(v88 + v86 - v89);
              }
              else
              {
                uint64_t v90 = v86;
                unint64_t v91 = 0;
              }
              uint64_t v104 = &v124[-v90];
              if (__OFSUB__(v124, v90)) {
                goto LABEL_154;
              }
              uint64_t v105 = sub_254E14C18();
              if (v105 >= (uint64_t)v104) {
                size_t v106 = (size_t)v104;
              }
              else {
                size_t v106 = v105;
              }
              if (!v47) {
                goto LABEL_171;
              }
              if (!v91) {
                goto LABEL_172;
              }
              int v100 = memcmp(v47, v91, v106);
              swift_release();
              uint64_t v107 = v128;
              swift_release();
              swift_release();
              uint64_t v108 = v129;
              swift_release();
              sub_25466C0F8(v108, v16);
              uint64_t v102 = v107;
              goto LABEL_126;
            case 3:
              memset(__s1, 0, 14);
              if (!v27) {
                goto LABEL_50;
              }
              uint64_t v128 = v13;
              uint64_t v129 = v15;
              if (v27 == 1)
              {
                unint64_t v126 = v14;
                uint64_t v48 = (int)v15;
                uint64_t v33 = (v15 >> 32) - (int)v15;
                if (v15 >> 32 < (int)v15) {
                  goto LABEL_148;
                }
                sub_2545D7BF0(v15, v16);
                uint64_t v49 = sub_254E14C08();
                if (!v49) {
                  goto LABEL_164;
                }
                uint64_t v35 = v49;
                uint64_t v50 = sub_254E14C28();
                BOOL v31 = __OFSUB__(v48, v50);
                uint64_t v37 = v48 - v50;
                if (v31) {
                  goto LABEL_153;
                }
LABEL_46:
                uint64_t v51 = sub_254E14C18();
                if (v51 >= v33) {
                  size_t v52 = v33;
                }
                else {
                  size_t v52 = v51;
                }
                int v53 = memcmp(__s1, (const void *)(v35 + v37), v52);
                uint64_t v54 = v129;
                goto LABEL_89;
              }
              unint64_t v72 = v14;
              uint64_t v79 = *(void *)(v15 + 16);
              unint64_t v126 = *(void *)(v15 + 24);
              sub_25466C0E4(v15, v16);
              swift_retain();
              swift_retain();
              uint64_t v78 = (char *)sub_254E14C08();
              if (v78)
              {
                uint64_t v80 = sub_254E14C28();
                if (__OFSUB__(v79, v80)) {
                  goto LABEL_158;
                }
                v78 += v79 - v80;
              }
              BOOL v31 = __OFSUB__(v126, v79);
              int64_t v81 = v126 - v79;
              if (v31) {
                goto LABEL_150;
              }
              uint64_t v82 = sub_254E14C18();
              if (!v78) {
                goto LABEL_167;
              }
LABEL_99:
              if (v82 >= v81) {
                size_t v99 = v81;
              }
              else {
                size_t v99 = v82;
              }
              int v100 = memcmp(__s1, v78, v99);
              swift_release();
              uint64_t v101 = v129;
              swift_release();
              sub_25466C0F8(v101, v16);
              uint64_t v102 = v128;
              unint64_t v103 = v72;
              goto LABEL_127;
            default:
              __s1[0] = v13;
              LOWORD(__s1[1]) = v14;
              BYTE2(__s1[1]) = BYTE2(v14);
              BYTE3(__s1[1]) = BYTE3(v14);
              BYTE4(__s1[1]) = BYTE4(v14);
              BYTE5(__s1[1]) = BYTE5(v14);
              if (!v27)
              {
LABEL_50:
                uint64_t __s2 = v15;
                __int16 v134 = v16;
                char v135 = BYTE2(v16);
                char v136 = BYTE3(v16);
                char v137 = BYTE4(v16);
                char v138 = BYTE5(v16);
                uint64_t v55 = v13;
                unint64_t v56 = v14;
                int v53 = memcmp(__s1, &__s2, BYTE6(v16));
                uint64_t v57 = v55;
                unint64_t v58 = v56;
                goto LABEL_91;
              }
              uint64_t v128 = v13;
              uint64_t v129 = v15;
              if (v27 == 1)
              {
                unint64_t v126 = v14;
                uint64_t v32 = (int)v15;
                uint64_t v33 = (v15 >> 32) - (int)v15;
                if (v15 >> 32 < (int)v15) {
                  goto LABEL_147;
                }
                sub_2545D7BF0(v15, v16);
                uint64_t v34 = sub_254E14C08();
                if (!v34)
                {
                  sub_254E14C18();
                  __break(1u);
LABEL_164:
                  sub_254E14C18();
                  __break(1u);
LABEL_165:
                  __break(1u);
LABEL_166:
                  __break(1u);
LABEL_167:
                  __break(1u);
LABEL_168:
                  __break(1u);
LABEL_169:
                  __break(1u);
LABEL_170:
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  __break(1u);
LABEL_175:
                  __break(1u);
LABEL_176:
                  __break(1u);
                  JUMPOUT(0x254DE46FCLL);
                }
                uint64_t v35 = v34;
                uint64_t v36 = sub_254E14C28();
                BOOL v31 = __OFSUB__(v32, v36);
                uint64_t v37 = v32 - v36;
                if (v31) {
                  goto LABEL_152;
                }
                goto LABEL_46;
              }
              unint64_t v72 = v14;
              uint64_t v73 = *(void *)(v15 + 16);
              unint64_t v126 = *(void *)(v15 + 24);
              sub_25466C0E4(v15, v16);
              swift_retain();
              swift_retain();
              uint64_t v74 = sub_254E14C08();
              if (v74)
              {
                uint64_t v75 = v74;
                uint64_t v76 = sub_254E14C28();
                if (__OFSUB__(v73, v76)) {
                  goto LABEL_157;
                }
                uint64_t v77 = v73;
                uint64_t v78 = (char *)(v75 + v73 - v76);
              }
              else
              {
                uint64_t v77 = v73;
                uint64_t v78 = 0;
              }
              int64_t v81 = v126 - v77;
              if (__OFSUB__(v126, v77)) {
                goto LABEL_151;
              }
              uint64_t v82 = sub_254E14C18();
              if (!v78) {
                goto LABEL_170;
              }
              goto LABEL_99;
          }
        }
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v15 + 16);
        uint64_t v29 = *(void *)(v15 + 24);
        BOOL v31 = __OFSUB__(v29, v30);
        uint64_t v28 = v29 - v30;
        if (!v31) {
          goto LABEL_22;
        }
        goto LABEL_143;
      case 3uLL:
        if (!v18) {
          goto LABEL_33;
        }
        goto LABEL_136;
      default:
        uint64_t v28 = BYTE6(v16);
        goto LABEL_22;
    }
LABEL_128:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v117 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v6, type metadata accessor for DillSessionEvent);
    sub_254DE7EA4((uint64_t)v9, type metadata accessor for DillSessionEvent);
    BOOL v119 = v12-- != 0;
    if (v117)
    {
      v11 += v130;
      if (v119) {
        continue;
      }
    }
    return v117 & 1;
  }
  uint64_t v120 = *((void *)v9 + 1);
  unint64_t v121 = *((void *)v9 + 2);
  uint64_t v122 = *((void *)v6 + 1);
  sub_25466C0E4(v13, v14);
  sub_25466C0E4(v122, v16);
  sub_25466C0F8(v120, v121);
  uint64_t v13 = v122;
  unint64_t v14 = v16;
LABEL_136:
  sub_25466C0F8(v13, v14);
LABEL_137:
  sub_254DE7EA4((uint64_t)v6, type metadata accessor for DillSessionEvent);
  sub_254DE7EA4((uint64_t)v9, type metadata accessor for DillSessionEvent);
LABEL_138:
  char v117 = 0;
  return v117 & 1;
}

uint64_t sub_254DE472C(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  uint64_t v4 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C730);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E122D0);
  MEMORY[0x270FA5388](v56);
  unint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  uint64_t v12 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v64 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C728);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v65 = (uint64_t)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E122A8);
  MEMORY[0x270FA5388](v66);
  unint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Output = type metadata accessor for ContextProtoToolQueryOutput(0);
  uint64_t v18 = MEMORY[0x270FA5388](Output);
  uint64_t v69 = (uint64_t)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v67 = a1;
  uint64_t v68 = a2;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23 != *(void *)(a2 + 16)) {
    goto LABEL_30;
  }
  if (!v23 || v67 == v68)
  {
    char v47 = 1;
    return v47 & 1;
  }
  size_t v52 = v6;
  int v53 = v9;
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v60 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v58 = *(void *)(v20 + 72);
  uint64_t v26 = v23 - 1;
  uint64_t v54 = v11;
  uint64_t v55 = (char *)&v52 - v21;
  uint64_t v27 = v62;
  uint64_t v61 = v17;
  while (1)
  {
    sub_254DE7E3C(v67 + v24, (uint64_t)v22, type metadata accessor for ContextProtoToolQueryOutput);
    uint64_t v28 = v69;
    sub_254DE7E3C(v68 + v24, v69, type metadata accessor for ContextProtoToolQueryOutput);
    uint64_t v29 = (uint64_t)&v17[*(int *)(v66 + 48)];
    sub_2545C9310((uint64_t)v22, (uint64_t)v17, &qword_269E0C728);
    sub_2545C9310(v28, v29, &qword_269E0C728);
    uint64_t v30 = *v25;
    if ((*v25)(v17, 1, v27) != 1) {
      break;
    }
    if (v30((char *)v29, 1, v27) != 1)
    {
      uint64_t v50 = &qword_269E122A8;
      unint64_t v17 = v61;
      goto LABEL_28;
    }
    unint64_t v17 = v61;
    sub_2545C9374((uint64_t)v61, &qword_269E0C728);
LABEL_15:
    uint64_t v46 = v69;
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v47 = sub_254E157D8();
    sub_254DE7EA4(v46, type metadata accessor for ContextProtoToolQueryOutput);
    sub_254DE7EA4((uint64_t)v22, type metadata accessor for ContextProtoToolQueryOutput);
    BOOL v49 = v26-- != 0;
    if (v47)
    {
      uint64_t v25 = v59;
      v24 += v58;
      if (v49) {
        continue;
      }
    }
    return v47 & 1;
  }
  BOOL v31 = v60;
  uint64_t v32 = v65;
  sub_2545C9310((uint64_t)v17, v65, &qword_269E0C728);
  if (v30((char *)v29, 1, v27) == 1)
  {
    uint64_t v50 = &qword_269E122A8;
    uint64_t v22 = v55;
    unint64_t v17 = v61;
    goto LABEL_27;
  }
  uint64_t v33 = v64;
  sub_254DE7DD4(v29, v64, type metadata accessor for ContextProtoRetrievedTool.Definition);
  uint64_t v34 = (uint64_t)v54;
  uint64_t v35 = (uint64_t)&v54[*(int *)(v56 + 48)];
  sub_2545C9310(v32, (uint64_t)v54, &qword_269E0C730);
  sub_2545C9310(v33, v35, &qword_269E0C730);
  uint64_t v36 = v31;
  uint64_t v37 = v34;
  uint64_t v38 = *v36;
  uint64_t v39 = v57;
  if ((*v36)(v34, 1, v57) == 1)
  {
    unsigned int v40 = v38(v35, 1, v39);
    unint64_t v17 = v61;
    if (v40 != 1) {
      goto LABEL_25;
    }
    sub_2545C9374(v37, &qword_269E0C730);
    uint64_t v41 = v64;
    uint64_t v32 = v65;
    uint64_t v22 = v55;
    goto LABEL_14;
  }
  uint64_t v42 = (uint64_t)v53;
  sub_2545C9310(v34, (uint64_t)v53, &qword_269E0C730);
  if (v38(v35, 1, v39) != 1)
  {
    uint64_t v43 = (uint64_t)v52;
    sub_254DE7DD4(v35, (uint64_t)v52, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    char v44 = _s23LighthouseDataProcessor25ContextProtoRetrievedToolV0dE14DefinitionEnumO2eeoiySbAE_AEtFZ_0(v42, v43);
    sub_254DE7EA4(v43, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_254DE7EA4(v42, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2545C9374(v34, &qword_269E0C730);
    uint64_t v41 = v64;
    uint64_t v32 = v65;
    unint64_t v17 = v61;
    uint64_t v22 = v55;
    if ((v44 & 1) == 0) {
      goto LABEL_26;
    }
LABEL_14:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v45 = sub_254E157D8();
    sub_254DE7EA4(v41, type metadata accessor for ContextProtoRetrievedTool.Definition);
    uint64_t v27 = v62;
    sub_254DE7EA4(v32, type metadata accessor for ContextProtoRetrievedTool.Definition);
    sub_2545C9374((uint64_t)v17, &qword_269E0C728);
    if ((v45 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_15;
  }
  sub_254DE7EA4(v42, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  unint64_t v17 = v61;
LABEL_25:
  sub_2545C9374(v37, &qword_269E122D0);
  uint64_t v41 = v64;
  uint64_t v32 = v65;
  uint64_t v22 = v55;
LABEL_26:
  sub_254DE7EA4(v41, type metadata accessor for ContextProtoRetrievedTool.Definition);
  uint64_t v50 = &qword_269E0C728;
LABEL_27:
  sub_254DE7EA4(v32, type metadata accessor for ContextProtoRetrievedTool.Definition);
LABEL_28:
  sub_2545C9374((uint64_t)v17, v50);
LABEL_29:
  sub_254DE7EA4(v69, type metadata accessor for ContextProtoToolQueryOutput);
  sub_254DE7EA4((uint64_t)v22, type metadata accessor for ContextProtoToolQueryOutput);
LABEL_30:
  char v47 = 0;
  return v47 & 1;
}

uint64_t sub_254DE4F84(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ResponseGenerationProtoStatementResultDigest, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor44ResponseGenerationProtoStatementResultDigestV2eeoiySbAC_ACtFZ_0, type metadata accessor for ResponseGenerationProtoStatementResultDigest);
}

uint64_t sub_254DE4FD8(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD7AddressV2eeoiySbAC_ACtFZ_0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_254DE502C(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t (*)(char *, char *))static ToolKitProtoToolDefinition.Version1.Parameter.== infix(_:_:), type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter);
}

uint64_t sub_254DE5080(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for TranscriptProtoEvent, type metadata accessor for TranscriptProtoEvent, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor20TranscriptProtoEventV2eeoiySbAC_ACtFZ_0, type metadata accessor for TranscriptProtoEvent);
}

uint64_t sub_254DE50D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E124D0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15F38);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  uint64_t v37 = v10;
  uint64_t v38 = v4;
  if (!v22 || a1 == a2)
  {
    char v31 = 1;
    return v31 & 1;
  }
  uint64_t v44 = v11;
  uint64_t v35 = v7;
  uint64_t v36 = (char *)&v35 - v20;
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v39 = *(void *)(v19 + 72);
  uint64_t v40 = a1;
  uint64_t v42 = v18;
  uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v24 = v22 - 1;
  uint64_t v41 = a2;
  uint64_t v25 = v38;
  while (1)
  {
    sub_254DE7E3C(a1 + v23, (uint64_t)v21, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    sub_254DE7E3C(a2 + v23, (uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    uint64_t v26 = (uint64_t)&v13[*(int *)(v44 + 48)];
    sub_2545C9310((uint64_t)v21, (uint64_t)v13, &qword_269E124D0);
    sub_2545C9310((uint64_t)v17, v26, &qword_269E124D0);
    uint64_t v27 = *v43;
    if ((*v43)(v13, 1, v25) != 1) {
      break;
    }
    if (v27((char *)v26, 1, v25) != 1) {
      goto LABEL_18;
    }
    sub_2545C9374((uint64_t)v13, &qword_269E124D0);
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v31 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    BOOL v33 = v24-- != 0;
    if (v31)
    {
      a1 = v40;
      v23 += v39;
      a2 = v41;
      if (v33) {
        continue;
      }
    }
    return v31 & 1;
  }
  uint64_t v28 = (uint64_t)v37;
  sub_2545C9310((uint64_t)v13, (uint64_t)v37, &qword_269E124D0);
  if (v27((char *)v26, 1, v25) != 1)
  {
    uint64_t v29 = (uint64_t)v35;
    sub_254DE7DD4(v26, (uint64_t)v35, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    char v30 = static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind.== infix(_:_:)(v28, v29);
    sub_254DE7EA4(v29, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    uint64_t v25 = v38;
    sub_254DE7EA4(v28, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    sub_2545C9374((uint64_t)v13, &qword_269E124D0);
    uint64_t v21 = v36;
    if ((v30 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  sub_254DE7EA4(v28, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
  uint64_t v21 = v36;
LABEL_18:
  sub_2545C9374((uint64_t)v13, &qword_269E15F38);
LABEL_19:
  sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
  sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
LABEL_20:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_254DE55B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0CA30);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E161D0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  uint64_t v37 = v10;
  uint64_t v38 = v4;
  if (!v22 || a1 == a2)
  {
    char v31 = 1;
    return v31 & 1;
  }
  uint64_t v44 = v11;
  uint64_t v35 = v7;
  uint64_t v36 = (char *)&v35 - v20;
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v39 = *(void *)(v19 + 72);
  uint64_t v40 = a1;
  uint64_t v42 = v18;
  uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v24 = v22 - 1;
  uint64_t v41 = a2;
  uint64_t v25 = v38;
  while (1)
  {
    sub_254DE7E3C(a1 + v23, (uint64_t)v21, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
    sub_254DE7E3C(a2 + v23, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
    uint64_t v26 = (uint64_t)&v13[*(int *)(v44 + 48)];
    sub_2545C9310((uint64_t)v21, (uint64_t)v13, &qword_269E0CA30);
    sub_2545C9310((uint64_t)v17, v26, &qword_269E0CA30);
    uint64_t v27 = *v43;
    if ((*v43)(v13, 1, v25) != 1) {
      break;
    }
    if (v27((char *)v26, 1, v25) != 1) {
      goto LABEL_18;
    }
    sub_2545C9374((uint64_t)v13, &qword_269E0CA30);
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v31 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
    sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
    BOOL v33 = v24-- != 0;
    if (v31)
    {
      a1 = v40;
      v23 += v39;
      a2 = v41;
      if (v33) {
        continue;
      }
    }
    return v31 & 1;
  }
  uint64_t v28 = (uint64_t)v37;
  sub_2545C9310((uint64_t)v13, (uint64_t)v37, &qword_269E0CA30);
  if (v27((char *)v26, 1, v25) != 1)
  {
    uint64_t v29 = (uint64_t)v35;
    sub_254DE7DD4(v26, (uint64_t)v35, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
    char v30 = _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV0deF12Version1KindO2eeoiySbAE_AEtFZ_0(v28, v29);
    sub_254DE7EA4(v29, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
    uint64_t v25 = v38;
    sub_254DE7EA4(v28, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
    sub_2545C9374((uint64_t)v13, &qword_269E0CA30);
    uint64_t v21 = v36;
    if ((v30 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  sub_254DE7EA4(v28, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
  uint64_t v21 = v36;
LABEL_18:
  sub_2545C9374((uint64_t)v13, &qword_269E161D0);
LABEL_19:
  sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
  sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
LABEL_20:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_254DE5A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoToolSummaryString.Component(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = &v24[-v9];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    goto LABEL_29;
  }
  if (!v11 || a1 == a2)
  {
    char v20 = 1;
    return v20 & 1;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v26 = *(void *)(v8 + 72);
  uint64_t v27 = a1;
  uint64_t v13 = v11 - 1;
  uint64_t v28 = a2;
  uint64_t v29 = v4;
  while (1)
  {
    sub_254DE7E3C(a1 + v12, (uint64_t)v10, type metadata accessor for ToolKitProtoToolSummaryString.Component);
    sub_254DE7E3C(a2 + v12, (uint64_t)v7, type metadata accessor for ToolKitProtoToolSummaryString.Component);
    uint64_t v15 = *(void *)v10;
    uint64_t v14 = *((void *)v10 + 1);
    int v16 = v10[16];
    uint64_t v18 = *(void *)v7;
    uint64_t v17 = *((void *)v7 + 1);
    int v19 = v7[16];
    if (v16 != 255) {
      break;
    }
    if (v19 != 255)
    {
LABEL_26:
      sub_254BB98DC(*(void *)v7, *((void *)v7 + 1), v7[16]);
      sub_254BB98DC(v15, v14, v16);
      sub_254BB98FC(v15, v14, v16);
      sub_254BB98FC(v18, v17, v19);
      goto LABEL_28;
    }
LABEL_19:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v20 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoToolSummaryString.Component);
    sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoToolSummaryString.Component);
    BOOL v22 = v13-- != 0;
    if (v20)
    {
      a1 = v27;
      v12 += v26;
      a2 = v28;
      if (v22) {
        continue;
      }
    }
    return v20 & 1;
  }
  if (v19 == 255) {
    goto LABEL_26;
  }
  if ((v16 & 1) == 0)
  {
    if (v19) {
      goto LABEL_27;
    }
    if (v15 == v18 && v14 == v17)
    {
LABEL_17:
      sub_254BB98DC(*(void *)v10, *((void *)v10 + 1), v7[16]);
      sub_254BB98DC(v15, v14, v16);
      sub_254BB9914();
      sub_254BB9914();
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v19)
  {
    if (v15 == v18 && v14 == v17) {
      goto LABEL_17;
    }
LABEL_18:
    int v25 = sub_254E15E08();
    sub_254BB98DC(v18, v17, v19);
    sub_254BB98DC(v15, v14, v16);
    sub_254BB9914();
    sub_254BB9914();
    if ((v25 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_19;
  }
LABEL_27:
  sub_254BB98DC(*(void *)v7, *((void *)v7 + 1), v7[16]);
  sub_254BB98DC(v15, v14, v16);
  sub_254BB9914();
  sub_254BB9914();
LABEL_28:
  sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoToolSummaryString.Component);
  sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoToolSummaryString.Component);
LABEL_29:
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_254DE5EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Category(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v19 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v20 = *(void *)(v8 + 72);
      uint64_t v13 = v11 - 1;
      while (1)
      {
        sub_254DE7E3C(a1 + v12, (uint64_t)v10, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
        sub_254DE7E3C(a2 + v12, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
        BOOL v14 = *v10 == *v7 && v10[1] == v7[1];
        if (!v14 && (sub_254E15E08() & 1) == 0) {
          break;
        }
        sub_254E14FC8();
        sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        char v15 = sub_254E157D8();
        sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
        sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
        BOOL v17 = v13-- != 0;
        if (v15)
        {
          v12 += v20;
          if (v17) {
            continue;
          }
        }
        return v15 & 1;
      }
      sub_254DE7EA4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
      sub_254DE7EA4((uint64_t)v10, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
      char v15 = 0;
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

BOOL sub_254DE6124(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  unint64_t v3 = (char *)(a1 + 32);
  uint64_t v4 = (char *)(a2 + 32);
  uint64_t v5 = v2 - 1;
  do
  {
    uint64_t v7 = *v3++;
    uint64_t v6 = v7;
    uint64_t v8 = *v4++;
    uint64_t v9 = qword_254E48478[v6];
    uint64_t v10 = qword_254E48478[v8];
    BOOL v12 = v5-- != 0;
    BOOL result = v9 == v10;
  }
  while (v9 == v10 && v12);
  return result;
}

uint64_t sub_254DE6190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E124B8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15F80);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ToolKitProtoSystemToolProtocol(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  BOOL v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v21 = (char *)&v35 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22 != *(void *)(a2 + 16)) {
    goto LABEL_20;
  }
  uint64_t v37 = v10;
  uint64_t v38 = v4;
  if (!v22 || a1 == a2)
  {
    char v31 = 1;
    return v31 & 1;
  }
  uint64_t v44 = v11;
  uint64_t v35 = v7;
  uint64_t v36 = (char *)&v35 - v20;
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v39 = *(void *)(v19 + 72);
  uint64_t v40 = a1;
  uint64_t v42 = v18;
  uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v24 = v22 - 1;
  uint64_t v41 = a2;
  uint64_t v25 = v38;
  while (1)
  {
    sub_254DE7E3C(a1 + v23, (uint64_t)v21, type metadata accessor for ToolKitProtoSystemToolProtocol);
    sub_254DE7E3C(a2 + v23, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocol);
    uint64_t v26 = (uint64_t)&v13[*(int *)(v44 + 48)];
    sub_2545C9310((uint64_t)v21, (uint64_t)v13, &qword_269E124B8);
    sub_2545C9310((uint64_t)v17, v26, &qword_269E124B8);
    uint64_t v27 = *v43;
    if ((*v43)(v13, 1, v25) != 1) {
      break;
    }
    if (v27((char *)v26, 1, v25) != 1) {
      goto LABEL_18;
    }
    sub_2545C9374((uint64_t)v13, &qword_269E124B8);
LABEL_10:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v31 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocol);
    sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoSystemToolProtocol);
    BOOL v33 = v24-- != 0;
    if (v31)
    {
      a1 = v40;
      v23 += v39;
      a2 = v41;
      if (v33) {
        continue;
      }
    }
    return v31 & 1;
  }
  uint64_t v28 = (uint64_t)v37;
  sub_2545C9310((uint64_t)v13, (uint64_t)v37, &qword_269E124B8);
  if (v27((char *)v26, 1, v25) != 1)
  {
    uint64_t v29 = (uint64_t)v35;
    sub_254DE7DD4(v26, (uint64_t)v35, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    char v30 = static ToolKitProtoSystemToolProtocolKind.== infix(_:_:)(v28, v29);
    sub_254DE7EA4(v29, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    uint64_t v25 = v38;
    sub_254DE7EA4(v28, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2545C9374((uint64_t)v13, &qword_269E124B8);
    uint64_t v21 = v36;
    if ((v30 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_10;
  }
  sub_254DE7EA4(v28, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
  uint64_t v21 = v36;
LABEL_18:
  sub_2545C9374((uint64_t)v13, &qword_269E15F80);
LABEL_19:
  sub_254DE7EA4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocol);
  sub_254DE7EA4((uint64_t)v21, type metadata accessor for ToolKitProtoSystemToolProtocol);
LABEL_20:
  char v31 = 0;
  return v31 & 1;
}

uint64_t sub_254DE6670(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  unint64_t v3 = (unsigned __int8 *)(a1 + 32);
  uint64_t v4 = (unsigned __int8 *)(a2 + 32);
  uint64_t v5 = v2 - 1;
  do
  {
    uint64_t v6 = v5;
    int v7 = *v3 ^ *v4;
    if (v7) {
      break;
    }
    --v5;
    ++v3;
    ++v4;
  }
  while (v6);
  return (v7 ^ 1) & 1;
}

uint64_t sub_254DE66DC(uint64_t a1, uint64_t a2)
{
  return sub_254DDD100(a1, a2, type metadata accessor for ToolKitProtoContainerDefinition, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t (*)(char *, char *))static ToolKitProtoContainerDefinition.== infix(_:_:), type metadata accessor for ToolKitProtoContainerDefinition);
}

uint64_t sub_254DE6730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E124D0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v62 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15F38);
  MEMORY[0x270FA5388](v64);
  uint64_t v68 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  uint64_t v11 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v67 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E124C8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v69 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E15F70);
  MEMORY[0x270FA5388](v70);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(0);
  uint64_t v17 = MEMORY[0x270FA5388](v73);
  uint64_t v19 = (uint64_t *)((char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v22 = (uint64_t *)((char *)&v56 - v21);
  uint64_t v71 = a1;
  uint64_t v72 = a2;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23 != *(void *)(a2 + 16))
  {
LABEL_35:
    char v50 = 0;
    return v50 & 1;
  }
  if (v23 && v71 != v72)
  {
    uint64_t v57 = v7;
    uint64_t v61 = v4;
    unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v59 = v16;
    uint64_t v60 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v26 = *(void *)(v20 + 72);
    uint64_t v27 = v23 - 1;
    uint64_t v28 = v66;
    uint64_t v63 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v58 = v26;
    uint64_t v65 = (char *)&v56 - v21;
    while (1)
    {
      sub_254DE7E3C(v71 + v24, (uint64_t)v22, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
      sub_254DE7E3C(v72 + v24, (uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
      BOOL v29 = *v22 == *v19 && v22[1] == v19[1];
      if (!v29 && (sub_254E15E08() & 1) == 0) {
        break;
      }
      uint64_t v30 = *(int *)(v73 + 20);
      uint64_t v31 = (uint64_t)v19 + v30;
      uint64_t v32 = (uint64_t)&v16[*(int *)(v70 + 48)];
      sub_2545C9310((uint64_t)v22 + v30, (uint64_t)v16, &qword_269E124C8);
      sub_2545C9310(v31, v32, &qword_269E124C8);
      BOOL v33 = *v25;
      if ((*v25)(v16, 1, v28) == 1)
      {
        if (v33((char *)v32, 1, v28) != 1)
        {
          int v53 = &qword_269E15F70;
          uint64_t v22 = v65;
          goto LABEL_33;
        }
        sub_2545C9374((uint64_t)v16, &qword_269E124C8);
        uint64_t v22 = v65;
      }
      else
      {
        uint64_t v34 = v69;
        sub_2545C9310((uint64_t)v16, v69, &qword_269E124C8);
        if (v33((char *)v32, 1, v28) == 1)
        {
          uint64_t v54 = v34;
          int v53 = &qword_269E15F70;
          uint64_t v22 = v65;
          goto LABEL_32;
        }
        uint64_t v35 = v67;
        sub_254DE7DD4(v32, v67, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        uint64_t v36 = v68;
        uint64_t v37 = v68 + *(int *)(v64 + 48);
        sub_2545C9310(v34, v68, &qword_269E124D0);
        sub_2545C9310(v35, v37, &qword_269E124D0);
        uint64_t v38 = v61;
        uint64_t v39 = *v60;
        if ((*v60)(v36, 1, v61) == 1)
        {
          int v40 = v39(v37, 1, v38);
          uint64_t v16 = v59;
          uint64_t v22 = v65;
          uint64_t v41 = v67;
          if (v40 != 1) {
            goto LABEL_30;
          }
          sub_2545C9374(v68, &qword_269E124D0);
        }
        else
        {
          uint64_t v42 = v68;
          uint64_t v43 = v62;
          sub_2545C9310(v68, v62, &qword_269E124D0);
          int v44 = v39(v37, 1, v38);
          uint64_t v22 = v65;
          if (v44 == 1)
          {
            sub_254DE7EA4(v43, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
            uint64_t v41 = v67;
            uint64_t v16 = v59;
LABEL_30:
            sub_2545C9374(v68, &qword_269E15F38);
LABEL_31:
            sub_254DE7EA4(v41, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
            int v53 = &qword_269E124C8;
            uint64_t v54 = v69;
LABEL_32:
            sub_254DE7EA4(v54, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
LABEL_33:
            sub_2545C9374((uint64_t)v16, v53);
            break;
          }
          uint64_t v45 = (uint64_t)v57;
          sub_254DE7DD4(v37, (uint64_t)v57, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
          char v46 = static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind.== infix(_:_:)(v43, v45);
          sub_254DE7EA4(v45, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
          sub_254DE7EA4(v43, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
          sub_2545C9374(v42, &qword_269E124D0);
          uint64_t v41 = v67;
          uint64_t v16 = v59;
          if ((v46 & 1) == 0) {
            goto LABEL_31;
          }
        }
        uint64_t v47 = v69;
        sub_254E14FC8();
        sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
        char v48 = sub_254E157D8();
        sub_254DE7EA4(v41, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        uint64_t v49 = v47;
        uint64_t v28 = v66;
        sub_254DE7EA4(v49, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        sub_2545C9374((uint64_t)v16, &qword_269E124C8);
        uint64_t v26 = v58;
        if ((v48 & 1) == 0) {
          break;
        }
      }
      sub_254E14FC8();
      sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
      char v50 = sub_254E157D8();
      sub_254DE7EA4((uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
      sub_254DE7EA4((uint64_t)v22, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
      BOOL v52 = v27-- != 0;
      if (v50)
      {
        v24 += v26;
        uint64_t v25 = v63;
        if (v52) {
          continue;
        }
      }
      return v50 & 1;
    }
    sub_254DE7EA4((uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
    sub_254DE7EA4((uint64_t)v22, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
    goto LABEL_35;
  }
  char v50 = 1;
  return v50 & 1;
}

BOOL sub_254DE6FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  unint64_t v3 = (unsigned __int8 *)(a1 + 32);
  uint64_t v4 = (unsigned __int8 *)(a2 + 32);
  uint64_t v5 = v2 - 1;
  do
  {
    int v7 = *v3++;
    int v6 = v7;
    int v9 = *v4++;
    int v8 = v9;
    BOOL v11 = v5-- != 0;
    BOOL result = v6 == v8;
  }
  while (v6 == v8 && v11);
  return result;
}

uint64_t sub_254DE7004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContextProtoBoundingBox(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C6F8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12308);
  MEMORY[0x270FA5388](v45);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for ContextProtoSurroundingText(0);
  uint64_t v13 = MEMORY[0x270FA5388](v44);
  uint64_t v15 = (char **)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char **)((char *)&v38 - v17);
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19 != *(void *)(a2 + 16)) {
    goto LABEL_29;
  }
  if (!v19 || v46 == v47)
  {
    char v34 = 1;
    return v34 & 1;
  }
  uint64_t v38 = v7;
  uint64_t v39 = v10;
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v40 = *(void *)(v16 + 72);
  uint64_t v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v21 = v19 - 1;
  uint64_t v42 = v4;
  uint64_t v43 = v15;
  uint64_t v22 = v44;
  while (1)
  {
    sub_254DE7E3C(v46 + v20, (uint64_t)v18, type metadata accessor for ContextProtoSurroundingText);
    sub_254DE7E3C(v47 + v20, (uint64_t)v15, type metadata accessor for ContextProtoSurroundingText);
    uint64_t v23 = v18[1];
    uint64_t v24 = v15[1];
    if (v23)
    {
      if (!v24) {
        goto LABEL_28;
      }
      BOOL v25 = *v18 == *v15 && v23 == v24;
      if (!v25 && (sub_254E15E08() & 1) == 0) {
        goto LABEL_28;
      }
    }
    else if (v24)
    {
      goto LABEL_28;
    }
    uint64_t v26 = *(int *)(v22 + 20);
    uint64_t v27 = (uint64_t)v15 + v26;
    uint64_t v28 = (uint64_t)&v12[*(int *)(v45 + 48)];
    sub_2545C9310((uint64_t)v18 + v26, (uint64_t)v12, &qword_269E0C6F8);
    sub_2545C9310(v27, v28, &qword_269E0C6F8);
    uint64_t v29 = v42;
    uint64_t v30 = *v41;
    if ((*v41)(v12, 1, v42) != 1) {
      break;
    }
    if (v30((char *)v28, 1, v29) != 1) {
      goto LABEL_27;
    }
    sub_2545C9374((uint64_t)v12, &qword_269E0C6F8);
    uint64_t v15 = v43;
LABEL_19:
    sub_254E14FC8();
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v34 = sub_254E157D8();
    sub_254DE7EA4((uint64_t)v15, type metadata accessor for ContextProtoSurroundingText);
    sub_254DE7EA4((uint64_t)v18, type metadata accessor for ContextProtoSurroundingText);
    BOOL v36 = v21-- != 0;
    if (v34)
    {
      v20 += v40;
      if (v36) {
        continue;
      }
    }
    return v34 & 1;
  }
  uint64_t v31 = (uint64_t)v39;
  sub_2545C9310((uint64_t)v12, (uint64_t)v39, &qword_269E0C6F8);
  if (v30((char *)v28, 1, v29) != 1)
  {
    uint64_t v32 = (uint64_t)v38;
    sub_254DE7DD4(v28, (uint64_t)v38, type metadata accessor for ContextProtoBoundingBox);
    char v33 = static ContextProtoBoundingBox.== infix(_:_:)(v31, v32);
    sub_254DE7EA4(v32, type metadata accessor for ContextProtoBoundingBox);
    sub_254DE7EA4(v31, type metadata accessor for ContextProtoBoundingBox);
    sub_2545C9374((uint64_t)v12, &qword_269E0C6F8);
    uint64_t v15 = v43;
    uint64_t v22 = v44;
    if ((v33 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_19;
  }
  sub_254DE7EA4(v31, type metadata accessor for ContextProtoBoundingBox);
LABEL_27:
  sub_2545C9374((uint64_t)v12, &qword_269E12308);
  uint64_t v15 = v43;
LABEL_28:
  sub_254DE7EA4((uint64_t)v15, type metadata accessor for ContextProtoSurroundingText);
  sub_254DE7EA4((uint64_t)v18, type metadata accessor for ContextProtoSurroundingText);
LABEL_29:
  char v34 = 0;
  return v34 & 1;
}

uint64_t sub_254DE7528(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_254DDC65C((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_254DE7600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_254E14C08();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_254E14C28();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_254E14C18();
  sub_254DDC65C(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_254DE76B8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x254DE7920);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_2545D7BF0(a3, a4);
                  sub_2545D7BF0(a1, a2);
                  char v17 = sub_254DE7600((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_2545DDDFC(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_2545D7BF0(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_254DE7600(v21, v22, v20, a3, a4);
                  sub_2545DDDFC(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_2545D7BF0(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_2545D7BF0(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_254DE7528(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_2545DDDFC(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_254DE7950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v20[-v9];
  if (*(double *)a1 != *(double *)a2) {
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  unint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a2 + 8);
  unint64_t v14 = *(void *)(a2 + 16);
  if (v12 >> 60 == 15)
  {
    if (v14 >> 60 == 15) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
LABEL_6:
    sub_25466C0E4(*(void *)(a1 + 8), *(void *)(a1 + 16));
    sub_25466C0E4(v13, v14);
    sub_25466C0F8(v11, v12);
    sub_25466C0F8(v13, v14);
    goto LABEL_7;
  }
  sub_25466C0E4(*(void *)(a1 + 8), *(void *)(a1 + 16));
  sub_25466C0E4(v13, v14);
  int v21 = sub_254DE76B8(v11, v12, v13, v14);
  sub_25466C0F8(v13, v14);
  sub_25466C0F8(v11, v12);
  if (v21)
  {
LABEL_9:
    uint64_t v16 = type metadata accessor for DillSessionEvent(0);
    char v17 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
    v17(v10, a1 + *(int *)(v16 + 24), v4);
    v17(v8, a2 + *(int *)(v16 + 24), v4);
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v15 = sub_254E157D8();
    uint64_t v18 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    v18(v10, v4);
    return v15 & 1;
  }
LABEL_7:
  char v15 = 0;
  return v15 & 1;
}

uint64_t sub_254DE7BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - v9;
  if ((sub_254DE76B8(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0
    && (sub_254DE3A9C(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) != 0)
  {
    uint64_t v11 = type metadata accessor for DillSession(0);
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v10, a1 + *(int *)(v11 + 24), v4);
    v12(v8, a2 + *(int *)(v11 + 24), v4);
    sub_254DE7D8C((unint64_t *)&qword_269E0E3D8, MEMORY[0x263F50560]);
    char v13 = sub_254E157D8();
    unint64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_254DE7D8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_254DE7DD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_254DE7E3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254DE7EA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id DillSiriInstrumentationWrapper.__allocating_init(dillData:anyEventType:)(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (char *)objc_allocWithZone(v4);
  uint64_t v9 = (uint64_t *)&v8[OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_dillData];
  *uint64_t v9 = a1;
  v9[1] = a2;
  *(_DWORD *)&v8[OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_anyEventType] = a3;
  sub_2545D7BF0(a1, a2);
  v12.receiver = v8;
  v12.super_class = v4;
  id result = objc_msgSendSuper2(&v12, sel_init);
  if (result)
  {
    id v11 = result;
    sub_2545DDDFC(a1, a2);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id DillSiriInstrumentationWrapper.init(dillData:anyEventType:)(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v6 = (uint64_t *)&v3[OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_dillData];
  *uint64_t v6 = a1;
  v6[1] = a2;
  *(_DWORD *)&v3[OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_anyEventType] = a3;
  sub_2545D7BF0(a1, a2);
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for DillSiriInstrumentationWrapper();
  id result = objc_msgSendSuper2(&v9, sel_init);
  if (result)
  {
    id v8 = result;
    sub_2545DDDFC(a1, a2);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for DillSiriInstrumentationWrapper()
{
  return self;
}

id DillSiriInstrumentationWrapper.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DillSiriInstrumentationWrapper.init(coder:)(void *a1)
{
  sub_254E15C48();
  __break(1u);
}

id DillSiriInstrumentationWrapper.__allocating_init(data:)(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15)
  {
    id v3 = 0;
  }
  else
  {
    id v3 = (void *)sub_254E14C68();
    sub_25466C0F8(a1, a2);
  }
  id v6 = objc_msgSend(objc_allocWithZone(v2), sel_initWithData_, v3);

  return v6;
}

void DillSiriInstrumentationWrapper.init(data:)(uint64_t a1, unint64_t a2)
{
}

uint64_t sub_254DE832C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_dillData);
  sub_2545D7BF0(v1, *(void *)(v0 + OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_dillData + 8));
  return v1;
}

uint64_t sub_254DE836C()
{
  return 0x676E697373696D3CLL;
}

uint64_t sub_254DE83E0()
{
  return *(unsigned int *)(v0 + OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_anyEventType);
}

id DillSiriInstrumentationWrapper.__deallocating_deinit()
{
  return sub_254DE879C(type metadata accessor for DillSiriInstrumentationWrapper);
}

uint64_t method lookup function for DillSiriInstrumentationWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DillSiriInstrumentationWrapper);
}

uint64_t dispatch thunk of DillSiriInstrumentationWrapper.__allocating_init(dillData:anyEventType:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

id sub_254DE8510(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15)
  {
    type metadata accessor for DillProvisional();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    id v6 = (uint64_t *)&v2[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_dillData];
    *id v6 = a1;
    v6[1] = a2;
    uint64_t v7 = &v2[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_eventId];
    *(void *)uint64_t v7 = 0;
    *((void *)v7 + 1) = 0xE000000000000000;
    *(void *)&v2[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_version] = -1;
    sub_2545D7BF0(a1, a2);
    v9.receiver = v2;
    v9.super_class = (Class)type metadata accessor for DillProvisional();
    id v3 = objc_msgSendSuper2(&v9, sel_init);
    sub_25466C0F8(a1, a2);
    if (v3) {
  }
    }
  return v3;
}

id sub_254DE864C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (uint64_t *)(a1 + *a3);
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  sub_2545D7BF0(*v3, v5);
  id v6 = (void *)sub_254E14C68();
  sub_2545DDDFC(v4, v5);

  return v6;
}

id sub_254DE8784()
{
  return sub_254DE879C(type metadata accessor for DillProvisional);
}

id sub_254DE879C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for DillProvisional()
{
  return self;
}

uint64_t sub_254DE884C@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  if (qword_269E0C090 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_254E15718();
  __swift_project_value_buffer(v4, (uint64_t)qword_269E70698);
  unint64_t v5 = sub_254E15708();
  os_log_type_t v6 = sub_254E15A38();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v20 = v8;
    if (a1) {
      uint64_t v9 = 1920298824;
    }
    else {
      uint64_t v9 = 7954756;
    }
    if (a1) {
      unint64_t v10 = 0xE400000000000000;
    }
    else {
      unint64_t v10 = 0xE300000000000000;
    }
    uint64_t v19 = sub_254658670(v9, v10, &v20);
    sub_254E15B08();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2545B9000, v5, v6, "Applying time fuzzing to date with precision: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v8, -1, -1);
    MEMORY[0x25A27FC50](v7, -1, -1);
  }

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08788]), sel_init);
  objc_super v12 = (void *)sub_254E157E8();
  objc_msgSend(v11, sel_setDateFormat_, v12);

  char v13 = (void *)sub_254E14D38();
  id v14 = objc_msgSend(v11, sel_stringFromDate_, v13);

  if (!v14)
  {
    sub_254E15818();
    id v14 = (id)sub_254E157E8();
    swift_bridgeObjectRelease();
  }
  id v15 = objc_msgSend(v11, sel_dateFromString_, v14, v19, v20);

  if (v15)
  {
    sub_254E14D58();

    uint64_t v16 = sub_254E14D98();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 0, 1, v16);
  }
  else
  {

    uint64_t v18 = sub_254E14D98();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

id sub_254DE8B64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12410);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (unsigned __int8 *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E030]), sel_init);
  sub_254DE9134(a1, (uint64_t)v10);
  uint64_t v12 = type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind(0);
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) != 1)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        objc_msgSend(v11, sel_setPrimitiveInt_, *(void *)v10);
        return v11;
      case 2u:
        objc_msgSend(v11, sel_setPrimitiveDouble_, *(double *)v10);
        return v11;
      case 3u:
        sub_254DE919C((uint64_t)v10, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
        if (v11)
        {
          sub_254DE9264();
          id v13 = v11;
          sub_254E15268();
          id v14 = (void *)sub_254E157E8();
          swift_bridgeObjectRelease();
          objc_msgSend(v13, sel_setPrimitiveDecimal_, v14);
        }
        id v15 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal;
        uint64_t v16 = (uint64_t)v7;
        goto LABEL_34;
      case 4u:
      case 7u:
        swift_bridgeObjectRelease();
        return v11;
      case 5u:
      case 0x11u:
        goto LABEL_33;
      case 6u:
        sub_2545DDDFC(*(void *)v10, *((void *)v10 + 1));
        id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DEE8]), (SEL)&selRef_hasStartTimestamp);
        uint64_t v18 = v17;
        if (v17) {
          objc_msgSend(v17, sel_setExists_, 1);
        }
        id v19 = v11;
        objc_msgSend(v19, sel_setPrimitiveDateComponents_, v18);

        return v11;
      case 8u:
      case 0x10u:
        sub_2545DDDFC(*(void *)v10, *((void *)v10 + 1));
        return v11;
      case 9u:
        id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DF78]), (SEL)&selRef_hasStartTimestamp);
        int v21 = v20;
        if (v20) {
          objc_msgSend(v20, sel_setExists_, 1);
        }
        id v22 = v11;
        objc_msgSend(v22, sel_setMeasurement_, v21);
        goto LABEL_32;
      case 0xAu:
        id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DED8]), (SEL)&selRef_hasStartTimestamp);
        int v21 = v23;
        if (v23) {
          objc_msgSend(v23, sel_setExists_, 1);
        }
        id v22 = v11;
        objc_msgSend(v22, sel_setCurrencyAmount_, v21);
        goto LABEL_32;
      case 0xBu:
        id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DFD0]), (SEL)&selRef_hasStartTimestamp);
        int v21 = v24;
        if (v24) {
          objc_msgSend(v24, sel_setExists_, 1);
        }
        id v22 = v11;
        objc_msgSend(v22, sel_setPaymentMethod_, v21);
        goto LABEL_32;
      case 0xCu:
        id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DFF8]), (SEL)&selRef_hasStartTimestamp);
        int v21 = v25;
        if (v25) {
          objc_msgSend(v25, sel_setExists_, 1);
        }
        id v22 = v11;
        objc_msgSend(v22, sel_setPlacemark_, v21);
        goto LABEL_32;
      case 0xDu:
        id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DFE0]), (SEL)&selRef_hasStartTimestamp);
        int v21 = v26;
        if (v26) {
          objc_msgSend(v26, sel_setExists_, 1);
        }
        id v22 = v11;
        objc_msgSend(v22, sel_setPerson_, v21);
        goto LABEL_32;
      case 0xEu:
        id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DF28]), (SEL)&selRef_hasStartTimestamp);
        int v21 = v27;
        if (v27) {
          objc_msgSend(v27, sel_setExists_, 1);
        }
        id v22 = v11;
        objc_msgSend(v22, sel_setFile_, v21);
LABEL_32:

LABEL_33:
        id v15 = type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind;
        uint64_t v16 = (uint64_t)v10;
        goto LABEL_34;
      case 0xFu:
        sub_254DE919C((uint64_t)v10, (uint64_t)v4, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App);
        if (v11)
        {
          id v29 = objc_allocWithZone(MEMORY[0x263F6DE70]);
          id v30 = v11;
          id v31 = objc_msgSend(v29, (SEL)&selRef_hasStartTimestamp);
          uint64_t v32 = v31;
          if (v31)
          {
            id v33 = v31;
            char v34 = (void *)sub_254E157E8();
            objc_msgSend(v33, sel_setBundleId_, v34);
          }
          objc_msgSend(v30, sel_setApp_, v32);
        }
        id v15 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App;
        uint64_t v16 = (uint64_t)v4;
LABEL_34:
        sub_254DE9204(v16, v15);
        break;
      case 0x12u:
        return v11;
      default:
        objc_msgSend(v11, sel_setPrimitiveBool_, *v10);
        break;
    }
  }
  return v11;
}

uint64_t sub_254DE9134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E12410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254DE919C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_254DE9204(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_254DE9264()
{
  unint64_t result = qword_269E14F10;
  if (!qword_269E14F10)
  {
    type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E14F10);
  }
  return result;
}

double RequestSignature.init()@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)&double result = 3;
  *(_OWORD *)(a1 + 8) = xmmword_254E1AA10;
  *(unsigned char *)(a1 + 24) = 2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = MEMORY[0x263F8EE78];
  *(_DWORD *)(a1 + 56) = 0;
  *(_WORD *)(a1 + 60) = 2049;
  return result;
}

unint64_t ErrorComponent.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x726568746FLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x72656E6E616C70;
      break;
    case 4:
      unint64_t result = 0x726F747563657865;
      break;
    case 5:
      unint64_t result = 0x74696B6C6F6F74;
      break;
    case 6:
      unint64_t result = 0x746E65696C63;
      break;
    case 7:
      unint64_t result = 0x6E65746E49707061;
      break;
    case 8:
      unint64_t result = 0x696C707041746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t SessionSignature.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AttributionTraits(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for SessionSignature(0);
  uint64_t v10 = a1 + v9[7];
  id v11 = *(void (**)(void))(v3 + 56);
  v19[1] = v3 + 56;
  id v20 = v11;
  uint64_t v21 = v10;
  v11();
  *(_WORD *)a1 = 769;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0xE000000000000000;
  uint64_t v12 = MEMORY[0x263F8EE78];
  *(void *)(a1 + v9[8]) = sub_25464B4B0(MEMORY[0x263F8EE78]);
  *(void *)(a1 + v9[9]) = &unk_2703EB4F0;
  *(void *)(a1 + v9[10]) = v12;
  v5[2] = 0;
  v5[3] = 0;
  uint64_t v13 = (uint64_t)v5 + *(int *)(v2 + 24);
  uint64_t v14 = sub_254E14E08();
  id v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  uint64_t v16 = (void *)((char *)v5 + *(int *)(v2 + 28));
  *uint64_t v5 = 0;
  v5[1] = 0;
  void *v16 = 0;
  v16[1] = 0;
  sub_2545C9374(v13, &qword_26B26F498);
  v15(v13, 1, 1, v14);
  swift_bridgeObjectRelease();
  void *v16 = 0;
  v16[1] = 0;
  sub_254DFBC74((uint64_t)v5, (uint64_t)v8, type metadata accessor for AttributionTraits);
  ((void (*)(char *, void, uint64_t, uint64_t))v20)(v8, 0, 1, v2);
  uint64_t result = sub_25466C38C((uint64_t)v8, v21, &qword_269E10D68);
  *(void *)(a1 + v9[11]) = MEMORY[0x263F8EE78];
  uint64_t v18 = (void *)(a1 + v9[12]);
  *uint64_t v18 = 0;
  v18[1] = 0xE000000000000000;
  return result;
}

uint64_t type metadata accessor for AttributionTraits(uint64_t a1)
{
  return sub_254661040(a1, (uint64_t *)&unk_269E16878);
}

uint64_t type metadata accessor for SessionSignature(uint64_t a1)
{
  return sub_254661040(a1, (uint64_t *)&unk_269E16860);
}

uint64_t (*SessionView.start.modify())()
{
  return nullsub_1;
}

uint64_t SessionView.end.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SessionView(0) + 20);
  uint64_t v4 = sub_254E14D98();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SessionView.end.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SessionView(0) + 20);
  uint64_t v4 = sub_254E14D98();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SessionView.end.modify())()
{
  return nullsub_1;
}

uint64_t SessionView.numSessions.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SessionView(0) + 24));
}

uint64_t SessionView.numSessions.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for SessionView(0);
  *(void *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*SessionView.numSessions.modify())()
{
  return nullsub_1;
}

uint64_t SessionView.sessions.getter()
{
  type metadata accessor for SessionView(0);

  return swift_bridgeObjectRetain();
}

uint64_t SessionView.sessions.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SessionView(0) + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SessionView.sessions.modify())()
{
  return nullsub_1;
}

uint64_t (*SessionData.date.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.sessionSignature.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SessionData(0);
  return sub_254DF2CB0(v1 + *(int *)(v3 + 20), a1, type metadata accessor for SessionSignature);
}

uint64_t SessionData.sessionSignature.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SessionData(0) + 20);

  return sub_254DF2330(a1, v3);
}

uint64_t (*SessionData.sessionSignature.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.clientSessionId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SessionData(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.clientSessionId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SessionData(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SessionData.clientSessionId.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.rawSessionId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SessionData(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.rawSessionId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SessionData(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SessionData.rawSessionId.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.requests.getter()
{
  type metadata accessor for SessionData(0);

  return swift_bridgeObjectRetain();
}

uint64_t SessionData.requests.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SessionData(0) + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SessionData.requests.modify())()
{
  return nullsub_1;
}

uint64_t (*RequestData.timestamp.modify())()
{
  return nullsub_1;
}

uint64_t RequestData.requestID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for RequestData(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RequestData.requestID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for RequestData(0) + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RequestData.requestID.modify())()
{
  return nullsub_1;
}

uint64_t RequestData.events.getter()
{
  type metadata accessor for RequestData(0);

  return swift_bridgeObjectRetain();
}

uint64_t RequestData.events.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for RequestData(0) + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RequestData.events.modify())()
{
  return nullsub_1;
}

uint64_t RequestData.eventWrapper.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for RequestData(0) + 28));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 RequestData.eventWrapper.setter(__n128 *a1)
{
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for RequestData(0) + 28));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *a1;
  *uint64_t v3 = *a1;
  return result;
}

uint64_t (*RequestData.eventWrapper.modify())()
{
  return nullsub_1;
}

uint64_t RequestData.requestSignature.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RequestData(0) + 32);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  __int16 v11 = *(_WORD *)(v3 + 60);
  LODWORD(v3) = *(_DWORD *)(v3 + 56);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(_WORD *)(a1 + 60) = v11;
  *(_DWORD *)(a1 + 56) = v3;

  return sub_254DF23B4(v4, v5, v6, v7, v8, v9);
}

__n128 RequestData.requestSignature.setter(long long *a1)
{
  long long v8 = a1[1];
  long long v9 = *a1;
  __n128 v7 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  int v3 = *((_DWORD *)a1 + 14);
  __int16 v4 = *((_WORD *)a1 + 30);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for RequestData(0) + 32);
  sub_25485E6E4(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40));
  *(_OWORD *)uint64_t v5 = v9;
  *(_OWORD *)(v5 + 16) = v8;
  __n128 result = v7;
  *(__n128 *)(v5 + 32) = v7;
  *(void *)(v5 + 48) = v2;
  *(_WORD *)(v5 + 60) = v4;
  *(_DWORD *)(v5 + 56) = v3;
  return result;
}

uint64_t (*RequestData.requestSignature.modify())()
{
  return nullsub_1;
}

void RequestSignature.client.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *RequestSignature.client.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*RequestSignature.client.modify())()
{
  return nullsub_1;
}

uint64_t RequestSignature.requestStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 24);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_254650A60(v2, v3, v4);
}

uint64_t RequestSignature.requestStatus.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_254650B00(*(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = v4;
  return result;
}

uint64_t (*RequestSignature.requestStatus.modify())()
{
  return nullsub_1;
}

uint64_t RequestSignature.requestStatusReason.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RequestSignature.requestStatusReason.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*RequestSignature.requestStatusReason.modify())()
{
  return nullsub_1;
}

uint64_t RequestSignature.executedToolIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RequestSignature.executedToolIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*RequestSignature.executedToolIDs.modify())()
{
  return nullsub_1;
}

unint64_t RequestSignature.originProgramStatementId.getter()
{
  return *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int8 *)(v0 + 60) << 32);
}

uint64_t RequestSignature.originProgramStatementId.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 56) = result;
  *(unsigned char *)(v1 + 60) = BYTE4(result) & 1;
  return result;
}

uint64_t (*RequestSignature.originProgramStatementId.modify())()
{
  return nullsub_1;
}

void RequestSignature.errorComponent.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 61);
}

unsigned char *RequestSignature.errorComponent.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 61) = *result;
  return result;
}

uint64_t (*RequestSignature.errorComponent.modify())()
{
  return nullsub_1;
}

unint64_t sub_254DEA30C(char a1)
{
  unint64_t result = 0x746E65696C63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x5374736575716572;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x6465747563657865;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0x6D6F43726F727265;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_254DEA404()
{
  return sub_254DEA30C(*v0);
}

uint64_t sub_254DEA40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254DFAB18(a1, a2);
  *a3 = result;
  return result;
}

void sub_254DEA434(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_254DEA440(uint64_t a1)
{
  unint64_t v2 = sub_254DF240C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEA47C(uint64_t a1)
{
  unint64_t v2 = sub_254DF240C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RequestSignature.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16468);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  __n128 v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v20 = *((void *)v1 + 2);
  uint64_t v21 = v9;
  int v25 = v1[24];
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v18 = *((void *)v1 + 5);
  uint64_t v19 = v10;
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v16 = *((unsigned int *)v1 + 14);
  uint64_t v17 = v11;
  LODWORD(v11) = v1[60];
  int v14 = v1[61];
  int v15 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF240C();
  sub_254E15F48();
  LOBYTE(v22) = v8;
  char v26 = 0;
  sub_254DF2460();
  sub_254E15DE8();
  if (!v2)
  {
    uint64_t v12 = v17;
    uint64_t v22 = v21;
    uint64_t v23 = v20;
    char v24 = v25;
    char v26 = 1;
    sub_254DF24B4();
    sub_254E15DE8();
    LOBYTE(v22) = 2;
    sub_254E15DB8();
    uint64_t v22 = v12;
    char v26 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C638);
    sub_254DF2604(&qword_269E16488);
    sub_254E15DE8();
    LOBYTE(v22) = 4;
    char v26 = v15;
    sub_254E15DA8();
    LOBYTE(v22) = v14;
    char v26 = 5;
    sub_254DF2508();
    sub_254E15DE8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RequestSignature.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16498);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF240C();
  sub_254E15F28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  char v33 = 0;
  sub_254DF255C();
  sub_254E15D58();
  int v9 = v29;
  char v33 = 1;
  sub_254DF25B0();
  sub_254E15D58();
  int v32 = v9;
  uint64_t v11 = v29;
  uint64_t v12 = v30;
  int v13 = v31;
  LOBYTE(v29) = 2;
  uint64_t v27 = v11;
  sub_254650A60(v11, v30, v31);
  uint64_t v25 = sub_254E15D28();
  int v26 = v13;
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C638);
  char v33 = 3;
  sub_254DF2604(&qword_269E164B0);
  swift_bridgeObjectRetain();
  sub_254E15D58();
  uint64_t v28 = v15;
  uint64_t v16 = v29;
  LOBYTE(v29) = 4;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_254E15D18();
  uint64_t v24 = v16;
  char v33 = 5;
  sub_254DF2668();
  sub_254E15D58();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v17 = v29;
  uint64_t v18 = v27;
  LOBYTE(v16) = v26;
  sub_254650A60(v27, v12, v26);
  sub_254650B00(v18, v12, v16);
  *(unsigned char *)a2 = v32;
  *(void *)(a2 + 8) = v18;
  *(void *)(a2 + 16) = v12;
  *(unsigned char *)(a2 + 24) = v16;
  uint64_t v19 = v24;
  uint64_t v20 = v28;
  *(void *)(a2 + 32) = v25;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v19;
  char v21 = BYTE4(v23);
  *(_DWORD *)(a2 + 56) = v23;
  *(unsigned char *)(a2 + 60) = v21 & 1;
  *(unsigned char *)(a2 + 61) = v17;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  sub_254650B00(v18, v12, v16);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_254DEACA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RequestSignature.init(from:)(a1, a2);
}

uint64_t sub_254DEACC0(void *a1)
{
  return RequestSignature.encode(to:)(a1);
}

uint64_t static PromptType.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_254E15E08();
  }
}

uint64_t sub_254DEAD0C()
{
  return 0;
}

uint64_t sub_254DEAD18(uint64_t a1)
{
  unint64_t v2 = sub_254DF2764();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEAD54(uint64_t a1)
{
  unint64_t v2 = sub_254DF2764();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEAD90(uint64_t a1)
{
  unint64_t v2 = sub_254DF2860();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEADCC(uint64_t a1)
{
  unint64_t v2 = sub_254DF2860();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEAE08()
{
  uint64_t result = 0x6574656C706D6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64656C696166;
      break;
    case 2:
      uint64_t result = 0x64656C65636E6163;
      break;
    case 3:
      uint64_t result = 0x74706D6F7270;
      break;
    case 4:
      uint64_t result = 0x656E6F646E616261;
      break;
    case 5:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_254DEAEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254DFADF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254DEAEF0(uint64_t a1)
{
  unint64_t v2 = sub_254DF26BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEAF2C(uint64_t a1)
{
  unint64_t v2 = sub_254DF26BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEAF68(uint64_t a1)
{
  unint64_t v2 = sub_254DF2908();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEAFA4(uint64_t a1)
{
  unint64_t v2 = sub_254DF2908();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEAFE8()
{
  return 12383;
}

uint64_t sub_254DEAFF8(uint64_t a1)
{
  unint64_t v2 = sub_254DF28B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEB034(uint64_t a1)
{
  unint64_t v2 = sub_254DF28B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEB070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_254E15E08();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_254DEB0F0(uint64_t a1)
{
  unint64_t v2 = sub_254DF27B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEB12C(uint64_t a1)
{
  unint64_t v2 = sub_254DF27B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEB168(uint64_t a1)
{
  unint64_t v2 = sub_254DF2710();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEB1A4(uint64_t a1)
{
  unint64_t v2 = sub_254DF2710();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IERequestStatus.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E164C0);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x270FA5388](v3);
  BOOL v36 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E164C8);
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v5);
  char v33 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E164D0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v42 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E164D8);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E164E0);
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  MEMORY[0x270FA5388](v11);
  int v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E164E8);
  uint64_t v28 = *(void *)(v14 - 8);
  uint64_t v29 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E164F0);
  uint64_t v48 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *v1;
  uint64_t v39 = v1[1];
  int v20 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF26BC();
  sub_254E15F48();
  if (!v20)
  {
    LOBYTE(v46) = 1;
    sub_254DF28B4();
    uint64_t v21 = v45;
    sub_254E15D78();
    LOBYTE(v46) = v19;
    sub_254DF2508();
    uint64_t v22 = v41;
    sub_254E15DE8();
    uint64_t v23 = v40;
    goto LABEL_5;
  }
  if (v20 == 1)
  {
    LOBYTE(v46) = 3;
    sub_254DF27B8();
    int v13 = v42;
    uint64_t v21 = v45;
    sub_254E15D78();
    uint64_t v46 = v19;
    uint64_t v47 = v39;
    sub_254DF280C();
    uint64_t v22 = v44;
    sub_254E15DE8();
    uint64_t v23 = v43;
LABEL_5:
    (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v18, v21);
  }
  switch(v19)
  {
    case 1:
      LOBYTE(v46) = 2;
      sub_254DF2860();
      uint64_t v24 = v30;
      uint64_t v21 = v45;
      sub_254E15D78();
      uint64_t v26 = v31;
      uint64_t v25 = v32;
      goto LABEL_11;
    case 2:
      LOBYTE(v46) = 4;
      sub_254DF2764();
      uint64_t v24 = v33;
      uint64_t v21 = v45;
      sub_254E15D78();
      uint64_t v26 = v34;
      uint64_t v25 = v35;
      goto LABEL_11;
    case 3:
      LOBYTE(v46) = 5;
      sub_254DF2710();
      uint64_t v24 = v36;
      uint64_t v21 = v45;
      sub_254E15D78();
      uint64_t v26 = v37;
      uint64_t v25 = v38;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v24, v25);
      break;
    default:
      LOBYTE(v46) = 0;
      sub_254DF2908();
      uint64_t v21 = v45;
      sub_254E15D78();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v29);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v18, v21);
}

uint64_t IERequestStatus.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  int v53 = a2;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16538);
  uint64_t v42 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v56 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16540);
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v55 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16548);
  uint64_t v50 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v54 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16550);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  BOOL v52 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16558);
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16560);
  uint64_t v41 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16568);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v57 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_254DF26BC();
  uint64_t v17 = v60;
  sub_254E15F28();
  if (v17) {
    goto LABEL_12;
  }
  uint64_t v39 = v9;
  uint64_t v40 = v11;
  uint64_t v18 = v8;
  uint64_t v19 = v54;
  int v20 = v55;
  uint64_t v21 = v56;
  uint64_t v60 = v13;
  uint64_t v22 = sub_254E15D68();
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v26 = sub_254E15BB8();
    swift_allocError();
    uint64_t v27 = v12;
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E16570);
    *uint64_t v29 = &type metadata for IERequestStatus;
    sub_254E15CE8();
    sub_254E15BA8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v27);
LABEL_12:
    uint64_t v36 = (uint64_t)v57;
    return __swift_destroy_boxed_opaque_existential_0(v36);
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      LOBYTE(v58) = 1;
      sub_254DF28B4();
      uint64_t v30 = v18;
      sub_254E15CD8();
      sub_254DF2668();
      uint64_t v31 = v45;
      sub_254E15D58();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v12);
      uint64_t v25 = 0;
      char v32 = 0;
      uint64_t v24 = v58;
      break;
    case 2:
      LOBYTE(v58) = 2;
      sub_254DF2860();
      char v33 = v52;
      sub_254E15CD8();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v12);
      uint64_t v25 = 0;
      char v32 = 2;
      uint64_t v24 = 1;
      break;
    case 3:
      LOBYTE(v58) = 3;
      sub_254DF27B8();
      sub_254E15CD8();
      sub_254DF295C();
      uint64_t v34 = v48;
      sub_254E15D58();
      uint64_t v35 = v60;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v19, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v12);
      uint64_t v24 = v58;
      uint64_t v25 = v59;
      char v32 = 1;
      break;
    case 4:
      LOBYTE(v58) = 4;
      sub_254DF2764();
      sub_254E15CD8();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v12);
      uint64_t v25 = 0;
      uint64_t v24 = 2;
      goto LABEL_10;
    case 5:
      LOBYTE(v58) = 5;
      sub_254DF2710();
      sub_254E15CD8();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v12);
      uint64_t v25 = 0;
      char v32 = 2;
      uint64_t v24 = 3;
      break;
    default:
      LOBYTE(v58) = 0;
      sub_254DF2908();
      uint64_t v23 = v40;
      sub_254E15CD8();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v12);
      uint64_t v24 = 0;
      uint64_t v25 = 0;
LABEL_10:
      char v32 = 2;
      break;
  }
  uint64_t v36 = (uint64_t)v57;
  uint64_t v38 = v53;
  *int v53 = v24;
  v38[1] = v25;
  *((unsigned char *)v38 + 16) = v32;
  return __swift_destroy_boxed_opaque_existential_0(v36);
}

uint64_t sub_254DEC1B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IERequestStatus.init(from:)(a1, a2);
}

uint64_t sub_254DEC1CC(void *a1)
{
  return IERequestStatus.encode(to:)(a1);
}

uint64_t sub_254DEC1E8()
{
  return 1701869940;
}

uint64_t sub_254DEC1F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_254E15E08();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_254DEC280(uint64_t a1)
{
  unint64_t v2 = sub_254DF29B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEC2BC(uint64_t a1)
{
  unint64_t v2 = sub_254DF29B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PromptType.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16580);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF29B0();
  sub_254E15F48();
  sub_254E15DB8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PromptType.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16590);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF29B0();
  sub_254E15F28();
  if (!v2)
  {
    uint64_t v9 = sub_254E15D28();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_254DEC5A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PromptType.init(from:)(a1, a2);
}

uint64_t sub_254DEC5B8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16580);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF29B0();
  sub_254E15F48();
  sub_254E15DB8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_254DEC6F0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_254E15E08();
  }
}

unint64_t sub_254DEC720(char a1)
{
  unint64_t result = 0x746E65696C63;
  switch(a1)
  {
    case 1:
    case 5:
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6552737574617473;
      break;
    case 3:
      unint64_t result = 0x7475626972747461;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0x747461506E617073;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_254DEC84C()
{
  return sub_254DEC720(*v0);
}

uint64_t sub_254DEC854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254DFB080(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254DEC87C(uint64_t a1)
{
  unint64_t v2 = sub_254DF2A04();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEC8B8(uint64_t a1)
{
  unint64_t v2 = sub_254DF2A04();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SessionSignature.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16598);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF2A04();
  sub_254E15F48();
  LOBYTE(v12) = *v3;
  char v13 = 0;
  sub_254DF2460();
  sub_254E15DE8();
  if (!v2)
  {
    LOBYTE(v12) = v3[1];
    char v13 = 1;
    sub_25483F2D0();
    sub_254E15DE8();
    LOBYTE(v12) = 2;
    sub_254E15DB8();
    uint64_t v9 = (int *)type metadata accessor for SessionSignature(0);
    LOBYTE(v12) = 3;
    type metadata accessor for AttributionTraits(0);
    sub_254DF2AAC(&qword_269E165A8, (void (*)(uint64_t))type metadata accessor for AttributionTraits);
    sub_254E15D98();
    uint64_t v12 = *(void *)&v3[v9[8]];
    char v13 = 4;
    sub_254DF2A58();
    sub_254E15DE8();
    uint64_t v12 = *(void *)&v3[v9[9]];
    char v13 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C638);
    sub_254DF2604(&qword_269E16488);
    sub_254E15DE8();
    uint64_t v12 = *(void *)&v3[v9[10]];
    char v13 = 6;
    sub_254E15DE8();
    uint64_t v12 = *(void *)&v3[v9[11]];
    char v13 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E165B8);
    sub_254DF2B68(&qword_269E165C0, &qword_269E165C8);
    sub_254E15DE8();
    LOBYTE(v12) = 8;
    sub_254E15DB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SessionSignature.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E165D0);
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SessionSignature(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  char v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)v11;
  uint64_t v15 = *(int *)(v11 + 28);
  uint64_t v35 = v13;
  uint64_t v16 = (uint64_t)&v13[v15];
  uint64_t v17 = type metadata accessor for AttributionTraits(0);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v36 = v16;
  v18(v16, 1, 1, v17);
  uint64_t v19 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_254DF2A04();
  char v33 = v9;
  sub_254E15F28();
  if (v2)
  {
    uint64_t v21 = v36;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    return sub_2545C9374(v21, &qword_269E10D68);
  }
  else
  {
    uint64_t v20 = (uint64_t)v6;
    char v38 = 0;
    sub_254DF255C();
    sub_254E15D58();
    uint64_t v23 = (uint64_t)v35;
    unsigned char *v35 = v37;
    char v38 = 1;
    sub_25483F91C();
    sub_254E15D58();
    *(unsigned char *)(v23 + 1) = v37;
    LOBYTE(v37) = 2;
    *(void *)(v23 + 8) = sub_254E15D28();
    *(void *)(v23 + 16) = v24;
    LOBYTE(v37) = 3;
    sub_254DF2AAC(&qword_269E165D8, (void (*)(uint64_t))type metadata accessor for AttributionTraits);
    sub_254E15D08();
    sub_25466C38C(v20, v36, &qword_269E10D68);
    char v38 = 4;
    sub_254DF2B14();
    sub_254E15D58();
    *(void *)(v23 + v14[8]) = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C638);
    char v38 = 5;
    sub_254DF2604(&qword_269E164B0);
    sub_254E15D58();
    *(void *)(v23 + v14[9]) = v37;
    char v38 = 6;
    sub_254E15D58();
    *(void *)(v23 + v14[10]) = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E165B8);
    char v38 = 7;
    sub_254DF2B68(&qword_269E165E8, &qword_269E165F0);
    sub_254E15D58();
    uint64_t v25 = (uint64_t)v34;
    *(void *)(v23 + v14[11]) = v37;
    LOBYTE(v37) = 8;
    uint64_t v26 = sub_254E15D28();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v33, v32);
    uint64_t v29 = (uint64_t *)(v23 + v14[12]);
    *uint64_t v29 = v26;
    v29[1] = v28;
    sub_254DF2CB0(v23, v31, type metadata accessor for SessionSignature);
    __swift_destroy_boxed_opaque_existential_0(v25);
    return sub_254DF2C50(v23, type metadata accessor for SessionSignature);
  }
}

uint64_t sub_254DED440@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SessionSignature.init(from:)(a1, a2);
}

uint64_t sub_254DED458(void *a1)
{
  return SessionSignature.encode(to:)(a1);
}

uint64_t SessionSignature.description.getter()
{
  if (qword_269E0AFE0 != -1) {
    swift_once();
  }
  type metadata accessor for SessionSignature(0);
  sub_254DF2AAC(&qword_269E165F8, (void (*)(uint64_t))type metadata accessor for SessionSignature);
  uint64_t v0 = sub_254E14BC8();
  unint64_t v2 = v1;
  uint64_t v3 = sub_254E15848();
  MEMORY[0x270FA5388](v3 - 8);
  sub_254E15838();
  uint64_t v4 = sub_254E15828();
  if (v5)
  {
    uint64_t v6 = v4;
    sub_2545DDDFC(v0, v2);
  }
  else
  {
    sub_2545DDDFC(v0, v2);
    return 0;
  }
  return v6;
}

unint64_t sub_254DED5E8()
{
  unint64_t result = 0x7475626972747461;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x75716552746F6F72;
      break;
    case 3:
      unint64_t result = 0x526572756C696166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_254DED6A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254DFB418(a1, a2);
  *a3 = result;
  return result;
}

void sub_254DED6C8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_254DED6D4(uint64_t a1)
{
  unint64_t v2 = sub_254DF2BFC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DED710(uint64_t a1)
{
  unint64_t v2 = sub_254DF2BFC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AttributionTraits.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16600);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF2BFC();
  sub_254E15F48();
  v8[15] = 0;
  sub_254E15D88();
  if (!v1)
  {
    v8[14] = 1;
    sub_254E15D88();
    type metadata accessor for AttributionTraits(0);
    v8[13] = 2;
    sub_254E14E08();
    sub_254DF2D6C(&qword_269E0C5B8, MEMORY[0x270FA9448]);
    sub_254E15D98();
    v8[12] = 3;
    sub_254E15D88();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AttributionTraits.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16610);
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AttributionTraits(0);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  uint64_t v9 = (uint64_t)&v8[*(int *)(v6 + 32)];
  uint64_t v10 = sub_254E14E08();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = &v8[*(int *)(v6 + 36)];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF2BFC();
  uint64_t v28 = v4;
  uint64_t v12 = v30;
  sub_254E15F28();
  if (!v12)
  {
    uint64_t v25 = v11;
    uint64_t v30 = v9;
    uint64_t v14 = v27;
    char v13 = v28;
    char v34 = 0;
    *(void *)uint64_t v8 = sub_254E15CF8();
    *((void *)v8 + 1) = v15;
    char v33 = 1;
    *((void *)v8 + 2) = sub_254E15CF8();
    *((void *)v8 + 3) = v17;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    MEMORY[0x270FA5388](v18 - 8);
    uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    char v32 = 2;
    sub_254DF2D6C(&qword_269E0C5C8, MEMORY[0x270FA9448]);
    sub_254E15D08();
    sub_25466C38C((uint64_t)v20, v30, &qword_26B26F498);
    char v31 = 3;
    uint64_t v21 = sub_254E15CF8();
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v13, v29);
    uint64_t v24 = (uint64_t *)v25;
    swift_bridgeObjectRelease();
    *uint64_t v24 = v21;
    v24[1] = v23;
    sub_254DF2CB0((uint64_t)v8, v26, type metadata accessor for AttributionTraits);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_254DF2C50((uint64_t)v8, type metadata accessor for AttributionTraits);
}

uint64_t sub_254DEDD00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AttributionTraits.init(from:)(a1, a2);
}

uint64_t sub_254DEDD18(void *a1)
{
  return AttributionTraits.encode(to:)(a1);
}

uint64_t sub_254DEDD30()
{
  if (*v0) {
    return 0x6D617453656D6974;
  }
  else {
    return 0x7069636974726170;
  }
}

uint64_t sub_254DEDD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254DFB638(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254DEDDA0(uint64_t a1)
{
  unint64_t v2 = sub_254DF2D18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEDDDC(uint64_t a1)
{
  unint64_t v2 = sub_254DF2D18();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ParticipantInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16618);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF2D18();
  sub_254E15F48();
  v8[15] = 0;
  sub_254E15D88();
  if (!v1)
  {
    type metadata accessor for ParticipantInfo(0);
    v8[14] = 1;
    sub_254E14D98();
    sub_254DF2D6C(&qword_269E10D90, MEMORY[0x270FA9238]);
    sub_254E15DE8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ParticipantInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16628);
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ParticipantInfo(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v9 = 0;
  v9[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF2D18();
  sub_254E15F28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = v7;
    uint64_t v10 = v21;
    char v23 = 0;
    *uint64_t v9 = sub_254E15CF8();
    v9[1] = v11;
    uint64_t v12 = sub_254E14D98();
    uint64_t v18 = &v16;
    uint64_t v17 = *(void *)(v12 - 8);
    MEMORY[0x270FA5388](v12);
    uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    char v22 = 1;
    sub_254DF2D6C(&qword_269E10DA8, MEMORY[0x270FA9238]);
    sub_254E15D58();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v4);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)v9 + *(int *)(v19 + 20), v14, v12);
    sub_254DF2CB0((uint64_t)v9, v20, type metadata accessor for ParticipantInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_254DF2C50((uint64_t)v9, type metadata accessor for ParticipantInfo);
  }
}

uint64_t sub_254DEE2D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ParticipantInfo.init(from:)(a1, a2);
}

uint64_t sub_254DEE2E8(void *a1)
{
  return ParticipantInfo.encode(to:)(a1);
}

uint64_t sub_254DEE300()
{
  return 0x6974616974696E69;
}

uint64_t sub_254DEE324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6974616974696E69 && a2 == 0xEF736E617053676ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_254E15E08();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_254DEE3E0(uint64_t a1)
{
  unint64_t v2 = sub_254DF2DB4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEE41C(uint64_t a1)
{
  unint64_t v2 = sub_254DF2DB4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SpanRespresentation.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16630);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF2DB4();
  sub_254E15F48();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269E16640);
  sub_254DF2E08();
  sub_254E15DE8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SpanRespresentation.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16650);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF2DB4();
  sub_254E15F28();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E16640);
    sub_254DF2EB4();
    sub_254E15D58();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_254DEE720@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SpanRespresentation.init(from:)(a1, a2);
}

uint64_t sub_254DEE738(void *a1)
{
  return SpanRespresentation.encode(to:)(a1);
}

uint64_t sub_254DEE750(uint64_t a1)
{
  unint64_t v2 = sub_254DF3008();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEE78C(uint64_t a1)
{
  unint64_t v2 = sub_254DF3008();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEE7C8()
{
  uint64_t result = 0x6574656C706D6F63;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x64656C696166;
      break;
    case 2:
      uint64_t result = 0x64656C65636E6163;
      break;
    case 3:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_254DEE858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254DFB750(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254DEE880(uint64_t a1)
{
  unint64_t v2 = sub_254DF2F60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEE8BC(uint64_t a1)
{
  unint64_t v2 = sub_254DF2F60();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEE8F8(uint64_t a1)
{
  unint64_t v2 = sub_254DF30B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEE934(uint64_t a1)
{
  unint64_t v2 = sub_254DF30B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEE970(uint64_t a1)
{
  unint64_t v2 = sub_254DF305C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEE9AC(uint64_t a1)
{
  unint64_t v2 = sub_254DF305C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEE9E8(uint64_t a1)
{
  unint64_t v2 = sub_254DF2FB4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEEA24(uint64_t a1)
{
  unint64_t v2 = sub_254DF2FB4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TaskCompletionStatus.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16660);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16668);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v26 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16670);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  char v23 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16678);
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16680);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF2F60();
  sub_254E15F48();
  switch(v16)
  {
    case 1:
      char v33 = 1;
      sub_254DF305C();
      uint64_t v17 = v23;
      sub_254E15D78();
      uint64_t v19 = v24;
      uint64_t v18 = v25;
      goto LABEL_6;
    case 2:
      char v34 = 2;
      sub_254DF3008();
      uint64_t v17 = v26;
      sub_254E15D78();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_6;
    case 3:
      char v35 = 3;
      sub_254DF2FB4();
      uint64_t v17 = v29;
      sub_254E15D78();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_6:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_254DF30B0();
      sub_254E15D78();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t TaskCompletionStatus.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E166B0);
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E166B8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E166C0);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E166C8);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E166D0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_254DF2F60();
  uint64_t v19 = v52;
  sub_254E15F28();
  if (v19) {
    goto LABEL_7;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v52 = 0;
  uint64_t v21 = v48;
  uint64_t v20 = v49;
  uint64_t v22 = v50;
  char v23 = v17;
  uint64_t v24 = sub_254E15D68();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v27 = sub_254E15BB8();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E16570);
    *uint64_t v29 = &type metadata for TaskCompletionStatus;
    sub_254E15CE8();
    sub_254E15BA8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_7:
    uint64_t v30 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_0(v30);
  }
  char v25 = *(unsigned char *)(v24 + 32);
  switch(v25)
  {
    case 1:
      char v54 = 1;
      sub_254DF305C();
      char v32 = v40;
      uint64_t v33 = v52;
      sub_254E15CD8();
      if (v33) {
        goto LABEL_12;
      }
      uint64_t v35 = v42;
      uint64_t v34 = v43;
      goto LABEL_16;
    case 2:
      char v55 = 2;
      sub_254DF3008();
      char v32 = v46;
      uint64_t v36 = v52;
      sub_254E15CD8();
      if (v36) {
        goto LABEL_12;
      }
      uint64_t v34 = v44;
      uint64_t v35 = v45;
LABEL_16:
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
      goto LABEL_17;
    case 3:
      char v56 = 3;
      sub_254DF2FB4();
      uint64_t v37 = v52;
      sub_254E15CD8();
      if (v37)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        uint64_t v30 = (uint64_t)v51;
        return __swift_destroy_boxed_opaque_existential_0(v30);
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      char v38 = v47;
      goto LABEL_19;
    default:
      char v53 = 0;
      sub_254DF30B0();
      uint64_t v26 = v52;
      sub_254E15CD8();
      if (v26)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v39);
LABEL_17:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      uint64_t v30 = (uint64_t)v51;
      char v38 = v47;
LABEL_19:
      *char v38 = v25;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v30);
}

uint64_t sub_254DEF4D8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TaskCompletionStatus.init(from:)(a1, a2);
}

uint64_t sub_254DEF4F0(void *a1)
{
  return TaskCompletionStatus.encode(to:)(a1);
}

BOOL static UserInteractionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t UserInteractionType.hash(into:)()
{
  return sub_254E15EE8();
}

uint64_t sub_254DEF548()
{
  uint64_t v1 = 0x6769626D61736964;
  if (*v0 != 1) {
    uint64_t v1 = 0x616D7269666E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74706D6F7270;
  }
}

uint64_t sub_254DEF5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254DFB910(a1, a2);
  *a3 = result;
  return result;
}

void sub_254DEF5DC(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_254DEF5E8(uint64_t a1)
{
  unint64_t v2 = sub_254DF3104();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEF624(uint64_t a1)
{
  unint64_t v2 = sub_254DF3104();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEF660(uint64_t a1)
{
  unint64_t v2 = sub_254DF3158();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEF69C(uint64_t a1)
{
  unint64_t v2 = sub_254DF3158();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEF6D8(uint64_t a1)
{
  unint64_t v2 = sub_254DF31AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEF714(uint64_t a1)
{
  unint64_t v2 = sub_254DF31AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DEF750(uint64_t a1)
{
  unint64_t v2 = sub_254DF3200();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DEF78C(uint64_t a1)
{
  unint64_t v2 = sub_254DF3200();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UserInteractionType.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E166D8);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  char v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E166E0);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E166E8);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E166F0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF3104();
  sub_254E15F48();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_254DF31AC();
      sub_254E15D78();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_254DF3158();
      uint64_t v17 = v23;
      sub_254E15D78();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_254DF3200();
    sub_254E15D78();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t UserInteractionType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16718);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16720);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16728);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16730);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF3104();
  uint64_t v12 = (uint64_t)v39;
  sub_254E15F28();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_254E15D68();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_254E15BB8();
    swift_allocError();
    char v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E16570);
    void *v23 = &type metadata for UserInteractionType;
    sub_254E15CE8();
    sub_254E15BA8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_254DF31AC();
      uint64_t v18 = v30;
      sub_254E15CD8();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_254DF3158();
      uint64_t v25 = v30;
      sub_254E15CD8();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_254DF3200();
    uint64_t v24 = v30;
    sub_254E15CD8();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  unsigned char *v20 = v17;
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
}

uint64_t sub_254DF00E8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return UserInteractionType.init(from:)(a1, a2);
}

uint64_t sub_254DF0100(void *a1)
{
  return UserInteractionType.encode(to:)(a1);
}

BOOL static SageClient.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SageClient.hash(into:)()
{
  return sub_254E15EE8();
}

uint64_t sub_254DF015C()
{
  if (*v0) {
    return 0x6E776F6E6B6E75;
  }
  else {
    return 0x30303169726973;
  }
}

uint64_t sub_254DF0190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254DFBA9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254DF01B8(uint64_t a1)
{
  unint64_t v2 = sub_254DF3254();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DF01F4(uint64_t a1)
{
  unint64_t v2 = sub_254DF3254();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DF0230@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_254DF0260(uint64_t a1)
{
  unint64_t v2 = sub_254DF32FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DF029C(uint64_t a1)
{
  unint64_t v2 = sub_254DF32FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DF02D8(uint64_t a1)
{
  unint64_t v2 = sub_254DF32A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DF0314(uint64_t a1)
{
  unint64_t v2 = sub_254DF32A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SageClient.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16738);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16740);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16748);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF3254();
  sub_254E15F48();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_254DF32A8();
    uint64_t v14 = v18;
    sub_254E15D78();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_254DF32FC();
    sub_254E15D78();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t SageClient.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16768);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16770);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16778);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF3254();
  uint64_t v11 = v32;
  sub_254E15F28();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_254E15D68();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_254E15BB8();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E16570);
    *char v22 = &type metadata for SageClient;
    sub_254E15CE8();
    sub_254E15BA8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_254DF32A8();
    uint64_t v18 = v14;
    sub_254E15CD8();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_254DF32FC();
    sub_254E15CD8();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_254DF0A50@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SageClient.init(from:)(a1, a2);
}

uint64_t sub_254DF0A68(void *a1)
{
  return SageClient.encode(to:)(a1);
}

uint64_t sub_254DF0A80()
{
  if (*v0) {
    return 0x6E776F6E6B6E75;
  }
  else {
    return 1769105779;
  }
}

uint64_t sub_254DF0AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254DFBB90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254DF0ADC(uint64_t a1)
{
  unint64_t v2 = sub_254DF3350();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DF0B18(uint64_t a1)
{
  unint64_t v2 = sub_254DF3350();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DF0B54(uint64_t a1)
{
  unint64_t v2 = sub_254DF33F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DF0B90(uint64_t a1)
{
  unint64_t v2 = sub_254DF33F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_254DF0BCC(uint64_t a1)
{
  unint64_t v2 = sub_254DF33A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254DF0C08(uint64_t a1)
{
  unint64_t v2 = sub_254DF33A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IEClient.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16780);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16788);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16790);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF3350();
  sub_254E15F48();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_254DF33A4();
    uint64_t v14 = v18;
    sub_254E15D78();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_254DF33F8();
    sub_254E15D78();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t IEClient.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E167B0);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E167B8);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E167C0);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254DF3350();
  uint64_t v11 = v32;
  sub_254E15F28();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_254E15D68();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_254E15BB8();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E16570);
    *char v22 = &type metadata for IEClient;
    sub_254E15CE8();
    sub_254E15BA8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_254DF33A4();
    uint64_t v18 = v14;
    sub_254E15CD8();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_254DF33F8();
    sub_254E15CD8();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_254DF1344@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return IEClient.init(from:)(a1, a2);
}

uint64_t sub_254DF135C(void *a1)
{
  return IEClient.encode(to:)(a1);
}

LighthouseDataProcessor::ErrorComponent_optional __swiftcall ErrorComponent.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_254E15CC8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 9;
  if (v3 < 9) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_254DF13D0()
{
  return sub_254E15F08();
}

uint64_t sub_254DF1418()
{
  return sub_2547083DC();
}

uint64_t sub_254DF1420()
{
  return sub_254E15F08();
}

LighthouseDataProcessor::ErrorComponent_optional sub_254DF1464(Swift::String *a1)
{
  return ErrorComponent.init(rawValue:)(*a1);
}

unint64_t sub_254DF1470@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ErrorComponent.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_254DF1498()
{
  return sub_254E158A8();
}

uint64_t sub_254DF14F8()
{
  return sub_254E15898();
}

uint64_t sub_254DF1548(unsigned __int8 *a1, char *a2)
{
  return sub_2547077B0(*a1, *a2);
}

uint64_t sub_254DF1554@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_254E15058();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoParticipantID(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254E15F18();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    sub_254DF344C();
    sub_254E15E18();
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_254E15048();
    sub_254DF2AAC(&qword_26B26F988, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
    sub_254E15248();
    sub_254DFBC74((uint64_t)v8, a2, type metadata accessor for TranscriptProtoParticipantID);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_254DF175C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_254E15058();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoActionOutcome(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254E15F18();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    sub_254DF344C();
    sub_254E15E18();
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_254E15048();
    sub_254DF2AAC(&qword_269E0F0E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionOutcome);
    sub_254E15248();
    sub_254DFBC74((uint64_t)v8, a2, type metadata accessor for TranscriptProtoActionOutcome);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_254DF1964@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_254E15058();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = type metadata accessor for TranscriptProtoEvent(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254E15F18();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    sub_254DF344C();
    sub_254E15E18();
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_254E15048();
    sub_254DF2AAC((unint64_t *)&qword_26B26F660, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
    sub_254E15248();
    sub_254DFBC74((uint64_t)v8, a2, type metadata accessor for TranscriptProtoEvent);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t CodableMessage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v21[6] = a3;
  uint64_t v17 = a4;
  uint64_t v7 = sub_254E15058();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254E15F18();
  if (!v4)
  {
    uint64_t v15 = v9;
    uint64_t v16 = a2;
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    sub_254DF344C();
    sub_254E15E18();
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    sub_254E15048();
    uint64_t v12 = v16;
    sub_254E15248();
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v11, v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_254DF1D74(void *a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  a2(0);
  sub_254DF2AAC(a3, a4);
  uint64_t result = sub_254E15258();
  if (!v4)
  {
    uint64_t v10 = result;
    unint64_t v11 = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_254E15F38();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
    sub_254DF3494();
    sub_254E15E38();
    sub_2545DDDFC(v10, v11);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  }
  return result;
}

uint64_t CodableMessage.encode(to:)(void *a1)
{
  uint64_t result = sub_254E15258();
  if (!v1)
  {
    uint64_t v5 = result;
    unint64_t v6 = v4;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_254E15F38();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_254DF3494();
    sub_254E15E38();
    sub_2545DDDFC(v5, v6);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
  return result;
}

uint64_t sub_254DF1F5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_254DF1554(a1, a2);
}

uint64_t sub_254DF1F74(void *a1)
{
  return sub_254DF1D74(a1, (void (*)(void))type metadata accessor for TranscriptProtoParticipantID, &qword_26B26F988, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
}

uint64_t sub_254DF1FD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_254DF175C(a1, a2);
}

uint64_t sub_254DF1FE8(void *a1)
{
  return sub_254DF1D74(a1, (void (*)(void))type metadata accessor for TranscriptProtoActionOutcome, &qword_269E0F0E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionOutcome);
}

uint64_t sub_254DF2044@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_254DF1964(a1, a2);
}

uint64_t sub_254DF205C(void *a1)
{
  return sub_254DF1D74(a1, (void (*)(void))type metadata accessor for TranscriptProtoEvent, (unint64_t *)&qword_26B26F660, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
}

uint64_t _s23LighthouseDataProcessor15IERequestStatusO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 != 1)
    {
      switch(v3)
      {
        case 1:
          if (v7 != 2 || v6 != 1 || v5 != 0) {
            goto LABEL_47;
          }
          sub_254650B00(*(void *)a1, v2, 2);
          char v9 = 1;
          sub_254650B00(1, 0, 2);
          return v9 & 1;
        case 2:
          if (v7 != 2 || v6 != 2 || v5 != 0) {
            goto LABEL_47;
          }
          sub_254650B00(*(void *)a1, v2, 2);
          uint64_t v13 = 2;
          goto LABEL_39;
        case 3:
          if (v7 != 2 || v6 != 3 || v5 != 0) {
            goto LABEL_47;
          }
          sub_254650B00(*(void *)a1, v2, 2);
          uint64_t v13 = 3;
          goto LABEL_39;
        default:
          if (v7 != 2 || (v5 | v6) != 0) {
            goto LABEL_47;
          }
          sub_254650B00(*(void *)a1, v2, 2);
          uint64_t v13 = 0;
LABEL_39:
          sub_254650B00(v13, 0, 2);
          char v9 = 1;
          break;
      }
      return v9 & 1;
    }
    if (v7 == 1)
    {
      if (v3 == v6 && v2 == v5) {
        char v9 = 1;
      }
      else {
        char v9 = sub_254E15E08();
      }
      sub_254650A60(v6, v5, 1);
      sub_254650A60(v3, v2, 1);
      sub_254650B00(v3, v2, 1);
      sub_254650B00(v6, v5, 1);
      return v9 & 1;
    }
    swift_bridgeObjectRetain();
  }
  else if (!*(unsigned char *)(a2 + 16))
  {
    int v10 = sub_2547077B0(*(void *)a1, *(void *)a2);
    sub_254650B00(v3, v2, 0);
    sub_254650B00(v6, v5, 0);
    return v10 & 1;
  }
LABEL_47:
  sub_254650A60(v6, v5, v7);
  sub_254650B00(v3, v2, v4);
  sub_254650B00(v6, v5, v7);
  char v9 = 0;
  return v9 & 1;
}

uint64_t type metadata accessor for SessionView(uint64_t a1)
{
  return sub_254661040(a1, (uint64_t *)&unk_269E16830);
}

uint64_t type metadata accessor for SessionData(uint64_t a1)
{
  return sub_254661040(a1, (uint64_t *)&unk_269E16840);
}

uint64_t sub_254DF2330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionSignature(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for RequestData(uint64_t a1)
{
  return sub_254661040(a1, (uint64_t *)&unk_269E16850);
}

uint64_t sub_254DF23B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    sub_254650A60(a2, a3, a4);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_254DF240C()
{
  unint64_t result = qword_269E16470;
  if (!qword_269E16470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16470);
  }
  return result;
}

unint64_t sub_254DF2460()
{
  unint64_t result = qword_269E16478;
  if (!qword_269E16478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16478);
  }
  return result;
}

unint64_t sub_254DF24B4()
{
  unint64_t result = qword_269E16480;
  if (!qword_269E16480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16480);
  }
  return result;
}

unint64_t sub_254DF2508()
{
  unint64_t result = qword_269E16490;
  if (!qword_269E16490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16490);
  }
  return result;
}

unint64_t sub_254DF255C()
{
  unint64_t result = qword_269E164A0;
  if (!qword_269E164A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E164A0);
  }
  return result;
}

unint64_t sub_254DF25B0()
{
  unint64_t result = qword_269E164A8;
  if (!qword_269E164A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E164A8);
  }
  return result;
}

uint64_t sub_254DF2604(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269E0C638);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_254DF2668()
{
  unint64_t result = qword_269E164B8;
  if (!qword_269E164B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E164B8);
  }
  return result;
}

unint64_t sub_254DF26BC()
{
  unint64_t result = qword_269E164F8;
  if (!qword_269E164F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E164F8);
  }
  return result;
}

unint64_t sub_254DF2710()
{
  unint64_t result = qword_269E16500;
  if (!qword_269E16500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16500);
  }
  return result;
}

unint64_t sub_254DF2764()
{
  unint64_t result = qword_269E16508;
  if (!qword_269E16508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16508);
  }
  return result;
}

unint64_t sub_254DF27B8()
{
  unint64_t result = qword_269E16510;
  if (!qword_269E16510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16510);
  }
  return result;
}

unint64_t sub_254DF280C()
{
  unint64_t result = qword_269E16518;
  if (!qword_269E16518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16518);
  }
  return result;
}

unint64_t sub_254DF2860()
{
  unint64_t result = qword_269E16520;
  if (!qword_269E16520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16520);
  }
  return result;
}

unint64_t sub_254DF28B4()
{
  unint64_t result = qword_269E16528;
  if (!qword_269E16528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16528);
  }
  return result;
}

unint64_t sub_254DF2908()
{
  unint64_t result = qword_269E16530;
  if (!qword_269E16530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16530);
  }
  return result;
}

unint64_t sub_254DF295C()
{
  unint64_t result = qword_269E16578;
  if (!qword_269E16578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16578);
  }
  return result;
}

unint64_t sub_254DF29B0()
{
  unint64_t result = qword_269E16588;
  if (!qword_269E16588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16588);
  }
  return result;
}

unint64_t sub_254DF2A04()
{
  unint64_t result = qword_269E165A0;
  if (!qword_269E165A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E165A0);
  }
  return result;
}

unint64_t sub_254DF2A58()
{
  unint64_t result = qword_269E165B0;
  if (!qword_269E165B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E165B0);
  }
  return result;
}

uint64_t sub_254DF2AAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ParticipantInfo(uint64_t a1)
{
  return sub_254661040(a1, (uint64_t *)&unk_269E16890);
}

unint64_t sub_254DF2B14()
{
  unint64_t result = qword_269E165E0;
  if (!qword_269E165E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E165E0);
  }
  return result;
}

uint64_t sub_254DF2B68(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269E165B8);
    sub_254DF2AAC(a2, (void (*)(uint64_t))type metadata accessor for ParticipantInfo);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_254DF2BFC()
{
  unint64_t result = qword_269E16608;
  if (!qword_269E16608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16608);
  }
  return result;
}

uint64_t sub_254DF2C50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_254DF2CB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_254DF2D18()
{
  unint64_t result = qword_269E16620;
  if (!qword_269E16620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16620);
  }
  return result;
}

uint64_t sub_254DF2D6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_254DF2DB4()
{
  unint64_t result = qword_269E16638;
  if (!qword_269E16638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16638);
  }
  return result;
}

unint64_t sub_254DF2E08()
{
  unint64_t result = qword_269E16648;
  if (!qword_269E16648)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269E16640);
    sub_254DF2AAC(&qword_269E165C8, (void (*)(uint64_t))type metadata accessor for ParticipantInfo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16648);
  }
  return result;
}

unint64_t sub_254DF2EB4()
{
  unint64_t result = qword_269E16658;
  if (!qword_269E16658)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269E16640);
    sub_254DF2AAC(&qword_269E165F0, (void (*)(uint64_t))type metadata accessor for ParticipantInfo);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16658);
  }
  return result;
}

unint64_t sub_254DF2F60()
{
  unint64_t result = qword_269E16688;
  if (!qword_269E16688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16688);
  }
  return result;
}

unint64_t sub_254DF2FB4()
{
  unint64_t result = qword_269E16690;
  if (!qword_269E16690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16690);
  }
  return result;
}

unint64_t sub_254DF3008()
{
  unint64_t result = qword_269E16698;
  if (!qword_269E16698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16698);
  }
  return result;
}

unint64_t sub_254DF305C()
{
  unint64_t result = qword_269E166A0;
  if (!qword_269E166A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E166A0);
  }
  return result;
}

unint64_t sub_254DF30B0()
{
  unint64_t result = qword_269E166A8;
  if (!qword_269E166A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E166A8);
  }
  return result;
}

unint64_t sub_254DF3104()
{
  unint64_t result = qword_269E166F8;
  if (!qword_269E166F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E166F8);
  }
  return result;
}

unint64_t sub_254DF3158()
{
  unint64_t result = qword_269E16700;
  if (!qword_269E16700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16700);
  }
  return result;
}

unint64_t sub_254DF31AC()
{
  unint64_t result = qword_269E16708;
  if (!qword_269E16708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16708);
  }
  return result;
}

unint64_t sub_254DF3200()
{
  unint64_t result = qword_269E16710;
  if (!qword_269E16710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16710);
  }
  return result;
}

unint64_t sub_254DF3254()
{
  unint64_t result = qword_269E16750;
  if (!qword_269E16750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16750);
  }
  return result;
}

unint64_t sub_254DF32A8()
{
  unint64_t result = qword_269E16758;
  if (!qword_269E16758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16758);
  }
  return result;
}

unint64_t sub_254DF32FC()
{
  unint64_t result = qword_269E16760;
  if (!qword_269E16760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16760);
  }
  return result;
}

unint64_t sub_254DF3350()
{
  unint64_t result = qword_269E16798;
  if (!qword_269E16798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16798);
  }
  return result;
}

unint64_t sub_254DF33A4()
{
  unint64_t result = qword_269E167A0;
  if (!qword_269E167A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E167A0);
  }
  return result;
}

unint64_t sub_254DF33F8()
{
  unint64_t result = qword_269E167A8;
  if (!qword_269E167A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E167A8);
  }
  return result;
}

unint64_t sub_254DF344C()
{
  unint64_t result = qword_269E167C8;
  if (!qword_269E167C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E167C8);
  }
  return result;
}

unint64_t sub_254DF3494()
{
  unint64_t result = qword_269E167D0;
  if (!qword_269E167D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E167D0);
  }
  return result;
}

unint64_t sub_254DF34E0()
{
  unint64_t result = qword_269E167D8;
  if (!qword_269E167D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E167D8);
  }
  return result;
}

unint64_t sub_254DF3538()
{
  unint64_t result = qword_269E167E0;
  if (!qword_269E167E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E167E0);
  }
  return result;
}

unint64_t sub_254DF3590()
{
  unint64_t result = qword_269E167E8;
  if (!qword_269E167E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E167E8);
  }
  return result;
}

unint64_t sub_254DF35E8()
{
  unint64_t result = qword_269E167F0;
  if (!qword_269E167F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E167F0);
  }
  return result;
}

unint64_t sub_254DF3640()
{
  unint64_t result = qword_269E167F8;
  if (!qword_269E167F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E167F8);
  }
  return result;
}

uint64_t sub_254DF3694(void *a1)
{
  a1[1] = sub_254DF2AAC(&qword_26B26F988, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
  a1[2] = sub_254DF2AAC(&qword_269E16800, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
  uint64_t result = sub_254DF2AAC(&qword_269E16808, (void (*)(uint64_t))type metadata accessor for TranscriptProtoParticipantID);
  a1[3] = result;
  return result;
}

uint64_t sub_254DF3740(void *a1)
{
  a1[1] = sub_254DF2AAC(&qword_269E0F0E0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionOutcome);
  a1[2] = sub_254DF2AAC(&qword_269E16810, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionOutcome);
  uint64_t result = sub_254DF2AAC(&qword_269E16818, (void (*)(uint64_t))type metadata accessor for TranscriptProtoActionOutcome);
  a1[3] = result;
  return result;
}

uint64_t sub_254DF37EC(void *a1)
{
  a1[1] = sub_254DF2AAC((unint64_t *)&qword_26B26F660, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
  a1[2] = sub_254DF2AAC(&qword_269E16820, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
  uint64_t result = sub_254DF2AAC(&qword_269E16828, (void (*)(uint64_t))type metadata accessor for TranscriptProtoEvent);
  a1[3] = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SessionView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254DF38AC);
}

uint64_t sub_254DF38AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_254E14D98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SessionView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254DF3980);
}

uint64_t sub_254DF3980(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_254E14D98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SessionData(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_254E14D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    char v55 = a3;
    char v56 = a2;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    *uint64_t v9 = *((unsigned char *)a2 + v8);
    v9[1] = *((unsigned char *)a2 + v8 + 1);
    uint64_t v11 = *(void *)((char *)a2 + v8 + 16);
    *((void *)v9 + 1) = *(void *)((char *)a2 + v8 + 8);
    *((void *)v9 + 2) = v11;
    uint64_t v12 = (int *)type metadata accessor for SessionSignature(0);
    uint64_t v13 = v12[7];
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v16 = type metadata accessor for AttributionTraits(0);
    uint64_t v17 = *(void *)(v16 - 8);
    long long v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    uint64_t v19 = v16;
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v19))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
      memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v52 = v17;
      uint64_t v22 = v19;
      uint64_t v23 = *((void *)v15 + 1);
      *(void *)uint64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = v23;
      uint64_t v24 = *((void *)v15 + 3);
      *((void *)v14 + 2) = *((void *)v15 + 2);
      *((void *)v14 + 3) = v24;
      uint64_t v53 = v22;
      char v54 = v14;
      uint64_t v25 = *(int *)(v22 + 24);
      __dst = &v14[v25];
      uint64_t v26 = &v15[v25];
      uint64_t v27 = sub_254E14E08();
      uint64_t v50 = *(void *)(v27 - 8);
      uint64_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48);
      uint64_t v29 = v26;
      uint64_t v30 = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28(v29, 1, v30))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
        memcpy(__dst, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v50 + 16))(__dst, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v30);
      }
      uint64_t v32 = *(int *)(v53 + 28);
      char v33 = (void *)((char *)v54 + v32);
      char v34 = &v15[v32];
      uint64_t v35 = *((void *)v34 + 1);
      *char v33 = *(void *)v34;
      v33[1] = v35;
      uint64_t v36 = *(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56);
      swift_bridgeObjectRetain();
      v36(v54, 0, 1, v53);
    }
    *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
    *(void *)&v9[v12[9]] = *(void *)&v10[v12[9]];
    *(void *)&v9[v12[10]] = *(void *)&v10[v12[10]];
    *(void *)&v9[v12[11]] = *(void *)&v10[v12[11]];
    uint64_t v37 = v12[12];
    uint64_t v38 = &v9[v37];
    uint64_t v39 = &v10[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)uint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    uint64_t v41 = v55[6];
    uint64_t v42 = v55[7];
    uint64_t v43 = (void *)((char *)a1 + v41);
    uint64_t v44 = (void *)((char *)v56 + v41);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    uint64_t v46 = (void *)((char *)a1 + v42);
    uint64_t v47 = (void *)((char *)v56 + v42);
    uint64_t v48 = v47[1];
    void *v46 = *v47;
    v46[1] = v48;
    *(void *)((char *)a1 + v55[8]) = *(void *)((char *)v56 + v55[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for SessionSignature(0) + 28);
  uint64_t v7 = type metadata accessor for AttributionTraits(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(v7 + 24);
    uint64_t v9 = sub_254E14E08();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v47 = a1;
  uint64_t v48 = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v49 = a2;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(v8 + 1) = *(unsigned char *)(a2 + v7 + 1);
  uint64_t v10 = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  *(void *)(v8 + 16) = v10;
  uint64_t v11 = (int *)type metadata accessor for SessionSignature(0);
  uint64_t v12 = v11[7];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for AttributionTraits(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v46 = v16;
    uint64_t v19 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v19;
    uint64_t v20 = v14[3];
    v13[2] = v14[2];
    v13[3] = v20;
    uint64_t v21 = *(int *)(v15 + 24);
    uint64_t v44 = (char *)v14 + v21;
    __dst = (char *)v13 + v21;
    uint64_t v22 = sub_254E14E08();
    uint64_t v42 = *(void *)(v22 - 8);
    uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v43(v44, 1, v22))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
      memcpy(__dst, v44, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(__dst, v44, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v22);
    }
    uint64_t v24 = *(int *)(v15 + 28);
    uint64_t v25 = (void *)((char *)v13 + v24);
    uint64_t v26 = (void *)((char *)v14 + v24);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = *(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56);
    swift_bridgeObjectRetain();
    v28(v13, 0, 1, v15);
  }
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(void *)(v8 + v11[9]) = *(void *)(v9 + v11[9]);
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  *(void *)(v8 + v11[11]) = *(void *)(v9 + v11[11]);
  uint64_t v29 = v11[12];
  uint64_t v30 = (void *)(v8 + v29);
  uint64_t v31 = (void *)(v9 + v29);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = v48[6];
  uint64_t v34 = v48[7];
  uint64_t v35 = (void *)(v47 + v33);
  uint64_t v36 = (void *)(v49 + v33);
  uint64_t v37 = v36[1];
  void *v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = (void *)(v47 + v34);
  uint64_t v39 = (void *)(v49 + v34);
  uint64_t v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  *(void *)(v47 + v48[8]) = *(void *)(v49 + v48[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v47;
}

uint64_t assignWithCopy for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v58 = a2;
  uint64_t v59 = a3;
  uint64_t v7 = a3[5];
  uint64_t v57 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(unsigned char *)(v8 + 1) = *(unsigned char *)(v9 + 1);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for SessionSignature(0);
  uint64_t v11 = v10[7];
  uint64_t v12 = (char *)(v8 + v11);
  uint64_t v13 = (char *)(v9 + v11);
  uint64_t v14 = type metadata accessor for AttributionTraits(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  __src = v13;
  int v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_254DF2C50((uint64_t)v12, type metadata accessor for AttributionTraits);
      goto LABEL_7;
    }
    *(void *)uint64_t v12 = *(void *)v13;
    *((void *)v12 + 1) = *((void *)v13 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v12 + 2) = *((void *)v13 + 2);
    *((void *)v12 + 3) = *((void *)v13 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = *(int *)(v14 + 24);
    uint64_t v27 = &v12[v26];
    uint64_t v28 = &v13[v26];
    uint64_t v29 = sub_254E14E08();
    uint64_t v53 = *(void *)(v29 - 8);
    char v55 = v27;
    uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
    LODWORD(v27) = v30(v27, 1, v29);
    int v31 = v30(v28, 1, v29);
    if (v27)
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v53 + 16))(v55, v28, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v55, 0, 1, v29);
        goto LABEL_18;
      }
      size_t v32 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498) - 8) + 64);
      uint64_t v33 = v55;
    }
    else
    {
      if (!v31)
      {
        (*(void (**)(void *, char *, uint64_t))(v53 + 24))(v55, v28, v29);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v53 + 8))(v55, v29);
      size_t v32 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498) - 8) + 64);
      uint64_t v33 = v55;
    }
    memcpy(v33, v28, v32);
LABEL_18:
    uint64_t v21 = v57;
    uint64_t v24 = v58;
    uint64_t v38 = *(int *)(v14 + 28);
    uint64_t v39 = &v12[v38];
    uint64_t v40 = &__src[v38];
    *(void *)uint64_t v39 = *(void *)v40;
    *((void *)v39 + 1) = *((void *)v40 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v25 = v59;
    goto LABEL_19;
  }
  if (v18)
  {
LABEL_7:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
    memcpy(v12, v13, *(void *)(*(void *)(v23 - 8) + 64));
    uint64_t v24 = v58;
    uint64_t v25 = v59;
    uint64_t v21 = v57;
    goto LABEL_19;
  }
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  *((void *)v12 + 2) = *((void *)v13 + 2);
  *((void *)v12 + 3) = *((void *)v13 + 3);
  uint64_t v19 = *(int *)(v14 + 24);
  char v54 = &v13[v19];
  __dst = &v12[v19];
  uint64_t v20 = sub_254E14E08();
  uint64_t v51 = *(void *)(v20 - 8);
  uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v57;
  if (v52(v54, 1, v20))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    memcpy(__dst, v54, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(__dst, v54, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v20);
  }
  uint64_t v34 = *(int *)(v14 + 28);
  uint64_t v35 = &v12[v34];
  uint64_t v36 = &__src[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  *((void *)v35 + 1) = *((void *)v36 + 1);
  uint64_t v37 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  swift_bridgeObjectRetain();
  v37(v12, 0, 1, v14);
  uint64_t v24 = v58;
  uint64_t v25 = v59;
LABEL_19:
  *(void *)(v8 + v10[8]) = *(void *)(v9 + v10[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + v10[9]) = *(void *)(v9 + v10[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + v10[10]) = *(void *)(v9 + v10[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + v10[11]) = *(void *)(v9 + v10[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v10[12];
  uint64_t v42 = (void *)(v8 + v41);
  uint64_t v43 = (void *)(v9 + v41);
  void *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v25[6];
  uint64_t v45 = (void *)(v21 + v44);
  uint64_t v46 = (void *)(v24 + v44);
  void *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = v25[7];
  uint64_t v48 = (void *)(v21 + v47);
  uint64_t v49 = (void *)(v24 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v21 + v25[8]) = *(void *)(v24 + v25[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t initializeWithTake for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(v8 + 1) = *(unsigned char *)(a2 + v7 + 1);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  uint64_t v10 = (int *)type metadata accessor for SessionSignature(0);
  uint64_t v11 = v10[7];
  uint64_t v12 = (_OWORD *)(v8 + v11);
  uint64_t v13 = (_OWORD *)(v9 + v11);
  uint64_t v14 = type metadata accessor for AttributionTraits(0);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v27 = a3;
    long long v17 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v17;
    uint64_t v18 = *(int *)(v14 + 24);
    uint64_t v29 = (char *)v12 + v18;
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = sub_254E14E08();
    uint64_t v26 = *(void *)(v20 - 8);
    uint64_t v28 = v19;
    uint64_t v21 = v19;
    uint64_t v22 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v20))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
      memcpy(v29, v28, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v26 + 32))(v29, v28, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v22);
    }
    *(_OWORD *)((char *)v12 + *(int *)(v14 + 28)) = *(_OWORD *)((char *)v13 + *(int *)(v14 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    a3 = v27;
  }
  *(void *)(v8 + v10[8]) = *(void *)(v9 + v10[8]);
  *(void *)(v8 + v10[9]) = *(void *)(v9 + v10[9]);
  *(void *)(v8 + v10[10]) = *(void *)(v9 + v10[10]);
  *(void *)(v8 + v10[11]) = *(void *)(v9 + v10[11]);
  *(_OWORD *)(v8 + v10[12]) = *(_OWORD *)(v9 + v10[12]);
  uint64_t v24 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v62 = a2;
  uint64_t v63 = a3;
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(v8 + 1) = *(unsigned char *)(a2 + v7 + 1);
  uint64_t v10 = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for SessionSignature(0);
  uint64_t v12 = v11[7];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (char *)(v9 + v12);
  uint64_t v15 = type metadata accessor for AttributionTraits(0);
  uint64_t v16 = *(void *)(v15 - 8);
  long long v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v64 = v13;
  LODWORD(v13) = v17((char *)v13, 1, v15);
  __src = v14;
  int v18 = v17(v14, 1, v15);
  if (!v13)
  {
    if (v18)
    {
      sub_254DF2C50((uint64_t)v64, type metadata accessor for AttributionTraits);
      size_t v19 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68) - 8) + 64);
      uint64_t v20 = v64;
      goto LABEL_6;
    }
    uint64_t v27 = *((void *)v14 + 1);
    void *v64 = *(void *)v14;
    v64[1] = v27;
    swift_bridgeObjectRelease();
    uint64_t v28 = *((void *)v14 + 3);
    v64[2] = *((void *)v14 + 2);
    v64[3] = v28;
    swift_bridgeObjectRelease();
    uint64_t v29 = *(int *)(v15 + 24);
    uint64_t v30 = (char *)v64 + v29;
    int v31 = &v14[v29];
    uint64_t v32 = sub_254E14E08();
    uint64_t v59 = *(void *)(v32 - 8);
    uint64_t v60 = v30;
    uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
    LODWORD(v30) = v33(v30, 1, v32);
    int v34 = v33(v31, 1, v32);
    if (v30)
    {
      if (!v34)
      {
        (*(void (**)(void *, char *, uint64_t))(v59 + 32))(v60, v31, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v60, 0, 1, v32);
        goto LABEL_21;
      }
      size_t v35 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498) - 8) + 64);
      uint64_t v36 = v60;
    }
    else
    {
      if (!v34)
      {
        (*(void (**)(void *, char *, uint64_t))(v59 + 40))(v60, v31, v32);
        goto LABEL_21;
      }
      (*(void (**)(void *, uint64_t))(v59 + 8))(v60, v32);
      size_t v35 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498) - 8) + 64);
      uint64_t v36 = v60;
    }
    memcpy(v36, v31, v35);
LABEL_21:
    uint64_t v37 = v62;
    uint64_t v54 = *(int *)(v15 + 28);
    char v55 = (void *)((char *)v64 + v54);
    char v56 = &__src[v54];
    uint64_t v58 = *(void *)v56;
    uint64_t v57 = *((void *)v56 + 1);
    void *v55 = v58;
    v55[1] = v57;
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (!v18)
  {
    long long v21 = *((_OWORD *)v14 + 1);
    *(_OWORD *)uint64_t v64 = *(_OWORD *)v14;
    *((_OWORD *)v64 + 1) = v21;
    uint64_t v22 = *(int *)(v15 + 24);
    uint64_t v61 = (char *)v64 + v22;
    uint64_t v23 = &v14[v22];
    uint64_t v24 = sub_254E14E08();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
      memcpy(v61, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v61, v23, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v61, 0, 1, v24);
    }
    *(_OWORD *)((char *)v64 + *(int *)(v15 + 28)) = *(_OWORD *)&__src[*(int *)(v15 + 28)];
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v64, 0, 1, v15);
    goto LABEL_14;
  }
  size_t v19 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68) - 8) + 64);
  uint64_t v20 = v64;
LABEL_6:
  memcpy(v20, v14, v19);
LABEL_14:
  uint64_t v37 = v62;
LABEL_15:
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  swift_bridgeObjectRelease();
  *(void *)(v8 + v11[9]) = *(void *)(v9 + v11[9]);
  swift_bridgeObjectRelease();
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  swift_bridgeObjectRelease();
  *(void *)(v8 + v11[11]) = *(void *)(v9 + v11[11]);
  swift_bridgeObjectRelease();
  uint64_t v38 = v11[12];
  uint64_t v39 = (void *)(v8 + v38);
  uint64_t v40 = (uint64_t *)(v9 + v38);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  *uint64_t v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = v63[6];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (uint64_t *)(v37 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  void *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = v63[7];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (uint64_t *)(v37 + v48);
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  *uint64_t v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v63[8]) = *(void *)(v37 + v63[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254DF51CC);
}

uint64_t sub_254DF51CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_254E14D98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for SessionSignature(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254DF52F8);
}

uint64_t sub_254DF52F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_254E14D98();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for SessionSignature(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_254DF540C()
{
  uint64_t result = sub_254E14D98();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SessionSignature(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RequestData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_254E14D98();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = (uint64_t *)((char *)a1 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    int v18 = (char *)a1 + v14;
    size_t v19 = (char *)a2 + v14;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v14 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *int v18 = *v19;
      uint64_t v21 = *((void *)v19 + 1);
      uint64_t v22 = *((void *)v19 + 2);
      char v23 = v19[24];
      sub_254650A60(v21, v22, v23);
      *((void *)v18 + 1) = v21;
      *((void *)v18 + 2) = v22;
      v18[24] = v23;
      uint64_t v24 = *((void *)v19 + 5);
      *((void *)v18 + 4) = *((void *)v19 + 4);
      *((void *)v18 + 5) = v24;
      *((void *)v18 + 6) = *((void *)v19 + 6);
      *((_DWORD *)v18 + 14) = *((_DWORD *)v19 + 14);
      *((_WORD *)v18 + 30) = *((_WORD *)v19 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v26 = *((_OWORD *)v19 + 1);
      *(_OWORD *)int v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v26;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *(_OWORD *)(v18 + 46) = *(_OWORD *)(v19 + 46);
    }
  }
  return a1;
}

uint64_t destroy for RequestData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  if (*(void *)(v6 + 40))
  {
    sub_254650B00(*(void *)(v6 + 8), *(void *)(v6 + 16), *(unsigned char *)(v6 + 24));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for RequestData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  uint64_t v19 = *(void *)(a2 + v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    char v22 = *(unsigned char *)(v18 + 24);
    sub_254650A60(v20, v21, v22);
    *(void *)(v17 + 8) = v20;
    *(void *)(v17 + 16) = v21;
    *(unsigned char *)(v17 + 24) = v22;
    uint64_t v23 = *(void *)(v18 + 40);
    *(void *)(v17 + 32) = *(void *)(v18 + 32);
    *(void *)(v17 + 40) = v23;
    *(void *)(v17 + 48) = *(void *)(v18 + 48);
    *(_DWORD *)(v17 + 56) = *(_DWORD *)(v18 + 56);
    *(_WORD *)(v17 + 60) = *(_WORD *)(v18 + 60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v24 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v24;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
    *(_OWORD *)(v17 + 46) = *(_OWORD *)(v18 + 46);
  }
  return a1;
}

uint64_t assignWithCopy for RequestData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (long long *)(a2 + v13);
  uint64_t v16 = *(void *)(a1 + v13 + 40);
  uint64_t v17 = *(void *)(a2 + v13 + 40);
  if (v16)
  {
    if (v17)
    {
      *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
      uint64_t v18 = *((void *)v15 + 1);
      uint64_t v19 = *((void *)v15 + 2);
      char v20 = *((unsigned char *)v15 + 24);
      sub_254650A60(v18, v19, v20);
      uint64_t v21 = *(void *)(v14 + 8);
      uint64_t v22 = *(void *)(v14 + 16);
      *(void *)(v14 + 8) = v18;
      *(void *)(v14 + 16) = v19;
      char v23 = *(unsigned char *)(v14 + 24);
      *(unsigned char *)(v14 + 24) = v20;
      sub_254650B00(v21, v22, v23);
      *(void *)(v14 + 32) = *((void *)v15 + 4);
      *(void *)(v14 + 40) = *((void *)v15 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v14 + 48) = *((void *)v15 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      int v24 = *((_DWORD *)v15 + 14);
      *(unsigned char *)(v14 + 60) = *((unsigned char *)v15 + 60);
      *(_DWORD *)(v14 + 56) = v24;
      *(unsigned char *)(v14 + 61) = *((unsigned char *)v15 + 61);
    }
    else
    {
      sub_254DF5AFC(v14);
      long long v30 = v15[1];
      long long v29 = v15[2];
      long long v31 = *v15;
      *(_OWORD *)(v14 + 46) = *(long long *)((char *)v15 + 46);
      *(_OWORD *)(v14 + 16) = v30;
      *(_OWORD *)(v14 + 32) = v29;
      *(_OWORD *)uint64_t v14 = v31;
    }
  }
  else if (v17)
  {
    *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
    uint64_t v25 = *((void *)v15 + 1);
    uint64_t v26 = *((void *)v15 + 2);
    char v27 = *((unsigned char *)v15 + 24);
    sub_254650A60(v25, v26, v27);
    *(void *)(v14 + 8) = v25;
    *(void *)(v14 + 16) = v26;
    *(unsigned char *)(v14 + 24) = v27;
    *(void *)(v14 + 32) = *((void *)v15 + 4);
    *(void *)(v14 + 40) = *((void *)v15 + 5);
    *(void *)(v14 + 48) = *((void *)v15 + 6);
    int v28 = *((_DWORD *)v15 + 14);
    *(unsigned char *)(v14 + 60) = *((unsigned char *)v15 + 60);
    *(_DWORD *)(v14 + 56) = v28;
    *(unsigned char *)(v14 + 61) = *((unsigned char *)v15 + 61);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *v15;
    long long v33 = v15[1];
    long long v34 = v15[2];
    *(_OWORD *)(v14 + 46) = *(long long *)((char *)v15 + 46);
    *(_OWORD *)(v14 + 16) = v33;
    *(_OWORD *)(v14 + 32) = v34;
    *(_OWORD *)uint64_t v14 = v32;
  }
  return a1;
}

uint64_t sub_254DF5AFC(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for RequestData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (long long *)(a2 + v8);
  *(_OWORD *)((char *)v9 + 46) = *(long long *)((char *)v10 + 46);
  long long v11 = v10[2];
  long long v12 = *v10;
  v9[1] = v10[1];
  void v9[2] = v11;
  *uint64_t v9 = v12;
  return a1;
}

uint64_t assignWithTake for RequestData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRelease();
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  if (!*(void *)(a1 + v15 + 40)) {
    goto LABEL_5;
  }
  if (!*(void *)(v17 + 40))
  {
    sub_254DF5AFC(v16);
LABEL_5:
    long long v23 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v23;
    *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
    *(_OWORD *)(v16 + 46) = *(_OWORD *)(v17 + 46);
    return a1;
  }
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  char v18 = *(unsigned char *)(v17 + 24);
  uint64_t v19 = *(void *)(v16 + 8);
  uint64_t v20 = *(void *)(v16 + 16);
  *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
  char v21 = *(unsigned char *)(v16 + 24);
  *(unsigned char *)(v16 + 24) = v18;
  sub_254650B00(v19, v20, v21);
  uint64_t v22 = *(void *)(v17 + 40);
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(void *)(v16 + 40) = v22;
  swift_bridgeObjectRelease();
  *(void *)(v16 + 48) = *(void *)(v17 + 48);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v16 + 56) = *(_DWORD *)(v17 + 56);
  *(_WORD *)(v16 + 60) = *(_WORD *)(v17 + 60);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254DF5D58);
}

uint64_t sub_254DF5D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_254E14D98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RequestData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254DF5E30);
}

uint64_t sub_254DF5E30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_254E14D98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_254DF5EF0()
{
  uint64_t result = sub_254E14D98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for RequestSignature(uint64_t a1)
{
  sub_254650B00(*(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RequestSignature(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_254650A60(v4, v5, v6);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RequestSignature(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_254650A60(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v9 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_254650B00(v7, v8, v9);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v10 = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
  return a1;
}

__n128 __swift_memcpy62_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RequestSignature(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  char v7 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_254650B00(v5, v6, v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestSignature(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 62)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestSignature(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 62) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 62) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestSignature()
{
  return &type metadata for RequestSignature;
}

uint64_t destroy for IERequestStatus(uint64_t a1)
{
  return sub_254650B00(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s23LighthouseDataProcessor15IERequestStatusOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_254650A60(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for IERequestStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_254650A60(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_254650B00(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for IERequestStatus(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_254650B00(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for IERequestStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IERequestStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_254DF6408(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_254DF6420(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IERequestStatus()
{
  return &type metadata for IERequestStatus;
}

uint64_t getEnumTagSinglePayload for PromptType(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptType()
{
  return &type metadata for PromptType;
}

void *initializeBufferWithCopyOfBuffer for SessionSignature(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *int v4 = *a2;
    int v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(unsigned char *)(a1 + 1) = *((unsigned char *)a2 + 1);
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a3[7];
    char v9 = (void *)(a1 + v8);
    int v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for AttributionTraits(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = v10[1];
      *char v9 = *v10;
      v9[1] = v16;
      uint64_t v17 = v10[3];
      void v9[2] = v10[2];
      v9[3] = v17;
      uint64_t v18 = *(int *)(v11 + 24);
      __dst = (char *)v9 + v18;
      uint64_t v36 = (char *)v10 + v18;
      uint64_t v37 = v12;
      uint64_t v19 = sub_254E14E08();
      uint64_t v33 = *(void *)(v19 - 8);
      size_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v35(v36, 1, v19))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
        memcpy(__dst, v36, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(__dst, v36, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v19);
      }
      uint64_t v21 = *(int *)(v11 + 28);
      uint64_t v22 = (void *)((char *)v9 + v21);
      long long v23 = (void *)((char *)v10 + v21);
      uint64_t v24 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v24;
      uint64_t v25 = *(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56);
      swift_bridgeObjectRetain();
      v25(v9, 0, 1, v11);
    }
    uint64_t v26 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(void *)((char *)v4 + v26) = *(uint64_t *)((char *)a2 + v26);
    uint64_t v27 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(void *)((char *)v4 + v27) = *(uint64_t *)((char *)a2 + v27);
    uint64_t v28 = a3[12];
    long long v29 = (void *)((char *)v4 + v28);
    long long v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    *long long v29 = *v30;
    v29[1] = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SessionSignature(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for AttributionTraits(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    uint64_t v7 = sub_254E14E08();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionSignature(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for AttributionTraits(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v14;
    uint64_t v15 = v9[3];
    v8[2] = v9[2];
    v8[3] = v15;
    uint64_t v16 = *(int *)(v10 + 24);
    uint64_t v34 = v11;
    __dst = (char *)v8 + v16;
    uint64_t v33 = (char *)v9 + v16;
    uint64_t v17 = sub_254E14E08();
    uint64_t v31 = *(void *)(v17 - 8);
    long long v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32(v33, 1, v17))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
      memcpy(__dst, v33, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v33, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v19 = *(int *)(v10 + 28);
    uint64_t v20 = (void *)((char *)v8 + v19);
    uint64_t v21 = (void *)((char *)v9 + v19);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    long long v23 = *(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56);
    swift_bridgeObjectRetain();
    v23(v8, 0, 1, v10);
  }
  uint64_t v24 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v25 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  uint64_t v26 = a3[12];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionSignature(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for AttributionTraits(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_254DF2C50((uint64_t)v7, type metadata accessor for AttributionTraits);
      goto LABEL_7;
    }
    *uint64_t v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7[2] = v8[2];
    v7[3] = v8[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(int *)(v9 + 24);
    uint64_t v19 = (char *)v7 + v18;
    __dsta = (char *)v8 + v18;
    uint64_t v20 = sub_254E14E08();
    uint64_t v39 = *(void *)(v20 - 8);
    uint64_t v40 = v19;
    uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
    LODWORD(v19) = v21(v19, 1, v20);
    int v22 = v21(__dsta, 1, v20);
    if (v19)
    {
      if (!v22)
      {
        (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v40, __dsta, v20);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v20);
        goto LABEL_18;
      }
      size_t v23 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498) - 8) + 64);
      uint64_t v24 = v40;
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(void *, char *, uint64_t))(v39 + 24))(v40, __dsta, v20);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v39 + 8))(v40, v20);
      size_t v23 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498) - 8) + 64);
      uint64_t v24 = v40;
    }
    memcpy(v24, __dsta, v23);
LABEL_18:
    uint64_t v29 = *(int *)(v9 + 28);
    long long v30 = (void *)((char *)v7 + v29);
    uint64_t v31 = (void *)((char *)v8 + v29);
    *long long v30 = *v31;
    v30[1] = v31[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_19;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  uint64_t v14 = *(int *)(v9 + 24);
  __dst = (char *)v7 + v14;
  uint64_t v38 = (char *)v8 + v14;
  uint64_t v15 = sub_254E14E08();
  uint64_t v36 = *(void *)(v15 - 8);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37(v38, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    memcpy(__dst, v38, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v38, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v25 = *(int *)(v9 + 28);
  uint64_t v26 = (void *)((char *)v7 + v25);
  uint64_t v27 = (void *)((char *)v8 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  uint64_t v28 = *(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56);
  swift_bridgeObjectRetain();
  v28(v7, 0, 1, v9);
LABEL_19:
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[12];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionSignature(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[7];
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = type metadata accessor for AttributionTraits(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    long long v12 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v12;
    uint64_t v13 = *(int *)(v9 + 24);
    __dst = (char *)v7 + v13;
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = sub_254E14E08();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
      memcpy(__dst, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(_OWORD *)((char *)v7 + *(int *)(v9 + 28)) = *(_OWORD *)((char *)v8 + *(int *)(v9 + 28));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v18 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for SessionSignature(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for AttributionTraits(0);
  uint64_t v11 = *(void *)(v10 - 8);
  long long v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_254DF2C50((uint64_t)v8, type metadata accessor for AttributionTraits);
      goto LABEL_7;
    }
    uint64_t v22 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v22;
    swift_bridgeObjectRelease();
    uint64_t v23 = v9[3];
    v8[2] = v9[2];
    v8[3] = v23;
    swift_bridgeObjectRelease();
    uint64_t v24 = *(int *)(v10 + 24);
    uint64_t v25 = (char *)v8 + v24;
    __dsta = (char *)v9 + v24;
    uint64_t v26 = sub_254E14E08();
    uint64_t v42 = *(void *)(v26 - 8);
    uint64_t v43 = v25;
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
    LODWORD(v25) = v27(v25, 1, v26);
    int v28 = v27(__dsta, 1, v26);
    if (v25)
    {
      if (!v28)
      {
        (*(void (**)(void *, char *, uint64_t))(v42 + 32))(v43, __dsta, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v26);
        goto LABEL_18;
      }
      size_t v29 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498) - 8) + 64);
      long long v30 = v43;
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(void *, char *, uint64_t))(v42 + 40))(v43, __dsta, v26);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v42 + 8))(v43, v26);
      size_t v29 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498) - 8) + 64);
      long long v30 = v43;
    }
    memcpy(v30, __dsta, v29);
LABEL_18:
    uint64_t v31 = *(int *)(v10 + 28);
    uint64_t v32 = (void *)((char *)v8 + v31);
    uint64_t v33 = (void *)((char *)v9 + v31);
    uint64_t v35 = *v33;
    uint64_t v34 = v33[1];
    *uint64_t v32 = v35;
    v32[1] = v34;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  long long v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  uint64_t v16 = *(int *)(v10 + 24);
  __dst = (char *)v8 + v16;
  uint64_t v17 = (char *)v9 + v16;
  uint64_t v18 = sub_254E14E08();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  *(_OWORD *)((char *)v8 + *(int *)(v10 + 28)) = *(_OWORD *)((char *)v9 + *(int *)(v10 + 28));
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_19:
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[12];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionSignature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254DF7824);
}

uint64_t sub_254DF7824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SessionSignature(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254DF78EC);
}

uint64_t sub_254DF78EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D68);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_254DF7998()
{
  sub_254DF8588(319, &qword_269E16870, (void (*)(uint64_t))type metadata accessor for AttributionTraits);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for AttributionTraits(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_254E14E08();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 28);
    uint64_t v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for AttributionTraits(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_254E14E08();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AttributionTraits(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254E14E08();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AttributionTraits(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254E14E08();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for AttributionTraits(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254E14E08();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *assignWithTake for AttributionTraits(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_254E14E08();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributionTraits(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254DF8360);
}

uint64_t sub_254DF8360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for AttributionTraits(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254DF8434);
}

uint64_t sub_254DF8434(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_254DF84E0()
{
  sub_254DF8588(319, &qword_269E16888, MEMORY[0x270FA9538]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_254DF8588(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_254E15AE8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ParticipantInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *unsigned int v3 = *a2;
    unsigned int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_254E14D98();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ParticipantInfo(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_254E14D98();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for ParticipantInfo(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_254E14D98();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for ParticipantInfo(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_254E14D98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ParticipantInfo(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_254E14D98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for ParticipantInfo(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_254E14D98();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254DF898C);
}

uint64_t sub_254DF898C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_254E14D98();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ParticipantInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254DF8A5C);
}

uint64_t sub_254DF8A5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_254E14D98();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_254DF8B04()
{
  uint64_t result = sub_254E14D98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpanRespresentation()
{
  return &type metadata for SpanRespresentation;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus()
{
  return &type metadata for TaskCompletionStatus;
}

ValueMetadata *type metadata accessor for UserInteractionType()
{
  return &type metadata for UserInteractionType;
}

ValueMetadata *type metadata accessor for SageClient()
{
  return &type metadata for SageClient;
}

ValueMetadata *type metadata accessor for IEClient()
{
  return &type metadata for IEClient;
}

ValueMetadata *type metadata accessor for ErrorComponent()
{
  return &type metadata for ErrorComponent;
}

ValueMetadata *type metadata accessor for IEClient.CodingKeys()
{
  return &type metadata for IEClient.CodingKeys;
}

ValueMetadata *type metadata accessor for IEClient.SiriCodingKeys()
{
  return &type metadata for IEClient.SiriCodingKeys;
}

ValueMetadata *type metadata accessor for IEClient.UnknownCodingKeys()
{
  return &type metadata for IEClient.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for SageClient.CodingKeys()
{
  return &type metadata for SageClient.CodingKeys;
}

ValueMetadata *type metadata accessor for SageClient.Siri100CodingKeys()
{
  return &type metadata for SageClient.Siri100CodingKeys;
}

ValueMetadata *type metadata accessor for SageClient.UnknownCodingKeys()
{
  return &type metadata for SageClient.UnknownCodingKeys;
}

unsigned char *_s23LighthouseDataProcessor19UserInteractionTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DF8D38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserInteractionType.CodingKeys()
{
  return &type metadata for UserInteractionType.CodingKeys;
}

ValueMetadata *type metadata accessor for UserInteractionType.PromptCodingKeys()
{
  return &type metadata for UserInteractionType.PromptCodingKeys;
}

ValueMetadata *type metadata accessor for UserInteractionType.DisambiguationCodingKeys()
{
  return &type metadata for UserInteractionType.DisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for UserInteractionType.ConfirmationCodingKeys()
{
  return &type metadata for UserInteractionType.ConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus.CodingKeys()
{
  return &type metadata for TaskCompletionStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus.CompletedCodingKeys()
{
  return &type metadata for TaskCompletionStatus.CompletedCodingKeys;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus.FailedCodingKeys()
{
  return &type metadata for TaskCompletionStatus.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus.CanceledCodingKeys()
{
  return &type metadata for TaskCompletionStatus.CanceledCodingKeys;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus.UnknownCodingKeys()
{
  return &type metadata for TaskCompletionStatus.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for SpanRespresentation.CodingKeys()
{
  return &type metadata for SpanRespresentation.CodingKeys;
}

unsigned char *_s23LighthouseDataProcessor8IEClientOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DF8ED0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParticipantInfo.CodingKeys()
{
  return &type metadata for ParticipantInfo.CodingKeys;
}

unsigned char *_s23LighthouseDataProcessor20TaskCompletionStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DF8FD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributionTraits.CodingKeys()
{
  return &type metadata for AttributionTraits.CodingKeys;
}

unsigned char *_s23LighthouseDataProcessor14ErrorComponentOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DF90D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionSignature.CodingKeys()
{
  return &type metadata for SessionSignature.CodingKeys;
}

ValueMetadata *type metadata accessor for PromptType.CodingKeys()
{
  return &type metadata for PromptType.CodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.CodingKeys()
{
  return &type metadata for IERequestStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.CompletedCodingKeys()
{
  return &type metadata for IERequestStatus.CompletedCodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.FailedCodingKeys()
{
  return &type metadata for IERequestStatus.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.CanceledCodingKeys()
{
  return &type metadata for IERequestStatus.CanceledCodingKeys;
}

unsigned char *_s23LighthouseDataProcessor19SpanRespresentationV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x254DF9204);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IERequestStatus.PromptCodingKeys()
{
  return &type metadata for IERequestStatus.PromptCodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.AbandonedCodingKeys()
{
  return &type metadata for IERequestStatus.AbandonedCodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.UnknownCodingKeys()
{
  return &type metadata for IERequestStatus.UnknownCodingKeys;
}

unsigned char *_s23LighthouseDataProcessor15IERequestStatusO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254DF9328);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestSignature.CodingKeys()
{
  return &type metadata for RequestSignature.CodingKeys;
}

unint64_t sub_254DF9364()
{
  unint64_t result = qword_269E168A0;
  if (!qword_269E168A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168A0);
  }
  return result;
}

unint64_t sub_254DF93BC()
{
  unint64_t result = qword_269E168A8;
  if (!qword_269E168A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168A8);
  }
  return result;
}

unint64_t sub_254DF9414()
{
  unint64_t result = qword_269E168B0;
  if (!qword_269E168B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168B0);
  }
  return result;
}

unint64_t sub_254DF946C()
{
  unint64_t result = qword_269E168B8;
  if (!qword_269E168B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168B8);
  }
  return result;
}

unint64_t sub_254DF94C4()
{
  unint64_t result = qword_269E168C0;
  if (!qword_269E168C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168C0);
  }
  return result;
}

unint64_t sub_254DF951C()
{
  unint64_t result = qword_269E168C8;
  if (!qword_269E168C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168C8);
  }
  return result;
}

unint64_t sub_254DF9574()
{
  unint64_t result = qword_269E168D0;
  if (!qword_269E168D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168D0);
  }
  return result;
}

unint64_t sub_254DF95CC()
{
  unint64_t result = qword_269E168D8;
  if (!qword_269E168D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168D8);
  }
  return result;
}

unint64_t sub_254DF9624()
{
  unint64_t result = qword_269E168E0;
  if (!qword_269E168E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168E0);
  }
  return result;
}

unint64_t sub_254DF967C()
{
  unint64_t result = qword_269E168E8;
  if (!qword_269E168E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168E8);
  }
  return result;
}

unint64_t sub_254DF96D4()
{
  unint64_t result = qword_269E168F0;
  if (!qword_269E168F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168F0);
  }
  return result;
}

unint64_t sub_254DF972C()
{
  unint64_t result = qword_269E168F8;
  if (!qword_269E168F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E168F8);
  }
  return result;
}

unint64_t sub_254DF9784()
{
  unint64_t result = qword_269E16900;
  if (!qword_269E16900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16900);
  }
  return result;
}

unint64_t sub_254DF97DC()
{
  unint64_t result = qword_269E16908;
  if (!qword_269E16908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16908);
  }
  return result;
}

unint64_t sub_254DF9834()
{
  unint64_t result = qword_269E16910;
  if (!qword_269E16910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16910);
  }
  return result;
}

unint64_t sub_254DF988C()
{
  unint64_t result = qword_269E16918;
  if (!qword_269E16918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16918);
  }
  return result;
}

unint64_t sub_254DF98E4()
{
  unint64_t result = qword_269E16920;
  if (!qword_269E16920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16920);
  }
  return result;
}

unint64_t sub_254DF993C()
{
  unint64_t result = qword_269E16928;
  if (!qword_269E16928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16928);
  }
  return result;
}

unint64_t sub_254DF9994()
{
  unint64_t result = qword_269E16930;
  if (!qword_269E16930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16930);
  }
  return result;
}

unint64_t sub_254DF99EC()
{
  unint64_t result = qword_269E16938;
  if (!qword_269E16938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16938);
  }
  return result;
}

unint64_t sub_254DF9A44()
{
  unint64_t result = qword_269E16940;
  if (!qword_269E16940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16940);
  }
  return result;
}

unint64_t sub_254DF9A9C()
{
  unint64_t result = qword_269E16948;
  if (!qword_269E16948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16948);
  }
  return result;
}

unint64_t sub_254DF9AF4()
{
  unint64_t result = qword_269E16950;
  if (!qword_269E16950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16950);
  }
  return result;
}

unint64_t sub_254DF9B4C()
{
  unint64_t result = qword_269E16958;
  if (!qword_269E16958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16958);
  }
  return result;
}

unint64_t sub_254DF9BA4()
{
  unint64_t result = qword_269E16960;
  if (!qword_269E16960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16960);
  }
  return result;
}

unint64_t sub_254DF9BFC()
{
  unint64_t result = qword_269E16968;
  if (!qword_269E16968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16968);
  }
  return result;
}

unint64_t sub_254DF9C54()
{
  unint64_t result = qword_269E16970;
  if (!qword_269E16970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16970);
  }
  return result;
}

unint64_t sub_254DF9CAC()
{
  unint64_t result = qword_269E16978;
  if (!qword_269E16978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16978);
  }
  return result;
}

unint64_t sub_254DF9D04()
{
  unint64_t result = qword_269E16980;
  if (!qword_269E16980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16980);
  }
  return result;
}

unint64_t sub_254DF9D5C()
{
  unint64_t result = qword_269E16988;
  if (!qword_269E16988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16988);
  }
  return result;
}

unint64_t sub_254DF9DB4()
{
  unint64_t result = qword_269E16990;
  if (!qword_269E16990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16990);
  }
  return result;
}

unint64_t sub_254DF9E0C()
{
  unint64_t result = qword_269E16998;
  if (!qword_269E16998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16998);
  }
  return result;
}

unint64_t sub_254DF9E64()
{
  unint64_t result = qword_269E169A0;
  if (!qword_269E169A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169A0);
  }
  return result;
}

unint64_t sub_254DF9EBC()
{
  unint64_t result = qword_269E169A8;
  if (!qword_269E169A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169A8);
  }
  return result;
}

unint64_t sub_254DF9F14()
{
  unint64_t result = qword_269E169B0;
  if (!qword_269E169B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169B0);
  }
  return result;
}

unint64_t sub_254DF9F6C()
{
  unint64_t result = qword_269E169B8;
  if (!qword_269E169B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169B8);
  }
  return result;
}

unint64_t sub_254DF9FC4()
{
  unint64_t result = qword_269E169C0;
  if (!qword_269E169C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169C0);
  }
  return result;
}

unint64_t sub_254DFA01C()
{
  unint64_t result = qword_269E169C8;
  if (!qword_269E169C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169C8);
  }
  return result;
}

unint64_t sub_254DFA074()
{
  unint64_t result = qword_269E169D0;
  if (!qword_269E169D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169D0);
  }
  return result;
}

unint64_t sub_254DFA0CC()
{
  unint64_t result = qword_269E169D8;
  if (!qword_269E169D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169D8);
  }
  return result;
}

unint64_t sub_254DFA124()
{
  unint64_t result = qword_269E169E0;
  if (!qword_269E169E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169E0);
  }
  return result;
}

unint64_t sub_254DFA17C()
{
  unint64_t result = qword_269E169E8;
  if (!qword_269E169E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169E8);
  }
  return result;
}

unint64_t sub_254DFA1D4()
{
  unint64_t result = qword_269E169F0;
  if (!qword_269E169F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169F0);
  }
  return result;
}

unint64_t sub_254DFA22C()
{
  unint64_t result = qword_269E169F8;
  if (!qword_269E169F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E169F8);
  }
  return result;
}

unint64_t sub_254DFA284()
{
  unint64_t result = qword_269E16A00;
  if (!qword_269E16A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A00);
  }
  return result;
}

unint64_t sub_254DFA2DC()
{
  unint64_t result = qword_269E16A08;
  if (!qword_269E16A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A08);
  }
  return result;
}

unint64_t sub_254DFA334()
{
  unint64_t result = qword_269E16A10;
  if (!qword_269E16A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A10);
  }
  return result;
}

unint64_t sub_254DFA38C()
{
  unint64_t result = qword_269E16A18;
  if (!qword_269E16A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A18);
  }
  return result;
}

unint64_t sub_254DFA3E4()
{
  unint64_t result = qword_269E16A20;
  if (!qword_269E16A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A20);
  }
  return result;
}

unint64_t sub_254DFA43C()
{
  unint64_t result = qword_269E16A28;
  if (!qword_269E16A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A28);
  }
  return result;
}

unint64_t sub_254DFA494()
{
  unint64_t result = qword_269E16A30;
  if (!qword_269E16A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A30);
  }
  return result;
}

unint64_t sub_254DFA4EC()
{
  unint64_t result = qword_269E16A38;
  if (!qword_269E16A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A38);
  }
  return result;
}

unint64_t sub_254DFA544()
{
  unint64_t result = qword_269E16A40;
  if (!qword_269E16A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A40);
  }
  return result;
}

unint64_t sub_254DFA59C()
{
  unint64_t result = qword_269E16A48;
  if (!qword_269E16A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A48);
  }
  return result;
}

unint64_t sub_254DFA5F4()
{
  unint64_t result = qword_269E16A50;
  if (!qword_269E16A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A50);
  }
  return result;
}

unint64_t sub_254DFA64C()
{
  unint64_t result = qword_269E16A58;
  if (!qword_269E16A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A58);
  }
  return result;
}

unint64_t sub_254DFA6A4()
{
  unint64_t result = qword_269E16A60;
  if (!qword_269E16A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A60);
  }
  return result;
}

unint64_t sub_254DFA6FC()
{
  unint64_t result = qword_269E16A68;
  if (!qword_269E16A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A68);
  }
  return result;
}

unint64_t sub_254DFA754()
{
  unint64_t result = qword_269E16A70;
  if (!qword_269E16A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A70);
  }
  return result;
}

unint64_t sub_254DFA7AC()
{
  unint64_t result = qword_269E16A78;
  if (!qword_269E16A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A78);
  }
  return result;
}

unint64_t sub_254DFA804()
{
  unint64_t result = qword_269E16A80;
  if (!qword_269E16A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A80);
  }
  return result;
}

unint64_t sub_254DFA85C()
{
  unint64_t result = qword_269E16A88;
  if (!qword_269E16A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A88);
  }
  return result;
}

unint64_t sub_254DFA8B4()
{
  unint64_t result = qword_269E16A90;
  if (!qword_269E16A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A90);
  }
  return result;
}

unint64_t sub_254DFA90C()
{
  unint64_t result = qword_269E16A98;
  if (!qword_269E16A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16A98);
  }
  return result;
}

unint64_t sub_254DFA964()
{
  unint64_t result = qword_269E16AA0;
  if (!qword_269E16AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16AA0);
  }
  return result;
}

unint64_t sub_254DFA9BC()
{
  unint64_t result = qword_269E16AA8;
  if (!qword_269E16AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16AA8);
  }
  return result;
}

unint64_t sub_254DFAA14()
{
  unint64_t result = qword_269E16AB0;
  if (!qword_269E16AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16AB0);
  }
  return result;
}

unint64_t sub_254DFAA6C()
{
  unint64_t result = qword_269E16AB8;
  if (!qword_269E16AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16AB8);
  }
  return result;
}

unint64_t sub_254DFAAC4()
{
  unint64_t result = qword_269E16AC0;
  if (!qword_269E16AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16AC0);
  }
  return result;
}

uint64_t sub_254DFAB18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5374736575716572 && a2 == 0xED00007375746174 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000254E570A0 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465747563657865 && a2 == 0xEF7344496C6F6F54 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000254E4FE30 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6F43726F727265 && a2 == 0xEE00746E656E6F70)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_254DFADF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C65636E6163 && a2 == 0xE800000000000000 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656E6F646E616261 && a2 == 0xE900000000000064 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_254DFB080(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254E51DD0 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6552737574617473 && a2 == 0xEC0000006E6F7361 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEB000000006E6F69 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000254E570C0 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254E570E0 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000254E57100 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254E57120 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x747461506E617073 && a2 == 0xEB000000006E7265)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_254DFB418(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7475626972747461 && a2 == 0xEF687461506E6F69;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000254E57140 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x75716552746F6F72 && a2 == 0xED00006449747365 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x526572756C696166 && a2 == 0xED00006E6F736165)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_254DFB638(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617453656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_254DFB750(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C65636E6163 && a2 == 0xE800000000000000 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_254DFB910(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6769626D61736964 && a2 == 0xEE006E6F69746175 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616D7269666E6F63 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_254DFBA9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x30303169726973 && a2 == 0xE700000000000000;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_254DFBB90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1769105779 && a2 == 0xE400000000000000;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_254DFBC74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_254DFBCDC()
{
  unint64_t result = qword_269E16AC8;
  if (!qword_269E16AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16AC8);
  }
  return result;
}

void *sub_254DFBD48(uint64_t *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E1B8]), sel_init);
  int v3 = v2;
  if (v2)
  {
    unsigned int v4 = (void *)a1[2];
    id v5 = v2;
    if (v4) {
      unsigned int v4 = (void *)sub_254E157E8();
    }
    objc_msgSend(v3, sel_setAssistantSchemaKind_, v4);

    sub_254DFBF94();
    id v6 = v3;
    uint64_t v7 = (void *)sub_254E158C8();
    objc_msgSend(v6, sel_setTools_, v7);
  }
  uint64_t v8 = *(void *)(*a1 + 16);
  if (v8)
  {
    uint64_t v17 = *a1;
    swift_bridgeObjectRetain();
    do
    {
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E1B0]), sel_init);
      if (v9)
      {
        uint64_t v10 = v9;
        if (v3)
        {
          id v11 = v3;
          id v12 = objc_msgSend(v11, sel_tools);
          if (v12)
          {
            int v13 = v12;
            sub_254DFBF94();
            uint64_t v14 = sub_254E158D8();

            id v15 = v10;
            MEMORY[0x25A27ED70]();
            if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_254E15908();
            }
            sub_254E15928();
            sub_254E158F8();
            if (v14)
            {
              uint64_t v10 = (void *)sub_254E158C8();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v10 = 0;
            }
            objc_msgSend(v11, sel_setTools_, v10, v17);
          }
          else
          {
            objc_msgSend(v11, sel_setTools_, 0);
            swift_bridgeObjectRelease();
          }
        }
        else
        {
        }
      }
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  return v3;
}

unint64_t sub_254DFBF94()
{
  unint64_t result = qword_269E16AD0;
  if (!qword_269E16AD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269E16AD0);
  }
  return result;
}

uint64_t sub_254DFBFD4()
{
  return sub_254E15F08();
}

uint64_t sub_254DFC10C()
{
  return sub_254E15F08();
}

uint64_t sub_254DFC194()
{
  return sub_254E15F08();
}

uint64_t sub_254DFC21C()
{
  return sub_254E15F08();
}

uint64_t sub_254DFC314()
{
  return sub_254E15F08();
}

uint64_t sub_254DFC3BC()
{
  return sub_254E15F08();
}

uint64_t sub_254DFC464()
{
  return sub_254E15F08();
}

void *sub_254DFC560()
{
  v9[1] = *(id *)MEMORY[0x263EF8340];
  id v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 16))
  {
    v9[0] = 0;
    int v3 = objc_msgSend((id)BiomeLibrary(), sel_streamWithIdentifier_error_, v2, v9);
    swift_unknownObjectRelease();
    if (v3)
    {
      id v4 = v9[0];
    }
    else
    {
      int v3 = v9[0];
      sub_254E14C48();

      swift_willThrow();
    }
    sub_25471E34C(v2, v1, 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    int v3 = (void *)sub_254E155B8();
    if (v3[2])
    {
      unint64_t v5 = sub_254848AD8((uint64_t)v2, v1);
      if (v6)
      {
        id v7 = *(id *)(v3[7] + 8 * v5);
        swift_bridgeObjectRelease();
        sub_25471E34C(v2, v1, 0);
        return v7;
      }
    }
    swift_bridgeObjectRelease();
    sub_25471E34C(v2, v1, 0);
    sub_254B92838();
    swift_allocError();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_254DFC720()
{
  *(void *)(v1 + 48) = v0;
  return MEMORY[0x270FA2498](sub_254DFC740, 0, 0);
}

uint64_t sub_254DFC740()
{
  uint64_t v24 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  v0[7] = v2;
  uint64_t v3 = v1 + v2;
  uint64_t v23 = *(void *)(v1 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269E10D18) + 40));
  if (CollectionPolicy.canCollect()())
  {
    id v4 = sub_254DFC560();
    v0[8] = v4;
    int v13 = v4;
    uint64_t v14 = sub_254E14E08();
    v0[9] = v14;
    v0[10] = *(void *)(v14 - 8);
    uint64_t v15 = swift_task_alloc();
    v0[11] = v15;
    id v16 = objc_msgSend(v13, sel_configuration);
    id v17 = objc_msgSend(v16, sel_streamUUID);

    sub_254E14DD8();
    uint64_t v18 = (void *)sub_254E157E8();
    id v19 = objc_msgSend(v13, sel_publisherWithUseCase_, v18);

    v0[12] = sub_254DFCE98(v19, v15);
    swift_beginAccess();
    uint64_t v20 = (void *)swift_task_alloc();
    v0[13] = v20;
    void *v20 = v0;
    v20[1] = sub_254DFCB70;
    return sub_254838C18();
  }
  else
  {
    if (qword_26B26A608 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_254E15718();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B26A5F0);
    swift_retain_n();
    char v6 = sub_254E15708();
    os_log_type_t v7 = sub_254E15A28();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v23 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v10 = *(void *)v3;
      if (*(unsigned char *)(v3 + 16))
      {
        uint64_t v10 = sub_254E15818();
        unint64_t v12 = v11;
      }
      else
      {
        unint64_t v12 = *(void *)(v3 + 8);
        swift_bridgeObjectRetain();
      }
      v0[5] = sub_254658670(v10, v12, &v23);
      sub_254E15B08();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_2545B9000, v6, v7, "Skipping %s: collection demands were not met", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v9, -1, -1);
      MEMORY[0x25A27FC50](v8, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    uint64_t v22 = (uint64_t (*)(void))v0[1];
    return v22();
  }
}

uint64_t sub_254DFCB70()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_254DFCDEC;
  }
  else
  {
    swift_endAccess();
    uint64_t v2 = sub_254DFCC8C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_254DFCC8C()
{
  uint64_t v1 = v0[12];
  if (v1)
  {
    if (*(unsigned char *)(v0[6] + v0[7] + 16)) {
      sub_254E15818();
    }
    else {
      swift_bridgeObjectRetain();
    }
    uint64_t v4 = v0[10];
    uint64_t v3 = v0[11];
    char v6 = (void *)v0[8];
    uint64_t v5 = v0[9];
    swift_unknownObjectRetain();
    sub_254E15878();
    swift_bridgeObjectRelease();
    sub_254DFE0B4(v1, 6253922, 0xE300000000000000);

    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    uint64_t v2 = (void *)v0[8];
    (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  }
  swift_task_dealloc();
  os_log_type_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_254DFCDEC()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = (void *)v0[8];
  swift_endAccess();

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_254DFCE98(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  id v36 = a1;
  uint64_t v4 = v2 + *(void *)(*(void *)v2 + 120);
  uint64_t aBlock = 6253922;
  unint64_t v43 = 0xE300000000000000;
  if (*(unsigned char *)(v4 + 16)) {
    sub_254E15818();
  }
  else {
    swift_bridgeObjectRetain();
  }
  sub_254E15878();
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_254DFDB4C(aBlock, v43);
  swift_bridgeObjectRelease();
  int v5 = *(_DWORD *)(v4 + 20);
  int v33 = *(unsigned __int8 *)(v4 + 24);
  int v34 = v5;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  uint64_t v38 = v6 + 16;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  v31[1] = v7 + 16;
  uint64_t v46 = sub_254DDA930;
  uint64_t v47 = v6;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v43 = 1107296256;
  uint64_t v44 = sub_254DFD464;
  uint64_t v45 = &block_descriptor_4;
  uint64_t v32 = _Block_copy(&aBlock);
  uint64_t v37 = v6;
  swift_retain();
  swift_release();
  uint64_t v8 = sub_254E14E08();
  v31[2] = v31;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v35, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v12 + v10 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v14 = (v12 + v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v12, v11, v8);
  unint64_t v16 = v15 + v13;
  uint64_t v17 = v7;
  *(_DWORD *)unint64_t v16 = v34;
  *(unsigned char *)(v16 + 4) = v33;
  *(void *)(v15 + v14) = v7;
  uint64_t v46 = sub_254E007B0;
  uint64_t v47 = v15;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v43 = 1107296256;
  uint64_t v44 = sub_254DFDAF0;
  uint64_t v45 = &block_descriptor_17_0;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v19 = v32;
  id v20 = objc_msgSend(v36, sel_drivableSinkWithBookmark_completion_shouldContinue_, v39, v32, v18);
  _Block_release(v18);
  _Block_release(v19);

  if (qword_26B26A608 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_254E15718();
  __swift_project_value_buffer(v21, (uint64_t)qword_26B26A5F0);
  uint64_t v22 = v37;
  swift_retain_n();
  swift_retain();
  uint64_t v23 = sub_254E15708();
  os_log_type_t v24 = sub_254E15A38();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t aBlock = v26;
    *(_DWORD *)uint64_t v25 = 134218242;
    swift_beginAccess();
    uint64_t v41 = *(void *)(v17 + 16);
    sub_254E15B08();
    swift_release();
    *(_WORD *)(v25 + 12) = 2080;
    swift_beginAccess();
    uint64_t v40 = *(void *)(v22 + 16);
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B26A680);
    uint64_t v27 = sub_254E15858();
    uint64_t v40 = sub_254658670(v27, v28, &aBlock);
    sub_254E15B08();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2545B9000, v23, v24, "Processed %ld events. End Bookmark: %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v26, -1, -1);
    MEMORY[0x25A27FC50](v25, -1, -1);

    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
    swift_release_n();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v29 = *(void *)(v22 + 16);
  swift_unknownObjectRetain();
  swift_release();
  swift_release();
  return v29;
}

void sub_254DFD464(uint64_t a1, void *a2, uint64_t a3)
{
  int v5 = *(void (**)(id, uint64_t))(a1 + 32);
  swift_retain();
  id v6 = a2;
  swift_unknownObjectRetain();
  v5(v6, a3);
  swift_release();
  swift_unknownObjectRelease();
}

uint64_t sub_254DFD4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(*(void *)a2 + 136);
  if (*(void *)(a2 + v8))
  {
    swift_retain();
    sub_254E14E98();
    swift_release();
  }
  swift_unknownObjectRetain();
  self;
  uint64_t v9 = (void *)swift_dynamicCastObjCClass();
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, sel_eventBodyData);
    if (!v11)
    {
      if (qword_26B26A608 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_254E15718();
      __swift_project_value_buffer(v23, (uint64_t)qword_26B26A5F0);
      os_log_type_t v24 = sub_254E15708();
      os_log_type_t v25 = sub_254E15A58();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl(&dword_2545B9000, v24, v25, "Event missing body data", v26, 2u);
        MEMORY[0x25A27FC50](v26, -1, -1);
      }

      goto LABEL_28;
    }
    unint64_t v12 = v11;
    uint64_t v13 = sub_254E14C88();
    unint64_t v15 = v14;

    if ((a4 & 0x100000000) != 0 || objc_msgSend(v10, sel_eventBodyDataVersion) == a4)
    {
      unint64_t v16 = (void *)MEMORY[0x25A27F530]();
      objc_msgSend(v10, sel_timestamp);
      double v18 = v17;
      swift_beginAccess();
      sub_254838818(v13, v15, v18);
      uint64_t v27 = (void *)(a5 + 16);
      swift_endAccess();
      swift_beginAccess();
      if (!__OFADD__(*v27, 1))
      {
        ++*v27;
        if (*(void *)(a2 + v8))
        {
          swift_retain();
          sub_254E14E88();
          sub_2545DDDFC(v13, v15);
          swift_release();
        }
        else
        {
          sub_2545DDDFC(v13, v15);
        }
LABEL_28:
        swift_unknownObjectRelease();
        return 1;
      }
      __break(1u);
    }
    else if (qword_26B26A608 == -1)
    {
LABEL_24:
      uint64_t v28 = sub_254E15718();
      __swift_project_value_buffer(v28, (uint64_t)qword_26B26A5F0);
      uint64_t v29 = sub_254E15708();
      os_log_type_t v30 = sub_254E15A48();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_2545B9000, v29, v30, "Ignore incompatible data version", v31, 2u);
        MEMORY[0x25A27FC50](v31, -1, -1);
      }
      sub_2545DDDFC(v13, v15);
      swift_unknownObjectRelease();

      return 1;
    }
    swift_once();
    goto LABEL_24;
  }
  swift_unknownObjectRelease();
  if (qword_26B26A608 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_254E15718();
  __swift_project_value_buffer(v19, (uint64_t)qword_26B26A5F0);
  id v20 = sub_254E15708();
  os_log_type_t v21 = sub_254E15A58();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_2545B9000, v20, v21, "Can't get BMStoreEvent out of the stream", v22, 2u);
    MEMORY[0x25A27FC50](v22, -1, -1);
  }

  return 1;
}

uint64_t sub_254DFDAF0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v1 & 1;
}

uint64_t sub_254DFDB4C(uint64_t a1, unint64_t a2)
{
  v37[4] = *(id *)MEMORY[0x263EF8340];
  int v5 = *(void **)(v2 + 16);
  id v6 = (void *)sub_254E157E8();
  id v7 = objc_msgSend(v5, sel_valueForKey_, v6);

  if (v7)
  {
    sub_254E15B28();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v36, 0, sizeof(v36));
  }
  sub_25465D2C0((uint64_t)v36, (uint64_t)v37, &qword_26B270080);
  if (!v37[3])
  {
    sub_2545C9374((uint64_t)v37, &qword_26B270080);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v8 = self;
  id v9 = objc_msgSend(self, sel_bm_allowedClassesForSecureCodingBMBookmark);
  sub_254E159B8();

  uint64_t v10 = (void *)sub_254E159A8();
  swift_bridgeObjectRelease();
  id v11 = (void *)sub_254E14C68();
  v37[0] = 0;
  id v12 = objc_msgSend(v8, sel_unarchivedObjectOfClasses_fromData_error_, v10, v11, v37);

  if (!v12)
  {
    id v23 = v37[0];
    os_log_type_t v24 = (void *)sub_254E14C48();

    swift_willThrow();
    if (qword_26B26A608 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_254E15718();
    __swift_project_value_buffer(v25, (uint64_t)qword_26B26A5F0);
    id v26 = v24;
    id v27 = v24;
    uint64_t v28 = sub_254E15708();
    os_log_type_t v29 = sub_254E15A48();
    if (os_log_type_enabled(v28, v29))
    {
      os_log_type_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v30 = 138412290;
      id v32 = v24;
      int v33 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v37[0] = v33;
      sub_254E15B08();
      *uint64_t v31 = v33;

      _os_log_impl(&dword_2545B9000, v28, v29, "Error decoding bookmark: %@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269E163F0);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v31, -1, -1);
      MEMORY[0x25A27FC50](v30, -1, -1);
      sub_2545DDDFC(v34, v35);
    }
    else
    {
      sub_2545DDDFC(v34, v35);
    }
    return 0;
  }
  id v13 = v37[0];
  sub_254E15B28();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B26A670);
  if (swift_dynamicCast()) {
    uint64_t v14 = *(void *)&v36[0];
  }
  else {
    uint64_t v14 = 0;
  }
  if (qword_26B26A608 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_254E15718();
  __swift_project_value_buffer(v15, (uint64_t)qword_26B26A5F0);
  swift_bridgeObjectRetain_n();
  unint64_t v16 = sub_254E15708();
  os_log_type_t v17 = sub_254E15A38();
  if (os_log_type_enabled(v16, v17))
  {
    double v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    v37[0] = v19;
    *(_DWORD *)double v18 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&v36[0] = sub_254658670(a1, a2, (uint64_t *)v37);
    sub_254E15B08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2545B9000, v16, v17, "Bookmark for %s found", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v19, -1, -1);
    MEMORY[0x25A27FC50](v18, -1, -1);
    unint64_t v21 = v35;
    uint64_t v20 = v34;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v20 = v34;
    unint64_t v21 = v35;
  }
  sub_2545DDDFC(v20, v21);

  return v14;
}

void sub_254DFE0B4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  v32[1] = *(id *)MEMORY[0x263EF8340];
  if (qword_26B26A608 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_254E15718();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B26A5F0);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_254E15708();
  os_log_type_t v9 = sub_254E15A38();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    v32[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_254658670(a2, a3, (uint64_t *)v32);
    sub_254E15B08();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2545B9000, v8, v9, "Saving bookmark for %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v11, -1, -1);
    MEMORY[0x25A27FC50](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v12 = self;
  v32[0] = 0;
  id v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v32);
  id v14 = v32[0];
  if (v13)
  {
    uint64_t v15 = sub_254E14C88();
    unint64_t v17 = v16;

    double v18 = *(void **)(v4 + 16);
    sub_2545D7BF0(v15, v17);
    uint64_t v19 = (void *)sub_254E14C68();
    sub_2545DDDFC(v15, v17);
    uint64_t v20 = (void *)sub_254E157E8();
    objc_msgSend(v18, sel_setValue_forKey_, v19, v20);
    sub_2545DDDFC(v15, v17);
  }
  else
  {
    unint64_t v21 = v14;
    uint64_t v22 = (void *)sub_254E14C48();

    swift_willThrow();
    id v23 = v22;
    id v24 = v22;
    uint64_t v25 = sub_254E15708();
    os_log_type_t v26 = sub_254E15A48();
    if (os_log_type_enabled(v25, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)id v27 = 138412290;
      id v29 = v22;
      os_log_type_t v30 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v32[0] = v30;
      sub_254E15B08();
      *uint64_t v28 = v30;

      _os_log_impl(&dword_2545B9000, v25, v26, "Error encoding bookmark: %@", v27, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269E163F0);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v28, -1, -1);
      MEMORY[0x25A27FC50](v27, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_254DFE4A8()
{
  uint64_t v0 = sub_254E15718();
  __swift_allocate_value_buffer(v0, qword_269E16AE0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_269E16AE0);
  if (qword_26B26A5E8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B270798);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void BiomeUploadProcessor.init(biomeUseCase:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v7 = (void *)sub_254E157E8();
  id v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  if (v8)
  {
    sub_254E14EB8();
    swift_allocObject();
    uint64_t v9 = sub_254E14EA8();
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3C180]), sel_init);
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3C178]), sel_initWithContext_, v10);

    __swift_instantiateConcreteTypeFromMangledName(&qword_269E16AF8);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_254E1A030;
    uint64_t v13 = type metadata accessor for RequireDiagnosticsAndUsageOptIn();
    uint64_t v14 = swift_allocObject();
    *(void *)(v12 + 56) = v13;
    *(void *)(v12 + 64) = &protocol witness table for RequireDiagnosticsAndUsageOptIn;
    *(void *)(v12 + 32) = v14;
    uint64_t v15 = type metadata accessor for RequireInternalBuild();
    uint64_t v16 = swift_allocObject();
    *(void *)(v12 + 96) = v15;
    *(void *)(v12 + 104) = &protocol witness table for RequireInternalBuild;
    *(void *)(v12 + 72) = v16;
    *a3 = v8;
    a3[1] = v9;
    a3[2] = v11;
    a3[3] = a1;
    a3[4] = a2;
    a3[5] = v12;
  }
  else
  {
    __break(1u);
  }
}

uint64_t BiomeUploadProcessor.doWork(context:)()
{
  *(void *)(v1 + 40) = type metadata accessor for DillSession(0);
  *(void *)(v1 + 48) = swift_task_alloc();
  *(void *)(v1 + 56) = type metadata accessor for BiomeProvisionalUploader();
  *(void *)(v1 + 64) = swift_task_alloc();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D18);
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = *(void *)(v2 - 8);
  *(void *)(v1 + 88) = swift_task_alloc();
  *(void *)(v1 + 96) = swift_task_alloc();
  *(void *)(v1 + 104) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B26A660);
  *(void *)(v1 + 112) = swift_task_alloc();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = *v0;
  *(void *)(v1 + 120) = v3;
  *(void *)(v1 + 128) = v4;
  *(void *)(v1 + 136) = v0[3];
  *(_OWORD *)(v1 + 144) = *((_OWORD *)v0 + 2);
  return MEMORY[0x270FA2498](sub_254DFE8AC, 0, 0);
}

uint64_t sub_254DFE8AC()
{
  uint64_t v56 = v0;
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 128);
  uint64_t v2 = (void *)sub_254E157E8();
  LODWORD(v1) = objc_msgSend(v1, sel_BOOLForKey_, v2);

  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E16B20);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_254E1A010;
    unint64_t v8 = v3 + v7;
    uint64_t v9 = sub_254E157E8();
    uint64_t v10 = sub_254E15748();
    id v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    v11(v5, 1, 1, v10);
    sub_254E15758();
    v11(v4, 0, 1, v10);
    sub_254E00188();
    swift_bridgeObjectRetain();
    static BMIntelligenceFlowTranscriptDatastreamEvent.messageFilteringPolicy()((uint64_t)&v53);
    uint64_t v12 = v53;
    LOBYTE(v5) = v54;
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v15 = *(void *)(v0 + 112);
    uint64_t v14 = *(void *)(v0 + 120);
    uint64_t v16 = *(int **)(v0 + 72);
    *(void *)unint64_t v8 = v9;
    *(void *)(v8 + 8) = 0;
    *(unsigned char *)(v8 + 16) = 1;
    *(_DWORD *)(v8 + 20) = 0;
    *(unsigned char *)(v8 + 24) = 1;
    sub_25465D2C0(v14, v8 + v16[8], &qword_26B26A660);
    sub_25465D2C0(v15, v8 + v16[9], &qword_26B26A660);
    *(void *)(v8 + v16[10]) = v13;
    unint64_t v17 = v8 + v16[11];
    *(void *)unint64_t v17 = v12;
    *(unsigned char *)(v17 + 8) = v5;
    double v18 = (uint64_t (**)@<X0>(uint64_t@<X0>, unint64_t@<X1>, uint64_t *@<X8>))(v8 + v16[12]);
    *double v18 = sub_254DFFCC4;
    v18[1] = 0;
    *(void *)(v8 + v16[13]) = MEMORY[0x263F8EE78];
  }
  *(void *)(v0 + 160) = v3;
  uint64_t v19 = *(void *)(v3 + 16);
  *(void *)(v0 + 168) = v19;
  if (v19)
  {
    uint64_t v20 = *(void *)(v0 + 80);
    unint64_t v21 = *(uint64_t **)(v0 + 48);
    int v22 = *(_DWORD *)(v20 + 80);
    *(_DWORD *)(v0 + 216) = v22;
    *(void *)(v0 + 176) = *(void *)(v20 + 72);
    *(void *)(v0 + 184) = 0;
    uint64_t v51 = *(void *)(v0 + 136);
    uint64_t v52 = *(void *)(v0 + 144);
    uint64_t v50 = *(void **)(v0 + 128);
    uint64_t v24 = *(void *)(v0 + 96);
    uint64_t v23 = *(void *)(v0 + 104);
    uint64_t v49 = v23;
    uint64_t v25 = *(int **)(v0 + 56);
    uint64_t v26 = *(void *)(v0 + 64);
    sub_254E000B8(v3 + ((v22 + 32) & ~(unint64_t)v22), v23);
    sub_254E000B8(v23, v24);
    uint64_t v27 = v25[7];
    sub_254E14EB8();
    swift_allocObject();
    *(void *)(v26 + v27) = sub_254E14EA8();
    sub_254E000B8(v24, v26);
    sub_254E000B8(v24, v26 + v25[5]);
    uint64_t v28 = sub_254E14E08();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = swift_task_alloc();
    sub_254E14DF8();
    *(void *)(v0 + 220) = sub_254E14DE8();
    *(unsigned char *)(v0 + 228) = v31;
    *(unsigned char *)(v0 + 229) = v32;
    *(unsigned char *)(v0 + 230) = v33;
    *(unsigned char *)(v0 + 231) = v34;
    *(unsigned char *)(v0 + 232) = v35;
    *(unsigned char *)(v0 + 233) = v36;
    *(unsigned char *)(v0 + 234) = v37;
    *(unsigned char *)(v0 + 235) = v38;
    uint64_t v39 = sub_254E00004((unsigned char *)(v0 + 220), 16);
    uint64_t v41 = v40;
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v28);
    _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
    *unint64_t v21 = v39;
    v21[1] = v41;
    v21[2] = MEMORY[0x263F8EE78];
    sub_2545C9374(v24, &qword_269E10D18);
    swift_task_dealloc();
    sub_254E00120((uint64_t)v21, v26 + v25[6], type metadata accessor for DillSession);
    sub_254E000B8(v49, v24);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269E16B10);
    uint64_t v42 = (void *)swift_allocObject();
    *(void *)(v0 + 192) = v42;
    *(void *)((char *)v42 + *(void *)(*v42 + 136)) = 0;
    sub_254E00120(v26, (uint64_t)v42 + *(void *)(*v42 + 112), (uint64_t (*)(void))type metadata accessor for BiomeProvisionalUploader);
    sub_25465D2C0(v24, (uint64_t)v42 + *(void *)(*v42 + 120), &qword_269E10D18);
    v42[2] = v50;
    unint64_t v43 = (void *)((char *)v42 + *(void *)(*v42 + 128));
    *unint64_t v43 = v51;
    v43[1] = v52;
    *(void *)((char *)v42 + *(void *)(*v42 + 136)) = 0;
    id v44 = v50;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v45 = dword_269E16B08;
    uint64_t v46 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v46;
    void *v46 = v0;
    v46[1] = sub_254DFEF50;
    return ((uint64_t (__cdecl *)())((char *)&dword_269E16B08 + v45))();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
    return v48();
  }
}

uint64_t sub_254DFEF50()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_254DFF550;
  }
  else {
    uint64_t v2 = sub_254DFF090;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_254DFF090()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  sub_2545C9374(v1, &qword_269E10D18);
  uint64_t v2 = *(void *)(v0 + 184) + 1;
  if (v2 == *(void *)(v0 + 168))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    *(void *)(v0 + 184) = v2;
    uint64_t v32 = *(void *)(v0 + 136);
    uint64_t v33 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v30 = v5;
    char v31 = *(void **)(v0 + 128);
    unint64_t v7 = *(int **)(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v9 = *(uint64_t **)(v0 + 48);
    sub_254E000B8(*(void *)(v0 + 160)+ ((*(unsigned __int8 *)(v0 + 216) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 216))+ *(void *)(v0 + 176) * v2, v5);
    sub_254E000B8(v5, v6);
    uint64_t v10 = v7[7];
    sub_254E14EB8();
    swift_allocObject();
    *(void *)(v8 + v10) = sub_254E14EA8();
    sub_254E000B8(v6, v8);
    sub_254E000B8(v6, v8 + v7[5]);
    uint64_t v11 = sub_254E14E08();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = swift_task_alloc();
    sub_254E14DF8();
    *(void *)(v0 + 220) = sub_254E14DE8();
    *(unsigned char *)(v0 + 228) = v14;
    *(unsigned char *)(v0 + 229) = v15;
    *(unsigned char *)(v0 + 230) = v16;
    *(unsigned char *)(v0 + 231) = v17;
    *(unsigned char *)(v0 + 232) = v18;
    *(unsigned char *)(v0 + 233) = v19;
    *(unsigned char *)(v0 + 234) = v20;
    *(unsigned char *)(v0 + 235) = v21;
    uint64_t v22 = sub_254E00004((unsigned char *)(v0 + 220), 16);
    uint64_t v24 = v23;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v11);
    _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
    *uint64_t v9 = v22;
    v9[1] = v24;
    id v9[2] = MEMORY[0x263F8EE78];
    sub_2545C9374(v6, &qword_269E10D18);
    swift_task_dealloc();
    sub_254E00120((uint64_t)v9, v8 + v7[6], type metadata accessor for DillSession);
    sub_254E000B8(v30, v6);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269E16B10);
    uint64_t v25 = (void *)swift_allocObject();
    *(void *)(v0 + 192) = v25;
    *(void *)((char *)v25 + *(void *)(*v25 + 136)) = 0;
    sub_254E00120(v8, (uint64_t)v25 + *(void *)(*v25 + 112), (uint64_t (*)(void))type metadata accessor for BiomeProvisionalUploader);
    sub_25465D2C0(v6, (uint64_t)v25 + *(void *)(*v25 + 120), &qword_269E10D18);
    v25[2] = v31;
    uint64_t v26 = (void *)((char *)v25 + *(void *)(*v25 + 128));
    *uint64_t v26 = v32;
    v26[1] = v33;
    *(void *)((char *)v25 + *(void *)(*v25 + 136)) = 0;
    id v27 = v31;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v28 = dword_269E16B08;
    uint64_t v29 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_254DFEF50;
    return ((uint64_t (__cdecl *)())((char *)&dword_269E16B08 + v28))();
  }
}

uint64_t sub_254DFF550()
{
  if (qword_269E0C0E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = sub_254E15718();
  __swift_project_value_buffer(v4, (uint64_t)qword_269E16AE0);
  sub_254E000B8(v2, v3);
  id v5 = v1;
  id v6 = v1;
  unint64_t v7 = sub_254E15708();
  os_log_type_t v8 = sub_254E15A48();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(void *)(v0 + 16) = v12;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v13 = *(void *)v9;
    uint64_t v57 = v12;
    log = v7;
    if (*(unsigned char *)(v9 + 16))
    {
      uint64_t v13 = sub_254E15818();
      unint64_t v15 = v14;
      uint64_t v16 = *(void *)(v0 + 88);
    }
    else
    {
      uint64_t v16 = *(void *)(v0 + 88);
      unint64_t v15 = *(void *)(v16 + 8);
      swift_bridgeObjectRetain();
    }
    char v21 = *(void **)(v0 + 208);
    uint64_t v54 = *(void *)(v0 + 104);
    *(void *)(v0 + 24) = sub_254658670(v13, v15, (uint64_t *)(v0 + 16));
    sub_254E15B08();
    swift_bridgeObjectRelease();
    sub_2545C9374(v16, &qword_269E10D18);
    *(_WORD *)(v10 + 12) = 2112;
    id v22 = v21;
    uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v23;
    sub_254E15B08();
    *uint64_t v11 = v23;

    _os_log_impl(&dword_2545B9000, log, v8, "Error uploading %s: %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269E163F0);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v57, -1, -1);
    MEMORY[0x25A27FC50](v10, -1, -1);
    swift_release();

    uint64_t v20 = v54;
  }
  else
  {
    char v17 = *(void **)(v0 + 208);
    uint64_t v18 = *(void *)(v0 + 104);
    uint64_t v19 = *(void *)(v0 + 88);
    swift_release();

    sub_2545C9374(v19, &qword_269E10D18);
    uint64_t v20 = v18;
  }
  sub_2545C9374(v20, &qword_269E10D18);
  uint64_t v24 = *(void *)(v0 + 184) + 1;
  if (v24 == *(void *)(v0 + 168))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
  else
  {
    *(void *)(v0 + 184) = v24;
    uint64_t v56 = *(void *)(v0 + 136);
    uint64_t v58 = *(void *)(v0 + 144);
    uint64_t v28 = *(void *)(v0 + 96);
    uint64_t v27 = *(void *)(v0 + 104);
    os_log_t loga = (os_log_t)v27;
    uint64_t v55 = *(void **)(v0 + 128);
    uint64_t v29 = *(int **)(v0 + 56);
    uint64_t v30 = *(void *)(v0 + 64);
    char v31 = *(uint64_t **)(v0 + 48);
    sub_254E000B8(*(void *)(v0 + 160)+ ((*(unsigned __int8 *)(v0 + 216) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 216))+ *(void *)(v0 + 176) * v24, v27);
    sub_254E000B8(v27, v28);
    uint64_t v32 = v29[7];
    sub_254E14EB8();
    swift_allocObject();
    *(void *)(v30 + v32) = sub_254E14EA8();
    sub_254E000B8(v28, v30);
    sub_254E000B8(v28, v30 + v29[5]);
    uint64_t v33 = sub_254E14E08();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = swift_task_alloc();
    sub_254E14DF8();
    *(void *)(v0 + 220) = sub_254E14DE8();
    *(unsigned char *)(v0 + 228) = v36;
    *(unsigned char *)(v0 + 229) = v37;
    *(unsigned char *)(v0 + 230) = v38;
    *(unsigned char *)(v0 + 231) = v39;
    *(unsigned char *)(v0 + 232) = v40;
    *(unsigned char *)(v0 + 233) = v41;
    *(unsigned char *)(v0 + 234) = v42;
    *(unsigned char *)(v0 + 235) = v43;
    uint64_t v44 = sub_254E00004((unsigned char *)(v0 + 220), 16);
    uint64_t v46 = v45;
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v33);
    _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
    *char v31 = v44;
    v31[1] = v46;
    v31[2] = MEMORY[0x263F8EE78];
    sub_2545C9374(v28, &qword_269E10D18);
    swift_task_dealloc();
    sub_254E00120((uint64_t)v31, v30 + v29[6], type metadata accessor for DillSession);
    sub_254E000B8((uint64_t)loga, v28);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269E16B10);
    uint64_t v47 = (void *)swift_allocObject();
    *(void *)(v0 + 192) = v47;
    *(void *)((char *)v47 + *(void *)(*v47 + 136)) = 0;
    sub_254E00120(v30, (uint64_t)v47 + *(void *)(*v47 + 112), (uint64_t (*)(void))type metadata accessor for BiomeProvisionalUploader);
    sub_25465D2C0(v28, (uint64_t)v47 + *(void *)(*v47 + 120), &qword_269E10D18);
    v47[2] = v55;
    uint64_t v48 = (void *)((char *)v47 + *(void *)(*v47 + 128));
    *uint64_t v48 = v56;
    v48[1] = v58;
    *(void *)((char *)v47 + *(void *)(*v47 + 136)) = 0;
    id v49 = v55;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v50 = dword_269E16B08;
    uint64_t v51 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v51;
    *uint64_t v51 = v0;
    v51[1] = sub_254DFEF50;
    return ((uint64_t (__cdecl *)())((char *)&dword_269E16B08 + v50))();
  }
}

uint64_t sub_254DFFCC4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return sub_2545D7BF0(a1, a2);
}

LighthouseDataProcessor::BiomeUploadProcessorError_optional __swiftcall BiomeUploadProcessorError.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_254E15CC8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t BiomeUploadProcessorError.rawValue.getter()
{
  unint64_t result = 0xD000000000000016;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x4364696C61766E69;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_254DFFDD0(char *a1, char *a2)
{
  return sub_254707E60(*a1, *a2);
}

uint64_t sub_254DFFDDC()
{
  return sub_254DFC464();
}

uint64_t sub_254DFFDE4()
{
  return sub_2547085C4();
}

uint64_t sub_254DFFDEC()
{
  return sub_2547086A4();
}

LighthouseDataProcessor::BiomeUploadProcessorError_optional sub_254DFFDF4(Swift::String *a1)
{
  return BiomeUploadProcessorError.init(rawValue:)(*a1);
}

unint64_t sub_254DFFE00@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BiomeUploadProcessorError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_254DFFE28(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_254DFFE60(uint64_t (*a1)(void))
{
  return a1();
}

void sub_254DFFE88(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  id v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_254E15B08();
  *a1 = v7;
  os_log_type_t v8 = *a2;
  if (*a2)
  {
    *os_log_type_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_254DFFF40(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_254E00004(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_254DFFF40(__src, &__src[a2]);
  }
  sub_254E14C38();
  swift_allocObject();
  sub_254E14BF8();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_254E14C58();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_254E000B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254E00120(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_254E00188()
{
  unint64_t result = qword_269E16B28;
  if (!qword_269E16B28)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269E16B28);
  }
  return result;
}

unint64_t sub_254E001CC()
{
  unint64_t result = qword_269E16B30;
  if (!qword_269E16B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16B30);
  }
  return result;
}

unint64_t sub_254E00228()
{
  unint64_t result = qword_269E16B40;
  if (!qword_269E16B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16B40);
  }
  return result;
}

unint64_t sub_254E00280()
{
  unint64_t result = qword_269E16B48;
  if (!qword_269E16B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16B48);
  }
  return result;
}

uint64_t destroy for BiomeUploadProcessor(id *a1)
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BiomeUploadProcessor(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  id v8 = v3;
  swift_retain();
  id v9 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BiomeUploadProcessor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a2 + 16);
  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BiomeUploadProcessor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeUploadProcessor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BiomeUploadProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomeUploadProcessor()
{
  return &type metadata for BiomeUploadProcessor;
}

unsigned char *storeEnumTagSinglePayload for BiomeUploadProcessorError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254E00630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomeUploadProcessorError()
{
  return &type metadata for BiomeUploadProcessorError;
}

uint64_t sub_254E00668()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_254E006A0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_254E006C8()
{
  uint64_t v1 = sub_254E14E08();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_254E007B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_254E14E08() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v8 = *(unsigned int *)(v1 + ((v5 + 3) & 0xFFFFFFFFFFFFFFFCLL)) | ((unint64_t)*(unsigned __int8 *)(v1 + ((v5 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 4) << 32);

  return sub_254DFD4EC(a1, v6, v1 + v4, v8, v7);
}

void AppIntentMetricsDefinitions.clientId.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t AppIntentMetricsDefinitions.dateStamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_254E14D98();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t AppIntentMetricsDefinitions.dateStamp.setter(uint64_t a1)
{
  uint64_t v3 = sub_254E14D98();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AppIntentMetricsDefinitions.dateStamp.modify())()
{
  return nullsub_1;
}

uint64_t AppIntentMetricsDefinitions.executedToolId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for AppIntentMetricsDefinitions()
{
  uint64_t result = qword_269E16B68;
  if (!qword_269E16B68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AppIntentMetricsDefinitions.executedToolId.setter(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AppIntentMetricsDefinitions.executedToolId.modify())()
{
  return nullsub_1;
}

uint64_t AppIntentMetricsDefinitions.runtimeErrorComponent.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AppIntentMetricsDefinitions();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AppIntentMetricsDefinitions.runtimeErrorComponent.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for AppIntentMetricsDefinitions();
  *(unsigned char *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*AppIntentMetricsDefinitions.runtimeErrorComponent.modify())()
{
  return nullsub_1;
}

uint64_t AppIntentMetricsDefinitions.toolCompletionStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 28);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  char v6 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(a1 + 16) = v6;

  return sub_254650A60(v4, v5, v6);
}

uint64_t AppIntentMetricsDefinitions.toolCompletionStatus.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 28);
  uint64_t result = sub_254650B00(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 16) = v4;
  return result;
}

uint64_t (*AppIntentMetricsDefinitions.toolCompletionStatus.modify())()
{
  return nullsub_1;
}

uint64_t AppIntentMetricsDefinitions.errorMessage.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppIntentMetricsDefinitions.errorMessage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AppIntentMetricsDefinitions.errorMessage.modify())()
{
  return nullsub_1;
}

unint64_t sub_254E00CFC(char a1)
{
  unint64_t result = 0x6D61745365746164;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6465747563657865;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x73654D726F727265;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_254E00DD0()
{
  return sub_254E00CFC(*v0);
}

uint64_t sub_254E00DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254E02070(a1, a2);
  *a3 = result;
  return result;
}

void sub_254E00E00(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_254E00E0C(uint64_t a1)
{
  unint64_t v2 = sub_254E010E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254E00E48(uint64_t a1)
{
  unint64_t v2 = sub_254E010E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppIntentMetricsDefinitions.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16B50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254E010E4();
  sub_254E15F48();
  LOBYTE(v13) = 0;
  sub_254E14D98();
  sub_25483F8D8(&qword_269E10D90);
  sub_254E15DE8();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for AppIntentMetricsDefinitions();
    LOBYTE(v13) = 1;
    sub_254E15DB8();
    LOBYTE(v13) = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    char v15 = 2;
    sub_254DF2508();
    sub_254E15DE8();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 28));
    char v11 = *((unsigned char *)v10 + 16);
    long long v13 = *v10;
    char v14 = v11;
    char v15 = 3;
    sub_254DF24B4();
    sub_254E15DE8();
    LOBYTE(v13) = 4;
    sub_254E15DB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_254E010E4()
{
  unint64_t result = qword_269E16B58;
  if (!qword_269E16B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16B58);
  }
  return result;
}

uint64_t AppIntentMetricsDefinitions.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16B60);
  uint64_t v4 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AppIntentMetricsDefinitions();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254E010E4();
  sub_254E15F28();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v29 = v9;
  uint64_t v30 = a1;
  uint64_t v31 = v4;
  uint64_t v28 = (int *)v7;
  uint64_t v10 = sub_254E14D98();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v34) = 0;
  sub_25483F8D8(&qword_269E10DA8);
  uint64_t v14 = v33;
  sub_254E15D58();
  uint64_t v15 = (uint64_t)v29;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v29, v13, v10);
  LOBYTE(v34) = 1;
  uint64_t v16 = sub_254E15D28();
  char v17 = v28;
  uint64_t v18 = (uint64_t *)(v15 + v28[5]);
  *uint64_t v18 = v16;
  v18[1] = v19;
  char v36 = 2;
  sub_254DF2668();
  sub_254E15D58();
  *(unsigned char *)(v15 + v17[6]) = v34;
  char v36 = 3;
  sub_254DF25B0();
  sub_254E15D58();
  v27[1] = 0;
  char v20 = v35;
  uint64_t v21 = v15 + v17[7];
  *(_OWORD *)uint64_t v21 = v34;
  *(unsigned char *)(v21 + 16) = v20;
  LOBYTE(v34) = 4;
  uint64_t v22 = sub_254E15D28();
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v14);
  uint64_t v25 = (uint64_t *)(v15 + v17[8]);
  uint64_t *v25 = v22;
  v25[1] = v24;
  sub_254E015CC(v15, v32);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  return sub_254E01630(v15);
}

uint64_t sub_254E015CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppIntentMetricsDefinitions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254E01630(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppIntentMetricsDefinitions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_254E0168C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AppIntentMetricsDefinitions.init(from:)(a1, a2);
}

uint64_t sub_254E016A4(void *a1)
{
  return AppIntentMetricsDefinitions.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for AppIntentMetricsDefinitions(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_254E14D98();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *((void *)v15 + 1);
    char v18 = v15[16];
    swift_bridgeObjectRetain();
    sub_254650A60(v16, v17, v18);
    *(void *)uint64_t v14 = v16;
    *((void *)v14 + 1) = v17;
    v14[16] = v18;
    uint64_t v19 = a3[8];
    char v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  sub_254650B00(*(void *)(a1 + *(int *)(a2 + 28)), *(void *)(a1 + *(int *)(a2 + 28) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 28) + 16));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)(v14 + 8);
  char v17 = *(unsigned char *)(v14 + 16);
  swift_bridgeObjectRetain();
  sub_254650A60(v15, v16, v17);
  *(void *)uint64_t v13 = v15;
  *(void *)(v13 + 8) = v16;
  *(unsigned char *)(v13 + 16) = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)(a1 + v18);
  char v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  char v15 = *(unsigned char *)(v12 + 16);
  sub_254650A60(*(void *)v12, v14, v15);
  uint64_t v16 = *(void *)v11;
  uint64_t v17 = *(void *)(v11 + 8);
  *(void *)uint64_t v11 = v13;
  *(void *)(v11 + 8) = v14;
  char v18 = *(unsigned char *)(v11 + 16);
  *(unsigned char *)(v11 + 16) = v15;
  sub_254650B00(v16, v17, v18);
  uint64_t v19 = a3[8];
  char v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  void *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(unsigned char *)(v10 + 16) = *(unsigned char *)(v11 + 16);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E14D98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  char v15 = *(unsigned char *)(v14 + 16);
  uint64_t v16 = *(void *)v13;
  uint64_t v17 = *(void *)(v13 + 8);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  char v18 = *(unsigned char *)(v13 + 16);
  *(unsigned char *)(v13 + 16) = v15;
  sub_254650B00(v16, v17, v18);
  uint64_t v19 = a3[8];
  char v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  void *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254E01C20);
}

uint64_t sub_254E01C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_254E14D98();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254E01CF8);
}

uint64_t sub_254E01CF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_254E14D98();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_254E01DB8()
{
  uint64_t result = sub_254E14D98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppIntentMetricsDefinitions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254E01F30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppIntentMetricsDefinitions.CodingKeys()
{
  return &type metadata for AppIntentMetricsDefinitions.CodingKeys;
}

unint64_t sub_254E01F6C()
{
  unint64_t result = qword_269E16B78;
  if (!qword_269E16B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16B78);
  }
  return result;
}

unint64_t sub_254E01FC4()
{
  unint64_t result = qword_269E16B80;
  if (!qword_269E16B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16B80);
  }
  return result;
}

unint64_t sub_254E0201C()
{
  unint64_t result = qword_269E16B88;
  if (!qword_269E16B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16B88);
  }
  return result;
}

uint64_t sub_254E02070(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D61745365746164 && a2 == 0xE900000000000070;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465747563657865 && a2 == 0xEE0064496C6F6F54 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000254E571C0 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000254E571E0 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73654D726F727265 && a2 == 0xEC00000065676173)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

void IFRequestTelemetryRequestLinkMapper.init(bookmarkSuite:)(void *a1@<X8>)
{
  type metadata accessor for DataProcessorBookmarkProvider();
  BOOL v2 = (void *)swift_allocObject();
  id v3 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  unsigned int v4 = (void *)sub_254E157E8();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithSuiteName_, v4);

  v2[2] = v5;
  v2[3] = 0xD000000000000023;
  v2[4] = 0x8000000254E57200;
  v2[5] = 0xD000000000000038;
  v2[6] = 0x8000000254E57230;
  *a1 = v2;
}

uint64_t IFRequestTelemetryRequestLinkMapper.ingest(dataPool:)(uint64_t a1)
{
  v2[8] = a1;
  uint64_t v3 = sub_254E14E48();
  v2[9] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[10] = v4;
  v2[11] = *(void *)(v4 + 64);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *v1;
  v2[12] = v5;
  v2[13] = v6;
  return MEMORY[0x270FA2498](sub_254E02464, 0, 0);
}

uint64_t sub_254E02464()
{
  char v36 = v0;
  uint64_t v1 = sub_254E14D98();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_task_alloc();
  DataProcessorBookmarkProvider.lastCollectionDate.getter(v3);
  if (qword_26B26A248 != -1) {
    swift_once();
  }
  long long v34 = v0 + 2;
  uint64_t v4 = sub_254E15718();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B2707B8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v31(v5, v3, v1);
  uint64_t v6 = sub_254E15708();
  os_log_type_t v7 = sub_254E15A38();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = v3;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v35 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    sub_254719840();
    uint64_t v10 = sub_254E15DF8();
    v0[7] = sub_254658670(v10, v11, &v35);
    sub_254E15B08();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v32(v5, v1);
    _os_log_impl(&dword_2545B9000, v6, v7, "Bookmark: %s", v8, 0xCu);
    swift_arrayDestroy();
    uint64_t v12 = v9;
    uint64_t v3 = v29;
    MEMORY[0x25A27FC50](v12, -1, -1);
    MEMORY[0x25A27FC50](v8, -1, -1);
  }
  else
  {
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v32(v5, v1);
  }

  swift_task_dealloc();
  uint64_t v33 = swift_task_alloc();
  sub_254E14D68();
  sub_25485E904();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B26A6B0);
  uint64_t v13 = swift_task_alloc();
  v31(v13, v3, v1);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v14(v13, 0, 1, v1);
  uint64_t v15 = swift_task_alloc();
  v14(v15, 1, 1, v1);
  id v16 = sub_254732378(v13, v15, 0, 0, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  sub_254E155C8();
  sub_254E03264();
  sub_254E15638();
  uint64_t v17 = v0[13];
  uint64_t v28 = v0[12];
  uint64_t v30 = v3;
  uint64_t v18 = v0[10];
  uint64_t v27 = v0[9];
  uint64_t v26 = v0[8];
  __swift_project_boxed_opaque_existential_1(v34, v0[5]);
  uint64_t v19 = swift_task_alloc();
  v31(v19, v33, v1);
  unint64_t v20 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v17;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v21 + v20, v19, v1);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v28, v26, v27);
  unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v23 + v22, v28, v27);
  swift_retain();
  sub_254E15738();
  swift_release();
  swift_release();
  swift_release();

  v32(v33, v1);
  v32(v30, v1);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

void sub_254E02A98(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  if (*a1)
  {
    id v4 = v3;
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_254E15718();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B2707B8);
    id v6 = v3;
    id v7 = v3;
    uint64_t v17 = sub_254E15708();
    os_log_type_t v8 = sub_254E15A48();
    if (os_log_type_enabled(v17, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      id v11 = v3;
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      sub_254E15B08();
      *uint64_t v10 = v18;

      _os_log_impl(&dword_2545B9000, v17, v8, "Error, sink failed: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269E163F0);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v10, -1, -1);
      MEMORY[0x25A27FC50](v9, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    uint64_t v13 = sub_254E14D98();
    MEMORY[0x270FA5388](v13);
    uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t))(v16 + 16))(v15, a3);
    DataProcessorBookmarkProvider.lastCollectionDate.setter((uint64_t)v15);
  }
}

void sub_254E02D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B26A9E8);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_254E14E78();
  uint64_t v31 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v32 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B270058);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_254E15668();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v33 = (char *)&v28 - v15;
  if (qword_26B26A248 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_254E15718();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B2707B8);
  uint64_t v17 = sub_254E15708();
  os_log_type_t v18 = sub_254E15A38();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = v14;
    uint64_t v20 = v5;
    uint64_t v21 = v19;
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl(&dword_2545B9000, v17, v18, "event received", v19, 2u);
    unint64_t v22 = v21;
    uint64_t v5 = v20;
    uint64_t v14 = v29;
    MEMORY[0x25A27FC50](v22, -1, -1);
  }

  sub_254E154D8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2545C9374((uint64_t)v9, &qword_26B270058);
    char v34 = 5;
    sub_254DD50E0(0xD00000000000001ALL, 0x8000000254E57270, &v34);
  }
  else
  {
    uint64_t v23 = v33;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v33, v9, v10);
    id v24 = sub_254E04994();
    if (v24)
    {
      uint64_t v25 = v24;
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v23, v10);
      uint64_t v26 = v32;
      MonotonicTimestamp.init(biomeTimestamp:)((uint64_t)v14);
      uint64_t v27 = v31;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v4, v26, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v4, 0, 1, v5);
      sub_254E14E38();

      sub_2545C9374((uint64_t)v4, qword_26B26A9E8);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v5);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v33, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v23, v10);
    }
  }
}

unint64_t sub_254E03264()
{
  unint64_t result = qword_26B26AAC8;
  if (!qword_26B26AAC8)
  {
    sub_254E155C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B26AAC8);
  }
  return result;
}

uint64_t sub_254E032BC()
{
  uint64_t v1 = sub_254E14D98();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_254E03388(void **a1)
{
  uint64_t v3 = *(void *)(sub_254E14D98() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_254E02A98(a1, v4, v5);
}

uint64_t sub_254E033FC()
{
  uint64_t v1 = sub_254E14E48();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_254E0348C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_254E14E48() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_254E02D3C(a1, v4);
}

ValueMetadata *type metadata accessor for IFRequestTelemetryRequestLinkMapper()
{
  return &type metadata for IFRequestTelemetryRequestLinkMapper;
}

unint64_t sub_254E0350C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_254E15538();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v25[-v10];
  sub_254E04E84(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2545C9374((uint64_t)v4, &qword_269E16BB0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v11, v4, v5);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v9, v11, v5);
    int v12 = (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 88))(v9, v5);
    if (v12 == *MEMORY[0x263F4EDA8])
    {
      if (qword_26B26A248 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_254E15718();
      __swift_project_value_buffer(v13, (uint64_t)qword_26B2707B8);
      uint64_t v14 = sub_254E15708();
      os_log_type_t v15 = sub_254E15A48();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_2545B9000, v14, v15, "Unknown participant", v16, 2u);
        MEMORY[0x25A27FC50](v16, -1, -1);
      }

      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
    }
    else
    {
      if (v12 == *MEMORY[0x263F4ED98])
      {
        (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
        unsigned __int8 v18 = 0;
        uint64_t v17 = 59;
        goto LABEL_10;
      }
      if (v12 == *MEMORY[0x263F4EDA0])
      {
        (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
        unsigned __int8 v18 = 0;
        uint64_t v17 = 57;
        goto LABEL_10;
      }
      if (v12 == *MEMORY[0x263F4EDB0])
      {
        (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
        unsigned __int8 v18 = 0;
        uint64_t v17 = 58;
        goto LABEL_10;
      }
      if (qword_26B26A248 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_254E15718();
      __swift_project_value_buffer(v20, (uint64_t)qword_26B2707B8);
      uint64_t v21 = sub_254E15708();
      os_log_type_t v22 = sub_254E15A48();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_2545B9000, v21, v22, "Unknown unknown participant", v23, 2u);
        MEMORY[0x25A27FC50](v23, -1, -1);
      }

      id v24 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
      v24(v11, v5);
      v24(v9, v5);
    }
  }
  uint64_t v17 = 0;
  unsigned __int8 v18 = 1;
LABEL_10:
  v25[12] = v18;
  return v17 | ((unint64_t)v18 << 32);
}

id sub_254E03950(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v71 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BB8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v69 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v59 - v7;
  uint64_t v9 = sub_254E14E08();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v72 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
  uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v70 = a1;
  sub_254E15568();
  uint64_t v14 = sub_254E15698();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v8, 1, v14) == 1)
  {
    sub_2545C9374((uint64_t)v8, &qword_269E16BB8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))((char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v9);
LABEL_4:
    sub_2545C9374((uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B26F498);
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_254E15718();
    __swift_project_value_buffer(v18, (uint64_t)qword_26B2707B8);
    uint64_t v19 = sub_254E15708();
    os_log_type_t v20 = sub_254E15A48();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl(&dword_2545B9000, v19, v20, "Missing sourceId", v21, 2u);
      MEMORY[0x25A27FC50](v21, -1, -1);
    }

    return 0;
  }
  uint64_t v68 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v16;
  sub_254E15688();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v15 + 8);
  v17(v8, v14);
  uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v66((char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v9) == 1) {
    goto LABEL_4;
  }
  uint64_t v64 = (void (*)(uint64_t, uint64_t))v17;
  uint64_t v65 = v10;
  os_log_type_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v67 = v9;
  uint64_t v63 = v10 + 32;
  uint64_t v23 = v22;
  v22(v72, (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  uint64_t v24 = (uint64_t)v71;
  sub_254E15548();
  unint64_t v25 = sub_254E0350C(v24);
  uint64_t v26 = sub_2545C9374(v24, &qword_269E16BB0);
  if ((v25 & 0x100000000) != 0)
  {
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_254E15718();
    __swift_project_value_buffer(v30, (uint64_t)qword_26B2707B8);
    uint64_t v31 = sub_254E15708();
    os_log_type_t v32 = sub_254E15A48();
    if (!os_log_type_enabled(v31, v32)) {
      goto LABEL_22;
    }
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    char v34 = "Missing/invalid source participant";
    goto LABEL_21;
  }
  unint64_t v60 = v25;
  uint64_t v62 = &v59;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v61 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v28 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = (uint64_t)v69;
  sub_254E15528();
  if (v68(v29, 1, v14) == 1)
  {
    sub_2545C9374(v29, &qword_269E16BB8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))((char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v67);
LABEL_17:
    sub_2545C9374((uint64_t)v28, &qword_26B26F498);
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_254E15718();
    __swift_project_value_buffer(v36, (uint64_t)qword_26B2707B8);
    uint64_t v31 = sub_254E15708();
    os_log_type_t v32 = sub_254E15A48();
    if (!os_log_type_enabled(v31, v32)) {
      goto LABEL_22;
    }
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    char v34 = "Missing targetId";
LABEL_21:
    _os_log_impl(&dword_2545B9000, v31, v32, v34, v33, 2u);
    MEMORY[0x25A27FC50](v33, -1, -1);
LABEL_22:

    (*(void (**)(char *, uint64_t))(v65 + 8))(v72, v67);
    return 0;
  }
  sub_254E15688();
  v64(v29, v14);
  uint64_t v35 = v67;
  if (v66(v28, 1, v67) == 1) {
    goto LABEL_17;
  }
  char v39 = v61;
  v23(v61, v28, v35);
  uint64_t v40 = (uint64_t)v71;
  sub_254E15558();
  unint64_t v41 = sub_254E0350C(v40);
  sub_2545C9374(v40, &qword_269E16BB0);
  if ((v41 & 0x100000000) != 0)
  {
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_254E15718();
    __swift_project_value_buffer(v53, (uint64_t)qword_26B2707B8);
    uint64_t v54 = sub_254E15708();
    os_log_type_t v55 = sub_254E15A48();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl(&dword_2545B9000, v54, v55, "Missing/invalid target participant", v56, 2u);
      MEMORY[0x25A27FC50](v56, -1, -1);
    }

    uint64_t v57 = *(void (**)(char *, uint64_t))(v65 + 8);
    uint64_t v58 = v67;
    v57(v39, v67);
    v57(v72, v58);
    return 0;
  }
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDC0]), sel_init);
  if (!result)
  {
    __break(1u);
    goto LABEL_36;
  }
  char v42 = result;
  objc_msgSend(result, sel_setComponent_, v60);
  id v43 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
  uint64_t v44 = (void *)sub_254E14DC8();
  id v45 = objc_msgSend(v43, sel_initWithNSUUID_, v44);

  objc_msgSend(v42, sel_setUuid_, v45);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDC0]), sel_init);
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v46 = result;
  objc_msgSend(result, sel_setComponent_, v41);
  id v47 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
  uint64_t v48 = v61;
  id v49 = (void *)sub_254E14DC8();
  id v50 = objc_msgSend(v47, sel_initWithNSUUID_, v49);

  objc_msgSend(v46, sel_setUuid_, v50);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_init);
  if (result)
  {
    uint64_t v37 = result;
    objc_msgSend(result, sel_setSource_, v42);
    objc_msgSend(v37, sel_setTarget_, v46);

    uint64_t v51 = *(void (**)(char *, uint64_t))(v65 + 8);
    uint64_t v52 = v67;
    v51(v48, v67);
    v51(v72, v52);
    return v37;
  }
LABEL_37:
  __break(1u);
  return result;
}

id sub_254E0428C(uint64_t a1)
{
  uint64_t v52 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BB8);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v53 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v43 - v4;
  uint64_t v6 = sub_254E14E08();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
  uint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
  MEMORY[0x270FA5388](v9 - 8);
  sub_254E154A8();
  uint64_t v11 = sub_254E15698();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v5, 1, v11) == 1)
  {
    sub_2545C9374((uint64_t)v5, &qword_269E16BB8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v6);
LABEL_4:
    sub_2545C9374((uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B26F498);
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_254E15718();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B2707B8);
    uint64_t v16 = sub_254E15708();
    os_log_type_t v17 = sub_254E15A48();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl(&dword_2545B9000, v16, v17, "Missing sourceId", v18, 2u);
      MEMORY[0x25A27FC50](v18, -1, -1);
    }

    return 0;
  }
  uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v13;
  sub_254E15688();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v12 + 8);
  v14(v5, v11);
  id v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v50((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v6) == 1) {
    goto LABEL_4;
  }
  id v47 = (void (*)(uint64_t, uint64_t))v14;
  uint64_t v44 = *(uint64_t (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v45 = v7 + 32;
  uint64_t v19 = v44(v54, (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v48 = &v43;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v46 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)v53;
  sub_254E154A8();
  int v23 = v51(v22, 1, v11);
  uint64_t v49 = v7;
  if (v23 == 1)
  {
    sub_2545C9374(v22, &qword_269E16BB8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v21, 1, 1, v6);
LABEL_12:
    uint64_t v24 = v6;
    sub_2545C9374((uint64_t)v21, &qword_26B26F498);
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_254E15718();
    __swift_project_value_buffer(v25, (uint64_t)qword_26B2707B8);
    uint64_t v26 = sub_254E15708();
    os_log_type_t v27 = sub_254E15A48();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_2545B9000, v26, v27, "Missing targetId", v28, 2u);
      MEMORY[0x25A27FC50](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v54, v24);
    return 0;
  }
  sub_254E15688();
  v47(v22, v11);
  if (v50(v21, 1, v6) == 1) {
    goto LABEL_12;
  }
  uint64_t v31 = v46;
  uint64_t v53 = (char *)v6;
  v44(v46, v21, v6);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDC0]), sel_init);
  if (!result)
  {
    __break(1u);
    goto LABEL_24;
  }
  os_log_type_t v32 = result;
  objc_msgSend(result, sel_setComponent_, 45);
  id v33 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
  char v34 = (void *)sub_254E14DC8();
  id v35 = objc_msgSend(v33, sel_initWithNSUUID_, v34);

  objc_msgSend(v32, sel_setUuid_, v35);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDC0]), sel_init);
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v36 = result;
  objc_msgSend(result, sel_setComponent_, 61);
  id v37 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
  char v38 = (void *)sub_254E14DC8();
  id v39 = objc_msgSend(v37, sel_initWithNSUUID_, v38);

  objc_msgSend(v36, sel_setUuid_, v39);
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6EDB8]), sel_init);
  if (result)
  {
    uint64_t v29 = result;
    objc_msgSend(result, sel_setSource_, v32);
    objc_msgSend(v29, sel_setTarget_, v36);

    uint64_t v40 = *(void (**)(char *, char *))(v49 + 8);
    unint64_t v41 = v31;
    char v42 = v53;
    v40(v41, v53);
    v40(v54, v42);
    return v29;
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_254E04994()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16B98);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_254E154B8();
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v31 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BA0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_254E154F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BA8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_254E15578();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254E15518();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_2545C9374((uint64_t)v14, &qword_269E16BA8);
    sub_254E15508();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      uint64_t v19 = &qword_269E16BA0;
      uint64_t v20 = (uint64_t)v7;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_254E154C8();
      uint64_t v27 = v32;
      uint64_t v26 = v33;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v2, 1, v33) != 1)
      {
        uint64_t v28 = v31;
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v31, v2, v26);
        id v25 = sub_254E0428C((uint64_t)v11);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        return v25;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v19 = &qword_269E16B98;
      uint64_t v20 = (uint64_t)v2;
    }
    sub_2545C9374(v20, v19);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_254E15718();
    __swift_project_value_buffer(v21, (uint64_t)qword_26B2707B8);
    uint64_t v22 = sub_254E15708();
    os_log_type_t v23 = sub_254E15A38();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl(&dword_2545B9000, v22, v23, "Event missing sessionCoordinatorLoop", v24, 2u);
      MEMORY[0x25A27FC50](v24, -1, -1);
    }

    id v25 = sub_254E03950((uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return v25;
}

uint64_t sub_254E04E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SampleMetricsProducer.SessionStats.num_sessions.getter()
{
  return *(void *)v0;
}

uint64_t SampleMetricsProducer.SessionStats.num_requests.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t SampleMetricsProducer.SessionStats.num_events.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_254E04F04()
{
  uint64_t v1 = 0x757165725F6D756ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6576655F6D756ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x737365735F6D756ELL;
  }
}

uint64_t sub_254E04F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_254E06034(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_254E04F9C(uint64_t a1)
{
  unint64_t v2 = sub_254E051AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_254E04FD8(uint64_t a1)
{
  unint64_t v2 = sub_254E051AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SampleMetricsProducer.SessionStats.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BC0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254E051AC();
  sub_254E15F48();
  char v13 = 0;
  sub_254E15DC8();
  if (!v2)
  {
    char v12 = 1;
    sub_254E15DC8();
    char v11 = 2;
    sub_254E15DC8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_254E051AC()
{
  unint64_t result = qword_269E16BC8;
  if (!qword_269E16BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16BC8);
  }
  return result;
}

uint64_t SampleMetricsProducer.SessionStats.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_254E051AC();
  sub_254E15F28();
  if (!v2)
  {
    char v16 = 0;
    uint64_t v9 = sub_254E15D38();
    char v15 = 1;
    uint64_t v11 = sub_254E15D38();
    char v14 = 2;
    uint64_t v12 = sub_254E15D38();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_254E053C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SampleMetricsProducer.SessionStats.init(from:)(a1, a2);
}

uint64_t sub_254E053E0(void *a1)
{
  return SampleMetricsProducer.SessionStats.encode(to:)(a1);
}

uint64_t static SampleMetricsProducer.createSessionStats(sessionView:_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v57 = type metadata accessor for RequestData(0);
  uint64_t v3 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SessionData(0);
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v50 = (uint64_t)&v44 - v10;
  uint64_t v44 = type metadata accessor for SessionView(0);
  uint64_t v45 = a1;
  uint64_t v11 = *(void *)(a1 + *(int *)(v44 + 28));
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v47 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v12;
  int64_t v48 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v53 = v11;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  int64_t v18 = 0;
  int64_t v19 = 0;
  uint64_t v49 = v9;
  while (2)
  {
    if (!v15)
    {
      int64_t v23 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        goto LABEL_53;
      }
      if (v23 >= v48) {
        goto LABEL_49;
      }
      unint64_t v24 = *(void *)(v47 + 8 * v23);
      ++v19;
      if (!v24)
      {
        int64_t v19 = v23 + 1;
        if (v23 + 1 >= v48) {
          goto LABEL_49;
        }
        unint64_t v24 = *(void *)(v47 + 8 * v19);
        if (!v24)
        {
          int64_t v19 = v23 + 2;
          if (v23 + 2 >= v48) {
            goto LABEL_49;
          }
          unint64_t v24 = *(void *)(v47 + 8 * v19);
          if (!v24)
          {
            int64_t v19 = v23 + 3;
            if (v23 + 3 >= v48) {
              goto LABEL_49;
            }
            unint64_t v24 = *(void *)(v47 + 8 * v19);
            if (!v24)
            {
              int64_t v25 = v23 + 4;
              if (v25 < v48)
              {
                unint64_t v24 = *(void *)(v47 + 8 * v25);
                if (v24)
                {
                  int64_t v19 = v25;
                  goto LABEL_23;
                }
                while (1)
                {
                  int64_t v19 = v25 + 1;
                  if (__OFADD__(v25, 1)) {
                    goto LABEL_54;
                  }
                  if (v19 >= v48) {
                    break;
                  }
                  unint64_t v24 = *(void *)(v47 + 8 * v19);
                  ++v25;
                  if (v24) {
                    goto LABEL_23;
                  }
                }
              }
LABEL_49:
              uint64_t result = swift_release();
              uint64_t v43 = v46;
              void *v46 = *(void *)(v45 + *(int *)(v44 + 24));
              v43[1] = v18;
              v43[2] = v17;
              return result;
            }
          }
        }
      }
LABEL_23:
      uint64_t v21 = (v24 - 1) & v24;
      unint64_t v22 = __clz(__rbit64(v24)) + (v19 << 6);
      goto LABEL_24;
    }
    unint64_t v20 = __clz(__rbit64(v15));
    uint64_t v21 = (v15 - 1) & v15;
    unint64_t v22 = v20 | (v19 << 6);
LABEL_24:
    uint64_t v26 = v50;
    sub_254E05940(*(void *)(v53 + 56) + *(void *)(v51 + 72) * v22, v50, type metadata accessor for SessionData);
    uint64_t result = sub_254E058DC(v26, (uint64_t)v9);
    uint64_t v27 = *(void *)&v9[*(int *)(v52 + 32)];
    uint64_t v28 = *(void *)(v27 + 16);
    BOOL v29 = __OFADD__(v18, v28);
    int64_t v30 = v18 + v28;
    if (v29) {
      goto LABEL_52;
    }
    unint64_t v54 = v21;
    int64_t v55 = v19;
    int64_t v56 = v30;
    uint64_t v31 = v27 + 64;
    uint64_t v32 = 1 << *(unsigned char *)(v27 + 32);
    if (v32 < 64) {
      uint64_t v33 = ~(-1 << v32);
    }
    else {
      uint64_t v33 = -1;
    }
    unint64_t v34 = v33 & *(void *)(v27 + 64);
    int64_t v35 = (unint64_t)(v32 + 63) >> 6;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v18 = 0;
    while (v34)
    {
      unint64_t v36 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      unint64_t v37 = v36 | (v18 << 6);
LABEL_30:
      sub_254E05940(*(void *)(v27 + 56) + *(void *)(v3 + 72) * v37, (uint64_t)v5, type metadata accessor for RequestData);
      uint64_t v38 = *(void *)&v5[*(int *)(v57 + 24)];
      swift_bridgeObjectRetain();
      sub_254E059A8((uint64_t)v5, type metadata accessor for RequestData);
      uint64_t v39 = *(void *)(v38 + 16);
      uint64_t result = swift_bridgeObjectRelease();
      BOOL v29 = __OFADD__(v17, v39);
      v17 += v39;
      if (v29)
      {
        __break(1u);
        goto LABEL_49;
      }
    }
    int64_t v40 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v40 >= v35) {
      goto LABEL_5;
    }
    unint64_t v41 = *(void *)(v31 + 8 * v40);
    ++v18;
    if (v41) {
      goto LABEL_47;
    }
    int64_t v18 = v40 + 1;
    if (v40 + 1 >= v35) {
      goto LABEL_5;
    }
    unint64_t v41 = *(void *)(v31 + 8 * v18);
    if (v41) {
      goto LABEL_47;
    }
    int64_t v18 = v40 + 2;
    if (v40 + 2 >= v35) {
      goto LABEL_5;
    }
    unint64_t v41 = *(void *)(v31 + 8 * v18);
    if (v41) {
      goto LABEL_47;
    }
    int64_t v18 = v40 + 3;
    if (v40 + 3 >= v35) {
      goto LABEL_5;
    }
    unint64_t v41 = *(void *)(v31 + 8 * v18);
    if (v41)
    {
LABEL_47:
      unint64_t v34 = (v41 - 1) & v41;
      unint64_t v37 = __clz(__rbit64(v41)) + (v18 << 6);
      goto LABEL_30;
    }
    int64_t v42 = v40 + 4;
    if (v42 >= v35)
    {
LABEL_5:
      swift_release();
      uint64_t v9 = v49;
      uint64_t result = sub_254E059A8((uint64_t)v49, type metadata accessor for SessionData);
      int64_t v19 = v55;
      int64_t v18 = v56;
      unint64_t v15 = v54;
      continue;
    }
    break;
  }
  unint64_t v41 = *(void *)(v31 + 8 * v42);
  if (v41)
  {
    int64_t v18 = v42;
    goto LABEL_47;
  }
  while (1)
  {
    int64_t v18 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v18 >= v35) {
      goto LABEL_5;
    }
    unint64_t v41 = *(void *)(v31 + 8 * v18);
    ++v42;
    if (v41) {
      goto LABEL_47;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_254E058DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254E05940(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254E059A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

LighthouseDataProcessor::SampleMetricsProducer::DateRange_optional __swiftcall SampleMetricsProducer.DateRange.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_254E15CC8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t SampleMetricsProducer.DateRange.rawValue.getter()
{
  if (*v0) {
    return 0x796C6B656577;
  }
  else {
    return 0x796C696164;
  }
}

uint64_t sub_254E05AA0(char *a1, char *a2)
{
  return sub_25470723C(*a1, *a2);
}

unint64_t sub_254E05AB0()
{
  unint64_t result = qword_269E16BD8;
  if (!qword_269E16BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16BD8);
  }
  return result;
}

uint64_t sub_254E05B04()
{
  return sub_254E15F08();
}

uint64_t sub_254E05B80()
{
  sub_254E15868();

  return swift_bridgeObjectRelease();
}

uint64_t sub_254E05BE8()
{
  return sub_254E15F08();
}

LighthouseDataProcessor::SampleMetricsProducer::DateRange_optional sub_254E05C60(Swift::String *a1)
{
  return SampleMetricsProducer.DateRange.init(rawValue:)(*a1);
}

void sub_254E05C6C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x796C696164;
  if (*v1) {
    uint64_t v2 = 0x796C6B656577;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

ValueMetadata *type metadata accessor for SampleMetricsProducer()
{
  return &type metadata for SampleMetricsProducer;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SampleMetricsProducer.SessionStats(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SampleMetricsProducer.SessionStats(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SampleMetricsProducer.SessionStats()
{
  return &type metadata for SampleMetricsProducer.SessionStats;
}

unsigned char *storeEnumTagSinglePayload for SampleMetricsProducer.DateRange(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254E05DF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SampleMetricsProducer.DateRange()
{
  return &type metadata for SampleMetricsProducer.DateRange;
}

unsigned char *storeEnumTagSinglePayload for SampleMetricsProducer.SessionStats.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254E05EF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SampleMetricsProducer.SessionStats.CodingKeys()
{
  return &type metadata for SampleMetricsProducer.SessionStats.CodingKeys;
}

unint64_t sub_254E05F30()
{
  unint64_t result = qword_269E16BE0;
  if (!qword_269E16BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16BE0);
  }
  return result;
}

unint64_t sub_254E05F88()
{
  unint64_t result = qword_269E16BE8;
  if (!qword_269E16BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16BE8);
  }
  return result;
}

unint64_t sub_254E05FE0()
{
  unint64_t result = qword_269E16BF0;
  if (!qword_269E16BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16BF0);
  }
  return result;
}

uint64_t sub_254E06034(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737365735F6D756ELL && a2 == 0xEC000000736E6F69;
  if (v2 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x757165725F6D756ELL && a2 == 0xEC00000073747365 || (sub_254E15E08() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6576655F6D756ELL && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_254E15E08();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t DataProcessorBookmarkProvider.lastCollectionDate.setter(uint64_t a1)
{
  unint64_t v3 = v1[4];
  uint64_t v4 = v1[3] & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v4 = HIBYTE(v3) & 0xF;
  }
  if (v4)
  {
    uint64_t v5 = v1;
    sub_254E14CA8();
    uint64_t v7 = v6;
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_254E15718();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B2707B8);
    swift_retain();
    uint64_t v9 = sub_254E15708();
    os_log_type_t v10 = sub_254E15A38();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v33[0] = v12;
      *(_DWORD *)uint64_t v11 = 136315394;
      swift_beginAccess();
      uint64_t v13 = v1[5];
      unint64_t v14 = v1[6];
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_254658670(v13, v14, v33);
      sub_254E15B08();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2048;
      uint64_t v34 = v7;
      sub_254E15B08();
      _os_log_impl(&dword_2545B9000, v9, v10, "Set key %s to %f", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v12, -1, -1);
      MEMORY[0x25A27FC50](v11, -1, -1);

      unint64_t v15 = (void *)v1[2];
      if (v15)
      {
LABEL_8:
        id v16 = v15;
        uint64_t v17 = (void *)sub_254E15988();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        int64_t v18 = (void *)sub_254E157E8();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_setValue_forKey_, v17, v18);

LABEL_21:
        uint64_t v32 = sub_254E14D98();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(a1, v32);
      }
    }
    else
    {

      swift_release();
      unint64_t v15 = (void *)v1[2];
      if (v15) {
        goto LABEL_8;
      }
    }
    swift_retain_n();
    uint64_t v26 = sub_254E15708();
    os_log_type_t v27 = sub_254E15A38();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v34 = v29;
      *(_DWORD *)uint64_t v28 = 136315138;
      swift_beginAccess();
      uint64_t v30 = v5[5];
      unint64_t v31 = v5[6];
      swift_bridgeObjectRetain();
      sub_254658670(v30, v31, &v34);
      sub_254E15B08();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2545B9000, v26, v27, "Fail to set key %s due to empty userdefaults", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A27FC50](v29, -1, -1);
      MEMORY[0x25A27FC50](v28, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    goto LABEL_21;
  }
  if (qword_26B26A248 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_254E15718();
  __swift_project_value_buffer(v19, (uint64_t)qword_26B2707B8);
  unint64_t v20 = sub_254E15708();
  os_log_type_t v21 = sub_254E15A38();
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v22 = 0;
    _os_log_impl(&dword_2545B9000, v20, v21, "Skip userDefault set due to empty identifier", v22, 2u);
    MEMORY[0x25A27FC50](v22, -1, -1);
  }

  uint64_t v23 = sub_254E14D98();
  unint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);

  return v24(a1, v23);
}

uint64_t DataProcessorBookmarkProvider.lastCollectionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_254E14D98();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_254E14D48();
  uint64_t v8 = *(void **)(v1 + 16);
  if (v8)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_254E157E8();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v8, sel_valueForKey_, v9);

    if (v10)
    {
      sub_254E15B28();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v40, 0, sizeof(v40));
    }
    sub_254DDA880((uint64_t)v40, (uint64_t)&v42);
    if (*((void *)&v43 + 1))
    {
      sub_2546509CC((uint64_t)&v42);
      swift_bridgeObjectRetain();
      uint64_t v11 = (void *)sub_254E157E8();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_doubleForKey_, v11);
      uint64_t v13 = v12;

      if (qword_26B26A248 != -1) {
        swift_once();
      }
      uint64_t v38 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v39 = a1;
      uint64_t v14 = sub_254E15718();
      __swift_project_value_buffer(v14, (uint64_t)qword_26B2707B8);
      swift_retain();
      unint64_t v15 = sub_254E15708();
      os_log_type_t v16 = sub_254E15A38();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        *(void *)&long long v42 = v37;
        *(_DWORD *)uint64_t v17 = 136315394;
        uint64_t v18 = *(void *)(v2 + 40);
        unint64_t v19 = *(void *)(v2 + 48);
        swift_bridgeObjectRetain();
        *(void *)&v40[0] = sub_254658670(v18, v19, (uint64_t *)&v42);
        sub_254E15B08();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2048;
        *(void *)&v40[0] = v13;
        sub_254E15B08();
        _os_log_impl(&dword_2545B9000, v15, v16, "The userdefault has key %s with the value %f", (uint8_t *)v17, 0x16u);
        uint64_t v20 = v37;
        swift_arrayDestroy();
        MEMORY[0x25A27FC50](v20, -1, -1);
        MEMORY[0x25A27FC50](v17, -1, -1);
      }
      else
      {

        uint64_t v21 = swift_release();
      }
      MEMORY[0x270FA5388](v21);
      sub_254E14C98();
      sub_254E07124();
      uint64_t v33 = v38;
      if (sub_254E157C8()) {
        uint64_t v34 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      }
      else {
        uint64_t v34 = v33;
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v39, v34, v4);
      int64_t v35 = *(void (**)(char *, uint64_t))(v5 + 8);
      v35((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      return ((uint64_t (*)(char *, uint64_t))v35)(v33, v4);
    }
  }
  else
  {
    long long v42 = 0u;
    long long v43 = 0u;
  }
  sub_2546509CC((uint64_t)&v42);
  if (qword_26B26A248 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_254E15718();
  __swift_project_value_buffer(v22, (uint64_t)qword_26B2707B8);
  swift_retain();
  uint64_t v23 = sub_254E15708();
  os_log_type_t v24 = sub_254E15A38();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v39 = a1;
    int64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(void *)&v40[0] = v26;
    uint64_t v38 = v7;
    *(_DWORD *)int64_t v25 = 136315138;
    uint64_t v37 = (uint64_t)(v25 + 4);
    swift_beginAccess();
    uint64_t v27 = v5;
    uint64_t v28 = v4;
    uint64_t v30 = *(void *)(v2 + 40);
    unint64_t v29 = *(void *)(v2 + 48);
    swift_bridgeObjectRetain();
    uint64_t v31 = v30;
    uint64_t v4 = v28;
    uint64_t v5 = v27;
    uint64_t v41 = sub_254658670(v31, v29, (uint64_t *)v40);
    uint64_t v7 = v38;
    sub_254E15B08();
    swift_release();
    a1 = v39;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2545B9000, v23, v24, "The userdefault contained no value for %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A27FC50](v26, -1, -1);
    MEMORY[0x25A27FC50](v25, -1, -1);
  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
}

uint64_t DataProcessorBookmarkProvider.__allocating_init(streamIdentifier:domain:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  DataProcessorBookmarkProvider.init(streamIdentifier:domain:)(a1, a2);
  return v4;
}

unint64_t static DataProcessorBookmarkProvider.sharedDomain.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t DataProcessorBookmarkProvider.userDefaultsKey.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void *DataProcessorBookmarkProvider.init(streamIdentifier:domain:)(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  id v6 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v7 = (void *)sub_254E157E8();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  v3[2] = v8;
  v3[3] = a1;
  v3[4] = a2;
  swift_bridgeObjectRetain();
  sub_254E15878();
  v3[5] = a1;
  v3[6] = a2;
  return v3;
}

uint64_t sub_254E06E48(uint64_t a1)
{
  uint64_t v2 = sub_254E14D98();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return DataProcessorBookmarkProvider.lastCollectionDate.setter((uint64_t)v4);
}

void (*DataProcessorBookmarkProvider.lastCollectionDate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_254E14D98();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = v6;
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  DataProcessorBookmarkProvider.lastCollectionDate.getter((uint64_t)v7);
  return sub_254E06FD0;
}

void sub_254E06FD0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v4 = v2[2];
    uint64_t v5 = v2[1];
    MEMORY[0x270FA5388](a1);
    uint64_t v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void *, uint64_t))(v4 + 16))(v7, v3, v5);
    DataProcessorBookmarkProvider.lastCollectionDate.setter((uint64_t)v7);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    DataProcessorBookmarkProvider.lastCollectionDate.setter(*(void *)(*(void *)a1 + 32));
  }
  free(v3);
  free(v2);
}

uint64_t DataProcessorBookmarkProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DataProcessorBookmarkProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_254E07124()
{
  unint64_t result = qword_26B26A698;
  if (!qword_26B26A698)
  {
    sub_254E14D98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B26A698);
  }
  return result;
}

uint64_t sub_254E07170@<X0>(uint64_t a1@<X8>)
{
  return DataProcessorBookmarkProvider.lastCollectionDate.getter(a1);
}

uint64_t type metadata accessor for DataProcessorBookmarkProvider()
{
  return self;
}

uint64_t method lookup function for DataProcessorBookmarkProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DataProcessorBookmarkProvider);
}

uint64_t dispatch thunk of DataProcessorBookmarkProvider.__allocating_init(streamIdentifier:domain:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

id sub_254E071E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v65 = (uint64_t)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F850);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v63 = (unsigned int *)((char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool(0);
  MEMORY[0x270FA5388](v62);
  uint64_t v66 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v64 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C318);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v61 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C320);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2545C9310(a1, (uint64_t)v23, &qword_269E0C320);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    uint64_t v28 = &qword_269E0C320;
    uint64_t v29 = (uint64_t)v23;
LABEL_12:
    sub_2545C9374(v29, v28);
    return 0;
  }
  sub_254E07C60((uint64_t)v23, (uint64_t)v27, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E0B8]), sel_init);
  uint64_t v31 = (uint64_t)v27;
  if (!v30)
  {
    sub_254E07CC8((uint64_t)v27, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
    return v30;
  }
  uint64_t v32 = (uint64_t)v20;
  sub_2545C9310((uint64_t)v27, (uint64_t)v20, &qword_269E0C318);
  uint64_t v33 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v20, 1, v33) == 1)
  {
LABEL_5:
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_254E15718();
    __swift_project_value_buffer(v34, (uint64_t)qword_26B2707B8);
    int64_t v35 = sub_254E15708();
    os_log_type_t v36 = sub_254E15A38();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl(&dword_2545B9000, v35, v36, "#IFTPrscribedPlanConverter - unmapped plan values", v37, 2u);
      MEMORY[0x25A27FC50](v37, -1, -1);
    }

LABEL_10:
LABEL_11:
    sub_254E07CC8(v31, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
    uint64_t v28 = &qword_269E0C318;
    uint64_t v29 = (uint64_t)v20;
    goto LABEL_12;
  }
  sub_2545C9310((uint64_t)v20, (uint64_t)v18, &qword_269E0C318);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_254E07CC8((uint64_t)v18, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E0E0]), sel_init);
      if (!v38) {
        goto LABEL_10;
      }
      uint64_t v39 = v38;
      objc_msgSend(v38, sel_setExists_, 1);
      objc_msgSend(v30, sel_setSearchTool_, v39);

      goto LABEL_42;
    case 2u:
      sub_254E07C60((uint64_t)v18, (uint64_t)v14, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
      id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E0E8]), (SEL)&selRef_hasStartTimestamp);
      if (v40)
      {
        uint64_t v41 = v40;
        objc_msgSend(v40, sel_setIsExplicit_, v14[16]);
        objc_msgSend(v30, sel_setTextTool_, v41);

        sub_254E07CC8((uint64_t)v14, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
        goto LABEL_42;
      }

      sub_254E07CC8((uint64_t)v14, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
      goto LABEL_11;
    case 3u:
      sub_254E07C60((uint64_t)v18, (uint64_t)v11, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
      id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E0C0]), (SEL)&selRef_hasStartTimestamp);
      if (v42)
      {
        long long v43 = v42;
        objc_msgSend(v42, sel_setIsExplicit_, v11[16]);
        objc_msgSend(v30, sel_setConvertTool_, v43);

        sub_254E07CC8((uint64_t)v11, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
        goto LABEL_42;
      }

      sub_254E07CC8((uint64_t)v11, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
      goto LABEL_11;
    case 5u:
      uint64_t v44 = v64;
      sub_254E07C60((uint64_t)v18, v64, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
      id v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E0C8]), (SEL)&selRef_hasStartTimestamp);
      if (v45)
      {
        uint64_t v46 = v45;
        objc_msgSend(v45, sel_setIsExplicit_, *(unsigned __int8 *)(v44 + 16));
        objc_msgSend(v30, sel_setKnowledgeTool_, v46);

        uint64_t v47 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool;
        goto LABEL_33;
      }

      uint64_t v58 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool;
      goto LABEL_39;
    case 6u:
      uint64_t v48 = v66;
      sub_254E07C60((uint64_t)v18, v66, type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool);
      id v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E0D8]), (SEL)&selRef_hasStartTimestamp);
      if (!v49)
      {

        sub_254E07CC8(v48, type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool);
        goto LABEL_11;
      }
      uint64_t v50 = v49;
      uint64_t v51 = v31;
      uint64_t v52 = v48 + *(int *)(v62 + 20);
      if ((*(unsigned char *)(v52 + 8) & 1) == 0) {
        objc_msgSend(v49, sel_setElementAtIndex_, *(void *)v52);
      }
      id v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E140]), (SEL)&selRef_hasStartTimestamp);
      unint64_t v54 = v63;
      sub_2545C9310(v48, (uint64_t)v63, &qword_26B26F850);
      uint64_t v55 = type metadata accessor for TranscriptProtoStatementID(0);
      if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v54, 1, v55) == 1)
      {
        sub_2545C9374((uint64_t)v54, &qword_26B26F850);
      }
      else
      {
        uint64_t v59 = *v54;
        sub_254E07CC8((uint64_t)v54, type metadata accessor for TranscriptProtoStatementID);
        objc_msgSend(v53, sel_setIndex_, v59);
      }
      objc_msgSend(v50, sel_setResultStatementId_, v53);

      objc_msgSend(v30, sel_setOpenTool_, v50);
      sub_254E07CC8(v48, type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenTool);
      uint64_t v31 = v51;
      goto LABEL_42;
    case 7u:
      uint64_t v44 = v65;
      sub_254E07C60((uint64_t)v18, v65, type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool);
      id v56 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E0D0]), (SEL)&selRef_hasStartTimestamp);
      if (!v56)
      {

        uint64_t v58 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool;
LABEL_39:
        sub_254E07CC8(v44, v58);
        goto LABEL_11;
      }
      uint64_t v57 = v56;
      if ((*(unsigned char *)(v44 + 8) & 1) == 0) {
        objc_msgSend(v56, sel_setElementAtIndex_, *(void *)v44);
      }
      objc_msgSend(v30, sel_setOpenSuccessValueFromLatestRequestTool_, v57);

      uint64_t v47 = type metadata accessor for TranscriptProtoRequestPrescribedPlanOpenSuccessValueFromLatestRequestTool;
LABEL_33:
      sub_254E07CC8(v44, v47);
LABEL_42:
      sub_254E07CC8(v31, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
      sub_2545C9374(v32, &qword_269E0C318);
      break;
    default:
      sub_254E07CC8((uint64_t)v18, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      goto LABEL_5;
  }
  return v30;
}

uint64_t sub_254E07C60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_254E07CC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_254E07D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10888);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v19 - v8;
  sub_254E07F20(a1, (uint64_t)&v19 - v8);
  uint64_t v10 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  int v12 = v11(v9, 1, v10);
  sub_254E07F88((uint64_t)v9);
  id v13 = 0;
  if (v12 != 1)
  {
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6E0A8]), sel_init);
    if (v13)
    {
      sub_254E07F20(a1, (uint64_t)v7);
      if (v11(v7, 1, v10) == 1)
      {
        id v14 = v13;
        sub_254E07F88((uint64_t)v7);
        uint64_t v15 = 0;
      }
      else
      {
        id v16 = v13;
        swift_bridgeObjectRetain();
        sub_254E07FE8((uint64_t)v7);
        uint64_t v15 = (void *)sub_254E157E8();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v13, sel_setTextQuery_, v15);

      objc_msgSend(v13, sel_setLinkId_, a2);
      id v17 = objc_msgSend(v13, sel_linkId);
    }
  }
  return v13;
}

uint64_t sub_254E07F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254E07F88(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10888);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_254E07FE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_254E08044(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BF8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_2545C9374(a1, &qword_269E16BF8);
    sub_25464CF38(a2, (uint64_t)v8);
    uint64_t v13 = sub_254E153D8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_2545C9374((uint64_t)v8, &qword_269E16BF8);
  }
  else
  {
    sub_254E0F268(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_25464F17C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_254E153D8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

void *IntelligenceFlowTelemetryLatencyCalculator.__allocating_init()()
{
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = (void *)MEMORY[0x263F8EE78];
  v0[2] = sub_25464B0EC(MEMORY[0x263F8EE78]);
  unint64_t v2 = sub_25464B1EC(v1);
  uint64_t v3 = MEMORY[0x263F8EE88];
  v0[3] = v2;
  v0[4] = v3;
  v0[5] = 0;
  return v0;
}

void (*sub_254E082C4(void *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_254E0D3CC(v4, a2);
  return sub_254E08324;
}

void sub_254E08324(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t (*sub_254E08370(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_254E0D4BC(v6, a2, a3);
  return sub_254E083F0;
}

uint64_t (*sub_254E083F4(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_254E0D56C(v6, a2, a3);
  return sub_254E083F0;
}

void sub_254E08474(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t sub_254E084C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_254E08528()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254E08560(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254E085A8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_254E085FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_254E0865C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254E08694(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254E086DC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_254E08730(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_254E08790()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_254E087C8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_254E08810())()
{
  return j__swift_endAccess;
}

uint64_t sub_254E08868()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t sub_254E0889C(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*sub_254E088DC())()
{
  return j_j__swift_endAccess;
}

void *IntelligenceFlowTelemetryLatencyCalculator.init()()
{
  uint64_t v1 = (void *)MEMORY[0x263F8EE78];
  v0[2] = sub_25464B0EC(MEMORY[0x263F8EE78]);
  unint64_t v2 = sub_25464B1EC(v1);
  uint64_t v3 = MEMORY[0x263F8EE88];
  v0[3] = v2;
  v0[4] = v3;
  v0[5] = 0;
  return v0;
}

uint64_t sub_254E0897C(uint64_t a1)
{
  uint64_t v2 = sub_254E15458();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for RequestData(0);
  uint64_t v7 = *(void *)(a1 + *(int *)(result + 28) + 8);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v9 = v3 + 16;
    uint64_t v10 = v11;
    uint64_t v12 = v7 + ((*(unsigned __int8 *)(v9 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 64));
    uint64_t v13 = *(void *)(v9 + 56);
    swift_bridgeObjectRetain();
    do
    {
      v10(v5, v12, v2);
      sub_254E08AC4((uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v9 - 8))(v5, v2);
      v12 += v13;
      --v8;
    }
    while (v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_254E08AC4(uint64_t a1)
{
  uint64_t v471 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10EB8);
  MEMORY[0x270FA5388](v1 - 8);
  v429 = (char *)&v397 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v434 = sub_254E155F8();
  uint64_t v437 = *(void *)(v434 - 8);
  MEMORY[0x270FA5388](v434);
  v436 = (char *)&v397 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BF8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v413 = (uint64_t)&v397 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v421 = (uint64_t)&v397 - v7;
  uint64_t v433 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  uint64_t v427 = *(void *)(v433 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v433);
  v426 = (char *)&v397 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v420 = (char *)&v397 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v409 = (char *)&v397 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v417 = (uint64_t)&v397 - v14;
  uint64_t v465 = sub_254E15608();
  uint64_t v462 = *(void *)(v465 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v465);
  v422 = (char *)&v397 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v432 = (char *)&v397 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v435 = (char *)&v397 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v424 = (char *)&v397 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v430 = (char *)&v397 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v438 = (char *)&v397 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  v415 = (char *)&v397 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  v419 = (char *)&v397 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  v431 = (char *)&v397 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v407 = (char *)&v397 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v410 = (char *)&v397 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v414 = (char *)&v397 - v38;
  MEMORY[0x270FA5388](v37);
  v443 = (char *)&v397 - v39;
  uint64_t v460 = sub_254E153D8();
  uint64_t v461 = *(void *)(v460 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v460);
  v428 = (char *)&v397 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  v425 = (char *)&v397 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  v416 = (char *)&v397 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  v408 = (char *)&v397 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  v412 = (char *)&v397 - v49;
  MEMORY[0x270FA5388](v48);
  v444 = (char *)&v397 - v50;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16C00);
  uint64_t v52 = MEMORY[0x270FA5388](v51 - 8);
  v458 = (char *)&v397 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  v453 = ((char *)&v397 - v54);
  v468 = (void *)sub_254E15458();
  uint64_t v464 = *(v468 - 1);
  uint64_t v55 = MEMORY[0x270FA5388](v468);
  v423 = (char *)&v397 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  v463 = (char *)&v397 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  v457 = (char *)&v397 - v60;
  MEMORY[0x270FA5388](v59);
  v456 = (char *)&v397 - v61;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10FE8);
  uint64_t v63 = MEMORY[0x270FA5388](v62 - 8);
  v418 = (char *)&v397 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  unint64_t v452 = (unint64_t)&v397 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  v451 = (char *)&v397 - v68;
  MEMORY[0x270FA5388](v67);
  v466 = (char *)&v397 - v69;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10FF0);
  uint64_t v71 = MEMORY[0x270FA5388](v70 - 8);
  v411 = (char *)&v397 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  v441 = (char *)&v397 - v74;
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  v440 = (char *)&v397 - v76;
  MEMORY[0x270FA5388](v75);
  v450 = (char *)&v397 - v77;
  v449 = (void *)sub_254E15628();
  uint64_t v448 = *(v449 - 1);
  MEMORY[0x270FA5388](v449);
  v447 = (char *)&v397 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v445 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16C08);
  uint64_t v79 = MEMORY[0x270FA5388](v445);
  os_log_t v442 = (os_log_t)((char *)&v397 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v81 = MEMORY[0x270FA5388](v79);
  uint64_t v446 = (uint64_t)&v397 - v82;
  MEMORY[0x270FA5388](v81);
  v467 = (char *)&v397 - v83;
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B270058);
  MEMORY[0x270FA5388](v84 - 8);
  uint64_t v86 = (char *)&v397 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_254E15678();
  uint64_t v470 = *(void *)(v87 - 8);
  uint64_t v88 = MEMORY[0x270FA5388](v87);
  v455 = (char *)&v397 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = MEMORY[0x270FA5388](v88);
  v454 = (char *)&v397 - v91;
  MEMORY[0x270FA5388](v90);
  v469 = (char *)&v397 - v92;
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16C10);
  MEMORY[0x270FA5388](v93 - 8);
  uint64_t v95 = (char *)&v397 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_254E15438();
  uint64_t v97 = *(void (***)(char *, char *, uint64_t))(v96 - 8);
  uint64_t v98 = MEMORY[0x270FA5388](v96);
  int v100 = (char *)&v397 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v98);
  uint64_t v102 = (char *)&v397 - v101;
  if (qword_269E0C090 != -1) {
    swift_once();
  }
  uint64_t v103 = sub_254E15718();
  os_log_t v459 = (os_log_t)__swift_project_value_buffer(v103, (uint64_t)qword_269E70698);
  uint64_t v104 = sub_254E15708();
  os_log_type_t v105 = sub_254E15A38();
  if (os_log_type_enabled(v104, v105))
  {
    size_t v106 = v102;
    uint64_t v107 = v87;
    uint64_t v108 = v96;
    uint64_t v109 = v97;
    size_t v110 = v100;
    uint64_t v111 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v111 = 0;
    _os_log_impl(&dword_2545B9000, v104, v105, "IF Telemetry Event", v111, 2u);
    uint64_t v112 = v111;
    int v100 = v110;
    uint64_t v97 = v109;
    uint64_t v96 = v108;
    uint64_t v87 = v107;
    uint64_t v102 = v106;
    MEMORY[0x25A27FC50](v112, -1, -1);
  }

  sub_254E15448();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v97[6])(v95, 1, v96) != 1)
  {
    v97[4](v102, v95, v96);
    sub_254E153E8();
    uint64_t v114 = sub_254E15668();
    uint64_t v115 = *(void *)(v114 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v86, 1, v114) == 1)
    {
      sub_2545C9374((uint64_t)v86, &qword_26B270058);
      return ((uint64_t (*)(char *, uint64_t))v97[1])(v102, v96);
    }
    char v117 = v454;
    sub_254E15658();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v86, v114);
    (*(void (**)(char *, char *, uint64_t))(v470 + 32))(v469, v117, v87);
    uint64_t v118 = (uint64_t)v467;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v462 + 56))(v467, 1, 1, v465);
    v97[2](v100, v102, v96);
    if (((unsigned int (*)(char *, uint64_t))v97[11])(v100, v96) == *MEMORY[0x263F4EA78])
    {
      ((void (*)(char *, uint64_t))v97[12])(v100, v96);
      uint64_t v119 = v448;
      uint64_t v120 = v447;
      unint64_t v121 = v449;
      (*(void (**)(char *, char *, void *))(v448 + 32))(v447, v100, v449);
      uint64_t v122 = v446;
      sub_254E15618();
      (*(void (**)(char *, void *))(v119 + 8))(v120, v121);
      sub_254E0E5E0(v122, v118);
    }
    else
    {
      ((void (*)(char *, uint64_t))v97[1])(v100, v96);
    }
    unint64_t v474 = 0;
    unsigned __int8 v475 = 1;
    uint64_t v123 = v470;
    char v124 = v455;
    (*(void (**)(char *, char *, uint64_t))(v470 + 16))(v455, v469, v87);
    if ((*(unsigned int (**)(char *, uint64_t))(v123 + 88))(v124, v87) == *MEMORY[0x263F4F6E0])
    {
      (*(void (**)(char *, uint64_t))(v470 + 96))(v124, v87);
      unint64_t v125 = *(void *)(*(void *)v124 + 16);
      swift_release();
      unint64_t v474 = v125;
      unsigned __int8 v475 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v470 + 8))(v124, v87);
    }
    sub_254E15428();
    unint64_t v126 = v466;
    uint64_t v127 = sub_254E15418();
    uint64_t v128 = *(void *)(v127 - 8);
    uint64_t v129 = *(void **)(v128 + 48);
    v454 = (char *)(v128 + 48);
    v449 = v129;
    int v130 = ((uint64_t (*)(char *, uint64_t, uint64_t))v129)(v126, 1, v127);
    v455 = (char *)v127;
    uint64_t v406 = v96;
    uint64_t v405 = v87;
    v404 = v102;
    uint64_t v448 = v128;
    if (v130 == 1)
    {
      uint64_t v131 = &qword_269E10FE8;
      uint64_t v132 = (uint64_t)v126;
    }
    else
    {
      char v133 = v450;
      sub_254E15408();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v126, v127);
      uint64_t v134 = sub_254E15498();
      uint64_t v135 = *(void *)(v134 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v133, 1, v134) != 1)
      {
        uint64_t v136 = sub_254E15488();
        char v137 = v97;
        char v139 = v138;
        (*(void (**)(char *, uint64_t))(v135 + 8))(v133, v134);
        BOOL v140 = (v139 & 1) == 0;
        LODWORD(v466) = v139 & 1;
        uint64_t v97 = v137;
        if (v140) {
          uint64_t v141 = v136;
        }
        else {
          uint64_t v141 = 0;
        }
        uint64_t v446 = v141;
LABEL_24:
        uint64_t v142 = v468;
        uint64_t v143 = v464;
        uint64_t v144 = v464 + 16;
        v145 = *(void (**)(char *, uint64_t, void *))(v464 + 16);
        uint64_t v146 = v456;
        uint64_t v147 = v471;
        v145(v456, v471, v468);
        v148 = v457;
        v145(v457, v147, v142);
        v149 = v463;
        uint64_t v403 = v144;
        v402 = v145;
        v145(v463, v147, v142);
        unint64_t v150 = v474;
        LODWORD(v447) = v475;
        uint64_t v151 = sub_254E15708();
        int v152 = sub_254E15A38();
        if (!os_log_type_enabled(v151, (os_log_type_t)v152))
        {
          v162 = *(char **)(v143 + 8);
          ((void (*)(char *, void *))v162)(v148, v142);
          ((void (*)(char *, void *))v162)(v146, v142);
          ((void (*)(char *, void *))v162)(v149, v142);

          uint64_t v163 = v405;
          uint64_t v95 = v467;
          char v164 = (char)v466;
          goto LABEL_46;
        }
        unint64_t v399 = v150;
        int v400 = v152;
        os_log_t v401 = v151;
        v450 = (char *)v97;
        uint64_t v153 = swift_slowAlloc();
        uint64_t v154 = swift_slowAlloc();
        os_log_t v473 = (os_log_t)v154;
        *(_DWORD *)uint64_t v153 = 136316162;
        uint64_t v155 = v451;
        sub_254E15428();
        v156 = v455;
        int v157 = ((uint64_t (*)(char *, uint64_t, char *))v449)(v155, 1, v455);
        char v158 = v148;
        uint64_t v159 = v146;
        uint64_t v398 = v154;
        if (v157 == 1)
        {
          v160 = &qword_269E10FE8;
          uint64_t v161 = (uint64_t)v155;
        }
        else
        {
          v165 = v440;
          sub_254E15408();
          (*(void (**)(char *, char *))(v448 + 8))(v155, v156);
          uint64_t v166 = sub_254E15498();
          uint64_t v167 = *(void *)(v166 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v165, 1, v166) != 1)
          {
            uint64_t v169 = sub_254E15468();
            unint64_t v168 = v170;
            (*(void (**)(char *, uint64_t))(v167 + 8))(v165, v166);
LABEL_32:
            uint64_t v472 = sub_254658670(v169, v168, (uint64_t *)&v473);
            sub_254E15B08();
            swift_bridgeObjectRelease();
            uint64_t v171 = *(char **)(v464 + 8);
            ((void (*)(char *, void *))v171)(v159, v468);
            *(_WORD *)(v153 + 12) = 2048;
            unint64_t v172 = v452;
            sub_254E15428();
            char v173 = v455;
            if (((unsigned int (*)(unint64_t, uint64_t, char *))v449)(v172, 1, v455) == 1)
            {
              v174 = &qword_269E10FE8;
              uint64_t v175 = v172;
            }
            else
            {
              v176 = v441;
              sub_254E15408();
              (*(void (**)(unint64_t, char *))(v448 + 8))(v172, v173);
              uint64_t v177 = sub_254E15498();
              uint64_t v178 = *(void *)(v177 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48))(v176, 1, v177) != 1)
              {
                uint64_t v180 = sub_254E15488();
                v181 = v176;
                char v183 = v182;
                (*(void (**)(char *, uint64_t))(v178 + 8))(v181, v177);
                if (v183) {
                  uint64_t v179 = 0;
                }
                else {
                  uint64_t v179 = v180;
                }
LABEL_40:
                uint64_t v184 = v461;
                v185 = v171;
                ((void (*)(char *, void *))v171)(v158, v468);
                uint64_t v472 = v179;
                sub_254E15B08();
                *(_WORD *)(v153 + 22) = 2080;
                os_log_t v186 = v453;
                v187 = v463;
                sub_254E153F8();
                uint64_t v188 = v460;
                if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v184 + 48))(v186, 1, v460) == 1)
                {
                  sub_2545C9374((uint64_t)v186, &qword_269E16C00);
                  unint64_t v189 = 0xE300000000000000;
                  char v164 = (char)v466;
                  uint64_t v190 = 7104878;
                }
                else
                {
                  uint64_t v190 = sub_254E153C8();
                  unint64_t v189 = v191;
                  (*(void (**)(os_log_t, uint64_t))(v184 + 8))(v186, v188);
                  char v164 = (char)v466;
                }
                uint64_t v472 = sub_254658670(v190, v189, (uint64_t *)&v473);
                sub_254E15B08();
                swift_bridgeObjectRelease();
                uint64_t v192 = v187;
                v162 = v185;
                ((void (*)(char *, void *))v185)(v192, v468);
                *(_WORD *)(v153 + 32) = 2080;
                uint64_t v193 = v467;
                swift_beginAccess();
                uint64_t v95 = v193;
                uint64_t v194 = sub_254E15AD8();
                uint64_t v472 = sub_254658670(v194, v195, (uint64_t *)&v473);
                sub_254E15B08();
                swift_bridgeObjectRelease();
                *(_WORD *)(v153 + 42) = 2048;
                uint64_t v196 = v399;
                if (v447) {
                  uint64_t v196 = 0;
                }
                uint64_t v472 = v196;
                sub_254E15B08();
                os_log_t v197 = v401;
                _os_log_impl(&dword_2545B9000, v401, (os_log_type_t)v400, "IF Telemetry Event -\n    clientRequestId: %s,\n    spanId: %llu\n    Target: %s,\n    state: %s,\n    with suspending timestamp: %llu,", (uint8_t *)v153, 0x34u);
                uint64_t v198 = v398;
                swift_arrayDestroy();
                MEMORY[0x25A27FC50](v198, -1, -1);
                MEMORY[0x25A27FC50](v153, -1, -1);

                uint64_t v97 = (void (**)(char *, char *, uint64_t))v450;
                uint64_t v163 = v405;
LABEL_46:
                uint64_t v199 = v406;
                uint64_t v200 = (uint64_t)v458;
                if (v164)
                {
                  (*(void (**)(char *, uint64_t))(v470 + 8))(v469, v163);
                  ((void (*)(char *, uint64_t))v97[1])(v404, v199);
LABEL_50:
                  int64_t v113 = &qword_269E16C08;
                  goto LABEL_51;
                }
                sub_254E153F8();
                uint64_t v201 = v461;
                uint64_t v202 = v460;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v461 + 48))(v200, 1, v460) == 1)
                {
                  (*(void (**)(char *, uint64_t))(v470 + 8))(v469, v163);
                  ((void (*)(char *, uint64_t))v97[1])(v404, v199);
                  sub_2545C9374(v200, &qword_269E16C00);
                  goto LABEL_50;
                }
                v466 = v162;
                v450 = (char *)v97;
                uint64_t v204 = *(void (**)(uint64_t, uint64_t, uint64_t))(v201 + 32);
                uint64_t v205 = v201;
                uint64_t v206 = (uint64_t)v444;
                v204((uint64_t)v444, v200, v202);
                swift_beginAccess();
                uint64_t v207 = (uint64_t)v95;
                uint64_t v208 = v95;
                os_log_t v209 = v442;
                sub_2545C9310(v207, (uint64_t)v442, &qword_269E16C08);
                uint64_t v210 = v462;
                uint64_t v211 = v465;
                if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v462 + 48))(v209, 1, v465) == 1)
                {
                  (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v206, v202);
                  (*(void (**)(char *, uint64_t))(v470 + 8))(v469, v163);
                  (*((void (**)(char *, uint64_t))v450 + 1))(v404, v199);
                  sub_2545C9374((uint64_t)v209, &qword_269E16C08);
                  uint64_t v203 = (uint64_t)v208;
                  int64_t v113 = &qword_269E16C08;
                  return sub_2545C9374(v203, v113);
                }
                uint64_t v212 = v443;
                (*(void (**)(char *, os_log_t, uint64_t))(v210 + 32))(v443, v209, v211);
                swift_beginAccess();
                if (v475 == 1)
                {
                  (*(void (**)(char *, uint64_t))(v210 + 8))(v212, v211);
                  (*(void (**)(char *, uint64_t))(v461 + 8))(v444, v202);
                  (*(void (**)(char *, uint64_t))(v470 + 8))(v469, v163);
                  (*((void (**)(char *, uint64_t))v450 + 1))(v404, v199);
                  int64_t v113 = &qword_269E16C08;
                  uint64_t v203 = (uint64_t)v208;
                  return sub_2545C9374(v203, v113);
                }
                unint64_t v452 = v474;
                uint64_t v213 = v439;
                uint64_t v214 = (uint64_t *)(v439 + 16);
                swift_beginAccess();
                uint64_t v215 = *(void *)(v213 + 16);
                if (!*(void *)(v215 + 16) || (sub_254848C30(v446), (v216 & 1) == 0))
                {
                  uint64_t v229 = v462;
                  v230 = *(void (**)(char *, char *, uint64_t))(v462 + 16);
                  v458 = (char *)((v462 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000);
                  v231 = v438;
                  v232 = v443;
                  v230(v438, v443, v211);
                  v233 = *(char **)(v229 + 88);
                  v456 = (char *)((v229 + 88) & 0xFFFFFFFFFFFFLL | 0xA3B5000000000000);
                  v457 = v233;
                  int v234 = ((uint64_t (*)(char *, uint64_t))v233)(v231, v211);
                  int v235 = *MEMORY[0x263F4F608];
                  v236 = *(void (**)(void))(v461 + 16);
                  v463 = (char *)v230;
                  v447 = (char *)v236;
                  if (v234 == v235)
                  {
                    uint64_t v237 = (uint64_t)v426;
                    LODWORD(v451) = v234;
                    v238 = v236;
                    ((void (*)(char *, char *, uint64_t))v236)(v426, v444, v460);
                    uint64_t v239 = v433;
                    v230((char *)(v237 + *(int *)(v433 + 28)), v232, v465);
                    *(void *)(v237 + *(int *)(v239 + 20)) = v452;
                    *(void *)(v237 + *(int *)(v239 + 24)) = 0;
                    __swift_instantiateConcreteTypeFromMangledName(&qword_269E16C18);
                    uint64_t v240 = v163;
                    v241 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269E0C470) - 8);
                    unint64_t v242 = (*(unsigned __int8 *)(*(void *)v241 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v241 + 80);
                    uint64_t v243 = swift_allocObject();
                    *(_OWORD *)(v243 + 16) = xmmword_254E1A010;
                    uint64_t v244 = v243 + v242 + v241[14];
                    v238();
                    sub_254E0E2DC(v237, v244);
                    unint64_t v245 = sub_25464AAEC(v243);
                    swift_beginAccess();
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    uint64_t v472 = *v214;
                    *uint64_t v214 = 0x8000000000000000;
                    uint64_t v247 = v245;
                    uint64_t v163 = v240;
                    sub_25464F040(v247, v446, isUniquelyReferenced_nonNull_native);
                    v248 = v443;
                    *uint64_t v214 = v472;
                    swift_bridgeObjectRelease();
                    swift_endAccess();
                    sub_254E0E340(v237);
                    v453 = *(NSObject **)(v229 + 8);
                    ((void (*)(char *, uint64_t))v453)(v438, v465);
                    uint64_t v249 = v437;
                    v250 = v436;
                    uint64_t v251 = v229;
                    uint64_t v221 = (void (**)(char *, uint64_t))v450;
                    uint64_t v252 = v406;
                  }
                  else
                  {
                    LODWORD(v451) = v235;
                    v253 = v425;
                    uint64_t v254 = v460;
                    ((void (*)(char *, char *, uint64_t))v236)(v425, v444, v460);
                    v255 = v430;
                    v230(v430, v232, v465);
                    v256 = sub_254E15708();
                    int v257 = sub_254E15A48();
                    if (os_log_type_enabled(v256, (os_log_type_t)v257))
                    {
                      LODWORD(v445) = v257;
                      v453 = v256;
                      v258 = v253;
                      uint64_t v259 = swift_slowAlloc();
                      os_log_t v442 = (os_log_t)swift_slowAlloc();
                      os_log_t v473 = v442;
                      *(_DWORD *)uint64_t v259 = 136315650;
                      uint64_t v260 = sub_254E153C8();
                      uint64_t v472 = sub_254658670(v260, v261, (uint64_t *)&v473);
                      sub_254E15B08();
                      swift_bridgeObjectRelease();
                      (*(void (**)(char *, uint64_t))(v461 + 8))(v258, v254);
                      *(_WORD *)(v259 + 12) = 2048;
                      uint64_t v472 = v446;
                      sub_254E15B08();
                      *(_WORD *)(v259 + 22) = 2080;
                      v262 = v424;
                      uint64_t v263 = v465;
                      v230(v424, v255, v465);
                      int v264 = ((uint64_t (*)(char *, uint64_t))v457)(v262, v263);
                      if (v264 == v451)
                      {
                        uint64_t v265 = v263;
                        uint64_t v266 = 0x64657472617473;
                        unint64_t v267 = 0xE700000000000000;
                        uint64_t v252 = v406;
                      }
                      else
                      {
                        uint64_t v252 = v406;
                        uint64_t v265 = v263;
                        if (v264 == *MEMORY[0x263F4F5F8])
                        {
                          uint64_t v266 = 0x6465646E65;
                          unint64_t v267 = 0xE500000000000000;
                        }
                        else
                        {
                          if (v264 == *MEMORY[0x263F4F600]) {
                            uint64_t v266 = 0x64656C696166;
                          }
                          else {
                            uint64_t v266 = 0x6E776F6E6B6E75;
                          }
                          if (v264 == *MEMORY[0x263F4F600]) {
                            unint64_t v267 = 0xE600000000000000;
                          }
                          else {
                            unint64_t v267 = 0xE700000000000000;
                          }
                        }
                      }
                      v290 = *(NSObject **)(v462 + 8);
                      ((void (*)(char *, uint64_t))v290)(v424, v265);
                      uint64_t v472 = sub_254658670(v266, v267, (uint64_t *)&v473);
                      sub_254E15B08();
                      swift_bridgeObjectRelease();
                      ((void (*)(char *, uint64_t))v290)(v430, v265);
                      os_log_t v324 = v453;
                      _os_log_impl(&dword_2545B9000, v453, (os_log_type_t)v445, "Unexpected IF telemetry event before begin event for %s, span: %llu, stateInfo: %s", (uint8_t *)v259, 0x20u);
                      os_log_t v325 = v442;
                      swift_arrayDestroy();
                      MEMORY[0x25A27FC50](v325, -1, -1);
                      MEMORY[0x25A27FC50](v259, -1, -1);

                      uint64_t v163 = v405;
                    }
                    else
                    {
                      (*(void (**)(char *, uint64_t))(v461 + 8))(v253, v254);
                      v290 = *(NSObject **)(v462 + 8);
                      uint64_t v265 = v465;
                      ((void (*)(char *, uint64_t))v290)(v255, v465);

                      uint64_t v252 = v406;
                    }
                    v453 = v290;
                    ((void (*)(char *, uint64_t))v290)(v438, v265);
                    uint64_t v249 = v437;
                    v250 = v436;
                    v248 = v443;
                    uint64_t v251 = v462;
                    uint64_t v221 = (void (**)(char *, uint64_t))v450;
                  }
                  v289 = v435;
                  goto LABEL_97;
                }
                unint64_t v217 = sub_254848C30(v446);
                if ((v218 & 1) == 0 || (uint64_t v219 = *(void *)(*(void *)(v215 + 56) + 8 * v217), !*(void *)(v219 + 16)))
                {
                  uint64_t v223 = v421;
                  v453 = *(NSObject **)(v427 + 56);
                  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v453)(v421, 1, 1, v433);
                  uint64_t v268 = v460;
                  v269 = v443;
                  uint64_t v221 = (void (**)(char *, uint64_t))v450;
LABEL_69:
                  sub_2545C9374(v223, &qword_269E16BF8);
                  uint64_t v270 = v462;
                  v271 = *(void (**)(char *, char *, uint64_t))(v462 + 16);
                  v458 = (char *)((v462 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000);
                  v272 = v431;
                  uint64_t v273 = v465;
                  v271(v431, v269, v465);
                  v274 = *(char **)(v270 + 88);
                  v456 = (char *)((v270 + 88) & 0xFFFFFFFFFFFFLL | 0xA3B5000000000000);
                  v457 = v274;
                  int v275 = ((uint64_t (*)(char *, uint64_t))v274)(v272, v273);
                  int v276 = *MEMORY[0x263F4F608];
                  v277 = *(char **)(v461 + 16);
                  v278 = v420;
                  v447 = v277;
                  if (v275 == v276)
                  {
                    LODWORD(v451) = v275;
                    uint64_t v279 = (uint64_t)v444;
                    v280 = v277;
                    ((void (*)(char *, char *, uint64_t))v277)(v420, v444, v268);
                    uint64_t v281 = (uint64_t)v278;
                    uint64_t v282 = v433;
                    v271((char *)(v281 + *(int *)(v433 + 28)), v269, v273);
                    *(void *)(v281 + *(int *)(v282 + 20)) = v452;
                    *(void *)(v281 + *(int *)(v282 + 24)) = 0;
                    v445 = sub_254E085A8();
                    v283 = sub_254E082C4(&v472, v446);
                    if (*v284)
                    {
                      v285 = v271;
                      uint64_t v286 = (uint64_t)v412;
                      ((void (*)(char *, uint64_t, uint64_t))v280)(v412, v279, v268);
                      uint64_t v287 = v413;
                      sub_254E0E2DC(v281, v413);
                      ((void (*)(uint64_t, void, uint64_t, uint64_t))v453)(v287, 0, 1, v282);
                      v288 = v285;
                      sub_254E08044(v287, v286);
                      ((void (*)(uint64_t *, void))v283)(&v472, 0);
                      ((void (*)(os_log_t *, void))v445)(&v473, 0);
                      v250 = v436;
                      uint64_t v252 = v406;
                      uint64_t v163 = v405;
                      v289 = v435;
                    }
                    else
                    {
                      ((void (*)(uint64_t *, void))v283)(&v472, 0);
                      ((void (*)(os_log_t *, void))v445)(&v473, 0);
                      v250 = v436;
                      uint64_t v252 = v406;
                      uint64_t v163 = v405;
                      v289 = v435;
                      v288 = v271;
                    }
                    sub_254E0E340(v281);
                    uint64_t v251 = v462;
                    v453 = *(NSObject **)(v462 + 8);
                    ((void (*)(char *, uint64_t))v453)(v431, v465);
                    uint64_t v249 = v437;
                    v248 = v443;
                    uint64_t v221 = (void (**)(char *, uint64_t))v450;
LABEL_98:
                    uint64_t v326 = v465;
                    v288(v289, v248, v465);
                    int v327 = ((uint64_t (*)(char *, uint64_t))v457)(v289, v326);
                    if (v327 == *MEMORY[0x263F4F600])
                    {
                      v463 = (char *)v288;
                      LODWORD(v442) = v327;
                      (*(void (**)(char *, uint64_t))(v251 + 96))(v289, v465);
                      uint64_t v328 = v434;
                      uint64_t v329 = (*(uint64_t (**)(char *, char *, uint64_t))(v249 + 32))(v250, v289, v434);
                      uint64_t v330 = (uint64_t)v429;
                      MEMORY[0x25A27EAA0](v329);
                      uint64_t v331 = (uint64_t)v444;
                      uint64_t v332 = getPlannerFailureInfo(from:iferror:)((uint64_t)v444, v330);
                      sub_2545C9374(v330, &qword_269E10EB8);
                      if (v332)
                      {
                        uint64_t v333 = v439;
                        swift_beginAccess();
                        swift_retain();
                        char v334 = swift_isUniquelyReferenced_nonNull_native();
                        uint64_t v472 = *(void *)(v333 + 24);
                        *(void *)(v333 + 24) = 0x8000000000000000;
                        uint64_t v335 = v331;
                        sub_25464EF04(v332, v446, v334);
                        *(void *)(v333 + 24) = v472;
                        swift_bridgeObjectRelease();
                        swift_endAccess();
                        v336 = v423;
                        v402(v423, v471, v468);
                        uint64_t v337 = v461;
                        v338 = v428;
                        uint64_t v339 = v460;
                        ((void (*)(char *, uint64_t, uint64_t))v447)(v428, v335, v460);
                        v340 = v432;
                        ((void (*)(char *, char *, uint64_t))v463)(v432, v443, v465);
                        swift_retain_n();
                        v341 = sub_254E15708();
                        LODWORD(v471) = sub_254E15A38();
                        BOOL v342 = os_log_type_enabled(v341, (os_log_type_t)v471);
                        v445 = v332;
                        if (v342)
                        {
                          os_log_t v459 = v341;
                          uint64_t v343 = swift_slowAlloc();
                          v447 = (char *)swift_slowAlloc();
                          os_log_t v473 = (os_log_t)v447;
                          *(_DWORD *)uint64_t v343 = 136316418;
                          uint64_t v344 = (uint64_t)v418;
                          sub_254E15428();
                          v345 = v455;
                          v346 = v336;
                          if (((unsigned int (*)(uint64_t, uint64_t, char *))v449)(v344, 1, v455) == 1)
                          {
                            uint64_t v347 = 7104878;
                            sub_2545C9374(v344, &qword_269E10FE8);
                            unint64_t v348 = 0xE300000000000000;
                            v349 = v432;
                            v350 = v428;
                          }
                          else
                          {
                            uint64_t v357 = (uint64_t)v411;
                            sub_254E15408();
                            (*(void (**)(uint64_t, char *))(v448 + 8))(v344, v345);
                            uint64_t v358 = sub_254E15498();
                            uint64_t v359 = *(void *)(v358 - 8);
                            int v360 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v359 + 48))(v357, 1, v358);
                            v349 = v432;
                            v350 = v428;
                            if (v360 == 1)
                            {
                              uint64_t v347 = 7104878;
                              sub_2545C9374(v357, &qword_269E10FF0);
                              unint64_t v348 = 0xE300000000000000;
                            }
                            else
                            {
                              uint64_t v347 = sub_254E15468();
                              uint64_t v361 = v357;
                              unint64_t v348 = v362;
                              (*(void (**)(uint64_t, uint64_t))(v359 + 8))(v361, v358);
                            }
                          }
                          uint64_t v472 = sub_254658670(v347, v348, (uint64_t *)&v473);
                          sub_254E15B08();
                          swift_bridgeObjectRelease();
                          ((void (*)(char *, void *))v466)(v346, v468);
                          *(_WORD *)(v343 + 12) = 2048;
                          uint64_t v472 = v446;
                          sub_254E15B08();
                          *(_WORD *)(v343 + 22) = 2080;
                          uint64_t v363 = sub_254E153C8();
                          uint64_t v472 = sub_254658670(v363, v364, (uint64_t *)&v473);
                          sub_254E15B08();
                          swift_bridgeObjectRelease();
                          v365 = *(void (**)(char *, uint64_t))(v461 + 8);
                          v461 += 8;
                          v365(v350, v460);
                          *(_WORD *)(v343 + 32) = 2080;
                          v366 = v422;
                          uint64_t v367 = v465;
                          ((void (*)(char *, char *, uint64_t))v463)(v422, v349, v465);
                          int v368 = ((uint64_t (*)(char *, uint64_t))v457)(v366, v367);
                          v468 = v365;
                          if (v368 == v451)
                          {
                            uint64_t v369 = 0x64657472617473;
                            unint64_t v370 = 0xE700000000000000;
                            v371 = (void (**)(char *, uint64_t))v450;
                          }
                          else
                          {
                            v371 = (void (**)(char *, uint64_t))v450;
                            if (v368 == *MEMORY[0x263F4F5F8])
                            {
                              uint64_t v369 = 0x6465646E65;
                              unint64_t v370 = 0xE500000000000000;
                            }
                            else
                            {
                              if (v368 == v442) {
                                uint64_t v369 = 0x64656C696166;
                              }
                              else {
                                uint64_t v369 = 0x6E776F6E6B6E75;
                              }
                              if (v368 == v442) {
                                unint64_t v370 = 0xE600000000000000;
                              }
                              else {
                                unint64_t v370 = 0xE700000000000000;
                              }
                            }
                          }
                          os_log_t v372 = v453;
                          ((void (*)(char *, uint64_t))v453)(v422, v367);
                          uint64_t v472 = sub_254658670(v369, v370, (uint64_t *)&v473);
                          sub_254E15B08();
                          swift_bridgeObjectRelease();
                          ((void (*)(char *, uint64_t))v372)(v432, v367);
                          *(_WORD *)(v343 + 42) = 2048;
                          uint64_t v472 = v452;
                          sub_254E15B08();
                          *(_WORD *)(v343 + 52) = 2080;
                          uint64_t v373 = sub_25484871C();
                          uint64_t v472 = sub_254658670(v373, v374, (uint64_t *)&v473);
                          sub_254E15B08();
                          swift_release_n();
                          swift_bridgeObjectRelease();
                          os_log_t v375 = v459;
                          _os_log_impl(&dword_2545B9000, v459, (os_log_type_t)v471, "IF Telemetry - Found a Failure in Planner Steps\n    clientRequestId: %s,\n    spanId: %llu\n    Target: %s,\n    state: %s,\n    with suspending timestamp: %llu,\n    %s", (uint8_t *)v343, 0x3Eu);
                          v376 = v447;
                          swift_arrayDestroy();
                          MEMORY[0x25A27FC50](v376, -1, -1);
                          MEMORY[0x25A27FC50](v343, -1, -1);
                          swift_release();

                          (*(void (**)(char *, uint64_t))(v437 + 8))(v436, v434);
                          ((void (*)(char *, uint64_t))v372)(v443, v367);
                          ((void (*)(char *, uint64_t))v468)(v444, v460);
                          (*(void (**)(char *, uint64_t))(v470 + 8))(v469, v405);
                          v371[1](v404, v406);
                        }
                        else
                        {
                          swift_release_n();

                          uint64_t v354 = v465;
                          os_log_t v355 = v453;
                          ((void (*)(char *, uint64_t))v453)(v340, v465);
                          v356 = *(void (**)(char *, uint64_t))(v337 + 8);
                          v356(v338, v339);
                          ((void (*)(char *, void *))v466)(v336, v468);
                          swift_release();
                          (*(void (**)(char *, uint64_t))(v249 + 8))(v250, v434);
                          ((void (*)(char *, uint64_t))v355)(v443, v354);
                          v356(v444, v339);
                          (*(void (**)(char *, uint64_t))(v470 + 8))(v469, v405);
                          (*((void (**)(char *, uint64_t))v450 + 1))(v404, v406);
                        }
                      }
                      else
                      {
                        (*(void (**)(char *, uint64_t))(v249 + 8))(v250, v328);
                        ((void (*)(char *, uint64_t))v453)(v443, v465);
                        (*(void (**)(uint64_t, uint64_t))(v461 + 8))(v331, v460);
                        (*(void (**)(char *, uint64_t))(v470 + 8))(v469, v405);
                        v221[1](v404, v252);
                      }
                    }
                    else
                    {
                      v351 = v248;
                      uint64_t v352 = v465;
                      os_log_t v353 = v453;
                      ((void (*)(char *, uint64_t))v453)(v351, v465);
                      (*(void (**)(char *, uint64_t))(v461 + 8))(v444, v460);
                      (*(void (**)(char *, uint64_t))(v470 + 8))(v469, v163);
                      v221[1](v404, v252);
                      ((void (*)(char *, uint64_t))v353)(v289, v352);
                    }
                    int64_t v113 = &qword_269E16C08;
                    uint64_t v203 = (uint64_t)v467;
                    return sub_2545C9374(v203, v113);
                  }
                  LODWORD(v451) = v276;
                  v291 = v416;
                  ((void (*)(char *, char *, uint64_t))v277)(v416, v444, v268);
                  v292 = v419;
                  v271(v419, v269, v273);
                  v293 = sub_254E15708();
                  int v294 = sub_254E15A48();
                  BOOL v295 = os_log_type_enabled(v293, (os_log_type_t)v294);
                  v463 = (char *)v271;
                  if (v295)
                  {
                    LODWORD(v445) = v294;
                    v453 = v293;
                    uint64_t v296 = swift_slowAlloc();
                    os_log_t v442 = (os_log_t)swift_slowAlloc();
                    os_log_t v473 = v442;
                    *(_DWORD *)uint64_t v296 = 136315650;
                    uint64_t v297 = sub_254E153C8();
                    uint64_t v472 = sub_254658670(v297, v298, (uint64_t *)&v473);
                    sub_254E15B08();
                    swift_bridgeObjectRelease();
                    (*(void (**)(char *, uint64_t))(v461 + 8))(v291, v268);
                    *(_WORD *)(v296 + 12) = 2048;
                    uint64_t v472 = v446;
                    sub_254E15B08();
                    *(_WORD *)(v296 + 22) = 2080;
                    v299 = v415;
                    v271(v415, v419, v273);
                    int v300 = ((uint64_t (*)(char *, uint64_t))v457)(v299, v273);
                    if (v300 == v451)
                    {
                      uint64_t v301 = 0x64657472617473;
                      unint64_t v302 = 0xE700000000000000;
                    }
                    else if (v300 == *MEMORY[0x263F4F5F8])
                    {
                      uint64_t v301 = 0x6465646E65;
                      unint64_t v302 = 0xE500000000000000;
                    }
                    else
                    {
                      if (v300 == *MEMORY[0x263F4F600]) {
                        uint64_t v301 = 0x64656C696166;
                      }
                      else {
                        uint64_t v301 = 0x6E776F6E6B6E75;
                      }
                      if (v300 == *MEMORY[0x263F4F600]) {
                        unint64_t v302 = 0xE600000000000000;
                      }
                      else {
                        unint64_t v302 = 0xE700000000000000;
                      }
                    }
                    v303 = *(NSObject **)(v462 + 8);
                    uint64_t v273 = v465;
                    ((void (*)(char *, uint64_t))v303)(v415, v465);
                    uint64_t v472 = sub_254658670(v301, v302, (uint64_t *)&v473);
                    sub_254E15B08();
                    swift_bridgeObjectRelease();
                    ((void (*)(char *, uint64_t))v303)(v419, v273);
                    os_log_t v391 = v453;
                    _os_log_impl(&dword_2545B9000, v453, (os_log_type_t)v445, "Unexpected IF telemetry event for exisiting interval %s, span: %llu, stateInfo: %s", (uint8_t *)v296, 0x20u);
                    os_log_t v392 = v442;
                    swift_arrayDestroy();
                    MEMORY[0x25A27FC50](v392, -1, -1);
                    MEMORY[0x25A27FC50](v296, -1, -1);

                    uint64_t v221 = (void (**)(char *, uint64_t))v450;
                  }
                  else
                  {
                    (*(void (**)(char *, uint64_t))(v461 + 8))(v291, v268);
                    v303 = *(NSObject **)(v462 + 8);
                    ((void (*)(char *, uint64_t))v303)(v292, v273);
                  }
                  v289 = v435;
                  v453 = v303;
                  ((void (*)(char *, uint64_t))v303)(v431, v273);
                  uint64_t v249 = v437;
                  v250 = v436;
                  v248 = v443;
                  uint64_t v251 = v462;
                  uint64_t v252 = v406;
                  uint64_t v163 = v405;
LABEL_97:
                  v288 = (void (*)(char *, char *, uint64_t))v463;
                  goto LABEL_98;
                }
                swift_bridgeObjectRetain();
                unint64_t v220 = sub_254848C74((uint64_t)v444);
                uint64_t v221 = (void (**)(char *, uint64_t))v450;
                uint64_t v222 = (int *)v433;
                uint64_t v223 = v421;
                uint64_t v225 = v427;
                if (v224)
                {
                  sub_254E0E2DC(*(void *)(v219 + 56) + *(void *)(v427 + 72) * v220, v421);
                  v226 = *(NSObject **)(v225 + 56);
                  uint64_t v227 = v223;
                  uint64_t v228 = 0;
                }
                else
                {
                  v226 = *(NSObject **)(v427 + 56);
                  uint64_t v227 = v421;
                  uint64_t v228 = 1;
                }
                v453 = v226;
                ((void (*)(uint64_t, uint64_t, uint64_t, int *))v226)(v227, v228, 1, v222);
                uint64_t v304 = v462;
                uint64_t v305 = v417;
                swift_bridgeObjectRelease();
                if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v225 + 48))(v223, 1, v222) == 1)
                {
                  uint64_t v268 = v460;
                  v269 = v443;
                  goto LABEL_69;
                }
                sub_254E0F268(v223, v305, (uint64_t (*)(void))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
                uint64_t v306 = v305 + v222[7];
                v288 = *(void (**)(char *, char *, uint64_t))(v304 + 16);
                v458 = (char *)((v304 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000);
                v307 = v414;
                uint64_t v308 = v465;
                v288(v414, (char *)v306, v465);
                v309 = *(char **)(v304 + 88);
                v456 = (char *)((v304 + 88) & 0xFFFFFFFFFFFFLL | 0xA3B5000000000000);
                v457 = v309;
                int v310 = ((uint64_t (*)(char *, uint64_t))v309)(v307, v308);
                v311 = *(char **)(v461 + 16);
                LODWORD(v451) = *MEMORY[0x263F4F608];
                uint64_t v312 = v460;
                v313 = v443;
                v447 = v311;
                if (v310 == v451)
                {
                  uint64_t v314 = (uint64_t)v409;
                  v315 = v311;
                  ((void (*)(char *, char *, uint64_t))v311)(v409, v444, v460);
                  uint64_t v316 = v305;
                  unint64_t v317 = *(void *)(v305 + v222[5]);
                  double v318 = sub_254E0E39C(v317, v452);
                  v288((char *)(v314 + v222[7]), v313, v465);
                  *(void *)(v314 + v222[5]) = v317;
                  *(double *)(v314 + v222[6]) = v318;
                  v445 = sub_254E085A8();
                  v319 = sub_254E082C4(&v472, v446);
                  if (*v320)
                  {
                    uint64_t v321 = (uint64_t)v412;
                    ((void (*)(char *, char *, uint64_t))v315)(v412, v444, v312);
                    uint64_t v322 = v413;
                    sub_254E0E2DC(v314, v413);
                    ((void (*)(uint64_t, void, uint64_t, int *))v453)(v322, 0, 1, v222);
                    sub_254E08044(v322, v321);
                    ((void (*)(uint64_t *, void))v319)(&v472, 0);
                    ((void (*)(os_log_t *, void))v445)(&v473, 0);
                    sub_254E0E340(v314);
                    uint64_t v323 = v417;
                  }
                  else
                  {
                    ((void (*)(uint64_t *, void))v319)(&v472, 0);
                    ((void (*)(os_log_t *, void))v445)(&v473, 0);
                    sub_254E0E340(v314);
                    uint64_t v323 = v316;
                  }
                  sub_254E0E340(v323);
                  uint64_t v251 = v462;
                  uint64_t v221 = (void (**)(char *, uint64_t))v450;
                }
                else
                {
                  v377 = v408;
                  ((void (*)(void))v311)();
                  v378 = v410;
                  v288(v410, v313, v465);
                  v379 = sub_254E15708();
                  int v380 = sub_254E15A48();
                  if (os_log_type_enabled(v379, (os_log_type_t)v380))
                  {
                    os_log_t v442 = v379;
                    uint64_t v382 = swift_slowAlloc();
                    v445 = swift_slowAlloc();
                    os_log_t v473 = v445;
                    *(_DWORD *)uint64_t v382 = 136315650;
                    uint64_t v383 = sub_254E153C8();
                    uint64_t v472 = sub_254658670(v383, v384, (uint64_t *)&v473);
                    sub_254E15B08();
                    swift_bridgeObjectRelease();
                    (*(void (**)(char *, uint64_t))(v461 + 8))(v377, v312);
                    *(_WORD *)(v382 + 12) = 2048;
                    uint64_t v472 = v446;
                    sub_254E15B08();
                    *(_WORD *)(v382 + 22) = 2080;
                    v385 = v407;
                    uint64_t v386 = v465;
                    v288(v407, v410, v465);
                    int v387 = ((uint64_t (*)(char *, uint64_t))v457)(v385, v386);
                    v463 = (char *)v288;
                    LODWORD(v453) = v380;
                    if (v387 == v451)
                    {
                      uint64_t v388 = v465;
                      uint64_t v389 = 0x64657472617473;
                      unint64_t v390 = 0xE700000000000000;
                    }
                    else
                    {
                      uint64_t v388 = v465;
                      if (v387 == *MEMORY[0x263F4F5F8])
                      {
                        uint64_t v389 = 0x6465646E65;
                        unint64_t v390 = 0xE500000000000000;
                      }
                      else
                      {
                        if (v387 == *MEMORY[0x263F4F600]) {
                          uint64_t v389 = 0x64656C696166;
                        }
                        else {
                          uint64_t v389 = 0x6E776F6E6B6E75;
                        }
                        if (v387 == *MEMORY[0x263F4F600]) {
                          unint64_t v390 = 0xE600000000000000;
                        }
                        else {
                          unint64_t v390 = 0xE700000000000000;
                        }
                      }
                    }
                    uint64_t v393 = v462;
                    v394 = *(void (**)(char *, uint64_t))(v462 + 8);
                    v394(v407, v388);
                    uint64_t v472 = sub_254658670(v389, v390, (uint64_t *)&v473);
                    sub_254E15B08();
                    swift_bridgeObjectRelease();
                    v394(v410, v388);
                    os_log_t v395 = v442;
                    _os_log_impl(&dword_2545B9000, v442, (os_log_type_t)v453, "Unexpected IF telemetry event for exisiting interval %s, span: %llu, stateInfo: %s", (uint8_t *)v382, 0x20u);
                    v396 = v445;
                    swift_arrayDestroy();
                    MEMORY[0x25A27FC50](v396, -1, -1);
                    MEMORY[0x25A27FC50](v382, -1, -1);

                    uint64_t v251 = v393;
                    sub_254E0E340(v417);
                    uint64_t v221 = (void (**)(char *, uint64_t))v450;
                    uint64_t v252 = v406;
                    v288 = (void (*)(char *, char *, uint64_t))v463;
                    goto LABEL_147;
                  }

                  uint64_t v251 = v462;
                  (*(void (**)(char *, uint64_t))(v462 + 8))(v378, v465);
                  (*(void (**)(char *, uint64_t))(v461 + 8))(v377, v312);
                  sub_254E0E340(v417);
                }
                uint64_t v252 = v406;
LABEL_147:
                v453 = *(NSObject **)(v251 + 8);
                ((void (*)(char *, uint64_t))v453)(v414, v465);
                uint64_t v249 = v437;
                v250 = v436;
                v248 = v443;
                uint64_t v163 = v405;
                v289 = v435;
                goto LABEL_98;
              }
              v174 = &qword_269E10FF0;
              uint64_t v175 = (uint64_t)v176;
            }
            sub_2545C9374(v175, v174);
            uint64_t v179 = 0;
            goto LABEL_40;
          }
          v160 = &qword_269E10FF0;
          uint64_t v161 = (uint64_t)v165;
        }
        sub_2545C9374(v161, v160);
        unint64_t v168 = 0xE300000000000000;
        uint64_t v169 = 7104878;
        goto LABEL_32;
      }
      uint64_t v131 = &qword_269E10FF0;
      uint64_t v132 = (uint64_t)v133;
    }
    sub_2545C9374(v132, v131);
    uint64_t v446 = 0;
    LODWORD(v466) = 1;
    goto LABEL_24;
  }
  int64_t v113 = &qword_269E16C10;
LABEL_51:
  uint64_t v203 = (uint64_t)v95;
  return sub_2545C9374(v203, v113);
}

uint64_t sub_254E0C738(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16BF8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a2 + 56;
  uint64_t v11 = *(void *)(a2 + 56);
  char v13 = *(unsigned char *)(a2 + 32);
  uint64_t v40 = 1;
  uint64_t v14 = 1 << v13;
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v11;
  uint64_t v17 = (uint64_t *)(v3 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  double v39 = 0.0;
  int64_t v19 = 0;
  int64_t v20 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v21 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v41 = v9;
  uint64_t v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v16) {
    goto LABEL_7;
  }
LABEL_8:
  while (2)
  {
    int64_t v24 = v19 + 1;
    if (!__OFADD__(v19, 1))
    {
      if (v24 < v20)
      {
        unint64_t v25 = *(void *)(v12 + 8 * v24);
        ++v19;
        if (v25) {
          goto LABEL_21;
        }
        int64_t v19 = v24 + 1;
        if (v24 + 1 >= v20) {
          goto LABEL_34;
        }
        unint64_t v25 = *(void *)(v12 + 8 * v19);
        if (v25) {
          goto LABEL_21;
        }
        int64_t v19 = v24 + 2;
        if (v24 + 2 >= v20) {
          goto LABEL_34;
        }
        unint64_t v25 = *(void *)(v12 + 8 * v19);
        if (v25)
        {
LABEL_21:
          unint64_t v16 = (v25 - 1) & v25;
          for (unint64_t i = __clz(__rbit64(v25)) + (v19 << 6); ; unint64_t i = v22 | (v19 << 6))
          {
            uint64_t v27 = *v17;
            if (!*(void *)(*v17 + 16)) {
              break;
            }
            unint64_t v28 = sub_254848C30(*(void *)(*(void *)(a2 + 48) + 8 * i));
            if ((v29 & 1) == 0) {
              break;
            }
            uint64_t v30 = *(void *)(*(void *)(v27 + 56) + 8 * v28);
            if (!*(void *)(v30 + 16)) {
              break;
            }
            swift_bridgeObjectRetain();
            unint64_t v31 = sub_254848C74(v43);
            if (v32)
            {
              sub_254E0E2DC(*(void *)(v30 + 56) + *(void *)(v41 + 72) * v31, (uint64_t)v7);
              uint64_t v33 = 0;
            }
            else
            {
              uint64_t v33 = 1;
            }
            (*v21)(v7, v33, 1, v8);
            swift_bridgeObjectRelease();
            if ((*v42)(v7, 1, v8) == 1) {
              goto LABEL_6;
            }
            uint64_t v34 = v38;
            sub_254E0F268((uint64_t)v7, v38, (uint64_t (*)(void))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
            if (v40) {
              double v35 = 0.0;
            }
            else {
              double v35 = v39;
            }
            double v36 = *(double *)(v34 + *(int *)(v8 + 24));
            uint64_t result = sub_254E0E340(v34);
            uint64_t v40 = 0;
            double v39 = v35 + v36;
            if (!v16) {
              goto LABEL_8;
            }
LABEL_7:
            unint64_t v22 = __clz(__rbit64(v16));
            v16 &= v16 - 1;
          }
          (*v21)(v7, 1, 1, v8);
LABEL_6:
          uint64_t result = sub_2545C9374((uint64_t)v7, &qword_269E16BF8);
          if (!v16) {
            continue;
          }
          goto LABEL_7;
        }
        int64_t v26 = v24 + 3;
        if (v26 < v20)
        {
          unint64_t v25 = *(void *)(v12 + 8 * v26);
          if (v25)
          {
            int64_t v19 = v26;
            goto LABEL_21;
          }
          while (1)
          {
            int64_t v19 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_36;
            }
            if (v19 >= v20) {
              break;
            }
            unint64_t v25 = *(void *)(v12 + 8 * v19);
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
      }
LABEL_34:
      swift_release();
      return *(void *)&v39;
    }
    break;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t IntelligenceFlowTelemetryLatencyCalculator.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t IntelligenceFlowTelemetryLatencyCalculator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_254E0CB4C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_254E15B38();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_254E15ED8();
        swift_bridgeObjectRetain();
        sub_254E15868();
        uint64_t v10 = sub_254E15F08();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          char v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *char v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          unint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          uint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            _OWORD *v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_254E0CD24(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_254E15B38();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_254E15EC8();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            unint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              void *v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_254E0CEBC(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E153D8();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v41 = a2 + 64;
    unint64_t result = sub_254E15B38();
    uint64_t v12 = v41;
    if ((*(void *)(v41 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v39 = (result + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v38 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      unint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      do
      {
        int64_t v17 = v15 * v10;
        v38(v8, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_254651208();
        uint64_t v18 = sub_254E15798();
        unint64_t result = (*v16)(v8, v4);
        unint64_t v19 = v18 & v11;
        if (a1 >= (uint64_t)v39)
        {
          if (v19 < v39 || a1 < (uint64_t)v19) {
            goto LABEL_6;
          }
        }
        else if (v19 < v39 && a1 < (uint64_t)v19)
        {
          goto LABEL_6;
        }
        uint64_t v22 = *(void *)(a2 + 48);
        unint64_t v23 = v22 + v15 * a1;
        unint64_t v24 = v22 + v17 + v15;
        if (v15 * a1 < v17 || v23 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v15 * a1 != v17)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v26 = *(void *)(a2 + 56);
        uint64_t v27 = *(void *)(*(void *)(type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval()
                                    - 8)
                        + 72);
        int64_t v28 = v27 * a1;
        unint64_t result = v26 + v27 * a1;
        int64_t v29 = v27 * v10;
        unint64_t v30 = v26 + v27 * v10 + v27;
        if (v28 < v29 || result >= v30)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v28 == v29) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v12 = v41;
      }
      while (((*(void *)(v41 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    char v32 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v33 = *v32;
    uint64_t v34 = (-1 << a1) - 1;
  }
  else
  {
    char v32 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v34 = *v32;
    uint64_t v33 = (-1 << a1) - 1;
  }
  *char v32 = v34 & v33;
  uint64_t v35 = *(void *)(a2 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_254E0D1AC(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    unint64_t result = sub_254E15B38();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      while (1)
      {
        sub_254E15ED8();
        swift_bridgeObjectRetain();
        sub_254E15868();
        uint64_t v11 = sub_254E15F08();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v9;
        if (v4 >= (uint64_t)v10) {
          break;
        }
        if (v12 < v10) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v13 = *(void *)(a2 + 48);
        uint64_t v14 = (_OWORD *)(v13 + 16 * v4);
        uint64_t v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1) {
          *uint64_t v14 = *v15;
        }
        uint64_t v16 = *(void *)(a2 + 56);
        uint64_t v17 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v18 = v17 * v4;
        unint64_t result = v16 + v17 * v4;
        int64_t v19 = v17 * v7;
        unint64_t v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v18 == v19) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
        if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v12 < v10) {
        goto LABEL_6;
      }
LABEL_11:
      if (v4 < (uint64_t)v12) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << result) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void (*sub_254E0D3CC(void *a1, uint64_t a2))(uint64_t a1)
{
  int64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_254E0DD6C(v4);
  v4[9] = sub_254E0D68C(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_254E0D45C;
}

void sub_254E0D45C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

uint64_t (*sub_254E0D4BC(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_254E0DD6C(v6);
  v6[10] = sub_254E0D850(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_254E0D568;
}

uint64_t (*sub_254E0D56C(void *a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_254E0DD9C(v6);
  v6[10] = sub_254E0DAA4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_254E0D568;
}

void sub_254E0D618(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

void (*sub_254E0D68C(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  int64_t v4 = v3;
  unint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_254848C30(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *unint64_t v8 = v17;
        return sub_254E0D7BC;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_25464FF20();
      goto LABEL_7;
    }
    sub_25464D9CC(v14, a3 & 1);
    unint64_t v18 = sub_254848C30(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  unint64_t result = (void (*)(uint64_t **))sub_254E15E58();
  __break(1u);
  return result;
}

void sub_254E0D7BC(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  char v3 = *((unsigned char *)*a1 + 32);
  if (v2)
  {
    unint64_t v4 = v1[3];
    uint64_t v5 = *(void **)v1[2];
    if (v3) {
      *(void *)(v5[7] + 8 * v4) = v2;
    }
    else {
      sub_25464F7A4(v4, v1[1], v2, v5);
    }
  }
  else if ((*a1)[4])
  {
    sub_254E0CD24(v1[3], *(void *)v1[2]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  free(v1);
}

void (*sub_254E0D850(void *a1, uint64_t a2, uint64_t a3, char a4))(void **a1, uint64_t a2)
{
  uint64_t v5 = v4;
  char v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  void v10[2] = v4;
  *char v10 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D70);
  uint64_t v12 = malloc(*(void *)(*(void *)(v11 - 8) + 64));
  v10[3] = v12;
  uint64_t v13 = *v4;
  unint64_t v15 = sub_254848AD8(a2, a3);
  *((unsigned char *)v10 + 40) = v14 & 1;
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    char v19 = v14;
    uint64_t v20 = *(void *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if (v19)
      {
LABEL_8:
        uint64_t v21 = *(void *)(*v5 + 56);
        uint64_t v22 = type metadata accessor for SessionData(0);
        uint64_t v23 = *(void *)(v22 - 8);
        sub_254E0F268(v21 + *(void *)(v23 + 72) * v15, (uint64_t)v12, type metadata accessor for SessionData);
        uint64_t v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_254E0DA84;
      }
LABEL_11:
      uint64_t v22 = type metadata accessor for SessionData(0);
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_2546506B0();
      goto LABEL_7;
    }
    sub_25464E4F8(v18, a4 & 1);
    unint64_t v25 = sub_254848AD8(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      unint64_t v15 = v25;
      v10[4] = v25;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  unint64_t result = (void (*)(void **, uint64_t))sub_254E15E58();
  __break(1u);
  return result;
}

void sub_254E0DA84(void **a1, uint64_t a2)
{
}

void (*sub_254E0DAA4(void *a1, uint64_t a2, uint64_t a3, char a4))(void **a1, uint64_t a2)
{
  uint64_t v5 = v4;
  char v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  void v10[2] = v4;
  *char v10 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10FD8);
  uint64_t v12 = malloc(*(void *)(*(void *)(v11 - 8) + 64));
  v10[3] = v12;
  uint64_t v13 = *v4;
  unint64_t v15 = sub_254848AD8(a2, a3);
  *((unsigned char *)v10 + 40) = v14 & 1;
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    char v19 = v14;
    uint64_t v20 = *(void *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if (v19)
      {
LABEL_8:
        uint64_t v21 = *(void *)(*v5 + 56);
        uint64_t v22 = type metadata accessor for RequestData(0);
        uint64_t v23 = *(void *)(v22 - 8);
        sub_254E0F268(v21 + *(void *)(v23 + 72) * v15, (uint64_t)v12, type metadata accessor for RequestData);
        uint64_t v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_254E0DCD8;
      }
LABEL_11:
      uint64_t v22 = type metadata accessor for RequestData(0);
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_2546506E4();
      goto LABEL_7;
    }
    sub_25464E52C(v18, a4 & 1);
    unint64_t v25 = sub_254848AD8(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      unint64_t v15 = v25;
      v10[4] = v25;
      if (v19) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  unint64_t result = (void (*)(void **, uint64_t))sub_254E15E58();
  __break(1u);
  return result;
}

void sub_254E0DCD8(void **a1, uint64_t a2)
{
}

void sub_254E0DCF8(void **a1, uint64_t a2, void (*a3)(void *, void, void, void, void, void), uint64_t *a4)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a1)[3];
  a3(v6, *((unsigned __int8 *)*a1 + 40), (*a1)[2], (*a1)[4], **a1, (*a1)[1]);
  sub_2545C9374((uint64_t)v6, a4);
  free(v6);

  free(v5);
}

uint64_t (*sub_254E0DD6C(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_254E0F2D0;
}

uint64_t (*sub_254E0DD9C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_254E0DDCC;
}

uint64_t sub_254E0DDCC(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

unint64_t sub_254E0DDD8(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10D70);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SessionData(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  BOOL v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  char v19 = (char *)&v22 - v18;
  sub_2545C9310(a1, (uint64_t)v12, &qword_269E10D70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_2545C9374((uint64_t)v12, &qword_269E10D70);
    if (a2)
    {
      swift_arrayDestroy();
      return sub_254E0D1AC(a4, *a3, type metadata accessor for SessionData);
    }
  }
  else
  {
    sub_254E0F268((uint64_t)v12, (uint64_t)v19, type metadata accessor for SessionData);
    uint64_t v21 = (void *)*a3;
    if (a2)
    {
      return sub_254E0F268((uint64_t)v19, v21[7] + *(void *)(v14 + 72) * a4, type metadata accessor for SessionData);
    }
    else
    {
      sub_254E0F268((uint64_t)v19, (uint64_t)v17, type metadata accessor for SessionData);
      sub_25464F8DC(a4, v22, v23, (uint64_t)v17, v21);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

unint64_t sub_254E0E034(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E10FD8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for RequestData(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  BOOL v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  char v19 = (char *)&v22 - v18;
  sub_2545C9310(a1, (uint64_t)v12, &qword_269E10FD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_2545C9374((uint64_t)v12, &qword_269E10FD8);
    if (a2)
    {
      swift_arrayDestroy();
      return sub_254E0D1AC(a4, *a3, type metadata accessor for RequestData);
    }
  }
  else
  {
    sub_254E0F268((uint64_t)v12, (uint64_t)v19, type metadata accessor for RequestData);
    uint64_t v21 = (void *)*a3;
    if (a2)
    {
      return sub_254E0F268((uint64_t)v19, v21[7] + *(void *)(v14 + 72) * a4, type metadata accessor for RequestData);
    }
    else
    {
      sub_254E0F268((uint64_t)v19, (uint64_t)v17, type metadata accessor for RequestData);
      sub_25464F908(a4, v22, v23, (uint64_t)v17, v21);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval()
{
  uint64_t result = qword_269E16C20;
  if (!qword_269E16C20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_254E0E2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_254E0E340(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_254E0E39C(unint64_t a1, unint64_t a2)
{
  if (a2 >= a1) {
    return (double)(a2 - a1) / 1000000000.0;
  }
  uint64_t v17 = v2;
  uint64_t v18 = v3;
  if (qword_269E0C090 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_254E15718();
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_269E70698);
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  unint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  sub_254E15B68();
  swift_bridgeObjectRelease();
  unint64_t v15 = 0xD000000000000010;
  unint64_t v16 = 0x8000000254E57370;
  unint64_t v14 = a1;
  sub_254E15DF8();
  sub_254E15878();
  swift_bridgeObjectRelease();
  sub_254E15878();
  unint64_t v14 = a2;
  sub_254E15DF8();
  sub_254E15878();
  swift_bridgeObjectRelease();
  uint64_t v11 = v15;
  LOBYTE(v15) = 112;
  sub_254DD50E0(v11, v16, (char *)&v15);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  return 0.0;
}

uint64_t sub_254E0E5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E16C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_254E0E648@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_254E0E698@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_254E0E6E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_254E0E738@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return result;
}

uint64_t sub_254E0E780(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 40) = v2;
  return result;
}

uint64_t type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator()
{
  return self;
}

uint64_t method lookup function for IntelligenceFlowTelemetryLatencyCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for IntelligenceFlowTelemetryLatencyCalculator);
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanIntervals.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanIntervals.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanIntervals.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanfailureInfo.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanfailureInfo.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanfailureInfo.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.targetsAdded.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.targetsAdded.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.targetsAdded.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.numFailed.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.numFailed.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.numFailed.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.extractLatencies(from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.handleEvent(event:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.sumTargetForSpans(target:spanIds:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.computeMetrics(startTime:endTime:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t *initializeBufferWithCopyOfBuffer for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_254E153D8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_254E15608();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_254E153D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_254E15608();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E153D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_254E15608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E153D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_254E15608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E153D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_254E15608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_254E153D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_254E15608();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254E0EF80);
}

uint64_t sub_254E0EF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_254E153D8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_254E15608();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 28);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254E0F08C);
}

uint64_t sub_254E0F08C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_254E153D8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_254E15608();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 28);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_254E0F190()
{
  uint64_t result = sub_254E153D8();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_254E15608();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_254E0F268(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_254E0F2D8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C2D0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F850);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (unsigned int *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F690);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for TranscriptProtoAction(0);
  uint64_t v12 = *((void *)v11 - 1);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2545C9310(a1, (uint64_t)v10, &qword_26B26F690);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2545C9374((uint64_t)v10, &qword_26B26F690);
    return 0;
  }
  else
  {
    sub_254E0F948((uint64_t)v10, (uint64_t)v14);
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6DE20]), sel_init);
    uint64_t v15 = v16;
    if (v16)
    {
      objc_msgSend(v16, sel_setExists_, 1);
      uint64_t v17 = (uint64_t)&v14[v11[7]];
      id v18 = objc_allocWithZone(MEMORY[0x263F6E140]);
      id v19 = v15;
      id v20 = objc_msgSend(v18, sel_init);
      sub_2545C9310(v17, (uint64_t)v7, &qword_26B26F850);
      uint64_t v21 = type metadata accessor for TranscriptProtoStatementID(0);
      if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v7, 1, v21) == 1)
      {
        sub_2545C9374((uint64_t)v7, &qword_26B26F850);
      }
      else
      {
        uint64_t v22 = *v7;
        sub_254E0F9AC((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
        objc_msgSend(v20, sel_setIndex_, v22);
      }
      objc_msgSend(v19, sel_setStatementId_, v20);

      sub_2545C9310((uint64_t)&v14[v11[11]], (uint64_t)v4, &qword_269E0C2D0);
      uint64_t v23 = type metadata accessor for TranscriptProtoGlobalToolIdentifier(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v4, 1, v23) == 1)
      {
        id v24 = v19;
        sub_2545C9374((uint64_t)v4, &qword_269E0C2D0);
        unint64_t v25 = 0;
      }
      else
      {
        id v26 = v19;
        swift_bridgeObjectRetain();
        sub_254E0F9AC((uint64_t)v4, type metadata accessor for TranscriptProtoGlobalToolIdentifier);
        unint64_t v25 = (void *)sub_254E157E8();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v19, sel_setToolId_, v25);

      if (*(void *)&v14[v11[8] + 8])
      {
        id v27 = v19;
        swift_bridgeObjectRetain();
        int64_t v28 = (void *)sub_254E157E8();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v29 = v19;
        int64_t v28 = 0;
      }
      objc_msgSend(v19, sel_setBundleId_, v28);

      objc_msgSend(v19, sel_setIsConfirmed_, v14[16]);
    }
    uint64_t v30 = sub_254E14E08();
    uint64_t v31 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v30);
    uint64_t v33 = (char *)&v43 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F498);
    MEMORY[0x270FA5388](v34 - 8);
    BOOL v36 = (char *)&v43 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v37 = *(void *)&v14[v11[10] + 8];
    swift_bridgeObjectRetain();
    sub_25471AAD4(v37, 5, (uint64_t)v36);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v36, 1, v30) == 1)
    {
      sub_254E0F9AC((uint64_t)v14, type metadata accessor for TranscriptProtoAction);
      sub_2545C9374((uint64_t)v36, &qword_26B26F498);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v36, v30);
      if (v15)
      {
        id v38 = objc_allocWithZone(MEMORY[0x263F6EEE0]);
        id v39 = v15;
        uint64_t v40 = (void *)sub_254E14DC8();
        id v41 = objc_msgSend(v38, sel_initWithNSUUID_, v40);

        objc_msgSend(v39, sel_setPlanEventId_, v41);
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      sub_254E0F9AC((uint64_t)v14, type metadata accessor for TranscriptProtoAction);
    }
  }
  return v15;
}

uint64_t sub_254E0F948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptProtoAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254E0F9AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *type metadata accessor for IFTranscriptProcessingUtils()
{
  return &type metadata for IFTranscriptProcessingUtils;
}

unint64_t sub_254E0FA1C(char *a1, uint64_t a2)
{
  uint64_t v208 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3A0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v170 = (uint64_t)&v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  uint64_t v168 = *(void *)(v169 - 8);
  MEMORY[0x270FA5388](v169);
  uint64_t v166 = (uint64_t)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3A8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v174 = (uint64_t)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  uint64_t v172 = *(void *)(v173 - 8);
  MEMORY[0x270FA5388](v173);
  uint64_t v167 = (uint64_t)&v166 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TranscriptProtoActionFailure(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v175 = (uint64_t)&v166 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3B0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v189 = (uint64_t)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  uint64_t v187 = *(void *)(v188 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v188);
  uint64_t v182 = (uint64_t)&v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v183 = (uint64_t)&v166 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3B8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v199 = (uint64_t)&v166 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  uint64_t v197 = *(void *)(v18 - 8);
  uint64_t v198 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v190 = (uint64_t)&v166 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C3F0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v166 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  uint64_t v203 = *(void *)(v23 - 8);
  uint64_t v204 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v200 = (uint64_t)&v166 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x270FA5388](v202);
  uint64_t v207 = (char *)&v166 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C340);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v178 = (uint64_t)&v166 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v192 = (uint64_t)&v166 - v29;
  uint64_t v181 = type metadata accessor for TranscriptProtoExecutorError(0);
  uint64_t v30 = MEMORY[0x270FA5388](v181);
  uint64_t v205 = (char *)&v166 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v194 = (uint64_t)&v166 - v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C338);
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  uint64_t v177 = (uint64_t)&v166 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v191 = (uint64_t)&v166 - v36;
  uint64_t v180 = type metadata accessor for TranscriptProtoPlannerError(0);
  uint64_t v37 = MEMORY[0x270FA5388](v180);
  uint64_t v179 = (uint64_t)&v166 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v37);
  uint64_t v193 = (uint64_t)&v166 - v39;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C330);
  uint64_t v41 = MEMORY[0x270FA5388](v40 - 8);
  uint64_t v201 = (char *)&v166 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  uint64_t v206 = (char *)&v166 - v43;
  uint64_t v176 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  uint64_t v44 = MEMORY[0x270FA5388](v176);
  os_log_t v186 = (char *)&v166 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  uint64_t v195 = (uint64_t)&v166 - v46;
  uint64_t v185 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  uint64_t v184 = *(void *)(v185 - 8);
  uint64_t v47 = MEMORY[0x270FA5388](v185);
  uint64_t v171 = (uint64_t)&v166 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v47);
  uint64_t v196 = (uint64_t)&v166 - v49;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0C348);
  uint64_t v51 = MEMORY[0x270FA5388](v50 - 8);
  uint64_t v53 = (char *)&v166 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v51);
  uint64_t v55 = (char *)&v166 - v54;
  uint64_t v56 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  uint64_t v57 = MEMORY[0x270FA5388](v56);
  uint64_t v59 = (char *)&v166 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v57);
  uint64_t v61 = (char *)&v166 - v60;
  uint64_t v62 = type metadata accessor for TranscriptProtoSessionError(0);
  uint64_t v63 = MEMORY[0x270FA5388](v62);
  uint64_t v65 = (char *)&v166 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v63);
  uint64_t v67 = (char *)&v166 - v66;
  sub_254E12400(a2, (uint64_t)v61, type metadata accessor for TranscriptProtoPayloadEnum);
  if (swift_getEnumCaseMultiPayload() != 10)
  {
    sub_254E12468((uint64_t)v61, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_254E12400(a2, (uint64_t)v59, type metadata accessor for TranscriptProtoPayloadEnum);
    if (swift_getEnumCaseMultiPayload() == 29)
    {
      uint64_t v79 = (uint64_t)v207;
      sub_254E12398((uint64_t)v59, (uint64_t)v207, type metadata accessor for TranscriptProtoStatementResult);
      sub_2545C9310(v79 + *(int *)(v202 + 24), (uint64_t)v22, &qword_269E0C3F0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v203 + 48))(v22, 1, v204) == 1)
      {
        unint64_t v80 = 0xD000000000000015;
        sub_254E12468(v79, type metadata accessor for TranscriptProtoStatementResult);
        uint64_t v81 = &qword_269E0C3F0;
        uint64_t v82 = (uint64_t)v22;
LABEL_36:
        sub_2545C9374(v82, v81);
        goto LABEL_37;
      }
      uint64_t v97 = v200;
      sub_254E12398((uint64_t)v22, v200, type metadata accessor for TranscriptProtoStatementResultPayload);
      uint64_t v98 = v199;
      sub_2545C9310(v97, v199, &qword_269E0C3B8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v197 + 48))(v98, 1, v198) == 1)
      {
        unint64_t v80 = 0xD000000000000015;
        sub_254E12468(v97, type metadata accessor for TranscriptProtoStatementResultPayload);
        sub_254E12468(v79, type metadata accessor for TranscriptProtoStatementResult);
        uint64_t v81 = &qword_269E0C3B8;
LABEL_35:
        uint64_t v82 = v98;
        goto LABEL_36;
      }
      uint64_t v135 = v190;
      sub_254E12398(v98, v190, type metadata accessor for TranscriptProtoStatementOutcome);
      uint64_t v98 = v189;
      sub_2545C9310(v135, v189, &qword_269E0C3B0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v187 + 48))(v98, 1, v188) == 1)
      {
        unint64_t v80 = 0xD000000000000015;
        sub_254E12468(v135, type metadata accessor for TranscriptProtoStatementOutcome);
        sub_254E12468(v97, type metadata accessor for TranscriptProtoStatementResultPayload);
        sub_254E12468(v79, type metadata accessor for TranscriptProtoStatementResult);
        uint64_t v81 = &qword_269E0C3B0;
        goto LABEL_35;
      }
      uint64_t v139 = v183;
      sub_254E12398(v98, v183, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      uint64_t v140 = v182;
      sub_254E12400(v139, v182, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v141 = v175;
        sub_254E12398(v140, v175, type metadata accessor for TranscriptProtoActionFailure);
        uint64_t v142 = v174;
        sub_2545C9310(v141, v174, &qword_269E0C3A8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v142, 1, v173) == 1)
        {
          unint64_t v80 = 0xD000000000000015;
          sub_254E12468(v141, type metadata accessor for TranscriptProtoActionFailure);
          sub_254E12468(v139, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          sub_254E12468(v135, type metadata accessor for TranscriptProtoStatementOutcome);
          sub_254E12468(v97, type metadata accessor for TranscriptProtoStatementResultPayload);
          sub_254E12468(v79, type metadata accessor for TranscriptProtoStatementResult);
          uint64_t v143 = &qword_269E0C3A8;
        }
        else
        {
          uint64_t v164 = v167;
          sub_254E12398(v142, v167, type metadata accessor for TranscriptProtoActionFailureFailure);
          uint64_t v142 = v170;
          sub_2545C9310(v164, v170, &qword_269E0C3A0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v168 + 48))(v142, 1, v169) != 1)
          {
            uint64_t v165 = v166;
            sub_254E12398(v142, v166, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
            unint64_t v80 = TranscriptProtoActionFailureFailureEnum.description.getter();
            sub_254E12468(v165, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
            sub_254E12468(v164, type metadata accessor for TranscriptProtoActionFailureFailure);
            sub_254E12468(v141, type metadata accessor for TranscriptProtoActionFailure);
            sub_254E12468(v139, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
            sub_254E12468(v135, type metadata accessor for TranscriptProtoStatementOutcome);
            sub_254E12468(v97, type metadata accessor for TranscriptProtoStatementResultPayload);
            sub_254E12468(v79, type metadata accessor for TranscriptProtoStatementResult);
            goto LABEL_66;
          }
          unint64_t v80 = 0xD000000000000015;
          sub_254E12468(v164, type metadata accessor for TranscriptProtoActionFailureFailure);
          sub_254E12468(v141, type metadata accessor for TranscriptProtoActionFailure);
          sub_254E12468(v139, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          sub_254E12468(v135, type metadata accessor for TranscriptProtoStatementOutcome);
          sub_254E12468(v97, type metadata accessor for TranscriptProtoStatementResultPayload);
          sub_254E12468(v79, type metadata accessor for TranscriptProtoStatementResult);
          uint64_t v143 = &qword_269E0C3A0;
        }
        sub_2545C9374(v142, v143);
LABEL_66:
        char v96 = 7;
        goto LABEL_38;
      }
      unint64_t v80 = 0xD000000000000015;
      sub_254E12468(v139, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      sub_254E12468(v135, type metadata accessor for TranscriptProtoStatementOutcome);
      sub_254E12468(v97, type metadata accessor for TranscriptProtoStatementResultPayload);
      sub_254E12468(v79, type metadata accessor for TranscriptProtoStatementResult);
      uint64_t v95 = v140;
      uint64_t v94 = type metadata accessor for TranscriptProtoStatementOutcomeEnum;
    }
    else
    {
      unint64_t v80 = 0xD000000000000015;
      uint64_t v94 = type metadata accessor for TranscriptProtoPayloadEnum;
      uint64_t v95 = (uint64_t)v59;
    }
    sub_254E12468(v95, v94);
LABEL_37:
    char v96 = 1;
    goto LABEL_38;
  }
  sub_254E12398((uint64_t)v61, (uint64_t)v67, type metadata accessor for TranscriptProtoSessionError);
  sub_2545C9310((uint64_t)v67, (uint64_t)v55, &qword_269E0C348);
  uint64_t v68 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  uint64_t v69 = (uint64_t)v55;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 48))(v55, 1, v68) == 1)
  {
    if (qword_26B26A248 != -1) {
      swift_once();
    }
    uint64_t v70 = sub_254E15718();
    __swift_project_value_buffer(v70, (uint64_t)qword_26B2707B8);
    sub_254E12400((uint64_t)v67, (uint64_t)v65, type metadata accessor for TranscriptProtoSessionError);
    uint64_t v71 = sub_254E15708();
    os_log_type_t v72 = sub_254E15A38();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v207 = v67;
      uint64_t v75 = v74;
      uint64_t v210 = v74;
      *(_DWORD *)uint64_t v73 = 136315138;
      sub_25470636C(&qword_269E0CB30, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionError);
      uint64_t v76 = sub_254E15268();
      uint64_t v209 = sub_254658670(v76, v77, &v210);
      sub_254E15B08();
      swift_bridgeObjectRelease();
      sub_254E12468((uint64_t)v65, type metadata accessor for TranscriptProtoSessionError);
      _os_log_impl(&dword_2545B9000, v71, v72, "Unrecognized error from sessionError: %s", v73, 0xCu);
      swift_arrayDestroy();
      uint64_t v78 = v75;
      uint64_t v67 = v207;
      MEMORY[0x25A27FC50](v78, -1, -1);
      MEMORY[0x25A27FC50](v73, -1, -1);
    }
    else
    {
      sub_254E12468((uint64_t)v65, type metadata accessor for TranscriptProtoSessionError);
    }

    sub_254E12468((uint64_t)v67, type metadata accessor for TranscriptProtoSessionError);
    unint64_t v80 = 0xD000000000000020;
LABEL_16:
    char v96 = 1;
  }
  else
  {
    sub_2545C9310((uint64_t)v55, (uint64_t)v53, &qword_269E0C348);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v84 = (uint64_t)v205;
    uint64_t v85 = (uint64_t)v206;
    uint64_t v86 = (uint64_t)v201;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v99 = (uint64_t)v53;
        uint64_t v100 = v195;
        sub_254E12398(v99, v195, type metadata accessor for TranscriptProtoSessionCoordinatorError);
        sub_2545C9310(v100, v85, &qword_269E0C330);
        uint64_t v101 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
        int v102 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 48))(v85, 1, v101);
        uint64_t v103 = (uint64_t)v186;
        if (v102 == 1) {
          goto LABEL_47;
        }
        sub_2545C9310(v85, v86, &qword_269E0C330);
        if (swift_getEnumCaseMultiPayload() > 1)
        {
          sub_254E12468(v86, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
LABEL_47:
          if (qword_26B26A248 != -1) {
            swift_once();
          }
          uint64_t v144 = sub_254E15718();
          __swift_project_value_buffer(v144, (uint64_t)qword_26B2707B8);
          sub_254E12400(v100, v103, type metadata accessor for TranscriptProtoSessionCoordinatorError);
          v145 = sub_254E15708();
          os_log_type_t v146 = sub_254E15A38();
          if (os_log_type_enabled(v145, v146))
          {
            uint64_t v147 = (uint8_t *)swift_slowAlloc();
            uint64_t v148 = swift_slowAlloc();
            uint64_t v210 = v148;
            uint64_t v207 = v67;
            *(_DWORD *)uint64_t v147 = 136315138;
            sub_25470636C(&qword_269E0CB48, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSessionCoordinatorError);
            uint64_t v149 = sub_254E15268();
            uint64_t v209 = sub_254658670(v149, v150, &v210);
            uint64_t v67 = v207;
            sub_254E15B08();
            swift_bridgeObjectRelease();
            sub_254E12468(v103, type metadata accessor for TranscriptProtoSessionCoordinatorError);
            _os_log_impl(&dword_2545B9000, v145, v146, "Unrecognized error from sessionCoordinatorError: %s", v147, 0xCu);
            swift_arrayDestroy();
            uint64_t v151 = v148;
            uint64_t v100 = v195;
            MEMORY[0x25A27FC50](v151, -1, -1);
            MEMORY[0x25A27FC50](v147, -1, -1);
          }
          else
          {
            sub_254E12468(v103, type metadata accessor for TranscriptProtoSessionCoordinatorError);
          }

          sub_254E12468(v100, type metadata accessor for TranscriptProtoSessionCoordinatorError);
          sub_254E12468((uint64_t)v67, type metadata accessor for TranscriptProtoSessionError);
          sub_2545C9374(v85, &qword_269E0C330);
          unint64_t v80 = 0xD00000000000002ALL;
          char v96 = 2;
        }
        else
        {
          uint64_t v104 = v171;
          sub_254E12398(v86, v171, type metadata accessor for TranscriptProtoIntelligenceFlowError);
          sub_2545C9374(v85, &qword_269E0C330);
          uint64_t v105 = *(void *)(v104 + 16);
          id v106 = objc_allocWithZone(MEMORY[0x263F087E0]);
          swift_bridgeObjectRetain();
          uint64_t v107 = (void *)sub_254E157E8();
          swift_bridgeObjectRelease();
          id v108 = objc_msgSend(v106, sel_initWithDomain_code_userInfo_, v107, v105, 0);

          id v109 = objc_msgSend(v108, sel_debugDescription);
          unint64_t v80 = sub_254E15818();

          sub_254E12468(v104, type metadata accessor for TranscriptProtoIntelligenceFlowError);
          sub_254E12468(v100, type metadata accessor for TranscriptProtoSessionCoordinatorError);
          sub_254E12468((uint64_t)v67, type metadata accessor for TranscriptProtoSessionError);
          char v96 = 2;
        }
        break;
      case 2:
        uint64_t v110 = (uint64_t)v53;
        uint64_t v111 = v193;
        sub_254E12398(v110, v193, type metadata accessor for TranscriptProtoPlannerError);
        uint64_t v112 = v191;
        sub_2545C9310(v111, v191, &qword_269E0C338);
        uint64_t v113 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 48))(v112, 1, v113) == 1)
        {
          if (qword_26B26A248 != -1) {
            swift_once();
          }
          uint64_t v114 = sub_254E15718();
          __swift_project_value_buffer(v114, (uint64_t)qword_26B2707B8);
          uint64_t v115 = v179;
          sub_254E12400(v111, v179, type metadata accessor for TranscriptProtoPlannerError);
          uint64_t v116 = sub_254E15708();
          os_log_type_t v117 = sub_254E15A38();
          if (os_log_type_enabled(v116, v117))
          {
            uint64_t v118 = (uint8_t *)swift_slowAlloc();
            uint64_t v119 = swift_slowAlloc();
            uint64_t v210 = v119;
            uint64_t v207 = v67;
            *(_DWORD *)uint64_t v118 = 136315138;
            sub_25470636C(&qword_269E0CB40, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlannerError);
            uint64_t v120 = sub_254E15268();
            uint64_t v209 = sub_254658670(v120, v121, &v210);
            uint64_t v67 = v207;
            sub_254E15B08();
            swift_bridgeObjectRelease();
            sub_254E12468(v115, type metadata accessor for TranscriptProtoPlannerError);
            _os_log_impl(&dword_2545B9000, v116, v117, "Unrecognized error from plannerError: %s", v118, 0xCu);
            swift_arrayDestroy();
            uint64_t v122 = v119;
            uint64_t v111 = v193;
            MEMORY[0x25A27FC50](v122, -1, -1);
            MEMORY[0x25A27FC50](v118, -1, -1);
          }
          else
          {
            sub_254E12468(v115, type metadata accessor for TranscriptProtoPlannerError);
          }

          unint64_t v80 = 0xD00000000000001FLL;
        }
        else
        {
          uint64_t v137 = v177;
          sub_2545C9310(v112, v177, &qword_269E0C338);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v184 + 48))(v137, 1, v185) == 1)
          {
            sub_25470636C(&qword_269E0CB40, (void (*)(uint64_t))type metadata accessor for TranscriptProtoPlannerError);
            unint64_t v80 = sub_254E15268();
          }
          else
          {
            uint64_t v152 = v196;
            sub_254E12398(v137, v196, type metadata accessor for TranscriptProtoIntelligenceFlowError);
            uint64_t v153 = *(void *)(v152 + 16);
            id v154 = objc_allocWithZone(MEMORY[0x263F087E0]);
            swift_bridgeObjectRetain();
            uint64_t v155 = (void *)sub_254E157E8();
            swift_bridgeObjectRelease();
            id v156 = objc_msgSend(v154, sel_initWithDomain_code_userInfo_, v155, v153, 0);

            id v157 = objc_msgSend(v156, sel_debugDescription);
            unint64_t v80 = sub_254E15818();

            sub_254E12468(v152, type metadata accessor for TranscriptProtoIntelligenceFlowError);
          }
        }
        sub_254E12468(v111, type metadata accessor for TranscriptProtoPlannerError);
        sub_254E12468((uint64_t)v67, type metadata accessor for TranscriptProtoSessionError);
        sub_2545C9374(v112, &qword_269E0C338);
        char v96 = 3;
        break;
      case 3:
        uint64_t v123 = (uint64_t)v53;
        uint64_t v124 = v194;
        sub_254E12398(v123, v194, type metadata accessor for TranscriptProtoExecutorError);
        uint64_t v125 = v192;
        sub_2545C9310(v124, v192, &qword_269E0C340);
        uint64_t v126 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 48))(v125, 1, v126) == 1)
        {
          if (qword_26B26A248 != -1) {
            swift_once();
          }
          uint64_t v127 = sub_254E15718();
          __swift_project_value_buffer(v127, (uint64_t)qword_26B2707B8);
          sub_254E12400(v124, v84, type metadata accessor for TranscriptProtoExecutorError);
          uint64_t v128 = sub_254E15708();
          os_log_type_t v129 = sub_254E15A38();
          if (os_log_type_enabled(v128, v129))
          {
            int v130 = (uint8_t *)swift_slowAlloc();
            uint64_t v131 = swift_slowAlloc();
            uint64_t v210 = v131;
            uint64_t v207 = v67;
            *(_DWORD *)int v130 = 136315138;
            sub_25470636C(&qword_269E0CB38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExecutorError);
            uint64_t v132 = sub_254E15268();
            uint64_t v209 = sub_254658670(v132, v133, &v210);
            uint64_t v67 = v207;
            sub_254E15B08();
            swift_bridgeObjectRelease();
            sub_254E12468(v84, type metadata accessor for TranscriptProtoExecutorError);
            _os_log_impl(&dword_2545B9000, v128, v129, "Unrecognized error from executorError: %s", v130, 0xCu);
            swift_arrayDestroy();
            uint64_t v134 = v131;
            uint64_t v124 = v194;
            MEMORY[0x25A27FC50](v134, -1, -1);
            MEMORY[0x25A27FC50](v130, -1, -1);
          }
          else
          {
            sub_254E12468(v84, type metadata accessor for TranscriptProtoExecutorError);
          }

          unint64_t v80 = 0xD000000000000020;
        }
        else
        {
          uint64_t v138 = v178;
          sub_2545C9310(v125, v178, &qword_269E0C340);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v184 + 48))(v138, 1, v185) == 1)
          {
            sub_25470636C(&qword_269E0CB38, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExecutorError);
            unint64_t v80 = sub_254E15268();
          }
          else
          {
            uint64_t v158 = v196;
            sub_254E12398(v138, v196, type metadata accessor for TranscriptProtoIntelligenceFlowError);
            uint64_t v159 = *(void *)(v158 + 16);
            id v160 = objc_allocWithZone(MEMORY[0x263F087E0]);
            swift_bridgeObjectRetain();
            uint64_t v161 = (void *)sub_254E157E8();
            swift_bridgeObjectRelease();
            id v162 = objc_msgSend(v160, sel_initWithDomain_code_userInfo_, v161, v159, 0);

            id v163 = objc_msgSend(v162, sel_debugDescription);
            unint64_t v80 = sub_254E15818();

            sub_254E12468(v158, type metadata accessor for TranscriptProtoIntelligenceFlowError);
          }
        }
        sub_254E12468(v124, type metadata accessor for TranscriptProtoExecutorError);
        sub_254E12468((uint64_t)v67, type metadata accessor for TranscriptProtoSessionError);
        sub_2545C9374(v125, &qword_269E0C340);
        char v96 = 4;
        break;
      default:
        uint64_t v87 = (uint64_t)v53;
        uint64_t v88 = v196;
        sub_254E12398(v87, v196, type metadata accessor for TranscriptProtoIntelligenceFlowError);
        uint64_t v89 = *(void *)(v88 + 16);
        id v90 = objc_allocWithZone(MEMORY[0x263F087E0]);
        swift_bridgeObjectRetain();
        uint64_t v91 = (void *)sub_254E157E8();
        swift_bridgeObjectRelease();
        id v92 = objc_msgSend(v90, sel_initWithDomain_code_userInfo_, v91, v89, 0);

        id v93 = objc_msgSend(v92, sel_debugDescription);
        unint64_t v80 = sub_254E15818();

        sub_254E12468(v88, type metadata accessor for TranscriptProtoIntelligenceFlowError);
        sub_254E12468((uint64_t)v67, type metadata accessor for TranscriptProtoSessionError);
        goto LABEL_16;
    }
  }
  sub_2545C9374(v69, &qword_269E0C348);
LABEL_38:
  *uint64_t v208 = v96;
  return v80;
}

uint64_t sub_254E11BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0CE70);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269E0CE68);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  uint64_t v10 = *(void *)(v61 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v61);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v57 = (uint64_t)&v52 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v60 = (uint64_t)&v52 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F850);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v59 = (uint64_t)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TranscriptProtoProgramStatement(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void *)(a1 + 32);
  uint64_t v25 = *(void *)(v24 + 16);
  if (!v25)
  {
LABEL_12:
    uint64_t v41 = type metadata accessor for TranscriptProtoStatementID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(a2, 1, 1, v41);
  }
  uint64_t v56 = v13;
  uint64_t v52 = v24;
  uint64_t v53 = a2;
  uint64_t v26 = (uint64_t)&v23[*(int *)(v20 + 20)];
  uint64_t v27 = v24 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  uint64_t v28 = *(void *)(v21 + 72);
  uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v58 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v30 = v28;
  swift_bridgeObjectRetain();
  uint64_t v31 = v59;
  uint64_t v54 = v29;
  uint64_t v55 = v23;
  while (1)
  {
    sub_254E12400(v27, (uint64_t)v23, type metadata accessor for TranscriptProtoProgramStatement);
    sub_2545C9310((uint64_t)v23, v31, &qword_26B26F850);
    sub_2545C9310(v26, (uint64_t)v6, &qword_269E0CE70);
    sub_254E12468((uint64_t)v23, type metadata accessor for TranscriptProtoProgramStatement);
    uint64_t v32 = type metadata accessor for TranscriptProtoExpression(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v6, 1, v32) == 1)
    {
      sub_2545C9374((uint64_t)v6, &qword_269E0CE70);
      (*v58)(v9, 1, 1, v61);
LABEL_4:
      sub_2545C9374(v31, &qword_26B26F850);
      sub_2545C9374((uint64_t)v9, &qword_269E0CE68);
      goto LABEL_5;
    }
    sub_2545C9310((uint64_t)v6, (uint64_t)v9, &qword_269E0CE68);
    sub_254E12468((uint64_t)v6, type metadata accessor for TranscriptProtoExpression);
    if ((*v29)(v9, 1, v61) == 1) {
      goto LABEL_4;
    }
    uint64_t v33 = v60;
    sub_254E12398((uint64_t)v9, v60, type metadata accessor for TranscriptProtoExpressionEnum);
    uint64_t v34 = v33;
    uint64_t v35 = v57;
    sub_254E12400(v34, v57, type metadata accessor for TranscriptProtoExpressionEnum);
    if (swift_getEnumCaseMultiPayload() == 6) {
      break;
    }
    uint64_t v36 = v6;
    uint64_t v37 = v9;
    uint64_t v38 = v30;
    uint64_t v39 = v26;
    sub_254E12468(v35, type metadata accessor for TranscriptProtoExpressionEnum);
    uint64_t v40 = (uint64_t)v56;
    sub_254E12400(v60, (uint64_t)v56, type metadata accessor for TranscriptProtoExpressionEnum);
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      swift_bridgeObjectRelease();
      sub_254E12468(v40, type metadata accessor for TranscriptProtoExpressionEnum);
      if (qword_26B26A248 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_254E15718();
      __swift_project_value_buffer(v50, (uint64_t)qword_26B2707B8);
      uint64_t v44 = sub_254E15708();
      os_log_type_t v45 = sub_254E15A38();
      BOOL v51 = os_log_type_enabled(v44, v45);
      uint64_t v47 = v53;
      if (v51)
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v48 = 0;
        uint64_t v49 = "Derive valid originalStatementID from PlanCreated Search expression";
        goto LABEL_21;
      }
      goto LABEL_22;
    }
    sub_254E12468(v60, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2545C9374(v59, &qword_26B26F850);
    uint64_t v31 = v59;
    sub_254E12468(v40, type metadata accessor for TranscriptProtoExpressionEnum);
    uint64_t v26 = v39;
    uint64_t v30 = v38;
    uint64_t v9 = v37;
    uint64_t v6 = v36;
    uint64_t v29 = v54;
    uint64_t v23 = v55;
LABEL_5:
    v27 += v30;
    if (!--v25)
    {
      swift_bridgeObjectRelease();
      a2 = v53;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  sub_254E12468(v35, type metadata accessor for TranscriptProtoExpressionEnum);
  if (qword_26B26A248 != -1) {
    swift_once();
  }
  uint64_t v43 = sub_254E15718();
  __swift_project_value_buffer(v43, (uint64_t)qword_26B2707B8);
  uint64_t v44 = sub_254E15708();
  os_log_type_t v45 = sub_254E15A38();
  BOOL v46 = os_log_type_enabled(v44, v45);
  uint64_t v47 = v53;
  if (v46)
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v48 = 0;
    uint64_t v49 = "Derive valid originalStatementID from PlanCreated Call expression";
LABEL_21:
    _os_log_impl(&dword_2545B9000, v44, v45, v49, v48, 2u);
    MEMORY[0x25A27FC50](v48, -1, -1);
  }
LABEL_22:

  sub_254E12468(v60, type metadata accessor for TranscriptProtoExpressionEnum);
  return sub_254E12330(v59, v47);
}

uint64_t sub_254E12330(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B26F850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_254E12398(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_254E12400(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254E12468(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_254E124C8(uint64_t a1)
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_254E13FF0();
    uint64_t v4 = (void *)sub_254E15778();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t AppIntentMetricsProducer.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000023;
  *(void *)(result + 24) = 0x8000000254E57460;
  return result;
}

uint64_t AppIntentMetricsProducer.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0xD000000000000023;
  *(void *)(v0 + 24) = 0x8000000254E57460;
  return result;
}

void AppIntentMetricsProducer.produce(from:with:)(uint64_t a1, Swift::OpaquePointer a2)
{
  if (qword_269E0C090 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_254E15718();
  __swift_project_value_buffer(v4, (uint64_t)qword_269E70698);
  uint64_t v5 = sub_254E15708();
  os_log_type_t v6 = sub_254E15A38();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_2545B9000, v5, v6, "#AppIntentMetricsProducer producing metrics", v7, 2u);
    MEMORY[0x25A27FC50](v7, -1, -1);
  }

  uint64_t v8 = _s23LighthouseDataProcessor24AppIntentMetricsProducerC09formulateF04fromSayAA0deF11DefinitionsVGAA11SessionViewV_tF_0(a1);
  if (*(void *)(v8 + 16))
  {
    AppIntentMetricsProducer.produceMetricsFor(results:reportTypes:)((Swift::OpaquePointer)v8, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    oslog = sub_254E15708();
    os_log_type_t v9 = sub_254E15A38();
    if (os_log_type_enabled(oslog, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_2545B9000, oslog, v9, "#AppIntentMetricsProducer No metrics formulated for reporting", v10, 2u);
      MEMORY[0x25A27FC50](v10, -1, -1);
    }
  }
}

Swift::Void __swiftcall AppIntentMetricsProducer.produceMetricsFor(results:reportTypes:)(Swift::OpaquePointer results, Swift::OpaquePointer reportTypes)
{
  uint64_t v2 = *((void *)reportTypes._rawValue + 2);
  if (v2)
  {
    uint64_t v3 = (char *)reportTypes._rawValue + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = &qword_269E0C000;
    os_log_type_t v6 = qword_269E70698;
    do
    {
      uint64_t v7 = v5[18];
      if (v3[v4])
      {
        if (v7 != -1) {
          swift_once();
        }
        uint64_t v8 = sub_254E15718();
        __swift_project_value_buffer(v8, (uint64_t)v6);
        os_log_type_t v9 = sub_254E15708();
        os_log_type_t v10 = sub_254E15A38();
        if (os_log_type_enabled(v9, v10))
        {
          uint64_t v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v11 = 0;
          _os_log_impl(&dword_2545B9000, v9, v10, "#AppIntentMetricsProducer TODO: Implement SELF", v11, 2u);
          MEMORY[0x25A27FC50](v11, -1, -1);
        }
      }
      else
      {
        if (v7 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_254E15718();
        __swift_project_value_buffer(v12, (uint64_t)v6);
        uint64_t v13 = sub_254E15708();
        os_log_type_t v14 = sub_254E15A38();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v15 = 0;
          _os_log_impl(&dword_2545B9000, v13, v14, "#AppIntentMetricsProducer Uploading to CoreAnalytics", v15, 2u);
          MEMORY[0x25A27FC50](v15, -1, -1);
        }

        uint64_t v16 = *((void *)results._rawValue + 2);
        if (v16)
        {
          uint64_t v17 = v3;
          uint64_t v18 = v6;
          uint64_t v19 = v5;
          uint64_t v20 = *(void *)(type metadata accessor for AppIntentMetricsDefinitions() - 8);
          uint64_t v21 = (char *)results._rawValue
              + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
          uint64_t v22 = *(void *)(v20 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_254E12A50();
            v21 += v22;
            --v16;
          }
          while (v16);
          swift_bridgeObjectRelease();
          uint64_t v5 = v19;
          os_log_type_t v6 = v18;
          uint64_t v3 = v17;
        }
      }
      ++v4;
    }
    while (v4 != v2);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_254E12A50()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B26AAD8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_254E1AEC0;
  *(void *)(inited + 32) = 0xD000000000000013;
  *(void *)(inited + 40) = 0x8000000254E574F0;
  *(void *)(inited + 48) = sub_254E157E8();
  *(void *)(inited + 56) = 0x44496C6F6F74;
  *(void *)(inited + 64) = 0xE600000000000000;
  type metadata accessor for AppIntentMetricsDefinitions();
  *(void *)(inited + 72) = sub_254E157E8();
  *(void *)(inited + 80) = 0xD000000000000014;
  *(void *)(inited + 88) = 0x8000000254E571E0;
  uint64_t v2 = sub_254E157E8();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v2;
  *(void *)(inited + 104) = 0xD000000000000015;
  *(void *)(inited + 112) = 0x8000000254E571C0;
  uint64_t v3 = sub_254E157E8();
  swift_bridgeObjectRelease();
  *(void *)(inited + 120) = v3;
  strcpy((char *)(inited + 128), "errorMessage");
  *(unsigned char *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  *(void *)(inited + 144) = sub_254E157E8();
  unint64_t v4 = sub_25464A880(inited);
  type metadata accessor for CoreAnalyticsEmitter();
  swift_initStaticObject();
  CoreAnalyticsEmitter.sendCoreAnalytics(eventName:eventPayload:)(v0[1], (Swift::OpaquePointer)v4);
  return swift_bridgeObjectRelease();
}

uint64_t AppIntentMetricsProducer.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AppIntentMetricsProducer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_254E12E40(Swift::OpaquePointer *a1, Swift::OpaquePointer *a2)
{
}

uint64_t sub_254E12E6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = _s23LighthouseDataProcessor24AppIntentMetricsProducerC09formulateF04fromSayAA0deF11DefinitionsVGAA11SessionViewV_tF_0(a1);
  *a2 = result;
  return result;
}

void sub_254E12E94(uint64_t a1, void **a2)
{
  v2._rawValue = *a2;
  AppIntentMetricsProducer.produce(from:with:)(a1, v2);
}

uint64_t _s23LighthouseDataProcessor24AppIntentMetricsProducerC09formulateF04fromSayAA0deF11DefinitionsVGAA11SessionViewV_tF_0(uint64_t a1)
{
  uint64_t v131 = type metadata accessor for AppIntentMetricsDefinitions();
  uint64_t v130 = *(void *)(v131 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v131);
  uint64_t v129 = (uint64_t)v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v145 = (uint64_t)v108 - v4;
  uint64_t v5 = type metadata accessor for RequestData(0);
  uint64_t v127 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v108 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v125 = (uint64_t)v108 - v12;
  uint64_t v13 = type metadata accessor for SessionData(0);
  uint64_t v112 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)v108 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v111 = (uint64_t)v108 - v20;
  uint64_t v21 = *(void *)(a1 + *(int *)(type metadata accessor for SessionView(0) + 28));
  uint64_t v22 = (uint64_t)v19;
  uint64_t v23 = *(void *)(v21 + 64);
  uint64_t v109 = v21 + 64;
  uint64_t v24 = 1 << *(unsigned char *)(v21 + 32);
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  else {
    uint64_t v25 = -1;
  }
  unint64_t v116 = v25 & v23;
  int64_t v110 = (unint64_t)(v24 + 63) >> 6;
  v108[2] = aBlock;
  unint64_t v121 = v149;
  uint64_t v113 = v21;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v27 = 0;
  unint64_t v28 = MEMORY[0x263F8EE78];
  *(void *)&long long v29 = 136315138;
  long long v124 = v29;
  v108[1] = MEMORY[0x263F8EE58] + 8;
  unint64_t v120 = (unint64_t)"clientApplicationID";
  unint64_t v117 = 0x8000000254E57510;
  unint64_t v119 = 0x8000000254E4D770;
  unint64_t v118 = 0x8000000254E4D800;
  uint64_t v128 = v5;
  uint64_t v126 = v8;
  unint64_t v133 = v11;
  uint64_t v132 = v13;
  uint64_t v134 = v16;
  uint64_t v115 = v19;
  while (2)
  {
    if (v116)
    {
      unint64_t v30 = __clz(__rbit64(v116));
      v116 &= v116 - 1;
      int64_t v114 = v27;
      unint64_t v31 = v30 | (v27 << 6);
      goto LABEL_24;
    }
    int64_t v32 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      goto LABEL_76;
    }
    if (v32 >= v110) {
      goto LABEL_73;
    }
    unint64_t v33 = *(void *)(v109 + 8 * v32);
    int64_t v34 = v27 + 1;
    if (!v33)
    {
      int64_t v34 = v27 + 2;
      if (v27 + 2 >= v110) {
        goto LABEL_73;
      }
      unint64_t v33 = *(void *)(v109 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v27 + 3;
        if (v27 + 3 >= v110) {
          goto LABEL_73;
        }
        unint64_t v33 = *(void *)(v109 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v27 + 4;
          if (v27 + 4 >= v110) {
            goto LABEL_73;
          }
          unint64_t v33 = *(void *)(v109 + 8 * v34);
          if (!v33)
          {
            uint64_t v35 = v27 + 5;
            if (v27 + 5 < v110)
            {
              unint64_t v33 = *(void *)(v109 + 8 * v35);
              if (v33)
              {
                int64_t v34 = v27 + 5;
                goto LABEL_23;
              }
              while (1)
              {
                int64_t v34 = v35 + 1;
                if (__OFADD__(v35, 1)) {
                  goto LABEL_77;
                }
                if (v34 >= v110) {
                  break;
                }
                unint64_t v33 = *(void *)(v109 + 8 * v34);
                ++v35;
                if (v33) {
                  goto LABEL_23;
                }
              }
            }
LABEL_73:
            swift_release();
            return v28;
          }
        }
      }
    }
LABEL_23:
    unint64_t v116 = (v33 - 1) & v33;
    int64_t v114 = v34;
    unint64_t v31 = __clz(__rbit64(v33)) + (v34 << 6);
LABEL_24:
    uint64_t v36 = v111;
    sub_254E13EC0(*(void *)(v113 + 56) + *(void *)(v112 + 72) * v31, v111, type metadata accessor for SessionData);
    sub_254E13F28(v36, v22, type metadata accessor for SessionData);
    uint64_t v37 = v22;
    if (qword_269E0C090 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_254E15718();
    uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_269E70698);
    sub_254E13EC0(v37, (uint64_t)v16, type metadata accessor for SessionData);
    uint64_t v139 = v39;
    uint64_t v40 = sub_254E15708();
    os_log_type_t v41 = sub_254E15A38();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      unint64_t v146 = v28;
      uint64_t v44 = v43;
      *(_DWORD *)uint64_t v42 = v124;
      aBlock[0] = v43;
      os_log_type_t v45 = (uint64_t *)&v134[*(int *)(v13 + 24)];
      uint64_t v47 = *v45;
      unint64_t v46 = v45[1];
      swift_bridgeObjectRetain();
      uint64_t v48 = v47;
      uint64_t v11 = v133;
      uint64_t v147 = sub_254658670(v48, v46, aBlock);
      uint64_t v16 = v134;
      sub_254E15B08();
      uint64_t v13 = v132;
      swift_bridgeObjectRelease();
      sub_254E13F90((uint64_t)v16, type metadata accessor for SessionData);
      _os_log_impl(&dword_2545B9000, v40, v41, "#AppIntentMetricsProducer Formulating metrics from sessionId:  %s", v42, 0xCu);
      swift_arrayDestroy();
      uint64_t v49 = v44;
      unint64_t v28 = v146;
      MEMORY[0x25A27FC50](v49, -1, -1);
      MEMORY[0x25A27FC50](v42, -1, -1);
    }
    else
    {
      sub_254E13F90((uint64_t)v16, type metadata accessor for SessionData);
    }

    uint64_t v50 = *(void *)&v115[*(int *)(v13 + 32)];
    uint64_t v51 = *(void *)(v50 + 64);
    uint64_t v122 = v50 + 64;
    uint64_t v52 = 1 << *(unsigned char *)(v50 + 32);
    if (v52 < 64) {
      uint64_t v53 = ~(-1 << v52);
    }
    else {
      uint64_t v53 = -1;
    }
    unint64_t v54 = v53 & v51;
    int64_t v123 = (unint64_t)(v52 + 63) >> 6;
    uint64_t v135 = v50;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v55 = 0;
    if (v54)
    {
LABEL_33:
      uint64_t v143 = (v54 - 1) & v54;
      int64_t v144 = v55;
      unint64_t v56 = __clz(__rbit64(v54)) | (v55 << 6);
      goto LABEL_50;
    }
    while (1)
    {
      int64_t v57 = v55 + 1;
      if (__OFADD__(v55, 1))
      {
        __break(1u);
        goto LABEL_75;
      }
      if (v57 >= v123) {
        goto LABEL_5;
      }
      unint64_t v58 = *(void *)(v122 + 8 * v57);
      int64_t v59 = v55 + 1;
      if (!v58)
      {
        int64_t v59 = v55 + 2;
        if (v55 + 2 >= v123) {
          goto LABEL_5;
        }
        unint64_t v58 = *(void *)(v122 + 8 * v59);
        if (!v58)
        {
          int64_t v59 = v55 + 3;
          if (v55 + 3 >= v123) {
            goto LABEL_5;
          }
          unint64_t v58 = *(void *)(v122 + 8 * v59);
          if (!v58)
          {
            int64_t v59 = v55 + 4;
            if (v55 + 4 >= v123) {
              goto LABEL_5;
            }
            unint64_t v58 = *(void *)(v122 + 8 * v59);
            if (!v58) {
              break;
            }
          }
        }
      }
LABEL_49:
      uint64_t v143 = (v58 - 1) & v58;
      int64_t v144 = v59;
      unint64_t v56 = __clz(__rbit64(v58)) + (v59 << 6);
LABEL_50:
      uint64_t v61 = v125;
      sub_254E13EC0(*(void *)(v135 + 56) + *(void *)(v127 + 72) * v56, v125, type metadata accessor for RequestData);
      sub_254E13F28(v61, (uint64_t)v11, type metadata accessor for RequestData);
      sub_254E13EC0((uint64_t)v11, (uint64_t)v8, type metadata accessor for RequestData);
      uint64_t v62 = sub_254E15708();
      os_log_type_t v63 = sub_254E15A38();
      BOOL v64 = os_log_type_enabled(v62, v63);
      unint64_t v146 = v28;
      if (v64)
      {
        uint64_t v65 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        aBlock[0] = v66;
        *(_DWORD *)uint64_t v65 = v124;
        uint64_t v67 = (uint64_t *)&v8[*(int *)(v5 + 20)];
        uint64_t v68 = *v67;
        unint64_t v69 = v67[1];
        swift_bridgeObjectRetain();
        *(void *)(v65 + 4) = sub_254658670(v68, v69, aBlock);
        swift_bridgeObjectRelease();
        sub_254E13F90((uint64_t)v8, type metadata accessor for RequestData);
        _os_log_impl(&dword_2545B9000, v62, v63, "#AppIntentMetricsProducer Formulating metrics from requestId:  %s", (uint8_t *)v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A27FC50](v66, -1, -1);
        MEMORY[0x25A27FC50](v65, -1, -1);
      }
      else
      {
        sub_254E13F90((uint64_t)v8, type metadata accessor for RequestData);
      }

      uint64_t v70 = v11;
      uint64_t v71 = &v11[*(int *)(v5 + 32)];
      uint64_t v72 = *((void *)v71 + 1);
      uint64_t v73 = *((void *)v71 + 2);
      uint64_t v74 = (void *)*((void *)v71 + 3);
      uint64_t v75 = *((void *)v71 + 4);
      unint64_t v76 = *((void *)v71 + 5);
      uint64_t v77 = *((unsigned int *)v71 + 14);
      uint64_t v137 = *((unsigned __int16 *)v71 + 30);
      uint64_t v138 = v72;
      uint64_t v136 = v77;
      if (v76 && (uint64_t v78 = (void *)*((void *)v71 + 6), v78[2]))
      {
        uint64_t v79 = v78[4];
        unint64_t v80 = v78[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v142 = v74;
        uint64_t v81 = v73;
        uint64_t v82 = sub_254E15708();
        os_log_type_t v83 = sub_254E15A38();
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v84 = swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          aBlock[0] = v85;
          *(_DWORD *)uint64_t v84 = v124;
          *(void *)(v84 + 4) = sub_254658670(0xD000000000000024, v117, aBlock);
          _os_log_impl(&dword_2545B9000, v82, v83, "%s", (uint8_t *)v84, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25A27FC50](v85, -1, -1);
          MEMORY[0x25A27FC50](v84, -1, -1);
        }

        uint64_t v86 = (void *)sub_254E157E8();
        uint64_t v87 = (void *)swift_allocObject();
        unint64_t v88 = v118;
        v87[2] = 0xD000000000000019;
        v87[3] = v88;
        v87[4] = 0x496C6F6F546C696ELL;
        v87[5] = 0xE900000000000044;
        v87[6] = 0xD000000000000024;
        v87[7] = v120 | 0x8000000000000000;
        v149[2] = sub_254731BF8;
        v149[3] = v87;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        v149[0] = sub_254E124C8;
        v149[1] = &block_descriptor_5;
        uint64_t v89 = _Block_copy(aBlock);
        swift_release();
        AnalyticsSendEventLazy();
        _Block_release(v89);

        uint64_t v79 = 0;
        unint64_t v80 = 0;
        uint64_t v73 = v81;
        LOBYTE(v74) = (_BYTE)v142;
      }
      uint64_t v90 = sub_254E14D98();
      uint64_t v142 = v108;
      uint64_t v91 = *(void *)(v90 - 8);
      MEMORY[0x270FA5388](v90);
      id v93 = (char *)v108 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v93, v70, v90);
      if (v80) {
        uint64_t v94 = v79;
      }
      else {
        uint64_t v94 = 0x6E776F6E6B6E75;
      }
      unint64_t v95 = 0xE700000000000000;
      if (v80) {
        unint64_t v95 = v80;
      }
      unint64_t v140 = v95;
      uint64_t v141 = v94;
      if (v76)
      {
        char v96 = (unsigned __int16)((v136 | (unint64_t)(v137 << 32)) >> 32) >> 8;
        uint64_t v97 = v138;
        sub_254650A60(v138, v73, (char)v74);
        swift_bridgeObjectRetain();
        uint64_t v98 = v75;
      }
      else
      {
        uint64_t v98 = 0;
        uint64_t v73 = 0;
        char v96 = 0;
        LOBYTE(v74) = 2;
        unint64_t v76 = 0xE000000000000000;
        uint64_t v97 = 3;
      }
      uint64_t v99 = v145;
      (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v145, v93, v90);
      uint64_t v100 = (int *)v131;
      uint64_t v101 = (uint64_t *)(v99 + *(int *)(v131 + 20));
      unint64_t v102 = v140;
      uint64_t *v101 = v141;
      v101[1] = v102;
      *(unsigned char *)(v99 + v100[6]) = v96;
      uint64_t v103 = v99 + v100[7];
      *(void *)uint64_t v103 = v97;
      *(void *)(v103 + 8) = v73;
      *(unsigned char *)(v103 + 16) = (_BYTE)v74;
      uint64_t v104 = (void *)(v99 + v100[8]);
      void *v104 = v98;
      v104[1] = v76;
      uint64_t v105 = v129;
      sub_254E13EC0(v99, v129, (uint64_t (*)(void))type metadata accessor for AppIntentMetricsDefinitions);
      unint64_t v28 = v146;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v28 = sub_254849E9C(0, *(void *)(v28 + 16) + 1, 1, v28);
      }
      uint64_t v5 = v128;
      uint64_t v8 = v126;
      uint64_t v13 = v132;
      uint64_t v16 = v134;
      unint64_t v107 = *(void *)(v28 + 16);
      unint64_t v106 = *(void *)(v28 + 24);
      uint64_t v11 = v133;
      if (v107 >= v106 >> 1) {
        unint64_t v28 = sub_254849E9C(v106 > 1, v107 + 1, 1, v28);
      }
      *(void *)(v28 + 16) = v107 + 1;
      sub_254E13F28(v105, v28+ ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))+ *(void *)(v130 + 72) * v107, (uint64_t (*)(void))type metadata accessor for AppIntentMetricsDefinitions);
      sub_254E13F90(v145, (uint64_t (*)(void))type metadata accessor for AppIntentMetricsDefinitions);
      uint64_t result = sub_254E13F90((uint64_t)v11, type metadata accessor for RequestData);
      unint64_t v54 = v143;
      int64_t v55 = v144;
      if (v143) {
        goto LABEL_33;
      }
    }
    uint64_t v60 = v55 + 5;
    if (v55 + 5 >= v123)
    {
LABEL_5:
      swift_release();
      uint64_t v22 = (uint64_t)v115;
      uint64_t result = sub_254E13F90((uint64_t)v115, type metadata accessor for SessionData);
      int64_t v27 = v114;
      continue;
    }
    break;
  }
  unint64_t v58 = *(void *)(v122 + 8 * v60);
  if (v58)
  {
    int64_t v59 = v55 + 5;
    goto LABEL_49;
  }
  while (1)
  {
    int64_t v59 = v60 + 1;
    if (__OFADD__(v60, 1)) {
      break;
    }
    if (v59 >= v123) {
      goto LABEL_5;
    }
    unint64_t v58 = *(void *)(v122 + 8 * v59);
    ++v60;
    if (v58) {
      goto LABEL_49;
    }
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AppIntentMetricsProducer()
{
  return self;
}

uint64_t method lookup function for AppIntentMetricsProducer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AppIntentMetricsProducer);
}

uint64_t dispatch thunk of AppIntentMetricsProducer.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_254E13E60()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_254E13EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_254E13F28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_254E13F90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_254E13FF0()
{
  unint64_t result = qword_26B26AAD0;
  if (!qword_26B26AAD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B26AAD0);
  }
  return result;
}

BOOL static RequestLinkConfig.Direction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RequestLinkConfig.Direction.hash(into:)()
{
  return sub_254E15EE8();
}

uint64_t RequestLinkConfig.Direction.hashValue.getter()
{
  return sub_254E15F08();
}

void RequestLinkConfig.direction.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t RequestLinkConfig.componentName.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t RequestLinkConfig.componentIdTagPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RequestLinkConfig() + 24);
  uint64_t v4 = sub_254E15748();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for RequestLinkConfig()
{
  uint64_t result = qword_26B26A378;
  if (!qword_26B26A378) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RequestLinkConfig.traceIdTagPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RequestLinkConfig() + 28);
  uint64_t v4 = sub_254E15748();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t RequestLinkConfig.exclusive.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RequestLinkConfig() + 32));
}

uint64_t RequestLinkConfig.init(direction:componentName:componentIdTagPath:traceIdTagPath:exclusive:)@<X0>(unsigned char *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(unsigned char *)a6 = *a1;
  *(_DWORD *)(a6 + 4) = a2;
  uint64_t v10 = (int *)type metadata accessor for RequestLinkConfig();
  uint64_t v11 = a6 + v10[6];
  uint64_t v12 = sub_254E15748();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v11, a3, v12);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(a6 + v10[7], a4, v12);
  *(unsigned char *)(a6 + v10[8]) = a5;
  return result;
}

unint64_t sub_254E14304()
{
  unint64_t result = qword_269E16C30;
  if (!qword_269E16C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269E16C30);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for RequestLinkConfig(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    uint64_t v7 = a3[6];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_254E15748();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11((uint64_t)v4 + a3[7], (uint64_t)a2 + a3[7], v10);
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t destroy for RequestLinkConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_254E15748();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);

  return v8(v6, v5);
}

uint64_t initializeWithCopy for RequestLinkConfig(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_254E15748();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithCopy for RequestLinkConfig(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_254E15748();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for RequestLinkConfig(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_254E15748();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for RequestLinkConfig(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_254E15748();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(a1 + a3[7], a2 + a3[7], v9);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestLinkConfig(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_254E1484C);
}

uint64_t sub_254E1484C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_254E15748();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 24)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RequestLinkConfig(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_254E14908);
}

unsigned char *sub_254E14908(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *unint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_254E15748();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_254E149AC()
{
  uint64_t result = sub_254E15748();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RequestLinkConfig.Direction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x254E14B20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestLinkConfig.Direction()
{
  return &type metadata for RequestLinkConfig.Direction;
}

uint64_t sub_254E14B58()
{
  return MEMORY[0x270EEDE40]();
}

uint64_t sub_254E14B68()
{
  return MEMORY[0x270EEDE50]();
}

uint64_t sub_254E14B78()
{
  return MEMORY[0x270EEDE68]();
}

uint64_t sub_254E14B88()
{
  return MEMORY[0x270EEDE78]();
}

uint64_t sub_254E14B98()
{
  return MEMORY[0x270EEDE88]();
}

uint64_t sub_254E14BA8()
{
  return MEMORY[0x270EEDEA8]();
}

uint64_t sub_254E14BB8()
{
  return MEMORY[0x270EEDEC0]();
}

uint64_t sub_254E14BC8()
{
  return MEMORY[0x270EEDEF0]();
}

uint64_t sub_254E14BD8()
{
  return MEMORY[0x270EEDF18]();
}

uint64_t sub_254E14BE8()
{
  return MEMORY[0x270EEDF40]();
}

uint64_t sub_254E14BF8()
{
  return MEMORY[0x270EEE630]();
}

uint64_t sub_254E14C08()
{
  return MEMORY[0x270EEE640]();
}

uint64_t sub_254E14C18()
{
  return MEMORY[0x270EEE660]();
}

uint64_t sub_254E14C28()
{
  return MEMORY[0x270EEE668]();
}

uint64_t sub_254E14C38()
{
  return MEMORY[0x270EEE690]();
}

uint64_t sub_254E14C48()
{
  return MEMORY[0x270EEF838]();
}

uint64_t sub_254E14C58()
{
  return MEMORY[0x270EF0068]();
}

uint64_t sub_254E14C68()
{
  return MEMORY[0x270EF0128]();
}

uint64_t sub_254E14C78()
{
  return MEMORY[0x270EF0138]();
}

uint64_t sub_254E14C88()
{
  return MEMORY[0x270EF0170]();
}

uint64_t sub_254E14C98()
{
  return MEMORY[0x270EF02B8]();
}

uint64_t sub_254E14CA8()
{
  return MEMORY[0x270EF02C0]();
}

uint64_t sub_254E14CB8()
{
  return MEMORY[0x270EF06F0]();
}

uint64_t sub_254E14CC8()
{
  return MEMORY[0x270EF0708]();
}

uint64_t sub_254E14CD8()
{
  return MEMORY[0x270EF07F0]();
}

uint64_t sub_254E14CE8()
{
  return MEMORY[0x270EF0800]();
}

uint64_t sub_254E14CF8()
{
  return MEMORY[0x270EF0810]();
}

uint64_t sub_254E14D08()
{
  return MEMORY[0x270EF0818]();
}

uint64_t sub_254E14D18()
{
  return MEMORY[0x270EF0838]();
}

uint64_t sub_254E14D28()
{
  return MEMORY[0x270EF0888]();
}

uint64_t sub_254E14D38()
{
  return MEMORY[0x270EF0990]();
}

uint64_t sub_254E14D48()
{
  return MEMORY[0x270EF09D0]();
}

uint64_t sub_254E14D58()
{
  return MEMORY[0x270EF0BB0]();
}

uint64_t sub_254E14D68()
{
  return MEMORY[0x270EF0BC0]();
}

uint64_t sub_254E14D78()
{
  return MEMORY[0x270EF0C18]();
}

uint64_t sub_254E14D88()
{
  return MEMORY[0x270EF0C28]();
}

uint64_t sub_254E14D98()
{
  return MEMORY[0x270EF0C38]();
}

uint64_t sub_254E14DA8()
{
  return MEMORY[0x270EF0C50]();
}

uint64_t sub_254E14DB8()
{
  return MEMORY[0x270EF0C60]();
}

uint64_t sub_254E14DC8()
{
  return MEMORY[0x270EF0C90]();
}

uint64_t sub_254E14DD8()
{
  return MEMORY[0x270EF0CC0]();
}

uint64_t sub_254E14DE8()
{
  return MEMORY[0x270EF0CE8]();
}

uint64_t sub_254E14DF8()
{
  return MEMORY[0x270EF0D00]();
}

uint64_t sub_254E14E08()
{
  return MEMORY[0x270EF0D10]();
}

uint64_t sub_254E14E18()
{
  return MEMORY[0x270EF15B0]();
}

uint64_t sub_254E14E28()
{
  return MEMORY[0x270EF1610]();
}

uint64_t sub_254E14E38()
{
  return MEMORY[0x270F63918]();
}

uint64_t sub_254E14E48()
{
  return MEMORY[0x270F63920]();
}

uint64_t sub_254E14E58()
{
  return MEMORY[0x270F63938]();
}

uint64_t sub_254E14E68()
{
  return MEMORY[0x270F63940]();
}

uint64_t sub_254E14E78()
{
  return MEMORY[0x270F63948]();
}

uint64_t sub_254E14E88()
{
  return MEMORY[0x270F63950]();
}

uint64_t sub_254E14E98()
{
  return MEMORY[0x270F63958]();
}

uint64_t sub_254E14EA8()
{
  return MEMORY[0x270F63970]();
}

uint64_t sub_254E14EB8()
{
  return MEMORY[0x270F63978]();
}

uint64_t sub_254E14EC8()
{
  return MEMORY[0x270F661C8]();
}

uint64_t sub_254E14ED8()
{
  return MEMORY[0x270F661D0]();
}

uint64_t sub_254E14EE8()
{
  return MEMORY[0x270F661E8]();
}

uint64_t sub_254E14EF8()
{
  return MEMORY[0x270F44650]();
}

uint64_t sub_254E14F08()
{
  return MEMORY[0x270F44658]();
}

uint64_t sub_254E14F18()
{
  return MEMORY[0x270F44660]();
}

uint64_t sub_254E14F28()
{
  return MEMORY[0x270F44668]();
}

uint64_t sub_254E14F38()
{
  return MEMORY[0x270F44670]();
}

uint64_t sub_254E14F48()
{
  return MEMORY[0x270F44678]();
}

uint64_t sub_254E14F58()
{
  return MEMORY[0x270F446A0]();
}

uint64_t sub_254E14F68()
{
  return MEMORY[0x270F449A0]();
}

uint64_t sub_254E14F78()
{
  return MEMORY[0x270F44A00]();
}

uint64_t sub_254E14F88()
{
  return MEMORY[0x270F44A08]();
}

uint64_t sub_254E14F98()
{
  return MEMORY[0x270F44A10]();
}

uint64_t sub_254E14FA8()
{
  return MEMORY[0x270F44A18]();
}

uint64_t _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0()
{
  return MEMORY[0x270F44A20]();
}

uint64_t sub_254E14FC8()
{
  return MEMORY[0x270F44A28]();
}

uint64_t sub_254E14FD8()
{
  return MEMORY[0x270F44A30]();
}

uint64_t sub_254E14FE8()
{
  return MEMORY[0x270F44A38]();
}

uint64_t sub_254E15008()
{
  return MEMORY[0x270F44A48]();
}

uint64_t sub_254E15028()
{
  return MEMORY[0x270F44A58]();
}

uint64_t sub_254E15038()
{
  return MEMORY[0x270F44A60]();
}

uint64_t sub_254E15048()
{
  return MEMORY[0x270F44AA8]();
}

uint64_t sub_254E15058()
{
  return MEMORY[0x270F44AB0]();
}

uint64_t sub_254E15068()
{
  return MEMORY[0x270F44AD8]();
}

uint64_t sub_254E15098()
{
  return MEMORY[0x270F44B00]();
}

uint64_t sub_254E150A8()
{
  return MEMORY[0x270F44B08]();
}

uint64_t sub_254E150B8()
{
  return MEMORY[0x270F44B10]();
}

uint64_t sub_254E150C8()
{
  return MEMORY[0x270F44B20]();
}

uint64_t sub_254E150D8()
{
  return MEMORY[0x270F44B30]();
}

uint64_t sub_254E150E8()
{
  return MEMORY[0x270F44B38]();
}

uint64_t sub_254E150F8()
{
  return MEMORY[0x270F44B40]();
}

uint64_t sub_254E15108()
{
  return MEMORY[0x270F44B48]();
}

uint64_t sub_254E15118()
{
  return MEMORY[0x270F44B50]();
}

uint64_t sub_254E15128()
{
  return MEMORY[0x270F44B78]();
}

uint64_t sub_254E15138()
{
  return MEMORY[0x270F44B80]();
}

uint64_t sub_254E15148()
{
  return MEMORY[0x270F44B88]();
}

uint64_t sub_254E15158()
{
  return MEMORY[0x270F44B90]();
}

uint64_t sub_254E15168()
{
  return MEMORY[0x270F44B98]();
}

uint64_t sub_254E15178()
{
  return MEMORY[0x270F44BA0]();
}

uint64_t sub_254E15188()
{
  return MEMORY[0x270F44BA8]();
}

uint64_t sub_254E15198()
{
  return MEMORY[0x270F44BB0]();
}

uint64_t sub_254E151A8()
{
  return MEMORY[0x270F44BC0]();
}

uint64_t sub_254E151B8()
{
  return MEMORY[0x270F44BD8]();
}

uint64_t sub_254E151C8()
{
  return MEMORY[0x270F44BE0]();
}

uint64_t sub_254E151D8()
{
  return MEMORY[0x270F44BF0]();
}

uint64_t sub_254E151E8()
{
  return MEMORY[0x270F44BF8]();
}

uint64_t sub_254E151F8()
{
  return MEMORY[0x270F44C08]();
}

uint64_t sub_254E15208()
{
  return MEMORY[0x270F44C18]();
}

uint64_t sub_254E15218()
{
  return MEMORY[0x270F44C20]();
}

uint64_t sub_254E15228()
{
  return MEMORY[0x270F44C38]();
}

uint64_t sub_254E15238()
{
  return MEMORY[0x270F44C98]();
}

uint64_t sub_254E15248()
{
  return MEMORY[0x270F44CA0]();
}

uint64_t sub_254E15258()
{
  return MEMORY[0x270F44CA8]();
}

uint64_t sub_254E15268()
{
  return MEMORY[0x270F44CC0]();
}

uint64_t sub_254E15278()
{
  return MEMORY[0x270F44CD8]();
}

uint64_t sub_254E15288()
{
  return MEMORY[0x270F44D00]();
}

uint64_t sub_254E15298()
{
  return MEMORY[0x270F44D08]();
}

uint64_t sub_254E152A8()
{
  return MEMORY[0x270F44D20]();
}

uint64_t sub_254E152B8()
{
  return MEMORY[0x270F44D60]();
}

uint64_t sub_254E152C8()
{
  return MEMORY[0x270F44D68]();
}

uint64_t sub_254E152D8()
{
  return MEMORY[0x270F44D88]();
}

uint64_t sub_254E152E8()
{
  return MEMORY[0x270F44D90]();
}

uint64_t sub_254E152F8()
{
  return MEMORY[0x270F44D98]();
}

uint64_t sub_254E15308()
{
  return MEMORY[0x270F44DA0]();
}

uint64_t sub_254E15318()
{
  return MEMORY[0x270F44DB0]();
}

uint64_t sub_254E15328()
{
  return MEMORY[0x270F44DC8]();
}

uint64_t sub_254E15338()
{
  return MEMORY[0x270F44DD8]();
}

uint64_t sub_254E15348()
{
  return MEMORY[0x270F44DE0]();
}

uint64_t sub_254E15358()
{
  return MEMORY[0x270F44DE8]();
}

uint64_t sub_254E15368()
{
  return MEMORY[0x270F44DF0]();
}

uint64_t sub_254E15378()
{
  return MEMORY[0x270F44E00]();
}

uint64_t sub_254E15388()
{
  return MEMORY[0x270F44E10]();
}

uint64_t sub_254E15398()
{
  return MEMORY[0x270F44E18]();
}

uint64_t sub_254E153A8()
{
  return MEMORY[0x270F44E20]();
}

uint64_t sub_254E153B8()
{
  return MEMORY[0x270F44E28]();
}

uint64_t sub_254E153C8()
{
  return MEMORY[0x270F41EE0]();
}

uint64_t sub_254E153D8()
{
  return MEMORY[0x270F41EE8]();
}

uint64_t sub_254E153E8()
{
  return MEMORY[0x270F41EF8]();
}

uint64_t sub_254E153F8()
{
  return MEMORY[0x270F41F10]();
}

uint64_t sub_254E15408()
{
  return MEMORY[0x270F41F20]();
}

uint64_t sub_254E15418()
{
  return MEMORY[0x270F41F48]();
}

uint64_t sub_254E15428()
{
  return MEMORY[0x270F41F50]();
}

uint64_t sub_254E15438()
{
  return MEMORY[0x270F41F60]();
}

uint64_t sub_254E15448()
{
  return MEMORY[0x270F41F68]();
}

uint64_t sub_254E15458()
{
  return MEMORY[0x270F41F80]();
}

uint64_t sub_254E15468()
{
  return MEMORY[0x270F41F98]();
}

uint64_t sub_254E15478()
{
  return MEMORY[0x270F41FA8]();
}

uint64_t sub_254E15488()
{
  return MEMORY[0x270F41FC8]();
}

uint64_t sub_254E15498()
{
  return MEMORY[0x270F41FF0]();
}

uint64_t sub_254E154A8()
{
  return MEMORY[0x270F423A0]();
}

uint64_t sub_254E154B8()
{
  return MEMORY[0x270F423A8]();
}

uint64_t sub_254E154C8()
{
  return MEMORY[0x270F423B0]();
}

uint64_t sub_254E154D8()
{
  return MEMORY[0x270F423C8]();
}

uint64_t sub_254E154E8()
{
  return MEMORY[0x270F423D8]();
}

uint64_t sub_254E154F8()
{
  return MEMORY[0x270F423E0]();
}

uint64_t sub_254E15508()
{
  return MEMORY[0x270F423E8]();
}

uint64_t sub_254E15518()
{
  return MEMORY[0x270F423F8]();
}

uint64_t sub_254E15528()
{
  return MEMORY[0x270F42408]();
}

uint64_t sub_254E15538()
{
  return MEMORY[0x270F42418]();
}

uint64_t sub_254E15548()
{
  return MEMORY[0x270F42430]();
}

uint64_t sub_254E15558()
{
  return MEMORY[0x270F42440]();
}

uint64_t sub_254E15568()
{
  return MEMORY[0x270F42450]();
}

uint64_t sub_254E15578()
{
  return MEMORY[0x270F42460]();
}

uint64_t sub_254E15588()
{
  return MEMORY[0x270F43228]();
}

uint64_t sub_254E15598()
{
  return MEMORY[0x270F43238]();
}

uint64_t sub_254E155A8()
{
  return MEMORY[0x270F43260]();
}

uint64_t sub_254E155B8()
{
  return MEMORY[0x270F43268]();
}

uint64_t sub_254E155C8()
{
  return MEMORY[0x270F43280]();
}

uint64_t sub_254E155D8()
{
  return MEMORY[0x270F432B0]();
}

uint64_t sub_254E155E8()
{
  return MEMORY[0x270F43300]();
}

uint64_t sub_254E155F8()
{
  return MEMORY[0x270F43318]();
}

uint64_t sub_254E15608()
{
  return MEMORY[0x270F43328]();
}

uint64_t sub_254E15618()
{
  return MEMORY[0x270F43340]();
}

uint64_t sub_254E15628()
{
  return MEMORY[0x270F43358]();
}

uint64_t sub_254E15638()
{
  return MEMORY[0x270F43440]();
}

uint64_t sub_254E15648()
{
  return MEMORY[0x270F43528]();
}

uint64_t sub_254E15658()
{
  return MEMORY[0x270F43540]();
}

uint64_t sub_254E15668()
{
  return MEMORY[0x270F43558]();
}

uint64_t sub_254E15678()
{
  return MEMORY[0x270F43578]();
}

uint64_t sub_254E15688()
{
  return MEMORY[0x270F441B0]();
}

uint64_t sub_254E15698()
{
  return MEMORY[0x270F441C8]();
}

uint64_t sub_254E156A8()
{
  return MEMORY[0x270FA2CC8]();
}

uint64_t sub_254E156B8()
{
  return MEMORY[0x270FA2CE0]();
}

uint64_t sub_254E156C8()
{
  return MEMORY[0x270FA2D08]();
}

uint64_t sub_254E156D8()
{
  return MEMORY[0x270FA2D28]();
}

uint64_t sub_254E156E8()
{
  return MEMORY[0x270FA2D50]();
}

uint64_t sub_254E156F8()
{
  return MEMORY[0x270FA2D80]();
}

uint64_t sub_254E15708()
{
  return MEMORY[0x270FA2DF8]();
}

uint64_t sub_254E15718()
{
  return MEMORY[0x270FA2E28]();
}

uint64_t sub_254E15728()
{
  return MEMORY[0x270FA2E38]();
}

uint64_t sub_254E15738()
{
  return MEMORY[0x270EE3E98]();
}

uint64_t sub_254E15748()
{
  return MEMORY[0x270F259A0]();
}

uint64_t sub_254E15758()
{
  return MEMORY[0x270F259A8]();
}

uint64_t sub_254E15768()
{
  return MEMORY[0x270F259C0]();
}

uint64_t sub_254E15778()
{
  return MEMORY[0x270EF1810]();
}

uint64_t sub_254E15788()
{
  return MEMORY[0x270F9D060]();
}

uint64_t sub_254E15798()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_254E157A8()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_254E157B8()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_254E157C8()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_254E157D8()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_254E157E8()
{
  return MEMORY[0x270EF19A8]();
}

uint64_t sub_254E157F8()
{
  return MEMORY[0x270EF19D0]();
}

uint64_t sub_254E15808()
{
  return MEMORY[0x270EF19D8]();
}

uint64_t sub_254E15818()
{
  return MEMORY[0x270EF19F0]();
}

uint64_t sub_254E15828()
{
  return MEMORY[0x270EF1A08]();
}

uint64_t sub_254E15838()
{
  return MEMORY[0x270EF1AA0]();
}

uint64_t sub_254E15848()
{
  return MEMORY[0x270EF1AD8]();
}

uint64_t sub_254E15858()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_254E15868()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_254E15878()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_254E15888()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_254E15898()
{
  return MEMORY[0x270F9DA80]();
}

uint64_t sub_254E158A8()
{
  return MEMORY[0x270F9DB00]();
}

uint64_t sub_254E158B8()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_254E158C8()
{
  return MEMORY[0x270EF1B90]();
}

uint64_t sub_254E158D8()
{
  return MEMORY[0x270EF1BB0]();
}

uint64_t sub_254E158E8()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_254E158F8()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_254E15908()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_254E15918()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_254E15928()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_254E15938()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_254E15948()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_254E15958()
{
  return MEMORY[0x270FA1EB0]();
}

uint64_t sub_254E15968()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_254E15978()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_254E15988()
{
  return MEMORY[0x270EF1C10]();
}

uint64_t sub_254E15998()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_254E159A8()
{
  return MEMORY[0x270EF1CA0]();
}

uint64_t sub_254E159B8()
{
  return MEMORY[0x270EF1CC8]();
}

uint64_t sub_254E159C8()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_254E159D8()
{
  return MEMORY[0x270F259C8]();
}

uint64_t sub_254E159E8()
{
  return MEMORY[0x270F259D0]();
}

uint64_t sub_254E159F8()
{
  return MEMORY[0x270F259D8]();
}

uint64_t sub_254E15A08()
{
  return MEMORY[0x270F259E0]();
}

uint64_t sub_254E15A18()
{
  return MEMORY[0x270F66218]();
}

uint64_t sub_254E15A28()
{
  return MEMORY[0x270FA2E48]();
}

uint64_t sub_254E15A38()
{
  return MEMORY[0x270FA2E50]();
}

uint64_t sub_254E15A48()
{
  return MEMORY[0x270FA2E68]();
}

uint64_t sub_254E15A58()
{
  return MEMORY[0x270FA2E78]();
}

uint64_t sub_254E15A68()
{
  return MEMORY[0x270FA2E88]();
}

uint64_t sub_254E15A78()
{
  return MEMORY[0x270FA2EB0]();
}

uint64_t sub_254E15A88()
{
  return MEMORY[0x270F66248]();
}

uint64_t sub_254E15A98()
{
  return MEMORY[0x270F66260]();
}

uint64_t sub_254E15AA8()
{
  return MEMORY[0x270EF2190]();
}

uint64_t sub_254E15AB8()
{
  return MEMORY[0x270FA2EC0]();
}

uint64_t sub_254E15AC8()
{
  return MEMORY[0x270FA2EF8]();
}

uint64_t sub_254E15AD8()
{
  return MEMORY[0x270F9E3B0]();
}

uint64_t sub_254E15AE8()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_254E15AF8()
{
  return MEMORY[0x270EF23C0]();
}

uint64_t sub_254E15B08()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_254E15B18()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_254E15B28()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_254E15B38()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_254E15B48()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_254E15B58()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_254E15B68()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_254E15B78()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_254E15B98()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_254E15BA8()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_254E15BB8()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_254E15BC8()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_254E15BD8()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_254E15BE8()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_254E15BF8()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_254E15C08()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_254E15C18()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_254E15C28()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_254E15C38()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_254E15C48()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_254E15C58()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_254E15C68()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_254E15C78()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_254E15C88()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_254E15C98()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_254E15CB8()
{
  return MEMORY[0x270F9F220]();
}

uint64_t sub_254E15CC8()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_254E15CD8()
{
  return MEMORY[0x270F9F250]();
}

uint64_t sub_254E15CE8()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_254E15CF8()
{
  return MEMORY[0x270F9F270]();
}

uint64_t sub_254E15D08()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_254E15D18()
{
  return MEMORY[0x270F9F2D8]();
}

uint64_t sub_254E15D28()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_254E15D38()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_254E15D48()
{
  return MEMORY[0x270F9F310]();
}

uint64_t sub_254E15D58()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_254E15D68()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_254E15D78()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_254E15D88()
{
  return MEMORY[0x270F9F3B0]();
}

uint64_t sub_254E15D98()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_254E15DA8()
{
  return MEMORY[0x270F9F410]();
}

uint64_t sub_254E15DB8()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_254E15DC8()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_254E15DD8()
{
  return MEMORY[0x270F9F450]();
}

uint64_t sub_254E15DE8()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_254E15DF8()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_254E15E08()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_254E15E18()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_254E15E28()
{
  return MEMORY[0x270F9F878]();
}

uint64_t sub_254E15E38()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_254E15E48()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_254E15E58()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_254E15E68()
{
  return MEMORY[0x270EF2688]();
}

uint64_t sub_254E15E78()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_254E15E88()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_254E15E98()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_254E15EA8()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_254E15EB8()
{
  return MEMORY[0x270F9FC30]();
}

uint64_t sub_254E15EC8()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_254E15ED8()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_254E15EE8()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_254E15EF8()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_254E15F08()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_254E15F18()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_254E15F28()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_254E15F38()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_254E15F48()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_254E15F78()
{
  return MEMORY[0x270FA0128]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x270F18A48]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x270F10AF0]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x270F58548]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x270F58560]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x270F58568]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x270F58590]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x270F585A0]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x270F585D8]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x270F585E8]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x270F585F8]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x270F58600]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

{
  return MEMORY[0x270F9A3B8]();
}

{
  return MEMORY[0x270F9A3D0]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x270ED99D0](__x, __y);
  return result;
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA460](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_enumerationMutation(id obj)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D8](oslog, type);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x270EDAB30]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x270FA0468]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x270FA0480]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x270FA0548]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}