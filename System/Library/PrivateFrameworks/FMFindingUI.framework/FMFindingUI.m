uint64_t sub_24D2B3C88(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, float *a14, _DWORD *a15, _DWORD *a16, float *a17, float *a18, float *a19, _DWORD *a20,_DWORD *a21)
{
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  int v33;
  int v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  int v43;
  uint64_t result;
  int v45;
  int v46;
  int v47;
  int v48;

  vfx_script_clock_delta_time();
  if (fabsf(a2) > 0.00000011921) {
    v29 = 1.0 / a2;
  }
  else {
    v29 = 0.0;
  }
  v30 = v29 * v28;
  v31 = -(float)(v29 * v28);
  if (a7) {
    v31 = v30;
  }
  v32 = fminf(fmaxf(v31 + a1, 0.0), 1.0);
  vfx_script_texture_sample1d();
  v48 = v33;
  vfx_script_texture_sample1d();
  v47 = v34;
  vfx_script_clock_delta_time();
  v36 = v29 * v35;
  v37 = -(float)(v29 * v35);
  if (a10) {
    v37 = v36;
  }
  v38 = fminf(fmaxf(v37 + a3, 0.0), 1.0);
  if (v38 >= 0.5) {
    v39 = (float)((float)((float)(v38 * -2.0) + 4.0) * v38) + -1.0;
  }
  else {
    v39 = (float)(v38 * v38) + (float)(v38 * v38);
  }
  vfx_script_clock_delta_time();
  v41 = v40 + v40;
  if (a11) {
    v41 = -v41;
  }
  v42 = fminf(fmaxf(v41 + a4, 0.0), 1.0);
  vfx_script_texture_sample1d();
  v46 = v43;
  result = vfx_script_texture_sample1d();
  *a14 = v32;
  *a15 = v48;
  *a16 = v47;
  *a17 = v39;
  *a18 = v38;
  *a19 = v42;
  *a20 = v46;
  *a21 = v45;
  return result;
}

uint64_t sub_24D2B3E80()
{
  uint64_t arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(float **)(arguments_buffer + 104);
  v2 = *(_DWORD **)(arguments_buffer + 112);
  v34 = *(_DWORD **)(arguments_buffer + 120);
  v33 = *(float **)(arguments_buffer + 128);
  v32 = *(float **)(arguments_buffer + 136);
  v31 = *(float **)(arguments_buffer + 144);
  v35 = *(_DWORD **)(arguments_buffer + 152);
  v36 = *(_DWORD **)(arguments_buffer + 160);
  float v3 = **(float **)(arguments_buffer + 16);
  float v4 = **(float **)(arguments_buffer + 24);
  int v5 = **(unsigned __int8 **)(arguments_buffer + 32);
  int v6 = **(unsigned __int8 **)(arguments_buffer + 56);
  float v7 = **(float **)(arguments_buffer + 64);
  float v8 = **(float **)(arguments_buffer + 72);
  int v9 = **(unsigned __int8 **)(arguments_buffer + 80);
  vfx_script_clock_delta_time();
  if (fabsf(v4) > 0.00000011921) {
    float v11 = 1.0 / v4;
  }
  else {
    float v11 = 0.0;
  }
  float v12 = v11 * v10;
  float v13 = -(float)(v11 * v10);
  if (v5) {
    float v13 = v12;
  }
  float v14 = fminf(fmaxf(v3 + v13, 0.0), 1.0);
  vfx_script_texture_sample1d();
  int v30 = v15;
  vfx_script_texture_sample1d();
  int v29 = v16;
  vfx_script_clock_delta_time();
  float v18 = v11 * v17;
  float v19 = -(float)(v11 * v17);
  if (v6) {
    float v19 = v18;
  }
  float v20 = fminf(fmaxf(v7 + v19, 0.0), 1.0);
  if (v20 >= 0.5) {
    float v21 = (float)((float)((float)(v20 * -2.0) + 4.0) * v20) + -1.0;
  }
  else {
    float v21 = (float)(v20 * v20) + (float)(v20 * v20);
  }
  vfx_script_clock_delta_time();
  float v23 = v22 + v22;
  if (v9) {
    float v23 = -v23;
  }
  float v24 = fminf(fmaxf(v8 + v23, 0.0), 1.0);
  vfx_script_texture_sample1d();
  int v28 = v25;
  uint64_t result = vfx_script_texture_sample1d();
  float *v1 = v14;
  _DWORD *v2 = v30;
  _DWORD *v34 = v29;
  float *v33 = v21;
  float *v32 = v20;
  float *v31 = v24;
  _DWORD *v35 = v28;
  _DWORD *v36 = v27;
  return result;
}

void sub_24D2B407C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  *a4 = a3;
  a4[1] = a3;
}

uint64_t sub_24D2B4084()
{
  uint64_t result = vfx_script_get_arguments_buffer();
  v1 = *(void **)(result + 24);
  uint64_t v2 = **(void **)(result + 16);
  void *v1 = v2;
  v1[1] = v2;
  return result;
}

double sub_24D2B40A8(float a1, float a2, float a3, float a4, uint64_t a5, uint64_t a6, int a7, void *a8, float32x2_t *a9, float32x2_t *a10, float *a11, float *a12)
{
  float v22 = (float)(a1 * 3.1416) / 180.0;
  __float2 v23 = __sincosf_stret(v22);
  float cosval = v23.__cosval;
  unsigned int v31 = *(void *)&v23;
  float v24 = (float)(a2 * 3.1416) / 180.0;
  float v29 = (float)(a3 + 0.06) + (float)((float)(a3 - (float)(a3 + 0.06)) * a4);
  float32x2_t v25 = vmul_n_f32((float32x2_t)__sincosf_stret(v22 + v24), v29);
  float32x2_t v26 = vmul_n_f32((float32x2_t)__sincosf_stret(v22 - v24), v29);
  float v27 = 180.5;
  if (!a7) {
    float v27 = a2;
  }
  *a9 = v25;
  *a10 = v26;
  *a11 = (float)(a1 * -3.1416) / 180.0;
  *a12 = v27;
  double result = COERCE_DOUBLE(__PAIR64__(LODWORD(cosval), v31));
  *a8 = __PAIR64__(LODWORD(cosval), v31);
  return result;
}

double sub_24D2B41CC()
{
  uint64_t arguments_buffer = vfx_script_get_arguments_buffer();
  v1 = *(void **)(arguments_buffer + 56);
  uint64_t v2 = *(float32x2_t **)(arguments_buffer + 64);
  float v3 = *(float32x2_t **)(arguments_buffer + 72);
  float v4 = *(float **)(arguments_buffer + 80);
  int v5 = *(float **)(arguments_buffer + 88);
  float v6 = **(float **)(arguments_buffer + 16);
  float v7 = **(float **)(arguments_buffer + 24);
  float v8 = **(float **)(arguments_buffer + 32);
  float v9 = **(float **)(arguments_buffer + 40);
  int v10 = **(unsigned __int8 **)(arguments_buffer + 48);
  float v11 = (float)(v6 * 3.1416) / 180.0;
  __float2 v12 = __sincosf_stret(v11);
  float cosval = v12.__cosval;
  unsigned int v20 = *(void *)&v12;
  float v13 = (float)(v7 * 3.1416) / 180.0;
  float v18 = (float)(v8 + 0.06) + (float)((float)(v8 - (float)(v8 + 0.06)) * v9);
  float32x2_t v14 = vmul_n_f32((float32x2_t)__sincosf_stret(v11 + v13), v18);
  float32x2_t v15 = vmul_n_f32((float32x2_t)__sincosf_stret(v11 - v13), v18);
  float v16 = 180.5;
  if (!v10) {
    float v16 = v7;
  }
  float32x2_t *v2 = v14;
  *float v3 = v15;
  *float v4 = (float)(v6 * -3.1416) / 180.0;
  *int v5 = v16;
  double result = COERCE_DOUBLE(__PAIR64__(LODWORD(cosval), v20));
  void *v1 = __PAIR64__(LODWORD(cosval), v20);
  return result;
}

char **__vfx_get_script_table_WatchParticlesREDSTRIPE()
{
  return &off_26BB07D40;
}

void type metadata accessor for VTPixelTransferSession(uint64_t a1)
{
}

void type metadata accessor for CVPixelBufferPool(uint64_t a1)
{
}

void type metadata accessor for ThermalState(uint64_t a1)
{
}

void type metadata accessor for CVMetalTextureCache(uint64_t a1)
{
}

void type metadata accessor for PlaySoundContext(uint64_t a1)
{
}

__n128 sub_24D2B4364(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMPFSKSceneStyle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FMPFSKSceneStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

__n128 initializeBufferWithCopyOfBuffer for FMR1InsetLabelStyle(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMR1InsetLabelStyle(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FMR1InsetLabelStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

void type metadata accessor for PRBTLocalizerState(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
}

void sub_24D2B4494()
{
  objc_msgSend(v0, sel_nativeBounds);
  CGRectGetHeight(v5);
  if (qword_2698602A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FA0);
  uint64_t v2 = sub_24D39C930();
  os_log_type_t v3 = sub_24D39CDF0();
  if (os_log_type_enabled(v2, v3))
  {
    float v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)float v4 = 134217984;
    sub_24D39D070();
    _os_log_impl(&dword_24D2B1000, v2, v3, "ðŸ§­ FMPFVideoScaling screen height: %f", v4, 0xCu);
    MEMORY[0x253326010](v4, -1, -1);
  }
}

uint64_t sub_24D2B4670(uint64_t a1, uint64_t a2)
{
  return sub_24D2B50C4(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_24D2B469C()
{
  return sub_24D39CD60();
}

uint64_t sub_24D2B46A4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x253324DA0](a1, &v6);
  uint64_t v4 = v6;
  char v5 = v7;
  if (v7) {
    uint64_t v4 = 0;
  }
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_24D2B46F8(uint64_t a1, uint64_t a2)
{
  char v3 = sub_24D39CD80();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_24D2B4750@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24D39CD90();
  *a1 = result;
  return result;
}

BOOL sub_24D2B4778(void *a1, void *a2)
{
  return *a1 == *a2;
}

void sub_24D2B478C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_24D2B4798(uint64_t a1, id *a2)
{
  uint64_t result = sub_24D39CAD0();
  *a2 = 0;
  return result;
}

uint64_t sub_24D2B4810(uint64_t a1, id *a2)
{
  char v3 = sub_24D39CAE0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24D2B4890@<X0>(uint64_t *a1@<X8>)
{
  sub_24D39CAF0();
  uint64_t v2 = sub_24D39CAC0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_24D2B48D4(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_24D2B48DC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

BOOL sub_24D2B48EC(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_24D2B4920@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_24D2B4934(void *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_24D2B4948(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_24D2B495C(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

void *sub_24D2B4970@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24D2B4980@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24D39CAF0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24D2B49AC()
{
  sub_24D2B4C70(&qword_2698608D8, type metadata accessor for TextStyle);
  sub_24D2B4C70((unint64_t *)&unk_2698608E0, type metadata accessor for TextStyle);
  return sub_24D39D320();
}

uint64_t sub_24D2B4A68()
{
  sub_24D2B4C70((unint64_t *)&qword_2698608C8, _s3__C3KeyVMa_0);
  sub_24D2B4C70(&qword_2698608D0, _s3__C3KeyVMa_0);
  return sub_24D39D320();
}

uint64_t sub_24D2B4B24()
{
  return sub_24D39D320();
}

uint64_t sub_24D2B4BE0()
{
  return sub_24D2B4C70(&qword_269860738, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_24D2B4C28()
{
  return sub_24D2B4C70(&qword_269860740, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_24D2B4C70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D2B4CB8()
{
  return sub_24D2B4C70(&qword_269860748, type metadata accessor for UIBackgroundTaskIdentifier);
}

uint64_t sub_24D2B4D00()
{
  sub_24D2B4C70(&qword_269860888, type metadata accessor for Key);
  sub_24D2B4C70(&qword_269860890, type metadata accessor for Key);
  return sub_24D39D320();
}

uint64_t sub_24D2B4DBC()
{
  sub_24D2B4C70(&qword_2698608B8, type metadata accessor for CHHapticEngineOptionKey);
  sub_24D2B4C70(&qword_2698608C0, type metadata accessor for CHHapticEngineOptionKey);
  return sub_24D39D320();
}

uint64_t sub_24D2B4E78()
{
  sub_24D2B4C70(&qword_2698608A8, type metadata accessor for CHHapticPowerUsage);
  sub_24D2B4C70(&qword_2698608B0, type metadata accessor for CHHapticPowerUsage);
  return sub_24D39D320();
}

uint64_t sub_24D2B4F34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24D39CAC0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24D2B4F7C()
{
  sub_24D2B4C70(&qword_269860898, type metadata accessor for CHHapticUsageCategory);
  sub_24D2B4C70(&qword_2698608A0, type metadata accessor for CHHapticUsageCategory);
  return sub_24D39D320();
}

uint64_t sub_24D2B5038(uint64_t a1, uint64_t a2)
{
  return sub_24D2B50C4(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_24D2B5050()
{
  return MEMORY[0x270F9E010](*v0);
}

uint64_t sub_24D2B5058()
{
  return sub_24D39D5A0();
}

uint64_t sub_24D2B5084(uint64_t a1)
{
  return MEMORY[0x270F9FC40](a1, *v1);
}

uint64_t sub_24D2B508C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24D2B50C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_24D39CAF0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24D2B5108()
{
  sub_24D39CAF0();
  sub_24D39CB40();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D2B515C()
{
  sub_24D39CAF0();
  sub_24D39D590();
  sub_24D39CB40();
  uint64_t v0 = sub_24D39D5D0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24D2B51D0()
{
  uint64_t v0 = sub_24D39CAF0();
  uint64_t v2 = v1;
  if (v0 == sub_24D39CAF0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24D39D4B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void type metadata accessor for PRBTProximityLevel(uint64_t a1)
{
}

void type metadata accessor for NIMotionActivityState(uint64_t a1)
{
}

void type metadata accessor for RemovalReason(uint64_t a1)
{
}

void type metadata accessor for NISessionSuspensionReason(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for CHHapticUsageCategory(uint64_t a1)
{
}

void type metadata accessor for CHHapticPowerUsage(uint64_t a1)
{
}

void type metadata accessor for CHHapticEngineOptionKey(uint64_t a1)
{
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
}

void type metadata accessor for Status(uint64_t a1)
{
}

void _s3__C3KeyVMa_0(uint64_t a1)
{
}

void type metadata accessor for SymbolicTraits(uint64_t a1)
{
}

void type metadata accessor for SKLabelHorizontalAlignmentMode(uint64_t a1)
{
}

__n128 initializeWithCopy for FLSpringParameters(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for UIVibrancyEffectStyle(uint64_t a1)
{
}

void type metadata accessor for Style(uint64_t a1)
{
}

void type metadata accessor for TextStyle(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for FMBTDistanceViewStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t getEnumTagSinglePayload for FLSpringParameters(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FLSpringParameters(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void sub_24D2B5464(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_24D2B54AC()
{
  return sub_24D2B4C70(&qword_2698607F8, type metadata accessor for TextStyle);
}

uint64_t sub_24D2B54F4()
{
  return sub_24D2B4C70(&qword_269860800, type metadata accessor for TextStyle);
}

uint64_t sub_24D2B553C()
{
  return sub_24D2B4C70(&qword_269860808, type metadata accessor for TextStyle);
}

uint64_t sub_24D2B5584()
{
  return sub_24D2B4C70(&qword_269860810, _s3__C3KeyVMa_0);
}

uint64_t sub_24D2B55CC()
{
  return sub_24D2B4C70(&qword_269860818, _s3__C3KeyVMa_0);
}

uint64_t sub_24D2B5614()
{
  return sub_24D2B4C70(&qword_269860820, type metadata accessor for CHHapticEngineOptionKey);
}

uint64_t sub_24D2B565C()
{
  return sub_24D2B4C70(&qword_269860828, type metadata accessor for CHHapticEngineOptionKey);
}

uint64_t sub_24D2B56A4()
{
  return sub_24D2B4C70(&qword_269860830, type metadata accessor for CHHapticEngineOptionKey);
}

uint64_t sub_24D2B56EC()
{
  return sub_24D2B4C70(&qword_269860838, type metadata accessor for CHHapticPowerUsage);
}

uint64_t sub_24D2B5734()
{
  return sub_24D2B4C70(&qword_269860840, type metadata accessor for CHHapticPowerUsage);
}

uint64_t sub_24D2B577C()
{
  return sub_24D2B4C70(&qword_269860848, type metadata accessor for CHHapticPowerUsage);
}

uint64_t sub_24D2B57C4()
{
  return sub_24D2B4C70(&qword_269860850, type metadata accessor for CHHapticUsageCategory);
}

uint64_t sub_24D2B580C()
{
  return sub_24D2B4C70(&qword_269860858, type metadata accessor for CHHapticUsageCategory);
}

uint64_t sub_24D2B5854()
{
  return sub_24D2B4C70(&qword_269860860, type metadata accessor for CHHapticUsageCategory);
}

uint64_t sub_24D2B589C()
{
  return sub_24D2B4C70(&qword_269860868, type metadata accessor for Key);
}

uint64_t sub_24D2B58E4()
{
  return sub_24D2B4C70(&qword_269860870, type metadata accessor for Key);
}

uint64_t sub_24D2B592C()
{
  return sub_24D2B4C70(&qword_269860878, type metadata accessor for Key);
}

uint64_t sub_24D2B5974()
{
  return sub_24D2B4C70(&qword_269860880, _s3__C3KeyVMa_0);
}

void sub_24D2B59EC()
{
  uint64_t v0 = self;
  double v1 = *MEMORY[0x263F81838];
  uint64_t v2 = (void *)sub_24D39CAC0();
  id v3 = objc_msgSend(v0, sel_systemFontOfSize_weight_design_, v2, 68.0, v1);

  if (v3)
  {
    uint64_t v4 = (void *)sub_24D39CAC0();
    id v5 = objc_msgSend(v0, sel_systemFontOfSize_weight_design_, v4, 20.0, v1);

    if (v5)
    {
      id v6 = objc_msgSend(self, sel_labelColor);
      qword_269869F40 = (uint64_t)v3;
      *(void *)algn_269869F48 = v5;
      qword_269869F50 = (uint64_t)v6;
      unk_269869F58 = xmmword_24D3A0030;
      qword_269869F68 = 0x3FE0000000000000;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_24D2B5B20()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_distanceLabel;
  type metadata accessor for FMR1InsetLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v3 = objc_allocWithZone(ObjCClassFromMetadata);
  uint64_t v4 = v0;
  *(void *)&v0[v1] = objc_msgSend(v3, sel_init);
  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowVerticalStackView;
  *(void *)&v4[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowStackView;
  *(void *)&v4[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_hintLabel;
  *(void *)&v4[v7] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  uint64_t v8 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityViewContainer;
  *(void *)&v4[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityView;
  *(void *)&v4[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F823E8]), sel_initWithActivityIndicatorStyle_, 100);
  uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_style;
  if (qword_269860290 != -1) {
    swift_once();
  }
  float v11 = &v4[v10];
  __float2 v12 = (void *)qword_269869F40;
  float v13 = *(void **)algn_269869F48;
  float32x2_t v14 = (void *)qword_269869F50;
  uint64_t v15 = qword_269869F68;
  long long v16 = unk_269869F58;
  *(void *)float v11 = qword_269869F40;
  *((void *)v11 + 1) = v13;
  *((void *)v11 + 2) = v14;
  *(_OWORD *)(v11 + 24) = v16;
  *((void *)v11 + 5) = v15;
  id v17 = v12;
  id v18 = v13;
  id v19 = v14;

  v22.receiver = v4;
  v22.super_class = (Class)type metadata accessor for FMBTDistanceView();
  id v20 = objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_24D2B5D2C();

  return v20;
}

void sub_24D2B5D2C()
{
  objc_msgSend(v0, sel_setOverrideUserInterfaceStyle_, 2);
  objc_msgSend(v0, sel_setAxis_, 1);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_hintLabel];
  id v2 = *(id *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_distanceLabel];
  id v3 = v1;
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v4 = v3;
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowStackView];
  objc_msgSend(v5, sel_setAxis_, 0);
  objc_msgSend(v5, sel_setAlignment_, 3);
  uint64_t v6 = (double *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_style];
  objc_msgSend(v5, sel_setSpacing_, *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_style + 24]);
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowVerticalStackView];
  objc_msgSend(v7, sel_setAxis_, 1);
  objc_msgSend(v7, sel_setAlignment_, 1);
  objc_msgSend(v7, sel_setSpacing_, v6[4]);
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityView];
  id v9 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v8, sel_setColor_, v9);

  objc_msgSend(v8, sel_startAnimating);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityViewContainer];
  objc_msgSend(v10, sel_addSubview_, v8);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v10, sel_setHidden_, 1);
  objc_msgSend(v5, sel_addArrangedSubview_, v10);
  objc_msgSend(v5, sel_addArrangedSubview_, v4);
  id v11 = v2;
  id v12 = v5;
  objc_msgSend(v7, sel_addArrangedSubview_, v11);
  objc_msgSend(v7, sel_addArrangedSubview_, v12);

  objc_msgSend(v0, sel_addArrangedSubview_, v7);
  objc_msgSend(v11, sel_setFont_, *(void *)v6);
  objc_msgSend(v11, sel_setTextColor_, *((void *)v6 + 2));
  objc_msgSend(v4, sel_setFont_, *((void *)v6 + 1));
  float v13 = self;
  sub_24D2B7450(&qword_269861330);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24D3A0040;
  id v15 = objc_msgSend(v10, sel_centerXAnchor);
  id v16 = objc_msgSend(v8, sel_centerXAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(void *)(v14 + 32) = v17;
  id v18 = objc_msgSend(v10, sel_centerYAnchor);
  id v19 = objc_msgSend(v8, sel_centerYAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(void *)(v14 + 40) = v20;
  id v21 = objc_msgSend(v10, sel_widthAnchor);
  id v22 = objc_msgSend(v21, sel_constraintEqualToConstant_, 20.0);

  *(void *)(v14 + 48) = v22;
  id v23 = objc_msgSend(v10, sel_heightAnchor);
  id v24 = objc_msgSend(v23, sel_constraintEqualToConstant_, 20.0);

  *(void *)(v14 + 56) = v24;
  sub_24D39CC30();
  sub_24D2B7544();
  id v25 = (id)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v25);
}

void sub_24D2B61C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = self;
  double v10 = *(double *)&v4[OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_style + 40];
  sub_24D2B6CE8(a2, (uint64_t)v21);
  id v11 = (void *)swift_allocObject();
  v11[2] = v4;
  sub_24D2B6EA8(a1, (uint64_t)(v11 + 3));
  v11[16] = a3;
  v11[17] = a4;
  sub_24D2B6F04(v21, (uint64_t)(v11 + 18));
  id v19 = sub_24D2B6F1C;
  id v20 = v11;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  id v17 = sub_24D32194C;
  id v18 = &unk_26FF85C00;
  id v12 = _Block_copy(&aBlock);
  float v13 = v4;
  sub_24D2B7278(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
  swift_bridgeObjectRetain();
  swift_release();
  id v19 = (id (*)())nullsub_1;
  id v20 = 0;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  id v17 = sub_24D31845C;
  id v18 = &unk_26FF85C28;
  uint64_t v14 = _Block_copy(&aBlock);
  objc_msgSend(v9, sel_transitionWithView_duration_options_animations_completion_, v13, 5242880, v12, v14, v10);
  _Block_release(v14);
  _Block_release(v12);
}

id sub_24D2B63A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_24D2B6EA8(a2, (uint64_t)v58);
  uint64_t v8 = v58[0];
  uint64_t v9 = v58[1];
  v54 = (void *)v58[3];
  v55 = (void *)v58[2];
  uint64_t v52 = v58[5];
  uint64_t v53 = v58[4];
  uint64_t v10 = v58[8];
  uint64_t v50 = v58[7];
  uint64_t v51 = v58[6];
  uint64_t v11 = v58[9];
  uint64_t v48 = v58[11];
  uint64_t v49 = v58[10];
  int v12 = v59;
  float v13 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_distanceLabel);
  sub_24D2B6EA8(a2, (uint64_t)v62);
  uint64_t v45 = v11;
  uint64_t v46 = v9;
  if ((v63 | 0x2000000u) >> 25 == 3)
  {
    uint64_t v14 = v10;
    uint64_t v15 = v8;
    uint64_t v16 = 0;
  }
  else
  {
    long long v72 = v62[0];
    long long v73 = v62[1];
    long long v74 = v62[2];
    long long v75 = v62[3];
    long long v76 = v62[4];
    long long v77 = v62[5];
    __int16 v78 = v63;
    char v79 = BYTE2(v63);
    uint64_t v43 = v10;
    uint64_t v44 = v11;
    uint64_t v14 = v10;
    uint64_t v15 = v8;
    sub_24D2B6F80(v8, v9, v55, v54, v53, v52, v51, v50, v43, v44, v49, v48, v12, SBYTE2(v12));
    sub_24D2B6FF0();
    sub_24D2B7278(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
    uint64_t v16 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v13, sel_setText_, v16);

  id v17 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_hintLabel);
  id v18 = sub_24D2B68D4();
  objc_msgSend(v17, sel_setTextColor_, v18);

  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_24D345D74(0xD000000000000016, 0x800000024D3A5000, 0, 0);
    sub_24D2B7450((uint64_t *)&unk_269861860);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_24D3A0050;
    *(void *)(v19 + 56) = MEMORY[0x263F8D310];
    *(void *)(v19 + 64) = sub_24D2B7494();
    *(void *)(v19 + 32) = a3;
    *(void *)(v19 + 40) = a4;
    sub_24D39CB00();
    swift_bridgeObjectRelease();
LABEL_6:
    id v20 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_24D2B6EA8(a2, (uint64_t)v60);
  if ((v61 | 0x2000000u) >> 25 != 3)
  {
    char v57 = HIBYTE(v61);
    long long v64 = v60[0];
    long long v65 = v60[1];
    long long v66 = v60[2];
    long long v67 = v60[3];
    long long v68 = v60[4];
    long long v69 = v60[5];
    __int16 v70 = v61;
    char v71 = BYTE2(v61);
    sub_24D2B6F80(v15, v46, v55, v54, v53, v52, v51, v50, v14, v45, v49, v48, v12, SBYTE2(v12));
    sub_24D2B715C(v57, a5);
    sub_24D2B7278(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
    goto LABEL_6;
  }
  id v20 = 0;
LABEL_9:
  objc_msgSend(v17, sel_setText_, v20);

  id v21 = objc_msgSend(v13, sel_text);
  if (!v21)
  {
    if (objc_msgSend(v13, sel_isHidden)) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  id v22 = v21;
  uint64_t v23 = sub_24D39CAF0();
  unint64_t v25 = v24;

  swift_bridgeObjectRelease();
  if ((v25 & 0x2000000000000000) != 0) {
    uint64_t v26 = HIBYTE(v25) & 0xF;
  }
  else {
    uint64_t v26 = v23 & 0xFFFFFFFFFFFFLL;
  }
  if (objc_msgSend(v13, sel_isHidden) != (v26 == 0))
  {
    if (v26)
    {
      uint64_t v27 = 0;
      double v28 = 1.0;
LABEL_18:
      objc_msgSend(v13, sel_setAlpha_, v28);
      objc_msgSend(v13, sel_setHidden_, v27);
      goto LABEL_19;
    }
LABEL_17:
    double v28 = 0.0;
    uint64_t v27 = 1;
    goto LABEL_18;
  }
LABEL_19:
  id v29 = objc_msgSend(v17, sel_text);
  if (v29)
  {
    int v30 = v29;
    uint64_t v31 = sub_24D39CAF0();
    unint64_t v33 = v32;

    swift_bridgeObjectRelease();
    uint64_t v34 = HIBYTE(v33) & 0xF;
    if ((v33 & 0x2000000000000000) == 0) {
      uint64_t v34 = v31 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v35 = v34 == 0;
  }
  else
  {
    BOOL v35 = 1;
  }
  v36 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowStackView);
  if (v35 != objc_msgSend(v36, sel_isHidden))
  {
    double v37 = 1.0;
    if (v35) {
      double v37 = 0.0;
    }
    objc_msgSend(v36, sel_setAlpha_, v37);
    objc_msgSend(v36, sel_setHidden_, v35);
  }
  v38 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityViewContainer);
  id result = objc_msgSend(v38, sel_isHidden);
  if ((a4 == 0) != result)
  {
    BOOL v40 = a4 == 0;
    BOOL v41 = a4 == 0;
    double v42 = 1.0;
    if (v40) {
      double v42 = 0.0;
    }
    objc_msgSend(v38, sel_setAlpha_, v42);
    return objc_msgSend(v38, sel_setHidden_, v41);
  }
  return result;
}

id sub_24D2B68D4()
{
  sub_24D2B6EA8(v0, (uint64_t)v4);
  if ((v5 | 0x2000000) >> 25 == 3) {
    uint64_t v1 = (SEL *)&selRef_clearColor;
  }
  else {
    uint64_t v1 = *(SEL **)((char *)off_265304610
  }
                 + (((uint64_t)((v5 | ((unint64_t)v6 << 32)) << 40) >> 53) & 0xFFFFFFFFFFFFFFF8));
  id v2 = [self *v1];
  return v2;
}

id sub_24D2B699C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMBTDistanceView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMBTDistanceView()
{
  return self;
}

void destroy for FMBTDistanceViewStyle(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for FMBTDistanceViewStyle(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

uint64_t assignWithCopy for FMBTDistanceViewStyle(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  unsigned int v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for FMBTDistanceViewStyle(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMBTDistanceViewStyle(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  unsigned int v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMBTDistanceViewStyle(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMBTDistanceViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMBTDistanceViewStyle()
{
  return &type metadata for FMBTDistanceViewStyle;
}

uint64_t sub_24D2B6CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24D2B6D4C()
{
  int v1 = *(_DWORD *)(v0 + 120);
  if ((v1 | 0x2000000u) >> 25 != 3) {
    sub_24D2B6DE8(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), v1, SBYTE2(v1));
  }
  swift_bridgeObjectRelease();
  sub_24D2B6E58(v0 + 144);
  return MEMORY[0x270FA0238](v0, 184, 7);
}

void sub_24D2B6DE8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, char a14)
{
  if (a14 == 4) {
    sub_24D2B6E14(a1, a2, a3, a4);
  }
}

void sub_24D2B6E14(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a3 != (void *)1)
  {
  }
}

uint64_t sub_24D2B6E58(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_24D2B6EA8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24D2B6F04(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_24D2B6F1C()
{
  return sub_24D2B63A0(v0[2], (uint64_t)(v0 + 3), v0[16], v0[17], v0 + 18);
}

uint64_t sub_24D2B6F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D2B6F40()
{
  return swift_release();
}

void sub_24D2B6F48(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  if ((a13 | 0x2000000u) >> 25 != 3) {
    sub_24D2B6F80(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, SBYTE2(a13));
  }
}

void sub_24D2B6F80(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, char a14)
{
  if (a14 == 4) {
    sub_24D2B6FAC(a1, a2, a3, a4);
  }
}

void sub_24D2B6FAC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a3 != (void *)1)
  {
    id v5 = a4;
    id v6 = a3;
  }
}

uint64_t sub_24D2B6FF0()
{
  v4[0] = 0;
  v4[1] = 0xE000000000000000;
  sub_24D39D1D0();
  swift_bridgeObjectRelease();
  strcpy((char *)v3, "BT_DIRECTION_");
  HIWORD(v3[1]) = -4864;
  sub_24D2B74E8(v0, (uint64_t)v4);
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  uint64_t v1 = sub_24D345D74(v3[0], v3[1], 0, 0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_24D2B715C(char a1, void *a2)
{
  if (a1 == 1 || a1 == 2)
  {
    v12[0] = 95;
    v12[1] = 0xE100000000000000;
    sub_24D39CB70();
    swift_bridgeObjectRelease();
  }
  sub_24D2B74E8(v2, (uint64_t)v12);
  if (v13 == 1)
  {
    uint64_t v10 = sub_24D2B731C();
    uint64_t v11 = v4;
    sub_24D39CB70();
    swift_bridgeObjectRelease();
    uint64_t v5 = v10;
    uint64_t v6 = v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_24D2B731C();
    uint64_t v6 = v7;
  }
  uint64_t v8 = sub_24D370890(v5, v6, a2);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_24D2B7278(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))
{
  return a1;
}

void sub_24D2B72E4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  if ((a13 | 0x2000000u) >> 25 != 3) {
    sub_24D2B6DE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, SBYTE2(a13));
  }
}

uint64_t sub_24D2B731C()
{
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  sub_24D39D1D0();
  swift_bridgeObjectRelease();
  strcpy((char *)v2, "BT_DIRECTION_");
  sub_24D2B74E8(v0, (uint64_t)v3);
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  return v2[0];
}

uint64_t sub_24D2B7450(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_24D2B7494()
{
  unint64_t result = qword_269861390;
  if (!qword_269861390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861390);
  }
  return result;
}

uint64_t sub_24D2B74E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_24D2B7544()
{
  unint64_t result = qword_269862780;
  if (!qword_269862780)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269862780);
  }
  return result;
}

void sub_24D2B7584()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_distanceLabel;
  type metadata accessor for FMR1InsetLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowVerticalStackView;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_bottomRowStackView;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_hintLabel;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityViewContainer;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_connectingActivityView;
  *(void *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F823E8]), sel_initWithActivityIndicatorStyle_, 100);
  uint64_t v8 = OBJC_IVAR____TtC11FMFindingUI16FMBTDistanceView_style;
  if (qword_269860290 != -1) {
    swift_once();
  }
  id v9 = &v0[v8];
  uint64_t v10 = (void *)qword_269869F40;
  uint64_t v11 = *(void **)algn_269869F48;
  id v12 = (void *)qword_269869F50;
  uint64_t v13 = qword_269869F68;
  long long v14 = unk_269869F58;
  *(void *)id v9 = qword_269869F40;
  *((void *)v9 + 1) = v11;
  *((void *)v9 + 2) = v12;
  *(_OWORD *)(v9 + 24) = v14;
  *((void *)v9 + 5) = v13;
  id v15 = v10;
  id v16 = v11;
  id v17 = v12;

  sub_24D39D2B0();
  __break(1u);
}

double sub_24D2B7730(uint64_t a1, char a2, uint64_t a3, char a4, unsigned __int8 a5, char a6, double a7)
{
  double v7 = 0.0;
  if ((a2 & 1) == 0)
  {
    int v12 = a5;
    sub_24D358488(a1, 0.0, 3.14159265);
    double v14 = v13;
    if (v12 == 2) {
      int v15 = (sub_24D2B791C(0x7FFFFFFFFFFFFFFFuLL) & 1) == 0;
    }
    else {
      int v15 = v12 & 1;
    }
    double v16 = -1.0;
    if (!v15) {
      double v16 = 1.0;
    }
    if (a4)
    {
      double v18 = v14 * 0.25;
      switch(a6)
      {
        case 1:
          double v7 = v18 * v16 * a7 + 2.35619449;
          break;
        case 2:
          double v7 = v18 * v16 * a7 + -2.35619449;
          break;
        case 3:
          double v7 = v18 * v16 * a7 + -0.785398163;
          break;
        case 4:
          double v19 = v16 + v16;
          goto LABEL_21;
        case 5:
          double v7 = v18 * (v16 + v16) * a7 + 3.14159265;
          break;
        case 6:
          double v7 = v18 * (v16 + v16) * a7 + 1.57079633;
          break;
        case 7:
          double v7 = -(v18 * (v16 + v16) * a7 + 1.57079633);
          break;
        case 8:
          double v19 = v16 * 4.0;
LABEL_21:
          double v7 = v18 * v19 * a7;
          break;
        default:
          double v7 = v18 * v16 * a7 + 0.785398163;
          break;
      }
    }
    else
    {
      double v7 = *(double *)&a3;
    }
    __sincos_stret(v7);
  }
  return v7;
}

unint64_t sub_24D2B791C(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0;
    MEMORY[0x253326030](&v3, 8);
    unint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0;
          MEMORY[0x253326030](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D2B79A8()
{
  return 1;
}

uint64_t sub_24D2B79B0()
{
  return sub_24D39D5D0();
}

uint64_t sub_24D2B79F4()
{
  return sub_24D39D5A0();
}

uint64_t sub_24D2B7A1C()
{
  return sub_24D39D5D0();
}

uint64_t FMConnectionManager.identifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_24D2B7A7C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t FMConnectionManager.findables.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FMConnectionManager.hostSupportsRanging.getter()
{
  return platformSupportsProximity();
}

id sub_24D2B7AB0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v28 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  double v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *a2;
  int64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    HIDWORD(v25) = v8;
    uint64_t v33 = MEMORY[0x263F8EE78];
    uint64_t v27 = v2;
    uint64_t v10 = v2;
    sub_24D383634(0, v9, 0);
    uint64_t v26 = a1;
    uint64_t v11 = a1 + 32;
    int v12 = (void (**)(char *, uint64_t))(v5 + 8);
    do
    {
      sub_24D2B6CE8(v11, (uint64_t)v30);
      uint64_t v13 = v31;
      uint64_t v14 = v32;
      sub_24D2B8A34(v30, v31);
      (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
      uint64_t v15 = sub_24D39C850();
      uint64_t v17 = v16;
      (*v12)(v7, v28);
      sub_24D2B6E58((uint64_t)v30);
      uint64_t v18 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24D383634(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v33;
      }
      unint64_t v20 = *(void *)(v18 + 16);
      unint64_t v19 = *(void *)(v18 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_24D383634(v19 > 1, v20 + 1, 1);
        uint64_t v18 = v33;
      }
      *(void *)(v18 + 16) = v20 + 1;
      uint64_t v21 = v18 + 16 * v20;
      *(void *)(v21 + 32) = v15;
      *(void *)(v21 + 40) = v17;
      v11 += 40;
      --v9;
    }
    while (v9);
    a1 = v26;
    unint64_t v2 = v27;
    LOBYTE(v8) = BYTE4(v25);
  }
  else
  {
    id v22 = v2;
    uint64_t v18 = MEMORY[0x263F8EE78];
  }
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_identifiers] = v18;
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_findables] = a1;
  v2[OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_connectionContext] = v8;

  uint64_t v23 = (objc_class *)type metadata accessor for FMConnectionManager();
  v29.receiver = v2;
  v29.super_class = v23;
  return objc_msgSendSuper2(&v29, sel_init);
}

id FMConnectionManager.__deallocating_deinit()
{
  (*(void (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMConnectionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMConnectionManager()
{
  return self;
}

void sub_24D2B7E50()
{
  if (qword_2698602A0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24D39C950();
  sub_24D2B508C(v0, (uint64_t)qword_269869FA0);
  os_log_type_t v1 = sub_24D39CDE0();
  log = sub_24D39C930();
  if (os_log_type_enabled(log, v1))
  {
    objc_super v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v3 = swift_slowAlloc();
    uint64_t v5 = v3;
    *(_DWORD *)objc_super v2 = 136315138;
    sub_24D2B8328(0xD000000000000047, 0x800000024D3A50C0, &v5);
    sub_24D39D070();
    _os_log_impl(&dword_24D2B1000, log, v1, "%s", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v3, -1, -1);
    MEMORY[0x253326010](v2, -1, -1);
  }
  else
  {
  }
}

void sub_24D2B7FF4()
{
  if (qword_2698602A0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_24D39C950();
  sub_24D2B508C(v0, (uint64_t)qword_269869FA0);
  os_log_type_t v1 = sub_24D39CDE0();
  log = sub_24D39C930();
  if (os_log_type_enabled(log, v1))
  {
    objc_super v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v3 = swift_slowAlloc();
    uint64_t v5 = v3;
    *(_DWORD *)objc_super v2 = 136315138;
    sub_24D2B8328(0xD00000000000004ALL, 0x800000024D3A5110, &v5);
    sub_24D39D070();
    _os_log_impl(&dword_24D2B1000, log, v1, "%s", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v3, -1, -1);
    MEMORY[0x253326010](v2, -1, -1);
  }
  else
  {
  }
}

id FMConnectionManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void FMConnectionManager.init()()
{
}

uint64_t sub_24D2B822C(uint64_t result, unsigned char **a2)
{
  objc_super v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_24D2B823C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

unsigned char **sub_24D2B8278(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *unint64_t result = v4 + 1;
  return result;
}

uint64_t sub_24D2B8288(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24D2B82B0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_24D2B8328(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_24D39D070();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_24D2B8328(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24D2B84B0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24D2B8A78((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24D2B8A78((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_24D2B6E58((uint64_t)v12);
  return v7;
}

uint64_t method lookup function for FMConnectionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMConnectionManager);
}

uint64_t dispatch thunk of FMConnectionManager.type.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of FMConnectionManager.connect()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of FMConnectionManager.disconnect()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t sub_24D2B84B0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24D39D080();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24D2B866C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24D39D230();
  if (!v8)
  {
    sub_24D39D2A0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24D39D310();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24D2B866C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24D2B8704(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24D2B88E4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24D2B88E4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24D2B8704(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24D2B887C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24D39D1E0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24D39D2A0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24D39CB80();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24D39D310();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24D39D2A0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_24D2B887C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_24D2B7450(&qword_269860A60);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24D2B88E4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_24D2B7450(&qword_269860A60);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24D39D310();
  __break(1u);
  return result;
}

void *sub_24D2B8A34(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_24D2B8A78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t getEnumTagSinglePayload for FMConnectionManagerError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for FMConnectionManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24D2B8BC8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D2B8BF0()
{
  return 0;
}

ValueMetadata *type metadata accessor for FMConnectionManagerError()
{
  return &type metadata for FMConnectionManagerError;
}

unint64_t sub_24D2B8C0C()
{
  unint64_t result = qword_269860A68;
  if (!qword_269860A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860A68);
  }
  return result;
}

uint64_t sub_24D2B8C60(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24D2B8C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_24D2B8C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_24D2B8C9C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_24D2B8CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_24D2B8CC4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFindingPartPickerView()
{
  return self;
}

id sub_24D2B8CF8(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_effectBackground;
  unsigned int v4 = self;
  uint64_t v5 = v1;
  id v6 = objc_msgSend(v4, sel_effectWithStyle_, 20);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v6);

  *(void *)&v1[v3] = v7;
  uint64_t v8 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel;
  *(void *)&v5[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_containerStackView;
  *(void *)&v5[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_iconView;
  *(void *)&v5[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  size_t v11 = &v5[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style];
  id v12 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F83618], 0x10000);
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_whiteColor);
  id v15 = objc_msgSend(v13, sel_whiteColor);
  id v16 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.5);

  *(void *)size_t v11 = v12;
  *(_OWORD *)(v11 + 8) = xmmword_24D3A0200;
  *(_OWORD *)(v11 + 24) = xmmword_24D3A0200;
  *((void *)v11 + 5) = 0x4024000000000000;
  *((void *)v11 + 6) = v14;
  *((void *)v11 + 7) = v16;
  *((void *)v11 + 8) = 0x4028000000000000;
  uint64_t v17 = (uint64_t)&v5[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value];
  *(_OWORD *)uint64_t v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(void *)(v17 + 32) = 0;
  *(void *)&v5[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_findables] = a1;
  if (*(void *)(a1 + 16))
  {
    sub_24D2B6CE8(a1 + 32, (uint64_t)v25);
  }
  else
  {
    uint64_t v26 = 0;
    memset(v25, 0, sizeof(v25));
  }
  swift_beginAccess();
  sub_24D2BB624((uint64_t)v25, v17);
  swift_endAccess();

  v24.receiver = v5;
  v24.super_class = (Class)type metadata accessor for FMFindingGenericPartPickerView();
  id v18 = objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_24D2B9148();
  sub_24D2B92A4();
  sub_24D2B8FF8(v19);
  id v20 = objc_msgSend(v18, sel_contextMenuInteraction);
  uint64_t v21 = v18;
  if (v20)
  {
    id v22 = v20;
    objc_msgSend(v18, sel_setShowsMenuAsPrimaryAction_, 1);
    objc_msgSend(v18, sel_addInteraction_, v22);

    uint64_t v21 = v22;
  }

  return v18;
}

void sub_24D2B8FF8(double a1)
{
  LODWORD(a1) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, a1);
  int v2 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel];
  uint64_t v3 = (void *)sub_24D2B9858();
  objc_msgSend(v2, sel_setAttributedText_, v3);

  unsigned int v4 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_iconView];
  uint64_t v5 = (void *)sub_24D39CAC0();
  id v6 = objc_msgSend(self, sel_systemImageNamed_, v5);

  if (v6)
  {
    id v7 = objc_msgSend(self, sel_whiteColor);
    id v8 = objc_msgSend(v6, sel_imageWithTintColor_renderingMode_, v7, 1);
  }
  else
  {
    id v8 = 0;
  }
  objc_msgSend(v4, sel_setImage_, v8);
}

id sub_24D2B9148()
{
  objc_msgSend(v0, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_effectBackground]);
  id v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_containerStackView];
  objc_msgSend(v0, sel_addSubview_, v1);
  id v2 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v2, sel_setMasksToBounds_, 1);

  id v3 = objc_msgSend(v0, sel_layer);
  unsigned int v4 = (double *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style];
  objc_msgSend(v3, sel_setCornerRadius_, *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style + 40]);

  objc_msgSend(v1, sel_setAxis_, 0);
  objc_msgSend(v1, sel_setSpacing_, 1.17549435e-38);
  objc_msgSend(v1, sel_setLayoutMarginsRelativeArrangement_, 1);
  objc_msgSend(v1, sel_setLayoutMargins_, v4[1], v4[2], v4[3], v4[4]);
  objc_msgSend(v1, sel_addArrangedSubview_, *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel]);
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_iconView];
  return objc_msgSend(v1, sel_addArrangedSubview_, v5);
}

void sub_24D2B92A4()
{
  id v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_effectBackground];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel];
  unsigned int v4 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_containerStackView];
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_iconView];
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  id v42 = v5;
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v42, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v41 = self;
  sub_24D2B7450(&qword_269861330);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24D3A0040;
  id v10 = objc_msgSend(v8, sel_leadingAnchor);
  id v11 = objc_msgSend(v1, (SEL)&off_265304238 + 2);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(void *)(v9 + 32) = v12;
  id v13 = objc_msgSend(v8, sel_trailingAnchor);
  id v14 = objc_msgSend(v1, (SEL)&off_265304490 + 4);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(void *)(v9 + 40) = v15;
  id v16 = objc_msgSend(v8, sel_topAnchor);
  id v17 = objc_msgSend(v1, byte_265304533);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(void *)(v9 + 48) = v18;
  id v19 = objc_msgSend(v8, sel_bottomAnchor);
  id v20 = objc_msgSend(v1, sel_bottomAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v9 + 56) = v21;
  sub_24D39CC30();
  sub_24D2BC100(0, (unint64_t *)&qword_269862780);
  id v22 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_activateConstraints_, v22);

  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_24D3A0040;
  id v24 = objc_msgSend(v6, sel_leadingAnchor);
  id v25 = objc_msgSend(v1, sel_leadingAnchor);
  id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(void *)(v23 + 32) = v26;
  id v27 = objc_msgSend(v6, sel_trailingAnchor);
  id v28 = objc_msgSend(v1, sel_trailingAnchor);
  id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(void *)(v23 + 40) = v29;
  id v30 = objc_msgSend(v6, sel_topAnchor);
  id v31 = objc_msgSend(v1, sel_topAnchor);
  id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

  *(void *)(v23 + 48) = v32;
  id v33 = objc_msgSend(v6, sel_bottomAnchor);
  id v34 = objc_msgSend(v1, sel_bottomAnchor);
  id v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  *(void *)(v23 + 56) = v35;
  sub_24D39CC30();
  v36 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_activateConstraints_, v36);

  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_24D3A0210;
  id v38 = objc_msgSend(v42, sel_heightAnchor);
  id v39 = objc_msgSend(v42, sel_widthAnchor);
  id v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  *(void *)(v37 + 32) = v40;
  sub_24D39CC30();
  id v43 = (id)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v41, sel_activateConstraints_, v43);
}

uint64_t sub_24D2B9858()
{
  uint64_t v84 = sub_24D39C8A0();
  uint64_t v1 = *(void *)(v84 - 8);
  ((void (*)(void))MEMORY[0x270FA5388])();
  long long v73 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v79 = (int *)sub_24D2B7450(&qword_269860AC0);
  ((void (*)(void))MEMORY[0x270FA5388])();
  *(void *)&long long v83 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B7450((uint64_t *)&unk_269861100);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v81 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v8 = (char *)&v69 - v7;
  MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v69 - v9;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089B8]), sel_init);
  uint64_t v69 = v0;
  id v70 = v11;
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_findables);
  id v13 = *(char **)(result + 16);
  uint64_t v71 = result;
  __int16 v78 = v13;
  if (!v13)
  {
    id v16 = 0;
    goto LABEL_18;
  }
  id v14 = (void *)(result + 32);
  uint64_t v15 = v0 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value;
  swift_bridgeObjectRetain();
  uint64_t v77 = v15;
  swift_beginAccess();
  id v16 = 0;
  v82 = (void (**)(char *, void, uint64_t, uint64_t))(v1 + 56);
  long long v72 = (void (**)(char *, uint64_t, uint64_t))(v1 + 32);
  long long v74 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  long long v75 = v8;
  long long v76 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  while (1)
  {
    id v17 = v10;
    uint64_t v18 = v14[3];
    uint64_t v19 = v14[4];
    sub_24D2B8A34(v14, v18);
    id v20 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
    uint64_t v21 = v19;
    id v10 = v17;
    v20(v18, v21);
    id v22 = *v82;
    (*v82)(v17, 0, 1, v84);
    sub_24D2BBF50(v77, (uint64_t)v86, &qword_269860AA8);
    uint64_t v23 = v87;
    if (v87)
    {
      uint64_t v24 = v88;
      id v25 = sub_24D2B8A34(v86, v87);
      v80 = &v69;
      uint64_t v26 = *(void *)(v23 - 8);
      MEMORY[0x270FA5388](v25);
      id v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v26 + 16))(v28);
      sub_24D2BBFB4((uint64_t)v86, &qword_269860AA8);
      id v29 = *(void (**)(uint64_t, uint64_t))(v24 + 16);
      uint64_t v30 = (uint64_t)v75;
      uint64_t v31 = v24;
      id v10 = v17;
      v29(v23, v31);
      uint64_t v32 = v23;
      uint64_t v33 = v30;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v32);
      v22((char *)v30, 0, 1, v84);
    }
    else
    {
      sub_24D2BBFB4((uint64_t)v86, &qword_269860AA8);
      uint64_t v33 = (uint64_t)v75;
      v22(v75, 1, 1, v84);
    }
    uint64_t v34 = v83;
    uint64_t v35 = v83 + v79[12];
    sub_24D2BBF50((uint64_t)v10, v83, (uint64_t *)&unk_269861100);
    sub_24D2BBF50(v33, v35, (uint64_t *)&unk_269861100);
    v36 = *v76;
    if ((*v76)(v34, 1, v84) == 1) {
      break;
    }
    sub_24D2BBF50(v83, v81, (uint64_t *)&unk_269861100);
    if (v36(v35, 1, v84) != 1)
    {
      uint64_t v37 = v73;
      uint64_t v38 = v84;
      (*v72)(v73, v35, v84);
      sub_24D2BC050((unint64_t *)&qword_2698613A0, MEMORY[0x263F07508]);
      LODWORD(v80) = sub_24D39CAB0();
      id v39 = *v74;
      (*v74)((uint64_t)v37, v38);
      sub_24D2BBFB4(v33, (uint64_t *)&unk_269861100);
      sub_24D2BBFB4((uint64_t)v10, (uint64_t *)&unk_269861100);
      v39(v81, v38);
      sub_24D2BBFB4(v83, (uint64_t *)&unk_269861100);
      if (v80) {
        goto LABEL_17;
      }
      goto LABEL_5;
    }
    sub_24D2BBFB4(v33, (uint64_t *)&unk_269861100);
    sub_24D2BBFB4((uint64_t)v10, (uint64_t *)&unk_269861100);
    (*v74)(v81, v84);
LABEL_4:
    sub_24D2BBFB4(v83, &qword_269860AC0);
LABEL_5:
    ++v16;
    v14 += 5;
    if (v78 == v16)
    {
      id v16 = 0;
      goto LABEL_17;
    }
  }
  sub_24D2BBFB4(v33, (uint64_t *)&unk_269861100);
  sub_24D2BBFB4((uint64_t)v10, (uint64_t *)&unk_269861100);
  if (v36(v35, 1, v84) != 1) {
    goto LABEL_4;
  }
  sub_24D2BBFB4(v83, (uint64_t *)&unk_269861100);
LABEL_17:
  uint64_t result = swift_bridgeObjectRelease();
LABEL_18:
  if (__OFADD__(v16, 1))
  {
    __break(1u);
  }
  else
  {
    v85 = v16 + 1;
    v86[0] = sub_24D39D490();
    v86[1] = v40;
    sub_24D39CB70();
    uint64_t v84 = sub_24D2B7450(&qword_269860AD8);
    uint64_t inited = swift_initStackObject();
    long long v83 = xmmword_24D3A0220;
    *(_OWORD *)(inited + 16) = xmmword_24D3A0220;
    id v42 = (void *)*MEMORY[0x263F814F0];
    *(void *)(inited + 32) = *MEMORY[0x263F814F0];
    uint64_t v43 = v69 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style;
    uint64_t v44 = *(void **)(v69 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style);
    uint64_t v45 = sub_24D2B7450(&qword_269860AE0);
    v82 = (void (**)(char *, void, uint64_t, uint64_t))v45;
    *(void *)(inited + 40) = v44;
    uint64_t v46 = (void *)*MEMORY[0x263F81500];
    *(void *)(inited + 64) = v45;
    *(void *)(inited + 72) = v46;
    v47 = *(void **)(v43 + 48);
    uint64_t v81 = sub_24D2BC100(0, &qword_269860AE8);
    *(void *)(inited + 104) = v81;
    *(void *)(inited + 80) = v47;
    v80 = v44;
    __int16 v78 = v46;
    id v48 = v47;
    long long v76 = v42;
    sub_24D3120C8(inited);
    id v49 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v50 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_0(0);
    uint64_t v77 = v51;
    sub_24D2BC050((unint64_t *)&qword_2698608C8, _s3__C3KeyVMa_0);
    uint64_t v52 = (void *)sub_24D39CA70();
    swift_bridgeObjectRelease();
    char v79 = (int *)objc_msgSend(v49, sel_initWithString_attributes_, v50, v52);

    sub_24D345D74(0xD00000000000001ELL, 0x800000024D3A5550, 0, 0);
    sub_24D2B7450((uint64_t *)&unk_269861860);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_24D3A0050;
    uint64_t v54 = sub_24D39CD60();
    *(void *)(v53 + 56) = sub_24D2BC100(0, &qword_269860AF0);
    *(void *)(v53 + 64) = sub_24D2BC098();
    *(void *)(v53 + 32) = v54;
    sub_24D39CB00();
    swift_bridgeObjectRelease();
    uint64_t v55 = swift_initStackObject();
    *(_OWORD *)(v55 + 16) = v83;
    v56 = v76;
    *(void *)(v55 + 32) = v76;
    *(void *)(v55 + 40) = v44;
    char v57 = v78;
    *(void *)(v55 + 64) = v82;
    *(void *)(v55 + 72) = v57;
    v58 = *(void **)(v43 + 56);
    *(void *)(v55 + 104) = v81;
    *(void *)(v55 + 80) = v58;
    int v59 = v80;
    v60 = v56;
    int v61 = v57;
    id v62 = v58;
    sub_24D3120C8(v55);
    id v63 = objc_allocWithZone(MEMORY[0x263F086A0]);
    long long v64 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
    long long v65 = (void *)sub_24D39CA70();
    swift_bridgeObjectRelease();
    id v66 = objc_msgSend(v63, sel_initWithString_attributes_, v64, v65);

    id v67 = v70;
    long long v68 = v79;
    objc_msgSend(v70, sel_appendAttributedString_, v79);
    objc_msgSend(v67, sel_appendAttributedString_, v66);

    return (uint64_t)v67;
  }
  return result;
}

id sub_24D2BA1F4()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel];
  uint64_t v2 = (void *)sub_24D2B9858();
  objc_msgSend(v1, sel_setAttributedText_, v2);

  id result = objc_msgSend(v0, sel_contextMenuInteraction);
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v0;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_24D2BC010;
    *(void *)(v6 + 24) = v5;
    v10[4] = sub_24D2BC028;
    v10[5] = v6;
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 1107296256;
    v10[2] = sub_24D2BA510;
    v10[3] = &unk_26FF85E68;
    uint64_t v7 = _Block_copy(v10);
    id v8 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_updateVisibleMenuWithBlock_, v7);

    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_24D2BA394(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a2;
  id v4 = a2;
  uint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_24D2BB784(v5, (uint64_t)v4, (uint64_t)sub_24D2BC13C, v3);
  swift_bridgeObjectRelease();
  if (v6 >> 62)
  {
    sub_24D2BC100(0, &qword_269860AB0);
    swift_bridgeObjectRetain();
    sub_24D39D2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_24D39D4C0();
    sub_24D2BC100(0, &qword_269860AB0);
  }
  swift_bridgeObjectRelease();
  sub_24D2BC100(0, &qword_269860AB8);
  uint64_t v7 = sub_24D39CF90();
  swift_release();
  return v7;
}

id sub_24D2BA510(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  id v4 = (void *)v2();

  return v4;
}

uint64_t sub_24D2BA564(void *a1, char *a2)
{
  id v26 = a1;
  uint64_t v3 = sub_24D39C8A0();
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)&a2[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_findables];
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v24 = *(void *)&a2[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_findables];
    id v25 = a2;
    uint64_t v9 = v7 + 32;
    id v10 = (void (**)(char *, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_24D2B6CE8(v9, (uint64_t)&v30);
      uint64_t v11 = v31;
      uint64_t v12 = v32;
      sub_24D2B8A34(&v30, v31);
      (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
      uint64_t v13 = sub_24D39C850();
      uint64_t v15 = v14;
      (*v10)(v6, v3);
      id v16 = objc_msgSend(v26, sel_identifier);
      uint64_t v17 = sub_24D39CAF0();
      uint64_t v19 = v18;

      if (v13 == v17 && v15 == v19) {
        break;
      }
      char v21 = sub_24D39D4B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_14;
      }
      sub_24D2B6E58((uint64_t)&v30);
      v9 += 40;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        a2 = v25;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    sub_24D2B6F04(&v30, (uint64_t)&v27);
    swift_bridgeObjectRelease();
    a2 = v25;
    if (!*((void *)&v28 + 1)) {
      return sub_24D2BBFB4((uint64_t)&v27, &qword_269860AA8);
    }
LABEL_12:
    sub_24D2B6F04(&v27, (uint64_t)&v30);
    sub_24D2B6CE8((uint64_t)&v30, (uint64_t)&v27);
    uint64_t v22 = (uint64_t)&a2[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value];
    swift_beginAccess();
    sub_24D2BB68C((uint64_t)&v27, v22);
    swift_endAccess();
    sub_24D2BA1F4();
    sub_24D2BBFB4((uint64_t)&v27, &qword_269860AA8);
    objc_msgSend(a2, sel_sendActionsForControlEvents_, 4096);
    return sub_24D2B6E58((uint64_t)&v30);
  }
  swift_bridgeObjectRetain();
LABEL_11:
  uint64_t v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  swift_bridgeObjectRelease();
  if (*((void *)&v28 + 1)) {
    goto LABEL_12;
  }
  return sub_24D2BBFB4((uint64_t)&v27, &qword_269860AA8);
}

uint64_t sub_24D2BA848@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v50 = a5;
  uint64_t v55 = a4;
  uint64_t v56 = a3;
  uint64_t v48 = a2;
  uint64_t v49 = sub_24D2B7450(&qword_269860AC0);
  MEMORY[0x270FA5388](v49);
  uint64_t v54 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24D2B7450((uint64_t *)&unk_269861100);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v47 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v44 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = sub_24D39C8A0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  sub_24D2B8A34(a1, v19);
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  uint64_t v52 = v22;
  uint64_t v53 = v21;
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  sub_24D2B8A34(a1, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  sub_24D39C850();
  id v25 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  uint64_t v44 = v18;
  uint64_t v46 = v16 + 8;
  uint64_t v45 = v25;
  v25((uint64_t)v18, v15);
  uint64_t v51 = sub_24D39CAC0();
  swift_bridgeObjectRelease();
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  sub_24D2B8A34(a1, v26);
  (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
  uint64_t v57 = v16;
  long long v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  int v61 = v14;
  v28(v14, 0, 1, v15);
  uint64_t v29 = v48 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value;
  swift_beginAccess();
  sub_24D2BBF50(v29, (uint64_t)v58, &qword_269860AA8);
  uint64_t v30 = v59;
  if (v59)
  {
    uint64_t v31 = v60;
    uint64_t v32 = sub_24D2B8A34(v58, v59);
    uint64_t v33 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v32);
    uint64_t v35 = (char *)&v44 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v33 + 16))(v35);
    sub_24D2BBFB4((uint64_t)v58, &qword_269860AA8);
    (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v30);
    v28(v12, 0, 1, v15);
  }
  else
  {
    sub_24D2BBFB4((uint64_t)v58, &qword_269860AA8);
    v28(v12, 1, 1, v15);
  }
  uint64_t v36 = v54;
  uint64_t v37 = v54 + *(int *)(v49 + 48);
  uint64_t v38 = (uint64_t)v61;
  sub_24D2BBF50((uint64_t)v61, v54, (uint64_t *)&unk_269861100);
  sub_24D2BBF50((uint64_t)v12, v37, (uint64_t *)&unk_269861100);
  id v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v39(v36, 1, v15) != 1)
  {
    uint64_t v40 = v47;
    sub_24D2BBF50(v36, v47, (uint64_t *)&unk_269861100);
    if (v39(v37, 1, v15) != 1)
    {
      id v41 = v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v44, v37, v15);
      sub_24D2BC050((unint64_t *)&qword_2698613A0, MEMORY[0x263F07508]);
      sub_24D39CAB0();
      id v42 = v45;
      v45((uint64_t)v41, v15);
      sub_24D2BBFB4((uint64_t)v12, (uint64_t *)&unk_269861100);
      sub_24D2BBFB4((uint64_t)v61, (uint64_t *)&unk_269861100);
      v42(v40, v15);
      sub_24D2BBFB4(v36, (uint64_t *)&unk_269861100);
      goto LABEL_11;
    }
    sub_24D2BBFB4((uint64_t)v12, (uint64_t *)&unk_269861100);
    sub_24D2BBFB4((uint64_t)v61, (uint64_t *)&unk_269861100);
    v45(v40, v15);
    goto LABEL_9;
  }
  sub_24D2BBFB4((uint64_t)v12, (uint64_t *)&unk_269861100);
  sub_24D2BBFB4(v38, (uint64_t *)&unk_269861100);
  if (v39(v37, 1, v15) != 1)
  {
LABEL_9:
    sub_24D2BBFB4(v36, &qword_269860AC0);
    goto LABEL_11;
  }
  sub_24D2BBFB4(v36, (uint64_t *)&unk_269861100);
LABEL_11:
  sub_24D2BC100(0, &qword_269860AC8);
  swift_retain();
  uint64_t result = sub_24D39D000();
  *uint64_t v50 = result;
  return result;
}

id sub_24D2BAF44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingGenericPartPickerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMFindingGenericPartPickerView()
{
  return self;
}

uint64_t sub_24D2BB04C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value;
  swift_beginAccess();
  return sub_24D2BBF50(v3, a1, &qword_269860AA8);
}

uint64_t sub_24D2BB0A8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value;
  swift_beginAccess();
  sub_24D2BB68C(a1, v3);
  swift_endAccess();
  sub_24D2BA1F4();
  return sub_24D2BBFB4(a1, &qword_269860AA8);
}

uint64_t sub_24D2BB120()
{
  return swift_bridgeObjectRetain();
}

id sub_24D2BB130(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for FMFindingGenericPartPickerView());
  return sub_24D2B8CF8(a1);
}

uint64_t sub_24D2BB1D0(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a2;
  id v4 = a2;
  uint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_24D2BB784(v5, (uint64_t)v4, (uint64_t)sub_24D2BBF48, v3);
  swift_bridgeObjectRelease();
  if (v6 >> 62)
  {
    sub_24D2BC100(0, &qword_269860AB0);
    swift_bridgeObjectRetain();
    sub_24D39D2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_24D39D4C0();
    sub_24D2BC100(0, &qword_269860AB0);
  }
  swift_bridgeObjectRelease();
  sub_24D2BC100(0, &qword_269860AB8);
  uint64_t v7 = sub_24D39CF90();
  swift_release();
  return v7;
}

void destroy for FMFindingGenericPartPickerViewStyle(uint64_t a1)
{
  id v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for FMFindingGenericPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  id v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  unint64_t v6 = *(void **)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v5;
  id v7 = v3;
  id v8 = v4;
  id v9 = v6;
  return a1;
}

uint64_t assignWithCopy for FMFindingGenericPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v7 = *(void **)(a2 + 48);
  id v8 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 56);
  uint64_t v11 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v10;
  id v12 = v10;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for FMFindingGenericPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FMFindingGenericPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  uint64_t v5 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingGenericPartPickerViewStyle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingGenericPartPickerViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingGenericPartPickerViewStyle()
{
  return &type metadata for FMFindingGenericPartPickerViewStyle;
}

uint64_t sub_24D2BB624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269860AA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D2BB68C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269860AA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id sub_24D2BB6F4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_24D2BC100(0, &qword_269860AB0);
  uint64_t v2 = sub_24D39CC10();
  swift_retain();
  long long v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_24D2BB784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_24D39D260();
    for (i = (void *)(a1 + 32); ; i += 5)
    {
      sub_24D2BA848(i, a2, a3, a4, &v13);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      sub_24D39D240();
      sub_24D39D270();
      sub_24D39D280();
      sub_24D39D250();
      if (!--v7) {
        return v14;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24D2BB880(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 < 2) {
    return 0;
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_24D2B6CE8(v2, (uint64_t)v17);
    sub_24D2B6CE8((uint64_t)v17, (uint64_t)&v11);
    sub_24D2B7450((uint64_t *)&unk_2698615F0);
    sub_24D2B7450((uint64_t *)&unk_269861150);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_24D2B6F04(v9, (uint64_t)v14);
    uint64_t v3 = v15;
    uint64_t v4 = v16;
    sub_24D2B8A34(v14, v15);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 24))(&v11, v3, v4);
    uint64_t v5 = v12;
    if (!v12 || (uint64_t v6 = v13, v7 = v11, swift_bridgeObjectRetain(), sub_24D2BBA3C(v7, v5), !v6))
    {
      sub_24D2B6E58((uint64_t)v14);
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    sub_24D2B6E58((uint64_t)v14);
    sub_24D2B6E58((uint64_t)v17);
    v2 += 40;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return type metadata accessor for FMFindingSymbolBasedPartPickerView();
    }
  }
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  sub_24D2BBFB4((uint64_t)v9, (uint64_t *)&unk_269861600);
LABEL_11:
  sub_24D2B6E58((uint64_t)v17);
  swift_bridgeObjectRelease();
  return type metadata accessor for FMFindingGenericPartPickerView();
}

uint64_t sub_24D2BBA3C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24D2BBA80()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_effectBackground;
  id v2 = objc_msgSend(self, sel_effectWithStyle_, 20);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v2);

  *(void *)&v0[v1] = v3;
  uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_titleLabel;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_containerStackView;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_iconView;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  uint64_t v7 = &v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style];
  id v8 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x263F83618], 0x10000);
  id v9 = self;
  id v10 = objc_msgSend(v9, sel_whiteColor);
  id v11 = objc_msgSend(v9, sel_whiteColor);
  id v12 = objc_msgSend(v11, sel_colorWithAlphaComponent_, 0.5);

  *(void *)uint64_t v7 = v8;
  *(_OWORD *)(v7 + 8) = xmmword_24D3A0200;
  *(_OWORD *)(v7 + 24) = xmmword_24D3A0200;
  *((void *)v7 + 5) = 0x4024000000000000;
  *((void *)v7 + 6) = v10;
  *((void *)v7 + 7) = v12;
  *((void *)v7 + 8) = 0x4028000000000000;
  uint64_t v13 = &v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_value];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;

  sub_24D39D2B0();
  __break(1u);
}

id sub_24D2BBC84()
{
  id v1 = objc_msgSend(self, sel_defaultStyle);
  objc_msgSend(v0, sel_frame);
  CGFloat v2 = CGRectGetMinY(v7) + *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI30FMFindingGenericPartPickerView_style + 64];
  objc_msgSend(v0, sel_frame);
  objc_msgSend(v1, sel_setPreferredEdgeInsets_, v2, CGRectGetMinX(v8), 0.0, 0.0);
  sub_24D2B7450((uint64_t *)&unk_269862770);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24D3A0050;
  id v4 = objc_msgSend(self, sel_effectWithStyle_, 18);
  *(void *)(v3 + 56) = sub_24D2BC100(0, &qword_269860AD0);
  *(void *)(v3 + 32) = v4;
  uint64_t v5 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setPreferredBackgroundEffects_, v5);

  return v1;
}

id sub_24D2BBDD8()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  CGFloat v2 = self;
  v7[4] = sub_24D2BBF28;
  v7[5] = v1;
  v7[0] = MEMORY[0x263EF8330];
  v7[1] = 1107296256;
  v7[2] = sub_24D2BB6F4;
  v7[3] = &unk_26FF85DC8;
  uint64_t v3 = _Block_copy(v7);
  id v4 = v0;
  swift_retain();
  swift_release();
  id v5 = objc_msgSend(v2, sel_configurationWithIdentifier_previewProvider_actionProvider_, 0, 0, v3);
  swift_release();
  _Block_release(v3);
  return v5;
}

uint64_t sub_24D2BBEF0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24D2BBF28(uint64_t a1)
{
  return sub_24D2BB1D0(a1, *(void **)(v1 + 16));
}

uint64_t sub_24D2BBF30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D2BBF40()
{
  return swift_release();
}

uint64_t sub_24D2BBF48(void *a1)
{
  return sub_24D2BA564(a1, *(char **)(v1 + 16));
}

uint64_t sub_24D2BBF50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_24D2B7450(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24D2BBFB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24D2B7450(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24D2BC010(uint64_t a1)
{
  return sub_24D2BA394(a1, *(void **)(v1 + 16));
}

uint64_t sub_24D2BC018()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D2BC028()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24D2BC050(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24D2BC098()
{
  unint64_t result = qword_269860AF8;
  if (!qword_269860AF8)
  {
    sub_24D2BC100(255, &qword_269860AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860AF8);
  }
  return result;
}

uint64_t sub_24D2BC100(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t VFXManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t VFXManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VFXManager()
{
  return self;
}

uint64_t method lookup function for VFXManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for VFXManager);
}

uint64_t type metadata accessor for FMFindingBearingCalculator()
{
  return self;
}

BOOL sub_24D2BC22C(void *a1, float a2, float a3, float a4, float a5, float a6, uint64_t a7, char a8, float *a9, unsigned char *a10, BOOL *a11, BOOL *a12, float *a13, _DWORD *a14, char a15)
{
  uint64_t v27 = calculateBearingAngleHorizontalDistanceAndVerticalDistance();
  if (*((float *)&v27 + 1) <= a2) {
    a2 = *((float *)&v27 + 1);
  }
  float v29 = *(float *)&v28;
  float v30 = *(float *)&v27;
  if ((v28 & 0x100000000) == 0) {
    float v30 = 0.0;
  }
  *a9 = v30;
  *a10 = (v28 & 0x100000000uLL) >> 32;
  *a13 = a2;
  id v31 = objc_msgSend(a1, sel_verticalState);
  *(float *)&double v32 = v29;
  if (v31 != (id)1)
  {
    if (objc_msgSend(a1, sel_verticalState, v32) == (id)2) {
      *(float *)&double v32 = v29;
    }
    else {
      *(float *)&double v32 = 0.0;
    }
  }
  *a14 = LODWORD(v32);
  if (objc_msgSend(a1, sel_verticalState)) {
    float v33 = v29;
  }
  else {
    float v33 = 0.0;
  }
  float v34 = fabsf(v33);
  BOOL v35 = v34 < a5;
  if (a15) {
    BOOL v35 = v34 < a6;
  }
  if (v35)
  {
    BOOL v36 = 0;
    *a11 = 0;
  }
  else if (objc_msgSend(a1, sel_verticalState) == (id)2)
  {
    *a11 = v29 >= 0.0;
    BOOL v36 = v29 < 0.0;
  }
  else
  {
    BOOL v36 = 1;
    *a11 = 1;
  }
  *a12 = v36;
  if (a8) {
    return a2 < a4;
  }
  else {
    return a2 < a3;
  }
}

id sub_24D2BC3BC(void *a1)
{
  return sub_24D2BC480(a1);
}

void sub_24D2BC3D8(void *a1)
{
}

id sub_24D2BC3F4(void *a1)
{
  return sub_24D2BC480(a1);
}

void sub_24D2BC414(void *a1)
{
}

id sub_24D2BC434(void *a1)
{
  return sub_24D2BC480(a1);
}

void sub_24D2BC44C(void *a1)
{
}

id sub_24D2BC464(void *a1)
{
  return sub_24D2BC480(a1);
}

id sub_24D2BC480(void *a1)
{
  uint64_t v2 = self;
  id v3 = a1;
  id v4 = objc_msgSend(v2, sel_sharedInstance);
  unsigned int v5 = objc_msgSend(v4, sel_isInternalBuild);

  if (v5)
  {
    uint64_t v6 = sub_24D39CAC0();
    id v7 = objc_msgSend(v3, sel_BOOLForKey_, v6);

    id v3 = (id)v6;
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_24D2BC544(void *a1)
{
}

void sub_24D2BC560(void *a1)
{
  uint64_t v2 = self;
  id v3 = a1;
  id v4 = objc_msgSend(v2, sel_sharedInstance);
  objc_msgSend(v4, sel_isInternalBuild);

  unsigned int v5 = (void *)sub_24D39CC70();
  id v6 = (id)sub_24D39CAC0();
  objc_msgSend(v3, sel_setValue_forKey_, v5, v6);
}

float sub_24D2BC63C()
{
  return 50.0;
}

float sub_24D2BC648()
{
  return 0.7;
}

float sub_24D2BC658()
{
  return 70.0;
}

float sub_24D2BC664()
{
  return 0.9;
}

float sub_24D2BC674()
{
  return 0.31;
}

float sub_24D2BC684()
{
  return 0.67;
}

float sub_24D2BC694()
{
  return 0.57;
}

uint64_t sub_24D2BC6A4(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_24D2BC6D8();

  return v2;
}

uint64_t sub_24D2BC6D8()
{
  id v1 = objc_msgSend(self, sel_sharedInstance);
  unsigned int v2 = objc_msgSend(v1, sel_isInternalBuild);

  if (!v2) {
    return 150;
  }
  id v3 = (void *)sub_24D39CAC0();
  id v4 = objc_msgSend(v0, sel_valueForKey_, v3);

  if (!v4)
  {
    memset(v8, 0, sizeof(v8));
    sub_24D2BC948((uint64_t)v8);
    return 150;
  }
  sub_24D39D0C0();
  swift_unknownObjectRelease();
  sub_24D2BC948((uint64_t)v8);
  unsigned int v5 = (void *)sub_24D39CAC0();
  id v6 = objc_msgSend(v0, sel_integerForKey_, v5);

  return (uint64_t)v6;
}

void sub_24D2BC80C(void *a1)
{
  unsigned int v2 = self;
  id v3 = a1;
  id v4 = objc_msgSend(v2, sel_sharedInstance);
  objc_msgSend(v4, sel_isInternalBuild);

  unsigned int v5 = (void *)sub_24D39CD60();
  id v6 = (id)sub_24D39CAC0();
  objc_msgSend(v3, sel_setValue_forKey_, v5, v6);
}

void sub_24D2BC8F8()
{
  uint64_t v0 = (void *)sub_24D39CAC0();
  char v1 = MGGetBoolAnswer();

  byte_269869F70 = v1;
}

uint64_t sub_24D2BC948(uint64_t a1)
{
  uint64_t v2 = sub_24D2B7450(&qword_269861850);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *initializeBufferWithCopyOfBuffer for FMFindingType(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Threshold()
{
  return &type metadata for Threshold;
}

ValueMetadata *type metadata accessor for FMFindingGuide()
{
  return &type metadata for FMFindingGuide;
}

void destroy for FMFindingDistance(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for FMFindingDistance(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v3 = *(void **)(a2 + 16);
  id v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  id v6 = v3;
  id v7 = v4;
  return a1;
}

uint64_t assignWithCopy for FMFindingDistance(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = *(void **)(a1 + 16);
  id v6 = (void *)a2[2];
  *(void *)(a1 + 16) = v6;
  id v7 = v6;

  CGRect v8 = *(void **)(a1 + 24);
  id v9 = (void *)a2[3];
  *(void *)(a1 + 24) = v9;
  id v10 = v9;

  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 48) = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(unsigned char *)(a1 + 57) = *((unsigned char *)a2 + 57);
  *(void *)(a1 + 64) = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(unsigned char *)(a1 + 73) = *((unsigned char *)a2 + 73);
  *(unsigned char *)(a1 + 74) = *((unsigned char *)a2 + 74);
  *(void *)(a1 + 80) = a2[10];
  uint64_t v11 = a2[11];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(void *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 97) = *((unsigned char *)a2 + 97);
  return a1;
}

__n128 initializeWithTake for FMFindingDistance(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FMFindingDistance(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);

  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingDistance(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 98)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingDistance(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 98) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 98) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingDistance()
{
  return &type metadata for FMFindingDistance;
}

uint64_t sub_24D2BCF54(int a1)
{
  if (a1 > 127)
  {
    if (a1 > 1023)
    {
      switch(a1)
      {
        case 1024:
          return 1918985582;
        case 2048:
          return 0x65736F6C63;
        case 4096:
          return 0x79627261656ELL;
      }
    }
    else
    {
      switch(a1)
      {
        case 128:
          return 0x65766F6261;
        case 256:
          return 0x776F6C6562;
        case 512:
          return 7496038;
      }
    }
    return 0x6E776F6E6B6E75;
  }
  int v1 = a1 - 1;
  uint64_t result = 0x746E6F7266;
  switch(v1)
  {
    case 1:
      return result;
    case 3:
      uint64_t result = 0x6461656861;
      break;
    case 7:
      uint64_t result = 1952867692;
      break;
    case 15:
      uint64_t result = 0x7468676972;
      break;
    case 31:
      uint64_t result = 0x646E69686562;
      break;
    case 63:
      uint64_t result = 0x42724F65766F6261;
      break;
    default:
      return 0x6E776F6E6B6E75;
  }
  return result;
}

_DWORD *sub_24D2BD1BC@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24D2BD1C8()
{
  return sub_24D2BCF54(*v0);
}

void sub_24D2BD1D0(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_24D2BD1D8@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_24D2BD1EC@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_24D2BD200@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_24D2BD214(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_24D2BD244@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_24D2BD270@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_24D2BD294(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_24D2BD2A8(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

_DWORD *sub_24D2BD2BC(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_24D2BD2D0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_24D2BD2E4(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_24D2BD2F8(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_24D2BD30C(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_24D2BD320()
{
  return *v0 == 0;
}

uint64_t sub_24D2BD330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

_DWORD *sub_24D2BD348(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

_DWORD *sub_24D2BD35C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_24D2BD36C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_24D2BD378(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24D2BD38C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3 = sub_24D2BF064(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

BOOL sub_24D2BD3CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_24D2BD3E8()
{
  return sub_24D39D5A0();
}

uint64_t sub_24D2BD418()
{
  if (*v0) {
    return 0x656C706F6570;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_24D2BD450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D2BF09C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D2BD478()
{
  return 0;
}

uint64_t sub_24D2BD484(uint64_t a1)
{
  unint64_t v2 = sub_24D2C0008();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D2BD4C0(uint64_t a1)
{
  unint64_t v2 = sub_24D2C0008();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D2BD4FC(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = sub_24D2B7450(&qword_269860C58);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  MEMORY[0x270FA5388](v3);
  int v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24D2B7450(&qword_269860C60);
  uint64_t v6 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  CGRect v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24D2B7450(&qword_269860C68);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D2C0008();
  sub_24D39D5F0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_24D2C005C();
    sub_24D39D3E0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_24D2C00B0();
    sub_24D39D3E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

unint64_t sub_24D2BD7AC(char a1)
{
  unint64_t result = 0x736944746E616C73;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676E6972616562;
      break;
    case 2:
      unint64_t result = 0x4264696C61567369;
      break;
    case 3:
      unint64_t result = 0x616542564F466E69;
      break;
    case 4:
      unint64_t result = 0x564F466E497369;
      break;
    case 5:
      unint64_t result = 0x636165526E497369;
      break;
    case 6:
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x65766F62417369;
      break;
    case 8:
      unint64_t result = 0x776F6C65427369;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
      unint64_t result = 0x6C6F687365726874;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24D2BD94C(char a1)
{
  unint64_t result = 0x736944746E616C73;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676E6972616562;
      break;
    case 2:
      unint64_t result = 0x4264696C61567369;
      break;
    case 3:
      unint64_t result = 0x616542564F466E69;
      break;
    case 4:
      unint64_t result = 0x564F466E497369;
      break;
    case 5:
      unint64_t result = 0x636165526E497369;
      break;
    case 6:
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x65766F62417369;
      break;
    case 8:
      unint64_t result = 0x776F6C65427369;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
      unint64_t result = 0x6C6F687365726874;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D2BDAEC()
{
  return 0;
}

void sub_24D2BDAF8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24D2BDB04(uint64_t a1)
{
  unint64_t v2 = sub_24D2C00B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D2BDB40(uint64_t a1)
{
  unint64_t v2 = sub_24D2C00B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D2BDB7C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24D2BDBAC(uint64_t a1)
{
  unint64_t v2 = sub_24D2C005C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D2BDBE8(uint64_t a1)
{
  unint64_t v2 = sub_24D2C005C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t _s11FMFindingUI0A4TypeO9hashValueSivg_0()
{
  return sub_24D39D5D0();
}

uint64_t sub_24D2BDC6C()
{
  return sub_24D39D5D0();
}

uint64_t sub_24D2BDCB0(void *a1)
{
  return sub_24D2BD4FC(a1, *v1);
}

uint64_t sub_24D2BDCCC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24D2BF188(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_24D2BDCFC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_24D2BD7AC(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_24D2BD7AC(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24D39D4B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24D2BDD88()
{
  char v1 = *v0;
  sub_24D39D590();
  sub_24D2BD7AC(v1);
  sub_24D39CB40();
  swift_bridgeObjectRelease();
  return sub_24D39D5D0();
}

uint64_t sub_24D2BDDEC()
{
  sub_24D2BD7AC(*v0);
  sub_24D39CB40();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D2BDE40()
{
  char v1 = *v0;
  sub_24D39D590();
  sub_24D2BD7AC(v1);
  sub_24D39CB40();
  swift_bridgeObjectRelease();
  return sub_24D39D5D0();
}

uint64_t sub_24D2BDEA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D2BF5D8();
  *a1 = result;
  return result;
}

unint64_t sub_24D2BDED0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24D2BD7AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_24D2BDEFC()
{
  return sub_24D2BD94C(*v0);
}

uint64_t sub_24D2BDF04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D2BF5D8();
  *a1 = result;
  return result;
}

void sub_24D2BDF2C(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_24D2BDF38(uint64_t a1)
{
  unint64_t v2 = sub_24D2C0504();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D2BDF74(uint64_t a1)
{
  unint64_t v2 = sub_24D2C0504();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D2BDFB0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_24D2B7450(&qword_269860CC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D2C0504();
  sub_24D39D5F0();
  sub_24D2C05AC(v3, (uint64_t)v13, &qword_269860CD0);
  sub_24D2C05AC((uint64_t)v13, (uint64_t)v12, &qword_269860CD0);
  char v11 = 0;
  sub_24D2B7450(&qword_269860CD0);
  sub_24D2C0610();
  sub_24D39D450();
  if (!v2)
  {
    v12[0] = 1;
    sub_24D39D420();
    v12[0] = 2;
    sub_24D39D410();
    v12[0] = 3;
    sub_24D39D420();
    v12[0] = 4;
    sub_24D39D410();
    v12[0] = 5;
    sub_24D39D410();
    v12[0] = 6;
    sub_24D39D420();
    v12[0] = 7;
    sub_24D39D410();
    v12[0] = 8;
    sub_24D39D410();
    v12[0] = 9;
    sub_24D39D410();
    v12[0] = 10;
    sub_24D39D420();
    v12[0] = *(unsigned char *)(v3 + 97);
    char v11 = 11;
    sub_24D2C06C4();
    sub_24D39D450();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24D2BE2F8()
{
  sub_24D2B7450((uint64_t *)&unk_269861860);
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = (void *)v1;
  *(_OWORD *)(v1 + 16) = xmmword_24D3A0350;
  double v3 = *(double *)v0;
  int v4 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v5 = MEMORY[0x263F8D5B8];
  *(void *)(v1 + 56) = MEMORY[0x263F8D538];
  *(void *)(v1 + 64) = v5;
  if (v4) {
    double v3 = -1.0;
  }
  *(double *)(v1 + 32) = v3;
  if (*(unsigned char *)(v0 + 40))
  {
    uint64_t v6 = *(void *)(v0 + 32);
    uint64_t v7 = MEMORY[0x263F8D5B8];
    uint64_t v8 = MEMORY[0x263F8D538];
  }
  else
  {
    uint64_t v6 = -1;
    uint64_t v7 = MEMORY[0x263F8D750];
    uint64_t v8 = MEMORY[0x263F8D6C8];
  }
  *(void *)(v1 + 96) = v8;
  *(void *)(v1 + 104) = v7;
  *(void *)(v1 + 72) = v6;
  char v9 = *(unsigned char *)(v0 + 56);
  unint64_t v10 = sub_24D2B7494();
  uint64_t v11 = 1702195828;
  if (v9) {
    uint64_t v12 = 1702195828;
  }
  else {
    uint64_t v12 = 0x65736C6166;
  }
  if (v9) {
    unint64_t v13 = 0xE400000000000000;
  }
  else {
    unint64_t v13 = 0xE500000000000000;
  }
  uint64_t v14 = MEMORY[0x263F8D310];
  v2[17] = MEMORY[0x263F8D310];
  v2[18] = v10;
  v2[14] = v12;
  v2[15] = v13;
  if (*(unsigned char *)(v0 + 57))
  {
    unint64_t v15 = 0xE400000000000000;
  }
  else
  {
    uint64_t v11 = 0x65736C6166;
    unint64_t v15 = 0xE500000000000000;
  }
  v2[22] = v14;
  v2[23] = v10;
  v2[19] = v11;
  v2[20] = v15;
  return sub_24D39CB00();
}

uint64_t sub_24D2BE430()
{
  sub_24D2C05AC(v0, (uint64_t)v5, &qword_269860CD0);
  sub_24D2C05AC((uint64_t)v5, (uint64_t)&v6, &qword_269860CD0);
  if (v7) {
    return 0;
  }
  double v2 = v6;
  if (*(unsigned char *)(v0 + 97))
  {
    if (v6 < 0.0)
    {
      double v2 = 0.0;
      if ((*(unsigned char *)(v0 + 56) & 1) == 0 && (*(unsigned char *)(v0 + 57) & 1) == 0)
      {
        double v3 = *(double *)(v0 + 32);
        double v4 = *(double *)(v0 + 48);
        if (v3 < -v4 && v4 + -180.0 >= v3 && v4 < v3)
        {
          if (v3 >= 180.0 - v4) {
            double v2 = 0.0;
          }
          else {
            double v2 = 0.0;
          }
        }
      }
    }
  }
  else if (v6 < 0.0)
  {
    double v2 = 0.0;
  }
  return *(void *)&v2;
}

uint64_t sub_24D2BE678()
{
  sub_24D2C05AC(v0, (uint64_t)v9, &qword_269860CD0);
  sub_24D2C05AC((uint64_t)v9, (uint64_t)&v10, &qword_269860CD0);
  if (v11) {
    return 0;
  }
  double v2 = v10;
  if (*(unsigned char *)(v0 + 97))
  {
    double v3 = 3.45599309;
  }
  else
  {
    if (qword_269860360 != -1) {
      swift_once();
    }
    double v4 = *(double *)&qword_26986A490;
    if (qword_269860380 != -1)
    {
      uint64_t v8 = qword_26986A490;
      swift_once();
      double v4 = *(double *)&v8;
    }
    double v3 = v4 * *(double *)&qword_26986A4B0;
  }
  double v5 = (v2 - v3) / vabdd_f64(1.2192, v3);
  double v6 = 1.0 - v5;
  if (v5 >= 1.0) {
    double v6 = 0.0;
  }
  if (v5 < 0.0) {
    double v7 = 1.0;
  }
  else {
    double v7 = v6;
  }
  return *(void *)&v7;
}

uint64_t sub_24D2BE7A8(char a1)
{
  sub_24D2C05AC(v1, (uint64_t)v11, &qword_269860CD0);
  sub_24D2C05AC((uint64_t)v11, (uint64_t)&v12, &qword_269860CD0);
  if (v13) {
    return 2;
  }
  double v4 = v12;
  if (*(unsigned char *)(v1 + 97) == 1)
  {
    BOOL v5 = v12 >= 2.3622;
    if (a1) {
      double v6 = 2.267712;
    }
    else {
      double v6 = 3.45599309;
    }
  }
  else
  {
    if (qword_269860360 != -1) {
      swift_once();
    }
    double v7 = *(double *)&qword_26986A490;
    double v8 = *(double *)&qword_26986A490;
    if (qword_269860380 != -1)
    {
      uint64_t v10 = qword_26986A490;
      swift_once();
      double v7 = *(double *)&v10;
      double v8 = *(double *)&qword_26986A490;
    }
    BOOL v5 = v8 * 1.25 <= v4;
    if (a1) {
      double v6 = v8 * 1.2;
    }
    else {
      double v6 = v7 * *(double *)&qword_26986A4B0;
    }
  }
  if (v5) {
    int v9 = 256;
  }
  else {
    int v9 = 0;
  }
  return v9 | (v4 < v6);
}

uint64_t sub_24D2BE918()
{
  uint64_t v1 = v0;
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_24D39D5B0();
    double v2 = *(void **)(v0 + 16);
    if (v2) {
      goto LABEL_3;
    }
LABEL_6:
    sub_24D39D5B0();
    double v4 = *(void **)(v0 + 24);
    if (v4) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_24D39D5B0();
  sub_24D39D5C0();
  double v2 = *(void **)(v0 + 16);
  if (!v2) {
    goto LABEL_6;
  }
LABEL_3:
  sub_24D39D5B0();
  id v3 = v2;
  sub_24D39CFF0();

  double v4 = *(void **)(v1 + 24);
  if (v4)
  {
LABEL_4:
    sub_24D39D5B0();
    id v5 = v4;
    sub_24D39CFF0();

    goto LABEL_8;
  }
LABEL_7:
  sub_24D39D5B0();
LABEL_8:
  sub_24D39D5C0();
  sub_24D39D5B0();
  sub_24D39D5C0();
  sub_24D39D5B0();
  sub_24D39D5B0();
  sub_24D39D5C0();
  sub_24D39D5B0();
  sub_24D39D5B0();
  sub_24D39D5B0();
  sub_24D39D5C0();
  if (*(unsigned char *)(v1 + 96) == 1)
  {
    sub_24D39D5B0();
  }
  else
  {
    sub_24D39D5B0();
    sub_24D39D5A0();
  }
  return sub_24D39D5A0();
}

uint64_t sub_24D2BEAC0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  __int16 v12 = *(_WORD *)(a1 + 96);
  long long v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  __int16 v14 = *(_WORD *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return sub_24D2BEE6C((uint64_t)v11, (uint64_t)v13) & 1;
}

uint64_t sub_24D2BEB2C()
{
  return sub_24D39D5D0();
}

uint64_t sub_24D2BEB70()
{
  return sub_24D39D5D0();
}

__n128 sub_24D2BEBAC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24D2C0104(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_WORD *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_24D2BEC0C(void *a1)
{
  return sub_24D2BDFB0(a1);
}

unint64_t sub_24D2BEC60()
{
  unint64_t result = qword_269860C20;
  if (!qword_269860C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860C20);
  }
  return result;
}

unint64_t sub_24D2BECB8()
{
  unint64_t result = qword_269860C28;
  if (!qword_269860C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860C28);
  }
  return result;
}

unint64_t sub_24D2BED10()
{
  unint64_t result = qword_269860C30;
  if (!qword_269860C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860C30);
  }
  return result;
}

unint64_t sub_24D2BED68()
{
  unint64_t result = qword_269860C38;
  if (!qword_269860C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860C38);
  }
  return result;
}

unint64_t sub_24D2BEDC0()
{
  unint64_t result = qword_269860C40;
  if (!qword_269860C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860C40);
  }
  return result;
}

unint64_t sub_24D2BEE18()
{
  unint64_t result = qword_269860C48;
  if (!qword_269860C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860C48);
  }
  return result;
}

uint64_t sub_24D2BEE6C(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  if ((*(unsigned char *)(a1 + 8) & 1) == 0)
  {
    if (*(double *)a1 != *(double *)a2) {
      char v4 = 1;
    }
    if (v4) {
      goto LABEL_33;
    }
LABEL_7:
    long long v5 = *(void **)(a1 + 16);
    long long v6 = *(void **)(a2 + 16);
    if (v5)
    {
      if (!v6) {
        goto LABEL_33;
      }
      sub_24D2BC100(0, (unint64_t *)&unk_269862EC0);
      id v7 = v6;
      id v8 = v5;
      char v9 = sub_24D39CFE0();

      if ((v9 & 1) == 0) {
        goto LABEL_33;
      }
    }
    else if (v6)
    {
      goto LABEL_33;
    }
    uint64_t v10 = *(void **)(a1 + 24);
    char v11 = *(void **)(a2 + 24);
    if (v10)
    {
      if (v11)
      {
        sub_24D2BC100(0, &qword_269860CA8);
        id v12 = v11;
        id v13 = v10;
        char v14 = sub_24D39CFE0();

        if (v14)
        {
LABEL_17:
          if (*(double *)(a1 + 32) == *(double *)(a2 + 32)
            && ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) == 0
            && *(double *)(a1 + 48) == *(double *)(a2 + 48)
            && ((*(unsigned __int8 *)(a1 + 56) ^ *(unsigned __int8 *)(a2 + 56)) & 1) == 0
            && ((*(unsigned __int8 *)(a1 + 57) ^ *(unsigned __int8 *)(a2 + 57)) & 1) == 0
            && *(double *)(a1 + 64) == *(double *)(a2 + 64)
            && ((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72)) & 1) == 0
            && ((*(unsigned __int8 *)(a1 + 73) ^ *(unsigned __int8 *)(a2 + 73)) & 1) == 0
            && ((*(unsigned __int8 *)(a1 + 74) ^ *(unsigned __int8 *)(a2 + 74)) & 1) == 0
            && *(double *)(a1 + 80) == *(double *)(a2 + 80))
          {
            char v4 = *(unsigned char *)(a2 + 96);
            if (*(unsigned char *)(a1 + 96))
            {
              if (!*(unsigned char *)(a2 + 96)) {
                return v4 & 1;
              }
              goto LABEL_35;
            }
            if (*(void *)(a1 + 88) != *(void *)(a2 + 88)) {
              char v4 = 1;
            }
            if ((v4 & 1) == 0)
            {
LABEL_35:
              char v4 = *(unsigned char *)(a1 + 97) ^ *(unsigned char *)(a2 + 97) ^ 1;
              return v4 & 1;
            }
          }
        }
      }
    }
    else if (!v11)
    {
      goto LABEL_17;
    }
LABEL_33:
    char v4 = 0;
    return v4 & 1;
  }
  if (*(unsigned char *)(a2 + 8)) {
    goto LABEL_7;
  }
  return v4 & 1;
}

uint64_t sub_24D2BF064(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  long long v3 = (int *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    unint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_24D2BF09C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746C7561666564 && a2 == 0xE700000000000000;
  if (v2 || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C706F6570 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24D39D4B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D2BF188(uint64_t a1)
{
  uint64_t v2 = sub_24D2B7450(&qword_269860C88);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v2);
  int v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24D2B7450(&qword_269860C90);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24D2B7450(&qword_269860C98);
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34((void *)a1, *(void *)(a1 + 24));
  sub_24D2C0008();
  uint64_t v12 = v26;
  sub_24D39D5E0();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = sub_24D39D3D0();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_24D39D220();
    swift_allocError();
    int v18 = v17;
    sub_24D2B7450(&qword_269860CA0);
    *int v18 = &type metadata for Threshold;
    sub_24D39D350();
    sub_24D39D210();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    sub_24D2B6E58(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_24D2C005C();
    sub_24D39D340();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_24D2C00B0();
    sub_24D39D340();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  sub_24D2B6E58(v26);
  return a1;
}

uint64_t sub_24D2BF5D8()
{
  unint64_t v0 = sub_24D39D330();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

uint64_t sub_24D2BF624@<X0>(double a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  sub_24D2C05AC(a5, (uint64_t)v38, &qword_269860C50);
  unint64_t v14 = v39;
  unint64_t v37 = v40;
  if ((a2 & 1) == 0)
  {
    sub_24D2C05AC(a5, (uint64_t)&v44, &qword_269860C50);
    LODWORD(v15) = v46;
    if (v46 == 1)
    {
      int v16 = 1;
    }
    else
    {
      int v16 = v47 & 1;
      uint64_t v15 = (v14 >> 8) & 1;
    }
LABEL_8:
    char v18 = 0;
    double v17 = a1;
    int v19 = a6 & 1;
    if ((a3 & 0x100000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
  sub_24D2C05AC(a5, (uint64_t)&v44, &qword_269860C50);
  LODWORD(v15) = v46;
  double v17 = 0.0;
  if (v46 == 1)
  {
    a1 = 0.0;
    int v16 = 1;
  }
  else
  {
    a1 = v44;
    int v16 = v14 & 1;
    uint64_t v15 = (v14 >> 8) & 1;
    if ((v45 & 1) == 0) {
      goto LABEL_8;
    }
  }
  char v18 = 1;
  int v19 = a6 & 1;
  if ((a3 & 0x100000000) == 0)
  {
LABEL_9:
    double v20 = *(float *)&a3 / 3.14159265 * -180.0;
    if ((v18 & 1) == 0) {
      goto LABEL_10;
    }
LABEL_17:
    BOOL v23 = 0;
    goto LABEL_27;
  }
LABEL_16:
  double v20 = 1.79769313e308;
  if (v18) {
    goto LABEL_17;
  }
LABEL_10:
  double v21 = a1;
  if (!v15)
  {
    if (!v19)
    {
      if (qword_269860360 != -1)
      {
        swift_once();
        double v21 = a1;
      }
      uint64_t v22 = &qword_26986A490;
      goto LABEL_22;
    }
    *(float *)&int v25 = 1.8898;
LABEL_25:
    float v24 = *(float *)&v25;
    goto LABEL_26;
  }
  if (v19)
  {
    *(float *)&int v25 = 1.9842;
    goto LABEL_25;
  }
  if (qword_269860368 != -1)
  {
    swift_once();
    double v21 = a1;
  }
  uint64_t v22 = &qword_26986A498;
LABEL_22:
  float v24 = *(double *)v22;
LABEL_26:
  float v26 = v21;
  BOOL v23 = v24 > v26;
LABEL_27:
  if (a4 != 5)
  {
    uint64_t result = sub_24D2BFFAC(a5);
    if (a4 == 2)
    {
      LOBYTE(v30) = 0;
      LOBYTE(v28) = 1;
    }
    else
    {
      LOBYTE(v28) = a4 == 4;
      LOBYTE(v30) = 1;
      if (a4 == 1)
      {
        char v29 = 0;
        goto LABEL_37;
      }
      if (a4 != 3) {
        LOBYTE(v30) = a4 == 4;
      }
    }
    char v29 = v28;
    LOBYTE(v28) = v30;
    LOBYTE(v30) = a4 == 0;
    goto LABEL_37;
  }
  uint64_t result = sub_24D2C05AC(a5, (uint64_t)v41, &qword_269860C50);
  if (v42 == 1)
  {
    LOBYTE(v28) = 0;
    char v29 = 0;
    LOBYTE(v30) = 1;
  }
  else
  {
    char v31 = v43;
    uint64_t result = sub_24D2BFFAC(a5);
    char v29 = v31 & 1;
    uint64_t v28 = (v37 >> 8) & 1;
    uint64_t v30 = (v37 >> 16) & 1;
  }
LABEL_37:
  double v32 = (v17 + -1.0) / 9.0;
  double v33 = fmin(v32, 1.0);
  BOOL v34 = v32 < 0.0;
  double v35 = 0.0;
  if (!v34) {
    double v35 = v33;
  }
  double v36 = v35 * 45.0 + (1.0 - v35) * 20.0;
  *(double *)a7 = a1;
  if (v16) {
    double v36 = v36 * 1.1;
  }
  *(unsigned char *)(a7 + 8) = v18;
  *(void *)(a7 + 16) = 0;
  *(void *)(a7 + 24) = 0;
  *(double *)(a7 + 32) = v20;
  *(unsigned char *)(a7 + 40) = (a3 & 0x100000000) == 0;
  *(double *)(a7 + 48) = v36;
  *(unsigned char *)(a7 + 56) = fabs(v20) <= v36;
  *(unsigned char *)(a7 + 57) = v23;
  *(double *)(a7 + 64) = v17;
  *(unsigned char *)(a7 + 72) = v29;
  *(unsigned char *)(a7 + 73) = v28;
  *(unsigned char *)(a7 + 74) = v30;
  *(void *)(a7 + 80) = 0;
  *(void *)(a7 + 88) = 0;
  *(unsigned char *)(a7 + 96) = 1;
  *(unsigned char *)(a7 + 97) = v19;
  return result;
}

double sub_24D2BF998@<D0>(double a1@<X0>, char a2@<W1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  sub_24D2C05AC(a5, (uint64_t)v89, &qword_269860C50);
  unint64_t v14 = v90;
  if (a2)
  {
    sub_24D2C05AC(a5, (uint64_t)&v102, &qword_269860C50);
    if (v104 == 1)
    {
      a1 = 0.0;
      char v15 = 1;
      id v16 = a3;
      if (a3) {
        goto LABEL_11;
      }
    }
    else
    {
      a1 = v102;
      char v15 = v103 & 1;
      id v16 = a3;
      if (a3) {
        goto LABEL_11;
      }
    }
  }
  else
  {
    char v15 = 0;
    id v16 = a3;
    if (a3) {
      goto LABEL_11;
    }
  }
  sub_24D2C05AC(a5, (uint64_t)v100, &qword_269860C50);
  id v16 = v101;
  if (v101 == (id)1) {
    id v16 = 0;
  }
  else {
    id v17 = v101;
  }
LABEL_11:
  long long v83 = v16;
  char v18 = a3;
  id v19 = a4;
  if (!a4)
  {
    sub_24D2C05AC(a5, (uint64_t)v97, &qword_269860C50);
    if (v98 == 1)
    {
      id v19 = 0;
    }
    else
    {
      id v19 = v99;
      id v20 = v99;
    }
  }
  int v82 = a6 & 1;
  float v88 = 0.0;
  char v87 = 0;
  sub_24D2C05AC(a5, (uint64_t)v94, &qword_269860C50);
  if (v95 == 1)
  {
    LOBYTE(v21) = 1;
    int v80 = 1;
  }
  else
  {
    int v80 = v96 & 1;
    uint64_t v21 = (v14 >> 8) & 1;
  }
  uint64_t v22 = v19;
  float v86 = 0.0;
  __int16 v85 = 0;
  sub_24D2C05AC(a5, (uint64_t)v91, &qword_269860C50);
  float v84 = 0.0;
  BOOL v23 = v18;
  double v81 = a1;
  if (!v83 || !v22)
  {
    if ((v15 & 1) == 0)
    {
      double v40 = a1;
      if (v21)
      {
        if (v82)
        {
          id v56 = a4;
          id v57 = v18;
          double v44 = 1.984248;
        }
        else
        {
          uint64_t v41 = qword_269860368;
          id v42 = v18;
          id v43 = a4;
          if (v41 != -1) {
            swift_once();
          }
          double v44 = *(double *)&qword_26986A498;
        }
      }
      else if (v82)
      {
        id v58 = a4;
        id v59 = v18;
        double v44 = 1.88976;
      }
      else
      {
        uint64_t v45 = qword_269860360;
        id v46 = v18;
        id v47 = a4;
        if (v45 != -1) {
          swift_once();
        }
        double v44 = *(double *)&qword_26986A490;
      }
      char v77 = 0;
      BOOL v39 = v44 >= v40;
      goto LABEL_51;
    }
    goto LABEL_32;
  }
  if (v15)
  {
LABEL_32:
    id v37 = a4;
    id v38 = v18;
    BOOL v39 = 0;
    char v77 = 0;
    goto LABEL_51;
  }
  char v24 = (v92 == 1) | v93;
  double v25 = a1;
  if (v82)
  {
    uint64_t v48 = qword_269860388;
    id v49 = v18;
    id v50 = a4;
    id v51 = v83;
    id v52 = v22;
    float v35 = 2.5;
    if (v48 != -1)
    {
      swift_once();
      float v35 = 2.5;
    }
    double v36 = &qword_26986A4B8;
    float v34 = 1.9842;
    float v33 = 1.8898;
  }
  else
  {
    uint64_t v26 = qword_269860360;
    id v27 = v18;
    id v28 = a4;
    id v29 = v83;
    id v30 = v22;
    if (v26 != -1) {
      swift_once();
    }
    double v31 = *(double *)&qword_26986A490;
    if (qword_269860368 != -1) {
      swift_once();
    }
    double v32 = *(double *)&qword_26986A498;
    if (qword_269860370 != -1)
    {
      uint64_t v78 = qword_26986A498;
      swift_once();
      double v32 = *(double *)&v78;
    }
    float v33 = v31;
    float v34 = v32;
    float v35 = *(double *)&qword_26986A4A0;
    if (qword_269860378 != -1)
    {
      float v76 = *(double *)&qword_26986A4A0;
      float v79 = v31;
      float v75 = v32;
      swift_once();
      float v35 = v76;
      float v33 = v79;
      float v34 = v75;
    }
    double v36 = &qword_26986A4A8;
  }
  float v53 = v25;
  float v54 = *(double *)v36;
  BOOL v39 = sub_24D2BC22C(v83, v53, v33, v34, v35, v54, (uint64_t)v22, v21, &v88, &v87, (BOOL *)&v85 + 1, (BOOL *)&v85, &v86, &v84, v24 & 1);

  if (v87 == 1)
  {
    double v55 = v88 / 3.14159265 * -180.0;
    char v77 = 1;
    goto LABEL_52;
  }
  char v77 = 0;
LABEL_51:
  double v55 = 1.79769313e308;
LABEL_52:
  double v60 = v86;
  double v61 = (v86 + -1.0) / 9.0;
  double v62 = fmin(v61, 1.0);
  BOOL v63 = v61 < 0.0;
  double v64 = 0.0;
  if (!v63) {
    double v64 = v62;
  }
  double v65 = v64 * 45.0 + (1.0 - v64) * 20.0;
  if (v80) {
    double v66 = v65 * 1.1;
  }
  else {
    double v66 = v65;
  }
  id v67 = v22;
  id v68 = v22;
  id v69 = v83;
  sub_24D2BFFAC(a5);

  char v70 = HIBYTE(v85);
  char v71 = v85;
  char v72 = (HIBYTE(v85) | v85) ^ 1;
  float v73 = v84;

  double result = v73;
  *(double *)a7 = v81;
  *(unsigned char *)(a7 + 8) = v15;
  *(void *)(a7 + 16) = v83;
  *(void *)(a7 + 24) = v67;
  *(double *)(a7 + 32) = v55;
  *(unsigned char *)(a7 + 40) = v77;
  *(double *)(a7 + 48) = v66;
  *(unsigned char *)(a7 + 56) = fabs(v55) <= v66;
  *(unsigned char *)(a7 + 57) = v39;
  *(double *)(a7 + 64) = v60;
  *(unsigned char *)(a7 + 72) = v70;
  *(unsigned char *)(a7 + 73) = v71;
  *(unsigned char *)(a7 + 74) = v72;
  *(double *)(a7 + 80) = v73;
  *(void *)(a7 + 88) = 0;
  *(unsigned char *)(a7 + 96) = 1;
  *(unsigned char *)(a7 + 97) = v82;
  return result;
}

uint64_t sub_24D2BFFAC(uint64_t a1)
{
  return a1;
}

unint64_t sub_24D2C0008()
{
  unint64_t result = qword_269860C70;
  if (!qword_269860C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860C70);
  }
  return result;
}

unint64_t sub_24D2C005C()
{
  unint64_t result = qword_269860C78;
  if (!qword_269860C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860C78);
  }
  return result;
}

unint64_t sub_24D2C00B0()
{
  unint64_t result = qword_269860C80;
  if (!qword_269860C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860C80);
  }
  return result;
}

uint64_t sub_24D2C0104@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24D2B7450(&qword_269860CB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D2C0504();
  sub_24D39D5E0();
  if (v2) {
    return sub_24D2B6E58((uint64_t)a1);
  }
  char v45 = 0;
  sub_24D39D390();
  uint64_t v10 = v9;
  char v44 = 1;
  sub_24D39D390();
  uint64_t v12 = v11;
  char v43 = 2;
  char v13 = sub_24D39D380();
  char v42 = 3;
  sub_24D39D390();
  uint64_t v15 = v14;
  char v41 = 4;
  int v32 = sub_24D39D380();
  char v40 = 5;
  int v31 = sub_24D39D380();
  char v39 = 6;
  sub_24D39D390();
  uint64_t v17 = v16;
  char v38 = 7;
  int v30 = sub_24D39D380();
  char v37 = 8;
  int v29 = sub_24D39D380();
  char v36 = 9;
  int v28 = sub_24D39D380();
  char v35 = 10;
  sub_24D39D390();
  uint64_t v19 = v18;
  char v33 = 11;
  sub_24D2C0558();
  sub_24D39D3C0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  int v27 = v13 & 1;
  v32 &= 1u;
  char v20 = v31 & 1;
  char v21 = v30 & 1;
  char v22 = v29 & 1;
  char v23 = v28 & 1;
  char v24 = v34;
  uint64_t result = sub_24D2B6E58((uint64_t)a1);
  *(void *)a2 = v10;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v12;
  *(unsigned char *)(a2 + 40) = v27;
  *(void *)(a2 + 48) = v15;
  *(unsigned char *)(a2 + 56) = v32;
  *(unsigned char *)(a2 + 57) = v20;
  *(void *)(a2 + 64) = v17;
  *(unsigned char *)(a2 + 72) = v21;
  *(unsigned char *)(a2 + 73) = v22;
  *(unsigned char *)(a2 + 74) = v23;
  *(void *)(a2 + 80) = v19;
  *(void *)(a2 + 88) = 0;
  *(unsigned char *)(a2 + 96) = 1;
  *(unsigned char *)(a2 + 97) = v24;
  return result;
}

unint64_t sub_24D2C0504()
{
  unint64_t result = qword_269860CB8;
  if (!qword_269860CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860CB8);
  }
  return result;
}

unint64_t sub_24D2C0558()
{
  unint64_t result = qword_269860CC0;
  if (!qword_269860CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860CC0);
  }
  return result;
}

uint64_t sub_24D2C05AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_24D2B7450(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24D2C0610()
{
  unint64_t result = qword_269860CD8;
  if (!qword_269860CD8)
  {
    sub_24D2C067C(&qword_269860CD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860CD8);
  }
  return result;
}

uint64_t sub_24D2C067C(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_24D2C06C4()
{
  unint64_t result = qword_269860CE0;
  if (!qword_269860CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860CE0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFindingDistance.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMFindingDistance.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D2C0874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

uint64_t sub_24D2C089C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24D2C08A4(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingDistance.CodingKeys()
{
  return &type metadata for FMFindingDistance.CodingKeys;
}

uint64_t getEnumTagSinglePayload for FMFindingConvergenceHint.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11FMFindingUI9ThresholdOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D2C0A18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24D2C0A40(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Threshold.CodingKeys()
{
  return &type metadata for Threshold.CodingKeys;
}

ValueMetadata *type metadata accessor for Threshold.DefaultCodingKeys()
{
  return &type metadata for Threshold.DefaultCodingKeys;
}

ValueMetadata *type metadata accessor for Threshold.PeopleCodingKeys()
{
  return &type metadata for Threshold.PeopleCodingKeys;
}

unint64_t sub_24D2C0A80()
{
  unint64_t result = qword_269860CE8;
  if (!qword_269860CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860CE8);
  }
  return result;
}

unint64_t sub_24D2C0AD8()
{
  unint64_t result = qword_269860CF0;
  if (!qword_269860CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860CF0);
  }
  return result;
}

unint64_t sub_24D2C0B30()
{
  unint64_t result = qword_269860CF8;
  if (!qword_269860CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860CF8);
  }
  return result;
}

unint64_t sub_24D2C0B88()
{
  unint64_t result = qword_269860D00;
  if (!qword_269860D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860D00);
  }
  return result;
}

unint64_t sub_24D2C0BE0()
{
  unint64_t result = qword_269860D08;
  if (!qword_269860D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860D08);
  }
  return result;
}

unint64_t sub_24D2C0C38()
{
  unint64_t result = qword_269860D10;
  if (!qword_269860D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860D10);
  }
  return result;
}

unint64_t sub_24D2C0C90()
{
  unint64_t result = qword_269860D18;
  if (!qword_269860D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860D18);
  }
  return result;
}

unint64_t sub_24D2C0CE8()
{
  unint64_t result = qword_269860D20;
  if (!qword_269860D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860D20);
  }
  return result;
}

unint64_t sub_24D2C0D40()
{
  unint64_t result = qword_269860D28;
  if (!qword_269860D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860D28);
  }
  return result;
}

unint64_t sub_24D2C0D98()
{
  unint64_t result = qword_269860D30;
  if (!qword_269860D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860D30);
  }
  return result;
}

void sub_24D2C0E04()
{
  id v1 = objc_msgSend(v0, sel_navigationBar);
  objc_msgSend(v1, sel_setTranslucent_, 1);

  id v2 = objc_msgSend(v0, sel_navigationBar);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  objc_msgSend(v2, sel_setBackgroundImage_forBarMetrics_, v3, 0);

  id v4 = objc_msgSend(v0, sel_navigationBar);
  id v5 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v4, sel_setBackgroundColor_, v5);

  id v6 = objc_msgSend(v0, sel_navigationBar);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  objc_msgSend(v6, sel_setShadowImage_, v7);
}

char *sub_24D2C0F6C(unsigned __int8 *a1, __int16 *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, char a7, uint64_t a8, double a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
  int v19 = *a1;
  __int16 v20 = *a2;
  uint64_t v21 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode;
  char v22 = (objc_class *)type metadata accessor for FMPFSKNode();
  id v23 = objc_allocWithZone(v22);
  char v24 = v17;
  *(void *)&v17[v21] = objc_msgSend(v23, sel_init);
  uint64_t v25 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode;
  *(void *)&v24[v25] = objc_msgSend(objc_allocWithZone(v22), sel_init);
  uint64_t v26 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode;
  *(void *)&v24[v26] = objc_msgSend(objc_allocWithZone(v22), sel_init);
  uint64_t v27 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
  type metadata accessor for FMPFSKSpriteNode();
  uint64_t v122 = v27;
  *(void *)&v24[v27] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode] = 0;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse] = 0;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_hasPlayedInitialPulse] = 0;
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction] = 0;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDiskRadius] = 1;
  int v28 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius];
  *(void *)int v28 = 0;
  v118 = v28;
  v28[8] = 1;
  int v29 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
  *(void *)int v29 = 0;
  v29[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDotScale] = 1;
  int v30 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale];
  *(void *)int v30 = 0;
  v30[8] = 1;
  int v31 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale];
  *(void *)int v31 = 0;
  v31[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyAngle] = 1;
  int v32 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle];
  *(void *)int v32 = 0;
  v32[8] = 1;
  char v33 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle];
  *(void *)char v33 = 0;
  v33[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOpacity] = 1;
  char v34 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacity];
  *(void *)char v34 = 0;
  v34[8] = 1;
  char v35 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOpacity];
  *(void *)char v35 = 0;
  v35[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyBrightness] = 1;
  char v36 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightness];
  *(void *)char v36 = 0;
  v117 = v36;
  v36[8] = 1;
  char v37 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
  *(void *)char v37 = 0;
  v37[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOffset] = 1;
  char v38 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset];
  *(void *)char v38 = 0;
  *((void *)v38 + 1) = 0;
  v38[16] = 1;
  char v39 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOffset];
  *(void *)char v39 = 0;
  *((void *)v39 + 1) = 0;
  v39[16] = 1;
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAbsoluteHeading] = 0;
  char v40 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interactiveAngleFactor];
  *(void *)char v40 = 0;
  v40[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyRadiusFactor] = 1;
  char v41 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactor];
  *(void *)char v41 = 0;
  v41[8] = 1;
  char v42 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedRadiusFactor];
  *(void *)char v42 = 0;
  v42[8] = 1;
  v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_experienceType] = v19;
  __int16 v119 = v20;
  *(_WORD *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_findingTechnology] = v20;
  if (v19 == 1)
  {
    if (qword_2698602C0 != -1) {
      swift_once();
    }
    char v43 = &xmmword_269861488;
  }
  else
  {
    if (qword_2698602B8 != -1) {
      swift_once();
    }
    char v43 = &xmmword_269861430;
  }
  int v44 = a7 & 1;
  uint64_t v45 = *((void *)v43 + 10);
  long long v46 = v43[4];
  id v47 = (void *)*((void *)v43 + 7);
  uint64_t v49 = *((void *)v43 + 5);
  uint64_t v48 = *((void *)v43 + 6);
  long long v50 = *(long long *)((char *)v43 + 24);
  uint64_t v51 = *((void *)v43 + 2);
  uint64_t v52 = *((void *)v43 + 1);
  float v53 = &v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style];
  *(void *)float v53 = *(void *)v43;
  *((void *)v53 + 1) = v52;
  *((void *)v53 + 2) = v51;
  *(_OWORD *)(v53 + 24) = v50;
  *((void *)v53 + 5) = v49;
  *((void *)v53 + 6) = v48;
  *((void *)v53 + 7) = v47;
  *((_OWORD *)v53 + 4) = v46;
  *((void *)v53 + 10) = v45;
  *(double *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotDiameter] = a9;
  float v54 = self;
  id v55 = v47;
  id v56 = objc_msgSend(v54, sel_mainScreen);
  id v57 = (void *)sub_24D39CAC0();
  int v58 = MGGetSInt32Answer();

  *(double *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_pixelsPerInch] = (double)v58;
  if (a5) {
    id v59 = a5;
  }
  else {
    id v59 = objc_msgSend(self, sel_whiteColor);
  }
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor] = v59;
  type metadata accessor for FMPFView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  double v61 = self;
  id v126 = a5;
  id v62 = objc_msgSend(v61, sel_bundleForClass_, ObjCClassFromMetadata);
  BOOL v63 = (void *)sub_24D39CAC0();
  id v64 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v63, v62, 0);

  if (v64)
  {
    id v65 = objc_msgSend(self, sel_textureWithImage_, v64);

    id v62 = v64;
  }
  else
  {
    id v65 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17C38]), sel_init);
  }

  v128 = v65;
  objc_msgSend(v65, sel_size);
  *(double *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_subScale] = 1.0 / (v66 / a9);
  LOWORD(v129) = v119;
  id v67 = objc_allocWithZone((Class)type metadata accessor for FMPFSKBTRangingNode());
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode] = sub_24D30C3CC((__int16 *)&v129);
  *(void *)v118 = a6;
  v118[8] = v44 != 0;
  *(void *)int v30 = a8;
  v30[8] = a10 & 1;
  *(void *)int v32 = a11;
  v32[8] = a12 & 1;
  *(void *)char v34 = a13;
  v34[8] = a14 & 1;
  *(void *)v117 = *((void *)v53 + 3);
  v117[8] = 0;
  *(void *)char v38 = a15;
  *((void *)v38 + 1) = a16;
  v38[16] = a17 & 1;
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadiusSpring] = sub_24D32B3C8(a6, v44, 0x3FE0000000000000, 0, 0, 1);
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring] = sub_24D32B3C8(*(void *)v30, v30[8], 0x3F847AE147AE147BLL, 0, 0, 1);
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring] = sub_24D32B3C8(*(void *)v32, v32[8], 0x3FA015BF9217271ALL, 0, 0, 1);
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacitySpring] = sub_24D32B3C8(*(void *)v34, v34[8], 0x3F847AE147AE147BLL, 0, 0, 1);
  id v68 = sub_24D32B080(*(void *)v117, v117[8], 0x3F847AE147AE147BLL, 0);
  uint64_t v69 = 0;
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightnessSpring] = v68;
  if ((v38[16] & 1) == 0) {
    uint64_t v69 = *(void *)v38;
  }
  char v70 = sub_24D32B3C8(v69, v38[16], 0x3FE0000000000000, 0, 0, 1);
  uint64_t v71 = 0;
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_xOffsetSpring] = v70;
  if ((v38[16] & 1) == 0) {
    uint64_t v71 = *((void *)v38 + 1);
  }
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring] = sub_24D32B3C8(v71, v38[16], 0x3FE0000000000000, 0, 0, 1);
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_headingSpring] = sub_24D32B738(0, 0, 0, 1, 0x3FE0000000000000, 0);
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactorSpring] = sub_24D32B3C8(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  objc_msgSend(*(id *)&v24[v122], sel_setTexture_, v65);
  id v72 = *(id *)&v24[v122];
  objc_msgSend(v65, sel_size);
  objc_msgSend(v72, sel_setSize_);

  id v73 = *(id *)&v24[v122];
  objc_msgSend(v73, sel_setColorBlendFactor_, 1.0);

  long long v74 = (objc_class *)type metadata accessor for FMPFSKPeripheralDotNode();
  v130.receiver = v24;
  v130.super_class = v74;
  float v75 = (char *)objc_msgSendSuper2(&v130, sel_init);
  float v76 = v75;
  if (a4)
  {
    char v77 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v77 = 0;
  }
  objc_msgSend(v75, sel_setName_, v77, a3);

  uint64_t v78 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode;
  objc_msgSend(v75, sel_addChild_, *(void *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode]);
  uint64_t v79 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode;
  objc_msgSend(*(id *)&v75[v78], sel_addChild_, *(void *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode]);
  uint64_t v80 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode;
  objc_msgSend(*(id *)&v75[v79], sel_addChild_, *(void *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode]);
  uint64_t v81 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
  objc_msgSend(*(id *)&v75[v80], sel_addChild_, *(void *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode]);
  uint64_t v124 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode;
  int v82 = *(void **)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode];
  objc_msgSend(v75, sel_addChild_, v82);
  sub_24D2B7450(&qword_269861330);
  uint64_t v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = xmmword_24D3A0210;
  float v84 = self;
  __int16 v85 = self;
  id v86 = v82;
  id v87 = objc_msgSend(v85, sel_rangeWithConstantValue_, 0.0);
  id v88 = objc_msgSend(v84, sel_distance_toNode_, v87, *(void *)&v75[v80]);

  *(void *)(v83 + 32) = v88;
  uint64_t v129 = v83;
  sub_24D39CC30();
  sub_24D2BC100(0, (unint64_t *)&qword_269860EB8);
  v89 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v86, sel_setConstraints_, v89);

  id v90 = *(id *)&v75[v78];
  v91 = (void *)sub_24D39CAC0();
  objc_msgSend(v90, sel_setName_, v91);

  id v92 = *(id *)&v75[v80];
  char v93 = (void *)sub_24D39CAC0();
  objc_msgSend(v92, sel_setName_, v93);

  id v94 = *(id *)&v75[v81];
  uint64_t v95 = (void *)sub_24D39CAC0();
  objc_msgSend(v94, sel_setName_, v95);

  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius + 8] & 1) == 0)
  {
    double v96 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius];
    v97 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
    double *v97 = v96;
    *((unsigned char *)v97 + 8) = 0;
    objc_msgSend(*(id *)&v75[v79], sel_setPosition_, 0.0, v96);
  }
  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale + 8] & 1) == 0)
  {
    double v98 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale];
    id v99 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale];
    *id v99 = v98;
    *((unsigned char *)v99 + 8) = 0;
    objc_msgSend(*(id *)&v75[v80], sel_setScale_, *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_subScale] * v98);
  }
  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle + 8] & 1) == 0)
  {
    double v100 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle];
    id v101 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle];
    *id v101 = v100;
    *((unsigned char *)v101 + 8) = 0;
    if (!*(void *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction]) {
      objc_msgSend(*(id *)&v75[v78], sel_setZRotation_, v100);
    }
  }
  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacity + 8] & 1) == 0)
  {
    double v102 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacity];
    char v103 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOpacity];
    *char v103 = v102;
    double v104 = v102;
    *((unsigned char *)v103 + 8) = 0;
    objc_msgSend(*(id *)&v75[v80], sel_setAlpha_, v102);
    objc_msgSend(*(id *)&v75[v124], sel_setAlpha_, v104);
  }
  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightness + 8] & 1) == 0)
  {
    double v105 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightness];
    v106 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
    double *v106 = v105;
    double v107 = v105;
    *((unsigned char *)v106 + 8) = 0;
    v108 = *(void **)&v75[v81];
    v109 = *(void **)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor];
    id v110 = v108;
    id v111 = v109;
    sub_24D379D44(v111, v107);
  }
  if ((v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset + 16] & 1) == 0)
  {
    double v112 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset + 8];
    double v113 = *(double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset];
    v114 = (double *)&v75[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOffset];
    double *v114 = v113;
    v114[1] = v112;
    *((unsigned char *)v114 + 16) = 0;
    objc_msgSend(v75, sel_setPosition_, v113, v112);
  }

  return v75;
}

uint64_t sub_24D2C1D24()
{
  sub_24D39D1D0();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_24D39D600();
  uint64_t v3 = sub_24D34315C(6, v1, v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  MEMORY[0x253324B60](v3, v5, v7, v9);
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  id v10 = objc_msgSend(v0, sel_name);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_24D39CAF0();
  }
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  uint64_t v12 = sub_24D39CB00();
  swift_bridgeObjectRelease();
  return v12;
}

id sub_24D2C1ED8()
{
  type metadata accessor for FMPFSKSpriteNode();
  id v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  type metadata accessor for FMPFView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v4 = (void *)sub_24D39CAC0();
  id v5 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v4, v3, 0);

  if (v5)
  {
    id v6 = objc_msgSend(self, sel_textureWithImage_, v5);

    id v3 = v5;
  }
  else
  {
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17C38]), sel_init);
  }

  objc_msgSend(v1, sel_setTexture_, v6);
  id v7 = v1;
  objc_msgSend(v6, sel_size);
  objc_msgSend(v7, sel_setSize_);

  uint64_t v8 = v0 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style;
  objc_msgSend(v7, sel_setColor_, *(void *)(v8 + 56));
  objc_msgSend(v7, sel_setColorBlendFactor_, 1.0);
  objc_msgSend(v7, sel_setAlpha_, *(double *)(v8 + 40));
  objc_msgSend(v7, sel_setScale_, 1.0);
  id v9 = v7;
  id v10 = (void *)sub_24D39CAC0();
  objc_msgSend(v9, sel_setName_, v10);

  return v9;
}

void sub_24D2C20E4(void *a1, char *a2, double a3)
{
  objc_msgSend(a1, sel_setSpeed_, *(double *)&a2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style + 8] * a3);
  if ((a2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness + 8] & 1) == 0)
  {
    uint64_t v5 = *(void *)&a2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
    if (!UIAccessibilityIsReduceMotionEnabled())
    {
      id v6 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode];
      id v7 = (void *)swift_allocObject();
      v7[2] = a1;
      v7[3] = v5;
      v7[4] = a2;
      v12[4] = sub_24D2C3D68;
      v12[5] = v7;
      v12[0] = MEMORY[0x263EF8330];
      v12[1] = 1107296256;
      v12[2] = sub_24D32194C;
      uint64_t v12[3] = &unk_26FF862A0;
      uint64_t v8 = _Block_copy(v12);
      id v9 = v6;
      id v10 = a1;
      uint64_t v11 = a2;
      swift_release();
      objc_msgSend(v9, sel_runAction_completion_, v10, v8);
      _Block_release(v8);
    }
  }
}

void sub_24D2C223C()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction;
  if (!*(void *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction])
  {
    unint64_t v2 = (double *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
    if ((v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness + 8] & 1) == 0
      && (v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius + 8] & 1) == 0)
    {
      double v3 = *v2;
      uint64_t v4 = (uint64_t *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style];
      double v5 = (*(double *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius]
          + *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius])
         * 3.14159265
         / (*(double *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style]
          * 0.5);
      double v6 = dbl_24D3A0B00[(sub_24D2B7918(100) & 1) == 0];
      id v7 = objc_msgSend(self, sel_rotateByAngle_duration_, v6 / (double)v4[2], v5 / (double)v4[2]);
      objc_msgSend(v7, sel_setTimingMode_, 0);
      objc_msgSend(v7, sel_setSpeed_, v3 * *((double *)v4 + 1));
      uint64_t v8 = *(void **)&v0[v1];
      *(void *)&v0[v1] = v7;
      id v16 = v7;

      if (((_BYTE)v2[1] & 1) != 0 || (double v9 = *v2, UIAccessibilityIsReduceMotionEnabled()))
      {
      }
      else
      {
        id v10 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode];
        uint64_t v11 = (double *)swift_allocObject();
        *((void *)v11 + 2) = v16;
        v11[3] = v9;
        *((void *)v11 + 4) = v0;
        aBlock[4] = sub_24D2C3D3C;
        aBlock[5] = v11;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24D32194C;
        aBlock[3] = &unk_26FF86250;
        uint64_t v12 = _Block_copy(aBlock);
        id v13 = v16;
        id v14 = v10;
        uint64_t v15 = v0;
        swift_release();
        objc_msgSend(v14, sel_runAction_completion_, v13, v12);
        _Block_release(v12);
      }
    }
  }
}

void sub_24D2C24A0()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction;
  if (*(void *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction])
  {
    unint64_t v2 = v0;
    double v3 = (double *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle];
    if (((_BYTE)v3[1] & 1) == 0)
    {
      double v4 = *v3;
      uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode], sel_removeAllActions);
      double v6 = *(void **)&v2[v1];
      *(void *)&v2[v1] = 0;

      double v7 = fmod(*(double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAbsoluteHeading]/ 180.0* 3.14159265, 6.28318531);
      if (v7 <= 3.14159265)
      {
        if (v7 < -3.14159265) {
          double v7 = v7 + 6.28318531;
        }
      }
      else
      {
        double v7 = v7 + -6.28318531;
      }
      objc_msgSend(*(id *)&v2[v5], sel_zRotation);
      double v9 = fmod(v8, 6.28318531);
      if (v9 <= 3.14159265)
      {
        if (v9 < -3.14159265) {
          double v9 = v9 + 6.28318531;
        }
      }
      else
      {
        double v9 = v9 + -6.28318531;
      }
      double v10 = v7 + v9;
      double v11 = v4 - (v7 + v9);
      if (vabdd_f64(v4, v10) > 3.14159265)
      {
        if (v10 >= 0.0 || v4 < 0.0)
        {
          if (v4 < 0.0 && v10 >= 0.0) {
            double v11 = v11 + 6.28318531;
          }
        }
        else
        {
          double v11 = v11 + -6.28318531;
        }
      }
      double v13 = v4 - v11;
      *double v3 = v4 - v11;
      *((unsigned char *)v3 + 8) = 0;
      objc_msgSend(*(id *)&v2[v5], sel_setZRotation_, v4 - v11);
      uint64_t v14 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring];
      sub_24D2D9DA8(v13);
      *(unsigned char *)(v14 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      objc_msgSend(v2, sel_setZRotation_, 0.0);
      uint64_t v15 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_headingSpring];
      sub_24D2D9DA8(0.0);
      *(unsigned char *)(v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
      sub_24D2C2F38(1, v4);
    }
  }
}

void sub_24D2C26B0(char a1, char a2)
{
  double v3 = v2;
  if (a1)
  {
    double v4 = self;
    uint64_t v5 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style];
    double v6 = *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style + 64];
    id v7 = objc_msgSend(v4, sel_fadeAlphaTo_duration_, *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style + 48], v6);
    objc_msgSend(v7, sel_setTimingMode_, 2);
    if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_hasPlayedInitialPulse])
    {
      id v8 = sub_24D2C1ED8();
      id v9 = objc_msgSend(v4, sel_scaleTo_duration_, v5[4], v6);
      objc_msgSend(v9, sel_setTimingMode_, 2);
      sub_24D2B7450(&qword_269861330);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_24D3A0B10;
      *(void *)(v10 + 32) = v7;
      *(void *)(v10 + 40) = v9;
      unint64_t aBlock = v10;
      sub_24D39CC30();
      sub_24D2BC100(0, &qword_269860EC8);
      id v11 = v7;
      id v12 = v9;
      double v13 = (void *)sub_24D39CC00();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v4, sel_group_, v13);

      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode], sel_addChild_, v8);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v8;
      int v58 = sub_24D2C3CEC;
      uint64_t v59 = v15;
      unint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v55 = 1107296256;
      id v56 = sub_24D32194C;
      id v57 = &unk_26FF86200;
      id v16 = _Block_copy(&aBlock);
      id v17 = v8;
      swift_release();
      objc_msgSend(v17, sel_runAction_completion_, v14, v16);

      _Block_release(v16);
    }
    else
    {
      v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_hasPlayedInitialPulse] = 1;
      v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse] = 1;
      id v35 = objc_msgSend(v4, sel_scaleTo_duration_, v5[4], v6);
      objc_msgSend(v35, sel_setTimingMode_, 2);
      sub_24D2B7450(&qword_269861330);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_24D3A0B10;
      *(void *)(v36 + 32) = v7;
      *(void *)(v36 + 40) = v35;
      unint64_t aBlock = v36;
      sub_24D39CC30();
      sub_24D2BC100(0, &qword_269860EC8);
      id v37 = v7;
      id v38 = v35;
      char v39 = (void *)sub_24D39CC00();
      swift_bridgeObjectRelease();
      id v40 = objc_msgSend(v4, sel_group_, v39);

      char v41 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode];
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v3;
      int v58 = sub_24D2C3C6C;
      uint64_t v59 = v42;
      unint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v55 = 1107296256;
      id v56 = sub_24D32194C;
      id v57 = &unk_26FF861B0;
      char v43 = _Block_copy(&aBlock);
      id v44 = v41;
      uint64_t v45 = v3;
      swift_release();
      objc_msgSend(v44, sel_runAction_completion_, v40, v43);

      _Block_release(v43);
    }
    return;
  }
  if (a2) {
    return;
  }
  unint64_t aBlock = MEMORY[0x263F8EE78];
  id v18 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode], sel_children);
  sub_24D2BC100(0, (unint64_t *)&qword_269860EC0);
  unint64_t v19 = sub_24D39CC10();

  if (v19 >> 62) {
    goto LABEL_27;
  }
  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v20)
  {
LABEL_7:
    uint64_t v52 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
    uint64_t v53 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode;
    uint64_t v21 = 4;
    char v22 = v3;
    while (1)
    {
      if ((v19 & 0xC000000000000001) != 0) {
        id v23 = (id)MEMORY[0x253325220](v21 - 4, v19);
      }
      else {
        id v23 = *(id *)(v19 + 8 * v21);
      }
      char v24 = v23;
      uint64_t v25 = v21 - 3;
      if (__OFADD__(v21 - 4, 1))
      {
        __break(1u);
LABEL_27:
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_24D39D2D0();
        if (!v20) {
          goto LABEL_28;
        }
        goto LABEL_7;
      }
      self;
      uint64_t v26 = swift_dynamicCastObjCClass();
      if (!v26) {
        goto LABEL_9;
      }
      uint64_t v27 = (void *)v26;
      int v28 = *(void **)&v3[v53];
      if (v28)
      {
        id v29 = v24;
        id v30 = v28;
        char v31 = sub_24D39CFE0();

        double v3 = v22;
        if (v31) {
          break;
        }
      }
      else
      {
        id v32 = v24;
      }
      id v33 = *(id *)&v3[v52];
      char v34 = sub_24D39CFE0();

      double v3 = v22;
      if (v34) {
        break;
      }
      MEMORY[0x253324C20](objc_msgSend(v27, sel_removeAllActions));
      if (*(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24D39CC40();
      }
      sub_24D39CC60();
      sub_24D39CC30();

      double v3 = v22;
      if (v25 == v20) {
        goto LABEL_28;
      }
LABEL_10:
      ++v21;
    }

LABEL_9:
    if (v25 == v20) {
      goto LABEL_28;
    }
    goto LABEL_10;
  }
LABEL_28:
  swift_bridgeObjectRelease_n();
  if (aBlock >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v46 = sub_24D39D2D0();
    if (v46) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v46 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v46)
    {
LABEL_30:
      if (v46 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v46; ++i)
      {
        if ((aBlock & 0xC000000000000001) != 0) {
          id v48 = (id)MEMORY[0x253325220](i, aBlock);
        }
        else {
          id v48 = *(id *)(aBlock + 8 * i + 32);
        }
        uint64_t v49 = v48;
        objc_msgSend(v48, sel_removeFromParent);
      }
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v50 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse;
  if (v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse])
  {
    uint64_t v51 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode], sel_removeAllActions);
    objc_msgSend(*(id *)&v3[v51], sel_setScale_, 1.0);
    objc_msgSend(*(id *)&v3[v51], sel_setAlpha_, 1.0);
  }
  v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_hasPlayedInitialPulse] = 0;
  v3[v50] = 0;
  swift_bridgeObjectRelease();
}

void sub_24D2C2E10(char a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale;
  *(double *)uint64_t v5 = a2;
  *(unsigned char *)(v5 + 8) = 0;
  if ((a1 & 1) != 0
    && (uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring),
        uint64_t v7 = v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v7 + 280) + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) != 1.79769313e308))
  {
    uint64_t v10 = v6 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)uint64_t v10 = a2;
    *(unsigned char *)(v10 + 8) = 0;
    sub_24D32ADF4();
  }
  else
  {
    uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring);
    sub_24D2D9DA8(a2);
    *(unsigned char *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    uint64_t v9 = v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale;
    *(double *)uint64_t v9 = a2;
    *(unsigned char *)(v9 + 8) = 0;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode), sel_setScale_, *(double *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_subScale) * a2);
  }
}

void sub_24D2C2F38(char a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle;
  *(double *)uint64_t v5 = a2;
  *(unsigned char *)(v5 + 8) = 0;
  if ((a1 & 1) != 0
    && (uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring),
        uint64_t v7 = v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v7 + 280) + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) != 1.79769313e308))
  {
    uint64_t v10 = v6 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)uint64_t v10 = a2;
    *(unsigned char *)(v10 + 8) = 0;
    sub_24D32ADF4();
  }
  else
  {
    uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring);
    sub_24D2D9DA8(a2);
    *(unsigned char *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    uint64_t v9 = v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle;
    *(double *)uint64_t v9 = a2;
    *(unsigned char *)(v9 + 8) = 0;
    if (!*(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction)) {
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode), sel_setZRotation_, a2);
    }
  }
}

void sub_24D2C3064(char a1, double a2, double a3)
{
  double v4 = v3;
  uint64_t v7 = (double *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset];
  *uint64_t v7 = a2;
  v7[1] = a3;
  *((unsigned char *)v7 + 16) = 0;
  if ((a1 & 1) == 0
    || (uint64_t v8 = *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_xOffsetSpring],
        uint64_t v9 = v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v9 + 280) + *(double *)(v8 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) == 1.79769313e308)
    || (uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring,
        uint64_t v11 = *(void *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring],
        uint64_t v12 = v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s,
        swift_beginAccess(),
        *(double *)(v12 + 280) + *(double *)(v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40) == 1.79769313e308))
  {
    uint64_t v13 = *(void *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_xOffsetSpring];
    sub_24D2D9DA8(a2);
    *(unsigned char *)(v13 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    uint64_t v14 = *(void *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring];
    sub_24D2D9DA8(a3);
    *(unsigned char *)(v14 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    uint64_t v15 = (double *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOffset];
    *uint64_t v15 = a2;
    v15[1] = a3;
    *((unsigned char *)v15 + 16) = 0;
    objc_msgSend(v4, sel_setPosition_, a2, a3);
  }
  else
  {
    uint64_t v16 = v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)uint64_t v16 = a2;
    *(unsigned char *)(v16 + 8) = 0;
    sub_24D32ADF4();
    uint64_t v17 = *(void *)&v4[v10] + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)uint64_t v17 = a3;
    *(unsigned char *)(v17 + 8) = 0;
    sub_24D32ADF4();
  }
}

double sub_24D2C3214(double a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_headingSpring);
  uint64_t v4 = v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  uint64_t v5 = v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
  double v6 = *(double *)(v3 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  double v7 = *(double *)(v4 + 280) + v6;
  double v8 = v7 + a1;
  if (v7 == 1.79769313e308)
  {
    sub_24D2D9DA8(v8);
    *(unsigned char *)(v3 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    double v6 = *(double *)(v5 + 40);
  }
  double result = v8 - v6;
  *(double *)(v4 + 280) = result;
  *(double *)(v4 + 240) = result;
  *(void *)(v4 + 248) = 0;
  return result;
}

id sub_24D2C32D4(id result, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interactiveAngleFactor;
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  if ((a2 & 1) == 0 && (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle + 8) & 1) == 0)
  {
    double v4 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle);
    double v5 = *(double *)&result;
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring);
    double v7 = (double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    double result = (id)swift_beginAccess();
    double v8 = *v7 + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    if (vabdd_f64(v7[35] + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v8) <= *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
      double v8 = v7[35] + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    }
    uint64_t v9 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle;
    *(double *)uint64_t v9 = v4 * v5 + (1.0 - v5) * v8;
    *(unsigned char *)(v9 + 8) = 0;
    if (!*(void *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction)) {
      return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode), sel_setZRotation_);
    }
  }
  return result;
}

void sub_24D2C3404(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactor;
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  if (a2)
  {
    uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode;
    double v7 = *(void **)(v4 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode);
    if (v7)
    {
      objc_msgSend(v7, sel_removeFromParent);
      double v8 = *(void **)(v4 + v6);
    }
    else
    {
      double v8 = 0;
    }
    *(void *)(v4 + v6) = 0;

    uint64_t v19 = *(void *)(v4 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactorSpring);
    sub_24D2D9DA8(0.0);
    *(unsigned char *)(v19 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    uint64_t v20 = v4 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedRadiusFactor;
    *(void *)uint64_t v20 = 0;
    *(unsigned char *)(v20 + 8) = 1;
  }
  else
  {
    uint64_t v11 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode;
    if (!*(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode))
    {
      id v12 = sub_24D2C1ED8();
      uint64_t v13 = *(void **)(v3 + v11);
      *(void *)(v3 + v11) = v12;
      id v14 = v12;

      id v15 = v14;
      uint64_t v16 = (void *)sub_24D39CAC0();
      objc_msgSend(v15, sel_setName_, v16);

      objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode), sel_addChild_, v15);
    }
    uint64_t v17 = *(void *)(v4 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactorSpring);
    if (a3)
    {
      uint64_t v18 = v17 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
      *(void *)uint64_t v18 = a1;
      *(unsigned char *)(v18 + 8) = 0;
      sub_24D32ADF4();
    }
    else
    {
      sub_24D2D9DA8(*(double *)&a1);
      *(unsigned char *)(v17 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    }
  }
}

void sub_24D2C35C4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor);
}

id sub_24D2C3708()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFSKPeripheralDotNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKPeripheralDotNode()
{
  return self;
}

void sub_24D2C38B0()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode;
  objc_super v2 = (objc_class *)type metadata accessor for FMPFSKNode();
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
  type metadata accessor for FMPFSKSpriteNode();
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_hasPlayedInitialPulse] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDiskRadius] = 1;
  uint64_t v6 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadius];
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  double v7 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
  *(void *)double v7 = 0;
  v7[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDotScale] = 1;
  double v8 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScale];
  *(void *)double v8 = 0;
  v8[8] = 1;
  uint64_t v9 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyAngle] = 1;
  uint64_t v10 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angle];
  *(void *)uint64_t v10 = 0;
  v10[8] = 1;
  uint64_t v11 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle];
  *(void *)uint64_t v11 = 0;
  v11[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOpacity] = 1;
  id v12 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacity];
  *(void *)id v12 = 0;
  v12[8] = 1;
  uint64_t v13 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOpacity];
  *(void *)uint64_t v13 = 0;
  v13[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyBrightness] = 1;
  id v14 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightness];
  *(void *)id v14 = 0;
  v14[8] = 1;
  id v15 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
  *(void *)id v15 = 0;
  v15[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOffset] = 1;
  uint64_t v16 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_offset];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  uint64_t v17 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOffset];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  v17[16] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAbsoluteHeading] = 0;
  uint64_t v18 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interactiveAngleFactor];
  *(void *)uint64_t v18 = 0;
  v18[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyRadiusFactor] = 1;
  uint64_t v19 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactor];
  *(void *)uint64_t v19 = 0;
  v19[8] = 1;
  uint64_t v20 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedRadiusFactor];
  *(void *)uint64_t v20 = 0;
  v20[8] = 1;

  sub_24D39D2B0();
  __break(1u);
}

void sub_24D2C3B5C(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor);
  *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor) = a1;
  id v4 = a1;

  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode)
     + OBJC_IVAR____TtC11FMFindingUI16FMPFSKSpriteNode_previousBrightness;
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness + 8) & 1) == 0)
  {
    double v7 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness);
    double v8 = *(void **)(v1 + v2);
    id v9 = *(id *)(v1 + v5);
    id v10 = v8;
    sub_24D379D44(v10, v7);
  }
}

uint64_t sub_24D2C3C34()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_24D2C3C6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_isPlayingInitialPulse) = 0;
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode), sel_setScale_, 1.0);
  uint64_t v3 = *(void **)(v1 + v2);
  return objc_msgSend(v3, sel_setAlpha_, 1.0);
}

uint64_t sub_24D2C3CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D2C3CE4()
{
  return swift_release();
}

id sub_24D2C3CEC()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromParent);
}

uint64_t sub_24D2C3CFC()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_24D2C3D3C()
{
  sub_24D2C20E4(*(void **)(v0 + 16), *(char **)(v0 + 32), *(double *)(v0 + 24));
}

uint64_t sub_24D2C3D70(uint64_t a1, unint64_t a2)
{
  return 7876668;
}

unint64_t sub_24D2C3E44()
{
  unint64_t result = qword_269861310;
  if (!qword_269861310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861310);
  }
  return result;
}

BOOL FMItemActionStatus.isActionSuccessful.getter()
{
  return *v0 == 2;
}

uint64_t FMItemActionStatus.description.getter()
{
  uint64_t result = 0x726F727265;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    case 2:
      uint64_t result = 0x73736563637573;
      break;
    case 3:
      uint64_t result = 0x676E69646E6570;
      break;
    case 4:
      uint64_t result = 0x64656C696166;
      break;
    default:
      return result;
  }
  return result;
}

FMFindingUI::FMItemActionStatus_optional __swiftcall FMItemActionStatus.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue <= 199)
  {
    if (rawValue == -1)
    {
      unsigned char *v1 = 0;
      return (FMFindingUI::FMItemActionStatus_optional)rawValue;
    }
    if (!rawValue)
    {
      unsigned char *v1 = 1;
      return (FMFindingUI::FMItemActionStatus_optional)rawValue;
    }
LABEL_12:
    unsigned char *v1 = 5;
    return (FMFindingUI::FMItemActionStatus_optional)rawValue;
  }
  if (rawValue == 500)
  {
    unsigned char *v1 = 4;
    return (FMFindingUI::FMItemActionStatus_optional)rawValue;
  }
  if (rawValue == 205)
  {
    unsigned char *v1 = 3;
    return (FMFindingUI::FMItemActionStatus_optional)rawValue;
  }
  if (rawValue != 200) {
    goto LABEL_12;
  }
  unsigned char *v1 = 2;
  return (FMFindingUI::FMItemActionStatus_optional)rawValue;
}

uint64_t FMItemActionStatus.rawValue.getter()
{
  return qword_24D3A0CC8[*v0];
}

BOOL sub_24D2C3FD0(char *a1, char *a2)
{
  return qword_24D3A0CC8[*a1] == qword_24D3A0CC8[*a2];
}

uint64_t sub_24D2C3FF4()
{
  return sub_24D39D5D0();
}

uint64_t sub_24D2C4044()
{
  return sub_24D39D5A0();
}

uint64_t sub_24D2C407C()
{
  return sub_24D39D5D0();
}

FMFindingUI::FMItemActionStatus_optional sub_24D2C40C8(Swift::Int *a1)
{
  return FMItemActionStatus.init(rawValue:)(*a1);
}

void sub_24D2C40D0(void *a1@<X8>)
{
  *a1 = qword_24D3A0CC8[*v1];
}

unint64_t sub_24D2C40EC()
{
  unint64_t result = qword_269860ED0;
  if (!qword_269860ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860ED0);
  }
  return result;
}

uint64_t sub_24D2C4140()
{
  uint64_t result = 0x726F727265;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    case 2:
      uint64_t result = 0x73736563637573;
      break;
    case 3:
      uint64_t result = 0x676E69646E6570;
      break;
    case 4:
      uint64_t result = 0x64656C696166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMItemActionStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMItemActionStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D2C4340);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMItemActionStatus()
{
  return &type metadata for FMItemActionStatus;
}

void *sub_24D2C4378(void *a1)
{
  int v2 = v1;
  uint64_t v18 = a1;
  uint64_t v17 = sub_24D39CE80();
  uint64_t v3 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24D39CE50();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_24D39C9D0();
  MEMORY[0x270FA5388](v7 - 8);
  sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
  sub_24D39C9B0();
  uint64_t v19 = MEMORY[0x263F8EE78];
  sub_24D2C70FC((unint64_t *)&unk_2698613B0, MEMORY[0x263F8F0F8]);
  sub_24D2B7450((uint64_t *)&unk_269860F50);
  sub_24D2C7144((unint64_t *)&qword_2698613C0, (uint64_t *)&unk_269860F50);
  sub_24D39D0E0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F130], v17);
  v1[3] = sub_24D39CEC0();
  v1[4] = MEMORY[0x263F8EE78];
  swift_unknownObjectWeakInit();
  int v8 = v18;
  v1[2] = v18;
  uint64_t v9 = qword_2698602A8;
  id v10 = v8;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24D39C950();
  sub_24D2B508C(v11, (uint64_t)qword_269869FB8);
  id v12 = sub_24D39C930();
  os_log_type_t v13 = sub_24D39CDF0();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    _os_log_impl(&dword_24D2B1000, v12, v13, "â˜Žï¸Ž FMIPConnectionManager: initialized", v14, 2u);
    MEMORY[0x253326010](v14, -1, -1);
  }

  return v2;
}

uint64_t sub_24D2C46B0()
{
  if (MEMORY[0x253326120](v0 + 40))
  {
    swift_getObjectType();
    sub_24D39CF10();
    swift_unknownObjectRelease();
  }

  swift_bridgeObjectRelease();
  sub_24D2C6E6C(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMIPConnectionManager()
{
  return self;
}

void sub_24D2C475C(uint64_t a1, char a2, void (*a3)(void), uint64_t a4)
{
  if (a2)
  {
    uint64_t v7 = v4;
    if (qword_2698602A8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_24D39C950();
    sub_24D2B508C(v8, (uint64_t)qword_269869FB8);
    uint64_t v9 = sub_24D39C930();
    os_log_type_t v10 = sub_24D39CDF0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_24D2B1000, v9, v10, "â˜Žï¸Ž FMIPConnectionManager: connect", v11, 2u);
      MEMORY[0x253326010](v11, -1, -1);
    }

    id v12 = self;
    os_log_type_t v13 = (void *)sub_24D39C860();
    id v14 = objc_msgSend(v12, sel_connectToBeaconUUID_, v13);

    id v15 = objc_msgSend(*(id *)(v7 + 16), sel_executeCommand_, v14);
    uint64_t v16 = *(NSObject **)(v7 + 24);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v7;
    *(void *)(v17 + 24) = v15;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_24D2C6D20;
    *(void *)(v18 + 24) = v17;
    id v37 = sub_24D2C6D38;
    uint64_t v38 = v18;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v34 = 1107296256;
    id v35 = sub_24D30A4E8;
    uint64_t v36 = &unk_26FF863A8;
    uint64_t v19 = _Block_copy(&aBlock);
    swift_retain();
    id v20 = v15;
    swift_retain();
    swift_release();
    dispatch_sync(v16, v19);
    _Block_release(v19);
    LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v16 & 1) == 0)
    {
      uint64_t v21 = swift_allocObject();
      *(unsigned char *)(v21 + 16) = 1;
      *(void *)(v21 + 24) = v7;
      *(void *)(v21 + 32) = v20;
      *(void *)(v21 + 40) = a3;
      *(void *)(v21 + 48) = a4;
      id v37 = sub_24D2C6D5C;
      uint64_t v38 = v21;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v34 = 1107296256;
      id v35 = sub_24D2C5464;
      uint64_t v36 = &unk_26FF863F8;
      char v22 = _Block_copy(&aBlock);
      swift_retain();
      id v23 = v20;
      sub_24D2C6D74((uint64_t)a3);
      swift_release();
      id v24 = objc_msgSend(v23, sel_addFailureBlock_, v22);
      _Block_release(v22);

      uint64_t v25 = swift_allocObject();
      *(unsigned char *)(v25 + 16) = 1;
      *(void *)(v25 + 24) = v7;
      *(void *)(v25 + 32) = v23;
      *(void *)(v25 + 40) = a3;
      *(void *)(v25 + 48) = a4;
      id v37 = sub_24D2C6DD8;
      uint64_t v38 = v25;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v34 = 1107296256;
      id v35 = sub_24D2C597C;
      uint64_t v36 = &unk_26FF86448;
      uint64_t v26 = _Block_copy(&aBlock);
      swift_retain();
      id v27 = v23;
      sub_24D2C6D74((uint64_t)a3);
      swift_release();
      id v28 = objc_msgSend(v27, sel_addSuccessBlock_, v26);

      _Block_release(v26);
      swift_release();

      return;
    }
    __break(1u);
    goto LABEL_15;
  }
  if (qword_2698602A8 != -1) {
LABEL_15:
  }
    swift_once();
  uint64_t v29 = sub_24D39C950();
  sub_24D2B508C(v29, (uint64_t)qword_269869FB8);
  id v30 = sub_24D39C930();
  os_log_type_t v31 = sub_24D39CDF0();
  if (os_log_type_enabled(v30, v31))
  {
    id v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v32 = 0;
    _os_log_impl(&dword_24D2B1000, v30, v31, "â˜Žï¸Ž FMIPConnectionManager: disconnect is not supported on this platform!", v32, 2u);
    MEMORY[0x253326010](v32, -1, -1);
  }

  if (a3) {
    a3(0);
  }
}

uint64_t sub_24D2C4C60(uint64_t a1, void *a2)
{
  swift_beginAccess();
  id v4 = a2;
  MEMORY[0x253324C20]();
  if (*(void *)((*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_24D39CC40();
  sub_24D39CC60();
  sub_24D39CC30();
  return swift_endAccess();
}

uint64_t sub_24D2C4CFC(void *a1, char a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v35 = a6;
  uint64_t v36 = a3;
  uint64_t v10 = sub_24D39C990();
  uint64_t v39 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24D39C9D0();
  uint64_t v37 = *(void *)(v13 - 8);
  uint64_t v38 = v13;
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_24D39C950();
  sub_24D2B508C(v16, (uint64_t)qword_269869FB8);
  id v17 = a1;
  id v18 = a1;
  uint64_t v19 = sub_24D39C930();
  os_log_type_t v20 = sub_24D39CDF0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    id v33 = a4;
    uint64_t v23 = v22;
    uint64_t v41 = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    if (a2) {
      uint64_t v24 = 0x7463656E6E6F63;
    }
    else {
      uint64_t v24 = 0x656E6E6F63736964;
    }
    if (a2) {
      unint64_t v25 = 0xE700000000000000;
    }
    else {
      unint64_t v25 = 0xEA00000000007463;
    }
    uint64_t v34 = a5;
    uint64_t aBlock = sub_24D2B8328(v24, v25, &v41);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t aBlock = 0;
    unint64_t v43 = 0xE000000000000000;
    id v40 = a1;
    sub_24D2B7450((uint64_t *)&unk_269860F00);
    sub_24D39D290();
    uint64_t aBlock = sub_24D2B8328(aBlock, v43, &v41);
    sub_24D39D070();
    a5 = v34;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24D2B1000, v19, v20, "â˜Žï¸Ž FMIPConnectionManager: %s action failed %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    uint64_t v26 = v23;
    a4 = v33;
    MEMORY[0x253326010](v26, -1, -1);
    MEMORY[0x253326010](v21, -1, -1);
  }
  else
  {
  }
  uint64_t v27 = v36;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v27;
  *(void *)(v28 + 24) = a4;
  uint64_t v46 = sub_24D2C7194;
  uint64_t v47 = v28;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v43 = 1107296256;
  id v44 = sub_24D32194C;
  uint64_t v45 = &unk_26FF864E8;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_retain();
  id v30 = a4;
  sub_24D39C9B0();
  uint64_t v41 = MEMORY[0x263F8EE78];
  sub_24D2C70FC((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
  sub_24D2B7450((uint64_t *)&unk_2698610D0);
  sub_24D2C7144((unint64_t *)&qword_269860EF0, (uint64_t *)&unk_2698610D0);
  sub_24D39D0E0();
  MEMORY[0x253324EE0](0, v15, v12, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
  uint64_t result = swift_release();
  if (a5) {
    return a5(a1);
  }
  return result;
}

void sub_24D2C51F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x253325220](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      uint64_t v5 = v4;
      sub_24D2B7450(&qword_269860EF8);
      char v6 = sub_24D39CFE0();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)MEMORY[0x253325220](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          uint64_t v9 = v8;
          char v10 = sub_24D39CFE0();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_24D39D2D0();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_24D2C5380(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_24D3594D0(v3);
    uint64_t *v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      sub_24D39CC30();
      return v10;
    }
  }
  uint64_t result = sub_24D39D310();
  __break(1u);
  return result;
}

void sub_24D2C5464(uint64_t a1, void *a2)
{
}

uint64_t sub_24D2C546C(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v33 = a6;
  uint64_t v37 = a5;
  uint64_t v9 = sub_24D39C990();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v36 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24D39C9D0();
  uint64_t v35 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v34 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_24D39C950();
  sub_24D2B508C(v14, (uint64_t)qword_269869FB8);
  id v15 = sub_24D39C930();
  os_log_type_t v16 = sub_24D39CDF0();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v30 = a3;
    uint64_t v19 = v18;
    os_log_type_t v31 = a4;
    uint64_t v32 = v12;
    *(_DWORD *)id v17 = 136315138;
    aBlock[0] = v18;
    if (a2) {
      uint64_t v20 = 0x7463656E6E6F63;
    }
    else {
      uint64_t v20 = 0x656E6E6F63736964;
    }
    if (a2) {
      unint64_t v21 = 0xE700000000000000;
    }
    else {
      unint64_t v21 = 0xEA00000000007463;
    }
    uint64_t v38 = sub_24D2B8328(v20, v21, aBlock);
    a4 = v31;
    uint64_t v12 = v32;
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v15, v16, "â˜Žï¸Ž FMIPConnectionManager: %s action succeeded", v17, 0xCu);
    swift_arrayDestroy();
    uint64_t v22 = v19;
    a3 = v30;
    MEMORY[0x253326010](v22, -1, -1);
    MEMORY[0x253326010](v17, -1, -1);
  }

  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a3;
  *(void *)(v23 + 24) = a4;
  aBlock[4] = (uint64_t)sub_24D2C6E0C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24D32194C;
  aBlock[3] = (uint64_t)&unk_26FF86498;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  id v25 = a4;
  uint64_t v26 = v34;
  sub_24D39C9B0();
  uint64_t v38 = MEMORY[0x263F8EE78];
  sub_24D2C70FC((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
  sub_24D2B7450((uint64_t *)&unk_2698610D0);
  sub_24D2C7144((unint64_t *)&qword_269860EF0, (uint64_t *)&unk_2698610D0);
  uint64_t v27 = v36;
  sub_24D39D0E0();
  MEMORY[0x253324EE0](0, v26, v27, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v27, v9);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v12);
  uint64_t result = swift_release();
  if (v37) {
    return v37(0);
  }
  return result;
}

void sub_24D2C58D8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  unint64_t v4 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_24D2C51F0(a2, v4);
  unint64_t v6 = v5;
  char v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v9 = (void *)sub_24D2C5380(v6);
    swift_endAccess();
  }
}

void sub_24D2C597C(uint64_t a1, void *a2)
{
}

void sub_24D2C5984(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_24D2C59F0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v74 = a3;
  uint64_t v5 = sub_24D39C990();
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  MEMORY[0x270FA5388](v5);
  id v68 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_24D39C9D0();
  uint64_t v67 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  double v66 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24D39C970();
  uint64_t v64 = *(void *)(v8 - 8);
  uint64_t v65 = v8;
  MEMORY[0x270FA5388](v8);
  id v62 = (void (**)(char *, char *, uint64_t))((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = sub_24D39C9F0();
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  double v60 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24D39CEE0();
  uint64_t v57 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v56 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24D2B7450((uint64_t *)&unk_269861100);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24D39C8A0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v59 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v19;
  MEMORY[0x270FA5388](v18);
  id v72 = (char *)&v53 - v20;
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_24D39C950();
  sub_24D2B508C(v21, (uint64_t)qword_269869FB8);
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_24D39C930();
  os_log_type_t v23 = sub_24D39CDF0();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v73 = v17;
  if (v24)
  {
    float v54 = v15;
    id v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v55 = v11;
    uint64_t v27 = v26;
    aBlock[0] = v26;
    *(_DWORD *)id v25 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_24D2B8328(a1, a2, aBlock);
    id v15 = v54;
    sub_24D39D070();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24D2B1000, v22, v23, "â˜Žï¸Ž FMIPConnectionManager: performing connect %s", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v28 = v27;
    uint64_t v11 = v55;
    MEMORY[0x253326010](v28, -1, -1);
    uint64_t v17 = v73;
    MEMORY[0x253326010](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_24D39C840();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_24D2C6E94((uint64_t)v15);
    uint64_t v29 = sub_24D39C930();
    os_log_type_t v30 = sub_24D39CDF0();
    if (os_log_type_enabled(v29, v30))
    {
      os_log_type_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v31 = 0;
      _os_log_impl(&dword_24D2B1000, v29, v30, "â˜Žï¸Ž FMIPConnectionManager: cannot connect for item with an invalid identifier", v31, 2u);
      MEMORY[0x253326010](v31, -1, -1);
    }

    sub_24D2C6EF4();
    uint64_t v32 = (void *)swift_allocError();
    swift_bridgeObjectRetain();
    sub_24D3236C8((uint64_t)aBlock, v32);

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v55 = a2;
    float v54 = (char *)a1;
    uint64_t v34 = v15;
    uint64_t v35 = v16;
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v53(v72, v34, v16);
    if (MEMORY[0x253326120](v74 + 40))
    {
      swift_getObjectType();
      sub_24D39CF10();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectWeakAssign();
    sub_24D2BC100(0, &qword_269860F18);
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v36 = (void *)sub_24D39CE90();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_24D2C70FC(&qword_269860F28, MEMORY[0x263F8F148]);
    sub_24D2B7450(&qword_269860F30);
    sub_24D2C7144(&qword_269860F38, &qword_269860F30);
    uint64_t v37 = v56;
    sub_24D39D0E0();
    sub_24D39CEF0();

    (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v11);
    swift_unknownObjectWeakAssign();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v39 = v60;
    sub_24D39C9E0();
    id v40 = v62;
    *id v62 = 0;
    uint64_t v42 = v64;
    uint64_t v41 = v65;
    (*(void (**)(void *, void, uint64_t))(v64 + 104))(v40, *MEMORY[0x263F8EFE0], v65);
    MEMORY[0x253324F80](v39, v40, ObjectType, 30.0);
    (*(void (**)(void *, uint64_t))(v42 + 8))(v40, v41);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v63);
    uint64_t v43 = swift_allocObject();
    swift_weakInit();
    uint64_t v45 = (uint64_t)v72;
    uint64_t v44 = v73;
    uint64_t v46 = v59;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v59, v72, v35);
    unint64_t v47 = (*(unsigned __int8 *)(v44 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v43;
    v53((char *)(v48 + v47), v46, v35);
    aBlock[4] = (uint64_t)sub_24D2C704C;
    aBlock[5] = v48;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24D32194C;
    aBlock[3] = (uint64_t)&unk_26FF86560;
    uint64_t v49 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v50 = v66;
    sub_24D39C9B0();
    uint64_t v51 = v68;
    sub_24D2C65B8();
    sub_24D39CF00();
    _Block_release(v49);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v71);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v50, v69);
    swift_release();
    swift_release();
    sub_24D39CF20();
    uint64_t v52 = (void *)swift_allocObject();
    v52[2] = sub_24D321EC8;
    v52[3] = 0;
    v52[4] = v54;
    v52[5] = v55;
    swift_bridgeObjectRetain();
    sub_24D2C475C(v45, 1, (void (*)(void))sub_24D2C70F0, (uint64_t)v52);
    swift_unknownObjectRelease();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v45, v35);
  }
}

uint64_t sub_24D2C6488(uint64_t a1, uint64_t a2)
{
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FB8);
  id v4 = sub_24D39C930();
  os_log_type_t v5 = sub_24D39CDF0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_24D2B1000, v4, v5, "â˜Žï¸Ž FMIPConnectionManager: connect re-scheduled", v6, 2u);
    MEMORY[0x253326010](v6, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24D2C475C(a2, 1, 0, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_24D2C65B8()
{
  return sub_24D39D0E0();
}

uint64_t sub_24D2C6680(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    char v15 = 4;
    sub_24D2B7450((uint64_t *)&unk_269860F40);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_24D3A0050;
    *(void *)(v9 + 32) = a4;
    *(void *)(v9 + 40) = a5;
    swift_bridgeObjectRetain();
    a2(&v15, v9, a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_2698602A8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24D39C950();
    sub_24D2B508C(v11, (uint64_t)qword_269869FB8);
    uint64_t v12 = sub_24D39C930();
    os_log_type_t v13 = sub_24D39CDF0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_24D2B1000, v12, v13, "â˜Žï¸Ž FMIPConnectionManager: connect performed", v14, 2u);
      MEMORY[0x253326010](v14, -1, -1);
    }

    char v16 = 2;
    return ((uint64_t (*)(char *, void, void))a2)(&v16, 0, 0);
  }
}

uint64_t sub_24D2C6800(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24D2B7450((uint64_t *)&unk_269861100);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24D39C8A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_24D39C950();
  uint64_t v14 = sub_24D2B508C(v13, (uint64_t)qword_269869FB8);
  swift_bridgeObjectRetain_n();
  uint64_t v36 = v14;
  char v15 = sub_24D39C930();
  os_log_type_t v16 = sub_24D39CDF0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v33 = a3;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = v9;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v35 = a1;
    uint64_t v20 = v19;
    uint64_t v38 = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_24D2B8328(v35, a2, &v38);
    a3 = v33;
    sub_24D39D070();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24D2B1000, v15, v16, "â˜Žï¸Ž FMIPConnectionManager: performing disconnect %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v20, -1, -1);
    uint64_t v21 = v18;
    uint64_t v9 = v34;
    MEMORY[0x253326010](v21, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_24D39C840();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24D2C6E94((uint64_t)v8);
    uint64_t v22 = sub_24D39C930();
    os_log_type_t v23 = sub_24D39CDF0();
    if (os_log_type_enabled(v22, v23))
    {
      BOOL v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v24 = 0;
      _os_log_impl(&dword_24D2B1000, v22, v23, "â˜Žï¸Ž FMIPConnectionManager: cannot disconnect for item with an invalid identifier", v24, 2u);
      MEMORY[0x253326010](v24, -1, -1);
    }

    sub_24D2C6EF4();
    id v25 = (void *)swift_allocError();
    swift_bridgeObjectRetain();
    sub_24D3236BC((uint64_t)&v38, v25);

    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    if (MEMORY[0x253326120](a3 + 40))
    {
      swift_getObjectType();
      sub_24D39CF10();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return swift_unknownObjectWeakAssign();
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_24D39C930();
      os_log_type_t v28 = sub_24D39CDF0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_24D2B1000, v27, v28, "â˜Žï¸Ž FMIPConnectionManager: disconnect is not supported on this platform!", v29, 2u);
        MEMORY[0x253326010](v29, -1, -1);
      }

      os_log_type_t v30 = sub_24D39C930();
      os_log_type_t v31 = sub_24D39CDF0();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_24D2B1000, v30, v31, "â˜Žï¸Ž FMIPConnectionManager: disconnect performed", v32, 2u);
        MEMORY[0x253326010](v32, -1, -1);
      }

      sub_24D3236BC((uint64_t)&v38, 0);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
}

uint64_t sub_24D2C6D20()
{
  return sub_24D2C4C60(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_24D2C6D28()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D2C6D38()
{
  return sub_24D30A4C0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_24D2C6D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D2C6D50()
{
  return swift_release();
}

uint64_t sub_24D2C6D5C(uint64_t a1)
{
  return sub_24D2C6DF0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D2C4CFC);
}

uint64_t sub_24D2C6D74(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24D2C6D88()
{
  swift_release();

  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24D2C6DD8(uint64_t a1)
{
  return sub_24D2C6DF0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D2C546C);
}

uint64_t sub_24D2C6DF0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

void sub_24D2C6E0C()
{
  sub_24D2C58D8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D2C6E2C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D2C6E6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D2C6E94(uint64_t a1)
{
  uint64_t v2 = sub_24D2B7450((uint64_t *)&unk_269861100);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24D2C6EF4()
{
  unint64_t result = qword_269860F10;
  if (!qword_269860F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860F10);
  }
  return result;
}

uint64_t sub_24D2C6F48()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24D2C6F80()
{
  uint64_t v1 = sub_24D39C8A0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24D2C704C()
{
  uint64_t v1 = *(void *)(sub_24D39C8A0() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_24D2C6488(v2, v3);
}

uint64_t sub_24D2C70B0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24D2C70F0(uint64_t a1)
{
  return sub_24D2C6680(a1, *(void (**)(char *, uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D2C70FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D2C7144(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24D2C067C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D2C71C0(uint64_t a1, void *a2)
{
  return sub_24D2C71DC(a2);
}

void sub_24D2C71C8()
{
}

uint64_t sub_24D2C71D4(uint64_t a1, int a2)
{
  return sub_24D2C7ED4(a2);
}

uint64_t sub_24D2C71DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24D39CFA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = sub_24D39CFB0();
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  os_log_type_t v16 = (char *)&v40 - v15;
  id v17 = objc_msgSend(a1, sel_camera);
  sub_24D39CFC0();

  sub_24D2C8494((uint64_t)v16, (uint64_t)v14, MEMORY[0x263F8C968]);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 2, v4);
  if (v18)
  {
    if (v18 != 1)
    {
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_gotFirstARFrame)) {
        goto LABEL_8;
      }
      *(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_gotFirstARFrame) = 1;
      if (qword_2698602B0 != -1) {
        goto LABEL_30;
      }
      while (1)
      {
        uint64_t v19 = sub_24D39C950();
        sub_24D2B508C(v19, (uint64_t)qword_269869FD0);
        uint64_t v20 = sub_24D39C930();
        os_log_type_t v21 = sub_24D39CDF0();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v22 = 0;
          _os_log_impl(&dword_24D2B1000, v20, v21, "ðŸ§­ FMFindingViewCtrl: Got initial AR Frame", v22, 2u);
          MEMORY[0x253326010](v22, -1, -1);
        }

LABEL_8:
        uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_updateTorchPeriodicCount);
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v23 + 1;
        if (!v24) {
          break;
        }
        __break(1u);
LABEL_30:
        swift_once();
      }
      *(void *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_updateTorchPeriodicCount) = v25;
      if (__ROR8__(0xEEEEEEEEEEEEEEEFLL * v25 + 0x888888888888888, 1) <= 0x888888888888888uLL) {
        sub_24D307D30();
      }
    }
    return sub_24D2C84FC((uint64_t)v16, MEMORY[0x263F8C968]);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v14, v4);
  swift_beginAccess();
  if (sub_24D394298() != 4)
  {
    switch(sub_24D394298())
    {
      case 1u:
      case 2u:
      case 3u:
        char v26 = sub_24D39D4B0();
        swift_bridgeObjectRelease();
        if (v26) {
          break;
        }
        goto LABEL_24;
      case 4u:
        goto LABEL_24;
      default:
        swift_bridgeObjectRelease();
        break;
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v27 == *MEMORY[0x263F8C948] || (int v28 = v27, v27 == *MEMORY[0x263F8C958]))
  {
LABEL_24:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return sub_24D2C84FC((uint64_t)v16, MEMORY[0x263F8C968]);
  }
  if (v27 == *MEMORY[0x263F8C960])
  {
    id v29 = objc_msgSend(a1, sel_lightEstimate);
    if (v29)
    {
      os_log_type_t v30 = v29;
      objc_msgSend(v29, sel_ambientIntensity);
      if (v31 <= 500.0)
      {
        uint64_t v32 = *(void *)(v2
                        + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_insufficientFeaturesARTrackingErrorCount);
        BOOL v24 = __OFADD__(v32, 1);
        uint64_t v33 = v32 + 1;
        if (v24)
        {
          __break(1u);
          JUMPOUT(0x24D2C7798);
        }
        *(void *)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_insufficientFeaturesARTrackingErrorCount) = v33;
        if (v33 >= 2)
        {
          sub_24D308474(1, 1);
          uint64_t v34 = *(unsigned char **)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController);
          char v35 = v34[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState];
          v34[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState] = 6;
          uint64_t v36 = v34;
          sub_24D36C520(v35);

          os_log_type_t v30 = v36;
        }
      }
    }
    goto LABEL_24;
  }
  int v38 = *MEMORY[0x263F8C950];
  uint64_t v39 = *(void (**)(char *, uint64_t))(v5 + 8);
  v39(v10, v4);
  uint64_t result = sub_24D2C84FC((uint64_t)v16, MEMORY[0x263F8C968]);
  if (v28 != v38) {
    return ((uint64_t (*)(char *, uint64_t))v39)(v8, v4);
  }
  return result;
}

void sub_24D2C77AC()
{
  uint64_t v1 = v0;
  id v26 = (id)sub_24D39C700();
  id v2 = objc_msgSend(v26, sel_domain);
  uint64_t v3 = sub_24D39CAF0();
  uint64_t v5 = v4;

  if (v3 == sub_24D39CAF0() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_24D39D4B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      goto LABEL_9;
    }
  }
  if (objc_msgSend(v26, sel_code))
  {
LABEL_9:
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isInternalBuild) == 1)
    {
      sub_24D345D74(0xD00000000000001ALL, 0x800000024D3A5F30, 0, 0);
      sub_24D2B7450((uint64_t *)&unk_269861860);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_24D3A0050;
      swift_getErrorValue();
      uint64_t v10 = sub_24D39D520();
      uint64_t v12 = v11;
      *(void *)(v9 + 56) = MEMORY[0x263F8D310];
      *(void *)(v9 + 64) = sub_24D2B7494();
      *(void *)(v9 + 32) = v10;
      *(void *)(v9 + 40) = v12;
      uint64_t v13 = sub_24D39CB00();
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      sub_24D3435E8(v13, v15, 0, 0, 1, 0, 0);
      swift_bridgeObjectRelease();
    }
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_24D39C950();
    sub_24D2B508C(v16, (uint64_t)qword_269869FD0);
    id v17 = sub_24D39C930();
    os_log_type_t v18 = sub_24D39CDF0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_24D2B1000, v17, v18, "ðŸ§­ FMFindingViewCtrl: Resetiing", v19, 2u);
      MEMORY[0x253326010](v19, -1, -1);
    }

    id v20 = *(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
    sub_24D361008();
    sub_24D360CD4();

    sub_24D37CE0C();
    return;
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_24D39C950();
  sub_24D2B508C(v21, (uint64_t)qword_269869FD0);
  uint64_t v22 = sub_24D39C930();
  os_log_type_t v23 = sub_24D39CDF0();
  if (os_log_type_enabled(v22, v23))
  {
    BOOL v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v24 = 0;
    _os_log_impl(&dword_24D2B1000, v22, v23, "ðŸ§­ FMFindingViewCtrl: Resetiing", v24, 2u);
    MEMORY[0x253326010](v24, -1, -1);
  }

  id v25 = *(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
  sub_24D361008();
  sub_24D360CD4();

  sub_24D37CE0C();
}

uint64_t sub_24D2C7B94(double a1)
{
  uint64_t v3 = sub_24D39C990();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24D39C9D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(double *)(v11 + 24) = a1;
  uint64_t v12 = self;
  v1;
  if (objc_msgSend(v12, sel_isMainThread))
  {
    sub_24D367614(a1);
    return swift_release();
  }
  else
  {
    sub_24D2C8328();
    uint64_t v14 = (void *)sub_24D39CE90();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_24D2C82F0;
    *(void *)(v15 + 24) = v11;
    aBlock[4] = sub_24D2C83A0;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24D32194C;
    aBlock[3] = &unk_26FF86668;
    uint64_t v16 = _Block_copy(aBlock);
    uint64_t v19 = v7;
    id v17 = v16;
    swift_retain();
    swift_release();
    sub_24D39C9B0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_24D2C83E0();
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    MEMORY[0x253324EE0](0, v10, v6, v17);
    _Block_release(v17);
    swift_release();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  }
}

uint64_t sub_24D2C7ED4(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for FMFindingViewState();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (unsigned __int16 *)((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (unsigned __int16 *)((char *)&v51 - v8);
  unint64_t v10 = sub_24D30E1A8(a1);
  int v60 = a1;
  if (v10 == 0xD00000000000001DLL && v11 == 0x800000024D3A4BF0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
    long long v61 = 0u;
    long long v62 = 0u;
    id v14 = v13;
    sub_24D3025A0((uint64_t)&v61);
LABEL_11:

    sub_24D2BC948((uint64_t)&v61);
    goto LABEL_12;
  }
  char v12 = sub_24D39D4B0();
  swift_bridgeObjectRelease();
  if (v12) {
    goto LABEL_5;
  }
  if (sub_24D30E1A8(a1) == 0xD00000000000001CLL && v15 == 0x800000024D3A4C10)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    id v17 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
    long long v61 = 0u;
    long long v62 = 0u;
    id v14 = v17;
    sub_24D302C50((uint64_t)&v61);
    goto LABEL_11;
  }
  char v16 = sub_24D39D4B0();
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v18 = v2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  uint64_t v59 = type metadata accessor for FMFindingViewState;
  sub_24D2C8494(v18, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  int v57 = *v7;
  uint64_t v19 = v4[5];
  id v20 = (char *)v7 + v19;
  uint64_t v21 = (char *)v9 + v19;
  uint64_t v22 = sub_24D39C8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v21, v20, v22);
  os_log_type_t v23 = (uint64_t *)((char *)v7 + v4[6]);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  LOBYTE(v23) = *((unsigned char *)v7 + v4[7]);
  id v26 = (char *)v7 + v4[8];
  uint64_t v27 = *(void *)v26;
  uint64_t v28 = *((void *)v26 + 1);
  os_log_type_t v30 = (void *)*((void *)v26 + 2);
  id v29 = (void *)*((void *)v26 + 3);
  uint64_t v32 = *((void *)v26 + 5);
  uint64_t v54 = *((void *)v26 + 4);
  uint64_t v31 = v54;
  uint64_t v55 = v29;
  uint64_t v34 = *((void *)v26 + 7);
  uint64_t v52 = *((void *)v26 + 6);
  uint64_t v33 = v52;
  uint64_t v53 = v32;
  uint64_t v51 = v34;
  uint64_t v35 = *((void *)v26 + 8);
  uint64_t v36 = *((void *)v26 + 9);
  uint64_t v58 = v2;
  uint64_t v37 = *((void *)v26 + 10);
  uint64_t v38 = *((void *)v26 + 11);
  uint64_t v39 = v26[100];
  uint64_t v40 = *((unsigned int *)v26 + 24);
  uint64_t v56 = v40 | (v39 << 32);
  char v41 = *((unsigned char *)v7 + v4[10]);
  char v42 = *((unsigned char *)v7 + v4[11]);
  char v43 = *((unsigned char *)v7 + v4[12]);
  char v44 = *((unsigned char *)v7 + v4[13]);
  char v45 = *((unsigned char *)v7 + v4[14]);
  uint64_t v46 = (void *)((char *)v9 + v4[15]);
  *uint64_t v46 = 0;
  v46[1] = 0;
  *uint64_t v9 = v57;
  unint64_t v47 = (void *)((char *)v9 + v4[6]);
  void *v47 = v25;
  v47[1] = v24;
  *((unsigned char *)v9 + v4[7]) = (_BYTE)v23;
  uint64_t v48 = (char *)v9 + v4[8];
  *(void *)uint64_t v48 = v27;
  *((void *)v48 + 1) = v28;
  *((void *)v48 + 2) = v30;
  *((void *)v48 + 3) = v29;
  *((void *)v48 + 4) = v31;
  *((void *)v48 + 5) = v32;
  *((void *)v48 + 6) = v33;
  *((void *)v48 + 7) = v34;
  *((void *)v48 + 8) = v35;
  *((void *)v48 + 9) = v36;
  *((void *)v48 + 10) = v37;
  *((void *)v48 + 11) = v38;
  v48[100] = v39;
  *((_DWORD *)v48 + 24) = v40;
  *((unsigned char *)v9 + v4[9]) = v60;
  *((unsigned char *)v9 + v4[10]) = v41;
  *((unsigned char *)v9 + v4[11]) = v42;
  *((unsigned char *)v9 + v4[12]) = v43;
  *((unsigned char *)v9 + v4[13]) = v44;
  *((unsigned char *)v9 + v4[14]) = v45;
  swift_bridgeObjectRetain();
  sub_24D2B6F48(v27, v28, v30, v55, v54, v53, v52, v51, v35, v36, v37, v38, v56);
  uint64_t v49 = v59;
  sub_24D2C84FC((uint64_t)v7, (uint64_t (*)(void))v59);
  sub_24D377624(v9);
  return sub_24D2C84FC((uint64_t)v9, (uint64_t (*)(void))v49);
}

uint64_t sub_24D2C82B8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24D2C82F0()
{
  sub_24D367614(*(double *)(v0 + 24));
}

unint64_t sub_24D2C8328()
{
  unint64_t result = qword_269860F20;
  if (!qword_269860F20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269860F20);
  }
  return result;
}

uint64_t sub_24D2C8368()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D2C83A0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24D2C83C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D2C83D8()
{
  return swift_release();
}

unint64_t sub_24D2C83E0()
{
  unint64_t result = qword_269860EE0;
  if (!qword_269860EE0)
  {
    sub_24D39C990();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860EE0);
  }
  return result;
}

unint64_t sub_24D2C8438()
{
  unint64_t result = qword_269860EF0;
  if (!qword_269860EF0)
  {
    sub_24D2C067C((uint64_t *)&unk_2698610D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269860EF0);
  }
  return result;
}

uint64_t sub_24D2C8494(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24D2C84FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24D2C855C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5 = *(_DWORD *)(a2 + 96);
  char v6 = *(unsigned char *)(a2 + 100);
  uint64_t v7 = *(uint64_t (**)(uint64_t, _OWORD *))(a5 + 8);
  long long v8 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  uint64_t v12[3] = v9;
  long long v10 = *(_OWORD *)(a2 + 80);
  v12[4] = *(_OWORD *)(a2 + 64);
  v12[5] = v10;
  char v14 = v6;
  int v13 = v5;
  return v7(a1, v12);
}

uint64_t sub_24D2C85B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __int16 v6 = *(_WORD *)(a2 + 96);
  char v7 = *(unsigned char *)(a2 + 98);
  long long v8 = *(uint64_t (**)(uint64_t, _OWORD *))(a6 + 16);
  long long v9 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v9;
  long long v10 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v10;
  long long v11 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v11;
  __int16 v14 = v6;
  char v15 = v7;
  return v8(a1, v13);
}

uint64_t sub_24D2C8614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_24D2C8628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_24D2C863C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24D2C8650(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_24D2C8664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_24D2C8678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_24D2C868C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t sub_24D2C86A0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_24D2C86B4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_24D2C86C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_24D2C86DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_24D2C86F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

id sub_24D2C8780()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingLocalizer.DelegateTrampoline();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24D2C8814(void *a1, __int16 *a2, void *a3)
{
  id v138 = a3;
  uint64_t v6 = sub_24D2B7450((uint64_t *)&unk_269861120);
  MEMORY[0x270FA5388](v6 - 8);
  v148 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_24D2B7450((uint64_t *)&unk_269862F50);
  uint64_t v146 = *(void *)(v152 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v152);
  uint64_t v151 = (uint64_t)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v145 = (uint64_t)&v131 - v10;
  uint64_t v150 = sub_24D2B7450((uint64_t *)&unk_269861130);
  unint64_t v149 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  char v12 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24D2B7450((uint64_t *)&unk_269861100);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  v153 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  v143 = (char *)&v131 - v16;
  uint64_t v154 = sub_24D39C8A0();
  uint64_t v134 = *(void *)(v154 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v154);
  v144 = (char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v147 = (char *)&v131 - v19;
  int v20 = *a2;
  uint64_t v132 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer] = 0;
  uint64_t v21 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_poseProvider;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_poseProvider] = 0;
  uint64_t v22 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManager;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManager] = 0;
  uint64_t v23 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID] = MEMORY[0x263F8EE80];
  uint64_t v24 = &v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement];
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((_OWORD *)v24 + 2) = 0u;
  *((_OWORD *)v24 + 3) = 0u;
  *((_OWORD *)v24 + 4) = 0u;
  *((_OWORD *)v24 + 5) = 0u;
  *(_DWORD *)(v24 + 95) = 0;
  uint64_t v25 = &v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_mockIndex];
  *(void *)uint64_t v25 = 0;
  v25[8] = 1;
  id v26 = objc_allocWithZone((Class)type metadata accessor for FMFindingLocalizer.DelegateTrampoline());
  v133 = v3;
  v139 = v3;
  id v136 = objc_msgSend(v26, sel_init);
  v140 = a1;
  int v135 = (unsigned __int16)v20;
  if ((v20 & 0x80000000) == 0)
  {
    if ((v20 & 0xFE) != 2)
    {
      char v41 = v140;
      uint64_t v42 = v140[2];
      if (v42)
      {
        uint64_t v155 = MEMORY[0x263F8EE78];
        sub_24D39D260();
        LODWORD(v142) = v20;
        uint64_t v43 = (uint64_t)(v41 + 4);
        v137 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v134 + 56);
        v141 = (unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48);
        char v44 = (void (**)(char *, uint64_t))(v134 + 8);
        do
        {
          sub_24D2B6CE8(v43, (uint64_t)&v163);
          sub_24D2B6CE8((uint64_t)&v163, (uint64_t)v157);
          sub_24D2B7450((uint64_t *)&unk_2698615F0);
          sub_24D2B7450((uint64_t *)&unk_269861150);
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v162 = 0;
            long long v160 = 0u;
            long long v161 = 0u;
          }
          uint64_t v46 = *((void *)&v164 + 1);
          uint64_t v47 = v165;
          sub_24D2B8A34(&v163, *((uint64_t *)&v164 + 1));
          (*(void (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
          sub_24D2BBF50((uint64_t)&v160, (uint64_t)v157, (uint64_t *)&unk_269861600);
          uint64_t v48 = v158;
          if (v158)
          {
            uint64_t v49 = v159;
            sub_24D2B8A34(v157, v158);
            uint64_t v50 = v143;
            (*(void (**)(uint64_t, uint64_t))(v49 + 16))(v48, v49);
            sub_24D2B6E58((uint64_t)v157);
            uint64_t v51 = v154;
          }
          else
          {
            sub_24D2BBFB4((uint64_t)v157, (uint64_t *)&unk_269861600);
            uint64_t v50 = v143;
            uint64_t v51 = v154;
            (*v137)(v143, 1, 1, v154);
          }
          uint64_t v52 = (void *)sub_24D39C860();
          if ((*v141)(v50, 1, v51) == 1)
          {
            char v45 = 0;
          }
          else
          {
            char v45 = (void *)sub_24D39C860();
            (*v44)(v50, v51);
          }
          objc_msgSend(objc_allocWithZone(MEMORY[0x263F62590]), sel_initWithUUID_productUUID_isOwned_, v52, v45, v142 != 1);

          (*v44)(v147, v51);
          sub_24D2BBFB4((uint64_t)&v160, (uint64_t *)&unk_269861600);
          sub_24D2B6E58((uint64_t)&v163);
          sub_24D39D240();
          sub_24D39D270();
          sub_24D39D280();
          sub_24D39D250();
          v43 += 40;
          --v42;
        }
        while (v42);
      }
      sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
      id v53 = v136;
      uint64_t v54 = (void *)sub_24D39CE90();
      id v55 = objc_allocWithZone(MEMORY[0x263F62580]);
      sub_24D2BC100(0, &qword_2698610F8);
      uint64_t v56 = (void *)sub_24D39CC00();
      swift_bridgeObjectRelease();
      id v57 = objc_msgSend(v55, sel_initWithDelegate_queue_id_, v53, v54, v56);

      uint64_t v32 = *(void **)&v133[v132];
      *(void *)&v133[v132] = v57;
      goto LABEL_22;
    }
    id v27 = v138;
    if (qword_2698602D0 == -1)
    {
LABEL_4:
      uint64_t v28 = (void *)qword_26986A030;
      id v29 = *(void **)(qword_26986A030 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession);
      *(void *)(qword_26986A030 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession) = v27;
      id v30 = v28;
      id v31 = v27;

      uint64_t v32 = *(void **)&v133[v23];
      *(void *)&v133[v23] = v30;
LABEL_22:

      uint64_t v33 = v140;
LABEL_23:
      uint64_t v34 = v154;
      goto LABEL_24;
    }
LABEL_85:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v33 = a1;
  if (!a1[2])
  {
    uint64_t v165 = 0;
    long long v163 = 0u;
    long long v164 = 0u;
    sub_24D2BBFB4((uint64_t)&v163, &qword_269860AA8);
    goto LABEL_23;
  }
  sub_24D2B6CE8((uint64_t)(a1 + 4), (uint64_t)&v163);
  sub_24D2BBFB4((uint64_t)&v163, &qword_269860AA8);
  uint64_t v34 = v154;
  if (v138)
  {
    if ((v135 & 0x7E00) != 0x200)
    {
      uint64_t v121 = qword_2698602C8;
      id v122 = v138;
      if (v121 != -1) {
        swift_once();
      }
      v123 = (void *)qword_26986A028;
      uint64_t v124 = v133;
      v125 = *(void **)&v133[v22];
      *(void *)&v133[v22] = qword_26986A028;
      id v126 = v123;

      id v127 = objc_allocWithZone((Class)type metadata accessor for FMR1DevicePoseProvider());
      id v128 = v136;
      uint64_t v129 = (char *)objc_msgSend(v127, sel_initWithARSession_, v122);
      *(void *)&v129[OBJC_IVAR____TtC11FMFindingUI22FMR1DevicePoseProvider_frameDelegate + 8] = &off_26FF86690;
      swift_unknownObjectWeakAssign();
      objc_super v130 = v129;
      objc_msgSend(v130, sel_setDelegate_, v128);

      uint64_t v40 = *(void **)&v124[v21];
      *(void *)&v124[v21] = v130;
      goto LABEL_83;
    }
    uint64_t v35 = qword_2698602D0;
    id v27 = v138;
    id v36 = v138;
    if (v35 != -1) {
      goto LABEL_87;
    }
    goto LABEL_9;
  }
  while (1)
  {
LABEL_24:
    int64_t v58 = v33[2];
    uint64_t v23 = MEMORY[0x263F8EE78];
    if (v58)
    {
      *(void *)&long long v160 = MEMORY[0x263F8EE78];
      sub_24D3836B4(0, v58, 0);
      uint64_t v59 = (uint64_t)(v33 + 4);
      uint64_t v23 = v160;
      do
      {
        sub_24D2B6CE8(v59, (uint64_t)&v163);
        uint64_t v60 = *(int *)(v150 + 48);
        uint64_t v61 = *((void *)&v164 + 1);
        uint64_t v62 = v165;
        sub_24D2B8A34(&v163, *((uint64_t *)&v164 + 1));
        (*(void (**)(uint64_t, uint64_t))(v62 + 16))(v61, v62);
        *(void *)&v12[v60] = 1;
        sub_24D2B6E58((uint64_t)&v163);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24D3836B4(0, *(void *)(v23 + 16) + 1, 1);
          uint64_t v23 = v160;
        }
        unint64_t v64 = *(void *)(v23 + 16);
        unint64_t v63 = *(void *)(v23 + 24);
        uint64_t v34 = v154;
        if (v64 >= v63 >> 1)
        {
          sub_24D3836B4(v63 > 1, v64 + 1, 1);
          uint64_t v23 = v160;
        }
        *(void *)(v23 + 16) = v64 + 1;
        sub_24D2C05AC((uint64_t)v12, v23+ ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80))+ *(void *)(v149 + 72) * v64, (uint64_t *)&unk_269861130);
        v59 += 40;
        --v58;
      }
      while (v58);
    }
    if (*(void *)(v23 + 16))
    {
      sub_24D2B7450((uint64_t *)&unk_269861140);
      uint64_t v65 = sub_24D39D300();
    }
    else
    {
      uint64_t v65 = MEMORY[0x263F8EE80];
    }
    char v12 = (char *)v140;
    *(void *)&long long v163 = v65;
    uint64_t v66 = swift_bridgeObjectRetain();
    uint64_t v67 = 0;
    sub_24D2D1CE4(v66, 1, &v163);
    swift_bridgeObjectRelease();
    *(void *)&v139[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findableStatesByUUID] = v163;
    id v68 = (unsigned int (**)(char *, uint64_t, uint64_t))*((void *)v12 + 2);
    if (v68)
    {
      v137 = 0;
      uint64_t v69 = (uint64_t)(v12 + 32);
      uint64_t v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48);
      v143 = (char *)(v134 + 32);
      uint64_t v71 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v146 + 56);
      v147 = (char *)(v134 + 56);
      uint64_t v150 = v146 + 48;
      swift_bridgeObjectRetain();
      unint64_t v72 = MEMORY[0x263F8EE78];
      v141 = v68;
      uint64_t v73 = (uint64_t)v148;
      uint64_t v23 = (uint64_t)v153;
      v142 = v71;
      while (1)
      {
        sub_24D2B6CE8(v69, (uint64_t)&v163);
        sub_24D2B6CE8((uint64_t)&v163, (uint64_t)v157);
        sub_24D2B7450((uint64_t *)&unk_2698615F0);
        sub_24D2B7450((uint64_t *)&unk_269861150);
        if ((swift_dynamicCast() & 1) == 0)
        {
          uint64_t v162 = 0;
          long long v160 = 0u;
          long long v161 = 0u;
        }
        sub_24D2BBF50((uint64_t)&v160, (uint64_t)v157, (uint64_t *)&unk_269861600);
        uint64_t v74 = v158;
        if (!v158) {
          break;
        }
        uint64_t v75 = v159;
        sub_24D2B8A34(v157, v158);
        float v76 = *(void (**)(uint64_t, uint64_t))(v75 + 16);
        uint64_t v77 = v75;
        uint64_t v23 = (uint64_t)v153;
        v76(v74, v77);
        sub_24D2B6E58((uint64_t)v157);
        if ((*v70)(v23, 1, v34) == 1) {
          goto LABEL_44;
        }
        unint64_t v149 = v72;
        uint64_t v78 = *(void (**)(char *, char *, uint64_t))v143;
        uint64_t v79 = v70;
        uint64_t v80 = v144;
        (*(void (**)(char *, uint64_t, uint64_t))v143)(v144, v23, v34);
        uint64_t v81 = &v148[*(int *)(v152 + 48)];
        uint64_t v82 = *((void *)&v164 + 1);
        uint64_t v83 = v165;
        sub_24D2B8A34(&v163, *((uint64_t *)&v164 + 1));
        float v84 = *(void (**)(uint64_t, uint64_t))(v83 + 16);
        uint64_t v85 = v82;
        uint64_t v86 = v83;
        uint64_t v23 = (uint64_t)v153;
        uint64_t v34 = v154;
        v84(v85, v86);
        id v87 = v80;
        uint64_t v70 = v79;
        uint64_t v71 = v142;
        v78(v81, v87, v34);
        unint64_t v72 = v149;
        uint64_t v73 = (uint64_t)v148;
        uint64_t v88 = 0;
LABEL_45:
        uint64_t v89 = v152;
        (*v71)(v73, v88, 1, v152);
        sub_24D2BBFB4((uint64_t)&v160, (uint64_t *)&unk_269861600);
        sub_24D2B6E58((uint64_t)&v163);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v150)(v73, 1, v89) == 1)
        {
          sub_24D2BBFB4(v73, (uint64_t *)&unk_269861120);
        }
        else
        {
          uint64_t v90 = v145;
          sub_24D2C05AC(v73, v145, (uint64_t *)&unk_269862F50);
          sub_24D2C05AC(v90, v151, (uint64_t *)&unk_269862F50);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v72 = sub_24D382F28(0, *(void *)(v72 + 16) + 1, 1, v72);
          }
          unint64_t v92 = *(void *)(v72 + 16);
          unint64_t v91 = *(void *)(v72 + 24);
          if (v92 >= v91 >> 1) {
            unint64_t v72 = sub_24D382F28(v91 > 1, v92 + 1, 1, v72);
          }
          *(void *)(v72 + 16) = v92 + 1;
          sub_24D2C05AC(v151, v72+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ *(void *)(v146 + 72) * v92, (uint64_t *)&unk_269862F50);
        }
        v69 += 40;
        id v68 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)v68 - 1);
        if (!v68)
        {
          char v12 = (char *)v140;
          swift_bridgeObjectRelease();
          id v68 = v141;
          uint64_t v67 = v137;
          if (*(void *)(v72 + 16)) {
            goto LABEL_52;
          }
LABEL_54:
          uint64_t v93 = MEMORY[0x263F8EE80];
          goto LABEL_55;
        }
      }
      sub_24D2BBFB4((uint64_t)v157, (uint64_t *)&unk_269861600);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v147)(v23, 1, 1, v34);
LABEL_44:
      sub_24D2BBFB4(v23, (uint64_t *)&unk_269861100);
      uint64_t v88 = 1;
      goto LABEL_45;
    }
    if (!*(void *)(MEMORY[0x263F8EE78] + 16)) {
      goto LABEL_54;
    }
LABEL_52:
    sub_24D2B7450((uint64_t *)&unk_269861160);
    uint64_t v93 = sub_24D39D300();
LABEL_55:
    *(void *)&long long v163 = v93;
    uint64_t v94 = swift_bridgeObjectRetain();
    sub_24D2D1798(v94, 1, &v163);
    if (v67) {
      break;
    }
    swift_bridgeObjectRelease();
    uint64_t v95 = v139;
    *(void *)&v139[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_productUUIDsByFindableUUID] = v163;
    *(_WORD *)&v95[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology] = v135;
    id v27 = (id)0x269860000;
    id v96 = v136;
    *(void *)&v95[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_delegateTrampoline] = v136;
    uint64_t v33 = v96;

    v97 = (objc_class *)type metadata accessor for FMFindingLocalizer();
    v156.receiver = v95;
    v156.super_class = v97;
    double v98 = (char *)objc_msgSendSuper2(&v156, sel_init);
    swift_unknownObjectWeakAssign();
    unsigned int v99 = *(__int16 *)&v98[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology];
    if ((v99 & 0x80000000) == 0)
    {
      if (v68)
      {
        if (!*((void *)v12 + 2))
        {
          __break(1u);
          goto LABEL_85;
        }
        sub_24D2B6CE8((uint64_t)(v12 + 32), (uint64_t)&v160);
      }
      else
      {
        uint64_t v162 = 0;
        long long v160 = 0u;
        long long v161 = 0u;
      }
      double v100 = v98;
      swift_bridgeObjectRelease();
      if (*((void *)&v161 + 1))
      {
        uint64_t v101 = sub_24D2B6F04(&v160, (uint64_t)&v163);
        if ((v99 & 0xFE) != 2) {
          goto LABEL_78;
        }
        double v102 = *(void **)&v100[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager];
        if (!v102) {
          goto LABEL_78;
        }
        MEMORY[0x270FA5388](v101);
        *(&v131 - 6) = (uint64_t)&v163;
        *(&v131 - 5) = (uint64_t)v102;
        id v103 = v138;
        *(&v131 - 4) = (uint64_t)v138;
        *(&v131 - 3) = (uint64_t)v33;
        *(&v131 - 2) = (uint64_t)&off_26FF866A8;
        *((_WORD *)&v131 - 4) = v135;
        type metadata accessor for FMNearbyInteractionManagerSubscription();
        double v104 = v33;
        id v105 = v102;
        sub_24D39CEA0();

        uint64_t v106 = v160;
        sub_24D2B6E58((uint64_t)&v163);
        double v107 = *(void **)&v100[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription];
        *(void *)&v100[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription] = v106;

        return (uint64_t)v98;
      }
      goto LABEL_74;
    }
    if (!v68)
    {
      uint64_t v162 = 0;
      long long v160 = 0u;
      long long v161 = 0u;
LABEL_70:
      double v100 = v98;
      swift_bridgeObjectRelease();
      if (*((void *)&v161 + 1))
      {
        uint64_t v108 = sub_24D2B6F04(&v160, (uint64_t)&v163);
        if (((v99 >> 8) & 0x7E) == 2)
        {
          v109 = *(void **)&v100[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager];
          if (v109)
          {
            MEMORY[0x270FA5388](v108);
            *(&v131 - 6) = (uint64_t)&v163;
            *(&v131 - 5) = (uint64_t)v109;
            id v110 = v138;
            *(&v131 - 4) = (uint64_t)v138;
            *(&v131 - 3) = (uint64_t)v33;
            *(&v131 - 2) = (uint64_t)&off_26FF866A8;
            *((_WORD *)&v131 - 4) = v135;
            type metadata accessor for FMNearbyInteractionManagerSubscription();
            id v111 = v33;
            id v112 = v109;
            sub_24D39CEA0();

            uint64_t v113 = v160;
            sub_24D2B6E58((uint64_t)&v163);
            uint64_t v114 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription;
            goto LABEL_77;
          }
LABEL_78:

          sub_24D2B6E58((uint64_t)&v163);
        }
        else
        {
          v115 = *(void **)&v100[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManager];
          if (!v115) {
            goto LABEL_78;
          }
          MEMORY[0x270FA5388](v108);
          *(&v131 - 6) = (uint64_t)&v163;
          *(&v131 - 5) = (uint64_t)v115;
          *(&v131 - 4) = (uint64_t)v33;
          *(&v131 - 3) = (uint64_t)&off_26FF866F8;
          *((unsigned char *)&v131 - 16) = v116;
          type metadata accessor for FMR1ProximityManagerSubscription();
          v117 = v33;
          id v118 = v115;
          sub_24D39CEA0();

          uint64_t v113 = v160;
          sub_24D2B6E58((uint64_t)&v163);
          uint64_t v114 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription;
LABEL_77:
          __int16 v119 = *(void **)&v100[v114];
          *(void *)&v100[v114] = v113;
        }
        return (uint64_t)v98;
      }
LABEL_74:

      sub_24D2BBFB4((uint64_t)&v160, &qword_269860AA8);
      return (uint64_t)v98;
    }
    if (*((void *)v12 + 2))
    {
      sub_24D2B6CE8((uint64_t)(v12 + 32), (uint64_t)&v160);
      goto LABEL_70;
    }
    __break(1u);
LABEL_87:
    swift_once();
LABEL_9:
    uint64_t v37 = (void *)qword_26986A030;
    uint64_t v38 = *(void **)(qword_26986A030 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession);
    *(void *)(qword_26986A030 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession) = v27;
    id v39 = v37;

    uint64_t v40 = *(void **)&v133[v23];
    *(void *)&v133[v23] = v39;
LABEL_83:
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

id sub_24D2C9C30()
{
  uint64_t v1 = v0;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription];
  if (v2)
  {
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManager];
    if (v3)
    {
      id v4 = v2;
      id v5 = v3;
      sub_24D2F3A40(v4);
    }
  }
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription];
  if (!v6) {
    goto LABEL_7;
  }
  uint64_t v7 = *(char **)&v1[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager];
  if (!v7) {
    goto LABEL_7;
  }
  uint64_t v8 = *(NSObject **)&v7[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_serialQueue];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v6;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_24D2D8DE4;
  *(void *)(v10 + 24) = v9;
  v18[4] = sub_24D2C6D38;
  v18[5] = v10;
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 1107296256;
  v18[2] = sub_24D30A4E8;
  v18[3] = &unk_26FF868C0;
  uint64_t v11 = _Block_copy(v18);
  id v12 = v6;
  uint64_t v13 = v7;
  id v14 = v12;
  uint64_t v15 = v13;
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  id result = (id)swift_release();
  if (v8)
  {
    __break(1u);
  }
  else
  {
LABEL_7:
    uint64_t v17 = (objc_class *)type metadata accessor for FMFindingLocalizer();
    v19.receiver = v1;
    v19.super_class = v17;
    return objc_msgSendSuper2(&v19, sel_dealloc);
  }
  return result;
}

uint64_t sub_24D2C9FD0()
{
  uint64_t v0 = sub_24D39D600();
  sub_24D34315C(9, v0, v1);
  sub_24D2C3E44();
  sub_24D39CB60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 7876668;
}

void sub_24D2CA0A4()
{
  unint64_t v1 = v0;
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24D39C950();
  sub_24D2B508C(v2, (uint64_t)qword_269869FD0);
  uint64_t v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_24D2B1000, v3, v4, "ðŸ§­ FMFindingLocalizer: Resetting", v5, 2u);
    MEMORY[0x253326010](v5, -1, -1);
  }

  sub_24D2CA7D8();
  int v6 = *(__int16 *)&v1[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology];
  if ((v6 & 0x80000000) == 0)
  {
    if ((v6 & 0xFE) == 2)
    {
      if (qword_2698602D0 != -1) {
        swift_once();
      }
      uint64_t v7 = (void *)qword_26986A030;
      uint64_t v8 = *(void **)(qword_26986A030 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession);
      *(void *)(qword_26986A030 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession) = 0;

      id v19 = *(id *)&v1[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager];
      *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManager] = v7;
      id v9 = v7;
    }
    else
    {
      uint64_t v10 = v1;
      uint64_t v11 = swift_bridgeObjectRetain();
      sub_24D2D6B20(v11, (uint64_t)v10, v6);
      swift_bridgeObjectRelease();

      id v12 = *(void **)&v10[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_delegateTrampoline];
      sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
      id v13 = v12;
      id v14 = (void *)sub_24D39CE90();
      id v15 = objc_allocWithZone(MEMORY[0x263F62580]);
      sub_24D2BC100(0, &qword_2698610F8);
      uint64_t v16 = (void *)sub_24D39CC00();
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(v15, sel_initWithDelegate_queue_id_, v13, v14, v16);

      uint64_t v18 = *(void **)&v10[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer];
      *(void *)&v10[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer] = v17;
    }
  }
}

void sub_24D2CA340()
{
  v37[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (void *)((char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24D39C950();
  sub_24D2B508C(v4, (uint64_t)qword_269869FD0);
  id v5 = v0;
  int v6 = sub_24D39C930();
  os_log_type_t v7 = sub_24D39CDF0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    id v9 = (void *)swift_slowAlloc();
    uint64_t v35 = v3;
    uint64_t v10 = v9;
    v34[2] = v1;
    *(_DWORD *)uint64_t v8 = 136315138;
    v37[0] = v9;
    v34[1] = v8 + 4;
    sub_24D39C8A0();
    type metadata accessor for PRBTLocalizerState(0);
    sub_24D2D8CF8((unint64_t *)&unk_2698610C0, MEMORY[0x263F07508]);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24D39CA90();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_24D2B8328(v11, v13, (uint64_t *)v37);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v6, v7, "ðŸ§­ FMFindingLocalizer: Starting localizer for %s", v8, 0xCu);
    swift_arrayDestroy();
    id v14 = v10;
    uint64_t v3 = v35;
    MEMORY[0x253326010](v14, -1, -1);
    MEMORY[0x253326010](v8, -1, -1);
  }
  else
  {
  }
  __int16 v15 = *(_WORD *)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology];
  if (v15 < 0)
  {
    if ((v15 & 0x7E00) == 0x200)
    {
      id v19 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription];
      if (!v19) {
        return;
      }
      id v17 = v19;
      char v18 = 0;
      goto LABEL_13;
    }
    id v27 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription];
    if (v27)
    {
      uint64_t v28 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_poseProvider];
      id v29 = v27;
      id v30 = v28;
      sub_24D2F1248(v28);
    }
  }
  else
  {
    if ((v15 & 0xFE) == 2)
    {
      uint64_t v16 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription];
      if (!v16) {
        return;
      }
      id v17 = v16;
      char v18 = 1;
LABEL_13:
      sub_24D2E022C(v18);

      return;
    }
    int v20 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer];
    if (v20)
    {
      id v21 = v20;
      uint64_t v22 = swift_bridgeObjectRetain();
      sub_24D3592A4(v22);
      swift_bridgeObjectRelease();
      sub_24D39C8A0();
      uint64_t v23 = (void *)sub_24D39CC00();
      swift_release();
      v37[0] = 0;
      unsigned int v24 = objc_msgSend(v21, sel_startRangingOn_withError_, v23, v37);

      id v25 = v37[0];
      if (v24)
      {
        id v26 = v25;
      }
      else
      {
        uint64_t v35 = v37[0];
        id v31 = v37[0];
        uint64_t v32 = (void *)sub_24D39C710();

        swift_willThrow();
        *uint64_t v3 = v32;
        swift_storeEnumTagMultiPayload();
        id v33 = v32;
        sub_24D2CAC5C((uint64_t)v3, 0);

        sub_24D2D7064((uint64_t)v3);
      }
    }
  }
}

void sub_24D2CA7D8()
{
  v32[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (void *)((char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_24D39C950();
  sub_24D2B508C(v4, (uint64_t)qword_269869FD0);
  id v5 = v0;
  int v6 = sub_24D39C930();
  os_log_type_t v7 = sub_24D39CDF0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    id v9 = (void *)swift_slowAlloc();
    id v30 = v3;
    uint64_t v10 = v9;
    v29[2] = v1;
    *(_DWORD *)uint64_t v8 = 136315138;
    v32[0] = v9;
    v29[1] = v8 + 4;
    sub_24D39C8A0();
    type metadata accessor for PRBTLocalizerState(0);
    sub_24D2D8CF8((unint64_t *)&unk_2698610C0, MEMORY[0x263F07508]);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24D39CA90();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_24D2B8328(v11, v13, (uint64_t *)v32);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v6, v7, "ðŸ§­ FMFindingLocalizer: Stopping localizer for %s", v8, 0xCu);
    swift_arrayDestroy();
    id v14 = v10;
    uint64_t v3 = v30;
    MEMORY[0x253326010](v14, -1, -1);
    MEMORY[0x253326010](v8, -1, -1);
  }
  else
  {
  }
  if (*(void *)(*(void *)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_delegateTrampoline]
                 + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_updateRangeEstimateWatchdogWorkItem))
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  __int16 v15 = *(_WORD *)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology];
  if (v15 < 0)
  {
    if ((v15 & 0x7E00) != 0x200)
    {
      id v25 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription];
      if (!v25) {
        return;
      }
      id v24 = v25;
      sub_24D2F199C();
      goto LABEL_20;
    }
LABEL_16:
    uint64_t v23 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_nearbyInteractionManagerSubscription];
    if (!v23) {
      return;
    }
    id v24 = v23;
    sub_24D2E0B28();
LABEL_20:

    return;
  }
  if ((v15 & 0xFE) == 2) {
    goto LABEL_16;
  }
  uint64_t v16 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_localizer];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = swift_bridgeObjectRetain();
    sub_24D3592A4(v18);
    swift_bridgeObjectRelease();
    sub_24D39C8A0();
    id v19 = (void *)sub_24D39CC00();
    swift_release();
    v32[0] = 0;
    unsigned int v20 = objc_msgSend(v17, sel_stopRangingOn_withError_, v19, v32);

    id v21 = v32[0];
    if (v20)
    {
      id v22 = v21;
    }
    else
    {
      id v30 = v32[0];
      id v26 = v32[0];
      id v27 = (void *)sub_24D39C710();

      swift_willThrow();
      *uint64_t v3 = v27;
      swift_storeEnumTagMultiPayload();
      id v28 = v27;
      sub_24D2CAC5C(v3, 0);

      sub_24D2D7064((uint64_t)v3);
    }
  }
}

uint64_t sub_24D2CAC5C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FMFindingLocalizerError();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v27 - v10;
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_24D39C950();
  sub_24D2B508C(v12, (uint64_t)qword_269869FD0);
  sub_24D2D8D40(a1, (uint64_t)v11);
  unint64_t v13 = sub_24D39C930();
  os_log_type_t v14 = sub_24D39CDF0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = a1;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    v30[0] = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    sub_24D2D8D40((uint64_t)v11, (uint64_t)v9);
    uint64_t v18 = sub_24D39CB20();
    uint64_t v29 = sub_24D2B8328(v18, v19, v30);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    sub_24D2D7064((uint64_t)v11);
    *(_WORD *)(v16 + 12) = 1024;
    LODWORD(v29) = a2 & 1;
    sub_24D39D070();
    _os_log_impl(&dword_24D2B1000, v13, v14, "ðŸ§­ FMFindingLocalizer: Did fail with error: %s, shouldRestart: %{BOOL}d", (uint8_t *)v16, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x253326010](v17, -1, -1);
    uint64_t v20 = v16;
    a1 = v28;
    MEMORY[0x253326010](v20, -1, -1);
  }
  else
  {
    sub_24D2D7064((uint64_t)v11);
  }

  uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_delegateTrampoline]
      + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
  uint64_t result = MEMORY[0x253326120](v21);
  if (result)
  {
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t ObjectType = swift_getObjectType();
    void v30[3] = type metadata accessor for FMFindingLocalizer();
    v30[4] = (uint64_t)&off_26FF86750;
    v30[0] = (uint64_t)v3;
    id v25 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v23 + 24);
    id v26 = v3;
    v25(v30, a1, ObjectType, v23);
    swift_unknownObjectRelease();
    uint64_t result = sub_24D2B6E58((uint64_t)v30);
  }
  if (a2)
  {
    sub_24D2CA0A4();
    return sub_24D2CA340();
  }
  return result;
}

uint64_t type metadata accessor for FMFindingLocalizer()
{
  return self;
}

uint64_t type metadata accessor for FMFindingLocalizer.DelegateTrampoline()
{
  return self;
}

void sub_24D2CAFB0(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(*v1 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology);
}

void sub_24D2CAFC8()
{
}

void sub_24D2CAFEC()
{
}

void sub_24D2CB010()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_proximityManagerSubscription);
  if (v1)
  {
    id v2 = v1;
    sub_24D2F50EC();
  }
}

uint64_t sub_24D2CB094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v6 = sub_24D39C8A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D39C880();
  sub_24D2D70C0((uint64_t)v9, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_24D2CB1CC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x253326120](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v8)
  {
    id v9 = (void *)v8;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_24D39C950();
    sub_24D2B508C(v10, (uint64_t)qword_269869FD0);
    id v11 = a1;
    uint64_t v12 = sub_24D39C930();
    os_log_type_t v13 = sub_24D39CDF0();
    os_log_type_t v14 = &selRef_lightEstimate;
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v39 = v4;
      uint64_t v16 = v15;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v38 = v5;
      uint64_t v18 = v17;
      *(void *)&v41[0] = v17;
      *(_DWORD *)uint64_t v16 = 136315394;
      id v19 = objc_msgSend(v11, sel_uuid);
      sub_24D39C880();

      sub_24D2D8CF8((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
      uint64_t v20 = sub_24D39D490();
      uint64_t v37 = v2;
      unint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v39);
      v40[0] = sub_24D2B8328(v20, v22, (uint64_t *)v41);
      sub_24D39D070();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      v40[0] = objc_msgSend(v11, sel_proximityLevel);
      type metadata accessor for PRBTProximityLevel(0);
      uint64_t v23 = sub_24D39CB20();
      v40[0] = sub_24D2B8328(v23, v24, (uint64_t *)v41);
      uint64_t v2 = v37;
      os_log_type_t v14 = &selRef_lightEstimate;
      sub_24D39D070();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D2B1000, v12, v13, "FMFindingLocalizer: Did update BT proximity measurement for %s: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      uint64_t v25 = v18;
      uint64_t v5 = v38;
      MEMORY[0x253326010](v25, -1, -1);
      uint64_t v26 = v16;
      uint64_t v4 = v39;
      MEMORY[0x253326010](v26, -1, -1);
    }
    else
    {
    }
    uint64_t v27 = (char *)[v11 v14[3]];
    if ((unint64_t)(v27 - 1) >= 4)
    {
      if (!v27)
      {
        uint64_t v31 = 83886080;
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v28 = (char *)[v11 v14[3]];
      char v29 = (_BYTE)v28 - 1;
      if ((unint64_t)(v28 - 1) <= 3)
      {
        unint64_t v30 = (unint64_t)objc_msgSend(v11, sel_proximityTrend);
        if (v30 >= 4)
        {
          sub_24D39D2B0();
          __break(1u);
          return;
        }
        uint64_t v31 = (((0x2010100u >> (8 * v29)) & 3) << 16) | (0x1030200u >> (8 * v30) << 24) | 0x300000000;
        goto LABEL_14;
      }
    }
    uint64_t v31 = 0x4000000;
LABEL_14:
    memset(v41, 0, sizeof(v41));
    int v42 = v31;
    char v43 = BYTE4(v31);
    uint64_t v32 = v2
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    if (MEMORY[0x253326120](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      uint64_t v33 = *(void *)(v32 + 8);
      uint64_t ObjectType = swift_getObjectType();
      v40[3] = type metadata accessor for FMFindingLocalizer();
      v40[4] = &off_26FF86750;
      v40[0] = v9;
      id v35 = v9;
      id v36 = objc_msgSend(v11, sel_uuid);
      sub_24D39C880();

      (*(void (**)(void *, _OWORD *, char *, uint64_t, uint64_t))(v33 + 8))(v40, v41, v7, ObjectType, v33);
      swift_unknownObjectRelease();
      sub_24D2B72E4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, v31);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_24D2B6E58((uint64_t)v40);
    }
    else
    {
      sub_24D2B72E4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, v31);
    }
  }
}

void sub_24D2CB7AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x253326120](v1+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v8)
  {
    id v9 = (void *)v8;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_24D39C950();
    sub_24D2B508C(v10, (uint64_t)qword_269869FD0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    id v11 = sub_24D39C930();
    os_log_type_t v12 = sub_24D39CDF0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v25 = v1;
      os_log_type_t v14 = (uint8_t *)v13;
      uint64_t v15 = swift_slowAlloc();
      *(void *)&v28[0] = v15;
      uint64_t v26 = a1;
      *(_DWORD *)os_log_type_t v14 = 136315138;
      unint64_t v24 = v14 + 4;
      sub_24D2D8CF8((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
      uint64_t v16 = sub_24D39D490();
      v27[0] = sub_24D2B8328(v16, v17, (uint64_t *)v28);
      a1 = v26;
      sub_24D39D070();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      _os_log_impl(&dword_24D2B1000, v11, v12, "ðŸ§­ FMFindingLocalizer: Did find item: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253326010](v15, -1, -1);
      uint64_t v18 = v14;
      uint64_t v2 = v25;
      MEMORY[0x253326010](v18, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }

    memset(v28, 0, sizeof(v28));
    char v30 = 3;
    int v29 = 50528256;
    uint64_t v19 = v2
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    if (MEMORY[0x253326120](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      uint64_t v20 = *(void *)(v19 + 8);
      uint64_t ObjectType = swift_getObjectType();
      v27[3] = type metadata accessor for FMFindingLocalizer();
      v27[4] = &off_26FF86750;
      v27[0] = v9;
      unint64_t v22 = *(void (**)(void *, _OWORD *, uint64_t, uint64_t, uint64_t))(v20 + 8);
      id v23 = v9;
      v22(v27, v28, a1, ObjectType, v20);
      swift_unknownObjectRelease();

      sub_24D2B6E58((uint64_t)v27);
    }
    else
    {
    }
  }
}

uint64_t sub_24D2CBBF8(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24D39C8A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x253326120](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (result)
  {
    char v44 = (void *)result;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_24D39C950();
    sub_24D2B508C(v13, (uint64_t)qword_269869FD0);
    os_log_type_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v14(v11, a2, v8);
    id v15 = a1;
    id v16 = a1;
    unint64_t v17 = sub_24D39C930();
    os_log_type_t v18 = sub_24D39CDF0();
    int v43 = v18;
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v42 = v8;
    if (v19)
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v40 = a2;
      uint64_t v21 = v20;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v46 = v39;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v41 = v5;
      v37[1] = v21 + 4;
      sub_24D2D8CF8((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
      os_log_t v38 = v17;
      uint64_t v22 = sub_24D39D490();
      uint64_t v45 = sub_24D2B8328(v22, v23, &v46);
      sub_24D39D070();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      *(_WORD *)(v21 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v24 = sub_24D39D520();
      uint64_t v45 = sub_24D2B8328(v24, v25, &v46);
      sub_24D39D070();
      swift_bridgeObjectRelease();

      os_log_t v26 = v38;
      _os_log_impl(&dword_24D2B1000, v38, (os_log_type_t)v43, "ðŸ§­ FMFindingLocalizer: Did fail ranging on: %s error: %s", (uint8_t *)v21, 0x16u);
      uint64_t v27 = v39;
      swift_arrayDestroy();
      MEMORY[0x253326010](v27, -1, -1);
      uint64_t v28 = v21;
      a2 = v40;
      MEMORY[0x253326010](v28, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    swift_getErrorValue();
    if (sub_24D39D500() == 304)
    {
      swift_getErrorValue();
      uint64_t v29 = sub_24D39D510();
      uint64_t v31 = v30;
      if (v29 == sub_24D39CAF0() && v31 == v32)
      {
        swift_bridgeObjectRelease_n();
LABEL_12:
        v14(v7, a2, v42);
        swift_storeEnumTagMultiPayload();
        char v34 = 0;
LABEL_14:
        id v36 = v44;
        sub_24D2CAC5C((uint64_t)v7, v34);

        return sub_24D2D7064((uint64_t)v7);
      }
      char v33 = sub_24D39D4B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v33) {
        goto LABEL_12;
      }
    }
    *(void *)uint64_t v7 = a1;
    swift_storeEnumTagMultiPayload();
    id v35 = a1;
    char v34 = 1;
    goto LABEL_14;
  }
  return result;
}

void sub_24D2CC1C8(char a1, char *a2)
{
  void (*v118)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *v119;
  uint64_t v120;
  uint64_t v121;
  _UNKNOWN **v122;
  char *v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  char v127;
  uint64_t v128;
  void *v129;
  void *v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  int v134;
  int v135;
  int v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  unsigned int v143;
  id v144;
  id v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  uint8_t *v149;
  uint64_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  unint64_t v156;
  char v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  int v165;
  int v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  unsigned int v173;
  id v174;
  id v175;
  uint64_t v176;
  NSObject *v177;
  os_log_type_t v178;
  uint8_t *v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  uint64_t v184;
  NSObject *v185;
  os_log_type_t v186;
  uint8_t *v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  unint64_t v194;
  char v195;
  uint64_t v196;
  void *v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  int v201;
  int v202;
  int v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int v209;
  unsigned int v210;
  id v211;
  id v212;
  uint64_t v213;
  NSObject *v214;
  os_log_type_t v215;
  uint8_t *v216;
  uint64_t v217;
  uint64_t v218;
  void *v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  unint64_t v223;
  char v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  int v228;
  uint64_t v229;
  int v230;
  int v231;
  int v232;
  int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  int v238;
  unsigned int v239;
  id v240;
  id v241;
  uint64_t v242;
  _UNKNOWN **v243;
  uint64_t v244;
  double v245;
  char *v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void (*v254)(id *__return_ptr, uint64_t, uint64_t);
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  void *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t ObjectType;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  void (*v277)(char *, uint64_t);
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  void *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  id v291[3];
  uint64_t v292;
  uint64_t v293;
  void v294[3];
  uint64_t v295;
  _UNKNOWN **v296;
  uint64_t v297;
  uint64_t v298;
  void *v299;
  void *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  int v309;
  char v310;
  uint64_t vars8;

  v290 = a2;
  uint64_t v4 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v268 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v289 = sub_24D39C8A0();
  v288 = *(void *)(v289 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v289);
  uint64_t v9 = (char *)&v268 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  os_log_type_t v12 = (char *)&v268 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  id v15 = (char *)&v268 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  os_log_type_t v18 = (char *)&v268 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v268 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  v287 = (char *)&v268 - v23;
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)&v268 - v24;
  v286 = v2;
  os_log_t v26 = (char *)MEMORY[0x253326120](&v2[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner]);
  if (v26)
  {
    if ((*(_WORD *)&v26[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology] & 0x8100) == 0x100)
    {
LABEL_3:
    }
    else
    {
      v283 = v26;
      switch(a1)
      {
        case 1:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v27 = sub_24D39C950();
          sub_24D2B508C(v27, (uint64_t)qword_269869FD0);
          uint64_t v28 = sub_24D39C930();
          os_log_type_t v29 = sub_24D39CDF0();
          if (os_log_type_enabled(v28, v29))
          {
            uint64_t v30 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v30 = 0;
            _os_log_impl(&dword_24D2B1000, v28, v29, "ðŸ§­ FMFindingLocalizer: item state changed to: findable", v30, 2u);
            MEMORY[0x253326010](v30, -1, -1);
          }

          uint64_t v31 = *((void *)v290 + 3);
          uint64_t v32 = *((void *)v290 + 4);
          sub_24D2B8A34(v290, v31);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v32 + 8))(&v297, v31, v32);
          char v33 = v300;
          uint64_t v34 = v301;
          sub_24D2B8A34(&v297, (uint64_t)v300);
          (*(void (**)(void *, uint64_t))(v34 + 16))(v33, v34);
          id v35 = &v283[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
          swift_beginAccess();
          uint64_t v36 = *(void *)v35;
          if (*(void *)(*(void *)v35 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v37 = sub_24D3839F0((uint64_t)v25);
            if (v38)
            {
              uint64_t v39 = *(void *)(v36 + 56) + 104 * v37;
              v279 = *(void *)v39;
              v280 = *(unsigned __int8 *)(v39 + 8);
              uint64_t v41 = *(void **)(v39 + 16);
              uint64_t v40 = *(void **)(v39 + 24);
              uint64_t v42 = *(void *)(v39 + 32);
              uint64_t v43 = *(unsigned __int8 *)(v39 + 40);
              uint64_t v44 = *(void *)(v39 + 48);
              uint64_t v45 = *(unsigned __int8 *)(v39 + 56);
              int v46 = *(unsigned __int8 *)(v39 + 57);
              v278 = *(void *)(v39 + 64);
              uint64_t v47 = *(unsigned __int8 *)(v39 + 72);
              int v48 = *(unsigned __int8 *)(v39 + 73);
              int v49 = *(unsigned __int8 *)(v39 + 74);
              uint64_t v50 = *(void *)(v39 + 80);
              v281 = *(void *)(v39 + 88);
              int v51 = *(unsigned __int8 *)(v39 + 96);
              int v52 = *(unsigned __int8 *)(v39 + 97);
              if (v46) {
                uint64_t v53 = 256;
              }
              else {
                uint64_t v53 = 0;
              }
              v285 = v53 | v45;
              if (v48) {
                uint64_t v54 = 256;
              }
              else {
                uint64_t v54 = 0;
              }
              uint64_t v55 = v54 | v47;
              uint64_t v56 = 0x10000;
              if (!v49) {
                uint64_t v56 = 0;
              }
              v284 = v55 | v56;
              if (v52) {
                int v57 = 256;
              }
              else {
                int v57 = 0;
              }
              unsigned int v58 = v57 | v51;
              v282 = v40;
              id v59 = v40;
              uint64_t v60 = (uint64_t)v41;
              id v61 = v41;
            }
            else
            {
              v279 = 0;
              v280 = 0;
              v282 = 0;
              uint64_t v42 = 0;
              uint64_t v43 = 0;
              uint64_t v44 = 0;
              v285 = 0;
              v278 = 0;
              v284 = 0;
              uint64_t v50 = 0;
              v281 = 0;
              unsigned int v58 = 0;
              uint64_t v60 = 1;
            }
            id v126 = v286;
            swift_bridgeObjectRelease();
            uint64_t v78 = v281;
          }
          else
          {
            v279 = 0;
            v280 = 0;
            v282 = 0;
            uint64_t v42 = 0;
            uint64_t v43 = 0;
            uint64_t v44 = 0;
            v285 = 0;
            v278 = 0;
            v284 = 0;
            uint64_t v50 = 0;
            uint64_t v78 = 0;
            unsigned int v58 = 0;
            uint64_t v60 = 1;
            id v126 = v286;
          }
          v277 = *(void (**)(char *, uint64_t))(v288 + 8);
          v277(v25, v289);
          sub_24D2B6E58((uint64_t)&v297);
          uint64_t v79 = v58 | 0x300040000;
          uint64_t v72 = v279;
          uint64_t v73 = v280;
          uint64_t v74 = v60;
          goto LABEL_154;
        case 2:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v62 = sub_24D39C950();
          sub_24D2B508C(v62, (uint64_t)qword_269869FD0);
          unint64_t v63 = sub_24D39C930();
          os_log_type_t v64 = sub_24D39CDF0();
          if (os_log_type_enabled(v63, v64))
          {
            uint64_t v65 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v65 = 0;
            _os_log_impl(&dword_24D2B1000, v63, v64, "ðŸ§­ FMFindingLocalizer: item state changed to: reconnecting", v65, 2u);
            MEMORY[0x253326010](v65, -1, -1);
          }

          uint64_t v66 = *((void *)v290 + 3);
          uint64_t v67 = *((void *)v290 + 4);
          sub_24D2B8A34(v290, v66);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v67 + 8))(v294, v66, v67);
          uint64_t v68 = v295;
          uint64_t v69 = v296;
          sub_24D2B8A34(v294, v295);
          uint64_t v70 = (uint64_t)v287;
          ((void (*)(uint64_t, _UNKNOWN **))v69[2])(v68, v69);
          swift_beginAccess();
          double v71 = sub_24D2D57EC(v70, (uint64_t)&v297);
          v277 = *(void (**)(char *, uint64_t))(v288 + 8);
          ((void (*)(uint64_t, uint64_t, double))v277)(v70, v289, v71);
          sub_24D2B6E14(v297, v298, v299, v300);
          swift_endAccess();
          sub_24D2B6E58((uint64_t)v294);
          uint64_t v72 = 0;
          uint64_t v73 = 0;
          uint64_t v74 = 0;
          v282 = 0;
          uint64_t v42 = 0;
          uint64_t v43 = 0;
          uint64_t v44 = 0;
          uint64_t v75 = 0;
          uint64_t v76 = 0;
          uint64_t v77 = 0;
          uint64_t v50 = 0;
          uint64_t v78 = 0;
          uint64_t v79 = 0x4000000;
          goto LABEL_128;
        case 3:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v80 = sub_24D39C950();
          sub_24D2B508C(v80, (uint64_t)qword_269869FD0);
          uint64_t v81 = sub_24D39C930();
          os_log_type_t v82 = sub_24D39CDF0();
          if (os_log_type_enabled(v81, v82))
          {
            uint64_t v83 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v83 = 0;
            _os_log_impl(&dword_24D2B1000, v81, v82, "ðŸ§­ FMFindingLocalizer: item state changed to: reconnected", v83, 2u);
            MEMORY[0x253326010](v83, -1, -1);
          }

          uint64_t v84 = *((void *)v290 + 3);
          uint64_t v85 = *((void *)v290 + 4);
          sub_24D2B8A34(v290, v84);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v85 + 8))(&v297, v84, v85);
          uint64_t v86 = v300;
          uint64_t v87 = v301;
          sub_24D2B8A34(&v297, (uint64_t)v300);
          (*(void (**)(void *, uint64_t))(v87 + 16))(v86, v87);
          uint64_t v88 = &v283[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
          swift_beginAccess();
          uint64_t v89 = *(void *)v88;
          if (*(void *)(*(void *)v88 + 16))
          {
            swift_bridgeObjectRetain();
            unint64_t v90 = sub_24D3839F0((uint64_t)v15);
            if (v91)
            {
              uint64_t v92 = *(void *)(v89 + 56) + 104 * v90;
              v279 = *(void *)v92;
              v280 = *(unsigned __int8 *)(v92 + 8);
              uint64_t v94 = *(void **)(v92 + 16);
              uint64_t v93 = *(void **)(v92 + 24);
              uint64_t v42 = *(void *)(v92 + 32);
              uint64_t v43 = *(unsigned __int8 *)(v92 + 40);
              v273 = *(void *)(v92 + 48);
              uint64_t v95 = *(unsigned __int8 *)(v92 + 56);
              int v96 = *(unsigned __int8 *)(v92 + 57);
              v278 = *(void *)(v92 + 64);
              uint64_t v97 = *(unsigned __int8 *)(v92 + 72);
              int v98 = *(unsigned __int8 *)(v92 + 73);
              int v99 = *(unsigned __int8 *)(v92 + 74);
              v276 = *(void *)(v92 + 80);
              v281 = *(void *)(v92 + 88);
              int v100 = *(unsigned __int8 *)(v92 + 96);
              int v101 = *(unsigned __int8 *)(v92 + 97);
              if (v96) {
                uint64_t v102 = 256;
              }
              else {
                uint64_t v102 = 0;
              }
              uint64_t v103 = v102 | v95;
              if (v98) {
                uint64_t v104 = 256;
              }
              else {
                uint64_t v104 = 0;
              }
              uint64_t v105 = v104 | v97;
              uint64_t v106 = 0x10000;
              if (!v99) {
                uint64_t v106 = 0;
              }
              v284 = v105 | v106;
              if (v101) {
                int v107 = 256;
              }
              else {
                int v107 = 0;
              }
              unsigned int v108 = v107 | v100;
              v282 = v93;
              id v109 = v93;
              uint64_t v110 = (uint64_t)v94;
              id v111 = v94;
              uint64_t v75 = v103;
            }
            else
            {
              v279 = 0;
              v280 = 0;
              v282 = 0;
              uint64_t v42 = 0;
              uint64_t v43 = 0;
              v273 = 0;
              uint64_t v75 = 0;
              v278 = 0;
              v284 = 0;
              v276 = 0;
              v281 = 0;
              unsigned int v108 = 0;
              uint64_t v110 = 1;
            }
            id v126 = v286;
            swift_bridgeObjectRelease();
            uint64_t v78 = v281;
          }
          else
          {
            v279 = 0;
            v280 = 0;
            v282 = 0;
            uint64_t v42 = 0;
            uint64_t v43 = 0;
            v273 = 0;
            uint64_t v75 = 0;
            v278 = 0;
            v284 = 0;
            v276 = 0;
            uint64_t v78 = 0;
            unsigned int v108 = 0;
            uint64_t v110 = 1;
            id v126 = v286;
          }
          v277 = *(void (**)(char *, uint64_t))(v288 + 8);
          v277(v15, v289);
          sub_24D2B6E58((uint64_t)&v297);
          uint64_t v79 = v108 | 0x300040000;
          uint64_t v44 = v273;
          uint64_t v74 = v110;
          uint64_t v50 = v276;
          uint64_t v72 = v279;
          uint64_t v77 = v284;
          uint64_t v73 = v280;
          uint64_t v76 = v278;
          break;
        case 4:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v112 = sub_24D39C950();
          sub_24D2B508C(v112, (uint64_t)qword_269869FD0);
          uint64_t v113 = sub_24D39C930();
          os_log_type_t v114 = sub_24D39CDF0();
          if (os_log_type_enabled(v113, v114))
          {
            v115 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v115 = 0;
            _os_log_impl(&dword_24D2B1000, v113, v114, "ðŸ§­ FMFindingLocalizer: item state changed to: startedMoving", v115, 2u);
            MEMORY[0x253326010](v115, -1, -1);
          }

          uint64_t v116 = *((void *)v290 + 3);
          uint64_t v117 = *((void *)v290 + 4);
          sub_24D2B8A34(v290, v116);
          id v118 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v117 + 8);
          v118(&v297, v116, v117);
          __int16 v119 = v300;
          v120 = v301;
          sub_24D2B8A34(&v297, (uint64_t)v300);
          (*(void (**)(id *__return_ptr, void *, uint64_t))(v120 + 24))(v291, v119, v120);
          if ((_BYTE)v292 && v292 == 1)
          {

            swift_bridgeObjectRelease();
            v118(v294, v116, v117);
            uint64_t v121 = v295;
            id v122 = v296;
            sub_24D2B8A34(v294, v295);
            ((void (*)(uint64_t, _UNKNOWN **))v122[2])(v121, v122);
            v123 = &v283[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
            swift_beginAccess();
            uint64_t v124 = *(void *)v123;
            if (*(void *)(*(void *)v123 + 16))
            {
              swift_bridgeObjectRetain();
              v125 = sub_24D3839F0((uint64_t)v12);
              id v126 = v286;
              if (v127)
              {
                id v128 = *(void *)(v124 + 56) + 104 * v125;
                uint64_t v72 = *(void *)v128;
                v280 = *(unsigned __int8 *)(v128 + 8);
                objc_super v130 = *(void **)(v128 + 16);
                uint64_t v129 = *(void **)(v128 + 24);
                uint64_t v42 = *(void *)(v128 + 32);
                uint64_t v43 = *(unsigned __int8 *)(v128 + 40);
                uint64_t v44 = *(void *)(v128 + 48);
                uint64_t v131 = *(unsigned __int8 *)(v128 + 56);
                uint64_t v132 = *(unsigned __int8 *)(v128 + 57);
                v278 = *(void *)(v128 + 64);
                v133 = *(unsigned __int8 *)(v128 + 72);
                uint64_t v134 = *(unsigned __int8 *)(v128 + 73);
                int v135 = *(unsigned __int8 *)(v128 + 74);
                v276 = *(void *)(v128 + 80);
                v281 = *(void *)(v128 + 88);
                id v136 = *(unsigned __int8 *)(v128 + 96);
                v137 = *(unsigned __int8 *)(v128 + 97);
                if (v132) {
                  id v138 = 256;
                }
                else {
                  id v138 = 0;
                }
                v285 = v138 | v131;
                if (v134) {
                  v139 = 256;
                }
                else {
                  v139 = 0;
                }
                v140 = v139 | v133;
                v141 = 0x10000;
                if (!v135) {
                  v141 = 0;
                }
                v284 = v140 | v141;
                if (v137) {
                  v142 = 256;
                }
                else {
                  v142 = 0;
                }
                v143 = v142 | v136;
                v282 = v129;
                v144 = v129;
                uint64_t v74 = (uint64_t)v130;
                uint64_t v145 = v130;
                uint64_t v50 = v276;
              }
              else
              {
                uint64_t v72 = 0;
                v280 = 0;
                v282 = 0;
                uint64_t v42 = 0;
                uint64_t v43 = 0;
                uint64_t v44 = 0;
                v285 = 0;
                v278 = 0;
                v284 = 0;
                uint64_t v50 = 0;
                v281 = 0;
                v143 = 0;
                uint64_t v74 = 1;
              }
              swift_bridgeObjectRelease();
              uint64_t v78 = v281;
            }
            else
            {
              uint64_t v72 = 0;
              v280 = 0;
              v282 = 0;
              uint64_t v42 = 0;
              uint64_t v43 = 0;
              uint64_t v44 = 0;
              v285 = 0;
              v278 = 0;
              v284 = 0;
              uint64_t v50 = 0;
              uint64_t v78 = 0;
              v143 = 0;
              uint64_t v74 = 1;
              id v126 = v286;
            }
            v277 = *(void (**)(char *, uint64_t))(v288 + 8);
            v277(v12, v289);
            sub_24D2B6E58((uint64_t)v294);
            sub_24D2B6E58((uint64_t)&v297);
            uint64_t v79 = v143 | 0x200040000;
            uint64_t v73 = v280;
LABEL_154:
            uint64_t v76 = v278;
            uint64_t v75 = v285;
            uint64_t v77 = v284;
          }
          else
          {
            sub_24D2B6E58((uint64_t)&v297);
            v118(v294, v116, v117);
            v242 = v295;
            v243 = v296;
            sub_24D2B8A34(v294, v295);
            v244 = (uint64_t)v287;
            ((void (*)(uint64_t, _UNKNOWN **))v243[2])(v242, v243);
            swift_beginAccess();
            v245 = sub_24D2D57EC(v244, (uint64_t)&v297);
            v277 = *(void (**)(char *, uint64_t))(v288 + 8);
            ((void (*)(uint64_t, uint64_t, double))v277)(v244, v289, v245);
            sub_24D2B6E14(v297, v298, v299, v300);
            swift_endAccess();
            sub_24D2B6E58((uint64_t)v294);
            uint64_t v72 = 0;
            uint64_t v73 = 0;
            uint64_t v74 = 0;
            v282 = 0;
            uint64_t v42 = 0;
            uint64_t v43 = 0;
            uint64_t v44 = 0;
            uint64_t v75 = 0;
            uint64_t v76 = 0;
            uint64_t v77 = 0;
            uint64_t v50 = 0;
            uint64_t v78 = 0;
            uint64_t v79 = 100663296;
LABEL_128:
            id v126 = v286;
          }
          break;
        case 5:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v146 = sub_24D39C950();
          sub_24D2B508C(v146, (uint64_t)qword_269869FD0);
          v147 = sub_24D39C930();
          v148 = sub_24D39CDF0();
          if (os_log_type_enabled(v147, v148))
          {
            unint64_t v149 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v149 = 0;
            _os_log_impl(&dword_24D2B1000, v147, v148, "ðŸ§­ FMFindingLocalizer: item state changed to: stoppedMoving", v149, 2u);
            MEMORY[0x253326010](v149, -1, -1);
          }

          uint64_t v150 = *((void *)v290 + 3);
          uint64_t v151 = *((void *)v290 + 4);
          sub_24D2B8A34(v290, v150);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v151 + 8))(&v297, v150, v151);
          uint64_t v152 = v300;
          v153 = v301;
          sub_24D2B8A34(&v297, (uint64_t)v300);
          (*(void (**)(void *, uint64_t))(v153 + 16))(v152, v153);
          uint64_t v154 = &v283[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
          swift_beginAccess();
          uint64_t v155 = *(void *)v154;
          if (*(void *)(*(void *)v154 + 16))
          {
            swift_bridgeObjectRetain();
            objc_super v156 = sub_24D3839F0((uint64_t)v9);
            id v126 = v286;
            if (v157)
            {
              uint64_t v158 = *(void *)(v155 + 56) + 104 * v156;
              uint64_t v72 = *(void *)v158;
              v280 = *(unsigned __int8 *)(v158 + 8);
              uint64_t v74 = *(void *)(v158 + 16);
              uint64_t v159 = *(void **)(v158 + 24);
              v274 = *(void *)(v158 + 32);
              uint64_t v43 = *(unsigned __int8 *)(v158 + 40);
              uint64_t v44 = *(void *)(v158 + 48);
              long long v160 = *(unsigned __int8 *)(v158 + 56);
              long long v161 = *(unsigned __int8 *)(v158 + 57);
              uint64_t v162 = *(void *)(v158 + 64);
              long long v163 = *(unsigned __int8 *)(v158 + 72);
              long long v164 = *(unsigned __int8 *)(v158 + 73);
              uint64_t v165 = *(unsigned __int8 *)(v158 + 74);
              uint64_t v50 = *(void *)(v158 + 80);
              v281 = *(void *)(v158 + 88);
              v166 = *(unsigned __int8 *)(v158 + 96);
              v167 = *(unsigned __int8 *)(v158 + 97);
              if (v161) {
                v168 = 256;
              }
              else {
                v168 = 0;
              }
              v285 = v168 | v160;
              if (v164) {
                v169 = 256;
              }
              else {
                v169 = 0;
              }
              v170 = v169 | v163;
              v171 = 0x10000;
              if (!v165) {
                v171 = 0;
              }
              v284 = v170 | v171;
              if (v167) {
                v172 = 256;
              }
              else {
                v172 = 0;
              }
              v173 = v172 | v166;
              v282 = v159;
              v174 = v159;
              v175 = (id)v74;
            }
            else
            {
              uint64_t v72 = 0;
              v280 = 0;
              v282 = 0;
              v274 = 0;
              uint64_t v43 = 0;
              uint64_t v44 = 0;
              v285 = 0;
              uint64_t v162 = 0;
              v284 = 0;
              uint64_t v50 = 0;
              v281 = 0;
              v173 = 0;
              uint64_t v74 = 1;
            }
            swift_bridgeObjectRelease();
            uint64_t v78 = v281;
          }
          else
          {
            uint64_t v72 = 0;
            v280 = 0;
            v282 = 0;
            v274 = 0;
            uint64_t v43 = 0;
            uint64_t v44 = 0;
            v285 = 0;
            uint64_t v162 = 0;
            v284 = 0;
            uint64_t v50 = 0;
            uint64_t v78 = 0;
            v173 = 0;
            uint64_t v74 = 1;
            id v126 = v286;
          }
          v277 = *(void (**)(char *, uint64_t))(v288 + 8);
          v277(v9, v289);
          sub_24D2B6E58((uint64_t)&v297);
          uint64_t v79 = v173 | 0x300040000;
          uint64_t v42 = v274;
          goto LABEL_149;
        case 6:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          v176 = sub_24D39C950();
          sub_24D2B508C(v176, (uint64_t)qword_269869FD0);
          v177 = sub_24D39C930();
          v178 = sub_24D39CDF0();
          if (os_log_type_enabled(v177, v178))
          {
            v179 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v179 = 0;
            _os_log_impl(&dword_24D2B1000, v177, v178, "ðŸ§­ FMFindingLocalizer: item state changed to: inUse", v179, 2u);
            MEMORY[0x253326010](v179, -1, -1);
          }

          v180 = *((void *)v290 + 3);
          v181 = *((void *)v290 + 4);
          sub_24D2B8A34(v290, v180);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v181 + 8))(&v297, v180, v181);
          v182 = v300;
          v183 = v301;
          sub_24D2B8A34(&v297, (uint64_t)v300);
          (*(void (**)(void *, uint64_t))(v183 + 16))(v182, v183);
          swift_storeEnumTagMultiPayload();
          sub_24D2CAC5C((uint64_t)v6, 0);
          sub_24D2D7064((uint64_t)v6);
          sub_24D2B6E58((uint64_t)&v297);
          goto LABEL_158;
        case 7:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          v184 = sub_24D39C950();
          sub_24D2B508C(v184, (uint64_t)qword_269869FD0);
          v185 = sub_24D39C930();
          v186 = sub_24D39CDF0();
          if (os_log_type_enabled(v185, v186))
          {
            v187 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v187 = 0;
            _os_log_impl(&dword_24D2B1000, v185, v186, "ðŸ§­ FMFindingLocalizer: item state changed to: insufficient horizontal movement", v187, 2u);
            MEMORY[0x253326010](v187, -1, -1);
          }

          v188 = *((void *)v290 + 3);
          v189 = *((void *)v290 + 4);
          sub_24D2B8A34(v290, v188);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v189 + 8))(&v297, v188, v189);
          v190 = v300;
          v191 = v301;
          sub_24D2B8A34(&v297, (uint64_t)v300);
          (*(void (**)(void *, uint64_t))(v191 + 16))(v190, v191);
          v192 = &v283[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
          swift_beginAccess();
          v193 = *(void *)v192;
          if (*(void *)(*(void *)v192 + 16))
          {
            swift_bridgeObjectRetain();
            v194 = sub_24D3839F0((uint64_t)v21);
            if (v195)
            {
              v196 = *(void *)(v193 + 56) + 104 * v194;
              uint64_t v72 = *(void *)v196;
              v280 = *(unsigned __int8 *)(v196 + 8);
              uint64_t v74 = *(void *)(v196 + 16);
              v197 = *(void **)(v196 + 24);
              uint64_t v42 = *(void *)(v196 + 32);
              v275 = *(unsigned __int8 *)(v196 + 40);
              uint64_t v44 = *(void *)(v196 + 48);
              v198 = *(unsigned __int8 *)(v196 + 56);
              v199 = *(unsigned __int8 *)(v196 + 57);
              uint64_t v162 = *(void *)(v196 + 64);
              v200 = *(unsigned __int8 *)(v196 + 72);
              v201 = *(unsigned __int8 *)(v196 + 73);
              v202 = *(unsigned __int8 *)(v196 + 74);
              uint64_t v50 = *(void *)(v196 + 80);
              v281 = *(void *)(v196 + 88);
              v203 = *(unsigned __int8 *)(v196 + 96);
              v204 = *(unsigned __int8 *)(v196 + 97);
              if (v199) {
                v205 = 256;
              }
              else {
                v205 = 0;
              }
              v285 = v205 | v198;
              if (v201) {
                v206 = 256;
              }
              else {
                v206 = 0;
              }
              v207 = v206 | v200;
              v208 = 0x10000;
              if (!v202) {
                v208 = 0;
              }
              v284 = v207 | v208;
              if (v204) {
                v209 = 256;
              }
              else {
                v209 = 0;
              }
              v210 = v209 | v203;
              v282 = v197;
              v211 = v197;
              v212 = (id)v74;
            }
            else
            {
              uint64_t v72 = 0;
              v280 = 0;
              v282 = 0;
              uint64_t v42 = 0;
              v275 = 0;
              uint64_t v44 = 0;
              v285 = 0;
              uint64_t v162 = 0;
              v284 = 0;
              uint64_t v50 = 0;
              v281 = 0;
              v210 = 0;
              uint64_t v74 = 1;
            }
            id v126 = v286;
            swift_bridgeObjectRelease();
            uint64_t v78 = v281;
          }
          else
          {
            uint64_t v72 = 0;
            v280 = 0;
            v282 = 0;
            uint64_t v42 = 0;
            v275 = 0;
            uint64_t v44 = 0;
            v285 = 0;
            uint64_t v162 = 0;
            v284 = 0;
            uint64_t v50 = 0;
            uint64_t v78 = 0;
            v210 = 0;
            uint64_t v74 = 1;
            id v126 = v286;
          }
          v277 = *(void (**)(char *, uint64_t))(v288 + 8);
          v277(v21, v289);
          sub_24D2B6E58((uint64_t)&v297);
          uint64_t v79 = v210 | 0x100040000;
          uint64_t v43 = v275;
          goto LABEL_149;
        case 8:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          v213 = sub_24D39C950();
          sub_24D2B508C(v213, (uint64_t)qword_269869FD0);
          v214 = sub_24D39C930();
          v215 = sub_24D39CDF0();
          if (os_log_type_enabled(v214, v215))
          {
            v216 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v216 = 0;
            _os_log_impl(&dword_24D2B1000, v214, v215, "ðŸ§­ FMFindingLocalizer: item state changed to: insufficient horizontal movement", v216, 2u);
            MEMORY[0x253326010](v216, -1, -1);
          }

          v217 = *((void *)v290 + 3);
          v218 = *((void *)v290 + 4);
          sub_24D2B8A34(v290, v217);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v218 + 8))(&v297, v217, v218);
          v219 = v300;
          v220 = v301;
          sub_24D2B8A34(&v297, (uint64_t)v300);
          (*(void (**)(void *, uint64_t))(v220 + 16))(v219, v220);
          v221 = &v283[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
          swift_beginAccess();
          v222 = *(void *)v221;
          if (*(void *)(v222 + 16))
          {
            swift_bridgeObjectRetain();
            v223 = sub_24D3839F0((uint64_t)v18);
            if (v224)
            {
              v225 = *(void *)(v222 + 56) + 104 * v223;
              uint64_t v72 = *(void *)v225;
              v280 = *(unsigned __int8 *)(v225 + 8);
              uint64_t v74 = *(void *)(v225 + 16);
              v226 = *(void **)(v225 + 24);
              uint64_t v42 = *(void *)(v225 + 32);
              uint64_t v43 = *(unsigned __int8 *)(v225 + 40);
              uint64_t v44 = *(void *)(v225 + 48);
              v227 = *(unsigned __int8 *)(v225 + 56);
              v228 = *(unsigned __int8 *)(v225 + 57);
              uint64_t v162 = *(void *)(v225 + 64);
              v229 = *(unsigned __int8 *)(v225 + 72);
              v230 = *(unsigned __int8 *)(v225 + 73);
              v231 = *(unsigned __int8 *)(v225 + 74);
              uint64_t v50 = *(void *)(v225 + 80);
              v281 = *(void *)(v225 + 88);
              v232 = *(unsigned __int8 *)(v225 + 96);
              v233 = *(unsigned __int8 *)(v225 + 97);
              if (v228) {
                v234 = 256;
              }
              else {
                v234 = 0;
              }
              v285 = v234 | v227;
              if (v230) {
                v235 = 256;
              }
              else {
                v235 = 0;
              }
              v236 = v235 | v229;
              v237 = 0x10000;
              if (!v231) {
                v237 = 0;
              }
              v284 = v236 | v237;
              if (v233) {
                v238 = 256;
              }
              else {
                v238 = 0;
              }
              v239 = v238 | v232;
              v282 = v226;
              v240 = v226;
              v241 = (id)v74;
            }
            else
            {
              uint64_t v72 = 0;
              v280 = 0;
              v282 = 0;
              uint64_t v42 = 0;
              uint64_t v43 = 0;
              uint64_t v44 = 0;
              v285 = 0;
              uint64_t v162 = 0;
              v284 = 0;
              uint64_t v50 = 0;
              v281 = 0;
              v239 = 0;
              uint64_t v74 = 1;
            }
            swift_bridgeObjectRelease();
            uint64_t v78 = v281;
          }
          else
          {
            uint64_t v72 = 0;
            v280 = 0;
            v282 = 0;
            uint64_t v42 = 0;
            uint64_t v43 = 0;
            uint64_t v44 = 0;
            v285 = 0;
            uint64_t v162 = 0;
            v284 = 0;
            uint64_t v50 = 0;
            uint64_t v78 = 0;
            v239 = 0;
            uint64_t v74 = 1;
          }
          v277 = *(void (**)(char *, uint64_t))(v288 + 8);
          v277(v18, v289);
          sub_24D2B6E58((uint64_t)&v297);
          uint64_t v79 = v239 | 0x40000;
          id v126 = v286;
LABEL_149:
          uint64_t v75 = v285;
          uint64_t v77 = v284;
          uint64_t v73 = v280;
          uint64_t v76 = v162;
          break;
        default:
          goto LABEL_3;
      }
      v286 = (char *)v74;
      v281 = v78;
      v284 = v77;
      v285 = v75;
      v297 = v72;
      v298 = v73;
      v299 = (void *)v74;
      v300 = v282;
      v301 = v42;
      v302 = v43;
      v303 = v44;
      v304 = v75;
      v305 = v76;
      v306 = v77;
      v307 = v50;
      v308 = v78;
      v309 = v79;
      v246 = &v126[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate];
      v247 = v79;
      v310 = BYTE4(v79);
      v248 = v73;
      v249 = v76;
      v250 = MEMORY[0x253326120](&v126[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate]);
      if (v250)
      {
        v271 = *((void *)v246 + 1);
        v270 = v250;
        uint64_t ObjectType = swift_getObjectType();
        v295 = type metadata accessor for FMFindingLocalizer();
        v296 = &off_26FF86750;
        v294[0] = v283;
        v274 = v42;
        v269 = *((void *)v290 + 3);
        v276 = v50;
        v251 = v43;
        v252 = *((void *)v290 + 4);
        sub_24D2B8A34(v290, v269);
        v275 = v251;
        v278 = v249;
        v253 = v44;
        v273 = v44;
        v254 = *(void (**)(id *__return_ptr, uint64_t, uint64_t))(v252 + 8);
        sub_24D2D79F0(v72, v248, v286, v282, v42, v251, v253, v285, v249, v284, v50, v281, v247);
        v255 = v283;
        v279 = v72;
        v280 = v248;
        v290 = v255;
        v254(v291, v269, v252);
        v256 = v292;
        v257 = v293;
        sub_24D2B8A34(v291, v292);
        v258 = v287;
        (*(void (**)(uint64_t, uint64_t))(v257 + 16))(v256, v257);
        (*(void (**)(void *, uint64_t *, char *, uint64_t))(v271 + 8))(v294, &v297, v258, ObjectType);
        swift_unknownObjectRelease();
        v259 = v281;
        v260 = v276;
        v261 = v284;
        v262 = v278;
        v263 = v286;
        v264 = v282;
        v265 = v274;
        v266 = v275;
        v267 = v273;
        sub_24D2D7A20(v279, v280, v286, v282, v274, v275, v273, v285, v278, v284, v276, v281, v247);

        sub_24D2D7A20(v279, v280, v263, v264, v265, v266, v267, v285, v262, v261, v260, v259, v247);
        v277(v287, v289);
        sub_24D2B6E58((uint64_t)v291);
        sub_24D2B6E58((uint64_t)v294);
      }
      else
      {
        sub_24D2D7A20(v72, v248, v286, v282, v42, v43, v44, v285, v249, v284, v50, v281, v247);
LABEL_158:
      }
    }
  }
}

void sub_24D2CE0EC(void *a1, float a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24D39C8A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v12 = (char *)&v118 - v11;
  uint64_t v13 = sub_24D39CA10();
  uint64_t v146 = *(void *)(v13 - 8);
  uint64_t v147 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v145 = (char *)&v118 - v17;
  uint64_t v18 = sub_24D39C990();
  MEMORY[0x270FA5388](v18);
  v140 = (char *)MEMORY[0x253326120](v3+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v140)
  {
    id v136 = v10;
    v137 = (void (*)(void, void))v12;
    v148 = a1;
    uint64_t v149 = v7;
    uint64_t v141 = v6;
    uint64_t v144 = OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_updateRangeEstimateWatchdogWorkItem;
    if (*(void *)(v3
                   + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_updateRangeEstimateWatchdogWorkItem))
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v20 = v148;
    sub_24D2B6CE8((uint64_t)v148, (uint64_t)&v202);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    sub_24D2B6F04(&v202, v21 + 24);
    v175 = sub_24D2D79CC;
    uint64_t v176 = v21;
    v171 = (void *)MEMORY[0x263EF8330];
    uint64_t v172 = 1107296256;
    v173 = sub_24D32194C;
    v174 = &unk_26FF867F8;
    _Block_copy(&v171);
    v185 = (void *)MEMORY[0x263F8EE78];
    sub_24D2D8CF8((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
    swift_retain();
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    sub_24D39CA40();
    swift_allocObject();
    uint64_t v22 = sub_24D39CA20();
    swift_release();
    swift_release();
    uint64_t ObjectType = v3;
    *(void *)(v3 + v144) = v22;
    swift_retain();
    swift_release();
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v23 = (void *)sub_24D39CE90();
    sub_24D39CA00();
    uint64_t v24 = v145;
    MEMORY[0x253324A90](v16, 3.0);
    uint64_t v25 = v147;
    os_log_t v26 = *(void (**)(char *, uint64_t))(v146 + 8);
    v26(v16, v147);
    uint64_t v133 = v22;
    sub_24D39CE60();

    v26(v24, v25);
    if (a2 < 0.0) {
      a2 = 0.0;
    }
    uint64_t v27 = v20[3];
    uint64_t v28 = v20[4];
    sub_24D2B8A34(v20, v27);
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v28 + 8))(&v171, v27, v28);
    os_log_type_t v29 = v174;
    uint64_t v30 = v175;
    sub_24D2B8A34(&v171, (uint64_t)v174);
    uint64_t v31 = (uint64_t)v137;
    (*((void (**)(void *, void (*)()))v30 + 2))(v29, v30);
    uint64_t v32 = &v140[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
    swift_beginAccess();
    uint64_t v33 = *(void *)v32;
    uint64_t v34 = *(void *)(*(void *)v32 + 16);
    id v118 = v32;
    if (v34)
    {
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_24D3839F0(v31);
      if (v36)
      {
        uint64_t v37 = *(void *)(v33 + 56) + 104 * v35;
        uint64_t v38 = *(void *)v37;
        uint64_t v146 = *(unsigned __int8 *)(v37 + 8);
        uint64_t v147 = v38;
        uint64_t v40 = *(void *)(v37 + 16);
        uint64_t v39 = *(char **)(v37 + 24);
        uint64_t v41 = *(void *)(v37 + 32);
        uint64_t v42 = *(unsigned __int8 *)(v37 + 40);
        uint64_t v143 = *(void *)(v37 + 48);
        uint64_t v144 = v41;
        uint64_t v43 = *(unsigned __int8 *)(v37 + 56);
        LODWORD(v41) = *(unsigned __int8 *)(v37 + 57);
        uint64_t v44 = *(void *)(v37 + 64);
        uint64_t v45 = *(unsigned __int8 *)(v37 + 72);
        int v46 = *(unsigned __int8 *)(v37 + 73);
        int v47 = *(unsigned __int8 *)(v37 + 74);
        uint64_t v49 = *(void *)(v37 + 80);
        uint64_t v48 = *(void *)(v37 + 88);
        int v50 = *(unsigned __int8 *)(v37 + 96);
        int v51 = *(unsigned __int8 *)(v37 + 97);
        if (v41) {
          uint64_t v52 = 256;
        }
        else {
          uint64_t v52 = 0;
        }
        uint64_t v53 = v52 | v43;
        if (v46) {
          uint64_t v54 = 256;
        }
        else {
          uint64_t v54 = 0;
        }
        uint64_t v55 = v54 | v45;
        uint64_t v56 = 0x10000;
        if (!v47) {
          uint64_t v56 = 0;
        }
        uint64_t v142 = v55 | v56;
        if (v51) {
          int v57 = 256;
        }
        else {
          int v57 = 0;
        }
        int v139 = v57 | v50;
        uint64_t v145 = v39;
        unsigned int v58 = v39;
        id v59 = (id)v40;
      }
      else
      {
        uint64_t v146 = 0;
        uint64_t v147 = 0;
        uint64_t v144 = 0;
        uint64_t v145 = 0;
        uint64_t v42 = 0;
        uint64_t v142 = 0;
        uint64_t v143 = 0;
        uint64_t v53 = 0;
        uint64_t v44 = 0;
        uint64_t v49 = 0;
        uint64_t v48 = 0;
        int v139 = 0;
        uint64_t v40 = 1;
      }
      swift_bridgeObjectRelease();
      uint64_t v64 = v142;
      uint64_t v63 = v143;
      int v65 = v139;
      uint64_t v61 = v146;
      uint64_t v60 = v147;
      uint64_t v34 = v144;
      uint64_t v62 = v145;
    }
    else
    {
      uint64_t v60 = 0;
      uint64_t v61 = 0;
      uint64_t v62 = 0;
      uint64_t v42 = 0;
      uint64_t v63 = 0;
      uint64_t v53 = 0;
      uint64_t v44 = 0;
      uint64_t v64 = 0;
      uint64_t v49 = 0;
      uint64_t v48 = 0;
      int v65 = 0;
      uint64_t v40 = 1;
    }
    uint64_t v142 = v64;
    uint64_t v143 = v63;
    uint64_t v144 = v34;
    uint64_t v145 = v62;
    uint64_t v135 = v42;
    uint64_t v146 = v61;
    uint64_t v147 = v60;
    double v66 = a2;
    *(void *)&long long v202 = v60;
    *((void *)&v202 + 1) = v61;
    uint64_t v203 = v40;
    v204 = v62;
    uint64_t v205 = v34;
    uint64_t v206 = v42;
    uint64_t v207 = v63;
    uint64_t v208 = v53;
    uint64_t v209 = v44;
    uint64_t v210 = v64;
    uint64_t v211 = v49;
    uint64_t v212 = v48;
    __int16 v213 = v65;
    uint64_t v67 = v149 + 8;
    uint64_t v68 = v137;
    v137 = *(void (**)(void, void))(v149 + 8);
    id v138 = (void *)v40;
    v137(v68, v141);
    sub_24D2B6E58((uint64_t)&v171);
    uint64_t v69 = v148[3];
    uint64_t v70 = v148[4];
    sub_24D2B8A34(v148, v69);
    unsigned int v71 = v65;
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v70 + 8))(&v171, v69, v70);
    uint64_t v72 = v174;
    uint64_t v73 = v175;
    sub_24D2B8A34(&v171, (uint64_t)v174);
    uint64_t v74 = v72;
    uint64_t v75 = v138;
    (*((void (**)(void **__return_ptr, void *, void (*)()))v73 + 3))(&v185, v74, v73);
    int v76 = v188;
    sub_24D2D78EC(v185, v186, v187, (char)v188);
    sub_24D2B6E58((uint64_t)&v171);
    uint64_t v149 = v67;
    uint64_t v131 = v53;
    uint64_t v132 = v44;
    uint64_t v129 = v48;
    uint64_t v130 = v49;
    int v139 = v71;
    if (v75 == (void *)1)
    {
      LOBYTE(v77) = v76 == 1;
    }
    else
    {
      sub_24D2B6FAC(v147, v146, v75, v145);
      unsigned int v77 = v71 >> 8;
    }
    sub_24D2BF998(v66, 0, 0, 0, (uint64_t)&v202, v77, (uint64_t)&v154);
    uint64_t v78 = v118;
    uint64_t v79 = v167;
    int v121 = v166;
    int v122 = v169;
    int v119 = v170;
    int v120 = v165;
    uint64_t v123 = v164;
    uint64_t v80 = v163;
    int v81 = v162;
    uint64_t v124 = v161;
    uint64_t v125 = v168;
    uint64_t v82 = v160;
    uint64_t v83 = v158;
    uint64_t v84 = (void *)v156;
    uint64_t v85 = v157;
    uint64_t v126 = v155;
    id v127 = v154;
    uint64_t v128 = v159;
    v185 = v154;
    LOBYTE(v186) = v155;
    uint64_t v187 = v156;
    v188 = v157;
    v189 = v158;
    unsigned __int8 v190 = v159;
    uint64_t v191 = v160;
    unsigned __int8 v192 = v161;
    unsigned __int8 v193 = v162;
    uint64_t v194 = v163;
    unsigned __int8 v195 = v164;
    unsigned __int8 v196 = v165;
    unsigned __int8 v197 = v166;
    uint64_t v198 = v167;
    uint64_t v199 = v168;
    unsigned __int8 v200 = v169;
    unsigned __int8 v201 = v170;
    uint64_t v86 = v148;
    uint64_t v87 = v148[3];
    uint64_t v88 = v148[4];
    sub_24D2B8A34(v148, v87);
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v88 + 8))(&v171, v87, v88);
    uint64_t v89 = v174;
    unint64_t v90 = v175;
    sub_24D2B8A34(&v171, (uint64_t)v174);
    uint64_t v91 = (uint64_t)v136;
    (*((void (**)(void *, void (*)()))v90 + 2))(v89, v90);
    swift_beginAccess();
    id v92 = v85;
    id v93 = v84;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v150[0] = *(void *)v78;
    *(void *)uint64_t v78 = 0x8000000000000000;
    sub_24D2D62B4((uint64_t)&v185, v91, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v78 = v150[0];
    swift_bridgeObjectRelease();
    v137(v91, v141);
    swift_endAccess();
    sub_24D2B6E58((uint64_t)&v171);
    if (v81) {
      uint64_t v95 = 256;
    }
    else {
      uint64_t v95 = 0;
    }
    v171 = v127;
    uint64_t v172 = v126;
    uint64_t v96 = v95 | v124;
    if (v120) {
      uint64_t v97 = 256;
    }
    else {
      uint64_t v97 = 0;
    }
    uint64_t v98 = v97 | v123;
    uint64_t v99 = 0x10000;
    if (!v121) {
      uint64_t v99 = 0;
    }
    uint64_t v100 = v98 | v99;
    if (v119) {
      int v101 = 256;
    }
    else {
      int v101 = 0;
    }
    v173 = (uint64_t (*)(uint64_t))v84;
    v174 = v85;
    v175 = v83;
    uint64_t v176 = v128;
    uint64_t v177 = v82;
    uint64_t v178 = v96;
    uint64_t v179 = v80;
    uint64_t v180 = v100;
    uint64_t v181 = v79;
    uint64_t v182 = v125;
    char v184 = 3;
    uint64_t v102 = ObjectType
         + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    int v183 = v101 | v122 | 0x3040000;
    if (MEMORY[0x253326120](ObjectType+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      uint64_t v128 = *(void *)(v102 + 8);
      uint64_t ObjectType = swift_getObjectType();
      v153[3] = type metadata accessor for FMFindingLocalizer();
      v153[4] = &off_26FF86750;
      id v103 = v140;
      v153[0] = v140;
      uint64_t v104 = v86[3];
      uint64_t v105 = v86[4];
      sub_24D2B8A34(v86, v104);
      v148 = *(void **)(v105 + 8);
      id v106 = v93;
      id v107 = v92;
      id v108 = v106;
      id v109 = v107;
      id v110 = v103;
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v148)(v150, v104, v105);
      uint64_t v111 = v151;
      uint64_t v112 = v152;
      sub_24D2B8A34(v150, v151);
      uint64_t v113 = v136;
      (*(void (**)(uint64_t, uint64_t))(v112 + 16))(v111, v112);
      (*(void (**)(void *, void **, char *, uint64_t))(v128 + 8))(v153, &v171, v113, ObjectType);

      swift_unknownObjectRelease();
      sub_24D2B6E14(v147, v146, v138, v145);
      swift_release();
      v137(v113, v141);
      sub_24D2B6E58((uint64_t)v150);
      sub_24D2B6E58((uint64_t)v153);
    }
    else
    {
      id v114 = v93;
      id v115 = v92;
      id v116 = v114;
      id v117 = v115;
      swift_release();
      sub_24D2B6E14(v147, v146, v138, v145);
    }
  }
}

void sub_24D2CED04(uint64_t a1, void *a2)
{
  void (*v19)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  _UNKNOWN **v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t ObjectType;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (*v31)(void *__return_ptr, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t, double);
  uint64_t v33;
  uint64_t v34;
  void v35[3];
  uint64_t v36;
  uint64_t v37;
  void v38[3];
  uint64_t v39;
  _UNKNOWN **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  long long v44;
  long long v45;
  long long v46;
  unsigned char v47[26];
  char v48;

  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x253326120](a1 + 16);
  if (v8)
  {
    uint64_t v9 = (char *)v8;
    uint64_t v10 = MEMORY[0x253326120](v8+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v34 = v5;
      uint64_t v33 = v4;
      uint64_t v12 = sub_24D39C950();
      sub_24D2B508C(v12, (uint64_t)qword_269869FD0);
      uint64_t v13 = sub_24D39C930();
      os_log_type_t v14 = sub_24D39CDF0();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl(&dword_24D2B1000, v13, v14, "ðŸ§­ FMFindingLocalizer: Did not update range estimate so reset state", v15, 2u);
        MEMORY[0x253326010](v15, -1, -1);
      }

      uint64_t v17 = a2[3];
      uint64_t v16 = a2[4];
      uint64_t v18 = sub_24D2B8A34(a2, v17);
      uint64_t v19 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 8);
      uint64_t v30 = v18;
      uint64_t v31 = v19;
      v19(v38, v17, v16);
      uint64_t v20 = v39;
      uint64_t v21 = v40;
      sub_24D2B8A34(v38, v39);
      ((void (*)(uint64_t, _UNKNOWN **))v21[2])(v20, v21);
      swift_beginAccess();
      uint64_t v22 = sub_24D2D57EC((uint64_t)v7, (uint64_t)&v41);
      uint64_t v23 = v34 + 8;
      uint64_t v32 = *(void (**)(char *, uint64_t, double))(v34 + 8);
      v32(v7, v33, v22);
      sub_24D2B6E14(v41, v42, (void *)v43, (void *)v44);
      swift_endAccess();
      sub_24D2B6E58((uint64_t)v38);
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      uint64_t v43 = 1;
      uint64_t v44 = 0u;
      uint64_t v45 = 0u;
      int v46 = 0u;
      memset(v47, 0, sizeof(v47));
      uint64_t v48 = 4;
      uint64_t v24 = &v9[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate];
      if (MEMORY[0x253326120](&v9[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate]))
      {
        uint64_t v34 = v23;
        uint64_t v25 = *((void *)v24 + 1);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v39 = type metadata accessor for FMFindingLocalizer();
        uint64_t v40 = &off_26FF86750;
        v38[0] = v11;
        uint64_t v27 = v11;
        v31(v35, v17, v16);
        uint64_t v28 = v36;
        os_log_type_t v29 = v37;
        sub_24D2B8A34(v35, v36);
        (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
        (*(void (**)(void *, uint64_t *, uint64_t, char *, uint64_t, uint64_t))(v25 + 16))(v38, &v41, 3, v7, ObjectType, v25);

        swift_unknownObjectRelease();
        ((void (*)(char *, uint64_t))v32)(v7, v33);
        sub_24D2B6E58((uint64_t)v35);
        sub_24D2B6E58((uint64_t)v38);
      }
      else
      {
      }
    }
    else
    {
    }
  }
}

void sub_24D2CF150(void *a1, void *a2)
{
  void (*v17)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v18;
  void (**v19)(uint64_t, void *);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void (**v63)(void **__return_ptr, uint64_t, void *);
  unsigned int v64;
  id v65;
  uint64_t v66;
  char v67;
  double v68;
  char v69;
  void **v70;
  void **v71;
  void **v72;
  void *v73;
  unsigned int v74;
  id v75;
  double v76;
  int v77;
  void *v78;
  int v79;
  void *v80;
  int v81;
  void *v82;
  int v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void (**v91)(uint64_t, void *);
  uint64_t v92;
  char *v93;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int16 v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  int v112;
  int v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  id v119;
  id v120;
  char *v121;
  void *v122;
  uint64_t ObjectType;
  id v124;
  char *v125;
  void *v126;
  void (*v127)(uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(void *__return_ptr, uint64_t, uint64_t);
  void *v142;
  uint64_t v143;
  uint64_t v144;
  void v145[3];
  uint64_t v146;
  uint64_t v147;
  void v148[8];
  unsigned char v149[104];
  void v150[3];
  uint64_t v151;
  void (**v152)(uint64_t, void *);
  uint64_t v153;
  void *v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  void *v158;
  void *v159;
  __int16 v160;
  char v161;
  void *v162;
  char v163;
  void *v164;
  void *v165;
  void *v166;
  char v167;
  void *v168;
  char v169;
  char v170;
  void *v171;
  char v172;
  char v173;
  char v174;
  void *v175;
  void *v176;
  char v177;
  char v178;
  void v179[12];
  __int16 v180;
  void *v181;
  uint64_t v182;
  uint64_t v183;
  long long v184;
  long long v185;
  long long v186;
  unsigned char v187[26];

  uint64_t v5 = sub_24D39C8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v110 - v10;
  uint64_t v12 = MEMORY[0x253326120](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v12)
  {
    uint64_t v13 = (char *)v12;
    uint64_t ObjectType = v2;
    uint64_t v125 = v9;
    uint64_t v15 = a2[3];
    uint64_t v14 = a2[4];
    uint64_t v16 = sub_24D2B8A34(a2, v15);
    uint64_t v17 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 8);
    uint64_t v142 = v16;
    uint64_t v143 = v14 + 8;
    uint64_t v144 = v14;
    uint64_t v141 = v17;
    v17(v150, v15, v14);
    uint64_t v18 = v151;
    uint64_t v19 = v152;
    sub_24D2B8A34(v150, v151);
    v19[2](v18, v19);
    uint64_t v20 = &v13[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
    swift_beginAccess();
    int v120 = a1;
    int v121 = v20;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(v21 + 16);
    uint64_t v124 = v13;
    if (v22)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_24D3839F0((uint64_t)v11);
      if (v24)
      {
        uint64_t v25 = *(void *)(v21 + 56) + 104 * v23;
        uint64_t v130 = *(void *)v25;
        v140 = *(unsigned __int8 *)(v25 + 8);
        uint64_t v27 = *(void **)(v25 + 16);
        os_log_t v26 = *(void **)(v25 + 24);
        uint64_t v28 = *(void *)(v25 + 32);
        id v138 = *(unsigned __int8 *)(v25 + 40);
        int v139 = v28;
        v137 = *(void *)(v25 + 48);
        os_log_type_t v29 = *(unsigned __int8 *)(v25 + 56);
        LODWORD(v28) = *(unsigned __int8 *)(v25 + 57);
        id v136 = *(void *)(v25 + 64);
        uint64_t v30 = *(unsigned __int8 *)(v25 + 72);
        uint64_t v31 = *(unsigned __int8 *)(v25 + 73);
        uint64_t v32 = *(unsigned __int8 *)(v25 + 74);
        uint64_t v33 = *(void *)(v25 + 80);
        uint64_t v133 = *(void *)(v25 + 88);
        uint64_t v134 = v33;
        uint64_t v34 = *(unsigned __int8 *)(v25 + 96);
        unint64_t v35 = *(unsigned __int8 *)(v25 + 97);
        if (v28) {
          char v36 = 256;
        }
        else {
          char v36 = 0;
        }
        uint64_t v135 = v36 | v29;
        if (v31) {
          uint64_t v37 = 256;
        }
        else {
          uint64_t v37 = 0;
        }
        uint64_t v38 = v37 | v30;
        uint64_t v39 = 0x10000;
        if (!v32) {
          uint64_t v39 = 0;
        }
        uint64_t v132 = v38 | v39;
        if (v35) {
          uint64_t v40 = 256;
        }
        else {
          uint64_t v40 = 0;
        }
        uint64_t v131 = v40 | v34;
        uint64_t v41 = v26;
        uint64_t v42 = v26;
        uint64_t v43 = (uint64_t)v27;
        uint64_t v44 = v27;
      }
      else
      {
        uint64_t v130 = 0;
        int v139 = 0;
        v140 = 0;
        uint64_t v41 = 0;
        v137 = 0;
        id v138 = 0;
        uint64_t v135 = 0;
        id v136 = 0;
        uint64_t v132 = 0;
        uint64_t v133 = 0;
        uint64_t v134 = 0;
        uint64_t v131 = 0;
        uint64_t v43 = 1;
      }
      uint64_t v55 = v144;
      swift_bridgeObjectRelease();
      int v46 = v139;
      uint64_t v22 = v140;
      uint64_t v48 = v137;
      int v47 = v138;
      uint64_t v49 = v135;
      int v50 = v136;
      uint64_t v53 = v133;
      uint64_t v52 = v134;
      int v51 = v132;
      uint64_t v54 = v131;
      uint64_t v45 = v130;
    }
    else
    {
      uint64_t v45 = 0;
      uint64_t v41 = 0;
      int v46 = 0;
      int v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      int v50 = 0;
      int v51 = 0;
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      uint64_t v54 = 0;
      uint64_t v43 = 1;
      uint64_t v55 = v144;
    }
    v179[0] = v45;
    v179[1] = v22;
    v179[2] = v43;
    uint64_t v126 = v41;
    v179[3] = v41;
    id v138 = v47;
    int v139 = v46;
    v179[4] = v46;
    v179[5] = v47;
    id v136 = v50;
    v137 = v48;
    v179[6] = v48;
    uint64_t v134 = v52;
    uint64_t v135 = v49;
    v179[7] = v49;
    v179[8] = v50;
    uint64_t v132 = v51;
    uint64_t v133 = v53;
    v179[9] = v51;
    v179[10] = v52;
    v179[11] = v53;
    uint64_t v131 = v54;
    uint64_t v180 = v54;
    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    int v57 = v45;
    unsigned int v58 = v11;
    uint64_t v129 = v5;
    id v59 = v22;
    uint64_t v60 = v5;
    uint64_t v61 = (void *)v43;
    id v127 = v56;
    v56((uint64_t)v58, v60);
    sub_24D2B6E58((uint64_t)v150);
    v141(v150, v15, v55);
    uint64_t v62 = v151;
    uint64_t v63 = (void (**)(void **__return_ptr, uint64_t, void *))v152;
    sub_24D2B8A34(v150, v151);
    v63[3](&v181, v62, v63);
    uint64_t v64 = v184;
    sub_24D2D78EC(v181, v182, v183, v184);
    sub_24D2B6E58((uint64_t)v150);
    int v65 = v120;
    uint64_t v128 = v6 + 8;
    uint64_t v130 = v57;
    v140 = v59;
    int v122 = v61;
    double v66 = v15;
    if (v120)
    {
      if (v61 == (void *)1)
      {
        LOBYTE(v64) = v64 == 1;
      }
      else
      {
        uint64_t v74 = v131;
        sub_24D2B6FAC(v57, v140, v61, v126);
        uint64_t v64 = v74 >> 8;
      }
      uint64_t v75 = v65;
      uint64_t v70 = &v181;
      unsigned int v71 = &v181;
      uint64_t v72 = (void **)v179;
      uint64_t v68 = 0.0;
      uint64_t v69 = 1;
      uint64_t v73 = v65;
      uint64_t v67 = v64;
    }
    else
    {
      uint64_t v67 = v64 == 1;
      uint64_t v181 = 0;
      uint64_t v182 = 0;
      int v183 = 1;
      char v184 = 0u;
      if (v61 == (void *)1) {
        uint64_t v68 = 0.0;
      }
      else {
        uint64_t v68 = *(double *)&v57;
      }
      v185 = 0uLL;
      if (v59) {
        uint64_t v69 = 1;
      }
      else {
        uint64_t v69 = v61 == (void *)1;
      }
      uint64_t v186 = 0uLL;
      memset(v187, 0, sizeof(v187));
      uint64_t v70 = (void **)v149;
      unsigned int v71 = (void **)v149;
      uint64_t v72 = &v181;
      uint64_t v73 = 0;
    }
    int v76 = sub_24D2BF998(v68, v69, v73, 0, (uint64_t)v72, v67, (uint64_t)v71);
    unsigned int v77 = *((unsigned __int8 *)v70 + 97);
    uint64_t v78 = v70[11];
    uint64_t v79 = *((unsigned __int8 *)v70 + 96);
    uint64_t v80 = v70[10];
    uint64_t v113 = *((unsigned __int8 *)v70 + 74);
    id v114 = v79;
    int v81 = *((unsigned __int8 *)v70 + 73);
    uint64_t v111 = v77;
    uint64_t v112 = v81;
    id v115 = *((unsigned __int8 *)v70 + 72);
    uint64_t v82 = v70[8];
    uint64_t v83 = *((unsigned __int8 *)v70 + 57);
    id v116 = *((unsigned __int8 *)v70 + 56);
    id v117 = v78;
    uint64_t v84 = v70[6];
    id v118 = *((unsigned __int8 *)v70 + 40);
    uint64_t v85 = v70[4];
    uint64_t v87 = v70[2];
    uint64_t v86 = v70[3];
    uint64_t v88 = *((unsigned __int8 *)v70 + 8);
    uint64_t v89 = *v70;
    unsigned __int8 v162 = *v70;
    uint64_t v163 = v88;
    unsigned __int8 v164 = v87;
    unsigned __int8 v165 = v86;
    unsigned __int8 v166 = v85;
    uint64_t v167 = v118;
    uint64_t v168 = v84;
    unsigned __int8 v169 = v116;
    unsigned __int8 v170 = v83;
    v171 = v82;
    uint64_t v172 = v115;
    v173 = v81;
    v174 = v113;
    v175 = v80;
    uint64_t v176 = v78;
    uint64_t v177 = v79;
    uint64_t v178 = v77;
    id v110 = v66;
    ((void (*)(void *__return_ptr, uint64_t, uint64_t, double))v141)(v150, v66, v144, v76);
    unint64_t v90 = v151;
    uint64_t v91 = v152;
    sub_24D2B8A34(v150, v151);
    id v92 = (uint64_t)v125;
    v91[2](v90, v91);
    id v93 = v121;
    swift_beginAccess();
    int v120 = v86;
    int v119 = v87;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v145[0] = *(void *)v93;
    *(void *)id v93 = 0x8000000000000000;
    sub_24D2D62B4((uint64_t)&v162, v92, isUniquelyReferenced_nonNull_native);
    *(void *)id v93 = v145[0];
    swift_bridgeObjectRelease();
    v127(v92, v129);
    swift_endAccess();
    sub_24D2B6E58((uint64_t)v150);
    if (v83) {
      uint64_t v95 = 256;
    }
    else {
      uint64_t v95 = 0;
    }
    v150[0] = v89;
    v150[1] = v88;
    uint64_t v96 = v95 | v116;
    if (v112) {
      uint64_t v97 = 256;
    }
    else {
      uint64_t v97 = 0;
    }
    uint64_t v98 = v97 | v115;
    uint64_t v99 = 0x10000;
    if (!v113) {
      uint64_t v99 = 0;
    }
    uint64_t v100 = v98 | v99;
    if (v111) {
      int v101 = 256;
    }
    else {
      int v101 = 0;
    }
    v150[2] = v87;
    uint64_t v151 = (uint64_t)v86;
    uint64_t v152 = (void (**)(uint64_t, void *))v85;
    v153 = v118;
    uint64_t v154 = v84;
    unsigned __int8 v155 = v96;
    uint64_t v156 = v82;
    v157 = v100;
    uint64_t v158 = v80;
    unsigned __int8 v159 = v117;
    uint64_t v160 = v101 | v114;
    uint64_t v102 = ObjectType
         + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    unsigned __int8 v161 = 4;
    if (MEMORY[0x253326120](ObjectType+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      id v103 = *(void *)(v102 + 8);
      uint64_t ObjectType = swift_getObjectType();
      v148[3] = type metadata accessor for FMFindingLocalizer();
      v148[4] = &off_26FF86750;
      uint64_t v104 = v124;
      v148[0] = v124;
      uint64_t v105 = v119;
      id v106 = v120;
      id v107 = v104;
      v141(v145, v110, v144);
      id v109 = v146;
      id v108 = v147;
      sub_24D2B8A34(v145, v146);
      (*(void (**)(uint64_t, uint64_t))(v108 + 16))(v109, v108);
      (*(void (**)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 16))(v148, v150, 3, v92, ObjectType, v103);

      swift_unknownObjectRelease();
      sub_24D2B6E14(v130, v140, v122, v126);
      v127(v92, v129);
      sub_24D2B6E58((uint64_t)v145);
      sub_24D2B6E58((uint64_t)v148);
    }
    else
    {
      sub_24D2B6E14(v130, v140, v122, v126);
    }
  }
}

void sub_24D2CFA44(void *a1, void *a2)
{
  void (*v17)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  unsigned int v58;
  id v59;
  id v60;
  double v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int16 v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  int v92;
  int v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t ObjectType;
  id v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  void *v111;
  int v112;
  void (*v113)(void *__return_ptr, uint64_t, uint64_t);
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void v126[3];
  uint64_t v127;
  uint64_t v128;
  void v129[8];
  void *v130;
  unsigned __int8 v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  unsigned __int8 v135;
  uint64_t v136;
  unsigned __int8 v137;
  unsigned __int8 v138;
  uint64_t v139;
  unsigned __int8 v140;
  unsigned __int8 v141;
  unsigned __int8 v142;
  uint64_t v143;
  uint64_t v144;
  unsigned __int8 v145;
  unsigned __int8 v146;
  void v147[3];
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int16 v157;
  char v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  uint64_t v163;
  unsigned __int8 v164;
  uint64_t v165;
  unsigned __int8 v166;
  unsigned __int8 v167;
  uint64_t v168;
  unsigned __int8 v169;
  unsigned __int8 v170;
  unsigned __int8 v171;
  uint64_t v172;
  uint64_t v173;
  unsigned __int8 v174;
  unsigned __int8 v175;
  void v176[12];
  __int16 v177;

  uint64_t v5 = sub_24D39C8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v90 - v10;
  uint64_t v12 = MEMORY[0x253326120](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v12)
  {
    uint64_t v13 = (char *)v12;
    uint64_t v125 = v6;
    int v101 = a1;
    uint64_t ObjectType = v2;
    uint64_t v14 = a2[3];
    uint64_t v15 = a2[4];
    uint64_t v16 = sub_24D2B8A34(a2, v14);
    uint64_t v17 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 8);
    id v114 = v16;
    id v115 = v15 + 8;
    id v116 = v15;
    id v117 = v14;
    uint64_t v113 = v17;
    v17(v147, v14, v15);
    uint64_t v18 = v148;
    uint64_t v19 = v149;
    sub_24D2B8A34(v147, v148);
    (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
    uint64_t v20 = &v13[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
    swift_beginAccess();
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(void *)(*(void *)v20 + 16);
    id v118 = v5;
    id v108 = v13;
    uint64_t v102 = v9;
    uint64_t v91 = v20;
    if (v22)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_24D3839F0((uint64_t)v11);
      if (v24)
      {
        uint64_t v25 = *(void *)(v21 + 56) + 104 * v23;
        os_log_t v26 = *(void *)v25;
        uint64_t v27 = *(unsigned __int8 *)(v25 + 8);
        uint64_t v28 = *(void *)(v25 + 16);
        os_log_type_t v29 = *(void **)(v25 + 24);
        uint64_t v30 = *(void *)(v25 + 32);
        uint64_t v31 = *(unsigned __int8 *)(v25 + 40);
        uint64_t v124 = *(void *)(v25 + 48);
        uint64_t v32 = *(unsigned __int8 *)(v25 + 56);
        uint64_t v33 = *(unsigned __int8 *)(v25 + 57);
        uint64_t v123 = *(void *)(v25 + 64);
        uint64_t v34 = *(unsigned __int8 *)(v25 + 72);
        unint64_t v35 = *(unsigned __int8 *)(v25 + 73);
        char v36 = *(unsigned __int8 *)(v25 + 74);
        uint64_t v37 = *(void *)(v25 + 80);
        int v120 = *(void *)(v25 + 88);
        int v121 = v37;
        uint64_t v38 = *(unsigned __int8 *)(v25 + 96);
        uint64_t v39 = *(unsigned __int8 *)(v25 + 97);
        if (v33) {
          uint64_t v40 = 256;
        }
        else {
          uint64_t v40 = 0;
        }
        int v122 = v40 | v32;
        if (v35) {
          uint64_t v41 = 256;
        }
        else {
          uint64_t v41 = 0;
        }
        uint64_t v42 = v41 | v34;
        uint64_t v43 = 0x10000;
        if (!v36) {
          uint64_t v43 = 0;
        }
        int v119 = v42 | v43;
        if (v39) {
          uint64_t v44 = 256;
        }
        else {
          uint64_t v44 = 0;
        }
        uint64_t v112 = v44 | v38;
        uint64_t v45 = v29;
        int v46 = (id)v28;
      }
      else
      {
        os_log_t v26 = 0;
        uint64_t v27 = 0;
        os_log_type_t v29 = 0;
        uint64_t v30 = 0;
        uint64_t v31 = 0;
        uint64_t v123 = 0;
        uint64_t v124 = 0;
        int v121 = 0;
        int v122 = 0;
        int v119 = 0;
        int v120 = 0;
        uint64_t v112 = 0;
        uint64_t v28 = 1;
      }
      swift_bridgeObjectRelease();
      uint64_t v22 = v122;
      uint64_t v48 = v123;
      int v51 = v120;
      int v50 = v121;
      uint64_t v49 = v119;
      uint64_t v52 = v112;
      int v47 = v124;
    }
    else
    {
      os_log_t v26 = 0;
      uint64_t v27 = 0;
      os_log_type_t v29 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      int v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      int v50 = 0;
      int v51 = 0;
      uint64_t v52 = 0;
      uint64_t v28 = 1;
    }
    uint64_t v123 = v48;
    uint64_t v124 = v47;
    int v120 = v51;
    int v121 = v50;
    int v119 = v49;
    int v122 = v22;
    id v109 = v26;
    v176[0] = v26;
    v176[1] = v27;
    v176[2] = v28;
    v176[3] = v29;
    v176[4] = v30;
    v176[5] = v31;
    v176[6] = v47;
    v176[7] = v22;
    v176[8] = v48;
    v176[9] = v49;
    v176[10] = v50;
    v176[11] = v51;
    uint64_t v177 = v52;
    uint64_t v53 = v125 + 8;
    id v110 = *(void (**)(char *, uint64_t))(v125 + 8);
    uint64_t v111 = (void *)v28;
    v110(v11, v118);
    sub_24D2B6E58((uint64_t)v147);
    v113(v147, v117, v116);
    uint64_t v54 = v148;
    uint64_t v55 = v149;
    sub_24D2B8A34(v147, v148);
    uint64_t v56 = v54;
    int v57 = v111;
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v55 + 24))(&v159, v56, v55);
    unsigned int v58 = v162;
    sub_24D2D78EC(v159, v160, v161, (char)v162);
    sub_24D2B6E58((uint64_t)v147);
    uint64_t v125 = v53;
    uint64_t v105 = v29;
    id v106 = v27;
    id v103 = v31;
    uint64_t v104 = v30;
    uint64_t v112 = v52;
    if (v57 == (void *)1)
    {
      LOBYTE(v58) = v58 == 1;
    }
    else
    {
      sub_24D2B6FAC(v109, v27, v57, v29);
      unsigned int v58 = v52 >> 8;
    }
    id v59 = v101;
    uint64_t v60 = v101;
    uint64_t v61 = sub_24D2BF998(0.0, 1, 0, v59, (uint64_t)v176, v58, (uint64_t)&v130);
    uint64_t v62 = v91;
    uint64_t v63 = v143;
    uint64_t v94 = v142;
    uint64_t v95 = v145;
    id v92 = v146;
    id v93 = v141;
    uint64_t v96 = v140;
    uint64_t v64 = v139;
    LODWORD(v59) = v138;
    uint64_t v97 = v137;
    uint64_t v98 = v144;
    int v65 = v136;
    double v66 = v134;
    uint64_t v68 = (void *)v132;
    uint64_t v67 = v133;
    uint64_t v99 = v131;
    uint64_t v100 = v135;
    uint64_t v69 = v130;
    unsigned __int8 v159 = v130;
    LOBYTE(v160) = v131;
    unsigned __int8 v161 = v132;
    unsigned __int8 v162 = v133;
    uint64_t v163 = v134;
    unsigned __int8 v164 = v135;
    unsigned __int8 v165 = v136;
    unsigned __int8 v166 = v137;
    uint64_t v167 = v138;
    uint64_t v168 = v139;
    unsigned __int8 v169 = v140;
    unsigned __int8 v170 = v141;
    v171 = v142;
    uint64_t v172 = v143;
    v173 = v144;
    v174 = v145;
    v175 = v146;
    ((void (*)(void *__return_ptr, uint64_t, uint64_t, double))v113)(v147, v117, v116, v61);
    uint64_t v70 = v148;
    unsigned int v71 = v149;
    sub_24D2B8A34(v147, v148);
    uint64_t v72 = (uint64_t)v102;
    (*(void (**)(uint64_t, uint64_t))(v71 + 16))(v70, v71);
    swift_beginAccess();
    int v101 = v67;
    uint64_t v73 = v68;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v126[0] = *(void *)v62;
    *(void *)uint64_t v62 = 0x8000000000000000;
    sub_24D2D62B4((uint64_t)&v159, v72, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v62 = v126[0];
    swift_bridgeObjectRelease();
    v110((char *)v72, v118);
    swift_endAccess();
    sub_24D2B6E58((uint64_t)v147);
    if (v59) {
      uint64_t v75 = 256;
    }
    else {
      uint64_t v75 = 0;
    }
    v147[0] = v69;
    v147[1] = v99;
    int v76 = v75 | v97;
    if (v93) {
      unsigned int v77 = 256;
    }
    else {
      unsigned int v77 = 0;
    }
    uint64_t v78 = v77 | v96;
    uint64_t v79 = 0x10000;
    if (!v94) {
      uint64_t v79 = 0;
    }
    uint64_t v80 = v78 | v79;
    if (v92) {
      int v81 = 256;
    }
    else {
      int v81 = 0;
    }
    v147[2] = v68;
    v148 = (uint64_t)v67;
    uint64_t v149 = v66;
    uint64_t v150 = v100;
    uint64_t v151 = v65;
    uint64_t v152 = v76;
    v153 = v64;
    uint64_t v154 = v80;
    unsigned __int8 v155 = v63;
    uint64_t v156 = v98;
    v157 = v81 | v95;
    uint64_t v82 = ObjectType
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    uint64_t v158 = 4;
    if (MEMORY[0x253326120](ObjectType+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      uint64_t v83 = *(void *)(v82 + 8);
      uint64_t ObjectType = swift_getObjectType();
      v129[3] = type metadata accessor for FMFindingLocalizer();
      v129[4] = &off_26FF86750;
      uint64_t v84 = v108;
      v129[0] = v108;
      uint64_t v85 = v73;
      uint64_t v86 = v101;
      uint64_t v87 = v84;
      v113(v126, v117, v116);
      uint64_t v89 = v127;
      uint64_t v88 = v128;
      sub_24D2B8A34(v126, v127);
      (*(void (**)(uint64_t, uint64_t))(v88 + 16))(v89, v88);
      (*(void (**)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 16))(v129, v147, 3, v72, ObjectType, v83);

      swift_unknownObjectRelease();
      sub_24D2B6E14(v109, v106, v111, v105);
      v110((char *)v72, v118);
      sub_24D2B6E58((uint64_t)v126);
      sub_24D2B6E58((uint64_t)v129);
    }
    else
    {
      sub_24D2B6E14(v109, v106, v111, v105);
    }
  }
}

uint64_t sub_24D2D02A0(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  uint64_t result = MEMORY[0x253326120](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (result)
  {
    uint64_t v9 = (void *)result;
    swift_getErrorValue();
    if (sub_24D39D500() != 300)
    {
LABEL_8:
      uint64_t v16 = *(int *)(sub_24D2B7450(&qword_2698610B0) + 48);
      uint64_t v17 = a2[3];
      uint64_t v18 = a2[4];
      sub_24D2B8A34(a2, v17);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 8))(v23, v17, v18);
      uint64_t v19 = v24;
      uint64_t v20 = v25;
      sub_24D2B8A34(v23, v24);
      (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
      *(void *)&v7[v16] = a1;
      swift_storeEnumTagMultiPayload();
      id v21 = a1;
      sub_24D2CAC5C((uint64_t)v7, 0);

      sub_24D2D7064((uint64_t)v7);
      return sub_24D2B6E58((uint64_t)v23);
    }
    swift_getErrorValue();
    uint64_t v10 = sub_24D39D510();
    uint64_t v12 = v11;
    if (v10 == sub_24D39CAF0() && v12 == v13)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v15 = sub_24D39D4B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        goto LABEL_8;
      }
    }
    swift_storeEnumTagMultiPayload();
    sub_24D2CAC5C((uint64_t)v7, 0);

    return sub_24D2D7064((uint64_t)v7);
  }
  return result;
}

void sub_24D2D04E0(char a1, void *a2)
{
}

void sub_24D2D0508(uint64_t a1, void *a2)
{
}

void sub_24D2D0514(uint64_t a1, void *a2)
{
  void (*v20)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v21;
  _UNKNOWN **v22;
  double v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t ObjectType;
  id v46;
  uint64_t v47;
  uint64_t v48;
  __int16 v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, double);
  void *v54;
  void (*v55)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void v70[3];
  uint64_t v71;
  uint64_t v72;
  void v73[3];
  uint64_t v74;
  _UNKNOWN **v75;
  uint64_t v76[4];

  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x253326120](a1 + 16);
  if (v8)
  {
    uint64_t v9 = (char *)v8;
    uint64_t v10 = v8
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner;
    uint64_t v11 = MEMORY[0x253326120](v8+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      uint64_t v69 = v4;
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v13 = sub_24D39C950();
      sub_24D2B508C(v13, (uint64_t)qword_269869FD0);
      uint64_t v14 = sub_24D39C930();
      os_log_type_t v15 = sub_24D39CDF0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_24D2B1000, v14, v15, "ðŸ§­ FMFindingLocalizer: Did not update range estimate so reset state", v16, 2u);
        MEMORY[0x253326010](v16, -1, -1);
      }

      uint64_t v17 = a2[3];
      uint64_t v18 = a2[4];
      uint64_t v19 = sub_24D2B8A34(a2, v17);
      uint64_t v20 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 8);
      uint64_t v54 = v19;
      uint64_t v56 = v18;
      uint64_t v55 = v20;
      v20(v73, v17, v18);
      id v21 = v74;
      uint64_t v22 = v75;
      sub_24D2B8A34(v73, v74);
      ((void (*)(uint64_t, _UNKNOWN **))v22[2])(v21, v22);
      swift_beginAccess();
      uint64_t v23 = sub_24D2D57EC((uint64_t)v7, (uint64_t)v76);
      uint64_t v53 = *(void (**)(char *, uint64_t, double))(v5 + 8);
      v53(v7, v69, v23);
      sub_24D2B6E14(v76[0], v76[1], (void *)v76[2], (void *)v76[3]);
      swift_endAccess();
      sub_24D2B6E58((uint64_t)v73);
      if ((*(_WORD *)((unsigned char *)v12 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology) & 0x8100) == 0x100)
      {
        uint64_t v24 = MEMORY[0x253326120](v10);
        if (v24)
        {
          uint64_t v25 = (void *)v24;
          os_log_t v26 = v24 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement;
          uint64_t v27 = *(void *)(v24 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement);
          uint64_t v28 = *(void *)(v26 + 8);
          os_log_type_t v29 = *(void **)(v26 + 16);
          uint64_t v30 = *(void **)(v26 + 24);
          uint64_t v31 = *(void *)(v26 + 32);
          uint64_t v32 = *(void *)(v26 + 40);
          uint64_t v33 = *(void *)(v26 + 48);
          uint64_t v34 = *(void *)(v26 + 56);
          unint64_t v35 = *(void *)(v26 + 64);
          char v36 = *(void *)(v26 + 72);
          uint64_t v37 = *(void *)(v26 + 80);
          uint64_t v38 = *(unsigned __int16 *)(v26 + 96);
          uint64_t v39 = *(unsigned __int8 *)(v26 + 98);
          int v50 = *(unsigned char *)(v26 + 98);
          uint64_t v49 = *(_WORD *)(v26 + 96);
          unsigned int v58 = *(void *)(v26 + 88);
          id v59 = v37;
          uint64_t v60 = v36;
          uint64_t v61 = v35;
          uint64_t v40 = v17;
          uint64_t v41 = v27;
          uint64_t v68 = v28;
          uint64_t v62 = (uint64_t)v29;
          uint64_t v67 = v30;
          double v66 = v31;
          int v65 = v32;
          uint64_t v64 = v33;
          uint64_t v63 = v34;
          sub_24D2B6F80(v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v58, v49, v50);

          int v57 = v38 | (v39 << 16);
          uint64_t v42 = v41;
          uint64_t v17 = v40;
        }
        else
        {
          uint64_t v42 = 0;
          uint64_t v68 = 0;
          uint64_t v62 = 0;
          uint64_t v67 = 0;
          double v66 = 0;
          int v65 = 0;
          uint64_t v64 = 0;
          uint64_t v63 = 0;
          uint64_t v61 = 0;
          uint64_t v60 = 0;
          id v59 = 0;
          unsigned int v58 = 0;
          int v57 = 16711680;
        }
      }
      else
      {
        uint64_t v42 = 0;
        uint64_t v68 = 0;
        uint64_t v67 = 0;
        double v66 = 0;
        int v65 = 0;
        uint64_t v64 = 0;
        uint64_t v63 = 0;
        uint64_t v61 = 0;
        uint64_t v60 = 0;
        id v59 = 0;
        unsigned int v58 = 0;
        int v57 = 0x40000;
        uint64_t v62 = 1;
      }
      uint64_t v43 = &v9[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate];
      if (MEMORY[0x253326120](&v9[OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate]))
      {
        uint64_t v52 = v42;
        uint64_t v44 = *((void *)v43 + 1);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v74 = type metadata accessor for FMFindingLocalizer();
        uint64_t v75 = &off_26FF86750;
        v73[0] = v12;
        sub_24D2B74E8((uint64_t)v12 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement, (uint64_t)v76);
        int v46 = v12;
        sub_24D2D8C30((uint64_t)v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6F80);
        v55(v70, v17, v56);
        int v47 = v71;
        uint64_t v48 = v72;
        sub_24D2B8A34(v70, v71);
        (*(void (**)(uint64_t, uint64_t))(v48 + 16))(v47, v48);
        (*(void (**)(void *, uint64_t *, uint64_t, char *, uint64_t, uint64_t))(v44 + 16))(v73, v76, 3, v7, ObjectType, v44);

        sub_24D2D7AB4(v52, v68, (void *)v62, v67, v66, v65, v64, v63, v61, v60, v59, v58, v57, BYTE2(v57));
        sub_24D2D8C30((uint64_t)v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6DE8);

        swift_unknownObjectRelease();
        ((void (*)(char *, uint64_t))v53)(v7, v69);
        sub_24D2B6E58((uint64_t)v70);
        sub_24D2B6E58((uint64_t)v73);
      }
      else
      {
        sub_24D2D7AB4(v42, v68, (void *)v62, v67, v66, v65, v64, v63, v61, v60, v59, v58, v57, BYTE2(v57));
      }
    }
    else
    {
    }
  }
}

void sub_24D2D0C58(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v56)(void *__return_ptr, uint64_t, uint64_t);
  id v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  long long v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void v113[3];
  uint64_t v114;
  uint64_t v115;
  void v116[5];
  void v117[12];
  unsigned __int16 v118;
  unsigned __int8 v119;
  void v120[12];
  unsigned __int16 v121;
  unsigned __int8 v122;
  void v123[12];
  int v124;
  char v125;

  id v103 = a2;
  uint64_t v112 = a1;
  sub_24D2C05AC(a1, (uint64_t)v117, &qword_269861370);
  uint64_t v98 = v117[1];
  uint64_t v99 = (void *)v117[2];
  id v108 = (void *)v117[3];
  uint64_t v100 = v117[4];
  int v101 = v117[5];
  uint64_t v102 = v117[6];
  uint64_t v5 = v117[7];
  uint64_t v96 = v117[9];
  uint64_t v97 = v117[8];
  id v109 = v117[10];
  id v110 = v117[0];
  uint64_t v6 = v117[11];
  int v7 = v119;
  int v8 = v118;
  uint64_t v9 = sub_24D39C8A0();
  uint64_t v105 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v104 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = v3;
  uint64_t v11 = v3
      + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner;
  uint64_t v12 = MEMORY[0x253326120](v3+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v12)
  {
    uint64_t v13 = (void *)v12;
    uint64_t v95 = v9;
    sub_24D2C05AC(v112, (uint64_t)v120, &qword_269861370);
    char v14 = v122;
    if (v122 == 255)
    {
      id v106 = 0;
      id v107 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      unint64_t v25 = 0x4000000;
    }
    else
    {
      uint64_t v86 = v5;
      uint64_t v88 = a3;
      uint64_t v85 = v8 | (v7 << 16);
      id v106 = v120[1];
      id v107 = v120[0];
      uint64_t v26 = v121 | (v122 << 16);
      uint64_t v27 = v120[2];
      uint64_t v16 = v120[3];
      uint64_t v28 = v120[4];
      uint64_t v29 = v120[5];
      id v93 = v120[7];
      uint64_t v94 = v120[6];
      uint64_t v91 = v120[9];
      id v92 = v120[8];
      uint64_t v89 = v120[11];
      unint64_t v90 = v120[10];
      uint64_t v30 = (char *)MEMORY[0x253326120](v11);
      uint64_t v87 = v27;
      if (v30)
      {
        uint64_t v31 = &v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement];
        uint64_t v32 = *(void *)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement];
        int v81 = *(void *)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 8];
        uint64_t v82 = v32;
        uint64_t v33 = *(void **)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 16];
        uint64_t v79 = *(void **)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 24];
        uint64_t v80 = v33;
        uint64_t v34 = *(void *)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 32];
        unsigned int v77 = *(void *)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 40];
        uint64_t v78 = v34;
        uint64_t v35 = *(void *)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 48];
        uint64_t v75 = *(void *)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 56];
        int v76 = v35;
        uint64_t v74 = *(_OWORD *)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 64];
        uint64_t v36 = *(void *)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 80];
        uint64_t v72 = *(void *)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 88];
        uint64_t v73 = v36;
        LODWORD(v36) = *(unsigned __int16 *)&v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 96];
        uint64_t v70 = v30[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 98];
        unsigned int v71 = v36;
        uint64_t v37 = v106;
        *(void *)uint64_t v31 = v107;
        *((void *)v31 + 1) = v37;
        *((void *)v31 + 2) = v27;
        *((void *)v31 + 3) = v16;
        *((void *)v31 + 4) = v28;
        *((void *)v31 + 5) = v29;
        uint64_t v67 = v29;
        uint64_t v38 = v93;
        *((void *)v31 + 6) = v94;
        *((void *)v31 + 7) = v38;
        uint64_t v39 = v91;
        *((void *)v31 + 8) = v92;
        *((void *)v31 + 9) = v39;
        uint64_t v40 = v89;
        *((void *)v31 + 10) = v90;
        *((void *)v31 + 11) = v40;
        *((_WORD *)v31 + 48) = v26;
        unsigned int v41 = v85;
        uint64_t v64 = HIWORD(v85);
        v31[98] = v14;
        int v65 = v6;
        uint64_t v62 = v6;
        uint64_t v69 = v28;
        uint64_t v42 = v96;
        uint64_t v83 = v26;
        uint64_t v43 = v97;
        uint64_t v68 = v16;
        double v66 = v30;
        uint64_t v84 = v13;
        uint64_t v44 = v98;
        uint64_t v45 = v99;
        uint64_t v46 = v100;
        uint64_t v47 = v101;
        uint64_t v48 = v102;
        uint64_t v49 = v86;
        sub_24D2B6F80(v110, v98, v99, v108, v100, v101, v102, v86, v97, v96, v109, v62, v41, SBYTE2(v41));
        uint64_t v61 = v43;
        uint64_t v50 = v44;
        uint64_t v26 = v83;
        uint64_t v13 = v84;
        sub_24D2B6F80(v110, v50, v45, v108, v46, v47, v48, v49, v61, v42, v109, v65, v41, v64);
        sub_24D2B6DE8(v82, v81, v80, v79, v78, v77, v76, v75, v74, *((uint64_t *)&v74 + 1), v73, v72, v71, v70);

        uint64_t v16 = v68;
        uint64_t v17 = v69;
        uint64_t v18 = v67;
      }
      else
      {
        sub_24D2B6F80(v110, v98, v99, v108, v100, v101, v102, v86, v97, v96, v109, v6, v85, SBYTE2(v85));
        uint64_t v17 = v28;
        uint64_t v18 = v29;
      }
      uint64_t v20 = v93;
      uint64_t v19 = v94;
      uint64_t v22 = v91;
      uint64_t v21 = v92;
      uint64_t v24 = v89;
      uint64_t v23 = v90;
      unint64_t v25 = v26 & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v103 << 24) | 0x300000000;
      uint64_t v15 = v87;
      a3 = v88;
    }
    v123[0] = v107;
    v123[1] = v106;
    v123[2] = v15;
    v123[3] = v16;
    v123[4] = v17;
    v123[5] = v18;
    v123[6] = v19;
    v123[7] = v20;
    v123[8] = v21;
    v123[9] = v22;
    v123[10] = v23;
    v123[11] = v24;
    uint64_t v124 = v25;
    uint64_t v51 = v111
        + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    uint64_t v125 = BYTE4(v25);
    if (MEMORY[0x253326120](v111+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      uint64_t v52 = *(void *)(v51 + 8);
      uint64_t ObjectType = swift_getObjectType();
      v116[3] = type metadata accessor for FMFindingLocalizer();
      v116[4] = &off_26FF86750;
      v116[0] = v13;
      uint64_t v54 = a3[3];
      uint64_t v55 = a3[4];
      sub_24D2B8A34(a3, v54);
      uint64_t v56 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v55 + 8);
      int v57 = v13;
      v56(v113, v54, v55);
      unsigned int v58 = v114;
      id v59 = v115;
      sub_24D2B8A34(v113, v114);
      uint64_t v60 = v104;
      (*(void (**)(uint64_t, uint64_t))(v59 + 16))(v58, v59);
      (*(void (**)(void *, void *, char *, uint64_t, uint64_t))(v52 + 8))(v116, v123, v60, ObjectType, v52);

      swift_unknownObjectRelease();
      sub_24D2D7A50(v112);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v60, v95);
      sub_24D2B6E58((uint64_t)v113);
      sub_24D2B6E58((uint64_t)v116);
    }
    else
    {
      sub_24D2D7A50(v112);
    }
  }
}

uint64_t sub_24D2D120C(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x270FA5388](v5);
  int v7 = (char *)&v17[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x253326120](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (result)
  {
    uint64_t v9 = (void *)result;
    uint64_t v10 = *(int *)(sub_24D2B7450(&qword_2698610B0) + 48);
    uint64_t v11 = a2[3];
    uint64_t v12 = a2[4];
    sub_24D2B8A34(a2, v11);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 8))(v17, v11, v12);
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_24D2B8A34(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    *(void *)&v7[v10] = a1;
    swift_storeEnumTagMultiPayload();
    id v15 = a1;
    sub_24D2CAC5C((uint64_t)v7, 1);

    sub_24D2D7064((uint64_t)v7);
    return sub_24D2B6E58((uint64_t)v17);
  }
  return result;
}

void sub_24D2D1374(char a1, void *a2)
{
  uint64_t v5 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x270FA5388](v5);
  int v7 = (char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = (void *)MEMORY[0x253326120](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v8)
  {
    if (a1 == 3)
    {
      uint64_t v9 = a2[3];
      uint64_t v10 = a2[4];
      id v13 = v8;
      sub_24D2B8A34(a2, v9);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v14, v9, v10);
      uint64_t v11 = v15;
      uint64_t v12 = v16;
      sub_24D2B8A34(v14, v15);
      (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
      swift_storeEnumTagMultiPayload();
      sub_24D2CAC5C((uint64_t)v7, 0);

      sub_24D2D7064((uint64_t)v7);
      sub_24D2B6E58((uint64_t)v14);
    }
    else
    {
    }
  }
}

void sub_24D2D14E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = MEMORY[0x253326120](v2+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v5)
  {
    id v11 = (id)v5;
    uint64_t v6 = v2
       + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    if (MEMORY[0x253326120](v6))
    {
      uint64_t v7 = *(void *)(v6 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v12[3] = type metadata accessor for FMFindingLocalizer();
      v12[4] = &off_26FF86750;
      v12[0] = v11;
      uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 32);
      id v10 = v11;
      v9(v12, a1, a2, ObjectType, v7);
      swift_unknownObjectRelease();

      sub_24D2B6E58((uint64_t)v12);
    }
    else
    {
    }
  }
}

uint64_t sub_24D2D1608()
{
  id v1 = objc_msgSend(v0, sel_description);
  uint64_t v2 = sub_24D39CAF0();

  return v2;
}

void sub_24D2D1660(unint64_t a1, unint64_t a2, double a3, uint64_t a4, int a5, uint64_t a6, void *a7)
{
}

void sub_24D2D1798(uint64_t a1, char a2, void *a3)
{
  uint64_t v51 = a3;
  uint64_t v5 = sub_24D39C8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v50 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)v43 - v9;
  uint64_t v10 = sub_24D2B7450((uint64_t *)&unk_269861120);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v49 = (uint64_t)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  v43[2] = a1;
  if (v12)
  {
    uint64_t v13 = sub_24D2B7450((uint64_t *)&unk_269862F50);
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v44 = *(void *)(v14 + 72);
    uint64_t v45 = v6;
    uint64_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    uint64_t v48 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56);
    uint64_t v16 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    swift_bridgeObjectRetain();
    uint64_t v46 = v5;
    while (1)
    {
      uint64_t v17 = v49;
      sub_24D2BBF50(v15, v49, (uint64_t *)&unk_269862F50);
      (*v48)(v17, 0, 1, v13);
      if ((*v47)(v17, 1, v13) == 1) {
        goto LABEL_19;
      }
      uint64_t v18 = v13;
      uint64_t v19 = v17 + *(int *)(v13 + 48);
      uint64_t v20 = v17;
      uint64_t v21 = *v16;
      uint64_t v22 = (uint64_t)v52;
      (*v16)((uint64_t)v52, v20, v5);
      v21((uint64_t)v50, v19, v5);
      uint64_t v23 = (void *)*v51;
      unint64_t v25 = sub_24D3839F0(v22);
      uint64_t v26 = v23[2];
      BOOL v27 = (v24 & 1) == 0;
      uint64_t v28 = v26 + v27;
      if (__OFADD__(v26, v27)) {
        break;
      }
      char v29 = v24;
      if (v23[3] >= v28)
      {
        if (a2)
        {
          if (v24) {
            goto LABEL_15;
          }
        }
        else
        {
          sub_24D2D2230();
          if (v29) {
            goto LABEL_15;
          }
        }
      }
      else
      {
        sub_24D2D3688(v28, a2 & 1);
        unint64_t v30 = sub_24D3839F0((uint64_t)v52);
        if ((v29 & 1) != (v31 & 1)) {
          goto LABEL_22;
        }
        unint64_t v25 = v30;
        if (v29)
        {
LABEL_15:
          uint64_t v38 = (void *)swift_allocError();
          swift_willThrow();
          id v55 = v38;
          id v39 = v38;
          sub_24D2B7450((uint64_t *)&unk_269860F00);
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v40 = v46;
            unsigned int v41 = *(void (**)(char *, uint64_t))(v45 + 8);
            v41(v50, v46);
            v41(v52, v40);
            swift_bridgeObjectRelease();

            return;
          }
          goto LABEL_23;
        }
      }
      uint64_t v32 = (uint64_t)v52;
      uint64_t v33 = (void *)*v51;
      *(void *)(*v51 + 8 * (v25 >> 6) + 64) |= 1 << v25;
      uint64_t v5 = v46;
      unint64_t v34 = *(void *)(v45 + 72) * v25;
      v21(v33[6] + v34, v32, v46);
      v21(v33[7] + v34, (uint64_t)v50, v5);
      uint64_t v35 = v33[2];
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (v36) {
        goto LABEL_21;
      }
      v33[2] = v37;
      v15 += v44;
      a2 = 1;
      --v12;
      uint64_t v13 = v18;
      if (!v12) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    sub_24D39D4F0();
    __break(1u);
LABEL_23:
    uint64_t v53 = 0;
    unint64_t v54 = 0xE000000000000000;
    sub_24D39D1D0();
    sub_24D39CB70();
    sub_24D39D290();
    sub_24D39CB70();
    sub_24D39D2B0();
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
LABEL_18:
  uint64_t v42 = sub_24D2B7450((uint64_t *)&unk_269862F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v49, 1, 1, v42);
LABEL_19:
  swift_bridgeObjectRelease_n();
}

void sub_24D2D1CE4(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = sub_24D39C8A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24D2B7450((uint64_t *)&unk_269861130);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  LODWORD(v56) = a2;
  v53[1] = v3;
  uint64_t v17 = *(int *)(v12 + 48);
  v53[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v53[0];
  uint64_t v58 = *(void *)(v13 + 72);
  uint64_t v55 = a1;
  swift_bridgeObjectRetain();
  sub_24D2BBF50(v18, (uint64_t)v15, (uint64_t *)&unk_269861130);
  uint64_t v54 = v8;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v59 = v7;
  uint64_t v60 = v19;
  v19((unint64_t)v10, v15, v7);
  uint64_t v57 = v17;
  uint64_t v20 = *(void *)&v15[v17];
  uint64_t v61 = a3;
  uint64_t v21 = *a3;
  unint64_t v23 = sub_24D3839F0((uint64_t)v10);
  uint64_t v24 = *(void *)(v21 + 16);
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_24;
  }
  char v27 = v22;
  if (*(void *)(v21 + 24) >= v26)
  {
    if (v56)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_24D2D252C();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v32 = (void *)*v61;
    *(void *)(*v61 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    uint64_t v33 = v32[6];
    uint64_t v56 = *(void *)(v54 + 72);
    uint64_t v34 = v59;
    v60(v33 + v56 * v23, v10, v59);
    *(void *)(v32[7] + 8 * v23) = v20;
    uint64_t v35 = v32[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    id v32[2] = v37;
    uint64_t v38 = v16 - 1;
    if (v16 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v39 = v55 + v58 + v53[0];
    while (1)
    {
      sub_24D2BBF50(v39, (uint64_t)v15, (uint64_t *)&unk_269861130);
      v60((unint64_t)v10, v15, v34);
      uint64_t v40 = *(void *)&v15[v57];
      unsigned int v41 = (void *)*v61;
      unint64_t v43 = sub_24D3839F0((uint64_t)v10);
      uint64_t v44 = v41[2];
      BOOL v45 = (v42 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45)) {
        break;
      }
      char v47 = v42;
      if (v41[3] < v46)
      {
        sub_24D2D3B2C(v46, 1);
        unint64_t v48 = sub_24D3839F0((uint64_t)v10);
        if ((v47 & 1) != (v49 & 1)) {
          goto LABEL_26;
        }
        unint64_t v43 = v48;
      }
      if (v47) {
        goto LABEL_10;
      }
      uint64_t v50 = (void *)*v61;
      *(void *)(*v61 + 8 * (v43 >> 6) + 64) |= 1 << v43;
      uint64_t v34 = v59;
      v60(v50[6] + v56 * v43, v10, v59);
      *(void *)(v50[7] + 8 * v43) = v40;
      uint64_t v51 = v50[2];
      BOOL v36 = __OFADD__(v51, 1);
      uint64_t v52 = v51 + 1;
      if (v36) {
        goto LABEL_25;
      }
      v50[2] = v52;
      v39 += v58;
      if (!--v38) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_24D2D3B2C(v26, v56 & 1);
  unint64_t v28 = sub_24D3839F0((uint64_t)v10);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    unint64_t v30 = (void *)swift_allocError();
    swift_willThrow();
    id v64 = v30;
    id v31 = v30;
    sub_24D2B7450((uint64_t *)&unk_269860F00);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v10, v59);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_24D39D4F0();
  __break(1u);
LABEL_27:
  uint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  sub_24D39D1D0();
  sub_24D39CB70();
  sub_24D39D290();
  sub_24D39CB70();
  sub_24D39D2B0();
  __break(1u);
}

void *sub_24D2D2230()
{
  id v1 = v0;
  uint64_t v2 = sub_24D39C8A0();
  uint64_t v3 = *(void **)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v35 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v34 = (char *)&v30 - v6;
  sub_24D2B7450((uint64_t *)&unk_269861160);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_24D39D2E0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v9;
    return result;
  }
  unint64_t v30 = v1;
  uint64_t result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(v7 + 16);
  uint64_t v36 = v7;
  uint64_t v37 = v9;
  *(void *)(v9 + 16) = v13;
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v31 = v7 + 64;
  int64_t v32 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v33 = v3 + 2;
  uint64_t v17 = v34;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v27 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v32) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v27);
    ++v12;
    if (!v28)
    {
      int64_t v12 = v27 + 1;
      if (v27 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v28 = *(void *)(v31 + 8 * v12);
      if (!v28) {
        break;
      }
    }
LABEL_22:
    unint64_t v16 = (v28 - 1) & v28;
    unint64_t v19 = __clz(__rbit64(v28)) + (v12 << 6);
LABEL_9:
    uint64_t v20 = v36;
    unint64_t v21 = v3[9] * v19;
    char v22 = (void (*)(char *, unint64_t, uint64_t))v3[2];
    v22(v17, *(void *)(v36 + 48) + v21, v2);
    unint64_t v23 = *(void *)(v20 + 56) + v21;
    uint64_t v24 = v35;
    v22(v35, v23, v2);
    uint64_t v25 = v37;
    uint64_t v26 = (void (*)(unint64_t, char *, uint64_t))v3[4];
    v26(*(void *)(v37 + 48) + v21, v17, v2);
    uint64_t result = (void *)((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v25 + 56) + v21, v24, v2);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v32)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    id v1 = v30;
    uint64_t v9 = v37;
    goto LABEL_25;
  }
  unint64_t v28 = *(void *)(v31 + 8 * v29);
  if (v28)
  {
    int64_t v12 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v31 + 8 * v12);
    ++v29;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_24D2D252C()
{
  uint64_t v1 = sub_24D39C8A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B7450((uint64_t *)&unk_269861140);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_24D39D2E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + v17);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_24D2D27C0()
{
  uint64_t v55 = sub_24D39C8A0();
  uint64_t v57 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (char *)&v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B7450(&qword_2698610E8);
  char v49 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24D39D2E0();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v58 = v3;
  if (!v4)
  {
    swift_release();
    uint64_t v48 = v58;
    char v47 = v49;
LABEL_25:
    uint64_t *v47 = v48;
    return;
  }
  uint64_t v5 = v3;
  uint64_t v6 = (char *)(v3 + 64);
  uint64_t v7 = (char *)(v2 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  uint64_t v50 = v2 + 64;
  if (v5 != v2 || v6 >= &v7[8 * v8])
  {
    memmove(v6, v7, 8 * v8);
    uint64_t v5 = v58;
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v56 = v2;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  uint64_t v13 = v58;
  uint64_t v53 = v57 + 16;
  int64_t v51 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v52 = v57 + 32;
  uint64_t v14 = v57;
  unint64_t v15 = v54;
  uint64_t v16 = v55;
  while (1)
  {
    if (v12)
    {
      uint64_t v59 = (v12 - 1) & v12;
      int64_t v60 = v9;
      unint64_t v17 = __clz(__rbit64(v12)) | (v9 << 6);
      uint64_t v18 = v56;
      goto LABEL_9;
    }
    int64_t v43 = v9 + 1;
    uint64_t v18 = v56;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v43 >= v51) {
      goto LABEL_23;
    }
    unint64_t v44 = *(void *)(v50 + 8 * v43);
    int64_t v45 = v9 + 1;
    if (!v44)
    {
      int64_t v45 = v9 + 2;
      if (v9 + 2 >= v51) {
        goto LABEL_23;
      }
      unint64_t v44 = *(void *)(v50 + 8 * v45);
      if (!v44) {
        break;
      }
    }
LABEL_22:
    uint64_t v59 = (v44 - 1) & v44;
    int64_t v60 = v45;
    unint64_t v17 = __clz(__rbit64(v44)) + (v45 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v14 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v18 + 48) + v19, v16);
    uint64_t v20 = *(void *)(v18 + 56);
    uint64_t v21 = 104 * v17;
    uint64_t v22 = v20 + 104 * v17;
    uint64_t v23 = *(void *)v22;
    uint64_t v69 = *(void *)(v22 + 8);
    uint64_t v70 = v23;
    uint64_t v24 = *(void **)(v22 + 16);
    uint64_t v67 = *(void **)(v22 + 24);
    uint64_t v68 = v24;
    uint64_t v25 = *(void *)(v22 + 32);
    uint64_t v65 = *(void *)(v22 + 40);
    uint64_t v66 = v25;
    uint64_t v26 = *(void *)(v22 + 48);
    uint64_t v63 = *(void *)(v22 + 56);
    uint64_t v64 = v26;
    uint64_t v27 = *(void *)(v22 + 64);
    uint64_t v28 = *(void *)(v22 + 80);
    uint64_t v61 = *(void *)(v22 + 72);
    uint64_t v62 = v27;
    uint64_t v29 = *(void *)(v22 + 88);
    uint64_t v30 = *(unsigned __int8 *)(v22 + 100);
    uint64_t v31 = *(unsigned int *)(v22 + 96);
    uint64_t v71 = v31 | (v30 << 32);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v13 + 48) + v19, v15, v16);
    uint64_t v32 = *(void *)(v13 + 56) + v21;
    uint64_t v34 = v69;
    uint64_t v33 = v70;
    *(void *)uint64_t v32 = v70;
    *(void *)(v32 + 8) = v34;
    uint64_t v36 = v67;
    uint64_t v35 = v68;
    *(void *)(v32 + 16) = v68;
    *(void *)(v32 + 24) = v36;
    uint64_t v38 = v65;
    uint64_t v37 = v66;
    *(void *)(v32 + 32) = v66;
    *(void *)(v32 + 40) = v38;
    uint64_t v40 = v63;
    uint64_t v39 = v64;
    *(void *)(v32 + 48) = v64;
    *(void *)(v32 + 56) = v40;
    uint64_t v42 = v61;
    uint64_t v41 = v62;
    *(void *)(v32 + 64) = v62;
    *(void *)(v32 + 72) = v42;
    *(void *)(v32 + 80) = v28;
    *(void *)(v32 + 88) = v29;
    *(unsigned char *)(v32 + 100) = v30;
    *(_DWORD *)(v32 + 96) = v31;
    sub_24D2B6F48(v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v28, v29, v71);
    unint64_t v12 = v59;
    int64_t v9 = v60;
  }
  uint64_t v46 = v9 + 3;
  if (v9 + 3 >= v51)
  {
LABEL_23:
    swift_release();
    char v47 = v49;
    uint64_t v48 = v58;
    goto LABEL_25;
  }
  unint64_t v44 = *(void *)(v50 + 8 * v46);
  if (v44)
  {
    int64_t v45 = v9 + 3;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v45 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (v45 >= v51) {
      goto LABEL_23;
    }
    unint64_t v44 = *(void *)(v50 + 8 * v45);
    ++v46;
    if (v44) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
}

char *sub_24D2D2B5C()
{
  uint64_t v48 = sub_24D39C8A0();
  uint64_t v50 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  char v47 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B7450(&qword_2698610B8);
  uint64_t v42 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24D39D2E0();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v51 = v3;
  if (!v4)
  {
    uint64_t result = (char *)swift_release();
    uint64_t v41 = v51;
    uint64_t v40 = v42;
LABEL_25:
    *uint64_t v40 = v41;
    return result;
  }
  uint64_t v5 = v3;
  uint64_t result = (char *)(v3 + 64);
  uint64_t v7 = (char *)(v2 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  uint64_t v43 = v2 + 64;
  if (v5 != v2 || result >= &v7[8 * v8])
  {
    uint64_t result = (char *)memmove(result, v7, 8 * v8);
    uint64_t v5 = v51;
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v49 = v2;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  uint64_t v46 = v50 + 16;
  int64_t v44 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = v50 + 32;
  uint64_t v13 = v50;
  unint64_t v15 = v47;
  uint64_t v14 = v48;
  while (1)
  {
    if (v12)
    {
      uint64_t v52 = (v12 - 1) & v12;
      int64_t v53 = v9;
      unint64_t v16 = __clz(__rbit64(v12)) | (v9 << 6);
      uint64_t v17 = v49;
      goto LABEL_9;
    }
    int64_t v36 = v9 + 1;
    uint64_t v17 = v49;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v36 >= v44) {
      goto LABEL_23;
    }
    unint64_t v37 = *(void *)(v43 + 8 * v36);
    int64_t v38 = v9 + 1;
    if (!v37)
    {
      int64_t v38 = v9 + 2;
      if (v9 + 2 >= v44) {
        goto LABEL_23;
      }
      unint64_t v37 = *(void *)(v43 + 8 * v38);
      if (!v37) {
        break;
      }
    }
LABEL_22:
    uint64_t v52 = (v37 - 1) & v37;
    int64_t v53 = v38;
    unint64_t v16 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v13 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v15, *(void *)(v17 + 48) + v18, v14);
    uint64_t v19 = 104 * v16;
    uint64_t v20 = *(void *)(v17 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    int v22 = *(unsigned __int8 *)(v20 + 8);
    uint64_t v23 = *(void **)(v20 + 16);
    uint64_t v24 = *(void **)(v20 + 24);
    uint64_t v25 = *(void *)(v20 + 32);
    int v61 = *(unsigned __int8 *)(v20 + 40);
    int v62 = v22;
    uint64_t v26 = *(void *)(v20 + 48);
    int v27 = *(unsigned __int8 *)(v20 + 56);
    int v59 = *(unsigned __int8 *)(v20 + 57);
    int v60 = v27;
    uint64_t v28 = *(void *)(v20 + 64);
    char v29 = *(unsigned char *)(v20 + 72);
    int v30 = *(unsigned __int8 *)(v20 + 73);
    int v57 = *(unsigned __int8 *)(v20 + 74);
    int v58 = v30;
    uint64_t v31 = *(void *)(v20 + 80);
    uint64_t v56 = *(void *)(v20 + 88);
    int v32 = *(unsigned __int8 *)(v20 + 96);
    int v54 = *(unsigned __int8 *)(v20 + 97);
    int v55 = v32;
    uint64_t v33 = v51;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v51 + 48) + v18, v15, v14);
    uint64_t v34 = *(void *)(v33 + 56) + v19;
    *(void *)uint64_t v34 = v21;
    *(unsigned char *)(v34 + 8) = v62;
    *(void *)(v34 + 16) = v23;
    *(void *)(v34 + 24) = v24;
    *(void *)(v34 + 32) = v25;
    *(unsigned char *)(v34 + 40) = v61;
    *(void *)(v34 + 48) = v26;
    *(unsigned char *)(v34 + 56) = v60;
    *(unsigned char *)(v34 + 57) = v59;
    *(void *)(v34 + 64) = v28;
    *(unsigned char *)(v34 + 72) = v29;
    *(unsigned char *)(v34 + 73) = v58;
    *(unsigned char *)(v34 + 74) = v57;
    *(void *)(v34 + 80) = v31;
    *(void *)(v34 + 88) = v56;
    *(unsigned char *)(v34 + 96) = v55;
    *(unsigned char *)(v34 + 97) = v54;
    id v35 = v24;
    uint64_t result = v23;
    unint64_t v12 = v52;
    int64_t v9 = v53;
  }
  uint64_t v39 = v9 + 3;
  if (v9 + 3 >= v44)
  {
LABEL_23:
    uint64_t result = (char *)swift_release();
    uint64_t v40 = v42;
    uint64_t v41 = v51;
    goto LABEL_25;
  }
  unint64_t v37 = *(void *)(v43 + 8 * v39);
  if (v37)
  {
    int64_t v38 = v9 + 3;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v38 = v39 + 1;
    if (__OFADD__(v39, 1)) {
      break;
    }
    if (v38 >= v44) {
      goto LABEL_23;
    }
    unint64_t v37 = *(void *)(v43 + 8 * v38);
    ++v39;
    if (v37) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_24D2D2F18(uint64_t *a1)
{
  uint64_t v3 = sub_24D39C8A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B7450(a1);
  uint64_t v26 = v1;
  uint64_t v7 = *v1;
  uint64_t v8 = sub_24D39D2E0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v26 = v9;
    return result;
  }
  id result = (id)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  uint64_t v27 = v7 + 64;
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v30 = v4 + 16;
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v29 = v4 + 32;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v13);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 48) + v19, v3);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void **)(*(void *)(v7 + 56) + v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v9 + 48) + v19, v6, v3);
    *(void *)(*(void *)(v9 + 56) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v28) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24D2D31AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24D39C8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B7450(&qword_269861170);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_24D39D2E0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  unint64_t v23 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 40 * v16;
    sub_24D2B6CE8(*(void *)(v6 + 56) + v18, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    id result = (void *)sub_24D2B6F04(v27, *(void *)(v8 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_24D2D3458()
{
  uint64_t v1 = v0;
  sub_24D2B7450(&qword_2698610E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_24D39D2E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    swift_release();
    uint64_t *v1 = v4;
    return;
  }
  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 64 + 8 * v7) {
    memmove(v5, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v39 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v39 >= v13) {
      goto LABEL_26;
    }
    unint64_t v40 = *(void *)(v6 + 8 * v39);
    ++v9;
    if (!v40)
    {
      int64_t v9 = v39 + 1;
      if (v39 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v40 = *(void *)(v6 + 8 * v9);
      if (!v40) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v40 - 1) & v40;
    unint64_t v15 = __clz(__rbit64(v40)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 104 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 104 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    unint64_t v20 = *(void **)(v17 + 16);
    int64_t v21 = *(void **)(v17 + 24);
    uint64_t v22 = *(void *)(v17 + 32);
    uint64_t v23 = *(void *)(v17 + 40);
    uint64_t v24 = *(void *)(v17 + 48);
    uint64_t v25 = *(void *)(v17 + 56);
    uint64_t v26 = *(void *)(v17 + 64);
    uint64_t v27 = *(void *)(v17 + 72);
    uint64_t v28 = *(void *)(v17 + 80);
    uint64_t v29 = *(void *)(v17 + 88);
    char v30 = *(unsigned char *)(v17 + 100);
    LODWORD(v17) = *(_DWORD *)(v17 + 96);
    uint64_t v31 = 40 * v15;
    uint64_t v32 = *(void *)(v2 + 56) + v31;
    uint64_t v33 = *(void *)(v32 + 16);
    int v34 = *(_DWORD *)(v32 + 24);
    uint64_t v35 = *(void *)(v32 + 32);
    uint64_t v36 = *(void *)(v4 + 48) + v16;
    long long v37 = *(_OWORD *)v32;
    *(void *)uint64_t v36 = v18;
    *(void *)(v36 + 8) = v19;
    *(void *)(v36 + 16) = v20;
    *(void *)(v36 + 24) = v21;
    *(void *)(v36 + 32) = v22;
    *(void *)(v36 + 40) = v23;
    *(void *)(v36 + 48) = v24;
    *(void *)(v36 + 56) = v25;
    *(void *)(v36 + 64) = v26;
    *(void *)(v36 + 72) = v27;
    *(void *)(v36 + 80) = v28;
    *(void *)(v36 + 88) = v29;
    *(unsigned char *)(v36 + 100) = v30;
    *(_DWORD *)(v36 + 96) = v17;
    uint64_t v38 = *(void *)(v4 + 56) + v31;
    *(_OWORD *)uint64_t v38 = v37;
    *(void *)(v38 + 16) = v33;
    *(_DWORD *)(v38 + 24) = v34;
    *(void *)(v38 + 32) = v35;
    sub_24D2B6F48(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v17);
  }
  int64_t v41 = v39 + 2;
  if (v41 >= v13) {
    goto LABEL_26;
  }
  unint64_t v40 = *(void *)(v6 + 8 * v41);
  if (v40)
  {
    int64_t v9 = v41;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v40 = *(void *)(v6 + 8 * v9);
    ++v41;
    if (v40) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_24D2D3688(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v50 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v50);
  int v55 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)&v44 - v8;
  uint64_t v9 = *v2;
  sub_24D2B7450((uint64_t *)&unk_269861160);
  int v52 = a2;
  uint64_t v10 = sub_24D39D2F0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v46 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v44 = v3;
  int64_t v45 = (unint64_t)(v12 + 63) >> 6;
  char v47 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v16 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v17 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v19 = 0;
  uint64_t v48 = v5;
  uint64_t v49 = v9;
  while (1)
  {
    if (v15)
    {
      unint64_t v23 = __clz(__rbit64(v15));
      uint64_t v24 = (v15 - 1) & v15;
      unint64_t v25 = v23 | (v19 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v45) {
      break;
    }
    uint64_t v27 = v46;
    unint64_t v28 = v46[v26];
    ++v19;
    if (!v28)
    {
      int64_t v19 = v26 + 1;
      if (v26 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v28 = v46[v19];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v52 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v46[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v19 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v19 >= v45) {
              goto LABEL_34;
            }
            unint64_t v28 = v46[v19];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v19 = v29;
      }
    }
LABEL_21:
    uint64_t v24 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v19 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v5 + 72);
    unint64_t v31 = v30 * v25;
    unint64_t v32 = *(void *)(v9 + 48) + v30 * v25;
    unint64_t v53 = v24;
    int64_t v54 = v19;
    if (v52)
    {
      uint64_t v33 = *v16;
      uint64_t v35 = v50;
      int v34 = v51;
      (*v16)(v51, v32, v50);
    }
    else
    {
      uint64_t v33 = *v47;
      uint64_t v35 = v50;
      int v34 = v51;
      (*v47)(v51, v32, v50);
    }
    v33(v55, *(void *)(v9 + 56) + v31, v35);
    sub_24D2D8CF8((unint64_t *)&unk_2698610C0, MEMORY[0x263F07508]);
    uint64_t result = sub_24D39CAA0();
    uint64_t v36 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v17 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v37) & ~*(void *)(v17 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v17 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v20 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    unint64_t v21 = v30 * v20;
    uint64_t v22 = *v16;
    (*v16)((char *)(*(void *)(v11 + 48) + v30 * v20), (unint64_t)v34, v35);
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(*(void *)(v11 + 56) + v21, v55, v35);
    ++*(void *)(v11 + 16);
    uint64_t v5 = v48;
    uint64_t v9 = v49;
    unint64_t v15 = v53;
    int64_t v19 = v54;
  }
  swift_release();
  uint64_t v3 = v44;
  uint64_t v27 = v46;
  if ((v52 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v9 + 32);
  if (v43 >= 64) {
    bzero(v27, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v27 = -1 << v43;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_24D2D3B2C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24D39C8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_24D2B7450((uint64_t *)&unk_269861140);
  int v42 = a2;
  uint64_t v10 = sub_24D39D2F0();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    unint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    char v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    unint64_t v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_24D2D8CF8((unint64_t *)&unk_2698610C0, MEMORY[0x263F07508]);
      uint64_t result = sub_24D39CAA0();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_24D2D3F50(uint64_t a1, int a2)
{
  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v69 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v62 = v2;
  uint64_t v7 = *v2;
  sub_24D2B7450(&qword_2698610E8);
  int v68 = a2;
  uint64_t v8 = sub_24D39D2F0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
    int v60 = v62;
LABEL_43:
    *int v60 = v9;
    return result;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v64 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int64_t v63 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v65 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  uint64_t v70 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v14 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  uint64_t v66 = v5;
  uint64_t v67 = v7;
  uint64_t v82 = v4;
  uint64_t v17 = v69;
  while (1)
  {
    if (v13)
    {
      uint64_t v80 = (v13 - 1) & v13;
      unint64_t v24 = __clz(__rbit64(v13)) | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v25 >= v63)
    {
      swift_release();
      int v60 = v62;
      unint64_t v26 = v64;
      if (v68)
      {
LABEL_38:
        uint64_t v61 = 1 << *(unsigned char *)(v7 + 32);
        if (v61 >= 64) {
          bzero(v26, ((unint64_t)(v61 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        }
        else {
          *unint64_t v26 = -1 << v61;
        }
        *(void *)(v7 + 16) = 0;
      }
LABEL_42:
      uint64_t result = swift_release();
      goto LABEL_43;
    }
    unint64_t v26 = v64;
    unint64_t v27 = v64[v25];
    ++v16;
    if (!v27)
    {
      int64_t v16 = v25 + 1;
      if (v25 + 1 >= v63) {
        goto LABEL_35;
      }
      unint64_t v27 = v64[v16];
      if (!v27) {
        break;
      }
    }
LABEL_21:
    uint64_t v80 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v16 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v5 + 72);
    unint64_t v30 = *(void *)(v7 + 48) + v29 * v24;
    uint64_t v31 = 104 * v24;
    int64_t v81 = v16;
    if (v68)
    {
      (*v70)(v17, v30, v82);
      uint64_t v32 = *(void *)(v7 + 56) + v31;
      uint64_t v33 = *(void *)v32;
      uint64_t v78 = *(void *)(v32 + 8);
      uint64_t v79 = v33;
      BOOL v34 = *(void **)(v32 + 16);
      int v76 = *(void **)(v32 + 24);
      unsigned int v77 = v34;
      uint64_t v35 = *(void *)(v32 + 32);
      uint64_t v74 = *(void *)(v32 + 40);
      uint64_t v75 = v35;
      uint64_t v36 = *(void *)(v32 + 48);
      uint64_t v72 = *(void *)(v32 + 56);
      uint64_t v73 = v36;
      uint64_t v37 = *(void *)(v32 + 72);
      uint64_t v71 = *(void *)(v32 + 64);
      uint64_t v38 = *(void *)(v32 + 80);
      uint64_t v39 = *(void *)(v32 + 88);
      unint64_t v40 = *(unsigned int *)(v32 + 96) | ((unint64_t)*(unsigned __int8 *)(v32 + 100) << 32);
    }
    else
    {
      (*v65)(v17, v30, v82);
      uint64_t v41 = *(void *)(v7 + 56) + v31;
      uint64_t v42 = *(void *)v41;
      uint64_t v43 = *(void *)(v41 + 8);
      uint64_t v44 = *(void **)(v41 + 16);
      int64_t v45 = *(void **)(v41 + 24);
      uint64_t v46 = *(void *)(v41 + 32);
      uint64_t v47 = *(void *)(v41 + 40);
      uint64_t v48 = *(void *)(v41 + 48);
      uint64_t v49 = *(void *)(v41 + 56);
      uint64_t v50 = *(void *)(v41 + 64);
      uint64_t v37 = *(void *)(v41 + 72);
      uint64_t v38 = *(void *)(v41 + 80);
      uint64_t v39 = *(void *)(v41 + 88);
      uint64_t v51 = *(unsigned __int8 *)(v41 + 100);
      uint64_t v52 = *(unsigned int *)(v41 + 96);
      unint64_t v40 = v52 | (v51 << 32);
      uint64_t v71 = v50;
      uint64_t v78 = v43;
      uint64_t v79 = v42;
      int v76 = v45;
      unsigned int v77 = v44;
      uint64_t v74 = v47;
      uint64_t v75 = v46;
      uint64_t v72 = v49;
      uint64_t v73 = v48;
      sub_24D2B6F48(v42, v43, v44, v45, v46, v47, v48, v49, v50, v37, v38, v39, v52);
    }
    sub_24D2D8CF8((unint64_t *)&unk_2698610C0, MEMORY[0x263F07508]);
    uint64_t result = sub_24D39CAA0();
    uint64_t v53 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v54 = result & ~v53;
    unint64_t v55 = v54 >> 6;
    if (((-1 << v54) & ~*(void *)(v14 + 8 * (v54 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v54) & ~*(void *)(v14 + 8 * (v54 >> 6)))) | v54 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v17 = v69;
    }
    else
    {
      char v56 = 0;
      unint64_t v57 = (unint64_t)(63 - v53) >> 6;
      uint64_t v17 = v69;
      do
      {
        if (++v55 == v57 && (v56 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v58 = v55 == v57;
        if (v55 == v57) {
          unint64_t v55 = 0;
        }
        v56 |= v58;
        uint64_t v59 = *(void *)(v14 + 8 * v55);
      }
      while (v59 == -1);
      unint64_t v18 = __clz(__rbit64(~v59)) + (v55 << 6);
    }
    *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v70)(*(void *)(v9 + 48) + v29 * v18, v17, v82);
    uint64_t v19 = *(void *)(v9 + 56) + 104 * v18;
    uint64_t v20 = v78;
    *(void *)uint64_t v19 = v79;
    *(void *)(v19 + 8) = v20;
    unint64_t v21 = v76;
    *(void *)(v19 + 16) = v77;
    *(void *)(v19 + 24) = v21;
    uint64_t v22 = v74;
    *(void *)(v19 + 32) = v75;
    *(void *)(v19 + 40) = v22;
    uint64_t v23 = v72;
    *(void *)(v19 + 48) = v73;
    *(void *)(v19 + 56) = v23;
    *(void *)(v19 + 64) = v71;
    *(void *)(v19 + 72) = v37;
    *(void *)(v19 + 80) = v38;
    *(void *)(v19 + 88) = v39;
    *(unsigned char *)(v19 + 100) = BYTE4(v40);
    *(_DWORD *)(v19 + 96) = v40;
    ++*(void *)(v9 + 16);
    uint64_t v5 = v66;
    uint64_t v7 = v67;
    unint64_t v13 = v80;
    int64_t v16 = v81;
  }
  int64_t v28 = v25 + 2;
  if (v28 >= v63)
  {
LABEL_35:
    swift_release();
    int v60 = v62;
    if (v68) {
      goto LABEL_38;
    }
    goto LABEL_42;
  }
  unint64_t v27 = v64[v28];
  if (v27)
  {
    int64_t v16 = v28;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v16 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v16 >= v63) {
      goto LABEL_35;
    }
    unint64_t v27 = v64[v16];
    ++v28;
    if (v27) {
      goto LABEL_21;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_24D2D4494(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_24D39C8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v63 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_24D2B7450(&qword_2698610B8);
  int v62 = a2;
  uint64_t v9 = sub_24D39D2F0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  BOOL v58 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v56 = v2;
  int64_t v57 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v59 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v64 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  uint64_t v60 = v6;
  uint64_t v61 = v8;
  uint64_t v76 = v5;
  unint64_t v18 = v63;
  while (1)
  {
    if (v14)
    {
      unint64_t v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v22 = v21 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v57) {
      break;
    }
    unint64_t v24 = v58;
    unint64_t v25 = v58[v23];
    ++v17;
    if (!v25)
    {
      int64_t v17 = v23 + 1;
      if (v23 + 1 >= v57) {
        goto LABEL_34;
      }
      unint64_t v25 = v58[v17];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v57)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v56;
          if ((v62 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v58[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v17 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v57) {
              goto LABEL_34;
            }
            unint64_t v25 = v58[v17];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v26;
      }
    }
LABEL_21:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v17 << 6);
LABEL_22:
    uint64_t v27 = *(void *)(v6 + 72);
    unint64_t v28 = *(void *)(v8 + 48) + v27 * v22;
    uint64_t v29 = 104 * v22;
    if (v62)
    {
      (*v64)(v18, v28, v76);
      uint64_t v30 = *(void *)(v8 + 56) + v29;
      uint64_t v75 = *(void *)v30;
      int v31 = *(unsigned __int8 *)(v30 + 8);
      uint64_t v32 = *(void **)(v30 + 16);
      uint64_t v33 = *(void **)(v30 + 24);
      uint64_t v34 = *(void *)(v30 + 32);
      int v73 = *(unsigned __int8 *)(v30 + 40);
      int v74 = v31;
      uint64_t v35 = *(void *)(v30 + 48);
      int v36 = *(unsigned __int8 *)(v30 + 56);
      int v71 = *(unsigned __int8 *)(v30 + 57);
      int v72 = v36;
      uint64_t v37 = *(void *)(v30 + 64);
      int v38 = *(unsigned __int8 *)(v30 + 72);
      int v69 = *(unsigned __int8 *)(v30 + 73);
      int v70 = v38;
      int v68 = *(unsigned __int8 *)(v30 + 74);
      uint64_t v39 = *(void *)(v30 + 80);
      uint64_t v67 = *(void *)(v30 + 88);
      int v40 = *(unsigned __int8 *)(v30 + 96);
      int v65 = *(unsigned __int8 *)(v30 + 97);
      int v66 = v40;
    }
    else
    {
      (*v59)(v18, v28, v76);
      uint64_t v41 = *(void *)(v8 + 56) + v29;
      uint64_t v75 = *(void *)v41;
      int v42 = *(unsigned __int8 *)(v41 + 8);
      uint64_t v32 = *(void **)(v41 + 16);
      uint64_t v33 = *(void **)(v41 + 24);
      uint64_t v34 = *(void *)(v41 + 32);
      int v73 = *(unsigned __int8 *)(v41 + 40);
      int v74 = v42;
      uint64_t v35 = *(void *)(v41 + 48);
      int v43 = *(unsigned __int8 *)(v41 + 56);
      int v71 = *(unsigned __int8 *)(v41 + 57);
      int v72 = v43;
      uint64_t v37 = *(void *)(v41 + 64);
      int v44 = *(unsigned __int8 *)(v41 + 72);
      int v69 = *(unsigned __int8 *)(v41 + 73);
      int v70 = v44;
      int v68 = *(unsigned __int8 *)(v41 + 74);
      uint64_t v39 = *(void *)(v41 + 80);
      uint64_t v67 = *(void *)(v41 + 88);
      int v45 = *(unsigned __int8 *)(v41 + 96);
      int v65 = *(unsigned __int8 *)(v41 + 97);
      int v66 = v45;
      id v46 = v33;
      id v47 = v32;
    }
    sub_24D2D8CF8((unint64_t *)&unk_2698610C0, MEMORY[0x263F07508]);
    uint64_t result = sub_24D39CAA0();
    uint64_t v48 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v49 = result & ~v48;
    unint64_t v50 = v49 >> 6;
    if (((-1 << v49) & ~*(void *)(v15 + 8 * (v49 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v49) & ~*(void *)(v15 + 8 * (v49 >> 6)))) | v49 & 0x7FFFFFFFFFFFFFC0;
      unint64_t v18 = v63;
    }
    else
    {
      char v51 = 0;
      unint64_t v52 = (unint64_t)(63 - v48) >> 6;
      unint64_t v18 = v63;
      do
      {
        if (++v50 == v52 && (v51 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v53 = v50 == v52;
        if (v50 == v52) {
          unint64_t v50 = 0;
        }
        v51 |= v53;
        uint64_t v54 = *(void *)(v15 + 8 * v50);
      }
      while (v54 == -1);
      unint64_t v19 = __clz(__rbit64(~v54)) + (v50 << 6);
    }
    *(void *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v64)(*(void *)(v10 + 48) + v27 * v19, v18, v76);
    uint64_t v20 = *(void *)(v10 + 56) + 104 * v19;
    *(void *)uint64_t v20 = v75;
    *(unsigned char *)(v20 + 8) = v74;
    *(void *)(v20 + 16) = v32;
    *(void *)(v20 + 24) = v33;
    *(void *)(v20 + 32) = v34;
    *(unsigned char *)(v20 + 40) = v73;
    *(void *)(v20 + 48) = v35;
    *(unsigned char *)(v20 + 56) = v72;
    *(unsigned char *)(v20 + 57) = v71;
    *(void *)(v20 + 64) = v37;
    *(unsigned char *)(v20 + 72) = v70;
    *(unsigned char *)(v20 + 73) = v69;
    *(unsigned char *)(v20 + 74) = v68;
    *(void *)(v20 + 80) = v39;
    *(void *)(v20 + 88) = v67;
    *(unsigned char *)(v20 + 96) = v66;
    *(unsigned char *)(v20 + 97) = v65;
    ++*(void *)(v10 + 16);
    uint64_t v6 = v60;
    uint64_t v8 = v61;
  }
  swift_release();
  uint64_t v3 = v56;
  unint64_t v24 = v58;
  if ((v62 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v55 = 1 << *(unsigned char *)(v8 + 32);
  if (v55 >= 64) {
    bzero(v24, ((unint64_t)(v55 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v55;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_24D2D4A18(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = sub_24D39C8A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  sub_24D2B7450(a3);
  int v48 = a2;
  uint64_t v12 = sub_24D39D2F0();
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = *(void *)(v13 + 64);
  int v44 = (void *)(v13 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  int v42 = v5;
  int64_t v43 = (unint64_t)(v15 + 63) >> 6;
  int v45 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v47 = v8;
  unint64_t v19 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v20 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  for (i = v13; ; uint64_t v13 = i)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v43) {
      break;
    }
    uint64_t v27 = v44;
    unint64_t v28 = v44[v26];
    ++v22;
    if (!v28)
    {
      int64_t v22 = v26 + 1;
      if (v26 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v28 = v44[v22];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v5 = v42;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v44[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v22 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v43) {
              goto LABEL_34;
            }
            unint64_t v28 = v44[v22];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v29;
      }
    }
LABEL_21:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v22 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v47 + 72);
    unint64_t v31 = *(void *)(v13 + 48) + v30 * v25;
    if (v48)
    {
      (*v19)(v10, v31, v7);
      id v32 = *(id *)(*(void *)(v13 + 56) + 8 * v25);
    }
    else
    {
      (*v45)(v10, v31, v7);
      id v32 = *(id *)(*(void *)(v13 + 56) + 8 * v25);
    }
    sub_24D2D8CF8((unint64_t *)&unk_2698610C0, MEMORY[0x263F07508]);
    uint64_t result = sub_24D39CAA0();
    uint64_t v33 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v34) & ~*(void *)(v20 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v20 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v23 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v19)(*(void *)(v14 + 48) + v30 * v23, v10, v7);
    *(void *)(*(void *)(v14 + 56) + 8 * v23) = v32;
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v5 = v42;
  uint64_t v27 = v44;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v13 + 32);
  if (v40 >= 64) {
    bzero(v27, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v27 = -1 << v40;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v5 = v14;
  return result;
}

uint64_t sub_24D2D4E40(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v44 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_24D2B7450(&qword_269861170);
  int v45 = a2;
  uint64_t v9 = sub_24D39D2F0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v40 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  BOOL v38 = v2;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  id v46 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  uint64_t v42 = v8;
  int64_t v43 = v7;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v39) {
      break;
    }
    int64_t v22 = v40;
    unint64_t v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v23 = v40[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v38;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v39) {
              goto LABEL_34;
            }
            unint64_t v23 = v40[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = v5;
    uint64_t v26 = *(void *)(v5 + 72);
    unint64_t v27 = *(void *)(v8 + 48) + v26 * v20;
    unint64_t v28 = v43;
    uint64_t v29 = v44;
    if (v45)
    {
      (*v46)(v43, v27, v44);
      sub_24D2B6F04((long long *)(*(void *)(v8 + 56) + 40 * v20), (uint64_t)v47);
    }
    else
    {
      (*v41)(v43, v27, v44);
      sub_24D2B6CE8(*(void *)(v8 + 56) + 40 * v20, (uint64_t)v47);
    }
    sub_24D2D8CF8((unint64_t *)&unk_2698610C0, MEMORY[0x263F07508]);
    uint64_t result = sub_24D39CAA0();
    uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v31) & ~*(void *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v15 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v18 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    (*v46)((char *)(*(void *)(v10 + 48) + v26 * v18), (unint64_t)v28, v29);
    uint64_t result = sub_24D2B6F04(v47, *(void *)(v10 + 56) + 40 * v18);
    ++*(void *)(v10 + 16);
    uint64_t v5 = v25;
    uint64_t v8 = v42;
  }
  swift_release();
  uint64_t v3 = v38;
  int64_t v22 = v40;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
  if (v37 >= 64) {
    bzero(v22, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v37;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

void sub_24D2D5290(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_24D2B7450(&qword_2698610E0);
  char v43 = a2;
  uint64_t v44 = (void *)sub_24D39D2F0();
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v37 = (void *)(v4 + 64);
    uint64_t v6 = -1;
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    unint64_t v7 = v6 & *(void *)(v4 + 64);
    int64_t v36 = (unint64_t)(v5 + 63) >> 6;
    swift_retain();
    int64_t v8 = 0;
    uint64_t v42 = v4;
    while (1)
    {
      if (v7)
      {
        uint64_t v45 = (v7 - 1) & v7;
        int64_t v46 = v8;
        unint64_t v9 = __clz(__rbit64(v7)) | (v8 << 6);
      }
      else
      {
        int64_t v10 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v10 >= v36) {
          goto LABEL_22;
        }
        unint64_t v11 = v37[v10];
        int64_t v12 = v8 + 1;
        if (!v11)
        {
          int64_t v12 = v8 + 2;
          if (v8 + 2 >= v36) {
            goto LABEL_22;
          }
          unint64_t v11 = v37[v12];
          if (!v11)
          {
            uint64_t v13 = v8 + 3;
            if (v8 + 3 >= v36)
            {
LABEL_22:
              swift_release();
              if (v43)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
              }
              break;
            }
            unint64_t v11 = v37[v13];
            if (!v11)
            {
              while (1)
              {
                int64_t v12 = v13 + 1;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_29;
                }
                if (v12 >= v36) {
                  goto LABEL_22;
                }
                unint64_t v11 = v37[v12];
                ++v13;
                if (v11) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v12 = v8 + 3;
          }
        }
LABEL_19:
        uint64_t v45 = (v11 - 1) & v11;
        int64_t v46 = v12;
        unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
      }
      uint64_t v14 = *(void *)(v4 + 56);
      uint64_t v15 = *(void *)(v4 + 48) + 104 * v9;
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      unint64_t v18 = *(void **)(v15 + 16);
      unint64_t v19 = *(void **)(v15 + 24);
      uint64_t v21 = *(void *)(v15 + 32);
      uint64_t v20 = *(void *)(v15 + 40);
      uint64_t v23 = *(void *)(v15 + 48);
      uint64_t v22 = *(void *)(v15 + 56);
      uint64_t v25 = *(void *)(v15 + 64);
      uint64_t v24 = *(void *)(v15 + 72);
      unint64_t v26 = *(unsigned int *)(v15 + 96) | ((unint64_t)*(unsigned __int8 *)(v15 + 100) << 32);
      uint64_t v28 = *(void *)(v15 + 80);
      uint64_t v27 = *(void *)(v15 + 88);
      uint64_t v29 = (long long *)(v14 + 40 * v9);
      long long v30 = *v29;
      uint64_t v31 = *((void *)v29 + 2);
      int v32 = *((_DWORD *)v29 + 6);
      uint64_t v33 = *((void *)v29 + 4);
      if ((v43 & 1) == 0)
      {
        uint64_t v40 = *(void *)(v15 + 64);
        uint64_t v41 = *(void *)(v15 + 72);
        uint64_t v39 = *(void *)(v15 + 88);
        long long v38 = *v29;
        sub_24D2B6F48(v16, v17, v18, v19, v21, v20, v23, v22, v25, v24, v28, v27, *(_DWORD *)(v15 + 96));
        long long v30 = v38;
        uint64_t v27 = v39;
        uint64_t v25 = v40;
        uint64_t v24 = v41;
      }
      long long v50 = v30;
      uint64_t v51 = v31;
      int v52 = v32;
      uint64_t v53 = v33;
      v47[0] = v16;
      v47[1] = v17;
      long long v47[2] = v18;
      v47[3] = v19;
      v47[4] = v21;
      v47[5] = v20;
      v47[6] = v23;
      v47[7] = v22;
      v47[8] = v25;
      v47[9] = v24;
      v47[10] = v28;
      v47[11] = v27;
      int v48 = v26;
      char v49 = BYTE4(v26);
      sub_24D2D5570((uint64_t)v47, (uint64_t)&v50, v44);
      uint64_t v4 = v42;
      unint64_t v7 = v45;
      int64_t v8 = v46;
    }
  }
  swift_release();
  void *v35 = v44;
}

__n128 sub_24D2D5570(uint64_t a1, uint64_t a2, void *a3)
{
  sub_24D39D590();
  sub_24D2B6EA8(a1, (uint64_t)&v23);
  int v6 = v36;
  int v7 = v35;
  switch((unsigned __int16)(((unint64_t)(v35 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      sub_24D39D5A0();
LABEL_3:
      sub_24D39D5D0();
      unint64_t v8 = sub_24D39D100();
      *(void *)((char *)a3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
      sub_24D2B6EA8(a1, a3[6] + 104 * v8);
      uint64_t v9 = a3[7] + 40 * v8;
      *(void *)(v9 + 32) = *(void *)(a2 + 32);
      __n128 result = *(__n128 *)(a2 + 16);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)a2;
      *(__n128 *)(v9 + 16) = result;
      ++a3[2];
      return result;
    default:
      uint64_t v21 = v24;
      uint64_t v22 = v23;
      unint64_t v19 = v26;
      uint64_t v20 = v25;
      uint64_t v17 = v28;
      uint64_t v18 = v27;
      uint64_t v15 = v30;
      uint64_t v16 = v29;
      uint64_t v11 = v32;
      uint64_t v14 = v31;
      uint64_t v13 = v33;
      uint64_t v12 = v34;
      uint64_t v37 = v23;
      uint64_t v38 = v24;
      uint64_t v39 = v25;
      uint64_t v40 = v26;
      uint64_t v41 = v27;
      uint64_t v42 = v28;
      uint64_t v43 = v29;
      uint64_t v44 = v30;
      uint64_t v45 = v31;
      uint64_t v46 = v32;
      uint64_t v47 = v33;
      uint64_t v48 = v34;
      __int16 v49 = v35;
      char v50 = BYTE2(v35);
      sub_24D39D5A0();
      sub_24D2B6F80(v22, v21, v20, v19, v18, v17, v16, v15, v14, v11, v13, v12, v7, SBYTE2(v7));
      sub_24D328C28();
      sub_24D39D5A0();
      if (v6 == 3) {
        goto LABEL_8;
      }
      sub_24D39D5B0();
      if (v6 == 2)
      {
        sub_24D39D5A0();
      }
      else
      {
        sub_24D39D5A0();
LABEL_8:
        sub_24D39D5B0();
      }
      sub_24D2B7278(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
      goto LABEL_3;
  }
}

double sub_24D2D57EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24D3839F0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v28 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_24D2D2B5C();
      uint64_t v9 = v28;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_24D39C8A0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56) + 104 * v6;
    char v13 = *(unsigned char *)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 32);
    char v15 = *(unsigned char *)(v12 + 40);
    uint64_t v16 = *(void *)(v12 + 48);
    char v17 = *(unsigned char *)(v12 + 56);
    char v18 = *(unsigned char *)(v12 + 57);
    uint64_t v19 = *(void *)(v12 + 64);
    char v20 = *(unsigned char *)(v12 + 72);
    char v21 = *(unsigned char *)(v12 + 73);
    char v22 = *(unsigned char *)(v12 + 74);
    uint64_t v23 = *(void *)(v12 + 80);
    uint64_t v24 = *(void *)(v12 + 88);
    char v25 = *(unsigned char *)(v12 + 96);
    char v26 = *(unsigned char *)(v12 + 97);
    *(void *)a2 = *(void *)v12;
    *(unsigned char *)(a2 + 8) = v13;
    *(_OWORD *)(a2 + 16) = *(_OWORD *)(v12 + 16);
    *(void *)(a2 + 32) = v14;
    *(unsigned char *)(a2 + 40) = v15;
    *(void *)(a2 + 48) = v16;
    *(unsigned char *)(a2 + 56) = v17;
    *(unsigned char *)(a2 + 57) = v18;
    *(void *)(a2 + 64) = v19;
    *(unsigned char *)(a2 + 72) = v20;
    *(unsigned char *)(a2 + 73) = v21;
    *(unsigned char *)(a2 + 74) = v22;
    *(void *)(a2 + 80) = v23;
    *(void *)(a2 + 88) = v24;
    *(unsigned char *)(a2 + 96) = v25;
    *(unsigned char *)(a2 + 97) = v26;
    sub_24D2D5AD0(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 1;
    double result = 0.0;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 82) = 0u;
  }
  return result;
}

uint64_t sub_24D2D59B0(uint64_t a1)
{
  return sub_24D2D59C8(a1, &qword_269861110);
}

uint64_t sub_24D2D59BC(uint64_t a1)
{
  return sub_24D2D59C8(a1, &qword_269861118);
}

uint64_t sub_24D2D59C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_24D3839F0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v4;
  uint64_t v14 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_24D2D2F18(a2);
    uint64_t v9 = v14;
  }
  uint64_t v10 = *(void *)(v9 + 48);
  uint64_t v11 = sub_24D39C8A0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_24D2D5DEC(v6, v9);
  *uint64_t v4 = v9;
  swift_bridgeObjectRelease();
  return v12;
}

char *sub_24D2D5AD0(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  double result = (char *)MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v38 = a2 + 64;
    double result = (char *)sub_24D39D0F0();
    uint64_t v12 = v38;
    if ((*(void *)(v38 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      unint64_t v35 = (unint64_t)(result + 1) & v11;
      unsigned __int8 v36 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v37 = v13;
      uint64_t v16 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v15;
      uint64_t v18 = v11;
      do
      {
        uint64_t v19 = v17;
        int64_t v20 = v17 * v10;
        uint64_t v21 = v18;
        v36(v8, *(void *)(a2 + 48) + v17 * v10, v4);
        sub_24D2D8CF8((unint64_t *)&unk_2698610C0, MEMORY[0x263F07508]);
        uint64_t v22 = sub_24D39CAA0();
        double result = (char *)(*v16)(v8, v4);
        uint64_t v18 = v21;
        unint64_t v23 = v22 & v21;
        if (a1 >= (uint64_t)v35)
        {
          if (v23 >= v35 && a1 >= (uint64_t)v23)
          {
LABEL_16:
            uint64_t v17 = v19;
            if (v19 * a1 < v20
              || *(void *)(a2 + 48) + v19 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v20 + v19))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              uint64_t v18 = v21;
            }
            else if (v19 * a1 != v20)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            uint64_t v26 = *(void *)(a2 + 56);
            double result = (char *)(v26 + 104 * a1);
            uint64_t v27 = (char *)(v26 + 104 * v10);
            if (104 * a1 < (uint64_t)(104 * v10) || result >= v27 + 104 || (BOOL v28 = a1 == v10, a1 = v10, !v28))
            {
              double result = (char *)memmove(result, v27, 0x68uLL);
              uint64_t v18 = v21;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v23 >= v35 || a1 >= (uint64_t)v23)
        {
          goto LABEL_16;
        }
        uint64_t v17 = v19;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v18;
        uint64_t v12 = v38;
      }
      while (((*(void *)(v38 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v29 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v29 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24D2D5DEC(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_24D39D0F0();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_24D2D8CF8((unint64_t *)&unk_2698610C0, MEMORY[0x263F07508]);
        uint64_t v17 = sub_24D39CAA0();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            unint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *unint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    char v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    char v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *char v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24D2D60E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24D39C8A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_24D3839F0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_24D2D27C0();
      goto LABEL_7;
    }
    sub_24D2D3F50(v17, a3 & 1);
    unint64_t v23 = sub_24D3839F0(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      int64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_24D2D6784(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_24D39D4F0();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7] + 104 * v14;
  return sub_24D2D8C9C(a1, v21);
}

uint64_t sub_24D2D62B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24D39C8A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_24D3839F0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_24D2D2B5C();
      goto LABEL_7;
    }
    sub_24D2D4494(v17, a3 & 1);
    unint64_t v23 = sub_24D3839F0(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      int64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_24D2D6848(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_24D39D4F0();
    __break(1u);
    return result;
  }
LABEL_7:
  int64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7] + 104 * v14;
  return sub_24D2D7934(a1, v21);
}

void sub_24D2D6484(uint64_t a1, uint64_t a2, char a3)
{
}

void sub_24D2D6490(uint64_t a1, uint64_t a2, char a3)
{
}

void sub_24D2D649C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  unint64_t v6 = (void **)v4;
  uint64_t v26 = a1;
  uint64_t v9 = sub_24D39C8A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (void *)*v4;
  unint64_t v15 = sub_24D3839F0(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = *v6;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7];

      *(void *)(v22 + 8 * v15) = v26;
      return;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_24D2D2F18(a4);
    goto LABEL_7;
  }
  sub_24D2D4A18(v18, a3 & 1, a4);
  unint64_t v23 = sub_24D3839F0(a2);
  if ((v19 & 1) != (v24 & 1))
  {
LABEL_14:
    sub_24D39D4F0();
    __break(1u);
    return;
  }
  unint64_t v15 = v23;
  uint64_t v21 = *v6;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_24D2D6924(v15, (uint64_t)v12, v26, v21);
}

void sub_24D2D6658(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_24D383754(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      uint64_t v16 = *v4;
      if (v14)
      {
LABEL_8:
        uint64_t v17 = v16[7] + 40 * v10;
        long long v18 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)uint64_t v17 = *(_OWORD *)a1;
        *(_OWORD *)(v17 + 16) = v18;
        *(void *)(v17 + 32) = *(void *)(a1 + 32);
        return;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24D2D3458();
      goto LABEL_7;
    }
    sub_24D2D5290(v13, a3 & 1);
    unint64_t v19 = sub_24D383754(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_11:
      sub_24D2D69DC(v10, a2, a1, v16);
      sub_24D2B7278(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
      return;
    }
  }
  sub_24D39D4F0();
  __break(1u);
}

uint64_t sub_24D2D6784(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24D39C8A0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t result = sub_24D2B6EA8(a3, a4[7] + 104 * a1);
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_24D2D6848(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24D39C8A0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v11 = a4[7] + 104 * a1;
  long long v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v12;
  *(_WORD *)(v11 + 96) = *(_WORD *)(a3 + 96);
  long long v13 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v11 + 64) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v11 + 80) = v13;
  long long v14 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v11 + 48) = v14;
  uint64_t v15 = a4[2];
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    a4[2] = v17;
  }
  return result;
}

uint64_t sub_24D2D6924(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24D39C8A0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_24D2D69DC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t result = sub_24D2B6EA8(a2, a4[6] + 104 * a1);
  uint64_t v8 = a4[7] + 40 * a1;
  *(void *)(v8 + 32) = *(void *)(a3 + 32);
  long long v9 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)a3;
  *(_OWORD *)(v8 + 16) = v9;
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_24D2D6A70(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  long long v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_24D2D6B20(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v7 = sub_24D2B7450((uint64_t *)&unk_269861100);
  MEMORY[0x270FA5388](v7 - 8);
  int v62 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24D39C8A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  int v68 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v13);
  int64_t v63 = (char *)v50 - v15;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v16)
  {
    uint64_t v67 = v14;
    v50[1] = v3;
    uint64_t v69 = MEMORY[0x263F8EE78];
    sub_24D39D260();
    uint64_t result = sub_24D2D6A70(a1);
    uint64_t v19 = result;
    uint64_t v20 = 0;
    uint64_t v21 = a1 + 64;
    uint64_t v22 = *(void *)(a2 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_productUUIDsByFindableUUID);
    uint64_t v64 = v10 + 16;
    uint64_t v58 = v10 + 32;
    uint64_t v59 = v22;
    char v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    int64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    uint64_t v60 = v10;
    uint64_t v61 = a1;
    unint64_t v23 = (void (**)(char *, uint64_t))(v10 + 8);
    char v24 = *(unsigned char *)(a1 + 32);
    uint64_t v51 = a1 + 80;
    uint64_t v52 = v16;
    int v55 = a3;
    uint64_t v53 = v18;
    uint64_t v54 = a1 + 64;
    while ((v19 & 0x8000000000000000) == 0 && v19 < 1 << v24)
    {
      unint64_t v26 = (unint64_t)v19 >> 6;
      if ((*(void *)(v21 + 8 * ((unint64_t)v19 >> 6)) & (1 << v19)) == 0) {
        goto LABEL_30;
      }
      if (*(_DWORD *)(a1 + 36) != v18) {
        goto LABEL_31;
      }
      uint64_t v65 = v20;
      uint64_t v66 = 1 << v19;
      uint64_t v27 = *(void *)(a1 + 48);
      uint64_t v28 = v60;
      uint64_t v29 = *(void *)(v60 + 72);
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
      unint64_t v31 = v63;
      v30(v63, v27 + v29 * v19, v9);
      uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
      uint64_t v33 = v9;
      uint64_t v34 = v67;
      v32(v67, v31, v33);
      uint64_t v35 = v33;
      v30(v68, v34, v33);
      uint64_t v36 = v59;
      if (*(void *)(v59 + 16))
      {
        unint64_t v37 = sub_24D3839F0(v34);
        if (v38)
        {
          unint64_t v39 = *(void *)(v36 + 56) + v37 * v29;
          uint64_t v40 = v62;
          uint64_t v9 = v35;
          v30(v62, v39, v35);
          uint64_t v41 = 0;
        }
        else
        {
          uint64_t v41 = 1;
          uint64_t v40 = v62;
          uint64_t v9 = v35;
        }
      }
      else
      {
        uint64_t v41 = 1;
        uint64_t v40 = v62;
        uint64_t v9 = v35;
      }
      (*v57)(v40, v41, 1, v9);
      uint64_t v42 = (void *)sub_24D39C860();
      if ((*v56)(v40, 1, v9) == 1)
      {
        uint64_t v43 = 0;
      }
      else
      {
        uint64_t v43 = (void *)sub_24D39C860();
        (*v23)(v40, v9);
      }
      objc_msgSend(objc_allocWithZone(MEMORY[0x263F62590]), sel_initWithUUID_productUUID_isOwned_, v42, v43, v55 != 1);

      uint64_t v44 = *v23;
      (*v23)(v68, v9);
      v44((char *)v67, v9);
      sub_24D39D240();
      sub_24D39D270();
      sub_24D39D280();
      uint64_t result = sub_24D39D250();
      a1 = v61;
      char v24 = *(unsigned char *)(v61 + 32);
      unint64_t v25 = 1 << v24;
      if (v19 >= 1 << v24) {
        goto LABEL_32;
      }
      uint64_t v21 = v54;
      uint64_t v45 = *(void *)(v54 + 8 * v26);
      if ((v45 & v66) == 0) {
        goto LABEL_33;
      }
      LODWORD(v18) = v53;
      if (*(_DWORD *)(v61 + 36) != v53) {
        goto LABEL_34;
      }
      unint64_t v46 = v45 & (-2 << (v19 & 0x3F));
      if (v46)
      {
        unint64_t v25 = __clz(__rbit64(v46)) | v19 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v47 = v26 + 1;
        unint64_t v48 = (v25 + 63) >> 6;
        if (v26 + 1 < v48)
        {
          unint64_t v49 = *(void *)(v54 + 8 * v47);
          if (v49)
          {
LABEL_26:
            unint64_t v25 = __clz(__rbit64(v49)) + (v47 << 6);
          }
          else
          {
            while (v48 - 2 != v26)
            {
              unint64_t v49 = *(void *)(v51 + 8 * v26++);
              if (v49)
              {
                unint64_t v47 = v26 + 1;
                goto LABEL_26;
              }
            }
          }
        }
      }
      uint64_t v20 = v65 + 1;
      uint64_t v19 = v25;
      if (v65 + 1 == v52) {
        return v69;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for FMFindingLocalizerError()
{
  uint64_t result = qword_269861178;
  if (!qword_269861178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24D2D7064(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMFindingLocalizerError();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24D2D70C0(uint64_t a1, const char *a2)
{
  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_24D39C950();
  sub_24D2B508C(v8, (uint64_t)qword_269869FD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v9 = sub_24D39C930();
  os_log_type_t v10 = sub_24D39CDF0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v17 = a2;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v19 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_24D2D8CF8((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
    uint64_t v14 = sub_24D39D490();
    uint64_t v18 = sub_24D2B8328(v14, v15, &v19);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_24D2B1000, v9, v10, v17, v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v13, -1, -1);
    MEMORY[0x253326010](v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_24D2D7354(void *a1)
{
  uint64_t v2 = sub_24D39C8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_24D39C950();
  sub_24D2B508C(v6, (uint64_t)qword_269869FD0);
  id v18 = a1;
  uint64_t v7 = sub_24D39C930();
  os_log_type_t v8 = sub_24D39CDF0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    id v11 = objc_msgSend(v18, sel_uuid);
    sub_24D39C880();

    sub_24D2D8CF8((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
    uint64_t v12 = sub_24D39D490();
    unint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v19 = sub_24D2B8328(v12, v14, &v20);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 1024;
    unsigned int v15 = objc_msgSend(v18, sel_rssi);

    LODWORD(v19) = v15;
    sub_24D39D070();

    _os_log_impl(&dword_24D2B1000, v7, v8, "ðŸ§­ FMFindingLocalizer: Will integrate BT RSSI measurement for %s: %d", (uint8_t *)v9, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x253326010](v10, -1, -1);
    MEMORY[0x253326010](v9, -1, -1);
  }
  else
  {

    id v16 = v18;
  }
}

void sub_24D2D768C(void *a1)
{
  void (*v11)(void *__return_ptr, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  id v19;
  void v20[3];
  uint64_t v21;
  uint64_t v22;
  void v23[5];
  _OWORD v24[6];
  int v25;
  char v26;
  uint64_t vars8;

  uint64_t v3 = sub_24D39C8A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)MEMORY[0x253326120](v1+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
  if (v7)
  {
    uint64_t v19 = v7;
    uint64_t v8 = v1
       + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    if (MEMORY[0x253326120](v8))
    {
      uint64_t v17 = *(void *)(v8 + 8);
      uint64_t ObjectType = swift_getObjectType();
      void v23[3] = type metadata accessor for FMFindingLocalizer();
      v23[4] = &off_26FF86750;
      v23[0] = v19;
      memset(v24, 0, sizeof(v24));
      unint64_t v26 = 0;
      unint64_t v25 = 117440512;
      uint64_t v10 = a1[3];
      uint64_t v9 = a1[4];
      sub_24D2B8A34(a1, v10);
      id v11 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8);
      uint64_t v12 = v19;
      v11(v20, v10, v9);
      unint64_t v13 = v21;
      unint64_t v14 = v22;
      sub_24D2B8A34(v20, v21);
      (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
      (*(void (**)(void *, _OWORD *, char *, uint64_t))(v17 + 8))(v23, v24, v6, ObjectType);

      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_24D2B6E58((uint64_t)v20);
      sub_24D2B6E58((uint64_t)v23);
    }
    else
    {
      unsigned int v15 = v19;
    }
  }
}

void *sub_24D2D78EC(void *result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24D2D7934(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24D2D7990()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24D2D79CC()
{
  sub_24D2CED04(*(void *)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_24D2D79D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D2D79E8()
{
  return swift_release();
}

void sub_24D2D79F0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  if ((a13 & 0xFF000000) != 0x8000000) {
    sub_24D2B6F48(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  }
}

void sub_24D2D7A20(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  if ((a13 & 0xFF000000) != 0x8000000) {
    sub_24D2B72E4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  }
}

uint64_t sub_24D2D7A50(uint64_t a1)
{
  int v3 = *(unsigned __int16 *)(a1 + 96) | (*(unsigned __int8 *)(a1 + 98) << 16);
  sub_24D2D7AB4(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v3, BYTE2(v3));
  return a1;
}

void sub_24D2D7AB4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, unsigned __int8 a14)
{
  if (a14 != 255) {
    sub_24D2B6DE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  }
}

void sub_24D2D7AE8(uint64_t a1, unint64_t a2, int a3, void *a4, double a5)
{
  void (*v194)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v195;
  uint64_t v196;
  unsigned char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  id v203;
  id v204;
  char v205;
  unsigned char v206[4];
  int v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  uint64_t v211;
  int v212;
  int v213;
  id v214;
  uint64_t v215;
  void *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  void (*v222)(uint64_t, uint64_t);
  id v223;
  uint64_t v224;
  uint64_t v225;
  unsigned char *v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  uint64_t v236;
  void *v237;
  char *v238;
  unsigned char *v239;
  unsigned char *v240;
  double v241;
  unsigned char *v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  void v247[3];
  uint64_t v248;
  uint64_t v249;
  void v250[9];
  unsigned char v251[104];
  uint64_t v252;
  uint64_t v253;
  uint64_t (*v254)(uint64_t);
  void *v255;
  void (*v256)();
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  __int16 v264;
  char v265;
  uint64_t v266;
  char v267;
  void *v268;
  void *v269;
  uint64_t v270;
  char v271;
  uint64_t v272;
  char v273;
  char v274;
  uint64_t v275;
  char v276;
  char v277;
  char v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  char v282;
  void v283[12];
  __int16 v284;
  long long v285;
  uint64_t v286;
  long long v287;
  long long v288;
  long long v289;
  unsigned char v290[26];

  uint64_t v6 = v5;
  v245 = a4;
  v243 = a1;
  v244 = sub_24D39C8A0();
  v246 = *(void *)(v244 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v244);
  v226 = &v206[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  unint64_t v13 = &v206[-v12];
  uint64_t v14 = sub_24D39CA10();
  v241 = *(double *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  v239 = &v206[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  v240 = &v206[-v17];
  uint64_t v18 = sub_24D39C990();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = v5
      + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner;
  uint64_t v20 = MEMORY[0x253326120](v19);
  if (v20)
  {
    uint64_t v21 = v20;
    LODWORD(v237) = a3;
    uint64_t v209 = v19;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    v236 = v14;
    v242 = v13;
    uint64_t v22 = sub_24D39C950();
    sub_24D2B508C(v22, (uint64_t)qword_269869FD0);
    unint64_t v23 = sub_24D39C930();
    os_log_type_t v24 = sub_24D39CDD0();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v25 = 0;
      _os_log_impl(&dword_24D2B1000, v23, v24, "ðŸ§­ FMFindingLocalizer: Did update esitmates", v25, 2u);
      MEMORY[0x253326010](v25, -1, -1);
    }
    v229 = a2;
    v238 = (char *)v21;

    uint64_t v26 = OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_updateRangeEstimateWatchdogWorkItem;
    if (*(void *)(v6
                   + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_updateRangeEstimateWatchdogWorkItem))
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v28 = v245;
    sub_24D2B6CE8((uint64_t)v245, (uint64_t)&v285);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v27;
    sub_24D2B6F04(&v285, v29 + 24);
    v256 = sub_24D2D8C24;
    v257 = v29;
    v252 = MEMORY[0x263EF8330];
    v253 = 1107296256;
    v254 = sub_24D32194C;
    v255 = &unk_26FF86848;
    _Block_copy(&v252);
    v283[0] = MEMORY[0x263F8EE78];
    sub_24D2D8CF8((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
    swift_retain();
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    sub_24D39CA40();
    swift_allocObject();
    uint64_t v30 = sub_24D39CA20();
    swift_release();
    swift_release();
    v220 = v6;
    *(void *)(v6 + v26) = v30;
    swift_retain();
    swift_release();
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    unint64_t v31 = (void *)sub_24D39CE90();
    uint64_t v32 = v239;
    sub_24D39CA00();
    uint64_t v33 = v240;
    MEMORY[0x253324A90](v32, 3.0);
    uint64_t v34 = *(void (**)(unsigned char *, uint64_t))(*(void *)&v241 + 8);
    uint64_t v35 = v32;
    uint64_t v36 = v236;
    v34(v35, v236);
    v219 = v30;
    sub_24D39CE60();

    v34(v33, v36);
    float v37 = *(float *)&v243;
    if (*(float *)&v243 < 0.0) {
      float v37 = 0.0;
    }
    double v38 = v37;
    if ((v243 & 0x100000000) != 0) {
      uint64_t v39 = 0;
    }
    else {
      uint64_t v39 = *(void *)&v38;
    }
    uint64_t v40 = v28[3];
    uint64_t v41 = v28[4];
    sub_24D2B8A34(v28, v40);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v41 + 8))(&v252, v40, v41);
    uint64_t v42 = v255;
    uint64_t v43 = v256;
    sub_24D2B8A34(&v252, (uint64_t)v255);
    uint64_t v44 = (uint64_t)v242;
    (*((void (**)(void *, void (*)()))v43 + 2))(v42, v43);
    uint64_t v45 = &v238[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_preciseDistancesByUUID];
    swift_beginAccess();
    uint64_t v46 = *(void *)v45;
    uint64_t v47 = *(void *)(*(void *)v45 + 16);
    v241 = *(double *)&v39;
    v221 = v45;
    if (v47)
    {
      swift_bridgeObjectRetain();
      unint64_t v48 = sub_24D3839F0(v44);
      if (v49)
      {
        uint64_t v50 = *(void *)(v46 + 56) + 104 * v48;
        v240 = *(unsigned char **)v50;
        v234 = *(unsigned __int8 *)(v50 + 8);
        uint64_t v52 = *(void **)(v50 + 16);
        uint64_t v51 = *(void **)(v50 + 24);
        uint64_t v53 = *(void *)(v50 + 32);
        v236 = *(unsigned __int8 *)(v50 + 40);
        uint64_t v54 = *(void *)(v50 + 48);
        uint64_t v55 = *(unsigned __int8 *)(v50 + 56);
        int v56 = *(unsigned __int8 *)(v50 + 57);
        v232 = *(void *)(v50 + 64);
        uint64_t v57 = *(unsigned __int8 *)(v50 + 72);
        int v58 = *(unsigned __int8 *)(v50 + 73);
        int v59 = *(unsigned __int8 *)(v50 + 74);
        uint64_t v60 = *(void *)(v50 + 80);
        v230 = *(void *)(v50 + 88);
        v231 = v60;
        int v61 = *(unsigned __int8 *)(v50 + 96);
        int v62 = *(unsigned __int8 *)(v50 + 97);
        if (v56) {
          uint64_t v63 = 256;
        }
        else {
          uint64_t v63 = 0;
        }
        v233 = v63 | v55;
        if (v58) {
          uint64_t v64 = 256;
        }
        else {
          uint64_t v64 = 0;
        }
        uint64_t v65 = v64 | v57;
        uint64_t v66 = 0x10000;
        if (!v59) {
          uint64_t v66 = 0;
        }
        uint64_t v67 = v65 | v66;
        if (v62) {
          int v68 = 256;
        }
        else {
          int v68 = 0;
        }
        LODWORD(v239) = v68 | v61;
        v235 = v51;
        id v69 = v51;
        uint64_t v70 = (uint64_t)v52;
        id v71 = v52;
      }
      else
      {
        v240 = 0;
        v234 = 0;
        v235 = 0;
        uint64_t v53 = 0;
        v236 = 0;
        uint64_t v54 = 0;
        v232 = 0;
        v233 = 0;
        uint64_t v67 = 0;
        v230 = 0;
        v231 = 0;
        LODWORD(v239) = 0;
        uint64_t v70 = 1;
      }
      swift_bridgeObjectRelease();
      uint64_t v47 = v232;
      uint64_t v76 = v233;
      uint64_t v78 = v230;
      uint64_t v77 = v231;
      int v72 = v240;
      uint64_t v73 = v234;
      int v74 = v235;
      uint64_t v75 = v236;
      unsigned int v79 = v239;
    }
    else
    {
      int v72 = 0;
      uint64_t v73 = 0;
      int v74 = 0;
      uint64_t v53 = 0;
      uint64_t v75 = 0;
      uint64_t v54 = 0;
      uint64_t v76 = 0;
      uint64_t v67 = 0;
      uint64_t v77 = 0;
      uint64_t v78 = 0;
      unsigned int v79 = 0;
      uint64_t v70 = 1;
    }
    v283[0] = v72;
    v283[1] = v73;
    v283[2] = v70;
    v283[3] = v74;
    v217 = v53;
    v218 = v54;
    v283[4] = v53;
    v283[5] = v75;
    v283[6] = v54;
    v232 = v47;
    v233 = v76;
    v283[7] = v76;
    v283[8] = v47;
    v215 = v67;
    v283[9] = v67;
    v230 = v78;
    v231 = v77;
    v283[10] = v77;
    v283[11] = v78;
    v284 = v79;
    uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v246 + 8);
    v246 += 8;
    v222 = v80;
    int64_t v81 = v72;
    uint64_t v82 = v73;
    v80((uint64_t)v242, v244);
    sub_24D2B6E58((uint64_t)&v252);
    uint64_t v83 = v245[3];
    uint64_t v84 = v245[4];
    sub_24D2B8A34(v245, v83);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v84 + 8))(&v252, v83, v84);
    uint64_t v85 = v255;
    uint64_t v86 = v256;
    sub_24D2B8A34(&v252, (uint64_t)v255);
    (*((void (**)(long long *__return_ptr, void *, void (*)()))v86 + 3))(&v285, v85, v86);
    int v87 = v287;
    sub_24D2D78EC((void *)v285, *((uint64_t *)&v285 + 1), v286, v287);
    sub_24D2B6E58((uint64_t)&v252);
    v235 = v74;
    v236 = v75;
    v234 = v82;
    v240 = v81;
    v216 = (void *)v70;
    LODWORD(v239) = v79;
    if ((v243 & 0x100000000) != 0)
    {
      LOBYTE(v91) = v87 == 1;
      v285 = 0uLL;
      v286 = 1;
      v287 = 0u;
      v288 = 0u;
      v289 = 0u;
      memset(v290, 0, sizeof(v290));
      uint64_t v92 = v229 | ((HIDWORD(v229) & 1) << 32);
      id v93 = (long long *)v251;
      uint64_t v94 = (long long *)v251;
      uint64_t v95 = &v285;
      double v96 = v241;
      char v97 = 1;
      char v98 = (char)v237;
    }
    else
    {
      char v88 = (char)v237;
      unint64_t v89 = v229;
      *(double *)&uint64_t v90 = v241;
      if (v70 == 1)
      {
        LOBYTE(v91) = v87 == 1;
        uint64_t v92 = v229 | ((HIDWORD(v229) & 1) << 32);
      }
      else
      {
        id v99 = v74;
        id v100 = (id)v70;
        uint64_t v92 = v89 | ((HIDWORD(v89) & 1) << 32);
        unsigned int v91 = v79 >> 8;
      }
      id v93 = &v285;
      uint64_t v94 = &v285;
      uint64_t v95 = (long long *)v283;
      double v96 = *(double *)&v90;
      char v97 = 0;
      char v98 = v88;
    }
    sub_24D2BF624(v96, v97, v92, v98, (uint64_t)v95, v91, (uint64_t)v94);
    int v101 = *((unsigned __int8 *)v93 + 97);
    int v102 = *((unsigned __int8 *)v93 + 96);
    uint64_t v103 = *((void *)v93 + 10);
    uint64_t v104 = *((void *)v93 + 11);
    int v105 = *((unsigned __int8 *)v93 + 74);
    int v106 = *((unsigned __int8 *)v93 + 73);
    uint64_t v107 = *((unsigned __int8 *)v93 + 72);
    uint64_t v108 = *((void *)v93 + 8);
    int v109 = *((unsigned __int8 *)v93 + 57);
    uint64_t v110 = *((unsigned __int8 *)v93 + 56);
    uint64_t v111 = *((void *)v93 + 6);
    unint64_t v112 = *((unsigned __int8 *)v93 + 40);
    id v114 = (void *)*((void *)v93 + 3);
    uint64_t v113 = *((void *)v93 + 4);
    id v115 = (void *)*((void *)v93 + 2);
    uint64_t v116 = *((unsigned __int8 *)v93 + 8);
    v242 = *(unsigned char **)v93;
    v243 = v116;
    v266 = (uint64_t)v242;
    v267 = v116;
    v268 = v115;
    v269 = v114;
    v228 = v113;
    v229 = v112;
    v270 = v113;
    v271 = v112;
    v224 = v104;
    v225 = v111;
    v272 = v111;
    v273 = v110;
    v274 = v109;
    v241 = *(double *)&v108;
    v275 = v108;
    uint64_t v211 = v107;
    v276 = v107;
    uint64_t v210 = v106;
    v277 = v106;
    uint64_t v212 = v105;
    __int16 v213 = v102;
    v278 = v105;
    v227 = v103;
    v279 = v103;
    v280 = v104;
    v281 = v102;
    LODWORD(v214) = v101;
    v282 = v101;
    uint64_t v117 = v245[3];
    uint64_t v118 = v245[4];
    sub_24D2B8A34(v245, v117);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v118 + 8))(&v252, v117, v118);
    int v119 = v255;
    int v120 = v256;
    sub_24D2B8A34(&v252, (uint64_t)v255);
    uint64_t v121 = (uint64_t)v226;
    int v122 = v119;
    uint64_t v123 = v114;
    (*((void (**)(void *, void (*)()))v120 + 2))(v122, v120);
    uint64_t v124 = v221;
    swift_beginAccess();
    v223 = v114;
    id v125 = v115;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v247[0] = *v124;
    *uint64_t v124 = 0x8000000000000000;
    sub_24D2D62B4((uint64_t)&v266, v121, isUniquelyReferenced_nonNull_native);
    *uint64_t v124 = v247[0];
    swift_bridgeObjectRelease();
    v222(v121, v244);
    swift_endAccess();
    sub_24D2B6E58((uint64_t)&v252);
    uint64_t v127 = OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology;
    uint64_t v128 = v238;
    __int16 v129 = *(_WORD *)&v238[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_findingTechnology];
    if ((v129 & 0x8100) == 0x100)
    {
      v237 = v123;
      uint64_t v130 = &v238[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement];
      char v131 = v238[OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 98];
      if (v131 == 4)
      {
        if (v109) {
          uint64_t v198 = 256;
        }
        else {
          uint64_t v198 = 0;
        }
        v221 = (void *)(v198 | v110);
        if (v210) {
          uint64_t v199 = 256;
        }
        else {
          uint64_t v199 = 0;
        }
        unsigned __int8 v200 = v199 | v211;
        unsigned __int8 v201 = 0x10000;
        if (!v212) {
          unsigned __int8 v201 = 0;
        }
        uint64_t v208 = v200 | v201;
        if (v214) {
          long long v202 = 256;
        }
        else {
          long long v202 = 0;
        }
        uint64_t v207 = v202 | v213;
        uint64_t v203 = v125;
        v204 = v223;
        uint64_t v141 = (uint64_t)v242;
        uint64_t v132 = v243;
        uint64_t v133 = v115;
        uint64_t v134 = v237;
        uint64_t v135 = v228;
        unint64_t v136 = v229;
        uint64_t v140 = v224;
        uint64_t v137 = v225;
        uint64_t v138 = *(void *)&v241;
        uint64_t v139 = v227;
      }
      else
      {
        uint64_t v132 = 0;
        uint64_t v133 = 0;
        uint64_t v134 = 0;
        uint64_t v135 = 0;
        unint64_t v136 = 0;
        uint64_t v137 = 0;
        v221 = 0;
        uint64_t v138 = 0;
        uint64_t v208 = 0;
        uint64_t v139 = 0;
        uint64_t v140 = 0;
        uint64_t v207 = 0;
        uint64_t v141 = *(void *)&a5;
      }
      uint64_t v142 = *(void *)v130;
      uint64_t v143 = *((void *)v130 + 1);
      uint64_t v144 = (void *)*((void *)v130 + 2);
      uint64_t v145 = (void *)*((void *)v130 + 3);
      uint64_t v146 = *((void *)v130 + 4);
      uint64_t v147 = *((void *)v130 + 5);
      uint64_t v148 = *((void *)v130 + 6);
      uint64_t v149 = *((void *)v130 + 7);
      long long v150 = *((_OWORD *)v130 + 4);
      uint64_t v152 = *((void *)v130 + 10);
      uint64_t v151 = *((void *)v130 + 11);
      __int16 v153 = *((_WORD *)v130 + 48);
      *(void *)uint64_t v130 = v141;
      *((void *)v130 + 1) = v132;
      *((void *)v130 + 2) = v133;
      *((void *)v130 + 3) = v134;
      *((void *)v130 + 4) = v135;
      *((void *)v130 + 5) = v136;
      uint64_t v154 = v221;
      *((void *)v130 + 6) = v137;
      *((void *)v130 + 7) = v154;
      uint64_t v155 = v208;
      *((void *)v130 + 8) = v138;
      *((void *)v130 + 9) = v155;
      *((void *)v130 + 10) = v139;
      *((void *)v130 + 11) = v140;
      *((_WORD *)v130 + 48) = v207;
      sub_24D2B6DE8(v142, v143, v144, v145, v146, v147, v148, v149, v150, *((uint64_t *)&v150 + 1), v152, v151, v153, v131);
      uint64_t v123 = v237;
      uint64_t v128 = v238;
      __int16 v129 = *(_WORD *)&v238[v127];
    }
    if ((v129 & 0x8100) == 0x100)
    {
      uint64_t v156 = MEMORY[0x253326120](v209);
      if (!v156)
      {
        sub_24D2B6E14((uint64_t)v240, v234, v216, v235);
        swift_release();

LABEL_59:
        return;
      }
      v157 = (void *)v156;
      v214 = v125;
      uint64_t v158 = *(void *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 8);
      v242 = *(unsigned char **)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement);
      v243 = v158;
      unsigned __int8 v159 = *(void **)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 24);
      v221 = *(void **)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 16);
      v237 = v159;
      uint64_t v160 = *(void *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 32);
      v229 = *(void *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 40);
      uint64_t v161 = *(void *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 48);
      uint64_t v162 = *(void *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 56);
      uint64_t v163 = *(void *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 72);
      v241 = *(double *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 64);
      uint64_t v164 = *(void *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 80);
      uint64_t v165 = *(void *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 88);
      int v166 = *(unsigned __int8 *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 98);
      uint64_t v205 = *(unsigned char *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 98);
      uint64_t v212 = *(unsigned __int16 *)(v156 + OBJC_IVAR____TtC11FMFindingUI18FMFindingLocalizer_measurement + 96);
      v238 = (char *)v163;
      uint64_t v167 = v128;
      uint64_t v168 = v220;
      sub_24D2B6F80((uint64_t)v242, v158, v221, v159, v160, v229, v161, v162, *(uint64_t *)&v241, v163, v164, v165, v212, v205);

      uint64_t v169 = v168;
      uint64_t v128 = v167;
      uint64_t v170 = v164;
      int v171 = v166;
      uint64_t v173 = *(void *)&v241;
      uint64_t v172 = (uint64_t)v242;
      uint64_t v174 = v243;
      v175 = v221;
      uint64_t v176 = v237;
      uint64_t v177 = v162;
      uint64_t v178 = v229;
      uint64_t v179 = v240;
    }
    else
    {
      if (v109) {
        uint64_t v180 = 256;
      }
      else {
        uint64_t v180 = 0;
      }
      uint64_t v177 = v180 | v110;
      if (v210) {
        uint64_t v181 = 256;
      }
      else {
        uint64_t v181 = 0;
      }
      uint64_t v182 = v181 | v211;
      uint64_t v183 = 0x10000;
      if (!v212) {
        uint64_t v183 = 0;
      }
      v238 = (char *)(v182 | v183);
      if (v214) {
        int v184 = 256;
      }
      else {
        int v184 = 0;
      }
      uint64_t v212 = v184 | v213;
      v214 = v125;
      id v185 = v125;
      id v186 = v223;
      int v171 = 4;
      uint64_t v169 = v220;
      uint64_t v176 = v123;
      uint64_t v179 = v240;
      uint64_t v173 = *(void *)&v241;
      uint64_t v165 = v224;
      uint64_t v161 = v225;
      v175 = v115;
      uint64_t v160 = v228;
      uint64_t v178 = v229;
      uint64_t v172 = (uint64_t)v242;
      uint64_t v174 = v243;
      uint64_t v170 = v227;
    }
    v227 = v170;
    v228 = v160;
    v242 = (unsigned char *)v172;
    v243 = v174;
    v252 = v172;
    v253 = v174;
    v220 = v177;
    v221 = v175;
    v254 = (uint64_t (*)(uint64_t))v175;
    v237 = v176;
    v255 = v176;
    v256 = (void (*)())v160;
    v257 = v178;
    v258 = v161;
    v259 = v177;
    v241 = *(double *)&v173;
    v260 = v173;
    v261 = (uint64_t)v238;
    v262 = v170;
    v263 = v165;
    __int16 v187 = v212;
    v264 = v212;
    uint64_t v188 = v169
         + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    __int16 v213 = v171;
    v265 = v171;
    if (MEMORY[0x253326120](v169+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      v229 = v178;
      uint64_t v189 = *(void *)(v188 + 8);
      uint64_t ObjectType = swift_getObjectType();
      v250[3] = type metadata accessor for FMFindingLocalizer();
      v250[4] = &off_26FF86750;
      v250[0] = v128;
      v224 = v165;
      uint64_t v192 = v245[3];
      uint64_t v191 = v245[4];
      sub_24D2B8A34(v245, v192);
      v225 = v161;
      unsigned __int8 v193 = v128;
      uint64_t v194 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v191 + 8);
      v245 = v193;
      v194(v247, v192, v191);
      unsigned __int8 v195 = v248;
      unsigned __int8 v196 = v249;
      sub_24D2B8A34(v247, v248);
      unsigned __int8 v197 = v226;
      (*(void (**)(uint64_t, uint64_t))(v196 + 16))(v195, v196);
      (*(void (**)(void *, uint64_t *, uint64_t, unsigned char *, uint64_t, uint64_t))(v189 + 16))(v250, &v252, 3, v197, ObjectType, v189);
      swift_unknownObjectRelease();
      sub_24D2B6DE8((uint64_t)v242, v243, v221, v237, v228, v229, v225, v220, *(uint64_t *)&v241, (uint64_t)v238, v227, v224, v187, v213);
      sub_24D2B6E14((uint64_t)v240, v234, v216, v235);

      swift_release();
      v222((uint64_t)v197, v244);
      sub_24D2B6E58((uint64_t)v247);
      sub_24D2B6E58((uint64_t)v250);
      return;
    }
    swift_release();

    sub_24D2B6E14((uint64_t)v179, v234, v216, v235);
    sub_24D2B6DE8((uint64_t)v242, v243, v221, v237, v228, v178, v161, v220, *(uint64_t *)&v241, (uint64_t)v238, v227, v165, v187, v213);
    goto LABEL_59;
  }
}

uint64_t sub_24D2D8BE4()
{
  swift_release();
  sub_24D2B6E58(v0 + 24);
  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_24D2D8C24()
{
  sub_24D2D0514(*(void *)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_24D2D8C30(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, int))
{
  BYTE2(v4) = *(unsigned char *)(a1 + 98);
  LOWORD(v4) = *(_WORD *)(a1 + 96);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v4);
  return a1;
}

uint64_t sub_24D2D8C9C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24D2D8CF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D2D8D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFindingLocalizerError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D2D8DA4()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D2D8DE4()
{
  return sub_24D2E3854(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_24D2D8DEC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D2D8DFC@<X0>(void *a1@<X8>)
{
  return sub_24D2F2838(*(void **)(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32), *(NSObject **)(v1 + 40), *(unsigned char *)(v1 + 48), a1);
}

uint64_t sub_24D2D8E20@<X0>(void *a1@<X8>)
{
  return sub_24D2D8E38(a1);
}

uint64_t sub_24D2D8E38@<X0>(void *a1@<X8>)
{
  return sub_24D2E21B4(*(void **)(v1 + 16), *(NSObject **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(_WORD *)(v1 + 56), a1);
}

char *sub_24D2D8E60(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        uint64_t v7 = *a2;
        uint64_t v8 = v7;
        *(void *)a1 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
        uint64_t v11 = sub_24D39C8A0();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v12 = sub_24D39C8A0();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        uint64_t v13 = *(int *)(sub_24D2B7450(&qword_2698610B0) + 48);
        uint64_t v14 = *(char **)((char *)a2 + v13);
        id v15 = v14;
        *(void *)&a1[v13] = v14;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_24D2D909C(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      uint64_t v2 = *a1;
      goto LABEL_7;
    case 1u:
    case 2u:
      uint64_t v3 = sub_24D39C8A0();
      uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    case 3u:
      uint64_t v5 = sub_24D39C8A0();
      (*(void (**)(void **, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t v2 = *(void **)((char *)a1 + *(int *)(sub_24D2B7450(&qword_2698610B0) + 48));
LABEL_7:

      break;
    default:
      return;
  }
}

void *sub_24D2D91C0(void *a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      uint64_t v11 = *a2;
      id v12 = v11;
      *a1 = v11;
      goto LABEL_6;
    case 1u:
    case 2u:
      uint64_t v6 = sub_24D39C8A0();
      (*(void (**)(void *, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_6;
    case 3u:
      uint64_t v7 = sub_24D39C8A0();
      (*(void (**)(void *, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(sub_24D2B7450(&qword_2698610B0) + 48);
      uint64_t v9 = *(void **)((char *)a2 + v8);
      id v10 = v9;
      *(void *)((char *)a1 + v8) = v9;
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_24D2D93A8(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24D2D7064((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        uint64_t v11 = *a2;
        id v12 = v11;
        *a1 = v11;
        goto LABEL_7;
      case 1u:
      case 2u:
        uint64_t v6 = sub_24D39C8A0();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_7;
      case 3u:
        uint64_t v7 = sub_24D39C8A0();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = *(int *)(sub_24D2B7450(&qword_2698610B0) + 48);
        uint64_t v9 = *(void **)((char *)a2 + v8);
        id v10 = v9;
        *(void **)((char *)a1 + v8) = v9;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_24D2D95A0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = sub_24D39C8A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = sub_24D2B7450(&qword_2698610B0);
    *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_24D39C8A0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_24D2D9720(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24D2D7064((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v8 = sub_24D39C8A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = sub_24D2B7450(&qword_2698610B0);
      *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_24D39C8A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24D2D98B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_24D2D98D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_24D2D9904()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24D2D9914()
{
  uint64_t v3 = "\b";
  uint64_t result = sub_24D39C8A0();
  if (v1 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64;
    uint64_t v5 = v4;
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v2;
    uint64_t v7 = &unk_24D3A0E00;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_24D2D99DC(double *a1@<X8>, double a2@<D0>)
{
  double v5 = *v2;
  double v6 = v2[1];
  double v8 = v2[5];
  double v7 = v2[6];
  if (vabdd_f64(*v2, v8) <= v7)
  {
    double v12 = v2[7];
    double v11 = v2[8];
    double v10 = v2[3];
    double v9 = v2[4];
    if (fabs(v6) <= v12)
    {
      double v18 = v2[12];
      double v17 = v2[13];
      double v14 = v2[10];
      double v15 = v2[11];
      double v19 = v2[9];
      double v20 = v2[2];
      goto LABEL_16;
    }
  }
  else
  {
    double v10 = v2[3];
    double v9 = v2[4];
    double v11 = v2[8];
  }
  double v13 = v5 - v8;
  double v37 = v10;
  double v38 = v9;
  if (v10 == v11 && v9 == v2[9])
  {
    double v14 = v2[10];
    double v15 = v2[11];
    double v35 = v2[12];
    double v16 = v2[13];
  }
  else
  {
    double v14 = v9 * 0.5;
    double v15 = sqrt(v10);
    double v35 = sqrt(v15 * v15 - v14 * v14);
    double v16 = sqrt(v14 * v14 - v15 * v15);
  }
  double v36 = v16;
  double v21 = -v14;
  double v22 = exp(-(v14 * a2));
  double v23 = v6 + v13 * v14;
  if (v14 >= v15)
  {
    if (v15 >= v14)
    {
      double v27 = v13 + v23 * a2;
      double v29 = v22 * v23;
      double v28 = v22 * v21 * v27;
      double v10 = v37;
      double v9 = v38;
      double v17 = v36;
    }
    else
    {
      long double v30 = v36 * a2;
      double v34 = v23 / v36;
      double v33 = cosh(v30);
      long double v31 = v30;
      double v17 = v36;
      long double v32 = sinh(v31);
      double v27 = v13 * v33 + v34 * v32;
      double v28 = v22 * (v17 * (v34 * v33) + v17 * (v13 * v32));
      double v29 = v22 * v21 * v27;
      double v10 = v37;
      double v9 = v38;
    }
    double v18 = v35;
  }
  else
  {
    double v24 = v35 * a2;
    double v25 = v23 / v35;
    __double2 v26 = __sincos_stret(v24);
    double v27 = v13 * v26.__cosval + v25 * v26.__sinval;
    double v18 = v35;
    double v28 = v22 * (v18 * (v25 * v26.__cosval) - v18 * (v13 * v26.__sinval));
    double v29 = v22 * v21 * v27;
    double v10 = v37;
    double v9 = v38;
    double v17 = v36;
  }
  double v6 = v29 + v28;
  double v5 = v8 + v22 * v27;
  double v7 = 0.0;
  double v20 = 1.0;
  double v12 = 0.0;
  double v11 = v10;
  double v19 = v9;
LABEL_16:
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v20;
  a1[3] = v10;
  a1[4] = v9;
  a1[5] = v8;
  a1[6] = v7;
  a1[7] = v12;
  a1[8] = v11;
  a1[9] = v19;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v18;
  a1[13] = v17;
}

BOOL sub_24D2D9BFC()
{
  double v1 = v0[30];
  if (vabdd_f64(*v0, v1) > v0[44]) {
    return 0;
  }
  if (fabs(v0[1]) > v0[45]) {
    return 0;
  }
  double v3 = fabs(v0[31]);
  if (vabdd_f64(v1, v0[35]) > v0[36] || v3 > v0[37]) {
    return 0;
  }
  double v5 = fabs(v0[3]);
  if (vabdd_f64(v0[2], v0[7]) > v0[8] || v5 > v0[9]) {
    return 0;
  }
  if (vabdd_f64(v0[16], v0[21]) <= v0[22]) {
    return fabs(v0[17]) <= v0[23];
  }
  return 0;
}

uint64_t sub_24D2D9CBC(double a1, double a2, double a3, double a4)
{
  double v5 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v6 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  double v7 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  double v8 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  if (v5 != a1 || v6 != a2 || v7 != a3 || v8 != a4)
  {
    uint64_t v12 = v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
    swift_beginAccess();
    if (v6 == 0.0)
    {
      *(double *)(v12 + 16) = v5;
      *(void *)(v12 + 24) = 0;
    }
    else
    {
      double v13 = 6.28318531 / v6 * (6.28318531 / v6);
      double v14 = sqrt(v13);
      *(double *)(v12 + 40) = v13;
      *(double *)(v12 + 48) = v14 + v14;
    }
    *(double *)(v12 + 56) = v5;
    if (v8 == 0.0)
    {
      *(double *)(v12 + 128) = v7;
      *(void *)(v12 + 136) = 0;
    }
    else
    {
      double v15 = 6.28318531 / v8 * (6.28318531 / v8);
      double v16 = sqrt(v15);
      *(double *)(v12 + 152) = v15;
      *(double *)(v12 + 160) = v16 + v16;
    }
    *(double *)(v12 + 168) = v7;
    return swift_endAccess();
  }
  return result;
}

double sub_24D2D9DA8(double a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  uint64_t v5 = v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  *(double *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = 0;
  *(void *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = xmmword_24D3A0E20;
  *(_OWORD *)(v5 + 40) = xmmword_24D3A0E30;
  *(void *)(v5 + 56) = v3;
  int64x2_t v6 = vdupq_n_s64(0x4341C37937E08000uLL);
  *(void *)(v5 + 64) = 0;
  *(void *)(v5 + 72) = 0;
  *(int64x2_t *)(v5 + 80) = v6;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(void *)(v5 + 128) = v4;
  *(_OWORD *)(v5 + 136) = xmmword_24D3A0E20;
  *(_OWORD *)(v5 + 152) = xmmword_24D3A0E30;
  *(void *)(v5 + 168) = v4;
  *(void *)(v5 + 176) = 0;
  *(void *)(v5 + 184) = 0;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(int64x2_t *)(v5 + 192) = v6;
  *(double *)(v5 + 240) = a1;
  *(_OWORD *)(v5 + 248) = xmmword_24D3A0E20;
  *(void *)(v5 + 264) = 0x4063BD3CC9BE45DELL;
  *(void *)(v5 + 272) = 0x403921FB54442D18;
  *(double *)(v5 + 280) = a1;
  *(void *)(v5 + 288) = 0;
  *(void *)(v5 + 296) = 0;
  *(_OWORD *)(v5 + 320) = 0u;
  *(_OWORD *)(v5 + 336) = 0u;
  *(int64x2_t *)(v5 + 304) = v6;
  double result = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold);
  *(double *)(v5 + 352) = result;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold);
  *(void *)(v5 + 360) = v8;
  double v9 = 6.28318531
     / *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16)
     * (6.28318531
      / *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters + 16));
  double v10 = sqrt(v9);
  double v11 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters) * (v10 + v10);
  uint64_t v12 = v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
  *(void *)uint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  *(void *)(v12 + 16) = 0x3FF0000000000000;
  *(double *)(v12 + 24) = v9;
  *(double *)(v12 + 32) = v11;
  *(void *)(v12 + 40) = 0;
  *(int64x2_t *)(v12 + 64) = v6;
  *(_OWORD *)(v12 + 80) = 0u;
  *(_OWORD *)(v12 + 96) = 0u;
  *(double *)(v12 + 48) = result;
  *(void *)(v12 + 56) = v8;
  *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = a1;
  *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = 0;
  return result;
}

__n128 sub_24D2D9F4C(double a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  double v4 = *(double *)(v3 + 280);
  double v5 = v4 - *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget);
  *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget) = v4;
  *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity) = v5 / a1 * 0.25
                                                                           + *(double *)(v1
                                                                                       + OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity)
                                                                           * 0.75;
  double v28 = *(double *)(v3 + 16);
  double v6 = *(double *)(v3 + 128);
  double v8 = *(double *)v3;
  uint64_t v7 = *(void *)(v3 + 8);
  uint64_t v9 = *(void *)(v3 + 272);
  long long v10 = *(_OWORD *)(v3 + 256);
  long long v70 = *(_OWORD *)(v3 + 240);
  uint64_t v29 = v70;
  long long v71 = v10;
  uint64_t v72 = v9;
  double v73 = v4;
  long long v11 = *(_OWORD *)(v3 + 304);
  long long v74 = *(_OWORD *)(v3 + 288);
  long long v75 = v11;
  long long v12 = *(_OWORD *)(v3 + 336);
  long long v76 = *(_OWORD *)(v3 + 320);
  long long v77 = v12;
  uint64_t v13 = *(void *)(v3 + 352);
  uint64_t v14 = *(void *)(v3 + 360);
  sub_24D2D99DC((double *)v48, a1);
  long long v46 = v48[1];
  long long v47 = v48[0];
  long long v44 = v48[3];
  long long v45 = v48[2];
  long long v42 = v48[5];
  long long v43 = v48[4];
  uint64_t v40 = v50;
  uint64_t v41 = v49;
  sub_24D2D99DC((double *)v51, a1);
  long long v37 = v51[1];
  long long v38 = v51[0];
  long long v35 = v51[3];
  long long v36 = v51[2];
  long long v33 = v51[5];
  long long v34 = v51[4];
  uint64_t v31 = v53;
  uint64_t v32 = v52;
  sub_24D2D99DC((double *)v54, a1);
  long long v26 = v54[1];
  long long v27 = v54[0];
  long long v24 = v54[3];
  long long v25 = v54[2];
  long long v39 = v54[4];
  long long v30 = v54[5];
  uint64_t v15 = v55;
  uint64_t v16 = v56;
  double v17 = sqrt(6.28318531 / v6 * (6.28318531 / v6));
  double v59 = v8;
  uint64_t v60 = v7;
  uint64_t v61 = 0x3FF0000000000000;
  double v62 = 6.28318531 / v6 * (6.28318531 / v6);
  double v63 = v28 * (v17 + v17);
  uint64_t v64 = v29;
  uint64_t v65 = v13;
  uint64_t v66 = v14;
  int64x2_t v67 = vdupq_n_s64(0x4341C37937E08000uLL);
  long long v68 = 0u;
  long long v69 = 0u;
  sub_24D2D99DC(v57, a1);
  double v18 = v57[0];
  double v19 = v57[1];
  swift_beginAccess();
  *(double *)uint64_t v3 = v18;
  *(double *)(v3 + 8) = v19;
  *(_OWORD *)(v3 + 16) = v47;
  *(_OWORD *)(v3 + 32) = v46;
  *(_OWORD *)(v3 + 48) = v45;
  *(_OWORD *)(v3 + 64) = v44;
  *(_OWORD *)(v3 + 80) = v43;
  *(_OWORD *)(v3 + 96) = v42;
  *(void *)(v3 + 112) = v41;
  *(void *)(v3 + 120) = v40;
  *(_OWORD *)(v3 + 128) = v38;
  *(_OWORD *)(v3 + 144) = v37;
  *(_OWORD *)(v3 + 160) = v36;
  *(_OWORD *)(v3 + 176) = v35;
  *(_OWORD *)(v3 + 192) = v34;
  *(_OWORD *)(v3 + 208) = v33;
  *(void *)(v3 + 224) = v32;
  *(void *)(v3 + 232) = v31;
  *(_OWORD *)(v3 + 240) = v27;
  *(_OWORD *)(v3 + 256) = v26;
  *(_OWORD *)(v3 + 272) = v25;
  *(_OWORD *)(v3 + 288) = v24;
  *(void *)(v3 + 336) = v15;
  *(void *)(v3 + 344) = v16;
  *(void *)(v3 + 352) = v13;
  *(void *)(v3 + 360) = v14;
  uint64_t v20 = v1 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
  *(_OWORD *)(v3 + 304) = v39;
  *(_OWORD *)(v3 + 320) = v30;
  sub_24D2D99DC((double *)v58, a1);
  long long v21 = v58[5];
  *(_OWORD *)(v20 + 64) = v58[4];
  *(_OWORD *)(v20 + 80) = v21;
  *(_OWORD *)(v20 + 96) = v58[6];
  long long v22 = v58[1];
  *(_OWORD *)uint64_t v20 = v58[0];
  *(_OWORD *)(v20 + 16) = v22;
  __n128 result = (__n128)v58[3];
  *(_OWORD *)(v20 + 32) = v58[2];
  *(__n128 *)(v20 + 48) = result;
  return result;
}

id sub_24D2DA2A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FLSpring();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FLSpring()
{
  return self;
}

__n128 initializeWithCopy for FLSimpleSpring(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for FLSimpleSpring(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FLSimpleSpring(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 112) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FLSimpleSpring()
{
  return &type metadata for FLSimpleSpring;
}

void *initializeWithCopy for FLCompoundSpring(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x170uLL);
}

uint64_t getEnumTagSinglePayload for FLCompoundSpring(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 368)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FLCompoundSpring(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 360) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 368) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FLCompoundSpring()
{
  return &type metadata for FLCompoundSpring;
}

ValueMetadata *type metadata accessor for FLSpringParameters()
{
  return &type metadata for FLSpringParameters;
}

ValueMetadata *type metadata accessor for FLSimpleSpringState()
{
  return &type metadata for FLSimpleSpringState;
}

uint64_t sub_24D2DA478(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24D2DA48C(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(unint64_t, unint64_t, unint64_t))(a8 + 16))(a1 | ((HIDWORD(a1) & 1) << 32), a2 | ((HIDWORD(a2) & 1) << 32), a3 | ((HIDWORD(a3) & 1) << 32));
}

uint64_t sub_24D2DA4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v5 = *(_WORD *)(a1 + 96);
  char v6 = *(unsigned char *)(a1 + 98);
  uint64_t v7 = *(uint64_t (**)(_OWORD *))(a5 + 24);
  long long v8 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v8;
  long long v9 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  uint64_t v12[3] = v9;
  long long v10 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  void v12[5] = v10;
  char v14 = v6;
  __int16 v13 = v5;
  return v7(v12);
}

uint64_t sub_24D2DA528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_24D2DA53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_24D2DA550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_24D2DA564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_24D2DA578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_24D2DA58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

BOOL sub_24D2DA5A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_24D2DA5B4(void *a1@<X8>)
{
  *a1 = *v1;
}

id sub_24D2DA5C0(uint64_t a1, char *a2, __int16 *a3, void *a4)
{
  char v7 = *a2;
  *(void *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions] = MEMORY[0x263F8EE78];
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState] = 0;
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState] = 0;
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] = 0;
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_hasCalledConfigure] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_error] = 0;
  long long v8 = &v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_backgroundTaskID];
  *(void *)long long v8 = 0;
  v8[8] = 1;
  long long v9 = &v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler];
  *long long v9 = 0;
  v9[1] = 0;
  long long v10 = &v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_decrementNISessionHandler];
  *long long v10 = 0;
  v10[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession] = 0;
  __int16 v11 = *a3;
  uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession;
  *(void *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession] = 0;
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground] = 0;
  sub_24D2B6CE8(a1, (uint64_t)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable]);
  v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_connectionContext] = v7;
  *(_WORD *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findingTechnology] = v11;
  __int16 v13 = *(void **)&v4[v12];
  *(void *)&v4[v12] = a4;
  char v14 = v4;
  id v15 = a4;

  sub_24D2B6CE8(a1, (uint64_t)v56);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450(&qword_269861320);
  if (swift_dynamicCast())
  {
    sub_24D2B6F04(v54, (uint64_t)v59);
    LOWORD(v56[0]) = v11;
    id v16 = sub_24D2E4C58((__int16 *)v56, v59, 2);
    if (v16)
    {
      *(void *)&v14[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration] = v16;
      id v17 = v16;

      v52.receiver = v14;
      v52.super_class = (Class)type metadata accessor for FMNearbyInteractionLocalizerContext();
      double v18 = (char *)objc_msgSendSuper2(&v52, sel_init);
      double v19 = v18;
      uint64_t v20 = *(void **)&v18[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession];
      if (v20) {
        objc_msgSend(v20, sel_setDelegate_, v18);
      }
      else {
        uint64_t v32 = v18;
      }
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_24D39C950();
      sub_24D2B508C(v33, (uint64_t)qword_269869FD0);
      sub_24D2B6CE8((uint64_t)v59, (uint64_t)v56);
      id v26 = v19;
      long long v34 = sub_24D39C930();
      os_log_type_t v35 = sub_24D39CDF0();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v51 = v15;
        uint64_t v36 = swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        *(void *)&v54[0] = v50;
        *(_DWORD *)uint64_t v36 = 136315394;
        id v37 = objc_msgSend(v26, sel_description);
        uint64_t v38 = sub_24D39CAF0();
        uint64_t v49 = v17;
        unint64_t v40 = v39;

        sub_24D2B8328(v38, v40, (uint64_t *)v54);
        sub_24D39D070();

        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 12) = 2080;
        uint64_t v41 = v57;
        uint64_t v42 = v58;
        sub_24D2B8A34(v56, v57);
        long long v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
        id v44 = objc_msgSend(v43, sel_description);
        uint64_t v45 = sub_24D39CAF0();
        unint64_t v47 = v46;

        sub_24D2B8328(v45, v47, (uint64_t *)v54);
        sub_24D39D070();
        swift_bridgeObjectRelease();
        sub_24D2B6E58((uint64_t)v56);
        _os_log_impl(&dword_24D2B1000, v34, v35, "ðŸ§­ FMR1NIContxt%s: init with discovery token: %s", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253326010](v50, -1, -1);
        MEMORY[0x253326010](v36, -1, -1);
      }
      else
      {

        sub_24D2B6E58((uint64_t)v56);
      }
      sub_24D2B6E58(a1);
      uint64_t v31 = v59;
      goto LABEL_19;
    }
    sub_24D2B6E58((uint64_t)v59);
  }
  else
  {
    uint64_t v55 = 0;
    memset(v54, 0, sizeof(v54));
    sub_24D2E4AF4((uint64_t)v54);
  }
  id v21 = objc_allocWithZone(MEMORY[0x263F14088]);
  long long v22 = (void *)sub_24D39C7A0();
  id v23 = objc_msgSend(v21, sel_initWithBytes_, v22);

  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F14090]), sel_initWithRole_discoveryToken_preferredUpdateRate_, 0, v23, 2);
  *(void *)&v14[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration] = v24;
  id v25 = v24;

  v53.receiver = v14;
  v53.super_class = (Class)type metadata accessor for FMNearbyInteractionLocalizerContext();
  id v26 = objc_msgSendSuper2(&v53, sel_init);
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_24D39C950();
  sub_24D2B508C(v27, (uint64_t)qword_269869FD0);
  double v28 = sub_24D39C930();
  os_log_type_t v29 = sub_24D39CDE0();
  if (os_log_type_enabled(v28, v29))
  {
    long long v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v30 = 0;
    _os_log_impl(&dword_24D2B1000, v28, v29, "ðŸ§­ FMR1NIContxt: Error initializing FMNearbyInteractionLocalizerContext. Findable does not conform to FMNIFindable protocol.", v30, 2u);
    MEMORY[0x253326010](v30, -1, -1);
  }

  uint64_t v31 = (void *)a1;
LABEL_19:
  sub_24D2B6E58((uint64_t)v31);
  return v26;
}

uint64_t sub_24D2DAC2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24D39D600();
  unint64_t v4 = v3;
  sub_24D39D1D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24D34315C(9, v2, v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v24 = 7876668;
  unint64_t v25 = 0xE300000000000000;
  long long v21[2] = v6;
  uint64_t v22 = v8;
  sub_24D2C3E44();
  sub_24D39CB60();
  swift_bridgeObjectRelease();
  v21[0] = 7876668;
  v21[1] = 0xE300000000000000;
  swift_bridgeObjectRetain();
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  sub_24D2B7450((uint64_t *)&unk_269861860);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24D3A0220;
  sub_24D2B6CE8(v0 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v21);
  uint64_t v10 = v22;
  uint64_t v11 = v23;
  sub_24D2B8A34(v21, v22);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  uint64_t v14 = v13;
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  *(void *)(v9 + 64) = sub_24D2B7494();
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v14;
  id v15 = (unint64_t *)(v1 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions);
  swift_beginAccess();
  unint64_t v16 = *v15;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24D39D2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v18 = MEMORY[0x263F8D750];
  *(void *)(v9 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v9 + 104) = v18;
  *(void *)(v9 + 72) = v17;
  sub_24D2B6E58((uint64_t)v21);
  uint64_t v19 = sub_24D39CB00();
  swift_bridgeObjectRelease();
  return v19;
}

id sub_24D2DAECC(uint64_t a1, uint64_t a2)
{
  return sub_24D2DFF08("ðŸ§­ FMR1NIContxt%s: deinit", a2, (uint64_t (*)(void))type metadata accessor for FMNearbyInteractionLocalizerContext);
}

uint64_t sub_24D2DAFC8(void *a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v54 = *MEMORY[0x263EF8340];
  sub_24D2B6CE8((uint64_t)v3 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v49);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450(&qword_269861320);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v53 = 0;
    memset(v52, 0, sizeof(v52));
  }
  id v6 = objc_msgSend(a2, sel_discoveryToken);
  sub_24D2E86D0((uint64_t)v52, (uint64_t)v49);
  uint64_t v7 = v50;
  if (!v50)
  {
    sub_24D2E4AF4((uint64_t)v49);
    if (!v6) {
      goto LABEL_16;
    }
    goto LABEL_9;
  }
  uint64_t v8 = v51;
  sub_24D2B8A34(v49, v50);
  uint64_t v9 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v8[2])(v7, v8);
  sub_24D2B6E58((uint64_t)v49);
  if (!v6)
  {
    id v6 = v9;
    if (!v9) {
      goto LABEL_16;
    }
    goto LABEL_9;
  }
  if (!v9)
  {
LABEL_9:

    goto LABEL_10;
  }
  sub_24D2BC100(0, &qword_269861348);
  id v10 = v6;
  char v11 = sub_24D39CFE0();

  if (v11)
  {
LABEL_16:
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_24D39C950();
    sub_24D2B508C(v19, (uint64_t)qword_269869FD0);
    uint64_t v20 = v3;
    id v21 = a1;
    uint64_t v22 = sub_24D39C930();
    os_log_type_t v23 = sub_24D39CDF0();
    unint64_t v48 = v20;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      unint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138412546;
      v49[0] = v20;
      id v26 = v20;
      sub_24D39D070();
      *unint64_t v25 = v20;

      *(_WORD *)(v24 + 12) = 2112;
      id v27 = objc_msgSend(v21, sel_configuration);
      id v28 = v27;
      if (v27) {
        v49[0] = v27;
      }
      else {
        v49[0] = 0;
      }
      sub_24D39D070();
      v25[1] = v28;

      _os_log_impl(&dword_24D2B1000, v22, v23, "ðŸ§­ FMR1NIContxt%@: nearby object discover token matches!! setting ready. Config: %@", (uint8_t *)v24, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v25, -1, -1);
      MEMORY[0x253326010](v24, -1, -1);
    }
    else
    {

      uint64_t v22 = v20;
    }

    *((unsigned char *)&v20->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState) = 2;
    *((unsigned char *)&v20->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState) = 1;
    os_log_type_t v29 = (uint64_t *)((char *)v20 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions);
    swift_beginAccess();
    uint64_t v30 = *v29;
    if ((unint64_t)*v29 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v31 = sub_24D39D2D0();
      if (v31) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v31)
      {
LABEL_26:
        if (v31 < 1) {
          __break(1u);
        }
        uint64_t v32 = 0;
        unint64_t v47 = v30 & 0xC000000000000001;
        do
        {
          if (v47) {
            uint64_t v33 = (char *)MEMORY[0x253325220](v32, v30);
          }
          else {
            uint64_t v33 = (char *)*(id *)(v30 + 8 * v32 + 32);
          }
          long long v34 = v33;
          os_log_type_t v35 = &v33[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
          if (MEMORY[0x253326120](&v33[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
          {
            uint64_t v36 = *((void *)v35 + 1);
            uint64_t v37 = v30;
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v50 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            uint64_t v51 = &off_26FF86B30;
            v49[0] = v48;
            unint64_t v39 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v36 + 32);
            unint64_t v40 = v48;
            uint64_t v41 = ObjectType;
            uint64_t v30 = v37;
            v39(2, v49, v41, v36);
            swift_unknownObjectRelease();
            sub_24D2B6E58((uint64_t)v49);
          }
          if (MEMORY[0x253326120](v35))
          {
            uint64_t v42 = *((void *)v35 + 1);
            uint64_t v43 = swift_getObjectType();
            uint64_t v50 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            uint64_t v51 = &off_26FF86B30;
            v49[0] = v48;
            id v44 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v42 + 48);
            uint64_t v45 = v48;
            v44(1, v49, v43, v42);
            swift_unknownObjectRelease();
            sub_24D2B6E58((uint64_t)v49);
          }

          ++v32;
        }
        while (v31 != v32);
      }
    }
    swift_bridgeObjectRelease_n();
    return sub_24D2E4AF4((uint64_t)v52);
  }
LABEL_10:
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_24D39C950();
  sub_24D2B508C(v12, (uint64_t)qword_269869FD0);
  id v13 = v3;
  uint64_t v14 = sub_24D39C930();
  os_log_type_t v15 = sub_24D39CDF0();
  if (os_log_type_enabled(v14, v15))
  {
    unint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v16 = 138412290;
    v49[0] = v13;
    id v18 = v13;
    sub_24D39D070();
    *uint64_t v17 = v13;

    _os_log_impl(&dword_24D2B1000, v14, v15, "ðŸ§­ FMR1NIContxt%@: nearby object discover token doesn't match", v16, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v17, -1, -1);
    MEMORY[0x253326010](v16, -1, -1);
  }
  else
  {
  }
  return sub_24D2E4AF4((uint64_t)v52);
}

uint64_t sub_24D2DB818(id *a1, uint64_t a2)
{
  id v3 = objc_msgSend(*a1, sel_discoveryToken);
  sub_24D2E86D0(a2, (uint64_t)v10);
  uint64_t v4 = v11;
  if (!v11)
  {
    sub_24D2E4AF4((uint64_t)v10);
    if (v3) {
      goto LABEL_6;
    }
LABEL_11:
    char v8 = 1;
    return v8 & 1;
  }
  uint64_t v5 = v12;
  sub_24D2B8A34(v10, v11);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  sub_24D2B6E58((uint64_t)v10);
  if (!v3)
  {
    if (v6)
    {
      char v8 = 0;
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  if (v6)
  {
    sub_24D2BC100(0, &qword_269861348);
    id v7 = v3;
    char v8 = sub_24D39CFE0();

LABEL_9:
    id v3 = (id)v6;
    goto LABEL_10;
  }
LABEL_6:
  char v8 = 0;
LABEL_10:

  return v8 & 1;
}

void sub_24D2DBBB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v4, sel_setDelegate_, 0);
    uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession];
    if (v5) {
      objc_msgSend(v5, sel_setDelegate_, 0);
    }
    uint64_t v6 = sub_24D39D600();
    unint64_t v8 = v7;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24D39C950();
    sub_24D2B508C(v9, (uint64_t)qword_269869FD0);
    id v10 = v0;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_24D39C930();
    os_log_type_t v12 = sub_24D39CDF0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v24 = v6;
      uint64_t v13 = swift_slowAlloc();
      unint64_t v25 = (void *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = v26;
      *(_DWORD *)uint64_t v13 = 138412546;
      uint64_t v14 = v10;
      sub_24D39D070();
      *unint64_t v25 = v10;

      *(_WORD *)(v13 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_24D34315C(9, v24, v8);
      swift_bridgeObjectRelease();
      sub_24D2C3E44();
      sub_24D39CB60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24D39CB70();
      swift_bridgeObjectRelease();
      sub_24D2B8328(7876668, 0xE300000000000000, &v27);
      sub_24D39D070();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D2B1000, v11, v12, "ðŸ§­ FMR1NIContxt%@: released NI session <%s> and reset state to unknown", (uint8_t *)v13, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v25, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x253326010](v26, -1, -1);
      MEMORY[0x253326010](v13, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v21 = *(void **)&v1[v2];
    *(void *)&v1[v2] = 0;

    uint64_t v22 = *(void (**)(uint64_t))&v10[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_decrementNISessionHandler];
    if (v22)
    {
      uint64_t v23 = swift_retain();
      v22(v23);

      sub_24D2E44C8((uint64_t)v22);
      goto LABEL_17;
    }
LABEL_16:

    goto LABEL_17;
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_24D39C950();
  sub_24D2B508C(v15, (uint64_t)qword_269869FD0);
  uint64_t v4 = v0;
  unint64_t v16 = sub_24D39C930();
  os_log_type_t v17 = sub_24D39CDF0();
  if (!os_log_type_enabled(v16, v17))
  {

    goto LABEL_16;
  }
  id v18 = (uint8_t *)swift_slowAlloc();
  uint64_t v19 = (void *)swift_slowAlloc();
  *(_DWORD *)id v18 = 138412290;
  uint64_t v20 = v4;
  sub_24D39D070();
  *uint64_t v19 = v4;

  _os_log_impl(&dword_24D2B1000, v16, v17, "ðŸ§­ FMR1NIContxt%@: reset item localizer state to unknown", v18, 0xCu);
  sub_24D2B7450(&qword_269861308);
  swift_arrayDestroy();
  MEMORY[0x253326010](v19, -1, -1);
  MEMORY[0x253326010](v18, -1, -1);

LABEL_17:
  v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_hasCalledConfigure] = 0;
}

void sub_24D2DC0D4()
{
  uint64_t v1 = v0;
  if (v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground] == 1)
  {
    sub_24D2DE014();
  }
  else
  {
    uint64_t v2 = &v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_backgroundTaskID];
    uint64_t v3 = *MEMORY[0x263F833E0];
    if ((v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_backgroundTaskID + 8] & 1) == 0)
    {
      uint64_t v4 = *(void *)v2;
      if (*(void *)v2 != v3)
      {
        id v5 = objc_msgSend(self, sel_sharedApplication);
        objc_msgSend(v5, sel_endBackgroundTask_, v4);
      }
    }
    *(void *)uint64_t v2 = v3;
    v2[8] = 0;
    uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession;
    if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession])
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_24D39C950();
      sub_24D2B508C(v7, (uint64_t)qword_269869FD0);
      unint64_t v8 = v1;
      uint64_t v9 = sub_24D39C930();
      os_log_type_t v10 = sub_24D39CDF0();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v12 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 138412290;
        uint64_t v13 = v8;
        sub_24D39D070();
        *os_log_type_t v12 = v8;

        _os_log_impl(&dword_24D2B1000, v9, v10, "ðŸ§­ FMR1NIContxt%@: entering foreground", v11, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v12, -1, -1);
        MEMORY[0x253326010](v11, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F140C0]), sel_init);
      uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession];
      if (v15)
      {
        id v16 = v15;
        objc_msgSend(v14, sel_setARSession_, v16);
        objc_msgSend(v16, sel_setDelegate_, v1);
      }
      objc_msgSend(v14, sel_setDelegate_, v1);
      uint64_t v17 = sub_24D39D600();
      unint64_t v19 = v18;
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_24D39C950();
      sub_24D2B508C(v20, (uint64_t)qword_269869FD0);
      id v21 = v1;
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_24D39C930();
      os_log_type_t v23 = sub_24D39CDF0();
      if (os_log_type_enabled(v22, v23))
      {
        id v38 = v14;
        uint64_t v24 = swift_slowAlloc();
        uint64_t v35 = v17;
        unint64_t v25 = (void *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v39 = v37;
        *(_DWORD *)uint64_t v24 = 138412546;
        log = v22;
        uint64_t v26 = v21;
        sub_24D39D070();
        *unint64_t v25 = v1;

        *(_WORD *)(v24 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_24D34315C(9, v35, v19);
        swift_bridgeObjectRelease();
        sub_24D2C3E44();
        sub_24D39CB60();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_24D39CB70();
        swift_bridgeObjectRelease();
        sub_24D2B8328(7876668, 0xE300000000000000, &v39);
        sub_24D39D070();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D2B1000, log, v23, "ðŸ§­ FMR1NIContxt%@: entering foreground, created item localizer <%s> and will reconfigure", (uint8_t *)v24, 0x16u);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v25, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253326010](v37, -1, -1);
        uint64_t v27 = v24;
        id v14 = v38;
        MEMORY[0x253326010](v27, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      id v28 = *(void (**)(uint64_t))&v21[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler];
      if (v28)
      {
        uint64_t v29 = swift_retain();
        v28(v29);
        sub_24D2E44C8((uint64_t)v28);
      }
      uint64_t v30 = *(void **)&v1[v6];
      *(void *)&v1[v6] = v14;
    }
    uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration];
    self;
    uint64_t v32 = swift_dynamicCastObjCClass();
    if (v32)
    {
      uint64_t v33 = (void *)v32;
      id v34 = v31;
      if (objc_msgSend(v33, sel_preferredUpdateRate) == (id)3)
      {
        sub_24D2DD6D8();

        return;
      }
    }
    sub_24D2DCE7C();
  }
}

uint64_t sub_24D2DC720(void *a1)
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
  id v4 = a1;
  id v5 = v1;
  id v6 = v4;
  uint64_t v7 = (char *)v5;
  unint64_t v8 = sub_24D39C930();
  os_log_type_t v9 = sub_24D39CDF0();
  os_log_type_t v10 = (void *)&unk_269869000;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v11 = swift_slowAlloc();
    os_log_type_t v12 = (void *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v42[0] = v41;
    *(_DWORD *)uint64_t v11 = 138412802;
    uint64_t v13 = v7;
    sub_24D39D070();
    *os_log_type_t v12 = v7;

    *(_WORD *)(v11 + 12) = 2112;
    id v14 = (char *)v6;
    sub_24D39D070();
    v12[1] = v6;

    *(_WORD *)(v11 + 22) = 2080;
    uint64_t v15 = &v14[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
    if (MEMORY[0x253326120](&v14[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
    {
      uint64_t v16 = *((void *)v15 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
      unint64_t v20 = v19;
      swift_unknownObjectRelease();
    }
    else
    {
      unint64_t v20 = 0xE100000000000000;
      uint64_t v18 = 63;
    }
    sub_24D2B8328(v18, v20, v42);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v8, v9, "ðŸ§­ FMR1NIContxt%@: subscribing %@ for %s", (uint8_t *)v11, 0x20u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v41, -1, -1);
    MEMORY[0x253326010](v11, -1, -1);

    os_log_type_t v10 = &unk_269869000;
  }
  else
  {
  }
  id v21 = &v7[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v22 = (char *)v6;
  MEMORY[0x253324C20]();
  if (*(void *)((*(void *)v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v21 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_24D39CC40();
  sub_24D39CC60();
  sub_24D39CC30();
  swift_endAccess();
  os_log_type_t v23 = &v22[v10[496]];
  if (MEMORY[0x253326120](v23))
  {
    uint64_t v24 = *((void *)v23 + 1);
    uint64_t v25 = swift_getObjectType();
    uint64_t v26 = v7[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState];
    uint64_t v43 = type metadata accessor for FMNearbyInteractionLocalizerContext();
    id v44 = &off_26FF86B30;
    v42[0] = (uint64_t)v7;
    uint64_t v27 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v24 + 32);
    id v28 = v7;
    v27(v26, v42, v25, v24);
    swift_unknownObjectRelease();
    sub_24D2B6E58((uint64_t)v42);
  }
  uint64_t result = MEMORY[0x253326120](v23);
  if (result)
  {
    uint64_t v30 = *((void *)v23 + 1);
    uint64_t v31 = swift_getObjectType();
    uint64_t v32 = v7[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState];
    uint64_t v43 = type metadata accessor for FMNearbyInteractionLocalizerContext();
    id v44 = &off_26FF86B30;
    v42[0] = (uint64_t)v7;
    uint64_t v33 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v30 + 48);
    id v34 = v7;
    v33(v32, v42, v31, v30);
    swift_unknownObjectRelease();
    uint64_t result = sub_24D2B6E58((uint64_t)v42);
  }
  uint64_t v35 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_error];
  if (v35)
  {
    uint64_t result = MEMORY[0x253326120](v23);
    if (result)
    {
      uint64_t v36 = *((void *)v23 + 1);
      uint64_t v37 = swift_getObjectType();
      uint64_t v43 = type metadata accessor for FMNearbyInteractionLocalizerContext();
      id v44 = &off_26FF86B30;
      v42[0] = (uint64_t)v7;
      id v38 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v36 + 40);
      uint64_t v39 = v7;
      id v40 = v35;
      v38(v35, v42, v37, v36);
      swift_unknownObjectRelease();

      return sub_24D2B6E58((uint64_t)v42);
    }
  }
  return result;
}

void sub_24D2DCBE4(void *a1)
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
  id v4 = v1;
  id v5 = a1;
  id v6 = (char *)v4;
  id v7 = v5;
  unint64_t v8 = sub_24D39C930();
  os_log_type_t v9 = sub_24D39CDF0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412546;
    os_log_type_t v12 = v6;
    sub_24D39D070();
    *uint64_t v11 = v6;

    *(_WORD *)(v10 + 12) = 2112;
    id v13 = v7;
    sub_24D39D070();
    v11[1] = v7;

    _os_log_impl(&dword_24D2B1000, v8, v9, "ðŸ§­ FMR1NIContxt%@: unsubscribing %@", (uint8_t *)v10, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v11, -1, -1);
    MEMORY[0x253326010](v10, -1, -1);
  }
  else
  {
  }
  id v14 = (uint64_t *)&v6[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  id v15 = v7;
  int64_t v16 = sub_24D2E89C0(v14, (uint64_t)v15);

  if ((unint64_t)*v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24D39D2D0();
    swift_bridgeObjectRelease();
    if (v17 >= v16) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17 >= v16)
    {
LABEL_8:
      sub_24D2F5450(v16, v17);
      swift_endAccess();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_24D2DCE7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity;
  if (v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] == 1)
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24D39C950();
    sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
    id v4 = v0;
    id v5 = sub_24D39C930();
    os_log_type_t v6 = sub_24D39CDF0();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      unint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)id v7 = 138412290;
      v67[0] = v4;
      os_log_type_t v9 = v4;
      sub_24D39D070();
      *unint64_t v8 = v4;

      uint64_t v10 = "ðŸ§­ FMR1NIContxt%@: not starting niSession: already started)";
LABEL_18:
      _os_log_impl(&dword_24D2B1000, v5, v6, v10, v7, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v8, -1, -1);
      MEMORY[0x253326010](v7, -1, -1);

      return 0;
    }
    goto LABEL_19;
  }
  sub_24D2B6CE8((uint64_t)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable], (uint64_t)v64);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450(&qword_269861320);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v63 = 0;
    memset(v62, 0, sizeof(v62));
    sub_24D2E4AF4((uint64_t)v62);
    goto LABEL_14;
  }
  sub_24D2B6F04(v62, (uint64_t)v67);
  LOWORD(v64[0]) = *(_WORD *)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findingTechnology];
  id v11 = sub_24D2E4C58((__int16 *)v64, v67, 2);
  if (!v11)
  {
    sub_24D2B6E58((uint64_t)v67);
LABEL_14:
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_24D39C950();
    sub_24D2B508C(v30, (uint64_t)qword_269869FD0);
    id v4 = v0;
    id v5 = sub_24D39C930();
    os_log_type_t v6 = sub_24D39CDE0();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      unint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)id v7 = 138412290;
      v67[0] = v4;
      uint64_t v31 = v4;
      sub_24D39D070();
      *unint64_t v8 = v4;

      uint64_t v10 = "ðŸ§­ FMR1NIContxt%@: Findable does not conform to FMNIFindable protocol.";
      goto LABEL_18;
    }
LABEL_19:

    return 0;
  }
  uint64_t v52 = v2;
  uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration;
  id v13 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration];
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration] = v11;
  id v51 = v11;

  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_24D39C950();
  sub_24D2B508C(v14, (uint64_t)qword_269869FD0);
  id v15 = v1;
  int64_t v16 = sub_24D39C930();
  os_log_type_t v17 = sub_24D39CDF0();
  p_prots = &OBJC_PROTOCOL___PRBTGroupLocalizerDelegate.prots;
  uint64_t v53 = v1;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v57 = (void *)swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    v64[0] = v60;
    *(_DWORD *)uint64_t v19 = 138412802;
    *(void *)&v62[0] = v15;
    unint64_t v20 = v15;
    sub_24D39D070();
    *uint64_t v57 = v15;

    loga = v16;
    *(_WORD *)(v19 + 12) = 2080;
    *(void *)&v62[0] = *(void *)&v20[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
    id v21 = *(id *)&v62[0];
    sub_24D2B7450(&qword_269861340);
    uint64_t v22 = sub_24D39CB20();
    *(void *)&v62[0] = sub_24D2B8328(v22, v23, v64);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2080;
    id v24 = *(id *)&v1[v12];
    id v25 = objc_msgSend(v24, sel_description);
    uint64_t v26 = sub_24D39CAF0();
    unint64_t v28 = v27;

    uint64_t v29 = v26;
    p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___PRBTGroupLocalizerDelegate + 16);
    uint64_t v1 = v53;
    *(void *)&v62[0] = sub_24D2B8328(v29, v28, v64);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, loga, v17, "ðŸ§­ FMR1NIContxt%@: starting niSession %s with configuration: %s", (uint8_t *)v19, 0x20u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v57, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v60, -1, -1);
    MEMORY[0x253326010](v19, -1, -1);
  }
  else
  {
  }
  uint64_t v32 = *(void **)((char *)&p_prots[71]->count + (void)v15);
  if (v32) {
    objc_msgSend(v32, sel_runWithConfiguration_, *(void *)&v1[v12]);
  }
  uint64_t v33 = &v15[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v34 = *(void *)v33;
  if (!(*(void *)v33 >> 62))
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v35) {
      goto LABEL_25;
    }
LABEL_36:

    swift_bridgeObjectRelease_n();
    sub_24D2B6E58((uint64_t)v67);
    v53[v52] = 1;
    return 0;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v35 = result;
  if (!result) {
    goto LABEL_36;
  }
LABEL_25:
  if (v35 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v54 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState;
    os_log_t log = (os_log_t)OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState;
    uint64_t v58 = v34;
    unint64_t type = v34 & 0xC000000000000001;
    do
    {
      if (type) {
        id v38 = (char *)MEMORY[0x253325220](v37, v34);
      }
      else {
        id v38 = (char *)*(id *)(v34 + 8 * v37 + 32);
      }
      uint64_t v61 = v38;
      uint64_t v39 = &v38[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v38[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        uint64_t v40 = *((void *)v39 + 1);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v42 = *((unsigned __int8 *)&log->isa + (void)v15);
        uint64_t v65 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        uint64_t v66 = &off_26FF86B30;
        v64[0] = (uint64_t)v15;
        uint64_t v43 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v40 + 32);
        id v44 = v15;
        uint64_t v45 = ObjectType;
        uint64_t v34 = v58;
        v43(v42, v64, v45, v40);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v64);
      }
      if (MEMORY[0x253326120](v39))
      {
        uint64_t v46 = *((void *)v39 + 1);
        uint64_t v47 = swift_getObjectType();
        uint64_t v48 = v15[v54];
        uint64_t v65 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        uint64_t v66 = &off_26FF86B30;
        v64[0] = (uint64_t)v15;
        uint64_t v49 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v46 + 48);
        uint64_t v50 = v15;
        v49(v48, v64, v47, v46);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v64);
      }

      ++v37;
    }
    while (v35 != v37);
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D2DD6D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity;
  if (v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] == 5)
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24D39C950();
    sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
    id v4 = v0;
    id v5 = sub_24D39C930();
    os_log_type_t v6 = sub_24D39CDF0();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      unint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)id v7 = 138412290;
      v39[0] = v4;
      os_log_type_t v9 = v4;
      sub_24D39D070();
      *unint64_t v8 = v4;

      uint64_t v10 = "ðŸ§­ FMR1NIContxt%@: not starting niSession with low preferred update rate: already started)";
LABEL_18:
      _os_log_impl(&dword_24D2B1000, v5, v6, v10, v7, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v8, -1, -1);
      MEMORY[0x253326010](v7, -1, -1);

      return 0;
    }
    goto LABEL_19;
  }
  sub_24D2B6CE8((uint64_t)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable], (uint64_t)v38);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450(&qword_269861320);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v37 = 0;
    memset(v36, 0, sizeof(v36));
    sub_24D2E4AF4((uint64_t)v36);
    goto LABEL_14;
  }
  sub_24D2B6F04(v36, (uint64_t)v39);
  LOWORD(v38[0]) = *(_WORD *)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findingTechnology];
  id v11 = sub_24D2E4C58((__int16 *)v38, v39, 3);
  if (!v11)
  {
    sub_24D2B6E58((uint64_t)v39);
LABEL_14:
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_24D39C950();
    sub_24D2B508C(v29, (uint64_t)qword_269869FD0);
    id v4 = v0;
    id v5 = sub_24D39C930();
    os_log_type_t v6 = sub_24D39CDE0();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      unint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)id v7 = 138412290;
      v39[0] = v4;
      uint64_t v30 = v4;
      sub_24D39D070();
      *unint64_t v8 = v4;

      uint64_t v10 = "ðŸ§­ FMR1NIContxt%@: Findable does not conform to FMNIFindable protocol.";
      goto LABEL_18;
    }
LABEL_19:

    return 0;
  }
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration];
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration] = v11;
  id v13 = v11;

  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_24D39C950();
  sub_24D2B508C(v14, (uint64_t)qword_269869FD0);
  id v15 = v13;
  id v16 = v1;
  id v17 = v15;
  uint64_t v18 = (char *)v16;
  uint64_t v19 = sub_24D39C930();
  os_log_type_t v20 = sub_24D39CDF0();
  if (os_log_type_enabled(v19, v20))
  {
    os_log_type_t type = v20;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(void *)&v36[0] = v18;
    v38[0] = v35;
    *(_DWORD *)uint64_t v21 = 138412546;
    uint64_t v22 = v18;
    sub_24D39D070();
    void *v33 = v18;

    *(_WORD *)(v21 + 12) = 2080;
    id v23 = v17;
    id v24 = objc_msgSend(v23, sel_description);
    uint64_t v25 = sub_24D39CAF0();
    id v26 = v17;
    unint64_t v28 = v27;

    *(void *)&v36[0] = sub_24D2B8328(v25, v28, v38);
    sub_24D39D070();

    id v17 = v26;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v19, type, "ðŸ§­ FMR1NIContxt%@: starting niSession (low update rate) with configuration: %s", (uint8_t *)v21, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v33, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v35, -1, -1);
    MEMORY[0x253326010](v21, -1, -1);
  }
  else
  {
  }
  uint64_t v31 = *(void **)&v18[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
  if (v31)
  {
    objc_msgSend(v31, sel_runWithConfiguration_, v17);

    sub_24D2B6E58((uint64_t)v39);
  }
  else
  {
    sub_24D2B6E58((uint64_t)v39);
  }
  *((unsigned char *)v1 + v2) = 5;
  return 0;
}

uint64_t sub_24D2DDCC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity;
  if ((v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] | 4) == 5)
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24D39C950();
    sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
    id v4 = v0;
    id v5 = sub_24D39C930();
    os_log_type_t v6 = sub_24D39CDF0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v21 = v2;
      id v7 = (uint8_t *)swift_slowAlloc();
      unint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)id v7 = 138412290;
      uint64_t v22 = (char *)v4;
      os_log_type_t v9 = v4;
      sub_24D39D070();
      *unint64_t v8 = v4;

      _os_log_impl(&dword_24D2B1000, v5, v6, "ðŸ§­ FMR1NIContxt%@: stopping niSession", v7, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v8, -1, -1);
      uint64_t v10 = v7;
      uint64_t v2 = v21;
      MEMORY[0x253326010](v10, -1, -1);
    }
    else
    {
    }
    uint64_t v18 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession;
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession], sel_invalidate, v21, v22);
    uint64_t v19 = *(void **)&v4[v18];
    *(void *)&v4[v18] = 0;

    v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState] = 0;
    v1[v2] = 2;
  }
  else
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24D39C950();
    sub_24D2B508C(v11, (uint64_t)qword_269869FD0);
    uint64_t v12 = v0;
    id v13 = sub_24D39C930();
    os_log_type_t v14 = sub_24D39CDF0();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      id v16 = (void *)swift_slowAlloc();
      *(_DWORD *)id v15 = 138412290;
      id v17 = v12;
      sub_24D39D070();
      *id v16 = v12;

      _os_log_impl(&dword_24D2B1000, v13, v14, "ðŸ§­ FMR1NIContxt%@: not stopping niSession: not running", v15, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v16, -1, -1);
      MEMORY[0x253326010](v15, -1, -1);
    }
    else
    {
    }
  }
  return 0;
}

id sub_24D2DE014()
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
  uint64_t v2 = v0;
  uint64_t v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)id v5 = 138412290;
    id v7 = v2;
    sub_24D39D070();
    *os_log_type_t v6 = v2;

    _os_log_impl(&dword_24D2B1000, v3, v4, "ðŸ§­ FMR1NIContxt%@: pausing NISession", v5, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v6, -1, -1);
    MEMORY[0x253326010](v5, -1, -1);
  }
  else
  {
  }
  id result = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession], sel_pause);
  v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState] = 1;
  v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] = 2;
  return result;
}

void sub_24D2DE1E8()
{
  uint64_t v2 = v0;
  uint64_t v3 = (unint64_t *)&v0[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  unint64_t v4 = *v3;
  if (v4 >> 62) {
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v5)
  {
LABEL_14:
    uint64_t v1 = 0;
LABEL_15:
    swift_bridgeObjectRelease_n();
    if (v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState] != 2)
    {
      if (qword_2698602B0 == -1) {
        goto LABEL_27;
      }
      goto LABEL_83;
    }
    int v10 = v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState];
    if (v10 != 1 && v10 != 4)
    {
      uint64_t v28 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_hasCalledConfigure;
      if (v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_hasCalledConfigure])
      {
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v29 = sub_24D39C950();
        sub_24D2B508C(v29, (uint64_t)qword_269869FD0);
        uint64_t v30 = v2;
        uint64_t v31 = sub_24D39C930();
        os_log_type_t v32 = sub_24D39CDF0();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v33 = 138412290;
          v73[0] = (uint64_t)v30;
          uint64_t v35 = v30;
          sub_24D39D070();
          void *v34 = v30;

          uint64_t v36 = "ðŸ§­ FMR1NIContxt%@: waiting to be findable";
          goto LABEL_77;
        }
      }
      else
      {
        sub_24D2B6CE8((uint64_t)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable], (uint64_t)v72);
        sub_24D2B7450((uint64_t *)&unk_2698615F0);
        sub_24D2B7450(&qword_269861320);
        if (swift_dynamicCast())
        {
          sub_24D2B6F04(v70, (uint64_t)v73);
          v72[0] = *(_WORD *)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findingTechnology];
          id v44 = sub_24D2E4C58(v72, v73, 2);
          if (v44)
          {
            uint64_t v45 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration];
            *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration] = v44;
            id v46 = v44;

            v2[v28] = 1;
            if (qword_2698602B0 != -1) {
              swift_once();
            }
            uint64_t v47 = sub_24D39C950();
            sub_24D2B508C(v47, (uint64_t)qword_269869FD0);
            uint64_t v48 = v2;
            uint64_t v49 = sub_24D39C930();
            os_log_type_t v50 = sub_24D39CDF0();
            if (os_log_type_enabled(v49, v50))
            {
              id v51 = (uint8_t *)swift_slowAlloc();
              uint64_t v52 = (void *)swift_slowAlloc();
              *(_DWORD *)id v51 = 138412290;
              *(void *)uint64_t v72 = v48;
              uint64_t v53 = v48;
              sub_24D39D070();
              *uint64_t v52 = v48;

              _os_log_impl(&dword_24D2B1000, v49, v50, "ðŸ§­ FMR1NIContxt%@: completed configuring", v51, 0xCu);
              sub_24D2B7450(&qword_269861308);
              swift_arrayDestroy();
              MEMORY[0x253326010](v52, -1, -1);
              MEMORY[0x253326010](v51, -1, -1);
            }
            else
            {

              id v46 = v48;
            }

            sub_24D2B6E58((uint64_t)v73);
            return;
          }
          sub_24D2B6E58((uint64_t)v73);
        }
        else
        {
          uint64_t v71 = 0;
          memset(v70, 0, sizeof(v70));
          sub_24D2E4AF4((uint64_t)v70);
        }
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v65 = sub_24D39C950();
        sub_24D2B508C(v65, (uint64_t)qword_269869FD0);
        uint64_t v30 = v2;
        uint64_t v31 = sub_24D39C930();
        os_log_type_t v32 = sub_24D39CDE0();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v33 = 138412290;
          v73[0] = (uint64_t)v30;
          uint64_t v66 = v30;
          sub_24D39D070();
          void *v34 = v30;

          uint64_t v36 = "ðŸ§­ FMR1NIContxt%@: Findable does not conform to FMNIFindable protocol.";
          goto LABEL_77;
        }
      }
LABEL_78:

      return;
    }
    if (v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground] == 1)
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_24D39C950();
      sub_24D2B508C(v12, (uint64_t)qword_269869FD0);
      id v13 = v2;
      os_log_type_t v14 = sub_24D39C930();
      os_log_type_t v15 = sub_24D39CDF0();
      if (os_log_type_enabled(v14, v15))
      {
        id v16 = (uint8_t *)swift_slowAlloc();
        id v17 = (void *)swift_slowAlloc();
        *(_DWORD *)id v16 = 138412290;
        v73[0] = (uint64_t)v13;
        uint64_t v18 = v13;
        sub_24D39D070();
        *id v17 = v13;

        _os_log_impl(&dword_24D2B1000, v14, v15, "ðŸ§­ FMR1NIContxt%@: application is in background", v16, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v17, -1, -1);
        MEMORY[0x253326010](v16, -1, -1);
      }
      else
      {

        os_log_type_t v14 = v13;
      }

      sub_24D2DE014();
      return;
    }
    if (v1 < 1)
    {
      if (v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] != 1) {
        return;
      }
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v54 = sub_24D39C950();
      sub_24D2B508C(v54, (uint64_t)qword_269869FD0);
      unint64_t v27 = v2;
      goto LABEL_56;
    }
    switch(v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity])
    {
      case 0:
      case 2:
      case 5:
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v37 = sub_24D39C950();
        sub_24D2B508C(v37, (uint64_t)qword_269869FD0);
        id v38 = v2;
        uint64_t v39 = sub_24D39C930();
        os_log_type_t v40 = sub_24D39CDF0();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = (uint8_t *)swift_slowAlloc();
          uint64_t v42 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v41 = 138412290;
          v73[0] = (uint64_t)v38;
          uint64_t v43 = v38;
          sub_24D39D070();
          *uint64_t v42 = v38;

          _os_log_impl(&dword_24D2B1000, v39, v40, "ðŸ§­ FMR1NIContxt%@: asked to start localizer now", v41, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v42, -1, -1);
          MEMORY[0x253326010](v41, -1, -1);
        }
        else
        {

          uint64_t v39 = v38;
        }

        sub_24D2DCE7C();
        goto LABEL_63;
      case 1:
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v61 = sub_24D39C950();
        sub_24D2B508C(v61, (uint64_t)qword_269869FD0);
        uint64_t v30 = v2;
        uint64_t v31 = sub_24D39C930();
        os_log_type_t v32 = sub_24D39CDF0();
        if (!os_log_type_enabled(v31, v32)) {
          goto LABEL_78;
        }
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 138412290;
        v73[0] = (uint64_t)v30;
        double v62 = v30;
        sub_24D39D070();
        void *v34 = v30;

        uint64_t v36 = "ðŸ§­ FMR1NIContxt%@: asked to start localizer (but already is)";
        break;
      default:
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v63 = sub_24D39C950();
        sub_24D2B508C(v63, (uint64_t)qword_269869FD0);
        uint64_t v30 = v2;
        uint64_t v31 = sub_24D39C930();
        os_log_type_t v32 = sub_24D39CDF0();
        if (!os_log_type_enabled(v31, v32)) {
          goto LABEL_78;
        }
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 138412290;
        v73[0] = (uint64_t)v30;
        uint64_t v64 = v30;
        sub_24D39D070();
        void *v34 = v30;

        uint64_t v36 = "ðŸ§­ FMR1NIContxt%@: asked to start localizer (but waiting to be stopped first)";
        break;
    }
LABEL_77:
    _os_log_impl(&dword_24D2B1000, v31, v32, v36, v33, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v34, -1, -1);
    MEMORY[0x253326010](v33, -1, -1);

    return;
  }
  while (v5 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v1 = 0;
    while (1)
    {
      id v7 = (v4 & 0xC000000000000001) != 0
         ? (unsigned __int8 *)MEMORY[0x253325220](v6, v4)
         : (unsigned __int8 *)*(id *)(v4 + 8 * v6 + 32);
      int v8 = v7[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_wantsSession];

      if (v8 == 1 && __OFADD__(v1++, 1)) {
        break;
      }
      if (v5 == ++v6) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_24D39D2D0();
    if (!v5) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_83:
  swift_once();
LABEL_27:
  uint64_t v19 = sub_24D39C950();
  sub_24D2B508C(v19, (uint64_t)qword_269869FD0);
  os_log_type_t v20 = v2;
  uint64_t v21 = sub_24D39C930();
  os_log_type_t v22 = sub_24D39CDF0();
  if (os_log_type_enabled(v21, v22))
  {
    os_log_type_t type = v22;
    uint64_t v23 = swift_slowAlloc();
    int64x2_t v67 = (void *)swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    v73[0] = v69;
    *(_DWORD *)uint64_t v23 = 138412546;
    id v24 = v20;
    sub_24D39D070();
    *int64x2_t v67 = v20;

    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v25 = sub_24D39CB20();
    *(void *)uint64_t v72 = sub_24D2B8328(v25, v26, v73);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v21, type, "ðŸ§­ FMR1NIContxt%@: waiting to be ready: itemLocalizerState: %s", (uint8_t *)v23, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v67, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v69, -1, -1);
    MEMORY[0x253326010](v23, -1, -1);

    if (v1) {
      return;
    }
  }
  else
  {

    if (v1) {
      return;
    }
  }
  if (v20[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] == 1)
  {
    unint64_t v27 = v20;
LABEL_56:
    uint64_t v55 = v27;
    uint64_t v56 = sub_24D39C930();
    os_log_type_t v57 = sub_24D39CDF0();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      double v59 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 138412290;
      v73[0] = (uint64_t)v55;
      uint64_t v60 = v55;
      sub_24D39D070();
      *double v59 = v55;

      _os_log_impl(&dword_24D2B1000, v56, v57, "ðŸ§­ FMR1NIContxt%@: asked to stop everything now", v58, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v59, -1, -1);
      MEMORY[0x253326010](v58, -1, -1);
    }
    else
    {

      uint64_t v56 = v55;
    }

    sub_24D2DDCC4();
LABEL_63:
  }
}

void sub_24D2DF078(void *a1)
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
  unint64_t v4 = v1;
  id v5 = a1;
  uint64_t v6 = sub_24D39C930();
  os_log_type_t v7 = sub_24D39CDD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    os_log_type_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412546;
    int v10 = v4;
    sub_24D39D070();
    *os_log_type_t v9 = v4;

    *(_WORD *)(v8 + 12) = 2112;
    id v14 = sub_24D3751E8();
    sub_24D39D070();
    v9[1] = v14;

    _os_log_impl(&dword_24D2B1000, v6, v7, "ðŸ§­ FMR1NIContxt%@: Updating local device location: %@", (uint8_t *)v8, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v9, -1, -1);
    MEMORY[0x253326010](v8, -1, -1);
  }
  else
  {
  }
  uint64_t v11 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
  if (v11)
  {
    id v12 = objc_msgSend(v11, sel_findingNotifier);
    id v13 = sub_24D3751E8();
    objc_msgSend(v12, sel_notifyUpdatedLocationForLocalDevice_, v13);
  }
}

void sub_24D2DF2A8(void *a1)
{
  uint64_t v3 = sub_24D39C830();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v41 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24D39C950();
  sub_24D2B508C(v5, (uint64_t)qword_269869FD0);
  id v6 = v1;
  id v7 = a1;
  uint64_t v8 = (char *)v6;
  id v9 = v7;
  int v10 = sub_24D39C930();
  os_log_type_t v11 = sub_24D39CDD0();
  int v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v13 = swift_slowAlloc();
    id v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412546;
    int v40 = v12;
    id v44 = v8;
    os_log_type_t v15 = v8;
    sub_24D39D070();
    *id v14 = v8;

    *(_WORD *)(v13 + 12) = 2112;
    id v16 = objc_msgSend(v9, sel_timestamp);
    id v17 = v41;
    sub_24D39C800();

    objc_msgSend(v9, sel_trueHeading);
    double v19 = v18;
    objc_msgSend(v9, sel_magneticHeading);
    double v21 = v20;
    objc_msgSend(v9, sel_headingAccuracy);
    double v23 = v22;
    id v24 = objc_allocWithZone(MEMORY[0x263F14098]);
    uint64_t v25 = (void *)sub_24D39C7E0();
    unint64_t v26 = (char *)objc_msgSend(v24, sel_initWithTimestamp_trueHeading_magneticHeading_headingAccuracy_, v25, v19, v21, v23);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v43);
    id v44 = v26;
    sub_24D39D070();
    v14[1] = v26;

    _os_log_impl(&dword_24D2B1000, v10, (os_log_type_t)v40, "ðŸ§­ FMR1NIContxt%@: Updating local device heading: %@", (uint8_t *)v13, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v14, -1, -1);
    MEMORY[0x253326010](v13, -1, -1);
  }
  else
  {

    id v17 = v41;
  }
  unint64_t v27 = *(void **)&v8[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
  if (v27)
  {
    id v28 = objc_msgSend(v27, sel_findingNotifier);
    id v29 = objc_msgSend(v9, sel_timestamp);
    sub_24D39C800();

    objc_msgSend(v9, sel_trueHeading);
    double v31 = v30;
    objc_msgSend(v9, sel_magneticHeading);
    double v33 = v32;
    objc_msgSend(v9, sel_headingAccuracy);
    double v35 = v34;
    id v36 = objc_allocWithZone(MEMORY[0x263F14098]);
    uint64_t v37 = (void *)sub_24D39C7E0();
    id v38 = objc_msgSend(v36, sel_initWithTimestamp_trueHeading_magneticHeading_headingAccuracy_, v37, v31, v33, v35);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v43);
    objc_msgSend(v28, sel_notifyUpdatedHeadingForLocalDevice_, v38);
  }
}

uint64_t sub_24D2DF6E8(uint64_t a1, void *a2)
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24D39C950();
  sub_24D2B508C(v5, (uint64_t)qword_269869FD0);
  sub_24D2B6CE8(a1, (uint64_t)v32);
  id v6 = v2;
  id v7 = a2;
  uint64_t v8 = (char *)v6;
  id v9 = v7;
  int v10 = sub_24D39C930();
  os_log_type_t v11 = sub_24D39CDD0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v28 = a1;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    v31[0] = v27;
    *(_DWORD *)uint64_t v12 = 138412802;
    *(void *)&v29[0] = v8;
    id v14 = v8;
    sub_24D39D070();
    *uint64_t v13 = v8;

    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v16 = v33;
    uint64_t v15 = v34;
    sub_24D2B8A34(v32, v33);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v16, v15);
    sub_24D2B8328(v17, v18, v31);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    sub_24D2B6E58((uint64_t)v32);
    *(_WORD *)(v12 + 22) = 2112;
    *(void *)&v29[0] = sub_24D3751E8();
    sub_24D39D070();
    v13[1] = *(void *)&v29[0];

    _os_log_impl(&dword_24D2B1000, v10, v11, "ðŸ§­ FMR1NIContxt%@: Updating findable location findable: %s, location: %@", (uint8_t *)v12, 0x20u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v27, -1, -1);
    uint64_t v19 = v12;
    a1 = v28;
    MEMORY[0x253326010](v19, -1, -1);
  }
  else
  {

    sub_24D2B6E58((uint64_t)v32);
  }
  sub_24D2B6CE8(a1, (uint64_t)v31);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450(&qword_269861320);
  if (swift_dynamicCast())
  {
    sub_24D2B6F04(v29, (uint64_t)v32);
    double v20 = *(void **)&v8[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
    if (v20)
    {
      id v21 = objc_msgSend(v20, sel_findingNotifier);
      id v22 = sub_24D3751E8();
      uint64_t v23 = v33;
      uint64_t v24 = v34;
      sub_24D2B8A34(v32, v33);
      uint64_t v25 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
      objc_msgSend(v21, sel_notifyUpdatedLocation_forNearbyObjectWithToken_, v22, v25);
    }
    return sub_24D2B6E58((uint64_t)v32);
  }
  else
  {
    uint64_t v30 = 0;
    memset(v29, 0, sizeof(v29));
    return sub_24D2E4AF4((uint64_t)v29);
  }
}

uint64_t type metadata accessor for FMNearbyInteractionLocalizerContext()
{
  return self;
}

uint64_t sub_24D2DFB00@<X0>(uint64_t a1@<X8>)
{
  return sub_24D2B6CE8(*v1 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, a1);
}

uint64_t sub_24D2DFB2C(uint64_t a1, uint64_t a2)
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24D39C950();
  sub_24D2B508C(v5, (uint64_t)qword_269869FD0);
  id v6 = v2;
  id v7 = sub_24D39C930();
  os_log_type_t v8 = sub_24D39CDD0();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    id v21 = (void *)swift_slowAlloc();
    *(_DWORD *)id v9 = 138412290;
    int v10 = v6;
    sub_24D39D070();
    *id v21 = v6;

    _os_log_impl(&dword_24D2B1000, v7, v8, "ðŸ§­ FMR1NIContxt%@: didUpdate ARFrame", v9, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v21, -1, -1);
    MEMORY[0x253326010](v9, -1, -1);
  }
  else
  {
  }
  os_log_type_t v11 = &v6[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v12 = *(void *)v11;
  if (!(*(void *)v11 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v13) {
      goto LABEL_8;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v13 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_8:
  if (v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0) {
        uint64_t v16 = (char *)MEMORY[0x253325220](i, v12);
      }
      else {
        uint64_t v16 = (char *)*(id *)(v12 + 8 * i + 32);
      }
      uint64_t v17 = v16;
      unint64_t v18 = &v16[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v16[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        uint64_t v19 = *((void *)v18 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 64))(a1, a2, ObjectType, v19);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

id sub_24D2DFEE4()
{
  return sub_24D2DFF08("ðŸ§­ FMR1NISubscr%s: deinit", 0, (uint64_t (*)(void))type metadata accessor for FMNearbyInteractionManagerSubscription);
}

id sub_24D2DFF08(char *a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_24D39C950();
  sub_24D2B508C(v7, (uint64_t)qword_269869FD0);
  id v8 = v3;
  id v9 = sub_24D39C930();
  os_log_type_t v10 = sub_24D39CDF0();
  if (os_log_type_enabled(v9, v10))
  {
    id v21 = a3;
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v22 = v12;
    *(_DWORD *)os_log_type_t v11 = 136315138;
    format = a1;
    id v13 = objc_msgSend(v8, sel_description);
    uint64_t v14 = sub_24D39CAF0();
    unint64_t v16 = v15;

    uint64_t v17 = v14;
    a3 = v21;
    sub_24D2B8328(v17, v16, &v22);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v9, v10, format, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v12, -1, -1);
    MEMORY[0x253326010](v11, -1, -1);
  }
  else
  {
  }
  unint64_t v18 = (objc_class *)a3(a2);
  v23.receiver = v8;
  v23.super_class = v18;
  return objc_msgSendSuper2(&v23, sel_dealloc);
}

uint64_t sub_24D2E01D8()
{
  return type metadata accessor for FMNearbyInteractionManagerSubscription();
}

uint64_t type metadata accessor for FMNearbyInteractionManagerSubscription()
{
  uint64_t result = qword_2698612C0;
  if (!qword_2698612C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24D2E022C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context];
  uint64_t v5 = MEMORY[0x253326120](v4);
  if (v5)
  {
    id v6 = (char *)v5;
    if ((a1 & 1) == 0) {
      goto LABEL_25;
    }
    uint64_t v7 = MEMORY[0x253326120](v4);
    if (!v7) {
      goto LABEL_25;
    }
    id v8 = (id)v7;
    *(unsigned char *)(v7 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState) = 2;
    *(unsigned char *)(v7 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState) = 1;
    id v9 = (uint64_t *)(v7 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions);
    swift_beginAccess();
    uint64_t v10 = *v9;
    uint64_t v61 = v2;
    double v62 = v6;
    if ((unint64_t)*v9 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v11 = sub_24D39D2D0();
      if (v11) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v11)
      {
LABEL_6:
        if (v11 < 1)
        {
          __break(1u);
          return;
        }
        for (uint64_t i = 0; i != v11; ++i)
        {
          if ((v10 & 0xC000000000000001) != 0) {
            id v13 = (char *)MEMORY[0x253325220](i, v10);
          }
          else {
            id v13 = (char *)*(id *)(v10 + 8 * i + 32);
          }
          id v67 = v13;
          uint64_t v14 = &v13[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
          if (MEMORY[0x253326120](&v13[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
          {
            uint64_t v15 = *((void *)v14 + 1);
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v73 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            long long v74 = &off_26FF86B30;
            uint64_t v70 = (uint64_t)v8;
            unint64_t v16 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v15 + 32);
            id v17 = v8;
            v16(2, &v70, ObjectType, v15);
            swift_unknownObjectRelease();
            sub_24D2B6E58((uint64_t)&v70);
          }
          if (MEMORY[0x253326120](v14))
          {
            uint64_t v18 = *((void *)v14 + 1);
            uint64_t v19 = swift_getObjectType();
            uint64_t v73 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            long long v74 = &off_26FF86B30;
            uint64_t v70 = (uint64_t)v8;
            double v20 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v18 + 48);
            id v21 = v8;
            v20(1, &v70, v19, v18);
            swift_unknownObjectRelease();
            sub_24D2B6E58((uint64_t)&v70);
          }
        }
      }
    }
    swift_bridgeObjectRelease_n();

    uint64_t v2 = v61;
    id v6 = v62;
LABEL_25:
    uint64_t v28 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession;
    if (*(void *)&v6[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession])
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_24D39C950();
      sub_24D2B508C(v29, (uint64_t)qword_269869FD0);
      uint64_t v30 = v2;
      double v31 = sub_24D39C930();
      os_log_type_t v32 = sub_24D39CDF0();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 138412290;
        uint64_t v70 = (uint64_t)v30;
        double v35 = v30;
        sub_24D39D070();
        void *v34 = v30;

        _os_log_impl(&dword_24D2B1000, v31, v32, "ðŸ§­ FMR1NISubscr%@: asking to start localizer", v33, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v34, -1, -1);
        MEMORY[0x253326010](v33, -1, -1);
      }
      else
      {

        double v31 = v30;
      }
    }
    else
    {
      id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F140C0]), sel_init);
      uint64_t v37 = *(void **)&v6[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession];
      if (v37)
      {
        id v38 = v37;
        objc_msgSend(v36, sel_setARSession_, v38);
        objc_msgSend(v38, sel_setDelegate_, v6);
      }
      objc_msgSend(v36, sel_setDelegate_, v6);
      uint64_t v70 = (uint64_t)v36;
      uint64_t v39 = sub_24D39D600();
      unint64_t v41 = v40;
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_24D39C950();
      sub_24D2B508C(v42, (uint64_t)qword_269869FD0);
      id v43 = v2;
      swift_bridgeObjectRetain();
      id v44 = sub_24D39C930();
      os_log_type_t v45 = sub_24D39CDF0();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v63 = v6;
        uint64_t v46 = swift_slowAlloc();
        uint64_t v59 = v39;
        uint64_t v47 = (void *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v77 = v66;
        *(_DWORD *)uint64_t v46 = 138412546;
        os_log_type_t type = v45;
        os_log_t log = v44;
        uint64_t v70 = (uint64_t)v43;
        id v69 = v36;
        id v48 = v43;
        sub_24D39D070();
        void *v47 = v43;

        *(_WORD *)(v46 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v49 = sub_24D34315C(9, v59, v41);
        unint64_t v51 = v50;
        uint64_t v53 = v52;
        uint64_t v55 = v54;
        swift_bridgeObjectRelease();
        uint64_t v75 = 7876668;
        unint64_t v76 = 0xE300000000000000;
        uint64_t v70 = v49;
        unint64_t v71 = v51;
        uint64_t v72 = v53;
        uint64_t v73 = v55;
        sub_24D2C3E44();
        sub_24D39CB60();
        swift_bridgeObjectRelease();
        uint64_t v70 = v75;
        unint64_t v71 = v76;
        swift_bridgeObjectRetain();
        sub_24D39CB70();
        swift_bridgeObjectRelease();
        uint64_t v70 = sub_24D2B8328(v70, v71, &v77);
        id v36 = v69;
        sub_24D39D070();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D2B1000, log, type, "ðŸ§­ FMR1NISubscr%@: asking to start localizer, created item localizer <%s> and will re-configure", (uint8_t *)v46, 0x16u);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v47, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253326010](v66, -1, -1);
        uint64_t v56 = v46;
        id v6 = v63;
        MEMORY[0x253326010](v56, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      os_log_type_t v57 = *(void (**)(uint64_t))&v6[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler];
      if (v57)
      {
        uint64_t v58 = swift_retain();
        v57(v58);
        sub_24D2E44C8((uint64_t)v57);
      }
      double v31 = *(NSObject **)&v6[v28];
      *(void *)&v6[v28] = v36;
    }

    *((unsigned char *)v2 + OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_wantsSession) = 1;
    sub_24D2DE1E8();

    return;
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_24D39C950();
  sub_24D2B508C(v22, (uint64_t)qword_269869FD0);
  id v68 = v2;
  objc_super v23 = sub_24D39C930();
  os_log_type_t v24 = sub_24D39CDF0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    unint64_t v26 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 138412290;
    uint64_t v70 = (uint64_t)v68;
    id v27 = v68;
    sub_24D39D070();
    *unint64_t v26 = v68;

    _os_log_impl(&dword_24D2B1000, v23, v24, "ðŸ§­ FMR1NISubscr%@: asking to start localizer but no context", v25, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v26, -1, -1);
    MEMORY[0x253326010](v25, -1, -1);
  }
  else
  {
  }
}

void sub_24D2E0B28()
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
  uint64_t v2 = v0;
  uint64_t v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    id v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = v2;
    sub_24D39D070();
    *id v6 = v2;

    _os_log_impl(&dword_24D2B1000, v3, v4, "ðŸ§­ FMR1NISubscr%@: asking to stop localizer", v5, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v6, -1, -1);
    MEMORY[0x253326010](v5, -1, -1);
  }
  else
  {
  }
  v2[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_wantsSession] = 0;
  uint64_t v8 = MEMORY[0x253326120](&v2[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context]);
  if (v8)
  {
    id v9 = (void *)v8;
    sub_24D2DE1E8();
  }
}

uint64_t sub_24D2E0D20()
{
  uint64_t result = sub_24D39C8A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_24D2E0DD8(void *a1)
{
  id v32 = a1;
  uint64_t v31 = sub_24D39CE80();
  uint64_t v2 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  os_log_type_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24D39CE50();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_24D39C9D0();
  MEMORY[0x270FA5388](v6 - 8);
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts] = MEMORY[0x263F8EE80];
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_subscriptions] = MEMORY[0x263F8EE78];
  v1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_itemLocalizersCount] = 0;
  uint64_t v30 = OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_serialQueue;
  sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
  uint64_t v8 = v1;
  sub_24D39C9C0();
  uint64_t v35 = v7;
  sub_24D2E8CF4((unint64_t *)&unk_2698613B0, MEMORY[0x263F8F0F8]);
  sub_24D2B7450((uint64_t *)&unk_269860F50);
  sub_24D2E8D3C();
  sub_24D39D0E0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F8F130], v31);
  *(void *)&v1[v30] = sub_24D39CEC0();
  id v9 = v32;
  *(void *)&v8[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession] = v32;
  id v10 = v9;

  uint64_t v11 = (objc_class *)type metadata accessor for FMNearbyInteractionManager();
  v34.receiver = v8;
  v34.super_class = v11;
  id v12 = objc_msgSendSuper2(&v34, sel_init);
  id v13 = self;
  id v14 = v12;
  id v15 = objc_msgSend(v13, sel_defaultCenter);
  objc_msgSend(v15, sel_addObserver_selector_name_object_, v14, sel_applicationDidEnterBackground, *MEMORY[0x263F83330], 0);

  id v16 = objc_msgSend(v13, sel_defaultCenter);
  objc_msgSend(v16, sel_addObserver_selector_name_object_, v14, sel_applicationWillEnterForeground, *MEMORY[0x263F833B8], 0);

  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_24D39C950();
  sub_24D2B508C(v17, (uint64_t)qword_269869FD0);
  id v18 = v14;
  uint64_t v19 = sub_24D39C930();
  os_log_type_t v20 = sub_24D39CDF0();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    id v32 = v10;
    uint64_t v23 = v22;
    uint64_t v35 = v22;
    *(_DWORD *)id v21 = 136315138;
    id v24 = objc_msgSend(v18, sel_description);
    uint64_t v25 = sub_24D39CAF0();
    unint64_t v27 = v26;

    uint64_t v33 = sub_24D2B8328(v25, v27, &v35);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v19, v20, "ðŸ§­ FMR1NIMgr%s: init (v14)", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v23, -1, -1);
    MEMORY[0x253326010](v21, -1, -1);
  }
  else
  {
  }
  return v18;
}

void sub_24D2E12E8()
{
  if (qword_2698602B0 != -1) {
LABEL_31:
  }
    swift_once();
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
  uint64_t v2 = v0;
  uint64_t v0 = sub_24D39C930();
  os_log_type_t v3 = sub_24D39CDF0();
  if (os_log_type_enabled(v0, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 138412290;
    uint64_t v6 = v2;
    sub_24D39D070();
    *uint64_t v5 = v2;

    _os_log_impl(&dword_24D2B1000, v0, v3, "ðŸ§­ FMR1NIMgr%@: entering background", v4, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v5, -1, -1);
    MEMORY[0x253326010](v4, -1, -1);
  }
  else
  {
  }
  *((unsigned char *)&v2->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground) = 1;
  uint64_t v7 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = v8 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v8 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v13) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_29;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v13) {
          goto LABEL_29;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 3;
          if (v17 + 3 >= v13) {
            goto LABEL_29;
          }
          unint64_t v18 = *(void *)(v9 + 8 * v14);
          if (!v18)
          {
            int64_t v14 = v17 + 4;
            if (v17 + 4 >= v13) {
              goto LABEL_29;
            }
            unint64_t v18 = *(void *)(v9 + 8 * v14);
            if (!v18) {
              break;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_9:
    uint64_t v0 = *(NSObject **)(*(void *)(v8 + 56) + 8 * v16);
    *((unsigned char *)&v0->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground) = 1;
    sub_24D2DC0D4();
    sub_24D2DE1E8();
  }
  int64_t v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_28;
    }
  }
  __break(1u);
}

void sub_24D2E1648()
{
  if (qword_2698602B0 != -1) {
LABEL_31:
  }
    swift_once();
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
  uint64_t v2 = v0;
  uint64_t v0 = sub_24D39C930();
  os_log_type_t v3 = sub_24D39CDF0();
  if (os_log_type_enabled(v0, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 138412290;
    uint64_t v6 = v2;
    sub_24D39D070();
    *uint64_t v5 = v2;

    _os_log_impl(&dword_24D2B1000, v0, v3, "ðŸ§­ FMR1NIMgr%@: entering foreground", v4, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v5, -1, -1);
    MEMORY[0x253326010](v4, -1, -1);
  }
  else
  {
  }
  *((unsigned char *)&v2->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground) = 0;
  uint64_t v7 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = v8 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v8 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v13) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_29;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v13) {
          goto LABEL_29;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 3;
          if (v17 + 3 >= v13) {
            goto LABEL_29;
          }
          unint64_t v18 = *(void *)(v9 + 8 * v14);
          if (!v18)
          {
            int64_t v14 = v17 + 4;
            if (v17 + 4 >= v13) {
              goto LABEL_29;
            }
            unint64_t v18 = *(void *)(v9 + 8 * v14);
            if (!v18) {
              break;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_9:
    uint64_t v0 = *(NSObject **)(*(void *)(v8 + 56) + 8 * v16);
    *((unsigned char *)&v0->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground) = 0;
    sub_24D2DC0D4();
    sub_24D2DE1E8();
  }
  int64_t v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_28;
    }
  }
  __break(1u);
}

uint64_t sub_24D2E19AC(void *a1, char *a2)
{
  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_24D2B8A34(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  uint64_t v10 = &a2[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts];
  swift_beginAccess();
  uint64_t v11 = *(void *)v10;
  if (*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_24D3839F0((uint64_t)v7);
    if (v13)
    {
      int64_t v14 = *(id *)(*(void *)(v11 + 56) + 8 * v12);
      swift_bridgeObjectRelease();
      if (a2[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground])
      {
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_24D39C950();
        sub_24D2B508C(v15, (uint64_t)qword_269869FD0);
        unint64_t v16 = sub_24D39C930();
        os_log_type_t v17 = sub_24D39CDF0();
        if (os_log_type_enabled(v16, v17))
        {
          unint64_t v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v18 = 0;
          _os_log_impl(&dword_24D2B1000, v16, v17, "FMR1NIMgr: Cannot start discovering while application is in the background. Discovery will start when it's foregrounded", v18, 2u);
          MEMORY[0x253326010](v18, -1, -1);
        }

        int64_t v14 = v16;
      }
      else
      {
        uint64_t v22 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession;
        if (*(Class *)((char *)&v14->isa + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession))
        {
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v23 = sub_24D39C950();
          sub_24D2B508C(v23, (uint64_t)qword_269869FD0);
          id v24 = a2;
          uint64_t v25 = sub_24D39C930();
          os_log_type_t v26 = sub_24D39CDF0();
          if (os_log_type_enabled(v25, v26))
          {
            unint64_t v27 = (uint8_t *)swift_slowAlloc();
            uint64_t v70 = swift_slowAlloc();
            unint64_t v71 = v27;
            uint64_t v72 = (uint64_t)v24;
            *(_DWORD *)unint64_t v27 = 138412290;
            id v69 = v27 + 4;
            uint64_t v28 = v24;
            sub_24D39D070();
            uint64_t v29 = v70;
            *(void *)uint64_t v70 = v24;

            uint64_t v30 = v71;
            _os_log_impl(&dword_24D2B1000, v25, v26, "ðŸ§­ FMR1NISubscr%@: asking to start discovering", v71, 0xCu);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v29, -1, -1);
            MEMORY[0x253326010](v30, -1, -1);
          }
          else
          {

            uint64_t v25 = v24;
          }
        }
        else
        {
          id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F140C0]), sel_init);
          id v32 = *(Class *)((char *)&v14->isa
                         + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_arSession);
          if (v32)
          {
            id v33 = v32;
            objc_msgSend(v31, sel_setARSession_, v33);
            objc_msgSend(v33, sel_setDelegate_, v14);
          }
          objc_msgSend(v31, sel_setDelegate_, v14);
          uint64_t v72 = (uint64_t)v31;
          unint64_t v71 = (uint8_t *)sub_24D39D600();
          unint64_t v35 = v34;
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v36 = sub_24D39C950();
          sub_24D2B508C(v36, (uint64_t)qword_269869FD0);
          uint64_t v37 = a2;
          swift_bridgeObjectRetain();
          id v38 = sub_24D39C930();
          os_log_type_t v39 = sub_24D39CDF0();
          int v40 = v39;
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v41 = swift_slowAlloc();
            id v68 = v31;
            uint64_t v70 = v41;
            uint64_t v42 = (void *)swift_slowAlloc();
            uint64_t v65 = v42;
            uint64_t v67 = swift_slowAlloc();
            uint64_t v78 = v67;
            *(_DWORD *)uint64_t v70 = 138412546;
            os_log_t v66 = v38;
            unint64_t v62 = v35;
            uint64_t v72 = (uint64_t)v37;
            id v69 = (uint8_t *)v22;
            id v43 = v37;
            int v64 = v40;
            id v44 = v43;
            sub_24D39D070();
            *uint64_t v42 = v37;

            os_log_type_t v45 = (uint8_t *)v70;
            *(_WORD *)(v70 + 12) = 2080;
            uint64_t v63 = v45 + 14;
            unint64_t v46 = v62;
            swift_bridgeObjectRetain();
            uint64_t v47 = sub_24D34315C(9, (uint64_t)v71, v46);
            unint64_t v49 = v48;
            uint64_t v51 = v50;
            uint64_t v53 = v52;
            swift_bridgeObjectRelease();
            uint64_t v76 = 7876668;
            unint64_t v77 = 0xE300000000000000;
            uint64_t v72 = v47;
            unint64_t v73 = v49;
            uint64_t v74 = v51;
            uint64_t v75 = v53;
            sub_24D2C3E44();
            sub_24D39CB60();
            uint64_t v22 = (uint64_t)v69;
            swift_bridgeObjectRelease();
            uint64_t v72 = v76;
            unint64_t v73 = v77;
            swift_bridgeObjectRetain();
            sub_24D39CB70();
            swift_bridgeObjectRelease();
            uint64_t v72 = sub_24D2B8328(v72, v73, &v78);
            sub_24D39D070();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            os_log_t v54 = v66;
            _os_log_impl(&dword_24D2B1000, v66, (os_log_type_t)v64, "ðŸ§­ FMR1NISubscr%@: asking to start discovering, created item localizer <%s> and will re-configure", v45, 0x16u);
            sub_24D2B7450(&qword_269861308);
            uint64_t v55 = v65;
            swift_arrayDestroy();
            MEMORY[0x253326010](v55, -1, -1);
            uint64_t v56 = v67;
            swift_arrayDestroy();
            MEMORY[0x253326010](v56, -1, -1);
            os_log_type_t v57 = v45;
            id v31 = v68;
            MEMORY[0x253326010](v57, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          uint64_t v58 = *(void (**)(uint64_t))((char *)&v14->isa
                                               + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler);
          if (v58)
          {
            uint64_t v59 = swift_retain();
            v58(v59);
            sub_24D2E44C8((uint64_t)v58);
          }
          uint64_t v25 = *(NSObject **)((char *)&v14->isa + v22);
          *(Class *)((char *)&v14->isa + v22) = (Class)v31;
        }

        sub_24D2DD6D8();
      }
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_24D39C950();
  sub_24D2B508C(v19, (uint64_t)qword_269869FD0);
  int64_t v14 = sub_24D39C930();
  os_log_type_t v20 = sub_24D39CDF0();
  if (os_log_type_enabled(v14, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v21 = 0;
    _os_log_impl(&dword_24D2B1000, v14, v20, "FMR1NIMgr: Cannot start discovering without subscribing first.", v21, 2u);
    MEMORY[0x253326010](v21, -1, -1);
  }
LABEL_31:

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24D2E21B4@<X0>(void *a1@<X0>, NSObject *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, __int16 a6@<W5>, void *a7@<X8>)
{
  uint64_t v145 = a5;
  id v148 = a4;
  id v140 = a3;
  uint64_t v144 = a7;
  uint64_t v149 = sub_24D39C8A0();
  uint64_t v146 = *(void (***)(void, void, void))(v149 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v149);
  uint64_t v147 = (char *)v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int64_t v14 = (char *)v134 - v13;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_24D2B8A34(a1, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  os_log_type_t v17 = (char *)a2 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts;
  swift_beginAccess();
  uint64_t v18 = *(void *)(*(void *)v17 + 16);
  uint64_t v143 = v14;
  if (!v18
    || (swift_bridgeObjectRetain(), sub_24D3839F0((uint64_t)v14), char v20 = v19, swift_bridgeObjectRelease(), (v20 & 1) == 0))
  {
    uint64_t v141 = v7;
    sub_24D2B6CE8((uint64_t)a1, (uint64_t)v153);
    if (a6 >= 0) {
      char v44 = a6;
    }
    else {
      char v44 = HIBYTE(a6) & 0x7F;
    }
    LOBYTE(v151) = v44;
    LOWORD(v156) = a6;
    os_log_type_t v45 = *(Class *)((char *)&a2->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_arSession);
    id v46 = objc_allocWithZone((Class)type metadata accessor for FMNearbyInteractionLocalizerContext());
    id v47 = v45;
    unint64_t v48 = (char *)sub_24D2DA5C0((uint64_t)v153, (char *)&v151, (__int16 *)&v156, v45);
    uint64_t v49 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v50 = (void (**)())&v48[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler];
    uint64_t v51 = *(void *)&v48[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_incrementNISessionHandler];
    *uint64_t v50 = sub_24D2E87F8;
    v50[1] = (void (*)())v49;
    unint64_t v136 = v50;
    sub_24D2E44C8(v51);
    uint64_t v52 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v53 = (void (**)())&v48[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_decrementNISessionHandler];
    uint64_t v54 = *(void *)&v48[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_decrementNISessionHandler];
    *uint64_t v53 = sub_24D2E8800;
    v53[1] = (void (*)())v52;
    sub_24D2E44C8(v54);
    os_log_t v139 = a2;
    uint64_t v55 = v146;
    uint64_t v56 = (uint64_t)a1;
    uint64_t v57 = (uint64_t)v147;
    uint64_t v58 = v14;
    uint64_t v59 = v149;
    ((void (**)(char *, char *, uint64_t))v146)[2](v147, v58, v149);
    swift_beginAccess();
    uint64_t v60 = v48;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v156 = *(void *)v17;
    *(void *)os_log_type_t v17 = 0x8000000000000000;
    sub_24D2D6484((uint64_t)v60, v57, isUniquelyReferenced_nonNull_native);
    *(void *)os_log_type_t v17 = v156;
    swift_bridgeObjectRelease();
    unint64_t v62 = v55[1];
    uint64_t v138 = (uint64_t)(v55 + 1);
    uint64_t v137 = v62;
    ((void (*)(uint64_t, uint64_t))v62)(v57, v59);
    swift_endAccess();
    uint64_t v142 = v56;
    sub_24D2B6CE8(v56, (uint64_t)v153);
    uint64_t v63 = (objc_class *)type metadata accessor for FMNearbyInteractionManagerSubscription();
    int v64 = objc_allocWithZone(v63);
    uint64_t v65 = &v64[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
    *(void *)&v64[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber + 8] = 0;
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakInit();
    v64[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_wantsSession] = 0;
    os_log_t v66 = v60;
    swift_unknownObjectRetain();
    uint64_t v67 = v64;
    sub_24D39C890();
    ((void (**)(char *, uint64_t, uint64_t))v55)[4](&v67[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_identifier], v57, v59);
    id v68 = (char *)v139;
    *((void *)v65 + 1) = v145;
    id v69 = v66;
    swift_unknownObjectWeakAssign();
    sub_24D2B6CE8((uint64_t)v153, (uint64_t)&v67[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_findable]);
    swift_unknownObjectWeakAssign();

    v152.receiver = v67;
    v152.super_class = v63;
    id v70 = objc_msgSendSuper2(&v152, sel_init);
    swift_unknownObjectRelease();

    sub_24D2B6E58((uint64_t)v153);
    sub_24D2DC720(v70);
    unint64_t v71 = &v68[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_subscriptions];
    swift_beginAccess();
    id v148 = v70;
    MEMORY[0x253324C20]();
    if (*(void *)((*(void *)v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v71 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      sub_24D39CC40();
    sub_24D39CC60();
    sub_24D39CC30();
    swift_endAccess();
    if (v68[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground])
    {
      uint64_t v72 = v142;
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v73 = sub_24D39C950();
      sub_24D2B508C(v73, (uint64_t)qword_269869FD0);
      sub_24D2B6CE8(v72, (uint64_t)v153);
      uint64_t v74 = v68;
      uint64_t v75 = sub_24D39C930();
      os_log_type_t v76 = sub_24D39CDF0();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v77 = swift_slowAlloc();
        uint64_t v146 = (void (**)(void, void, void))v69;
        uint64_t v78 = v77;
        unsigned int v79 = (void *)swift_slowAlloc();
        uint64_t v142 = (uint64_t)v79;
        uint64_t v145 = swift_slowAlloc();
        uint64_t v156 = v145;
        *(_DWORD *)uint64_t v78 = 138412546;
        uint64_t v151 = (uint64_t)v74;
        uint64_t v80 = v74;
        sub_24D39D070();
        *unsigned int v79 = v68;

        *(_WORD *)(v78 + 12) = 2080;
        id v140 = (id)(v78 + 14);
        uint64_t v81 = v154;
        uint64_t v82 = v155;
        sub_24D2B8A34(v153, v154);
        uint64_t v83 = v147;
        (*(void (**)(uint64_t, uint64_t))(v82 + 16))(v81, v82);
        sub_24D2E8CF4((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
        uint64_t v84 = v149;
        uint64_t v85 = sub_24D39D490();
        unint64_t v87 = v86;
        char v88 = v137;
        ((void (*)(char *, uint64_t))v137)(v83, v84);
        uint64_t v151 = sub_24D2B8328(v85, v87, &v156);
        sub_24D39D070();
        swift_bridgeObjectRelease();
        sub_24D2B6E58((uint64_t)v153);
        _os_log_impl(&dword_24D2B1000, v75, v76, "ðŸ§­ FMR1NIMgr%@: setting up for '%s', but in background", (uint8_t *)v78, 0x16u);
        sub_24D2B7450(&qword_269861308);
        uint64_t v89 = v142;
        swift_arrayDestroy();
        MEMORY[0x253326010](v89, -1, -1);
        uint64_t v90 = v145;
        swift_arrayDestroy();
        MEMORY[0x253326010](v90, -1, -1);
        MEMORY[0x253326010](v78, -1, -1);
        id v91 = v146;
LABEL_31:

        uint64_t result = ((uint64_t (*)(char *, uint64_t))v88)(v143, v84);
        goto LABEL_52;
      }

      sub_24D2B6E58((uint64_t)v153);
    }
    else
    {
      id v92 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F140C0]), sel_init);
      uint64_t v93 = v142;
      if (v140)
      {
        id v94 = v140;
        objc_msgSend(v92, sel_setARSession_, v94);
        objc_msgSend(v94, sel_setDelegate_, v66);
      }
      objc_msgSend(v92, sel_setDelegate_, v66);
      uint64_t v95 = *v136;
      if (*v136)
      {
        uint64_t v96 = swift_retain();
        ((void (*)(uint64_t))v95)(v96);
        sub_24D2E44C8((uint64_t)v95);
      }
      char v97 = *(void **)&v69[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession];
      *(void *)&v69[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession] = v92;
      id v98 = v92;

      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v99 = sub_24D39C950();
      sub_24D2B508C(v99, (uint64_t)qword_269869FD0);
      sub_24D2B6CE8(v93, (uint64_t)v153);
      id v100 = v68;
      uint64_t v75 = sub_24D39C930();
      os_log_type_t v101 = sub_24D39CDF0();
      int v102 = v101;
      if (os_log_type_enabled(v75, v101))
      {
        uint64_t v103 = swift_slowAlloc();
        uint64_t v146 = (void (**)(void, void, void))v69;
        uint64_t v104 = v103;
        int v105 = (void *)swift_slowAlloc();
        id v140 = v105;
        uint64_t v142 = swift_slowAlloc();
        uint64_t v156 = v142;
        *(_DWORD *)uint64_t v104 = 138412546;
        LODWORD(v136) = v102;
        uint64_t v145 = (uint64_t)v98;
        uint64_t v151 = (uint64_t)v100;
        int v106 = v100;
        sub_24D39D070();
        *int v105 = v68;

        *(_WORD *)(v104 + 12) = 2080;
        uint64_t v107 = v154;
        uint64_t v108 = v155;
        sub_24D2B8A34(v153, v154);
        int v109 = v147;
        (*(void (**)(uint64_t, uint64_t))(v108 + 16))(v107, v108);
        sub_24D2E8CF4((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
        uint64_t v84 = v149;
        uint64_t v110 = sub_24D39D490();
        unint64_t v112 = v111;
        char v88 = v137;
        ((void (*)(char *, uint64_t))v137)(v109, v84);
        uint64_t v151 = sub_24D2B8328(v110, v112, &v156);
        sub_24D39D070();
        swift_bridgeObjectRelease();
        sub_24D2B6E58((uint64_t)v153);
        _os_log_impl(&dword_24D2B1000, v75, (os_log_type_t)v136, "ðŸ§­ FMR1NIMgr%@: setting up for '%s', created niSession", (uint8_t *)v104, 0x16u);
        sub_24D2B7450(&qword_269861308);
        id v113 = v140;
        swift_arrayDestroy();
        MEMORY[0x253326010](v113, -1, -1);
        uint64_t v114 = v142;
        swift_arrayDestroy();
        MEMORY[0x253326010](v114, -1, -1);
        MEMORY[0x253326010](v104, -1, -1);

        id v91 = (id)v145;
        goto LABEL_31;
      }

      sub_24D2B6E58((uint64_t)v153);
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v137)(v143, v149);
    goto LABEL_52;
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_24D39C950();
  sub_24D2B508C(v21, (uint64_t)qword_269869FD0);
  sub_24D2B6CE8((uint64_t)a1, (uint64_t)v153);
  os_log_t v22 = a2;
  uint64_t v23 = sub_24D39C930();
  os_log_type_t v24 = sub_24D39CDF0();
  int v25 = v24;
  BOOL v26 = os_log_type_enabled(v23, v24);
  os_log_t v139 = v22;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v142 = (uint64_t)a1;
    uint64_t v28 = v27;
    uint64_t v29 = (void (**)())swift_slowAlloc();
    unint64_t v136 = v29;
    uint64_t v138 = swift_slowAlloc();
    uint64_t v156 = v138;
    *(_DWORD *)uint64_t v28 = 138412802;
    uint64_t v137 = v23;
    uint64_t v141 = v7;
    uint64_t v151 = (uint64_t)v22;
    v134[2] = &v152;
    uint64_t v30 = v22;
    int v135 = v25;
    id v31 = v30;
    sub_24D39D070();
    *uint64_t v29 = (void (*)())v22;

    *(_WORD *)(v28 + 12) = 2080;
    v134[1] = v28 + 14;
    uint64_t v33 = v154;
    uint64_t v32 = v155;
    sub_24D2B8A34(v153, v154);
    unint64_t v34 = v147;
    (*(void (**)(uint64_t, uint64_t))(v32 + 16))(v33, v32);
    sub_24D2E8CF4((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
    uint64_t v35 = v149;
    uint64_t v36 = sub_24D39D490();
    unint64_t v38 = v37;
    ((void (*)(char *, uint64_t))v146[1])(v34, v35);
    uint64_t v151 = sub_24D2B8328(v36, v38, &v156);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    sub_24D2B6E58((uint64_t)v153);
    *(_WORD *)(v28 + 22) = 2080;
    if (*((unsigned char *)&v31->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground)) {
      uint64_t v39 = 0x6B636162206E6928;
    }
    else {
      uint64_t v39 = 0;
    }
    if (*((unsigned char *)&v31->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_applicationIsInBackground)) {
      unint64_t v40 = 0xEF29646E756F7267;
    }
    else {
      unint64_t v40 = 0xE000000000000000;
    }
    uint64_t v151 = sub_24D2B8328(v39, v40, &v156);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    os_log_t v22 = v137;
    _os_log_impl(&dword_24D2B1000, v137, (os_log_type_t)v135, "ðŸ§­ FMR1NIMgr%@: setting up for '%s' but item already known %s", (uint8_t *)v28, 0x20u);
    sub_24D2B7450(&qword_269861308);
    uint64_t v41 = v136;
    swift_arrayDestroy();
    MEMORY[0x253326010](v41, -1, -1);
    uint64_t v42 = v138;
    swift_arrayDestroy();
    MEMORY[0x253326010](v42, -1, -1);
    uint64_t v43 = v28;
    a1 = (void *)v142;
    MEMORY[0x253326010](v43, -1, -1);
  }
  else
  {

    sub_24D2B6E58((uint64_t)v153);
  }

  id v116 = v140;
  uint64_t v117 = *(void *)v17;
  if (*(void *)(*(void *)v17 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v118 = sub_24D3839F0((uint64_t)v14);
    if (v119)
    {
      int v120 = *(char **)(*(void *)(v117 + 56) + 8 * v118);
      uint64_t v121 = v120;
    }
    else
    {
      int v120 = 0;
    }
    swift_bridgeObjectRelease();
    if (v116) {
      goto LABEL_43;
    }
  }
  else
  {
    int v120 = 0;
    if (v140)
    {
LABEL_43:
      if (v120)
      {
        objc_msgSend(*(id *)&v120[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession], sel_setARSession_, v116);
        int v122 = v120;
      }
      else
      {
        id v123 = v116;
        int v122 = 0;
      }
      objc_msgSend(v116, sel_setDelegate_, v122);

      goto LABEL_47;
    }
  }
  int v122 = v120;
LABEL_47:
  sub_24D2B6CE8((uint64_t)a1, (uint64_t)v153);
  uint64_t v124 = (objc_class *)type metadata accessor for FMNearbyInteractionManagerSubscription();
  id v125 = objc_allocWithZone(v124);
  uint64_t v126 = &v125[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
  *(void *)&v125[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v125[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_wantsSession] = 0;
  swift_unknownObjectRetain();
  uint64_t v127 = v125;
  id v128 = v122;
  __int16 v129 = v147;
  sub_24D39C890();
  ((void (**)(char *, char *, uint64_t))v146)[4](&v127[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_identifier], v129, v149);
  *((void *)v126 + 1) = v145;
  swift_unknownObjectWeakAssign();
  sub_24D2B6CE8((uint64_t)v153, (uint64_t)&v127[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_findable]);
  swift_unknownObjectWeakAssign();

  v150.receiver = v127;
  v150.super_class = v124;
  id v130 = objc_msgSendSuper2(&v150, sel_init);
  swift_unknownObjectRelease();

  sub_24D2B6E58((uint64_t)v153);
  if (v120)
  {
    id v131 = v128;
    sub_24D2DC720(v130);
  }
  uint64_t v132 = (Class *)((char *)&v139->isa + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_subscriptions);
  swift_beginAccess();
  id v148 = v130;
  MEMORY[0x253324C20]();
  uint64_t v133 = v143;
  if (*(void *)((*v132 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v132 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_24D39CC40();
  }
  sub_24D39CC60();
  sub_24D39CC30();
  swift_endAccess();

  uint64_t result = ((uint64_t (*)(char *, uint64_t))v146[1])(v133, v149);
LABEL_52:
  void *v144 = v148;
  return result;
}

void sub_24D2E3334(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x253326120](v1);
  if (v2)
  {
    os_log_type_t v3 = (char *)v2;
    uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_itemLocalizersCount;
    if (*(uint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_itemLocalizersCount) < 1)
    {
LABEL_18:
      uint64_t v19 = *(void *)&v3[v4];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (!v20)
      {
        *(void *)&v3[v4] = v21;

        return;
      }
      __break(1u);
LABEL_22:
      __break(1u);
      return;
    }
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_24D39C950();
    sub_24D2B508C(v5, (uint64_t)qword_269869FD0);
    uint64_t v6 = v3;
    uint64_t v7 = sub_24D39C930();
    os_log_type_t v8 = sub_24D39CDF0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412546;
      uint64_t v11 = v6;
      sub_24D39D070();
      *uint64_t v10 = v3;

      *(_WORD *)(v9 + 12) = 2048;
      sub_24D39D070();

      _os_log_impl(&dword_24D2B1000, v7, v8, "ðŸ§­ FMR1NIMgr%@: previous item localizers still exist (%ld)", (uint8_t *)v9, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v10, -1, -1);
      MEMORY[0x253326010](v9, -1, -1);
    }
    else
    {

      uint64_t v7 = v6;
    }

    swift_beginAccess();
    uint64_t v12 = swift_bridgeObjectRetain();
    unint64_t v13 = sub_24D2E3638(v12);
    unint64_t v14 = v13;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_24D39D2D0();
      if (v15) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_10:
        if (v15 < 1) {
          goto LABEL_22;
        }
        for (uint64_t i = 0; i != v15; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0) {
            id v17 = (id)MEMORY[0x253325220](i, v14);
          }
          else {
            id v17 = *(id *)(v14 + 8 * i + 32);
          }
          uint64_t v18 = v17;
          sub_24D2DBBB8();
        }
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
}

uint64_t sub_24D2E3638(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v9 = v8 | (v2 << 6);
LABEL_22:
    unint64_t v13 = *(char **)(*(void *)(v1 + 56) + 8 * v9);
    if (*(void *)&v13[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niSession])
    {
      unint64_t v14 = v13;
      sub_24D39D240();
      sub_24D39D270();
      sub_24D39D280();
      uint64_t result = sub_24D39D250();
    }
  }
  int64_t v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v7) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v10);
  ++v2;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v2 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v2);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v2 = v10 + 2;
  if (v10 + 2 >= v7) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v2);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v2 = v10 + 3;
  if (v10 + 3 >= v7) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v2);
  if (v11)
  {
LABEL_21:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
    goto LABEL_22;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_24:
    swift_release();
    return v15;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_24;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_24D2E37EC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  int64_t v2 = (char *)MEMORY[0x253326120](v1);
  if (v2)
  {
    uint64_t v3 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_itemLocalizersCount];
    BOOL v4 = __OFSUB__(v3, 1);
    uint64_t v5 = v3 - 1;
    if (v4)
    {
      __break(1u);
    }
    else
    {
      *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_itemLocalizersCount] = v5;
    }
  }
}

uint64_t sub_24D2E3854(char *a1, void *a2)
{
  uint64_t v5 = sub_24D39C8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B6CE8((uint64_t)a2 + OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_findable, (uint64_t)v108);
  uint64_t v9 = v109;
  int64_t v10 = v110;
  sub_24D2B8A34(v108, v109);
  (*((void (**)(uint64_t, uint8_t *))v10 + 2))(v9, v10);
  sub_24D2B6E58((uint64_t)v108);
  unint64_t v11 = &a1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_contexts];
  swift_beginAccess();
  uint64_t v12 = *(void *)v11;
  if (*(void *)(*(void *)v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_24D3839F0((uint64_t)v8);
    if (v14)
    {
      int64_t v10 = (uint8_t *)*(id *)(*(void *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      id v2 = a2;
      unint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v16 = 0;
      unint64_t v17 = sub_24D2E8808(v15);
      swift_bridgeObjectRelease();

      if (v17 >> 62) {
        uint64_t v18 = sub_24D39D2D0();
      }
      else {
        uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v18)
      {
        uint64_t v106 = 0;
        if (qword_2698602B0 != -1) {
          goto LABEL_37;
        }
        while (1)
        {
          uint64_t v19 = sub_24D39C950();
          sub_24D2B508C(v19, (uint64_t)qword_269869FD0);
          BOOL v20 = v10;
          uint64_t v21 = a1;
          os_log_t v22 = v20;
          os_log_t v23 = v21;
          os_log_type_t v24 = sub_24D39C930();
          os_log_type_t v25 = sub_24D39CDF0();
          int v26 = v25;
          if (os_log_type_enabled(v24, v25))
          {
            uint64_t v27 = swift_slowAlloc();
            id v104 = v2;
            uint64_t v28 = v27;
            uint64_t v29 = (void *)swift_slowAlloc();
            uint64_t v102 = swift_slowAlloc();
            os_log_t v107 = (os_log_t)v102;
            *(_DWORD *)uint64_t v28 = 138412546;
            LODWORD(v101) = v26;
            os_log_t v100 = v24;
            v108[0] = v23;
            uint64_t v103 = (uint8_t *)a1;
            uint64_t v30 = v23;
            uint64_t v105 = v5;
            id v31 = v30;
            sub_24D39D070();
            *uint64_t v29 = v23;
            uint64_t v32 = v29;

            *(_WORD *)(v28 + 12) = 2080;
            int64_t v10 = (uint8_t *)v108;
            sub_24D2B6CE8((uint64_t)&v22[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable], (uint64_t)v108);
            uint64_t v33 = v109;
            unint64_t v34 = v110;
            sub_24D2B8A34(v108, v109);
            uint64_t v35 = (uint64_t (*)(uint64_t, uint8_t *))*((void *)v34 + 1);
            uint64_t v36 = v34;
            a1 = (char *)v103;
            uint64_t v37 = v35(v33, v36);
            unint64_t v39 = v38;
            sub_24D2B6E58((uint64_t)v108);
            v108[0] = sub_24D2B8328(v37, v39, (uint64_t *)&v107);
            uint64_t v5 = v105;
            sub_24D39D070();

            swift_bridgeObjectRelease();
            os_log_t v23 = v100;
            _os_log_impl(&dword_24D2B1000, v100, (os_log_type_t)v101, "ðŸ§­ FMR1NIMgr%@: unsubscribing, did not tear down, subscriptions still exist '%s'", (uint8_t *)v28, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v32, -1, -1);
            uint64_t v40 = v102;
            swift_arrayDestroy();
            MEMORY[0x253326010](v40, -1, -1);
            uint64_t v41 = v28;
            id v2 = v104;
            MEMORY[0x253326010](v41, -1, -1);
          }
          else
          {
          }
          sub_24D2DCBE4(v2);
LABEL_29:

          uint64_t v93 = *(void (**)(char *, uint64_t))(v6 + 8);
          v6 += 8;
          v93(v8, v5);
          id v94 = (uint64_t *)&a1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_subscriptions];
          swift_beginAccess();
          id v95 = v2;
          uint64_t v5 = sub_24D2E89C0(v94, (uint64_t)v95);

          if ((unint64_t)*v94 >> 62)
          {
            swift_bridgeObjectRetain();
            a1 = (char *)sub_24D39D2D0();
            swift_bridgeObjectRelease();
            if ((uint64_t)a1 >= v5) {
              goto LABEL_31;
            }
          }
          else
          {
            a1 = *(char **)((*v94 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if ((uint64_t)a1 >= v5) {
              goto LABEL_31;
            }
          }
          __break(1u);
LABEL_37:
          swift_once();
        }
      }
LABEL_13:
      BOOL v45 = (v10[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity] | 4) == 5;
      uint64_t v103 = v10;
      if (v45)
      {
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v46 = sub_24D39C950();
        sub_24D2B508C(v46, (uint64_t)qword_269869FD0);
        id v47 = v10;
        unint64_t v48 = a1;
        int64_t v10 = v47;
        uint64_t v49 = v48;
        uint64_t v50 = sub_24D39C930();
        os_log_type_t v51 = sub_24D39CDF0();
        LODWORD(v102) = v51;
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v52 = swift_slowAlloc();
          uint64_t v105 = v5;
          uint64_t v53 = (uint8_t *)v52;
          os_log_type_t v101 = (void *)swift_slowAlloc();
          os_log_t v100 = (os_log_t)swift_slowAlloc();
          os_log_t v107 = v100;
          char v97 = v53;
          *(_DWORD *)uint64_t v53 = 138412546;
          os_log_t v99 = v50;
          v108[0] = v49;
          id v104 = v2;
          uint64_t v54 = v49;
          uint64_t v106 = v16;
          uint64_t v55 = v10;
          uint64_t v56 = v54;
          sub_24D39D070();
          *os_log_type_t v101 = v49;

          uint64_t v57 = v97;
          *((_WORD *)v97 + 6) = 2080;
          id v98 = v57 + 14;
          sub_24D2B6CE8((uint64_t)&v55[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable], (uint64_t)v108);
          uint64_t v58 = v109;
          uint64_t v59 = v110;
          sub_24D2B8A34(v108, v109);
          uint64_t v60 = (uint64_t (*)(uint64_t, uint8_t *))*((void *)v59 + 1);
          uint64_t v61 = v59;
          int64_t v10 = v55;
          uint64_t v62 = v60(v58, v61);
          unint64_t v64 = v63;
          sub_24D2B6E58((uint64_t)v108);
          v108[0] = sub_24D2B8328(v62, v64, (uint64_t *)&v107);
          id v2 = v104;
          sub_24D39D070();

          swift_bridgeObjectRelease();
          os_log_t v65 = v99;
          os_log_t v66 = v57;
          _os_log_impl(&dword_24D2B1000, v99, (os_log_type_t)v102, "ðŸ§­ FMR1NIMgr%@: tore down '%s' (stopping first)", v57, 0x16u);
          sub_24D2B7450(&qword_269861308);
          uint64_t v67 = v101;
          swift_arrayDestroy();
          MEMORY[0x253326010](v67, -1, -1);
          os_log_t v68 = v100;
          swift_arrayDestroy();
          MEMORY[0x253326010](v68, -1, -1);
          uint64_t v5 = v105;
          MEMORY[0x253326010](v66, -1, -1);
        }
        else
        {
        }
        sub_24D2DBBB8();
      }
      else
      {
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v69 = sub_24D39C950();
        sub_24D2B508C(v69, (uint64_t)qword_269869FD0);
        id v70 = v10;
        unint64_t v71 = a1;
        int64_t v10 = v70;
        uint64_t v72 = v71;
        uint64_t v73 = sub_24D39C930();
        os_log_type_t v74 = sub_24D39CDF0();
        LODWORD(v102) = v74;
        if (os_log_type_enabled(v73, v74))
        {
          uint64_t v75 = swift_slowAlloc();
          id v98 = v10;
          uint64_t v76 = v75;
          os_log_type_t v101 = (void *)swift_slowAlloc();
          uint64_t v77 = swift_slowAlloc();
          os_log_t v100 = v77;
          *(_DWORD *)uint64_t v76 = 138412546;
          os_log_t v99 = v73;
          uint64_t v106 = v16;
          os_log_t v107 = v77;
          v108[0] = v72;
          id v104 = v2;
          uint64_t v78 = v72;
          uint64_t v105 = v5;
          unsigned int v79 = v78;
          sub_24D39D070();
          *os_log_type_t v101 = v72;

          uint64_t v80 = (uint8_t *)v76;
          *(_WORD *)(v76 + 12) = 2080;
          char v97 = (uint8_t *)(v76 + 14);
          uint64_t v81 = v98;
          sub_24D2B6CE8((uint64_t)&v98[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable], (uint64_t)v108);
          uint64_t v82 = v109;
          uint64_t v83 = v110;
          sub_24D2B8A34(v108, v109);
          uint64_t v84 = (uint64_t (*)(uint64_t, uint8_t *))*((void *)v83 + 1);
          uint64_t v85 = v83;
          id v2 = v104;
          uint64_t v86 = v84(v82, v85);
          unint64_t v88 = v87;
          sub_24D2B6E58((uint64_t)v108);
          v108[0] = sub_24D2B8328(v86, v88, (uint64_t *)&v107);
          uint64_t v5 = v105;
          sub_24D39D070();

          swift_bridgeObjectRelease();
          os_log_t v89 = v99;
          int64_t v10 = v80;
          _os_log_impl(&dword_24D2B1000, v99, (os_log_type_t)v102, "ðŸ§­ FMR1NIMgr%@: unsubscribing, tore down '%s'", v80, 0x16u);
          sub_24D2B7450(&qword_269861308);
          uint64_t v90 = v101;
          swift_arrayDestroy();
          MEMORY[0x253326010](v90, -1, -1);
          os_log_t v91 = v100;
          swift_arrayDestroy();
          MEMORY[0x253326010](v91, -1, -1);
          MEMORY[0x253326010](v10, -1, -1);
        }
        else
        {
        }
      }
      id v92 = v103;
      sub_24D2DBBB8();
      swift_beginAccess();
      os_log_t v22 = (uint8_t *)sub_24D2D59B0((uint64_t)v8);
      swift_endAccess();

      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v42 = *(void (**)(char *, uint64_t))(v6 + 8);
  v6 += 8;
  v42(v8, v5);
  uint64_t v43 = (uint64_t *)&a1[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_subscriptions];
  swift_beginAccess();
  id v44 = a2;
  uint64_t v5 = sub_24D2E89C0(v43, (uint64_t)v44);

  uint64_t v16 = *v43;
  if ((unint64_t)*v43 >> 62)
  {
    swift_bridgeObjectRetain();
    a1 = (char *)sub_24D39D2D0();
    swift_bridgeObjectRelease();
    if ((uint64_t)a1 < v5) {
      goto LABEL_12;
    }
  }
  else
  {
    a1 = *(char **)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)a1 < v5)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
  }
LABEL_31:
  sub_24D2F5450(v5, (uint64_t)a1);
  return swift_endAccess();
}

id sub_24D2E4404()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMNearbyInteractionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMNearbyInteractionManager()
{
  return self;
}

uint64_t sub_24D2E44C8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24D2E44D8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_24D2E4660((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    unint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_24D2E4660((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x253326010](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_24D2E4660(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v37 = a1;
  uint64_t v9 = sub_24D39C900();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v43 = a4;
  uint64_t v40 = v16;
  if (v16)
  {
    uint64_t v34 = a2;
    uint64_t v35 = v5;
    uint64_t v42 = a4 + 56;
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v17 = v10 + 16;
    BOOL v45 = v18;
    uint64_t v39 = a3 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v44 = *(void *)(v17 + 56);
    uint64_t v19 = (void (**)(char *, uint64_t))(v17 - 8);
    uint64_t v33 = a3;
    swift_bridgeObjectRetain();
    uint64_t v36 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = a4;
    while (1)
    {
      uint64_t v41 = v20;
      v45(v15, v39 + v44 * v20, v9);
      sub_24D2E8CF4((unint64_t *)&unk_269862F20, MEMORY[0x263F14058]);
      uint64_t v23 = sub_24D39CAA0();
      uint64_t v24 = -1 << *(unsigned char *)(v21 + 32);
      unint64_t v25 = v23 & ~v24;
      if ((*(void *)(v42 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
      {
        uint64_t v38 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v26 = ~v24;
        while (1)
        {
          v45(v13, *(void *)(v43 + 48) + v25 * v44, v9);
          sub_24D2E8CF4(&qword_269861360, MEMORY[0x263F14058]);
          char v27 = sub_24D39CAB0();
          os_log_t v22 = *v19;
          (*v19)(v13, v9);
          if (v27) {
            break;
          }
          unint64_t v25 = (v25 + 1) & v26;
          if (((*(void *)(v42 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          {
            uint64_t v21 = v43;
            goto LABEL_4;
          }
        }
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v15, v9);
        uint64_t v29 = (v25 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v30 = *(unint64_t *)((char *)v37 + v29);
        *(unint64_t *)((char *)v37 + v29) = v30 | (1 << v25);
        if ((v30 & (1 << v25)) != 0)
        {
          uint64_t v21 = v43;
        }
        else
        {
          uint64_t v21 = v43;
          if (__OFADD__(v36, 1))
          {
            __break(1u);
            return result;
          }
          ++v36;
        }
      }
      else
      {
        os_log_t v22 = *v19;
LABEL_4:
        v22(v15, v9);
      }
      uint64_t v20 = v41 + 1;
      if (v41 + 1 == v40)
      {
        swift_bridgeObjectRelease();
        a2 = v34;
        uint64_t v31 = v36;
        goto LABEL_17;
      }
    }
  }
  uint64_t v31 = 0;
LABEL_17:
  uint64_t v32 = v43;
  swift_retain();
  return sub_24D38659C(v37, a2, v31, v32);
}

uint64_t sub_24D2E49E0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_24D39D2D0();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_identifier;
  while (1)
  {
    id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x253325220](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    uint64_t v7 = v6;
    char v8 = sub_24D39C870();

    if (v8) {
      return v5;
    }
    uint64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4) {
      return 0;
    }
  }
}

uint64_t sub_24D2E4AF4(uint64_t a1)
{
  uint64_t v2 = sub_24D2B7450(&qword_269861328);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_24D2E4B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  sub_24D2BC100(0, &qword_269861338);
  id v6 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  v11[0] = 0;
  id v7 = objc_msgSend(v3, sel_initWithDiscoveryToken_regions_preferredUpdateRate_error_, a1, v6, a3, v11);

  if (v7)
  {
    id v8 = v11[0];
  }
  else
  {
    id v9 = v11[0];
    sub_24D39C710();

    swift_willThrow();
  }
  return v7;
}

id sub_24D2E4C58(__int16 *a1, void *a2, uint64_t a3)
{
  if (*a1 < 0)
  {
    uint64_t v20 = a2[3];
    uint64_t v21 = a2[4];
    sub_24D2B8A34(a2, v20);
    os_log_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F14090]), sel_initWithRole_discoveryToken_preferredUpdateRate_, 0, v22, a3);

    id v23 = objc_msgSend(objc_msgSend(self, sel_deviceCapabilities), sel_supportsCameraAssistance);
    swift_unknownObjectRelease();
    objc_msgSend(v19, sel_setCameraAssistanceEnabled_, v23);
  }
  else
  {
    sub_24D2B7450(&qword_269861330);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_24D3A0EF0;
    id v6 = objc_allocWithZone(MEMORY[0x263F140B8]);
    id v7 = (void *)sub_24D39CAC0();
    id v8 = objc_msgSend(v6, sel_initWithName_devicePresencePreset_, v7, 1);

    *(void *)(v5 + 32) = v8;
    id v9 = objc_allocWithZone(MEMORY[0x263F140B8]);
    uint64_t v10 = (void *)sub_24D39CAC0();
    id v11 = objc_msgSend(v9, sel_initWithName_devicePresencePreset_, v10, 4);

    *(void *)(v5 + 40) = v11;
    id v12 = objc_allocWithZone(MEMORY[0x263F140B8]);
    unint64_t v13 = (void *)sub_24D39CAC0();
    id v14 = objc_msgSend(v12, sel_initWithName_devicePresencePreset_, v13, 5);

    *(void *)(v5 + 48) = v14;
    sub_24D39CC30();
    uint64_t v15 = a2[3];
    uint64_t v16 = a2[4];
    sub_24D2B8A34(a2, v15);
    uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    id v18 = objc_allocWithZone(MEMORY[0x263F14080]);
    id v19 = sub_24D2E4B54((uint64_t)v17, v5, a3);
  }
  return v19;
}

uint64_t sub_24D2E5044(unint64_t a1)
{
  sub_24D2B6CE8(v1 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v121);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450(&qword_269861320);
  uint64_t v3 = swift_dynamicCast();
  if ((v3 & 1) == 0)
  {
    uint64_t v125 = 0;
    memset(v124, 0, sizeof(v124));
  }
  MEMORY[0x270FA5388](v3);
  v111[2] = v124;
  uint64_t v4 = sub_24D37AE64(sub_24D2E8D98, (uint64_t)v111, a1);
  if (v4)
  {
    unint64_t v5 = (unint64_t)v4;
    id v6 = objc_msgSend(v4, sel_motionState);
    uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState;
    int v8 = v119[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState];
    if (v6 == (id)2)
    {
      if (v8 == 4) {
        goto LABEL_41;
      }
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_24D39C950();
      sub_24D2B508C(v9, (uint64_t)qword_269869FD0);
      uint64_t v10 = sub_24D39C930();
      os_log_type_t v11 = sub_24D39CDF0();
      if (os_log_type_enabled(v10, v11))
      {
        id v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v12 = 0;
        _os_log_impl(&dword_24D2B1000, v10, v11, "ðŸ§­ FMR1NIContxt: Findable motion state changed to moving", v12, 2u);
        MEMORY[0x253326010](v12, -1, -1);
      }

      unint64_t v13 = v119;
      v119[v7] = 4;
      id v14 = (uint64_t *)&v13[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
      swift_beginAccess();
      uint64_t v15 = *v14;
      if ((unint64_t)*v14 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t result = sub_24D39D2D0();
        uint64_t v16 = result;
        if (!result) {
          goto LABEL_40;
        }
        goto LABEL_12;
      }
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v16)
      {
LABEL_12:
        id v118 = (id)v5;
        if (v16 >= 1)
        {
          for (uint64_t i = 0; i != v16; ++i)
          {
            if ((v15 & 0xC000000000000001) != 0) {
              id v19 = (char *)MEMORY[0x253325220](i, v15);
            }
            else {
              id v19 = (char *)*(id *)(v15 + 8 * i + 32);
            }
            uint64_t v20 = v19;
            uint64_t v21 = &v19[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
            if (MEMORY[0x253326120](&v19[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
            {
              uint64_t v22 = *((void *)v21 + 1);
              uint64_t ObjectType = swift_getObjectType();
              uint64_t v122 = type metadata accessor for FMNearbyInteractionLocalizerContext();
              id v123 = &off_26FF86B30;
              v121[0] = (uint64_t)v119;
              uint64_t v24 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v22 + 48);
              unint64_t v25 = v119;
              v24(4, v121, ObjectType, v22);
              swift_unknownObjectRelease();
              sub_24D2B6E58((uint64_t)v121);
            }
          }
LABEL_39:
          unint64_t v5 = (unint64_t)v118;
          goto LABEL_40;
        }
        __break(1u);
LABEL_72:
        __break(1u);
        return result;
      }
LABEL_40:
      swift_bridgeObjectRelease_n();
LABEL_41:
      if (qword_2698602B0 != -1) {
        goto LABEL_63;
      }
      while (1)
      {
        uint64_t v49 = sub_24D39C950();
        sub_24D2B508C(v49, (uint64_t)qword_269869FD0);
        id v50 = (id)v5;
        os_log_type_t v51 = sub_24D39C930();
        os_log_type_t v52 = sub_24D39CDD0();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = (uint8_t *)swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          v121[0] = v54;
          *(_DWORD *)uint64_t v53 = 136315138;
          [v50 (SEL)0x1F7EE274CLL];
          uint64_t v55 = sub_24D39CD00();
          id v120 = (id)sub_24D2B8328(v55, v56, v121);
          sub_24D39D070();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24D2B1000, v51, v52, "FMNearbyInteractionContext: btUpdate: RSSI update: %s", v53, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x253326010](v54, -1, -1);
          MEMORY[0x253326010](v53, -1, -1);
        }
        else
        {
        }
        id v57 = v50;
        uint64_t v58 = v119;
        id v59 = v57;
        uint64_t v60 = v58;
        id v61 = v59;
        uint64_t v62 = sub_24D39C930();
        os_log_type_t v63 = sub_24D39CDD0();
        int v64 = v63;
        BOOL v65 = os_log_type_enabled(v62, v63);
        id v113 = v60;
        id v118 = v61;
        if (v65)
        {
          uint64_t v66 = swift_slowAlloc();
          uint64_t v67 = (void *)swift_slowAlloc();
          uint64_t v117 = v67;
          char v119 = (unsigned char *)swift_slowAlloc();
          v121[0] = (uint64_t)v119;
          *(_DWORD *)uint64_t v66 = 138413826;
          id v120 = v60;
          LODWORD(v116) = v64;
          os_log_t v68 = v60;
          sub_24D39D070();
          *uint64_t v67 = v60;

          *(_WORD *)(v66 + 12) = 2080;
          id v69 = objc_msgSend(v61, sel_discoveryToken);
          id v70 = objc_msgSend(v69, sel_description);
          uint64_t v71 = sub_24D39CAF0();
          unint64_t v73 = v72;

          id v120 = (id)sub_24D2B8328(v71, v73, v121);
          sub_24D39D070();

          swift_bridgeObjectRelease();
          *(_WORD *)(v66 + 22) = 2080;
          uint64_t v74 = sub_24D39CE20();
          LODWORD(v120) = v74;
          BYTE4(v120) = BYTE4(v74) & 1;
          sub_24D2B7450((uint64_t *)&unk_269861380);
          uint64_t v75 = sub_24D39CB20();
          id v120 = (id)sub_24D2B8328(v75, v76, v121);
          sub_24D39D070();

          swift_bridgeObjectRelease();
          *(_WORD *)(v66 + 32) = 2080;
          uint64_t v77 = sub_24D39CE00();
          LODWORD(v120) = v77;
          BYTE4(v120) = BYTE4(v77) & 1;
          uint64_t v78 = sub_24D39CB20();
          id v120 = (id)sub_24D2B8328(v78, v79, v121);
          sub_24D39D070();

          swift_bridgeObjectRelease();
          *(_WORD *)(v66 + 42) = 2080;
          uint64_t v80 = sub_24D39CE10();
          LODWORD(v120) = v80;
          BYTE4(v120) = BYTE4(v80) & 1;
          uint64_t v81 = sub_24D39CB20();
          id v120 = (id)sub_24D2B8328(v81, v82, v121);
          sub_24D39D070();

          swift_bridgeObjectRelease();
          *(_WORD *)(v66 + 52) = 2080;
          id v120 = objc_msgSend(v118, sel_motionState);
          type metadata accessor for NIMotionActivityState(0);
          uint64_t v83 = sub_24D39CB20();
          id v120 = (id)sub_24D2B8328(v83, v84, v121);
          id v85 = v118;
          sub_24D39D070();

          swift_bridgeObjectRelease();
          *(_WORD *)(v66 + 62) = 2080;
          uint64_t v60 = v113;
          objc_msgSend(v85, sel_boundedRegionRange);
          uint64_t v86 = sub_24D39CD00();
          id v120 = (id)sub_24D2B8328(v86, v87, v121);
          sub_24D39D070();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24D2B1000, v62, (os_log_type_t)v116, "ðŸ§­ FMR1NIContxt%@: nearby object updated!!  %s, distance: %s Angle: %s Angle Accuracy: %s Motion State: %s Prox Measurement: %s", (uint8_t *)v66, 0x48u);
          sub_24D2B7450(&qword_269861308);
          unint64_t v88 = v117;
          swift_arrayDestroy();
          MEMORY[0x253326010](v88, -1, -1);
          os_log_t v89 = v119;
          swift_arrayDestroy();
          MEMORY[0x253326010](v89, -1, -1);
          MEMORY[0x253326010](v66, -1, -1);
        }
        else
        {
        }
        uint64_t v90 = (id *)&v60[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
        swift_beginAccess();
        unint64_t v5 = (unint64_t)*v90;
        if ((unint64_t)*v90 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v91 = sub_24D39D2D0();
          if (!v91)
          {
LABEL_65:

            swift_bridgeObjectRelease_n();
            return sub_24D2E4AF4((uint64_t)v124);
          }
        }
        else
        {
          uint64_t v91 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v91) {
            goto LABEL_65;
          }
        }
        unint64_t v114 = v5 & 0xC000000000000001;
        uint64_t v92 = 4;
        uint64_t v112 = v91;
        while (1)
        {
          id v93 = v118;
          id v94 = v114 ? (char *)MEMORY[0x253325220](v92 - 4, v5) : (char *)*(id *)(v5 + 8 * v92);
          id v95 = v94;
          uint64_t v96 = v92 - 3;
          if (__OFADD__(v92 - 4, 1)) {
            break;
          }
          char v119 = (unsigned char *)v92;
          id v97 = objc_msgSend(v93, sel_verticalDirectionEstimate);
          id v98 = &v95[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
          if (MEMORY[0x253326120](&v95[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
          {
            uint64_t v99 = 5;
            if ((unint64_t)v97 < 5) {
              uint64_t v99 = (uint64_t)v97;
            }
            uint64_t v117 = (void *)v99;
            uint64_t v100 = *((void *)v98 + 1);
            uint64_t v116 = swift_getObjectType();
            unint64_t v101 = v5;
            unint64_t v102 = sub_24D39CE20();
            unint64_t v103 = sub_24D39CE00();
            unint64_t v104 = sub_24D39CE10();
            id v115 = objc_msgSend(v93, sel_motionState);
            objc_msgSend(v93, sel_boundedRegionRange);
            double v106 = v105;
            uint64_t v122 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            id v123 = &off_26FF86B30;
            v121[0] = (uint64_t)v113;
            os_log_t v107 = *(void (**)(uint64_t, unint64_t, unint64_t, void *, id, uint64_t *, uint64_t, uint64_t, double))(v100 + 16);
            uint64_t v108 = v113;
            uint64_t v109 = HIDWORD(v102) & 1;
            uint64_t v110 = v102;
            unint64_t v5 = v101;
            uint64_t v91 = v112;
            v107(v110 | (v109 << 32), v103 | ((HIDWORD(v103) & 1) << 32), v104 | ((HIDWORD(v104) & 1) << 32), v117, v115, v121, v116, v100, v106);
            swift_unknownObjectRelease();
            sub_24D2B6E58((uint64_t)v121);
          }

          if (v96 == v91) {
            goto LABEL_65;
          }
          uint64_t v92 = (uint64_t)(v119 + 1);
        }
        __break(1u);
LABEL_63:
        swift_once();
      }
    }
    if (v8 != 4) {
      goto LABEL_41;
    }
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_24D39C950();
    sub_24D2B508C(v33, (uint64_t)qword_269869FD0);
    uint64_t v34 = sub_24D39C930();
    os_log_type_t v35 = sub_24D39CDF0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_24D2B1000, v34, v35, "ðŸ§­ FMR1NIContxt: Findable motion state changed to stopped moving", v36, 2u);
      MEMORY[0x253326010](v36, -1, -1);
    }

    uint64_t v37 = v119;
    v119[v7] = 5;
    uint64_t v38 = (uint64_t *)&v37[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
    swift_beginAccess();
    uint64_t v39 = *v38;
    if ((unint64_t)*v38 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_24D39D2D0();
      uint64_t v40 = result;
      if (!result) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (!v40) {
        goto LABEL_40;
      }
    }
    id v118 = (id)v5;
    if (v40 >= 1)
    {
      for (uint64_t j = 0; j != v40; ++j)
      {
        if ((v39 & 0xC000000000000001) != 0) {
          uint64_t v42 = (char *)MEMORY[0x253325220](j, v39);
        }
        else {
          uint64_t v42 = (char *)*(id *)(v39 + 8 * j + 32);
        }
        uint64_t v43 = v42;
        uint64_t v44 = &v42[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
        if (MEMORY[0x253326120](&v42[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
        {
          uint64_t v45 = *((void *)v44 + 1);
          uint64_t v46 = swift_getObjectType();
          uint64_t v122 = type metadata accessor for FMNearbyInteractionLocalizerContext();
          id v123 = &off_26FF86B30;
          v121[0] = (uint64_t)v119;
          id v47 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v45 + 48);
          unint64_t v48 = v119;
          v47(5, v121, v46, v45);
          swift_unknownObjectRelease();
          sub_24D2B6E58((uint64_t)v121);
        }
      }
      goto LABEL_39;
    }
    goto LABEL_72;
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_24D39C950();
  sub_24D2B508C(v26, (uint64_t)qword_269869FD0);
  char v27 = v119;
  uint64_t v28 = sub_24D39C930();
  os_log_type_t v29 = sub_24D39CDF0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 138412290;
    v121[0] = (uint64_t)v27;
    uint64_t v32 = v27;
    sub_24D39D070();
    void *v31 = v27;

    _os_log_impl(&dword_24D2B1000, v28, v29, "ðŸ§­ FMR1NIContxt%@: nearby objects updated!! However, nearby object discover token don't match", v30, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v31, -1, -1);
    MEMORY[0x253326010](v30, -1, -1);
  }
  else
  {
  }
  return sub_24D2E4AF4((uint64_t)v124);
}

uint64_t sub_24D2E5F60(void *a1, void *a2, void *a3)
{
  sub_24D2B6CE8((uint64_t)v3 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v89);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450(&qword_269861320);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v79 = 0;
    memset(v78, 0, sizeof(v78));
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_24D39C950();
  sub_24D2B508C(v7, (uint64_t)qword_269869FD0);
  id v8 = a2;
  id v9 = v3;
  id v10 = v8;
  os_log_type_t v11 = (char *)v9;
  id v12 = sub_24D39C930();
  os_log_type_t v13 = sub_24D39CDF0();
  unint64_t v73 = a2;
  uint64_t v74 = v11;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v75 = a3;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    v89[0] = v67;
    *(_DWORD *)uint64_t v14 = 138412546;
    id v69 = a1;
    uint64_t v16 = v10;
    uint64_t v17 = v11;
    sub_24D39D070();
    *uint64_t v15 = v11;

    *(_WORD *)(v14 + 12) = 2080;
    id v18 = v16;
    sub_24D2B7450(&qword_269861378);
    uint64_t v19 = sub_24D39CB20();
    *(void *)&v86[0] = sub_24D2B8328(v19, v20, v89);
    sub_24D39D070();

    a1 = v69;
    id v10 = v16;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v12, v13, "ðŸ§­ FMR1NIContxt%@: didUpdateRegion %s", (uint8_t *)v14, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v67, -1, -1);
    uint64_t v21 = v14;
    a3 = v75;
    MEMORY[0x253326010](v21, -1, -1);
  }
  else
  {
  }
  id v22 = objc_msgSend(a1, sel_discoveryToken);
  sub_24D2E86D0((uint64_t)v78, (uint64_t)v89);
  uint64_t v23 = v90;
  if (v90)
  {
    uint64_t v24 = v91;
    sub_24D2B8A34(v89, v90);
    unint64_t v25 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
    sub_24D2B6E58((uint64_t)v89);
    if (v22)
    {
      if (v25)
      {
        sub_24D2BC100(0, &qword_269861348);
        id v26 = v22;
        char v27 = sub_24D39CFE0();

        if (v27) {
          goto LABEL_19;
        }
LABEL_15:
        uint64_t v28 = v11;
        os_log_type_t v29 = sub_24D39C930();
        os_log_type_t v30 = sub_24D39CDF0();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = (uint8_t *)swift_slowAlloc();
          uint64_t v32 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v31 = 138412290;
          v89[0] = (uint64_t)v28;
          uint64_t v33 = v28;
          sub_24D39D070();
          void *v32 = v28;

          _os_log_impl(&dword_24D2B1000, v29, v30, "ðŸ§­ FMR1NIContxt%@: region updated, However, nearby object discover tokens don't match", v31, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v32, -1, -1);
          MEMORY[0x253326010](v31, -1, -1);
        }
        else
        {
        }
        return sub_24D2E4AF4((uint64_t)v78);
      }
LABEL_14:

      goto LABEL_15;
    }
    id v22 = v25;
    if (v25) {
      goto LABEL_14;
    }
  }
  else
  {
    sub_24D2E4AF4((uint64_t)v89);
    if (v22) {
      goto LABEL_14;
    }
  }
LABEL_19:
  id v71 = v10;
  if (a2 && (sub_24D3276DC((uint64_t)v80), sub_24D2E8758((uint64_t)v80, (uint64_t)v84), v84[98] != 255))
  {
    sub_24D2B74E8((uint64_t)v84, (uint64_t)v85);
    if (a3)
    {
      sub_24D3276DC((uint64_t)v81);
      uint64_t v36 = v81[0];
      uint64_t v35 = v81[1];
      uint64_t v37 = (void *)v81[2];
      a3 = (void *)v81[3];
      uint64_t v39 = v81[4];
      uint64_t v38 = v81[5];
      uint64_t v40 = v81[6];
      uint64_t v41 = v81[7];
      uint64_t v43 = v81[8];
      uint64_t v42 = v81[9];
      int v44 = v82 | (v83 << 16);
      uint64_t v45 = v81[10];
      uint64_t v46 = v81[11];
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v35 = 0;
      uint64_t v37 = 0;
      uint64_t v39 = 0;
      uint64_t v38 = 0;
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v43 = 0;
      uint64_t v42 = 0;
      uint64_t v45 = 0;
      uint64_t v46 = 0;
      int v44 = 16711680;
    }
    uint64_t v66 = v38;
    uint64_t v68 = v45;
    uint64_t v70 = v40;
    uint64_t v76 = v41;
    v89[0] = v36;
    v89[1] = v35;
    v89[2] = (uint64_t)v37;
    uint64_t v90 = (uint64_t)a3;
    uint64_t v91 = v39;
    uint64_t v92 = v38;
    uint64_t v93 = v40;
    uint64_t v94 = v41;
    uint64_t v95 = v43;
    uint64_t v96 = v42;
    uint64_t v97 = v45;
    uint64_t v98 = v46;
    __int16 v99 = v44;
    char v100 = BYTE2(v44);
    unsigned int v72 = sub_24D3278AC((uint64_t)v89);
    sub_24D2D7A50((uint64_t)v80);
    sub_24D2D7AB4(v36, v35, v37, a3, v39, v66, v70, v76, v43, v42, v68, v46, v44, BYTE2(v44));
    a2 = v73;
    os_log_type_t v11 = v74;
  }
  else
  {
    if (a3) {
      int v34 = 2;
    }
    else {
      int v34 = 3;
    }
    unsigned int v72 = v34;
  }
  id v47 = &v11[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v48 = *(void *)v47;
  if (!(*(void *)v47 >> 62))
  {
    uint64_t v49 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v49) {
      goto LABEL_31;
    }
LABEL_64:
    swift_bridgeObjectRelease_n();
    return sub_24D2E4AF4((uint64_t)v78);
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v49 = result;
  if (!result) {
    goto LABEL_64;
  }
LABEL_31:
  if (v49 >= 1)
  {
    for (uint64_t i = 0; i != v49; ++i)
    {
      if ((v48 & 0xC000000000000001) != 0) {
        os_log_type_t v52 = (char *)MEMORY[0x253325220](i, v48);
      }
      else {
        os_log_type_t v52 = (char *)*(id *)(v48 + 8 * i + 32);
      }
      uint64_t v53 = v52;
      uint64_t v54 = &v52[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v52[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        uint64_t v55 = *((void *)v54 + 1);
        if (a2)
        {
          id v56 = objc_msgSend(v71, sel_name);
          uint64_t v57 = sub_24D39CAF0();
          uint64_t v59 = v58;

          BOOL v60 = v57 == 0x646E756F66 && v59 == 0xE500000000000000;
          if (v60 || (sub_24D39D4B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            int v61 = 196608;
          }
          else if (v57 == 1701995880 && v59 == 0xE400000000000000 || (sub_24D39D4B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            int v61 = 0x20000;
          }
          else if (v57 == 1918985582 && v59 == 0xE400000000000000 || (sub_24D39D4B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            int v61 = 0x10000;
          }
          else if (v57 == 7496038 && v59 == 0xE300000000000000)
          {
            swift_bridgeObjectRelease();
            int v61 = 0;
          }
          else
          {
            char v65 = sub_24D39D4B0();
            swift_bridgeObjectRelease();
            if (v65) {
              int v61 = 0;
            }
            else {
              int v61 = -65536;
            }
          }
        }
        else
        {
          int v61 = 16711680;
        }
        memset(v86, 0, sizeof(v86));
        __int16 v87 = v61;
        char v88 = BYTE2(v61);
        uint64_t ObjectType = swift_getObjectType();
        v77[3] = type metadata accessor for FMNearbyInteractionLocalizerContext();
        v77[4] = &off_26FF86B30;
        v77[0] = v74;
        os_log_type_t v63 = *(void (**)(_OWORD *, void, void *, uint64_t, uint64_t))(v55 + 24);
        int v64 = v74;
        v63(v86, v72, v77, ObjectType, v55);
        sub_24D2D7AB4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, v61, BYTE2(v61));
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v77);

        a2 = v73;
      }
      else
      {
      }
    }
    goto LABEL_64;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D2E68A8(unint64_t a1, uint64_t a2)
{
  sub_24D2B6CE8((uint64_t)v2 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v52);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450(&qword_269861320);
  uint64_t v5 = swift_dynamicCast();
  if ((v5 & 1) == 0)
  {
    uint64_t v56 = 0;
    memset(v55, 0, sizeof(v55));
  }
  MEMORY[0x270FA5388](v5);
  long long v47[2] = v55;
  id v6 = sub_24D37AE64(sub_24D2E8738, (uint64_t)v47, a1);
  if (!v6)
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_24D39C950();
    sub_24D2B508C(v21, (uint64_t)qword_269869FD0);
    id v22 = v2;
    uint64_t v23 = sub_24D39C930();
    os_log_type_t v24 = sub_24D39CDF0();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      id v26 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v25 = 138412290;
      v52[0] = (uint64_t)v22;
      id v27 = v22;
      sub_24D39D070();
      *id v26 = v22;

      _os_log_impl(&dword_24D2B1000, v23, v24, "ðŸ§­ FMR1NIContxt%@: nearby object discover token doesn't match", v25, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v26, -1, -1);
      MEMORY[0x253326010](v25, -1, -1);
    }
    else
    {
    }
    return sub_24D2E4AF4((uint64_t)v55);
  }
  uint64_t v7 = v6;
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_24D39C950();
  sub_24D2B508C(v8, (uint64_t)qword_269869FD0);
  id v9 = v2;
  id v10 = v7;
  os_log_type_t v11 = sub_24D39C930();
  os_log_type_t v12 = sub_24D39CDF0();
  BOOL v13 = os_log_type_enabled(v11, v12);
  id v50 = v9;
  if (v13)
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    v52[0] = v49;
    *(_DWORD *)uint64_t v14 = 138412802;
    uint64_t v51 = (uint64_t)v50;
    uint64_t v16 = v50;
    sub_24D39D070();
    *uint64_t v15 = v50;

    *(_WORD *)(v14 + 12) = 2112;
    id v17 = objc_msgSend(v10, sel_discoveryToken);
    uint64_t v51 = (uint64_t)v17;
    sub_24D39D070();
    v15[1] = v17;

    *(_WORD *)(v14 + 22) = 2080;
    uint64_t v51 = a2;
    type metadata accessor for RemovalReason(0);
    uint64_t v18 = sub_24D39CB20();
    uint64_t v51 = sub_24D2B8328(v18, v19, v52);
    id v9 = v50;
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v11, v12, "ðŸ§­ FMR1NIContxt%@: nearby object discover token matches %@ removing. Reason: %s", (uint8_t *)v14, 0x20u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v15, -1, -1);
    uint64_t v20 = v49;
    swift_arrayDestroy();
    MEMORY[0x253326010](v20, -1, -1);
    MEMORY[0x253326010](v14, -1, -1);
  }
  else
  {
  }
  v9[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemLocalizerState] = 1;
  v9[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_itemState] = 2;
  uint64_t v28 = &v9[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v29 = *(void *)v28;
  uint64_t v30 = *(void *)v28 >> 62;
  id v48 = v10;
  if (!v30)
  {
    uint64_t v31 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v31) {
      goto LABEL_15;
    }
LABEL_27:

    swift_bridgeObjectRelease_n();
    return sub_24D2E4AF4((uint64_t)v55);
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v31 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_15:
  if (v31 >= 1)
  {
    uint64_t v33 = 0;
    uint64_t v49 = v29 & 0xC000000000000001;
    do
    {
      if (v49) {
        int v34 = (char *)MEMORY[0x253325220](v33, v29);
      }
      else {
        int v34 = (char *)*(id *)(v29 + 8 * v33 + 32);
      }
      uint64_t v35 = v34;
      uint64_t v36 = &v34[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v34[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        uint64_t v37 = *((void *)v36 + 1);
        uint64_t v38 = v29;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v53 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        uint64_t v54 = &off_26FF86B30;
        v52[0] = (uint64_t)v50;
        uint64_t v40 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v37 + 32);
        uint64_t v41 = v50;
        uint64_t v42 = ObjectType;
        uint64_t v29 = v38;
        v40(1, v52, v42, v37);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v52);
      }
      if (MEMORY[0x253326120](v36))
      {
        uint64_t v43 = *((void *)v36 + 1);
        uint64_t v44 = swift_getObjectType();
        uint64_t v53 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        uint64_t v54 = &off_26FF86B30;
        v52[0] = (uint64_t)v50;
        uint64_t v45 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v43 + 48);
        uint64_t v46 = v50;
        v45(2, v52, v44, v43);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v52);
      }

      ++v33;
    }
    while (v31 != v33);
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D2E6F4C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24D39C910();
  uint64_t v120 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  char v119 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  os_log_type_t v11 = (uint64_t *)((char *)&v114 - v10);
  MEMORY[0x270FA5388](v9);
  sub_24D2B6CE8((uint64_t)v3 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_findable, (uint64_t)v123);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450(&qword_269861320);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v127 = 0;
    memset(v126, 0, sizeof(v126));
  }
  if (a2) {
    id v12 = objc_msgSend(a2, sel_discoveryToken);
  }
  else {
    id v12 = 0;
  }
  sub_24D2E86D0((uint64_t)v126, (uint64_t)v123);
  uint64_t v13 = v124;
  if (!v124)
  {
    sub_24D2E4AF4((uint64_t)v123);
    if (!v12) {
      goto LABEL_19;
    }
    goto LABEL_12;
  }
  uint64_t v14 = v125;
  sub_24D2B8A34(v123, v124);
  uint64_t v15 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v14[2])(v13, v14);
  sub_24D2B6E58((uint64_t)v123);
  if (!v12)
  {
    if (!v15) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  if (!v15)
  {
LABEL_12:
    uint64_t v15 = v12;
LABEL_14:

    goto LABEL_15;
  }
  sub_24D2BC100(0, &qword_269861348);
  id v16 = v12;
  char v17 = sub_24D39CFE0();

  if ((v17 & 1) == 0)
  {
LABEL_15:
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_24D39C950();
    sub_24D2B508C(v18, (uint64_t)qword_269869FD0);
    id v19 = v3;
    uint64_t v20 = sub_24D39C930();
    os_log_type_t v21 = sub_24D39CDF0();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      *(_DWORD *)id v22 = 138412290;
      v123[0] = (uint64_t)v19;
      id v24 = v19;
      sub_24D39D070();
      *uint64_t v23 = v19;

      _os_log_impl(&dword_24D2B1000, v20, v21, "ðŸ§­ FMR1NIContxt%@: nearby object discover token doesn't match", v22, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v23, -1, -1);
      MEMORY[0x253326010](v22, -1, -1);
    }
    else
    {
    }
    return sub_24D2E4AF4((uint64_t)v126);
  }
LABEL_19:
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_24D39C950();
  sub_24D2B508C(v25, (uint64_t)qword_269869FD0);
  id v26 = v3;
  id v27 = a1;
  uint64_t v28 = (char *)v26;
  id v29 = v27;
  uint64_t v30 = sub_24D39C930();
  os_log_type_t v31 = sub_24D39CDF0();
  int v32 = v31;
  BOOL v33 = os_log_type_enabled(v30, v31);
  uint64_t v121 = v28;
  if (v33)
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v117 = v6;
    uint64_t v36 = (void *)v35;
    uint64_t v114 = v35;
    uint64_t v118 = swift_slowAlloc();
    v123[0] = v118;
    *(_DWORD *)uint64_t v34 = 138412546;
    os_log_t v115 = v30;
    int v116 = v32;
    uint64_t v122 = (uint64_t)v28;
    uint64_t v37 = v121;
    sub_24D39D070();
    void *v36 = v121;
    uint64_t v6 = v117;

    *(_WORD *)(v34 + 12) = 2080;
    sub_24D39CF30();
    uint64_t v38 = sub_24D39CB20();
    uint64_t v122 = sub_24D2B8328(v38, v39, v123);
    uint64_t v28 = v121;
    sub_24D39D070();

    swift_bridgeObjectRelease();
    os_log_t v40 = v115;
    _os_log_impl(&dword_24D2B1000, v115, (os_log_type_t)v116, "ðŸ§­ FMR1NIContxt%@: Updated convergence status! %s", (uint8_t *)v34, 0x16u);
    sub_24D2B7450(&qword_269861308);
    uint64_t v41 = v114;
    swift_arrayDestroy();
    MEMORY[0x253326010](v41, -1, -1);
    uint64_t v42 = v118;
    swift_arrayDestroy();
    MEMORY[0x253326010](v42, -1, -1);
    MEMORY[0x253326010](v34, -1, -1);
  }
  else
  {
  }
  uint64_t v43 = v120;
  sub_24D39CF30();
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t))(v43 + 88);
  if (v44((char *)v11, v6) != *MEMORY[0x263F14050])
  {
    BOOL v60 = *(void (**)(uint64_t *, uint64_t))(v43 + 8);
    v60(v11, v6);
    int v61 = v119;
    sub_24D39CF30();
    int v62 = v44(v61, v6);
    int v63 = *MEMORY[0x263F14070];
    v60((uint64_t *)v61, v6);
    if (v62 != v63) {
      return sub_24D2E4AF4((uint64_t)v126);
    }
    int v64 = &v28[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
    swift_beginAccess();
    unint64_t v65 = *(void *)v64;
    if (v65 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v66 = sub_24D39D2D0();
      if (!v66) {
        goto LABEL_82;
      }
    }
    else
    {
      uint64_t v66 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v66) {
        goto LABEL_82;
      }
    }
    if (v66 >= 1)
    {
      for (uint64_t i = 0; i != v66; ++i)
      {
        if ((v65 & 0xC000000000000001) != 0) {
          uint64_t v68 = (char *)MEMORY[0x253325220](i, v65);
        }
        else {
          uint64_t v68 = (char *)*(id *)(v65 + 8 * i + 32);
        }
        id v69 = v68;
        uint64_t v70 = &v68[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
        if (MEMORY[0x253326120](&v68[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
        {
          uint64_t v71 = *((void *)v70 + 1);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v124 = type metadata accessor for FMNearbyInteractionLocalizerContext();
          uint64_t v125 = &off_26FF86B30;
          v123[0] = (uint64_t)v121;
          unint64_t v73 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v71 + 48);
          uint64_t v74 = v121;
          v73(3, v123, ObjectType, v71);
          swift_unknownObjectRelease();
          sub_24D2B6E58((uint64_t)v123);
        }
      }
      goto LABEL_82;
    }
    goto LABEL_77;
  }
  (*(void (**)(uint64_t *, uint64_t))(v43 + 96))(v11, v6);
  uint64_t v45 = *v11;
  uint64_t v46 = v28;
  swift_bridgeObjectRetain_n();
  id v47 = v46;
  id v48 = sub_24D39C930();
  os_log_type_t v49 = sub_24D39CDF0();
  BOOL v50 = os_log_type_enabled(v48, v49);
  uint64_t v121 = v47;
  if (v50)
  {
    uint64_t v51 = swift_slowAlloc();
    os_log_type_t v52 = (void *)swift_slowAlloc();
    uint64_t v120 = swift_slowAlloc();
    v123[0] = v120;
    *(_DWORD *)uint64_t v51 = 138412546;
    uint64_t v122 = (uint64_t)v47;
    uint64_t v53 = v47;
    sub_24D39D070();
    *os_log_type_t v52 = v47;

    *(_WORD *)(v51 + 12) = 2080;
    uint64_t v54 = sub_24D39C900();
    uint64_t v55 = swift_bridgeObjectRetain();
    uint64_t v56 = MEMORY[0x253324C50](v55, v54);
    unint64_t v58 = v57;
    swift_bridgeObjectRelease();
    uint64_t v122 = sub_24D2B8328(v56, v58, v123);
    sub_24D39D070();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v48, v49, "ðŸ§­ FMR1NIContxt%@: No longer converged!! What's the reason? %s", (uint8_t *)v51, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v52, -1, -1);
    uint64_t v59 = v120;
    swift_arrayDestroy();
    MEMORY[0x253326010](v59, -1, -1);
    MEMORY[0x253326010](v51, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v75 = swift_bridgeObjectRetain();
  uint64_t v76 = sub_24D389D40(v75);
  swift_bridgeObjectRelease();
  sub_24D2B7450((uint64_t *)&unk_269861350);
  sub_24D39C900();
  uint64_t v77 = swift_allocObject();
  *(_OWORD *)(v77 + 16) = xmmword_24D3A0050;
  sub_24D39C8F0();
  uint64_t v78 = sub_24D2E44D8(v77, v76);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v79 = *(void *)(v78 + 16);
  swift_release();
  if (v79)
  {
    swift_bridgeObjectRelease();
    uint64_t v80 = (uint64_t *)&v121[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
    swift_beginAccess();
    uint64_t v66 = *v80;
    if ((unint64_t)*v80 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v81 = sub_24D39D2D0();
      if (!v81) {
        goto LABEL_82;
      }
      goto LABEL_43;
    }
    uint64_t v81 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v81)
    {
LABEL_43:
      if (v81 >= 1)
      {
        for (uint64_t j = 0; j != v81; ++j)
        {
          if ((v66 & 0xC000000000000001) != 0) {
            unsigned __int8 v83 = (char *)MEMORY[0x253325220](j, v66);
          }
          else {
            unsigned __int8 v83 = (char *)*(id *)(v66 + 8 * j + 32);
          }
          unint64_t v84 = v83;
          id v85 = &v83[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
          if (MEMORY[0x253326120](&v83[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
          {
            uint64_t v86 = *((void *)v85 + 1);
            uint64_t v87 = swift_getObjectType();
            uint64_t v124 = type metadata accessor for FMNearbyInteractionLocalizerContext();
            uint64_t v125 = &off_26FF86B30;
            v123[0] = (uint64_t)v121;
            char v88 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v86 + 48);
            os_log_t v89 = v121;
            v88(7, v123, v87, v86);
            swift_unknownObjectRelease();
            sub_24D2B6E58((uint64_t)v123);
          }
        }
        goto LABEL_82;
      }
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      swift_bridgeObjectRetain_n();
      uint64_t v95 = sub_24D39D2D0();
      if (!v95) {
        goto LABEL_82;
      }
      goto LABEL_54;
    }
    goto LABEL_82;
  }
  uint64_t v90 = sub_24D389D40(v45);
  swift_bridgeObjectRelease();
  uint64_t v91 = swift_allocObject();
  *(_OWORD *)(v91 + 16) = xmmword_24D3A0220;
  sub_24D39C8E0();
  sub_24D39C8D0();
  uint64_t v92 = sub_24D2E44D8(v91, v90);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v93 = *(void *)(v92 + 16);
  swift_release();
  uint64_t v94 = (uint64_t *)&v121[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  if (!v93)
  {
    swift_beginAccess();
    uint64_t v66 = *v94;
    if ((unint64_t)*v94 >> 62) {
      goto LABEL_81;
    }
    uint64_t v104 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v104) {
      goto LABEL_64;
    }
    goto LABEL_82;
  }
  swift_beginAccess();
  uint64_t v66 = *v94;
  if ((unint64_t)*v94 >> 62) {
    goto LABEL_78;
  }
  uint64_t v95 = *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v95)
  {
LABEL_82:
    swift_bridgeObjectRelease_n();
    return sub_24D2E4AF4((uint64_t)v126);
  }
LABEL_54:
  if (v95 >= 1)
  {
    for (uint64_t k = 0; k != v95; ++k)
    {
      if ((v66 & 0xC000000000000001) != 0) {
        uint64_t v97 = (char *)MEMORY[0x253325220](k, v66);
      }
      else {
        uint64_t v97 = (char *)*(id *)(v66 + 8 * k + 32);
      }
      uint64_t v98 = v97;
      __int16 v99 = &v97[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v97[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        uint64_t v100 = *((void *)v99 + 1);
        uint64_t v101 = swift_getObjectType();
        uint64_t v124 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        uint64_t v125 = &off_26FF86B30;
        v123[0] = (uint64_t)v121;
        unint64_t v102 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v100 + 48);
        unint64_t v103 = v121;
        v102(8, v123, v101, v100);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v123);
      }
    }
    goto LABEL_82;
  }
  __break(1u);
LABEL_81:
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v104 = result;
  if (!result) {
    goto LABEL_82;
  }
LABEL_64:
  if (v104 >= 1)
  {
    for (uint64_t m = 0; m != v104; ++m)
    {
      if ((v66 & 0xC000000000000001) != 0) {
        os_log_t v107 = (char *)MEMORY[0x253325220](m, v66);
      }
      else {
        os_log_t v107 = (char *)*(id *)(v66 + 8 * m + 32);
      }
      uint64_t v108 = v107;
      uint64_t v109 = &v107[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v107[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        uint64_t v110 = *((void *)v109 + 1);
        uint64_t v111 = swift_getObjectType();
        uint64_t v124 = type metadata accessor for FMNearbyInteractionLocalizerContext();
        uint64_t v125 = &off_26FF86B30;
        v123[0] = (uint64_t)v121;
        uint64_t v112 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v110 + 48);
        id v113 = v121;
        v112(3, v123, v111, v110);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v123);
      }
    }
    goto LABEL_82;
  }
  __break(1u);
  return result;
}

void sub_24D2E7E38()
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
  uint64_t v2 = v0;
  uint64_t v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v5 = 138412802;
    uint64_t v7 = v2;
    sub_24D39D070();
    *uint64_t v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    type metadata accessor for NISessionSuspensionReason(0);
    uint64_t v8 = sub_24D39CB20();
    sub_24D2B8328(v8, v9, &v15);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 1024;
    sub_24D39D070();
    _os_log_impl(&dword_24D2B1000, v3, v4, "ðŸ§­ FMR1NIContxt%@: suspensionReasonEneded: %s, isNoLongerSuspended: %{BOOL}d", (uint8_t *)v5, 0x1Cu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v6, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v14, -1, -1);
    MEMORY[0x253326010](v5, -1, -1);
  }
  else
  {
  }
  if ((v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_applicationIsInBackground] & 1) == 0)
  {
    uint64_t v10 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_niConfiguration];
    self;
    uint64_t v11 = swift_dynamicCastObjCClass();
    if (v11)
    {
      id v12 = (void *)v11;
      id v13 = v10;
      if (objc_msgSend(v12, sel_preferredUpdateRate) == (id)3)
      {
        sub_24D2DD6D8();

        return;
      }
    }
    sub_24D2DCE7C();
  }
}

void sub_24D2E811C()
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
  id v2 = v0;
  uint64_t v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = v10;
    *(_DWORD *)uint64_t v5 = 138412546;
    id v7 = v2;
    sub_24D39D070();
    *uint64_t v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    type metadata accessor for NISessionSuspensionReason(0);
    uint64_t v8 = sub_24D39CB20();
    sub_24D2B8328(v8, v9, &v11);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v3, v4, "ðŸ§­ FMR1NIContxt%@: suspendedWithReason: %s", (uint8_t *)v5, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v6, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v10, -1, -1);
    MEMORY[0x253326010](v5, -1, -1);
  }
  else
  {
  }
  *((unsigned char *)v2 + OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_activity) = 4;
}

uint64_t sub_24D2E8358(void *a1)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_error];
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_error] = a1;
  id v4 = a1;

  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24D39C950();
  sub_24D2B508C(v5, (uint64_t)qword_269869FD0);
  id v6 = a1;
  id v7 = v1;
  id v8 = a1;
  unint64_t v9 = v7;
  uint64_t v10 = sub_24D39C930();
  os_log_type_t v11 = sub_24D39CDE0();
  uint64_t v28 = a1;
  id v29 = v9;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    id v13 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412546;
    uint64_t v14 = v9;
    sub_24D39D070();
    *id v13 = v9;

    *(_WORD *)(v12 + 12) = 2112;
    id v15 = a1;
    v30[0] = _swift_stdlib_bridgeErrorToNSError();
    sub_24D39D070();
    v13[1] = v30[0];

    _os_log_impl(&dword_24D2B1000, v10, v11, "ðŸ§­ FMR1NIContxt%@: item localizer failed (%@)", (uint8_t *)v12, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v13, -1, -1);
    MEMORY[0x253326010](v12, -1, -1);
  }
  else
  {
  }
  sub_24D2DE1E8();
  id v16 = &v9[OBJC_IVAR____TtC11FMFindingUI35FMNearbyInteractionLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v17 = *(void *)v16;
  if (!(*(void *)v16 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v18) {
      goto LABEL_8;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v18 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_8:
  if (v18 >= 1)
  {
    for (uint64_t i = 0; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0) {
        os_log_type_t v21 = (char *)MEMORY[0x253325220](i, v17);
      }
      else {
        os_log_type_t v21 = (char *)*(id *)(v17 + 8 * i + 32);
      }
      id v22 = v21;
      uint64_t v23 = &v21[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v21[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_subscriber]))
      {
        uint64_t v24 = *((void *)v23 + 1);
        uint64_t ObjectType = swift_getObjectType();
        void v30[3] = type metadata accessor for FMNearbyInteractionLocalizerContext();
        v30[4] = &off_26FF86B30;
        v30[0] = v29;
        id v26 = *(void (**)(void *, void *, uint64_t, uint64_t))(v24 + 40);
        id v27 = v29;
        v26(v28, v30, ObjectType, v24);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v30);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D2E86D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269861328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D2E8738(id *a1)
{
  return sub_24D2DB818(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_24D2E8758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269861370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D2E87C0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24D2E87F8()
{
  sub_24D2E3334(v0);
}

void sub_24D2E8800()
{
  sub_24D2E37EC(v0);
}

uint64_t sub_24D2E8808(unint64_t a1)
{
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x253325220](v3, a1);
LABEL_9:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        sub_24D39C8A0();
        sub_24D2E8CF4((unint64_t *)&qword_2698613A0, MEMORY[0x263F07508]);
        if (sub_24D39CAB0())
        {
        }
        else
        {
          sub_24D39D240();
          sub_24D39D270();
          sub_24D39D280();
          sub_24D39D250();
        }
        ++v3;
        if (v6 == v2) {
          return v8;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_24D39D2D0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

unint64_t sub_24D2E89C0(uint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_24D2E49E0(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v8)
    {
      unint64_t v24 = *a1;
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v6 = sub_24D39D2D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      uint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_54;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_55:
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_24D39D2D0();
        swift_bridgeObjectRelease();
        if (v9 != v26) {
          goto LABEL_6;
        }
      }
      else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        a2 += OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_identifier;
        for (unint64_t i = v6 + 5; ; ++i)
        {
          unint64_t v11 = i - 4;
          uint64_t v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            id v13 = (id)MEMORY[0x253325220](i - 4);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
            if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_45;
            }
            id v13 = *(id *)(v12 + 8 * i);
          }
          uint64_t v14 = v13;
          uint64_t v9 = sub_24D39C870();

          if ((v9 & 1) == 0) {
            break;
          }
LABEL_32:
          uint64_t v9 = i - 3;
          if (__OFADD__(v11, 1)) {
            goto LABEL_46;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v23 = sub_24D39D2D0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v23 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v9 == v23) {
            return v6;
          }
        }
        if (v11 == v6)
        {
LABEL_31:
          if (__OFADD__(v6++, 1)) {
            goto LABEL_47;
          }
          goto LABEL_32;
        }
        uint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v15 = (id)MEMORY[0x253325220](v6, *a1);
          uint64_t v9 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_50;
            }
            if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_51;
            }
            id v16 = *(id *)(v9 + 8 * i);
            goto LABEL_20;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_48;
          }
          if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_49;
          }
          id v15 = *(id *)(v9 + 8 * v6 + 32);
          if ((v9 & 0xC000000000000001) == 0) {
            goto LABEL_17;
          }
        }
        id v16 = (id)MEMORY[0x253325220](i - 4, v9);
        uint64_t v9 = *a1;
LABEL_20:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          uint64_t v9 = sub_24D3594D0(v9);
          *a1 = v9;
        }
        uint64_t v18 = *(void **)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v16;

        sub_24D39CC30();
        uint64_t v9 = *a1;
        int v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!v19 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          uint64_t v9 = sub_24D3594D0(v9);
          *a1 = v9;
        }
        if ((v11 & 0x8000000000000000) != 0) {
          goto LABEL_52;
        }
        uint64_t v20 = v9 & 0xFFFFFFFFFFFFFF8;
        if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_53;
        }
        os_log_type_t v21 = *(void **)(v20 + 8 * i);
        *(void *)(v20 + 8 * i) = v15;

        sub_24D39CC30();
        goto LABEL_31;
      }
    }
  }
  return v6;
}

uint64_t sub_24D2E8CF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24D2E8D3C()
{
  unint64_t result = qword_2698613C0;
  if (!qword_2698613C0)
  {
    sub_24D2C067C((uint64_t *)&unk_269860F50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698613C0);
  }
  return result;
}

uint64_t sub_24D2E8D98(id *a1)
{
  return sub_24D2E8738(a1) & 1;
}

uint64_t sub_24D2E8DB4(uint64_t a1)
{
  return sub_24D2E8E74(a1, qword_269869FA0);
}

uint64_t sub_24D2E8DC8(uint64_t a1)
{
  return sub_24D2E8E74(a1, qword_269869FB8);
}

uint64_t *sub_24D2E8DEC(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_24D2E8E50(uint64_t a1)
{
  return sub_24D2E8E74(a1, qword_269869FD0);
}

uint64_t sub_24D2E8E74(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_24D39C950();
  sub_24D2E8DEC(v3, a2);
  sub_24D2B508C(v3, (uint64_t)a2);
  return sub_24D39C940();
}

ValueMetadata *type metadata accessor for FMPFViewStyle()
{
  return &type metadata for FMPFViewStyle;
}

void destroy for FMPFSKPeripheralDotNodeStyle(uint64_t a1)
{
}

uint64_t initializeWithCopy for FMPFSKPeripheralDotNodeStyle(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  id v4 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  id v5 = v4;
  return a1;
}

void *assignWithCopy for FMPFSKPeripheralDotNodeStyle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  id v4 = (void *)a2[7];
  id v5 = (void *)a1[7];
  a1[7] = v4;
  id v6 = v4;

  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  return a1;
}

__n128 initializeWithTake for FMPFSKPeripheralDotNodeStyle(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for FMPFSKPeripheralDotNodeStyle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v4 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMPFSKPeripheralDotNodeStyle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFSKPeripheralDotNodeStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKPeripheralDotNodeStyle()
{
  return &type metadata for FMPFSKPeripheralDotNodeStyle;
}

double sub_24D2E9120()
{
  id v0 = objc_msgSend(self, sel_whiteColor);
  id v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.4);

  xmmword_269861430 = xmmword_24D3A1050;
  qword_269861440 = 16;
  unk_269861448 = xmmword_24D3A1060;
  *(_OWORD *)&qword_269861458 = xmmword_24D3A1070;
  qword_269861468 = (uint64_t)v1;
  double result = 0.5;
  xmmword_269861470 = xmmword_24D3A1080;
  qword_269861480 = 0x4040000000000000;
  return result;
}

double sub_24D2E91D0()
{
  id v0 = objc_msgSend(self, sel_whiteColor);
  id v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.4);

  xmmword_269861488 = xmmword_24D3A1050;
  qword_269861498 = 16;
  unk_2698614A0 = xmmword_24D3A1060;
  *(_OWORD *)&qword_2698614B0 = xmmword_24D3A1070;
  qword_2698614C0 = (uint64_t)v1;
  double result = 0.5;
  xmmword_2698614C8 = xmmword_24D3A1080;
  qword_2698614D8 = 0x4040000000000000;
  return result;
}

uint64_t sub_24D2E9280(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24D2E9294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_24D2E92A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_24D2E92BC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24D2E92D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_24D2E92E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_24D2E92F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_24D2E930C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_24D2E9320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_24D2E9334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_24D2E9348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_24D2E935C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_24D2E9370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_24D2E9384(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v9 = v8 | (v2 << 6);
LABEL_22:
    id v13 = *(char **)(*(void *)(v1 + 56) + 8 * v9);
    if (*(void *)&v13[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer])
    {
      uint64_t v14 = v13;
      sub_24D39D240();
      sub_24D39D270();
      sub_24D39D280();
      double result = sub_24D39D250();
    }
  }
  int64_t v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v7) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v10);
  ++v2;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v2 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v2);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v2 = v10 + 2;
  if (v10 + 2 >= v7) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v2);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v2 = v10 + 3;
  if (v10 + 3 >= v7) {
    goto LABEL_24;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v2);
  if (v11)
  {
LABEL_21:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
    goto LABEL_22;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_24:
    swift_release();
    return v15;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_24;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_24D2E9538@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24D2F5624(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24D2E9564()
{
  return sub_24D39CBE0();
}

uint64_t sub_24D2E95C4()
{
  return sub_24D39CBC0();
}

unint64_t sub_24D2E9614@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24D2F5634(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24D2E9640()
{
  return sub_24D39CBE0();
}

uint64_t sub_24D2E96A0()
{
  return sub_24D39CBC0();
}

unint64_t sub_24D2E96F0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24D2F5644(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24D2E971C()
{
  return sub_24D39CBE0();
}

uint64_t sub_24D2E977C()
{
  return sub_24D39CBC0();
}

id sub_24D2E97CC(uint64_t a1, char *a2)
{
  char v4 = *a2;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizerState] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_hasCalledConfigure] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_stopAsked] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_error] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions] = MEMORY[0x263F8EE78];
  uint64_t v5 = &v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID];
  *(void *)uint64_t v5 = 0;
  v5[8] = 1;
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_updateRangeEstimateLogCounter] = 0;
  unint64_t v6 = &v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_lastLoggedRangeEstimate];
  *(_DWORD *)unint64_t v6 = 0;
  v6[4] = 1;
  int64_t v7 = &v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_incrementItemLocalizerHandler];
  *int64_t v7 = 0;
  v7[1] = 0;
  unint64_t v8 = &v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_decrementItemLocalizerHandler];
  *unint64_t v8 = 0;
  v8[1] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_applicationIsInBackground] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer] = 0;
  sub_24D2B6CE8(a1, (uint64_t)&v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable]);
  v2[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_connectionContext] = v4;
  v26.receiver = v2;
  v26.super_class = (Class)type metadata accessor for FMR1ItemLocalizerContext();
  id v9 = objc_msgSendSuper2(&v26, sel_init);
  uint64_t v10 = qword_2698602B0;
  id v11 = v9;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_24D39C950();
  sub_24D2B508C(v12, (uint64_t)qword_269869FD0);
  id v13 = v11;
  uint64_t v14 = sub_24D39C930();
  os_log_type_t v15 = sub_24D39CDF0();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = a1;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v25 = v17;
    *(_DWORD *)id v16 = 136315138;
    id v18 = objc_msgSend(v13, sel_description);
    uint64_t v19 = sub_24D39CAF0();
    unint64_t v21 = v20;

    sub_24D2B8328(v19, v21, &v25);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v14, v15, "ðŸ§­ FMR1PrxContxt%s: init", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v17, -1, -1);
    MEMORY[0x253326010](v16, -1, -1);

    uint64_t v22 = v24;
  }
  else
  {

    uint64_t v22 = a1;
  }
  sub_24D2B6E58(v22);
  return v13;
}

uint64_t sub_24D2E9B48()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24D39D600();
  unint64_t v4 = v3;
  sub_24D39D1D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24D34315C(9, v2, v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v24 = 7876668;
  unint64_t v25 = 0xE300000000000000;
  long long v21[2] = v6;
  uint64_t v22 = v8;
  sub_24D2C3E44();
  sub_24D39CB60();
  swift_bridgeObjectRelease();
  v21[0] = 7876668;
  v21[1] = 0xE300000000000000;
  swift_bridgeObjectRetain();
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  sub_24D2B7450((uint64_t *)&unk_269861860);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24D3A0220;
  sub_24D2B6CE8(v0 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, (uint64_t)v21);
  uint64_t v10 = v22;
  uint64_t v11 = v23;
  sub_24D2B8A34(v21, v22);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  uint64_t v14 = v13;
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  *(void *)(v9 + 64) = sub_24D2B7494();
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v14;
  os_log_type_t v15 = (unint64_t *)(v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions);
  swift_beginAccess();
  unint64_t v16 = *v15;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24D39D2D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v18 = MEMORY[0x263F8D750];
  *(void *)(v9 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v9 + 104) = v18;
  *(void *)(v9 + 72) = v17;
  sub_24D2B6E58((uint64_t)v21);
  uint64_t v19 = sub_24D39CB00();
  swift_bridgeObjectRelease();
  return v19;
}

id sub_24D2E9DE8(uint64_t a1, uint64_t a2)
{
  return sub_24D2F0F14("ðŸ§­ FMR1PrxContxt%s: deinit", a2, (uint64_t (*)(void))type metadata accessor for FMR1ItemLocalizerContext);
}

uint64_t sub_24D2E9ED4(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = &v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  if (!(*(void *)v3 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        uint64_t v8 = (char *)MEMORY[0x253325220](i, v4);
      }
      else {
        uint64_t v8 = (char *)*(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      uint64_t v10 = &v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        uint64_t v11 = *((void *)v10 + 1);
        uint64_t ObjectType = swift_getObjectType();
        v15[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v15[4] = &off_26FF86DF8;
        v15[0] = v2;
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v11 + 16))(a1, v15, ObjectType, v11);
        id v13 = v2;
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v15);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D2EA0C4(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = &v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  if (!(*(void *)v3 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        uint64_t v8 = (char *)MEMORY[0x253325220](i, v4);
      }
      else {
        uint64_t v8 = (char *)*(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      uint64_t v10 = &v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v8[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        uint64_t v11 = *((void *)v10 + 1);
        uint64_t ObjectType = swift_getObjectType();
        v15[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v15[4] = &off_26FF86DF8;
        v15[0] = v2;
        (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v11 + 24))(a1, v15, ObjectType, v11);
        id v13 = v2;
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v15);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D2EA2B4(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_25:
    swift_once();
    goto LABEL_6;
  }
  if (a1 >= 5) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = a1;
  }
  uint64_t v25 = v2;
  v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizerState] = v2;
  if (qword_2698602B0 != -1) {
    goto LABEL_25;
  }
LABEL_6:
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
  uint64_t v4 = v1;
  uint64_t v5 = sub_24D39C930();
  os_log_type_t v6 = sub_24D39CDF0();
  objc_super v26 = v4;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v27[0] = v9;
    *(_DWORD *)uint64_t v7 = 138412546;
    uint64_t v28 = (uint64_t)v4;
    uint64_t v10 = v4;
    sub_24D39D070();
    *uint64_t v8 = v4;

    *(_WORD *)(v7 + 12) = 2080;
    unint64_t v11 = 0xE700000000000000;
    uint64_t v12 = 0x6E776F6E6B6E75;
    switch((char)v25)
    {
      case 1:
        unint64_t v11 = 0xE900000000000079;
        uint64_t v12 = 0x6461657220746F6ELL;
        break;
      case 2:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x7964616572;
        break;
      case 3:
        unint64_t v11 = 0xE500000000000000;
        uint64_t v12 = 0x726F727265;
        break;
      case 4:
        uint64_t v12 = 0x666F206574617473;
        unint64_t v11 = 0xE900000000000066;
        break;
      default:
        break;
    }
    uint64_t v28 = sub_24D2B8328(v12, v11, v27);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v5, v6, "ðŸ§­ FMR1PrxContxt%@: %s for ranging", (uint8_t *)v7, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v9, -1, -1);
    MEMORY[0x253326010](v7, -1, -1);
  }
  else
  {
  }
  sub_24D2EF408();
  id v13 = &v4[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v14 = *(void *)v13;
  if (*(void *)v13 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_24D39D2D0();
    if (!v15) {
      return swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v15) {
      return swift_bridgeObjectRelease_n();
    }
  }
  if (v15 < 1)
  {
    __break(1u);
    JUMPOUT(0x24D2EA6D4);
  }
  for (uint64_t i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0) {
      uint64_t v17 = (char *)MEMORY[0x253325220](i, v14);
    }
    else {
      uint64_t v17 = (char *)*(id *)(v14 + 8 * i + 32);
    }
    uint64_t v18 = v17;
    uint64_t v19 = &v17[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
    if (MEMORY[0x253326120](&v17[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
    {
      uint64_t v20 = *((void *)v19 + 1);
      uint64_t ObjectType = swift_getObjectType();
      v27[3] = type metadata accessor for FMR1ItemLocalizerContext();
      v27[4] = (uint64_t)&off_26FF86DF8;
      v27[0] = (uint64_t)v26;
      uint64_t v22 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v20 + 32);
      id v23 = v26;
      v22(v25, v27, ObjectType, v20);
      swift_unknownObjectRelease();
      sub_24D2B6E58((uint64_t)v27);
    }
  }
  return swift_bridgeObjectRelease_n();
}

void sub_24D2EA73C(uint64_t a1)
{
  if (a1 == 3)
  {
    char v3 = 3;
    uint64_t v2 = &OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity;
    int v4 = 3;
  }
  else if (a1 == 2)
  {
    char v3 = 0;
    int v4 = 2;
    v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity] = 2;
    uint64_t v2 = &OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_stopAsked;
  }
  else
  {
    uint64_t v2 = &OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity;
    if (a1 != 1) {
      uint64_t v2 = &OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity;
    }
    char v3 = a1 == 1;
    int v4 = a1 == 1;
  }
  v1[*v2] = v3;
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24D39C950();
  sub_24D2B508C(v5, (uint64_t)qword_269869FD0);
  os_log_type_t v6 = v1;
  uint64_t v7 = sub_24D39C930();
  os_log_type_t v8 = sub_24D39CDF0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = v16;
    *(_DWORD *)uint64_t v9 = 138412802;
    unint64_t v11 = v6;
    sub_24D39D070();
    *uint64_t v10 = v6;

    *(_WORD *)(v9 + 12) = 2080;
    if (v11[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly]) {
      uint64_t v12 = 0x676E69676E617228;
    }
    else {
      uint64_t v12 = 0x7A696C61636F6C28;
    }
    if (v11[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly]) {
      unint64_t v13 = 0xEE0029796C6E6F20;
    }
    else {
      unint64_t v13 = 0xEB00000000297265;
    }
    sub_24D2B8328(v12, v13, &v17);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2080;
    unint64_t v14 = 0xE700000000000000;
    uint64_t v15 = 0x6E776F6E6B6E75;
    switch(v4)
    {
      case 1:
        unint64_t v14 = 0xEA00000000007472;
        uint64_t v15 = 0x617473206C6C6977;
        break;
      case 2:
        uint64_t v15 = 0x646570706F7473;
        break;
      case 3:
        unint64_t v14 = 0xEB00000000646574;
        uint64_t v15 = 0x6164696C61766E69;
        break;
      default:
        break;
    }
    sub_24D2B8328(v15, v14, &v17);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v7, v8, "ðŸ§­ FMR1PrxContxt%@: activity %s is '%s'", (uint8_t *)v9, 0x20u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v16, -1, -1);
    MEMORY[0x253326010](v9, -1, -1);
  }
  else
  {
  }
  sub_24D2EF408();
}

uint64_t sub_24D2EAB54(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_47:
    swift_once();
    goto LABEL_13;
  }
  unsigned int v29 = 2;
  switch(a1)
  {
    case 1:
      unsigned int v29 = 1;
      v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState] = 1;
      break;
    case 2:
      break;
    case 3:
      int v2 = 3;
      goto LABEL_11;
    case 4:
      int v2 = 4;
      goto LABEL_11;
    case 5:
      int v2 = 5;
      goto LABEL_11;
    case 6:
      int v2 = 6;
      goto LABEL_11;
    case 7:
      int v2 = 7;
      goto LABEL_11;
    case 8:
      int v2 = 8;
LABEL_11:
      unsigned int v29 = v2;
      break;
    default:
      unsigned int v29 = 0;
      break;
  }
  if (qword_2698602B0 != -1) {
    goto LABEL_47;
  }
LABEL_13:
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
  int v4 = v1;
  uint64_t v5 = sub_24D39C930();
  os_log_type_t v6 = sub_24D39CDF0();
  uint64_t v30 = v4;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v31[0] = v9;
    *(_DWORD *)uint64_t v7 = 138412802;
    uint64_t v32 = (uint64_t)v4;
    uint64_t v10 = v4;
    sub_24D39D070();
    *os_log_type_t v8 = v4;

    *(_WORD *)(v7 + 12) = 2080;
    unint64_t v11 = 0xE700000000000000;
    unint64_t v12 = 0x6E776F6E6B6E75;
    switch(v29)
    {
      case 1u:
        unint64_t v11 = 0xE800000000000000;
        unint64_t v12 = 0x656C6261646E6966;
        break;
      case 2u:
        unint64_t v12 = 0x63656E6E6F636572;
        unint64_t v11 = 0xEC000000676E6974;
        break;
      case 3u:
        unint64_t v12 = 0x63656E6E6F636572;
        unint64_t v11 = 0xEB00000000646574;
        break;
      case 4u:
        uint64_t v13 = 0x657472617473;
        goto LABEL_21;
      case 5u:
        uint64_t v13 = 0x6570706F7473;
LABEL_21:
        unint64_t v12 = v13 & 0xFFFFFFFFFFFFLL | 0x4D64000000000000;
        unint64_t v11 = 0xED0000676E69766FLL;
        break;
      case 6u:
        unint64_t v11 = 0xE500000000000000;
        unint64_t v12 = 0x6573556E69;
        break;
      case 7u:
        unint64_t v12 = 0xD00000000000001ELL;
        unint64_t v11 = 0x800000024D3A4DE0;
        break;
      case 8u:
        unint64_t v11 = 0x800000024D3A4E00;
        unint64_t v12 = 0xD000000000000014;
        break;
      default:
        break;
    }
    uint64_t v32 = sub_24D2B8328(v12, v11, v31);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2080;
    unint64_t v14 = 0xE700000000000000;
    unint64_t v15 = 0x6E776F6E6B6E75;
    switch(v10[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState])
    {
      case 1:
        unint64_t v14 = 0xE800000000000000;
        unint64_t v15 = 0x656C6261646E6966;
        break;
      case 2:
        unint64_t v15 = 0x63656E6E6F636572;
        unint64_t v14 = 0xEC000000676E6974;
        break;
      case 3:
        unint64_t v15 = 0x63656E6E6F636572;
        unint64_t v14 = 0xEB00000000646574;
        break;
      case 4:
        uint64_t v16 = 0x657472617473;
        goto LABEL_31;
      case 5:
        uint64_t v16 = 0x6570706F7473;
LABEL_31:
        unint64_t v15 = v16 & 0xFFFFFFFFFFFFLL | 0x4D64000000000000;
        unint64_t v14 = 0xED0000676E69766FLL;
        break;
      case 6:
        unint64_t v14 = 0xE500000000000000;
        unint64_t v15 = 0x6573556E69;
        break;
      case 7:
        unint64_t v15 = 0xD00000000000001ELL;
        unint64_t v14 = 0x800000024D3A4DE0;
        break;
      case 8:
        unint64_t v14 = 0x800000024D3A4E00;
        unint64_t v15 = 0xD000000000000014;
        break;
      default:
        break;
    }
    uint64_t v32 = sub_24D2B8328(v15, v14, v31);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v5, v6, "ðŸ§­ FMR1PrxContxt%@: is %s (active: %s)", (uint8_t *)v7, 0x20u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v9, -1, -1);
    MEMORY[0x253326010](v7, -1, -1);
  }
  else
  {
  }
  sub_24D2EF408();
  uint64_t v17 = &v4[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v18 = *(void *)v17;
  if (*(void *)v17 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_24D39D2D0();
    if (!v19) {
      return swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v19) {
      return swift_bridgeObjectRelease_n();
    }
  }
  if (v19 < 1)
  {
    __break(1u);
    JUMPOUT(0x24D2EB1D4);
  }
  for (uint64_t i = 0; i != v19; ++i)
  {
    if ((v18 & 0xC000000000000001) != 0) {
      unint64_t v21 = (char *)MEMORY[0x253325220](i, v18);
    }
    else {
      unint64_t v21 = (char *)*(id *)(v18 + 8 * i + 32);
    }
    uint64_t v22 = v21;
    id v23 = &v21[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
    if (MEMORY[0x253326120](&v21[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
    {
      uint64_t v24 = *((void *)v23 + 1);
      uint64_t ObjectType = swift_getObjectType();
      v31[3] = type metadata accessor for FMR1ItemLocalizerContext();
      v31[4] = (uint64_t)&off_26FF86DF8;
      v31[0] = (uint64_t)v30;
      objc_super v26 = *(void (**)(void, uint64_t *, uint64_t, uint64_t))(v24 + 40);
      id v27 = v30;
      v26(v29, v31, ObjectType, v24);
      swift_unknownObjectRelease();
      sub_24D2B6E58((uint64_t)v31);
    }
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_24D2EB294(id a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_updateRangeEstimateLogCounter;
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_updateRangeEstimateLogCounter];
  if (0xEEEEEEEEEEEEEEEFLL * v6 + 0x888888888888888 <= 0x1111111111111110)
  {
    uint64_t v7 = &selRef_lightEstimate;
    objc_msgSend(a1, sel_range);
    uint64_t v9 = &v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_lastLoggedRangeEstimate];
    float v10 = *(float *)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_lastLoggedRangeEstimate];
    if (v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_lastLoggedRangeEstimate + 4]) {
      float v10 = 3.4028e38;
    }
    if (vabds_f32(v8, v10) >= 0.01)
    {
      sub_24D2B7450((uint64_t *)&unk_269861860);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_24D3A10C0;
      *(void *)(v11 + 56) = type metadata accessor for FMR1ItemLocalizerContext();
      *(void *)(v11 + 64) = sub_24D2F6148(&qword_269861610, v12, (void (*)(uint64_t))type metadata accessor for FMR1ItemLocalizerContext);
      *(void *)(v11 + 32) = v3;
      uint64_t v13 = v3;
      objc_msgSend(a1, sel_range);
      uint64_t v14 = MEMORY[0x263F8D648];
      *(void *)(v11 + 96) = MEMORY[0x263F8D5C8];
      *(void *)(v11 + 104) = v14;
      *(_DWORD *)(v11 + 72) = v15;
      uint64_t v16 = v13[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState];
      uint64_t v17 = MEMORY[0x263F8D750];
      *(void *)(v11 + 136) = MEMORY[0x263F8D6C8];
      *(void *)(v11 + 144) = v17;
      *(void *)(v11 + 112) = v16;
      uint64_t v18 = sub_24D39CB00();
      unint64_t v20 = v19;
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_24D39C950();
      sub_24D2B508C(v21, (uint64_t)qword_269869FD0);
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_24D39C930();
      os_log_type_t v23 = sub_24D39CDF0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = v18;
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136315138;
        unint64_t v2 = (unint64_t)(v24 + 12);
        v46[0] = v25;
        swift_bridgeObjectRetain();
        v46[5] = sub_24D2B8328(v43, v20, v46);
        sub_24D39D070();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24D2B1000, v22, v23, "%s", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x253326010](v25, -1, -1);
        objc_super v26 = v24;
        uint64_t v7 = &selRef_lightEstimate;
        MEMORY[0x253326010](v26, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    objc_msgSend(a1, v7[52], v43);
    *(_DWORD *)uint64_t v9 = v27;
    v9[4] = 0;
    uint64_t v6 = *(void *)&v3[v5];
  }
  BOOL v28 = __OFADD__(v6, 1);
  uint64_t v29 = v6 + 1;
  if (v28) {
    goto LABEL_24;
  }
  *(void *)&v3[v5] = v29;
  uint64_t v30 = &v3[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  unint64_t v2 = *(void *)v30;
  uint64_t v44 = v3;
  id v45 = a1;
  if (*(void *)v30 >> 62) {
    goto LABEL_25;
  }
  uint64_t v31 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v31; uint64_t v31 = sub_24D39D2D0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      BOOL v33 = (v2 & 0xC000000000000001) != 0
          ? (char *)MEMORY[0x253325220](i - 4, v2)
          : (char *)*(id *)(v2 + 8 * i);
      uint64_t v34 = v33;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v35 = &v33[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v33[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        uint64_t v36 = *((void *)v35 + 1);
        uint64_t ObjectType = swift_getObjectType();
        objc_msgSend(v45, sel_range);
        float v39 = v38;
        v46[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v46[4] = (uint64_t)&off_26FF86DF8;
        v46[0] = (uint64_t)v44;
        os_log_t v40 = *(void (**)(uint64_t *, uint64_t, uint64_t, float))(v36 + 48);
        id v41 = v44;
        v40(v46, ObjectType, v36, v39);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v46);
      }

      if (i - 3 == v31) {
        return swift_bridgeObjectRelease_n();
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain_n();
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_24D2EB79C(uint64_t a1)
{
  unint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        uint64_t v7 = (char *)MEMORY[0x253325220](i, v3);
      }
      else {
        uint64_t v7 = (char *)*(id *)(v3 + 8 * i + 32);
      }
      float v8 = v7;
      uint64_t v9 = &v7[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v7[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        uint64_t v10 = *((void *)v9 + 1);
        uint64_t ObjectType = swift_getObjectType();
        v16[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v16[4] = &off_26FF86DF8;
        v16[0] = v15;
        uint64_t v12 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v10 + 56);
        id v13 = v15;
        v12(a1, v16, ObjectType, v10);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v16);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D2EB990(uint64_t a1)
{
  unint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        uint64_t v7 = (char *)MEMORY[0x253325220](i, v3);
      }
      else {
        uint64_t v7 = (char *)*(id *)(v3 + 8 * i + 32);
      }
      float v8 = v7;
      uint64_t v9 = &v7[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v7[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        uint64_t v10 = *((void *)v9 + 1);
        uint64_t ObjectType = swift_getObjectType();
        v16[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v16[4] = &off_26FF86DF8;
        v16[0] = v15;
        uint64_t v12 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v10 + 64);
        id v13 = v15;
        v12(a1, v16, ObjectType, v10);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v16);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D2EBB80(void *a1)
{
  unsigned int v2 = objc_msgSend(a1, sel_BOOLValue);
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
  uint64_t v4 = v1;
  uint64_t v5 = sub_24D39C930();
  os_log_type_t v6 = sub_24D39CDF0();
  objc_super v26 = v4;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    float v8 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v27[0] = v24;
    *(_DWORD *)uint64_t v7 = 138412546;
    uint64_t v28 = (uint64_t)v4;
    uint64_t v9 = v4;
    sub_24D39D070();
    *float v8 = v4;

    *(_WORD *)(v7 + 12) = 2080;
    if (v2) {
      uint64_t v10 = 1702195828;
    }
    else {
      uint64_t v10 = 0x65736C6166;
    }
    if (v2) {
      unint64_t v11 = 0xE400000000000000;
    }
    else {
      unint64_t v11 = 0xE500000000000000;
    }
    uint64_t v28 = sub_24D2B8328(v10, v11, v27);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v5, v6, "ðŸ§­ FMR1PrxContxt%@: path-is-degenerate is %s for item", (uint8_t *)v7, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v24, -1, -1);
    MEMORY[0x253326010](v7, -1, -1);
  }
  else
  {
  }
  uint64_t v12 = &v4[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v13 = *(void *)v12;
  if (!(*(void *)v12 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v14) {
      goto LABEL_14;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v14 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_14:
  if (v14 >= 1)
  {
    for (uint64_t i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0) {
        uint64_t v17 = (char *)MEMORY[0x253325220](i, v13);
      }
      else {
        uint64_t v17 = (char *)*(id *)(v13 + 8 * i + 32);
      }
      uint64_t v18 = v17;
      unint64_t v19 = &v17[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v17[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        uint64_t v20 = *((void *)v19 + 1);
        uint64_t ObjectType = swift_getObjectType();
        v27[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v27[4] = (uint64_t)&off_26FF86DF8;
        v27[0] = (uint64_t)v26;
        uint64_t v22 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v20 + 72);
        id v23 = v26;
        v22(a1, v27, ObjectType, v20);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v27);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D2EBF84(void *a1)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_error];
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_error] = a1;
  id v4 = a1;

  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24D39C950();
  sub_24D2B508C(v5, (uint64_t)qword_269869FD0);
  id v6 = a1;
  uint64_t v7 = v1;
  id v8 = a1;
  uint64_t v9 = v7;
  uint64_t v10 = sub_24D39C930();
  os_log_type_t v11 = sub_24D39CDF0();
  uint64_t v30 = a1;
  uint64_t v31 = v9;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    v32[0] = v29;
    *(_DWORD *)uint64_t v12 = 138412546;
    uint64_t v33 = (uint64_t)v9;
    uint64_t v14 = v9;
    sub_24D39D070();
    *uint64_t v13 = v9;

    *(_WORD *)(v12 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v15 = sub_24D39D520();
    uint64_t v33 = sub_24D2B8328(v15, v16, v32);
    sub_24D39D070();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24D2B1000, v10, v11, "ðŸ§­ FMR1PrxContxt%@: item localizer failed (%s)", (uint8_t *)v12, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v29, -1, -1);
    MEMORY[0x253326010](v12, -1, -1);
  }
  else
  {
  }
  sub_24D2EF408();
  uint64_t v17 = &v9[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v18 = *(void *)v17;
  if (!(*(void *)v17 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v19) {
      goto LABEL_8;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v19 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_8:
  if (v19 >= 1)
  {
    for (uint64_t i = 0; i != v19; ++i)
    {
      if ((v18 & 0xC000000000000001) != 0) {
        uint64_t v22 = (char *)MEMORY[0x253325220](i, v18);
      }
      else {
        uint64_t v22 = (char *)*(id *)(v18 + 8 * i + 32);
      }
      id v23 = v22;
      uint64_t v24 = &v22[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
      if (MEMORY[0x253326120](&v22[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
      {
        uint64_t v25 = *((void *)v24 + 1);
        uint64_t ObjectType = swift_getObjectType();
        void v32[3] = type metadata accessor for FMR1ItemLocalizerContext();
        v32[4] = (uint64_t)&off_26FF86DF8;
        v32[0] = (uint64_t)v31;
        int v27 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v25 + 80);
        id v28 = v31;
        v27(v30, v32, ObjectType, v25);
        swift_unknownObjectRelease();
        sub_24D2B6E58((uint64_t)v32);
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_24D2EC3AC()
{
  uint64_t v1 = v0;
  unsigned int v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer];
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v3, sel_setDelegate_, 0);
    uint64_t v4 = sub_24D39D600();
    unint64_t v6 = v5;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_24D39C950();
    sub_24D2B508C(v7, (uint64_t)qword_269869FD0);
    id v8 = v0;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_24D39C930();
    os_log_type_t v10 = sub_24D39CDF0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v22 = v4;
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v25 = v23;
      *(_DWORD *)uint64_t v11 = 138412546;
      uint64_t v24 = v3;
      uint64_t v13 = v8;
      sub_24D39D070();
      *uint64_t v12 = v8;

      *(_WORD *)(v11 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_24D34315C(9, v22, v6);
      swift_bridgeObjectRelease();
      sub_24D2C3E44();
      sub_24D39CB60();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24D39CB70();
      uint64_t v3 = v24;
      swift_bridgeObjectRelease();
      sub_24D2B8328(7876668, 0xE300000000000000, &v25);
      sub_24D39D070();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D2B1000, v9, v10, "ðŸ§­ FMR1PrxContxt%@: released item localizer <%s> and reset state to unknown", (uint8_t *)v11, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v12, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x253326010](v23, -1, -1);
      MEMORY[0x253326010](v11, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_24D2F5040(0);
    uint64_t v20 = *(void (**)(uint64_t))&v8[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_decrementItemLocalizerHandler];
    if (v20)
    {
      uint64_t v21 = swift_retain();
      v20(v21);

      sub_24D2E44C8((uint64_t)v20);
      goto LABEL_15;
    }
LABEL_14:

    goto LABEL_15;
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_24D39C950();
  sub_24D2B508C(v14, (uint64_t)qword_269869FD0);
  uint64_t v3 = v0;
  uint64_t v15 = sub_24D39C930();
  os_log_type_t v16 = sub_24D39CDF0();
  if (!os_log_type_enabled(v15, v16))
  {

    goto LABEL_14;
  }
  uint64_t v17 = (uint8_t *)swift_slowAlloc();
  uint64_t v18 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v17 = 138412290;
  uint64_t v19 = v3;
  sub_24D39D070();
  *uint64_t v18 = v3;

  _os_log_impl(&dword_24D2B1000, v15, v16, "ðŸ§­ FMR1PrxContxt%@: reset item localizer state to unknown", v17, 0xCu);
  sub_24D2B7450(&qword_269861308);
  swift_arrayDestroy();
  MEMORY[0x253326010](v18, -1, -1);
  MEMORY[0x253326010](v17, -1, -1);

LABEL_15:
  v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizerState] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_hasCalledConfigure] = 0;
}

uint64_t sub_24D2EC8A4()
{
  uint64_t v15 = sub_24D39CA10();
  uint64_t v0 = *(void *)(v15 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v15);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  unint64_t v5 = (char *)v14 - v4;
  uint64_t v6 = sub_24D39C990();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_24D2F5BFC;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D32194C;
  aBlock[3] = &unk_26FF86EE0;
  _Block_copy(aBlock);
  uint64_t v16 = MEMORY[0x263F8EE78];
  sub_24D2F6148((unint64_t *)&qword_269860EE0, 255, MEMORY[0x263F8F030]);
  swift_retain();
  sub_24D2B7450((uint64_t *)&unk_2698610D0);
  sub_24D2C7144((unint64_t *)&qword_269860EF0, (uint64_t *)&unk_2698610D0);
  sub_24D39D0E0();
  sub_24D39CA40();
  swift_allocObject();
  uint64_t v8 = sub_24D39CA20();
  swift_release();
  swift_release();
  *(void *)(v14[1] + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem) = v8;
  swift_retain();
  swift_release();
  sub_24D2C8328();
  uint64_t v9 = (void *)sub_24D39CE90();
  sub_24D39CA00();
  MEMORY[0x253324A90](v3, 29.0);
  os_log_type_t v10 = *(void (**)(char *, uint64_t))(v0 + 8);
  uint64_t v11 = v3;
  uint64_t v12 = v15;
  v10(v11, v15);
  sub_24D39CE60();
  swift_release();

  return ((uint64_t (*)(char *, uint64_t))v10)(v5, v12);
}

void sub_24D2ECBC0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x253326120](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24D39C950();
    sub_24D2B508C(v4, (uint64_t)qword_269869FD0);
    unint64_t v5 = v3;
    uint64_t v6 = sub_24D39C930();
    os_log_type_t v7 = sub_24D39CDF0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412546;
      os_log_type_t v10 = v5;
      sub_24D39D070();
      *uint64_t v9 = v3;

      *(_WORD *)(v8 + 12) = 2048;
      sub_24D39D070();
      _os_log_impl(&dword_24D2B1000, v6, v7, "ðŸ§­ FMR1PrxContxt%@: releasing item localizer (unconfiguring) since not started within %f sec", (uint8_t *)v8, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v9, -1, -1);
      MEMORY[0x253326010](v8, -1, -1);
    }
    else
    {

      uint64_t v6 = v5;
    }

    sub_24D2EC3AC(v11);
  }
}

void sub_24D2ECDAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24D39C990();
  uint64_t v3 = *(void **)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24D39C9D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24D39C9F0();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v79 - v15;
  if (v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_applicationIsInBackground] == 1)
  {
    uint64_t v80 = v14;
    uint64_t v81 = v13;
    uint64_t v87 = v2;
    char v88 = v12;
    uint64_t v85 = v6;
    uint64_t v86 = v3;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    unsigned __int16 v82 = v9;
    uint64_t v83 = v7;
    unint64_t v84 = v5;
    uint64_t v17 = sub_24D39C950();
    sub_24D2B508C(v17, (uint64_t)qword_269869FD0);
    uint64_t v18 = v1;
    uint64_t v19 = sub_24D39C930();
    os_log_type_t v20 = sub_24D39CDF0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      uint64_t aBlock = (uint64_t)v18;
      uint64_t v23 = v18;
      sub_24D39D070();
      *uint64_t v22 = v18;

      _os_log_impl(&dword_24D2B1000, v19, v20, "ðŸ§­ FMR1PrxContxt%@: entering background", v21, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v22, -1, -1);
      MEMORY[0x253326010](v21, -1, -1);
    }
    else
    {
    }
    id v34 = objc_msgSend(self, sel_sharedApplication);
    uint64_t v35 = (void *)sub_24D39CAC0();
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v18;
    uint64_t v93 = sub_24D2F5788;
    uint64_t v94 = v36;
    uint64_t aBlock = MEMORY[0x263EF8330];
    unint64_t v90 = 1107296256;
    uint64_t v91 = sub_24D32194C;
    uint64_t v92 = &unk_26FF86E40;
    uint64_t v37 = _Block_copy(&aBlock);
    float v38 = v18;
    swift_release();
    id v39 = objc_msgSend(v34, sel_beginBackgroundTaskWithName_expirationHandler_, v35, v37);
    _Block_release(v37);

    os_log_t v40 = &v38[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID];
    *(void *)os_log_t v40 = v39;
    v40[8] = 0;
    sub_24D2EC3AC();
    sub_24D2C8328();
    id v41 = (void *)sub_24D39CE90();
    uint64_t v42 = v80;
    sub_24D39C9E0();
    MEMORY[0x253324A80](v42, 3.0);
    uint64_t v81 = *(void *)(v81 + 8);
    ((void (*)(uint64_t, char *))v81)(v42, v88);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v38;
    uint64_t v93 = sub_24D2F57C4;
    uint64_t v94 = v43;
    uint64_t aBlock = MEMORY[0x263EF8330];
    unint64_t v90 = 1107296256;
    uint64_t v91 = sub_24D32194C;
    uint64_t v92 = &unk_26FF86E90;
    uint64_t v44 = _Block_copy(&aBlock);
    id v45 = v38;
    swift_release();
    uint64_t v46 = v82;
    sub_24D39C9B0();
    uint64_t aBlock = MEMORY[0x263F8EE78];
    sub_24D2F6148((unint64_t *)&qword_269860EE0, 255, MEMORY[0x263F8F030]);
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C7144((unint64_t *)&qword_269860EF0, (uint64_t *)&unk_2698610D0);
    id v47 = v84;
    uint64_t v48 = v87;
    sub_24D39D0E0();
    MEMORY[0x253324EA0](v16, v46, v47, v44);
    _Block_release(v44);

    ((void (*)(char *, uint64_t))v86[1])(v47, v48);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v46, v85);
    ((void (*)(char *, char *))v81)(v16, v88);
  }
  else
  {
    uint64_t v24 = &v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID];
    uint64_t v25 = *MEMORY[0x263F833E0];
    if ((v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID + 8] & 1) == 0)
    {
      uint64_t v26 = *(void *)v24;
      if (*(void *)v24 != v25)
      {
        id v27 = objc_msgSend(self, sel_sharedApplication);
        objc_msgSend(v27, sel_endBackgroundTask_, v26);
      }
    }
    *(void *)uint64_t v24 = v25;
    v24[8] = 0;
    if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer])
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_24D39C950();
      sub_24D2B508C(v28, (uint64_t)qword_269869FD0);
      char v88 = v1;
      uint64_t v29 = sub_24D39C930();
      os_log_type_t v30 = sub_24D39CDF0();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v32 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 138412290;
        uint64_t aBlock = (uint64_t)v88;
        uint64_t v33 = v88;
        sub_24D39D070();
        void *v32 = v88;

        _os_log_impl(&dword_24D2B1000, v29, v30, "ðŸ§­ FMR1PrxContxt%@: entering foreground", v31, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v32, -1, -1);
        MEMORY[0x253326010](v31, -1, -1);
      }
      else
      {

        uint64_t v75 = v88;
      }
    }
    else
    {
      sub_24D2C8328();
      os_log_type_t v49 = (void *)sub_24D39CE90();
      id v50 = objc_allocWithZone(MEMORY[0x263F62598]);
      uint64_t v51 = v1;
      id v52 = objc_msgSend(v50, sel_initWithDelegate_queue_, v51, v49);

      uint64_t aBlock = (uint64_t)v52;
      uint64_t v53 = sub_24D39D600();
      unint64_t v55 = v54;
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_24D39C950();
      sub_24D2B508C(v56, (uint64_t)qword_269869FD0);
      unint64_t v57 = v51;
      swift_bridgeObjectRetain();
      unint64_t v58 = sub_24D39C930();
      os_log_type_t v59 = sub_24D39CDF0();
      int v60 = v59;
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v61 = swift_slowAlloc();
        uint64_t v85 = v53;
        uint64_t v62 = v61;
        id v63 = v52;
        int v64 = (void *)swift_slowAlloc();
        uint64_t v86 = v64;
        char v88 = (char *)swift_slowAlloc();
        uint64_t aBlock = (uint64_t)v57;
        v97[0] = v88;
        *(_DWORD *)uint64_t v62 = 138412546;
        LODWORD(v87) = v60;
        unint64_t v65 = v57;
        sub_24D39D070();
        *int v64 = v57;
        id v52 = v63;

        *(_WORD *)(v62 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v66 = sub_24D34315C(9, v85, v55);
        unint64_t v68 = v67;
        uint64_t v70 = v69;
        unsigned int v72 = v71;
        swift_bridgeObjectRelease();
        uint64_t v95 = 7876668;
        unint64_t v96 = 0xE300000000000000;
        uint64_t aBlock = v66;
        unint64_t v90 = v68;
        uint64_t v91 = v70;
        uint64_t v92 = v72;
        sub_24D2C3E44();
        sub_24D39CB60();
        swift_bridgeObjectRelease();
        uint64_t aBlock = v95;
        unint64_t v90 = v96;
        swift_bridgeObjectRetain();
        sub_24D39CB70();
        swift_bridgeObjectRelease();
        uint64_t aBlock = sub_24D2B8328(aBlock, v90, (uint64_t *)v97);
        sub_24D39D070();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D2B1000, v58, (os_log_type_t)v87, "ðŸ§­ FMR1PrxContxt%@: entering foreground, created item localizer <%s> and will reconfigure", (uint8_t *)v62, 0x16u);
        sub_24D2B7450(&qword_269861308);
        unint64_t v73 = v86;
        swift_arrayDestroy();
        MEMORY[0x253326010](v73, -1, -1);
        uint64_t v74 = v88;
        swift_arrayDestroy();
        MEMORY[0x253326010](v74, -1, -1);
        MEMORY[0x253326010](v62, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v76 = *(void (**)(uint64_t))&v57[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_incrementItemLocalizerHandler];
      if (v76)
      {
        uint64_t v77 = swift_retain();
        v76(v77);
        sub_24D2E44C8((uint64_t)v76);
      }
      id v78 = v52;
      sub_24D2F5040(v52);
    }
  }
}

void sub_24D2ED96C(unsigned char *a1, const char *a2)
{
  uint64_t v4 = &a1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID];
  uint64_t v5 = *MEMORY[0x263F833E0];
  if ((a1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_backgroundTaskID + 8] & 1) == 0)
  {
    uint64_t v6 = *(void *)v4;
    if (*(void *)v4 != v5)
    {
      id v7 = objc_msgSend(self, sel_sharedApplication);
      objc_msgSend(v7, sel_endBackgroundTask_, v6);
    }
  }
  *(void *)uint64_t v4 = v5;
  v4[8] = 0;
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_24D39C950();
  sub_24D2B508C(v8, (uint64_t)qword_269869FD0);
  uint64_t v14 = a1;
  uint64_t v9 = sub_24D39C930();
  os_log_type_t v10 = sub_24D39CDF0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    uint64_t v13 = v14;
    sub_24D39D070();
    *uint64_t v12 = v14;

    _os_log_impl(&dword_24D2B1000, v9, v10, a2, v11, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v12, -1, -1);
    MEMORY[0x253326010](v11, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_24D2EDBB4(void *a1)
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
  id v4 = a1;
  id v5 = v1;
  id v6 = v4;
  id v7 = (char *)v5;
  uint64_t v8 = sub_24D39C930();
  os_log_type_t v9 = sub_24D39CDF0();
  os_log_type_t v10 = (void *)&unk_269869000;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v42[0] = v41;
    *(_DWORD *)uint64_t v11 = 138412802;
    uint64_t v13 = v7;
    sub_24D39D070();
    *uint64_t v12 = v7;

    *(_WORD *)(v11 + 12) = 2112;
    uint64_t v14 = (char *)v6;
    sub_24D39D070();
    v12[1] = v6;

    *(_WORD *)(v11 + 22) = 2080;
    uint64_t v15 = &v14[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
    if (MEMORY[0x253326120](&v14[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber]))
    {
      uint64_t v16 = *((void *)v15 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16);
      unint64_t v20 = v19;
      swift_unknownObjectRelease();
    }
    else
    {
      unint64_t v20 = 0xE100000000000000;
      uint64_t v18 = 63;
    }
    sub_24D2B8328(v18, v20, v42);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v8, v9, "ðŸ§­ FMR1PrxContxt%@: subscribing %@ for %s", (uint8_t *)v11, 0x20u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v41, -1, -1);
    MEMORY[0x253326010](v11, -1, -1);

    os_log_type_t v10 = &unk_269869000;
  }
  else
  {
  }
  uint64_t v21 = &v7[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  uint64_t v22 = (char *)v6;
  MEMORY[0x253324C20]();
  if (*(void *)((*(void *)v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v21 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_24D39CC40();
  sub_24D39CC60();
  sub_24D39CC30();
  swift_endAccess();
  uint64_t v23 = &v22[v10[510]];
  if (MEMORY[0x253326120](v23))
  {
    uint64_t v24 = *((void *)v23 + 1);
    uint64_t v25 = swift_getObjectType();
    uint64_t v26 = v7[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizerState];
    uint64_t v43 = type metadata accessor for FMR1ItemLocalizerContext();
    uint64_t v44 = &off_26FF86DF8;
    v42[0] = (uint64_t)v7;
    id v27 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v24 + 32);
    uint64_t v28 = v7;
    v27(v26, v42, v25, v24);
    swift_unknownObjectRelease();
    sub_24D2B6E58((uint64_t)v42);
  }
  uint64_t result = MEMORY[0x253326120](v23);
  if (result)
  {
    uint64_t v30 = *((void *)v23 + 1);
    uint64_t v31 = swift_getObjectType();
    uint64_t v32 = v7[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState];
    uint64_t v43 = type metadata accessor for FMR1ItemLocalizerContext();
    uint64_t v44 = &off_26FF86DF8;
    v42[0] = (uint64_t)v7;
    uint64_t v33 = *(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v30 + 40);
    id v34 = v7;
    v33(v32, v42, v31, v30);
    swift_unknownObjectRelease();
    uint64_t result = sub_24D2B6E58((uint64_t)v42);
  }
  uint64_t v35 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_error];
  if (v35)
  {
    uint64_t result = MEMORY[0x253326120](v23);
    if (result)
    {
      uint64_t v36 = *((void *)v23 + 1);
      uint64_t v37 = swift_getObjectType();
      uint64_t v43 = type metadata accessor for FMR1ItemLocalizerContext();
      uint64_t v44 = &off_26FF86DF8;
      v42[0] = (uint64_t)v7;
      float v38 = *(void (**)(void *, uint64_t *, uint64_t, uint64_t))(v36 + 80);
      id v39 = v7;
      id v40 = v35;
      v38(v35, v42, v37, v36);
      swift_unknownObjectRelease();

      return sub_24D2B6E58((uint64_t)v42);
    }
  }
  return result;
}

void sub_24D2EE078(void *a1)
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
  id v4 = v1;
  id v5 = a1;
  id v6 = (char *)v4;
  id v7 = v5;
  uint64_t v8 = sub_24D39C930();
  os_log_type_t v9 = sub_24D39CDF0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412546;
    uint64_t v12 = v6;
    sub_24D39D070();
    *uint64_t v11 = v6;

    *(_WORD *)(v10 + 12) = 2112;
    id v13 = v7;
    sub_24D39D070();
    v11[1] = v7;

    _os_log_impl(&dword_24D2B1000, v8, v9, "ðŸ§­ FMR1PrxContxt%@: unsubscribing %@", (uint8_t *)v10, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v11, -1, -1);
    MEMORY[0x253326010](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = (uint64_t *)&v6[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions];
  swift_beginAccess();
  id v15 = v7;
  int64_t v16 = sub_24D2F5DBC(v14, (uint64_t)v15);

  if ((unint64_t)*v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24D39D2D0();
    swift_bridgeObjectRelease();
    if (v17 >= v16) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17 >= v16)
    {
LABEL_8:
      sub_24D2F58B0(v16, v17, (void (*)(void))type metadata accessor for FMR1ProximityManagerSubscription);
      swift_endAccess();
      return;
    }
  }
  __break(1u);
}

void *sub_24D2EE324(char a1, void *a2)
{
  v53[1] = *(id *)MEMORY[0x263EF8340];
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity) == 1)
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24D39C950();
    sub_24D2B508C(v4, (uint64_t)qword_269869FD0);
    id v5 = v2;
    id v6 = sub_24D39C930();
    os_log_type_t v7 = sub_24D39CDF0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      os_log_type_t v9 = (void *)swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      v53[0] = v51;
      *(_DWORD *)uint64_t v8 = 138412546;
      char v10 = a1;
      id v11 = v5;
      sub_24D39D070();
      *os_log_type_t v9 = v5;

      *(_WORD *)(v8 + 12) = 2080;
      if (v10) {
        uint64_t v12 = 0x20676E69676E6172;
      }
      else {
        uint64_t v12 = 0x657A696C61636F6CLL;
      }
      if (v10) {
        unint64_t v13 = 0xEC000000796C6E6FLL;
      }
      else {
        unint64_t v13 = 0xE900000000000072;
      }
      sub_24D2B8328(v12, v13, (uint64_t *)v53);
      sub_24D39D070();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D2B1000, v6, v7, "ðŸ§­ FMR1PrxContxt%@: not starting (%s already started)", (uint8_t *)v8, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x253326010](v51, -1, -1);
      MEMORY[0x253326010](v8, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_24D39C950();
  sub_24D2B508C(v14, (uint64_t)qword_269869FD0);
  id v15 = v2;
  int64_t v16 = sub_24D39C930();
  os_log_type_t v17 = sub_24D39CDF0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    unint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v48 = (void *)swift_slowAlloc();
    v53[0] = v48;
    *(_DWORD *)uint64_t v18 = 138412546;
    unint64_t v20 = v15;
    sub_24D39D070();
    *unint64_t v19 = v15;

    *(_WORD *)(v18 + 12) = 2080;
    if (a1) {
      uint64_t v21 = 0x20676E69676E6172;
    }
    else {
      uint64_t v21 = 0x657A696C61636F6CLL;
    }
    if (a1) {
      unint64_t v22 = 0xEC000000796C6E6FLL;
    }
    else {
      unint64_t v22 = 0xE900000000000072;
    }
    sub_24D2B8328(v21, v22, (uint64_t *)v53);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v16, v17, "ðŸ§­ FMR1PrxContxt%@: starting %s", (uint8_t *)v18, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v48, -1, -1);
    MEMORY[0x253326010](v18, -1, -1);
  }
  else
  {
  }
  uint64_t v23 = *(void **)&v15[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer];
  if (!v23)
  {
LABEL_30:
    uint64_t v31 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem;
    if (*(void *)&v15[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem])
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)&v15[v31] = 0;
    swift_release();
    return 0;
  }
  if (a2)
  {
    id v24 = v23;
    id v25 = a2;
  }
  else
  {
    id v26 = objc_allocWithZone(MEMORY[0x263F62588]);
    id v27 = v23;
    id v25 = objc_msgSend(v26, sel_init);
  }
  v53[0] = 0;
  id v28 = a2;
  unsigned int v29 = objc_msgSend(v23, sel_startWithDevicePoseProvider_error_, v25, v53);

  if (v29)
  {
    id v30 = v53[0];
    goto LABEL_30;
  }
  char v52 = a1;
  id v32 = v53[0];
  uint64_t v33 = (void *)sub_24D39C710();

  swift_willThrow();
  id v34 = v15;
  id v35 = v33;
  uint64_t v36 = v34;
  id v37 = v33;
  float v38 = sub_24D39C930();
  os_log_type_t v39 = sub_24D39CDF0();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = (void *)swift_slowAlloc();
    os_log_type_t v49 = (void *)swift_slowAlloc();
    v53[0] = v49;
    *(_DWORD *)uint64_t v40 = 138412802;
    uint64_t v42 = v36;
    sub_24D39D070();
    *uint64_t v41 = v36;

    *(_WORD *)(v40 + 12) = 2080;
    if (v52) {
      uint64_t v43 = 0x20676E69676E6172;
    }
    else {
      uint64_t v43 = 0x657A696C61636F6CLL;
    }
    if (v52) {
      unint64_t v44 = 0xEC000000796C6E6FLL;
    }
    else {
      unint64_t v44 = 0xE900000000000072;
    }
    sub_24D2B8328(v43, v44, (uint64_t *)v53);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 22) = 2080;
    swift_getErrorValue();
    uint64_t v45 = sub_24D39D520();
    sub_24D2B8328(v45, v46, (uint64_t *)v53);
    sub_24D39D070();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24D2B1000, v38, v39, "ðŸ§­ FMR1PrxContxt%@: failed starting %s (%s)", (uint8_t *)v40, 0x20u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v41, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v49, -1, -1);
    MEMORY[0x253326010](v40, -1, -1);
  }
  else
  {
  }
  return v33;
}

void *sub_24D2EEB14(char a1)
{
  v50[1] = *(id *)MEMORY[0x263EF8340];
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity) != 1)
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_24D39C950();
    sub_24D2B508C(v14, (uint64_t)qword_269869FD0);
    id v4 = v1;
    id v5 = sub_24D39C930();
    os_log_type_t v6 = sub_24D39CDF0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      v50[0] = v48;
      *(_DWORD *)uint64_t v7 = 138412546;
      char v15 = a1;
      id v16 = v4;
      sub_24D39D070();
      *uint64_t v8 = v4;

      *(_WORD *)(v7 + 12) = 2080;
      if (v15) {
        uint64_t v17 = 0x20676E69676E6172;
      }
      else {
        uint64_t v17 = 0x657A696C61636F6CLL;
      }
      if (v15) {
        unint64_t v18 = 0xEC000000796C6E6FLL;
      }
      else {
        unint64_t v18 = 0xE900000000000072;
      }
      sub_24D2B8328(v17, v18, (uint64_t *)v50);
      sub_24D39D070();
      swift_bridgeObjectRelease();
      unint64_t v13 = "ðŸ§­ FMR1PrxContxt%@: not stopping (%s not running)";
      goto LABEL_23;
    }
LABEL_24:

    return 0;
  }
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_stopAsked))
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24D39C950();
    sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
    id v4 = v1;
    id v5 = sub_24D39C930();
    os_log_type_t v6 = sub_24D39CDF0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      uint64_t v48 = (void *)swift_slowAlloc();
      v50[0] = v48;
      *(_DWORD *)uint64_t v7 = 138412546;
      char v9 = a1;
      id v10 = v4;
      sub_24D39D070();
      *uint64_t v8 = v4;

      *(_WORD *)(v7 + 12) = 2080;
      if (v9) {
        uint64_t v11 = 0x20676E69676E6172;
      }
      else {
        uint64_t v11 = 0x657A696C61636F6CLL;
      }
      if (v9) {
        unint64_t v12 = 0xEC000000796C6E6FLL;
      }
      else {
        unint64_t v12 = 0xE900000000000072;
      }
      sub_24D2B8328(v11, v12, (uint64_t *)v50);
      sub_24D39D070();
      swift_bridgeObjectRelease();
      unint64_t v13 = "ðŸ§­ FMR1PrxContxt%@: not stopping (%s stop already asked)";
LABEL_23:
      _os_log_impl(&dword_24D2B1000, v5, v6, v13, (uint8_t *)v7, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v8, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x253326010](v48, -1, -1);
      MEMORY[0x253326010](v7, -1, -1);

      return 0;
    }
    goto LABEL_24;
  }
  *((unsigned char *)v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_stopAsked) = 1;
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_24D39C950();
  sub_24D2B508C(v19, (uint64_t)qword_269869FD0);
  unint64_t v20 = v1;
  uint64_t v21 = sub_24D39C930();
  os_log_type_t v22 = sub_24D39CDF0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    id v24 = (void *)swift_slowAlloc();
    unint64_t v46 = (void *)swift_slowAlloc();
    v50[0] = v46;
    *(_DWORD *)uint64_t v23 = 138412546;
    id v25 = v20;
    sub_24D39D070();
    *id v24 = v20;

    *(_WORD *)(v23 + 12) = 2080;
    if (a1) {
      uint64_t v26 = 0x20676E69676E6172;
    }
    else {
      uint64_t v26 = 0x657A696C61636F6CLL;
    }
    if (a1) {
      unint64_t v27 = 0xEC000000796C6E6FLL;
    }
    else {
      unint64_t v27 = 0xE900000000000072;
    }
    sub_24D2B8328(v26, v27, (uint64_t *)v50);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v21, v22, "ðŸ§­ FMR1PrxContxt%@: stopping %s", (uint8_t *)v23, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v24, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v46, -1, -1);
    MEMORY[0x253326010](v23, -1, -1);
  }
  else
  {
  }
  id v28 = *(void **)&v20[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer];
  if (!v28)
  {
LABEL_39:
    sub_24D2EC8A4();
    return 0;
  }
  v50[0] = 0;
  if (objc_msgSend(v28, sel_stop_, v50))
  {
    id v29 = v50[0];
    goto LABEL_39;
  }
  char v49 = a1;
  id v32 = v50[0];
  id v30 = (void *)sub_24D39C710();

  swift_willThrow();
  uint64_t v33 = v20;
  id v34 = v30;
  id v35 = v33;
  id v36 = v30;
  id v37 = sub_24D39C930();
  os_log_type_t v38 = sub_24D39CDF0();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    id v47 = (void *)swift_slowAlloc();
    v50[0] = v47;
    *(_DWORD *)uint64_t v39 = 138412802;
    uint64_t v41 = v35;
    sub_24D39D070();
    *uint64_t v40 = v35;

    *(_WORD *)(v39 + 12) = 2080;
    if (v49) {
      uint64_t v42 = 0x20676E69676E6172;
    }
    else {
      uint64_t v42 = 0x657A696C61636F6CLL;
    }
    if (v49) {
      unint64_t v43 = 0xEC000000796C6E6FLL;
    }
    else {
      unint64_t v43 = 0xE900000000000072;
    }
    sub_24D2B8328(v42, v43, (uint64_t *)v50);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 22) = 2080;
    swift_getErrorValue();
    uint64_t v44 = sub_24D39D520();
    sub_24D2B8328(v44, v45, (uint64_t *)v50);
    sub_24D39D070();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24D2B1000, v37, v38, "ðŸ§­ FMR1PrxContxt%@: failed stopping %s (%s)", (uint8_t *)v39, 0x20u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v40, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v47, -1, -1);
    MEMORY[0x253326010](v39, -1, -1);
  }
  else
  {
  }
  return v30;
}

void sub_24D2EF408()
{
  uint64_t v1 = sub_24D2B7450((uint64_t *)&unk_269861100);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v133 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)((char *)v0 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_subscriptions);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if ((unint64_t)*v8 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_24D39D2D0();
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  uint64_t v138 = v0;
  uint64_t v133 = v8;
  uint64_t v137 = v4;
  uint64_t v136 = v5;
  int v135 = v7;
  uint64_t v134 = v3;
  if (v10)
  {
    if (v10 >= 1)
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = &OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_context;
      char v15 = &OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_context;
      while (1)
      {
        id v16 = (v9 & 0xC000000000000001) != 0
            ? (unsigned char *)MEMORY[0x253325220](v11, v9)
            : *(id *)(v9 + 8 * v11 + 32);
        if (v16[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsRangingOnly] == 1)
        {
          BOOL v17 = __OFADD__(v13++, 1);
          if (v17) {
            break;
          }
        }
        int v18 = v16[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsLocalizer];

        if (v18 == 1)
        {
          BOOL v17 = __OFADD__(v12++, 1);
          if (v17)
          {
            __break(1u);
            goto LABEL_16;
          }
        }
        if (v10 == ++v11) {
          goto LABEL_17;
        }
      }
      __break(1u);
      goto LABEL_113;
    }
    __break(1u);
    goto LABEL_149;
  }
LABEL_16:
  uint64_t v12 = 0;
  uint64_t v13 = 0;
LABEL_17:
  swift_bridgeObjectRelease_n();
  uint64_t v4 = (uint64_t)v138;
  if (*((unsigned char *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizerState) != 2)
  {
    if (qword_2698602B0 == -1)
    {
LABEL_25:
      uint64_t v27 = sub_24D39C950();
      sub_24D2B508C(v27, (uint64_t)qword_269869FD0);
      id v28 = (objc_class *)(id)v4;
      id v29 = sub_24D39C930();
      os_log_type_t v30 = sub_24D39CDF0();
      if (!os_log_type_enabled(v29, v30)) {
        goto LABEL_130;
      }
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      id v32 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 138412290;
      *(void *)&long long v147 = v28;
      uint64_t v33 = v28;
      sub_24D39D070();
      void *v32 = v28;

      id v34 = "ðŸ§­ FMR1PrxContxt%@: waiting to be ready";
LABEL_27:
      _os_log_impl(&dword_24D2B1000, v29, v30, v34, v31, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v32, -1, -1);
      MEMORY[0x253326010](v31, -1, -1);

      return;
    }
LABEL_149:
    swift_once();
    goto LABEL_25;
  }
  uint64_t v19 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState;
  if (*((unsigned char *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemState) == 1)
  {
    if (*((unsigned char *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_applicationIsInBackground) == 1)
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_24D39C950();
      sub_24D2B508C(v20, (uint64_t)qword_269869FD0);
      uint64_t v21 = (id)v4;
      os_log_type_t v22 = sub_24D39C930();
      os_log_type_t v23 = sub_24D39CDF0();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        id v25 = (void *)swift_slowAlloc();
        *(_DWORD *)id v24 = 138412290;
        *(void *)&long long v147 = v21;
        uint64_t v26 = v21;
        sub_24D39D070();
        *id v25 = v21;

        _os_log_impl(&dword_24D2B1000, v22, v23, "ðŸ§­ FMR1PrxContxt%@: application is in background", v24, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v25, -1, -1);
        MEMORY[0x253326010](v24, -1, -1);
      }
      else
      {

        os_log_type_t v22 = v21;
      }

      objc_release(sub_24D2EEB14(*((unsigned char *)&v21->isa
                                 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly)));
      return;
    }
    if (v13 >= 1 && !v12)
    {
      uint64_t v47 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity;
      int v48 = *((unsigned __int8 *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity);
      if (v48 == 1)
      {
        if (*((unsigned char *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly)) {
          goto LABEL_99;
        }
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v49 = sub_24D39C950();
        sub_24D2B508C(v49, (uint64_t)qword_269869FD0);
        id v50 = (id)v4;
        uint64_t v51 = sub_24D39C930();
        os_log_type_t v52 = sub_24D39CDF0();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = (uint8_t *)swift_slowAlloc();
          unint64_t v54 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v53 = 138412290;
          *(void *)&long long v147 = v50;
          unint64_t v55 = v50;
          sub_24D39D070();
          void *v54 = v50;

          _os_log_impl(&dword_24D2B1000, v51, v52, "ðŸ§­ FMR1PrxContxt%@: asked to start ranging only (but need to stop first)", v53, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v54, -1, -1);
          uint64_t v56 = v53;
          uint64_t v4 = (uint64_t)v138;
          MEMORY[0x253326010](v56, -1, -1);
        }
        else
        {

          uint64_t v51 = v50;
        }

        int v48 = *(unsigned __int8 *)(v4 + v47);
      }
      if (v48 == 2)
      {
LABEL_95:
        *(unsigned char *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) = 1;
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v102 = sub_24D39C950();
        sub_24D2B508C(v102, (uint64_t)qword_269869FD0);
        unint64_t v103 = (id)v4;
        uint64_t v104 = sub_24D39C930();
        os_log_type_t v105 = sub_24D39CDF0();
        if (os_log_type_enabled(v104, v105))
        {
          double v106 = (uint8_t *)swift_slowAlloc();
          os_log_t v107 = (void *)swift_slowAlloc();
          *(_DWORD *)double v106 = 138412290;
          *(void *)&long long v147 = v103;
          uint64_t v108 = v103;
          sub_24D39D070();
          *os_log_t v107 = v103;

          _os_log_impl(&dword_24D2B1000, v104, v105, "ðŸ§­ FMR1PrxContxt%@: asked to start ranging only now", v106, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v107, -1, -1);
          MEMORY[0x253326010](v106, -1, -1);
        }
        else
        {

          uint64_t v104 = v103;
        }

        return;
      }
      if (v48 != 1)
      {
        if (!v48) {
          goto LABEL_95;
        }
LABEL_104:
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v111 = sub_24D39C950();
        sub_24D2B508C(v111, (uint64_t)qword_269869FD0);
        id v28 = (objc_class *)(id)v4;
        id v29 = sub_24D39C930();
        os_log_type_t v30 = sub_24D39CDF0();
        if (!os_log_type_enabled(v29, v30)) {
          goto LABEL_130;
        }
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        id v32 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 138412290;
        *(void *)&long long v147 = v28;
        uint64_t v112 = v28;
        sub_24D39D070();
        void *v32 = v28;

        id v34 = "ðŸ§­ FMR1PrxContxt%@: asked to start ranging only (but waiting to be stopped first)";
        goto LABEL_27;
      }
LABEL_99:
      if (*(unsigned char *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) == 1)
      {
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v109 = sub_24D39C950();
        sub_24D2B508C(v109, (uint64_t)qword_269869FD0);
        id v28 = (objc_class *)(id)v4;
        id v29 = sub_24D39C930();
        os_log_type_t v30 = sub_24D39CDF0();
        if (!os_log_type_enabled(v29, v30)) {
          goto LABEL_130;
        }
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        id v32 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 138412290;
        *(void *)&long long v147 = v28;
        uint64_t v110 = v28;
        sub_24D39D070();
        void *v32 = v28;

        id v34 = "ðŸ§­ FMR1PrxContxt%@: asked to start ranging only (but already is)";
        goto LABEL_27;
      }
      goto LABEL_104;
    }
    char v15 = (uint64_t *)OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity;
    int v65 = *((unsigned __int8 *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity);
    if (v12 >= 1)
    {
      if (v65 != 1) {
        goto LABEL_115;
      }
      if (*((unsigned char *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) != 1) {
        goto LABEL_122;
      }
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_24D39C950();
      sub_24D2B508C(v66, (uint64_t)qword_269869FD0);
      uint64_t v14 = (uint64_t *)(id)v4;
      uint64_t v0 = sub_24D39C930();
      os_log_type_t v67 = sub_24D39CDF0();
      if (os_log_type_enabled(v0, v67))
      {
        unint64_t v68 = (uint8_t *)swift_slowAlloc();
        id v69 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v68 = 138412290;
        *(void *)&long long v147 = v14;
        uint64_t v70 = v14;
        sub_24D39D070();
        *id v69 = v14;

        _os_log_impl(&dword_24D2B1000, v0, v67, "ðŸ§­ FMR1PrxContxt%@: asked to start localizer (but need to stop ranging only first)", v68, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v69, -1, -1);
        MEMORY[0x253326010](v68, -1, -1);
LABEL_114:

        uint64_t v4 = (uint64_t)v138;
        int v65 = *((unsigned __int8 *)v15 + (void)v138);
LABEL_115:
        if (v65 == 2) {
          goto LABEL_118;
        }
        if (v65 != 1)
        {
          if (!v65)
          {
LABEL_118:
            *(unsigned char *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) = 0;
            if (qword_2698602B0 != -1) {
              swift_once();
            }
            uint64_t v114 = sub_24D39C950();
            sub_24D2B508C(v114, (uint64_t)qword_269869FD0);
            os_log_t v115 = (id)v4;
            unint64_t v116 = sub_24D39C930();
            os_log_type_t v117 = sub_24D39CDF0();
            if (os_log_type_enabled((os_log_t)v116, v117))
            {
              uint64_t v118 = (uint8_t *)swift_slowAlloc();
              char v119 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v118 = 138412290;
              *(void *)&long long v147 = v115;
              uint64_t v120 = v115;
              sub_24D39D070();
              *char v119 = v115;

              _os_log_impl(&dword_24D2B1000, (os_log_t)v116, v117, "ðŸ§­ FMR1PrxContxt%@: asked to start localizer now", v118, 0xCu);
              sub_24D2B7450(&qword_269861308);
              swift_arrayDestroy();
              MEMORY[0x253326010](v119, -1, -1);
              MEMORY[0x253326010](v118, -1, -1);
            }
            else
            {

              unint64_t v116 = (unint64_t)v115;
            }

            uint64_t v125 = *v133;
            *(void *)&long long v147 = MEMORY[0x263F8EE78];
            if ((unint64_t)v125 >> 62)
            {
              if (v125 < 0) {
                unint64_t v116 = v125;
              }
              else {
                unint64_t v116 = v125 & 0xFFFFFFFFFFFFFF8;
              }
              swift_bridgeObjectRetain_n();
              uint64_t v4 = sub_24D39D2D0();
              if (v4) {
                goto LABEL_136;
              }
            }
            else
            {
              uint64_t v4 = *(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n();
              if (v4)
              {
LABEL_136:
                if (v4 < 1)
                {
                  __break(1u);
                  goto LABEL_165;
                }
                for (uint64_t i = 0; i != v4; ++i)
                {
                  if ((v125 & 0xC000000000000001) != 0) {
                    uint64_t v127 = (char *)MEMORY[0x253325220](i, v125);
                  }
                  else {
                    uint64_t v127 = (char *)*(id *)(v125 + 8 * i + 32);
                  }
                  id v128 = v127;
                  __int16 v129 = *(void **)&v127[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider];
                  id v130 = v129;

                  if (v129)
                  {
                    MEMORY[0x253324C20]();
                    if (*(void *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v147 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
                      sub_24D39CC40();
                    sub_24D39CC60();
                    sub_24D39CC30();
                  }
                }
                swift_bridgeObjectRelease();
                unint64_t v116 = v147;
LABEL_155:
                swift_bridgeObjectRelease();
                if (v116 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v132 = sub_24D39D2D0();
                  swift_bridgeObjectRelease();
                  if (v132)
                  {
LABEL_157:
                    if ((v116 & 0xC000000000000001) == 0)
                    {
                      if (*(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10))
                      {
                        id v131 = (objc_class *)*(id *)(v116 + 32);
LABEL_160:
                        id v28 = v131;
                        swift_bridgeObjectRelease();
LABEL_163:

                        goto LABEL_131;
                      }
                      __break(1u);
LABEL_167:
                      swift_once();
LABEL_128:
                      uint64_t v123 = sub_24D39C950();
                      sub_24D2B508C(v123, (uint64_t)qword_269869FD0);
                      id v28 = (objc_class *)(id)v4;
                      id v29 = sub_24D39C930();
                      os_log_type_t v30 = sub_24D39CDF0();
                      if (os_log_type_enabled(v29, v30))
                      {
                        uint64_t v31 = (uint8_t *)swift_slowAlloc();
                        id v32 = (void *)swift_slowAlloc();
                        *(_DWORD *)uint64_t v31 = 138412290;
                        *(void *)&long long v147 = v28;
                        uint64_t v124 = v28;
                        sub_24D39D070();
                        void *v32 = v28;

                        id v34 = "ðŸ§­ FMR1PrxContxt%@: asked to start localizer (but already is)";
                        goto LABEL_27;
                      }
LABEL_130:

LABEL_131:
                      return;
                    }
LABEL_165:
                    id v131 = (objc_class *)MEMORY[0x253325220](0, v116);
                    goto LABEL_160;
                  }
                }
                else if (*(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  goto LABEL_157;
                }
                swift_bridgeObjectRelease();
                id v28 = 0;
                goto LABEL_163;
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v116 = MEMORY[0x263F8EE78];
            goto LABEL_155;
          }
          goto LABEL_123;
        }
LABEL_122:
        if ((*(unsigned char *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly) & 1) == 0)
        {
          if (qword_2698602B0 == -1) {
            goto LABEL_128;
          }
          goto LABEL_167;
        }
LABEL_123:
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v121 = sub_24D39C950();
        sub_24D2B508C(v121, (uint64_t)qword_269869FD0);
        id v28 = (objc_class *)(id)v4;
        id v29 = sub_24D39C930();
        os_log_type_t v30 = sub_24D39CDF0();
        if (!os_log_type_enabled(v29, v30)) {
          goto LABEL_130;
        }
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        id v32 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 138412290;
        *(void *)&long long v147 = v28;
        uint64_t v122 = v28;
        sub_24D39D070();
        void *v32 = v28;

        id v34 = "ðŸ§­ FMR1PrxContxt%@: asked to start localizer (but waiting to be stopped first)";
        goto LABEL_27;
      }
LABEL_113:

      uint64_t v0 = v14;
      goto LABEL_114;
    }
    if (v65 == 1)
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v95 = sub_24D39C950();
      sub_24D2B508C(v95, (uint64_t)qword_269869FD0);
      unint64_t v96 = (id)v4;
      uint64_t v97 = sub_24D39C930();
      os_log_type_t v98 = sub_24D39CDF0();
      if (os_log_type_enabled(v97, v98))
      {
        __int16 v99 = (uint8_t *)swift_slowAlloc();
        uint64_t v100 = (void *)swift_slowAlloc();
        *(_DWORD *)__int16 v99 = 138412290;
        *(void *)&long long v147 = v96;
        uint64_t v101 = v96;
        sub_24D39D070();
        *uint64_t v100 = v96;

        _os_log_impl(&dword_24D2B1000, v97, v98, "ðŸ§­ FMR1PrxContxt%@: asked to stop everything now", v99, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v100, -1, -1);
        MEMORY[0x253326010](v99, -1, -1);
      }
      else
      {

        uint64_t v97 = v96;
      }

      uint64_t v113 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly;
      objc_release(sub_24D2EEB14(*((unsigned char *)&v96->isa
                                 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_rangingOnly)));
      *((unsigned char *)&v96->isa + v113) = 0;
    }
  }
  else
  {
    uint64_t v35 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_hasCalledConfigure;
    if (*((unsigned char *)&v138->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_hasCalledConfigure))
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_24D39C950();
      sub_24D2B508C(v36, (uint64_t)qword_269869FD0);
      id v37 = (id)v4;
      os_log_type_t v38 = sub_24D39C930();
      os_log_type_t v39 = sub_24D39CDF0();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        uint64_t v136 = swift_slowAlloc();
        uint64_t v137 = swift_slowAlloc();
        *(void *)&long long v147 = v137;
        *(_DWORD *)uint64_t v40 = 138412546;
        v144[0] = (uint64_t)v37;
        uint64_t v41 = v4;
        id v42 = v37;
        sub_24D39D070();
        uint64_t v43 = v136;
        *(void *)uint64_t v136 = v37;

        *(_WORD *)(v40 + 12) = 2080;
        if (*(unsigned char *)(v41 + v19) == 4) {
          uint64_t v44 = 0x676E69766F6D2820;
        }
        else {
          uint64_t v44 = 0;
        }
        if (*(unsigned char *)(v41 + v19) == 4) {
          unint64_t v45 = 0xE900000000000029;
        }
        else {
          unint64_t v45 = 0xE000000000000000;
        }
        v144[0] = sub_24D2B8328(v44, v45, (uint64_t *)&v147);
        sub_24D39D070();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D2B1000, v38, v39, "ðŸ§­ FMR1PrxContxt%@: waiting to be findable%s", (uint8_t *)v40, 0x16u);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v43, -1, -1);
        uint64_t v46 = v137;
        swift_arrayDestroy();
        MEMORY[0x253326010](v46, -1, -1);
        MEMORY[0x253326010](v40, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      unint64_t v57 = (char *)v138 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable;
      sub_24D2B6CE8((uint64_t)v138 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, (uint64_t)&v147);
      uint64_t v58 = *((void *)&v148 + 1);
      uint64_t v59 = v149;
      sub_24D2B8A34(&v147, *((uint64_t *)&v148 + 1));
      (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v59 + 24))(v141, v58, v59);
      int v60 = v142;
      sub_24D2D78EC(v141[0], (uint64_t)v141[1], (uint64_t)v141[2], v142);
      if (v60)
      {
        uint64_t v61 = v135;
        uint64_t v62 = v134;
        if (*(unsigned char *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_connectionContext) == 1)
        {
          sub_24D2B6CE8((uint64_t)v57, (uint64_t)v144);
          uint64_t v63 = v145;
          uint64_t v64 = v146;
          sub_24D2B8A34(v144, v145);
          (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v64 + 24))(v139, v63, v64);
          BOOL v71 = v140 != 0;
          sub_24D2D78EC(v139[0], (uint64_t)v139[1], (uint64_t)v139[2], v140);
          sub_24D2B6E58((uint64_t)v144);
        }
        else
        {
          BOOL v71 = 0;
        }
      }
      else
      {
        BOOL v71 = 1;
        uint64_t v61 = v135;
        uint64_t v62 = v134;
      }
      sub_24D2B6E58((uint64_t)&v147);
      sub_24D2B6CE8((uint64_t)v57, (uint64_t)v144);
      sub_24D2B7450((uint64_t *)&unk_2698615F0);
      sub_24D2B7450((uint64_t *)&unk_269861150);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v149 = 0;
        long long v147 = 0u;
        long long v148 = 0u;
      }
      sub_24D2B6CE8((uint64_t)v57, (uint64_t)v144);
      uint64_t v72 = v145;
      uint64_t v73 = v146;
      sub_24D2B8A34(v144, v145);
      (*(void (**)(uint64_t, uint64_t))(v73 + 16))(v72, v73);
      sub_24D2F57E8((uint64_t)&v147, (uint64_t)v141);
      uint64_t v74 = v142;
      uint64_t v75 = v35;
      if (v142)
      {
        uint64_t v76 = v143;
        sub_24D2B8A34(v141, v142);
        (*(void (**)(uint64_t, uint64_t))(v76 + 16))(v74, v76);
        sub_24D2B6E58((uint64_t)v141);
        uint64_t v77 = v137;
        uint64_t v78 = v136;
      }
      else
      {
        sub_24D2F5850((uint64_t)v141);
        uint64_t v78 = v136;
        uint64_t v77 = v137;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v136 + 56))(v62, 1, 1, v137);
      }
      int v79 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_connectionContext);
      uint64_t v80 = (void *)sub_24D39C860();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v62, 1, v77) == 1)
      {
        uint64_t v81 = 0;
      }
      else
      {
        uint64_t v81 = (void *)sub_24D39C860();
        (*(void (**)(char *, uint64_t))(v78 + 8))(v62, v77);
      }
      unsigned __int16 v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F62590]), sel_initWithUUID_productUUID_isOwned_requiresLowerRangingFrequency_, v80, v81, v79 == 0, v71);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v61, v77);
      sub_24D2B6E58((uint64_t)v144);
      uint64_t v83 = *(void **)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer);
      if (v83) {
        unsigned int v84 = objc_msgSend(v83, sel_configureForItem_, v82);
      }
      else {
        unsigned int v84 = 0;
      }
      *(unsigned char *)(v4 + v75) = 1;
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v85 = sub_24D39C950();
      sub_24D2B508C(v85, (uint64_t)qword_269869FD0);
      id v86 = (id)v4;
      uint64_t v87 = sub_24D39C930();
      os_log_type_t v88 = sub_24D39CDF0();
      if (os_log_type_enabled(v87, v88))
      {
        uint64_t v89 = swift_slowAlloc();
        unint64_t v90 = (void *)swift_slowAlloc();
        uint64_t v137 = swift_slowAlloc();
        v144[0] = v137;
        *(_DWORD *)uint64_t v89 = 138412546;
        v141[0] = v86;
        uint64_t v138 = v82;
        id v91 = v86;
        sub_24D39D070();
        *unint64_t v90 = v86;

        *(_WORD *)(v89 + 12) = 2080;
        if (v84) {
          uint64_t v92 = 0;
        }
        else {
          uint64_t v92 = 0x2064656C696166;
        }
        if (v84) {
          unint64_t v93 = 0xE000000000000000;
        }
        else {
          unint64_t v93 = 0xE700000000000000;
        }
        v141[0] = (void *)sub_24D2B8328(v92, v93, v144);
        sub_24D39D070();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D2B1000, v87, v88, "ðŸ§­ FMR1PrxContxt%@: %sconfiguring", (uint8_t *)v89, 0x16u);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v90, -1, -1);
        uint64_t v94 = v137;
        swift_arrayDestroy();
        MEMORY[0x253326010](v94, -1, -1);
        MEMORY[0x253326010](v89, -1, -1);
      }
      else
      {
      }
      sub_24D2F5850((uint64_t)&v147);
    }
  }
}

uint64_t type metadata accessor for FMR1ItemLocalizerContext()
{
  return self;
}

uint64_t sub_24D2F0ED4@<X0>(uint64_t a1@<X8>)
{
  return sub_24D2B6CE8(*v1 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, a1);
}

id sub_24D2F0EF0()
{
  return sub_24D2F0F14("ðŸ§­ FMR1PrxSubscr%s: deinit", 0, (uint64_t (*)(void))type metadata accessor for FMR1ProximityManagerSubscription);
}

id sub_24D2F0F14(char *a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_24D39C950();
  sub_24D2B508C(v7, (uint64_t)qword_269869FD0);
  id v8 = v3;
  uint64_t v9 = sub_24D39C930();
  os_log_type_t v10 = sub_24D39CDF0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v21 = a3;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v22 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    format = a1;
    id v13 = objc_msgSend(v8, sel_description);
    uint64_t v14 = sub_24D39CAF0();
    unint64_t v16 = v15;

    uint64_t v17 = v14;
    a3 = v21;
    sub_24D2B8328(v17, v16, &v22);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v9, v10, format, v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v12, -1, -1);
    MEMORY[0x253326010](v11, -1, -1);
  }
  else
  {
  }
  int v18 = (objc_class *)a3(a2);
  v23.receiver = v8;
  v23.super_class = v18;
  return objc_msgSendSuper2(&v23, sel_dealloc);
}

uint64_t sub_24D2F11F4()
{
  return type metadata accessor for FMR1ProximityManagerSubscription();
}

uint64_t type metadata accessor for FMR1ProximityManagerSubscription()
{
  uint64_t result = qword_269861570;
  if (!qword_269861570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24D2F1248(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = MEMORY[0x253326120](&v1[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_context]);
  if (v4)
  {
    uint64_t v5 = v4;
    if (*(void *)(v4 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer))
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_24D39C950();
      sub_24D2B508C(v6, (uint64_t)qword_269869FD0);
      uint64_t v7 = v1;
      id v8 = sub_24D39C930();
      os_log_type_t v9 = sub_24D39CDF0();
      if (os_log_type_enabled(v8, v9))
      {
        id v39 = a1;
        os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
        id v37 = (void *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v10 = 138412290;
        uint64_t v11 = v7;
        sub_24D39D070();
        *id v37 = v7;

        a1 = v39;
        _os_log_impl(&dword_24D2B1000, v8, v9, "ðŸ§­ FMR1PrxSubscr%@: asking to start localizer", v10, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v37, -1, -1);
        MEMORY[0x253326010](v10, -1, -1);

LABEL_24:
        v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsLocalizer] = 1;
        id v32 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider];
        *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider] = a1;
        id v33 = a1;

        uint64_t v34 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem;
        if (*(Class *)((char *)&v5->isa
                      + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem))
        {
          swift_retain();
          sub_24D39CA30();
          swift_release();
        }
        *(Class *)((char *)&v5->isa + v34) = 0;
        swift_release();
        sub_24D2EF408();
        goto LABEL_27;
      }
    }
    else
    {
      sub_24D2C8328();
      uint64_t v17 = v5;
      int v18 = (void *)sub_24D39CE90();
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F62598]), sel_initWithDelegate_queue_, v17, v18);

      uint64_t v20 = sub_24D39D600();
      unint64_t v22 = v21;
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_24D39C950();
      sub_24D2B508C(v23, (uint64_t)qword_269869FD0);
      id v24 = v2;
      swift_bridgeObjectRetain();
      id v25 = sub_24D39C930();
      os_log_type_t v26 = sub_24D39CDF0();
      if (os_log_type_enabled(v25, v26))
      {
        id v38 = v19;
        uint64_t v27 = swift_slowAlloc();
        uint64_t v35 = (void *)swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        uint64_t v42 = v36;
        *(_DWORD *)uint64_t v27 = 138412546;
        uint64_t v41 = v17;
        id v28 = v24;
        sub_24D39D070();
        void *v35 = v24;

        *(_WORD *)(v27 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_24D34315C(9, v20, v22);
        swift_bridgeObjectRelease();
        sub_24D2C3E44();
        sub_24D39CB60();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_24D39CB70();
        swift_bridgeObjectRelease();
        sub_24D2B8328(7876668, 0xE300000000000000, &v42);
        uint64_t v17 = v41;
        sub_24D39D070();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D2B1000, v25, v26, "ðŸ§­ FMR1PrxSubscr%@: asking to start localizer, created item localizer <%s> and will re-configure", (uint8_t *)v27, 0x16u);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v35, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253326010](v36, -1, -1);
        uint64_t v29 = v27;
        id v19 = v38;
        MEMORY[0x253326010](v29, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      os_log_type_t v30 = *(void (**)(uint64_t))((char *)&v17->isa
                                           + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_incrementItemLocalizerHandler);
      if (v30)
      {
        uint64_t v31 = swift_retain();
        v30(v31);
        sub_24D2E44C8((uint64_t)v30);
      }
      uint64_t v7 = (char *)v19;
      sub_24D2F5040(v19);
    }

    goto LABEL_24;
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_24D39C950();
  sub_24D2B508C(v12, (uint64_t)qword_269869FD0);
  uint64_t v40 = v1;
  uint64_t v5 = sub_24D39C930();
  os_log_type_t v13 = sub_24D39CDF0();
  if (os_log_type_enabled(v5, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    unint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    unint64_t v16 = v40;
    sub_24D39D070();
    *unint64_t v15 = v40;

    _os_log_impl(&dword_24D2B1000, v5, v13, "ðŸ§­ FMR1PrxSubscr%@: asking to start localizer but no context", v14, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v15, -1, -1);
    MEMORY[0x253326010](v14, -1, -1);
LABEL_27:

    return;
  }
}

void sub_24D2F199C()
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
  uint64_t v2 = v0;
  uint64_t v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = v2;
    sub_24D39D070();
    *uint64_t v6 = v2;

    _os_log_impl(&dword_24D2B1000, v3, v4, "ðŸ§­ FMR1PrxSubscr%@: asking to stop localizer", v5, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v6, -1, -1);
    MEMORY[0x253326010](v5, -1, -1);
  }
  else
  {
  }
  v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsLocalizer] = 0;
  id v8 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider];
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider] = 0;

  uint64_t v9 = MEMORY[0x253326120](&v2[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_context]);
  if (v9)
  {
    os_log_type_t v10 = (void *)v9;
    sub_24D2EF408();
  }
}

uint64_t sub_24D2F1BA8()
{
  uint64_t result = sub_24D39C8A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_24D2F1C6C()
{
  uint64_t v27 = sub_24D39CE80();
  uint64_t v1 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24D39CE50();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_24D39C9D0();
  MEMORY[0x270FA5388](v5 - 8);
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_contexts] = MEMORY[0x263F8EE80];
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_subscriptions] = MEMORY[0x263F8EE78];
  v0[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_itemLocalizersCount] = 0;
  uint64_t v26 = OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_serialQueue;
  v25[1] = sub_24D2C8328();
  uint64_t v7 = v0;
  sub_24D39C9C0();
  uint64_t v30 = v6;
  sub_24D2F6148((unint64_t *)&unk_2698613B0, 255, MEMORY[0x263F8F0F8]);
  sub_24D2B7450((uint64_t *)&unk_269860F50);
  sub_24D2C7144((unint64_t *)&qword_2698613C0, (uint64_t *)&unk_269860F50);
  sub_24D39D0E0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F130], v27);
  *(void *)&v0[v26] = sub_24D39CEC0();

  id v8 = (objc_class *)type metadata accessor for FMR1ProximityManager();
  v29.receiver = v7;
  v29.super_class = v8;
  id v9 = objc_msgSendSuper2(&v29, sel_init);
  os_log_type_t v10 = self;
  id v11 = v9;
  id v12 = objc_msgSend(v10, sel_defaultCenter);
  objc_msgSend(v12, sel_addObserver_selector_name_object_, v11, sel_applicationDidEnterBackground, *MEMORY[0x263F83330], 0);

  id v13 = objc_msgSend(v10, sel_defaultCenter);
  objc_msgSend(v13, sel_addObserver_selector_name_object_, v11, sel_applicationWillEnterForeground, *MEMORY[0x263F833B8], 0);

  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_24D39C950();
  sub_24D2B508C(v14, (uint64_t)qword_269869FD0);
  id v15 = v11;
  unint64_t v16 = sub_24D39C930();
  os_log_type_t v17 = sub_24D39CDF0();
  if (os_log_type_enabled(v16, v17))
  {
    int v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v30 = v19;
    *(_DWORD *)int v18 = 136315138;
    id v20 = objc_msgSend(v15, sel_description);
    uint64_t v21 = sub_24D39CAF0();
    unint64_t v23 = v22;

    uint64_t v28 = sub_24D2B8328(v21, v23, &v30);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v16, v17, "ðŸ§­ FMR1ProximMgr%s: init (v14)", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v19, -1, -1);
    MEMORY[0x253326010](v18, -1, -1);
  }
  else
  {
  }
  return v15;
}

void sub_24D2F2174()
{
  if (qword_2698602B0 != -1) {
LABEL_31:
  }
    swift_once();
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
  uint64_t v2 = v0;
  uint64_t v0 = sub_24D39C930();
  os_log_type_t v3 = sub_24D39CDF0();
  if (os_log_type_enabled(v0, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    uint64_t v6 = v2;
    sub_24D39D070();
    *uint64_t v5 = v2;

    _os_log_impl(&dword_24D2B1000, v0, v3, "ðŸ§­ FMR1ProximMgr%@: entering background", v4, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v5, -1, -1);
    MEMORY[0x253326010](v4, -1, -1);
  }
  else
  {
  }
  *((unsigned char *)&v2->isa + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground) = 1;
  uint64_t v7 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_contexts);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = v8 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v8 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v13) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_29;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v13) {
          goto LABEL_29;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 3;
          if (v17 + 3 >= v13) {
            goto LABEL_29;
          }
          unint64_t v18 = *(void *)(v9 + 8 * v14);
          if (!v18)
          {
            int64_t v14 = v17 + 4;
            if (v17 + 4 >= v13) {
              goto LABEL_29;
            }
            unint64_t v18 = *(void *)(v9 + 8 * v14);
            if (!v18) {
              break;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_9:
    uint64_t v0 = *(NSObject **)(*(void *)(v8 + 56) + 8 * v16);
    *((unsigned char *)&v0->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_applicationIsInBackground) = 1;
    sub_24D2ECDAC();
    sub_24D2EF408();
  }
  int64_t v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_28;
    }
  }
  __break(1u);
}

void sub_24D2F24D4()
{
  if (qword_2698602B0 != -1) {
LABEL_31:
  }
    swift_once();
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
  uint64_t v2 = v0;
  uint64_t v0 = sub_24D39C930();
  os_log_type_t v3 = sub_24D39CDF0();
  if (os_log_type_enabled(v0, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    uint64_t v6 = v2;
    sub_24D39D070();
    *uint64_t v5 = v2;

    _os_log_impl(&dword_24D2B1000, v0, v3, "ðŸ§­ FMR1ProximMgr%@: entering foreground", v4, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v5, -1, -1);
    MEMORY[0x253326010](v4, -1, -1);
  }
  else
  {
  }
  *((unsigned char *)&v2->isa + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground) = 0;
  uint64_t v7 = (uint64_t *)((char *)v2 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_contexts);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t v9 = v8 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v8 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v13) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_29;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v13) {
          goto LABEL_29;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 3;
          if (v17 + 3 >= v13) {
            goto LABEL_29;
          }
          unint64_t v18 = *(void *)(v9 + 8 * v14);
          if (!v18)
          {
            int64_t v14 = v17 + 4;
            if (v17 + 4 >= v13) {
              goto LABEL_29;
            }
            unint64_t v18 = *(void *)(v9 + 8 * v14);
            if (!v18) {
              break;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_9:
    uint64_t v0 = *(NSObject **)(*(void *)(v8 + 56) + 8 * v16);
    *((unsigned char *)&v0->isa + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_applicationIsInBackground) = 0;
    sub_24D2ECDAC();
    sub_24D2EF408();
  }
  int64_t v19 = v17 + 5;
  if (v19 >= v13)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v18 = *(void *)(v9 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v14 >= v13) {
      goto LABEL_29;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_28;
    }
  }
  __break(1u);
}

uint64_t sub_24D2F2838@<X0>(void *a1@<X0>, char *a2@<X1>, void *a3@<X2>, NSObject *a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  id v130 = a4;
  id v131 = a3;
  __int16 v129 = a6;
  uint64_t v9 = sub_24D39C8A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v133 = v9;
  uint64_t v134 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v132 = (char *)&v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  int64_t v14 = (char *)&v122 - v13;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_24D2B8A34(a1, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  int64_t v17 = a2;
  unint64_t v18 = (os_log_t *)&a2[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_contexts];
  swift_beginAccess();
  Class isa = (*v18)[2].isa;
  id v128 = v14;
  if (!isa
    || (swift_bridgeObjectRetain(), sub_24D3839F0((uint64_t)v14), char v21 = v20, swift_bridgeObjectRelease(), (v21 & 1) == 0))
  {
    sub_24D2B6CE8((uint64_t)a1, (uint64_t)v136);
    LOBYTE(v139) = a5;
    id v45 = objc_allocWithZone((Class)type metadata accessor for FMR1ItemLocalizerContext());
    uint64_t v46 = (char *)sub_24D2E97CC((uint64_t)v136, (char *)&v139);
    uint64_t v47 = swift_allocObject();
    swift_unknownObjectWeakInit();
    int v48 = (void (**)())&v46[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_incrementItemLocalizerHandler];
    uint64_t v49 = *(void *)&v46[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_incrementItemLocalizerHandler];
    *int v48 = sub_24D2F6138;
    v48[1] = (void (*)())v47;
    uint64_t v126 = v48;
    sub_24D2E44C8(v49);
    uint64_t v50 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v51 = (void (**)())&v46[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_decrementItemLocalizerHandler];
    uint64_t v52 = *(void *)&v46[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_decrementItemLocalizerHandler];
    *uint64_t v51 = sub_24D2F6140;
    v51[1] = (void (*)())v50;
    sub_24D2E44C8(v52);
    uint64_t v53 = v133;
    uint64_t v54 = v134;
    uint64_t v55 = (uint64_t)a1;
    uint64_t v56 = (uint64_t)v132;
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v132, v14, v133);
    swift_beginAccess();
    unint64_t v57 = v46;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    os_log_t v139 = *v18;
    *unint64_t v18 = (os_log_t)0x8000000000000000;
    sub_24D2D6490((uint64_t)v57, v56, isUniquelyReferenced_nonNull_native);
    *unint64_t v18 = v139;
    swift_bridgeObjectRelease();
    uint64_t v59 = *(uint64_t (**)(char *, uint64_t))(v54 + 8);
    uint64_t v60 = v55;
    uint64_t v134 = v54 + 8;
    uint64_t v127 = v59;
    v59((char *)v56, v53);
    swift_endAccess();
    sub_24D2B6CE8(v55, (uint64_t)v136);
    id v61 = objc_allocWithZone((Class)type metadata accessor for FMR1ProximityManagerSubscription());
    uint64_t v62 = v57;
    uint64_t v63 = swift_unknownObjectRetain();
    id v64 = sub_24D2F5C04(v63, (uint64_t)v130, (uint64_t)v136);
    swift_unknownObjectRelease();

    sub_24D2EDBB4(v64);
    int v65 = &v17[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_subscriptions];
    swift_beginAccess();
    id v66 = v64;
    MEMORY[0x253324C20]();
    if (*(void *)((*(void *)v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v65 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      sub_24D39CC40();
    sub_24D39CC60();
    sub_24D39CC30();
    swift_endAccess();
    if (v17[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground])
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v67 = sub_24D39C950();
      sub_24D2B508C(v67, (uint64_t)qword_269869FD0);
      sub_24D2B6CE8(v60, (uint64_t)v136);
      unint64_t v68 = v17;
      id v69 = sub_24D39C930();
      os_log_type_t v70 = sub_24D39CDF0();
      int v71 = v70;
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v72 = swift_slowAlloc();
        uint64_t v73 = (void *)swift_slowAlloc();
        id v130 = swift_slowAlloc();
        os_log_t v139 = v130;
        *(_DWORD *)uint64_t v72 = 138412546;
        LODWORD(v126) = v71;
        uint64_t v135 = (uint64_t)v68;
        os_log_t v125 = v69;
        uint64_t v74 = v68;
        sub_24D39D070();
        *uint64_t v73 = v17;

        *(_WORD *)(v72 + 12) = 2080;
        os_log_t v124 = (os_log_t)(v72 + 14);
        id v131 = v66;
        uint64_t v75 = v137;
        uint64_t v76 = v138;
        sub_24D2B8A34(v136, v137);
        uint64_t v77 = v132;
        (*(void (**)(uint64_t, uint64_t))(v76 + 16))(v75, v76);
        sub_24D2F6148((unint64_t *)&qword_2698610F0, 255, MEMORY[0x263F07508]);
        uint64_t v78 = v133;
        uint64_t v79 = sub_24D39D490();
        unint64_t v81 = v80;
        unsigned __int16 v82 = v127;
        v127(v77, v78);
        uint64_t v135 = sub_24D2B8328(v79, v81, (uint64_t *)&v139);
        sub_24D39D070();
        swift_bridgeObjectRelease();
        sub_24D2B6E58((uint64_t)v136);
        os_log_t v83 = v125;
        _os_log_impl(&dword_24D2B1000, v125, (os_log_type_t)v126, "ðŸ§­ FMR1ProximMgr%@: setting up for '%s', but in background", (uint8_t *)v72, 0x16u);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v73, -1, -1);
        unsigned int v84 = v130;
        swift_arrayDestroy();
        MEMORY[0x253326010](v84, -1, -1);
        MEMORY[0x253326010](v72, -1, -1);

LABEL_26:
        uint64_t v108 = v78;
        id v66 = v131;
        uint64_t result = v82(v128, v108);
        goto LABEL_42;
      }

      sub_24D2B6E58((uint64_t)v136);
    }
    else
    {
      sub_24D2C8328();
      uint64_t v85 = v62;
      id v86 = (void *)sub_24D39CE90();
      id v87 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F62598]), sel_initWithDelegate_queue_, v85, v86);

      os_log_type_t v88 = (void (*)(uint64_t))v126->isa;
      if (v126->isa)
      {
        uint64_t v89 = swift_retain();
        v88(v89);
        sub_24D2E44C8((uint64_t)v88);
      }
      unint64_t v90 = v87;
      sub_24D2F5040(v87);

      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v91 = sub_24D39C950();
      sub_24D2B508C(v91, (uint64_t)qword_269869FD0);
      sub_24D2B6CE8(v60, (uint64_t)v136);
      uint64_t v92 = v17;
      unint64_t v93 = v17;
      uint64_t v94 = sub_24D39C930();
      os_log_type_t v95 = sub_24D39CDF0();
      int v96 = v95;
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v97 = swift_slowAlloc();
        id v130 = v90;
        uint64_t v98 = v97;
        __int16 v99 = (void *)swift_slowAlloc();
        os_log_t v125 = (os_log_t)swift_slowAlloc();
        os_log_t v139 = v125;
        *(_DWORD *)uint64_t v98 = 138412546;
        LODWORD(v124) = v96;
        uint64_t v126 = v85;
        uint64_t v135 = (uint64_t)v92;
        uint64_t v100 = v92;
        sub_24D39D070();
        *__int16 v99 = v93;

        *(_WORD *)(v98 + 12) = 2080;
        uint64_t v123 = (void *)(v98 + 14);
        id v131 = v66;
        uint64_t v101 = v137;
        uint64_t v102 = v138;
        sub_24D2B8A34(v136, v137);
        unint64_t v103 = v132;
        (*(void (**)(uint64_t, uint64_t))(v102 + 16))(v101, v102);
        sub_24D2F6148((unint64_t *)&qword_2698610F0, 255, MEMORY[0x263F07508]);
        uint64_t v78 = v133;
        uint64_t v104 = sub_24D39D490();
        unint64_t v106 = v105;
        unsigned __int16 v82 = v127;
        v127(v103, v78);
        uint64_t v135 = sub_24D2B8328(v104, v106, (uint64_t *)&v139);
        sub_24D39D070();
        swift_bridgeObjectRelease();
        sub_24D2B6E58((uint64_t)v136);
        _os_log_impl(&dword_24D2B1000, v94, (os_log_type_t)v124, "ðŸ§­ FMR1ProximMgr%@: setting up for '%s', created item localizer", (uint8_t *)v98, 0x16u);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v99, -1, -1);
        os_log_t v107 = v125;
        swift_arrayDestroy();
        MEMORY[0x253326010](v107, -1, -1);
        MEMORY[0x253326010](v98, -1, -1);

        goto LABEL_26;
      }

      sub_24D2B6E58((uint64_t)v136);
    }
    uint64_t result = v127(v128, v133);
    goto LABEL_42;
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_24D39C950();
  sub_24D2B508C(v22, (uint64_t)qword_269869FD0);
  sub_24D2B6CE8((uint64_t)a1, (uint64_t)v136);
  os_log_t v23 = a2;
  id v24 = sub_24D39C930();
  os_log_type_t v25 = sub_24D39CDF0();
  int v26 = v25;
  BOOL v27 = os_log_type_enabled(v24, v25);
  uint64_t v127 = (uint64_t (*)(char *, uint64_t))v23;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc();
    LODWORD(v125) = v26;
    uint64_t v29 = v28;
    uint64_t v30 = (void *)swift_slowAlloc();
    uint64_t v123 = v30;
    uint64_t v126 = swift_slowAlloc();
    os_log_t v139 = v126;
    *(_DWORD *)uint64_t v29 = 138412802;
    os_log_t v124 = v24;
    uint64_t v135 = (uint64_t)v23;
    uint64_t v31 = v23;
    sub_24D39D070();
    *uint64_t v30 = v23;

    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v122 = v29 + 14;
    uint64_t v33 = v137;
    uint64_t v32 = v138;
    sub_24D2B8A34(v136, v137);
    uint64_t v34 = a1;
    uint64_t v35 = v132;
    (*(void (**)(uint64_t, uint64_t))(v32 + 16))(v33, v32);
    sub_24D2F6148((unint64_t *)&qword_2698610F0, 255, MEMORY[0x263F07508]);
    uint64_t v36 = v133;
    uint64_t v37 = sub_24D39D490();
    unint64_t v39 = v38;
    uint64_t v40 = v35;
    a1 = v34;
    (*(void (**)(char *, uint64_t))(v134 + 8))(v40, v36);
    uint64_t v135 = sub_24D2B8328(v37, v39, (uint64_t *)&v139);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    sub_24D2B6E58((uint64_t)v136);
    *(_WORD *)(v29 + 22) = 2080;
    if (*((unsigned char *)&v31->isa + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground)) {
      uint64_t v41 = 0x6B636162206E6928;
    }
    else {
      uint64_t v41 = 0;
    }
    if (*((unsigned char *)&v31->isa + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_applicationIsInBackground)) {
      unint64_t v42 = 0xEF29646E756F7267;
    }
    else {
      unint64_t v42 = 0xE000000000000000;
    }
    uint64_t v135 = sub_24D2B8328(v41, v42, (uint64_t *)&v139);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    os_log_t v23 = v124;
    _os_log_impl(&dword_24D2B1000, v124, (os_log_type_t)v125, "ðŸ§­ FMR1ProximMgr%@: setting up for '%s' but item already known %s", (uint8_t *)v29, 0x20u);
    sub_24D2B7450(&qword_269861308);
    uint64_t v43 = v123;
    swift_arrayDestroy();
    MEMORY[0x253326010](v43, -1, -1);
    uint64_t v44 = v126;
    swift_arrayDestroy();
    MEMORY[0x253326010](v44, -1, -1);
    MEMORY[0x253326010](v29, -1, -1);
  }
  else
  {

    sub_24D2B6E58((uint64_t)v136);
  }

  uint64_t v110 = (uint64_t)v128;
  os_log_t v111 = *v18;
  if ((*v18)[2].isa)
  {
    swift_bridgeObjectRetain();
    unint64_t v112 = sub_24D3839F0(v110);
    if (v113)
    {
      uint64_t v114 = (void *)*((void *)v111[7].isa + v112);
      id v115 = v114;
    }
    else
    {
      uint64_t v114 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v114 = 0;
  }
  sub_24D2B6CE8((uint64_t)a1, (uint64_t)v136);
  id v116 = objc_allocWithZone((Class)type metadata accessor for FMR1ProximityManagerSubscription());
  id v117 = v114;
  uint64_t v118 = swift_unknownObjectRetain();
  id v119 = sub_24D2F5C04(v118, (uint64_t)v130, (uint64_t)v136);
  swift_unknownObjectRelease();

  if (v114)
  {
    id v120 = v117;
    sub_24D2EDBB4(v119);
  }
  uint64_t v121 = (void *)((char *)v127 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_subscriptions);
  swift_beginAccess();
  id v66 = v119;
  MEMORY[0x253324C20]();
  if (*(void *)((*v121 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v121 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_24D39CC40();
  }
  sub_24D39CC60();
  sub_24D39CC30();
  swift_endAccess();

  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v134 + 8))(v110, v133);
LABEL_42:
  *__int16 v129 = v66;
  return result;
}

void sub_24D2F36D4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x253326120](v1);
  if (v2)
  {
    os_log_type_t v3 = (char *)v2;
    uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_itemLocalizersCount;
    if (*(uint64_t *)(v2 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_itemLocalizersCount) < 1)
    {
LABEL_18:
      uint64_t v19 = *(void *)&v3[v4];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (!v20)
      {
        *(void *)&v3[v4] = v21;

        return;
      }
      __break(1u);
LABEL_22:
      __break(1u);
      return;
    }
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_24D39C950();
    sub_24D2B508C(v5, (uint64_t)qword_269869FD0);
    uint64_t v6 = v3;
    uint64_t v7 = sub_24D39C930();
    os_log_type_t v8 = sub_24D39CDF0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412546;
      uint64_t v11 = v6;
      sub_24D39D070();
      *uint64_t v10 = v3;

      *(_WORD *)(v9 + 12) = 2048;
      sub_24D39D070();

      _os_log_impl(&dword_24D2B1000, v7, v8, "ðŸ§­ FMR1ProximMgr%@: previous item localizers still exist (%ld)", (uint8_t *)v9, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v10, -1, -1);
      MEMORY[0x253326010](v9, -1, -1);
    }
    else
    {

      uint64_t v7 = v6;
    }

    swift_beginAccess();
    uint64_t v12 = swift_bridgeObjectRetain();
    unint64_t v13 = sub_24D2E9384(v12);
    unint64_t v14 = v13;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_24D39D2D0();
      if (v15) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v15)
      {
LABEL_10:
        if (v15 < 1) {
          goto LABEL_22;
        }
        for (uint64_t i = 0; i != v15; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0) {
            id v17 = (id)MEMORY[0x253325220](i, v14);
          }
          else {
            id v17 = *(id *)(v14 + 8 * i + 32);
          }
          unint64_t v18 = v17;
          sub_24D2EC3AC();
        }
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
}

void sub_24D2F39D8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (char *)MEMORY[0x253326120](v1);
  if (v2)
  {
    uint64_t v3 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_itemLocalizersCount];
    BOOL v4 = __OFSUB__(v3, 1);
    uint64_t v5 = v3 - 1;
    if (v4)
    {
      __break(1u);
    }
    else
    {
      *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_itemLocalizersCount] = v5;
    }
  }
}

uint64_t sub_24D2F3A40(void *a1)
{
  uint64_t v3 = sub_24D39C990();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24D39C9D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_serialQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_24D2F6130;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D32194C;
  aBlock[3] = &unk_26FF86F30;
  uint64_t v12 = _Block_copy(aBlock);
  unint64_t v13 = v1;
  id v14 = a1;
  sub_24D39C9B0();
  v16[1] = MEMORY[0x263F8EE78];
  sub_24D2F6148((unint64_t *)&qword_269860EE0, 255, MEMORY[0x263F8F030]);
  sub_24D2B7450((uint64_t *)&unk_2698610D0);
  sub_24D2C7144((unint64_t *)&qword_269860EF0, (uint64_t *)&unk_2698610D0);
  sub_24D39D0E0();
  MEMORY[0x253324EE0](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_24D2F3CF8(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_24D39C8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B6CE8((uint64_t)a2 + OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_findable, (uint64_t)v105);
  uint64_t v9 = v106;
  uint64_t v10 = v107;
  sub_24D2B8A34(v105, v106);
  ((void (*)(uint64_t, void *))v10[2])(v9, v10);
  sub_24D2B6E58((uint64_t)v105);
  uint64_t v11 = a1 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_contexts;
  swift_beginAccess();
  uint64_t v12 = *(void *)v11;
  if (*(void *)(*(void *)v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_24D3839F0((uint64_t)v8);
    if (v14)
    {
      uint64_t v10 = *(id *)(*(void *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      id v2 = a2;
      unint64_t v15 = swift_bridgeObjectRetain();
      unint64_t v16 = sub_24D2F5468(v15);
      uint64_t v103 = 0;
      swift_bridgeObjectRelease();

      if (v16 >> 62) {
        uint64_t v17 = sub_24D39D2D0();
      }
      else {
        uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v17)
      {
        if (qword_2698602B0 != -1) {
          goto LABEL_36;
        }
        while (1)
        {
          uint64_t v18 = sub_24D39C950();
          sub_24D2B508C(v18, (uint64_t)qword_269869FD0);
          uint64_t v19 = v10;
          id v20 = (id)a1;
          uint64_t v21 = v19;
          uint64_t v22 = v20;
          os_log_t v23 = sub_24D39C930();
          os_log_type_t v24 = sub_24D39CDF0();
          int v25 = v24;
          if (os_log_type_enabled(v23, v24))
          {
            uint64_t v26 = swift_slowAlloc();
            id v101 = v2;
            uint64_t v27 = v26;
            uint64_t v28 = (void *)swift_slowAlloc();
            __int16 v99 = swift_slowAlloc();
            uint64_t v104 = v99;
            *(_DWORD *)uint64_t v27 = 138412546;
            LODWORD(v98) = v25;
            uint64_t v97 = v23;
            v105[0] = v22;
            uint64_t v100 = (void *)a1;
            uint64_t v29 = v22;
            uint64_t v102 = v5;
            uint64_t v30 = v29;
            sub_24D39D070();
            *uint64_t v28 = v22;
            uint64_t v31 = v28;

            *(_WORD *)(v27 + 12) = 2080;
            uint64_t v10 = v105;
            sub_24D2B6CE8((uint64_t)v21 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, (uint64_t)v105);
            uint64_t v32 = v106;
            uint64_t v33 = v107;
            sub_24D2B8A34(v105, v106);
            uint64_t v34 = (uint64_t (*)(uint64_t, void *))v33[1];
            uint64_t v35 = v33;
            a1 = (uint64_t)v100;
            uint64_t v36 = v34(v32, v35);
            unint64_t v38 = v37;
            sub_24D2B6E58((uint64_t)v105);
            v105[0] = sub_24D2B8328(v36, v38, (uint64_t *)&v104);
            uint64_t v5 = v102;
            sub_24D39D070();

            swift_bridgeObjectRelease();
            uint64_t v22 = v97;
            _os_log_impl(&dword_24D2B1000, v97, (os_log_type_t)v98, "ðŸ§­ FMR1ProximMgr%@: unsubscribing, did not tear down, subscriptions still exist '%s'", (uint8_t *)v27, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v31, -1, -1);
            unint64_t v39 = v99;
            swift_arrayDestroy();
            MEMORY[0x253326010](v39, -1, -1);
            uint64_t v40 = v27;
            id v2 = v101;
            MEMORY[0x253326010](v40, -1, -1);
          }
          else
          {
          }
          sub_24D2EE078(v2);
LABEL_28:

          unint64_t v90 = *(void (**)(char *, uint64_t))(v6 + 8);
          v6 += 8;
          v90(v8, v5);
          uint64_t v91 = (uint64_t *)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_subscriptions);
          swift_beginAccess();
          id v92 = v2;
          uint64_t v5 = sub_24D2F5DBC(v91, (uint64_t)v92);

          a1 = *v91;
          if ((unint64_t)*v91 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v44 = sub_24D39D2D0();
            swift_bridgeObjectRelease();
            if (v44 >= v5) {
              goto LABEL_30;
            }
          }
          else
          {
            uint64_t v44 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v44 >= v5) {
              goto LABEL_30;
            }
          }
          __break(1u);
LABEL_36:
          swift_once();
        }
      }
LABEL_13:
      if (*((unsigned char *)v10 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_activity) == 1)
      {
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v45 = sub_24D39C950();
        sub_24D2B508C(v45, (uint64_t)qword_269869FD0);
        uint64_t v46 = v10;
        id v47 = (id)a1;
        int v48 = v46;
        id v49 = v47;
        uint64_t v50 = sub_24D39C930();
        os_log_type_t v51 = sub_24D39CDF0();
        LODWORD(v99) = v51;
        if (os_log_type_enabled(v50, v51))
        {
          os_log_t v96 = (os_log_t)swift_slowAlloc();
          uint64_t v98 = (uint8_t *)swift_slowAlloc();
          uint64_t v95 = swift_slowAlloc();
          uint64_t v104 = v95;
          LODWORD(v96->isa) = 138412546;
          uint64_t v97 = v50;
          uint64_t v100 = v48;
          id v101 = v2;
          v105[0] = v49;
          id v52 = v49;
          uint64_t v102 = v5;
          id v53 = v52;
          sub_24D39D070();
          *(void *)uint64_t v98 = v49;

          os_log_t v54 = v96;
          WORD2(v96[1].isa) = 2080;
          sub_24D2B6CE8((uint64_t)v100 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, (uint64_t)v105);
          uint64_t v55 = v106;
          uint64_t v56 = v107;
          sub_24D2B8A34(v105, v106);
          unint64_t v57 = (uint64_t (*)(uint64_t, void *))v56[1];
          uint64_t v58 = v56;
          id v2 = v101;
          uint64_t v59 = v57(v55, v58);
          unint64_t v61 = v60;
          sub_24D2B6E58((uint64_t)v105);
          uint64_t v62 = sub_24D2B8328(v59, v61, (uint64_t *)&v104);
          uint64_t v63 = (uint8_t *)v54;
          v105[0] = v62;
          uint64_t v5 = v102;
          int v48 = v100;
          sub_24D39D070();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24D2B1000, v97, (os_log_type_t)v99, "ðŸ§­ FMR1ProximMgr%@: tore down '%s' (stopping first)", v63, 0x16u);
          sub_24D2B7450(&qword_269861308);
          id v64 = v98;
          swift_arrayDestroy();
          MEMORY[0x253326010](v64, -1, -1);
          uint64_t v65 = v95;
          swift_arrayDestroy();
          MEMORY[0x253326010](v65, -1, -1);
          MEMORY[0x253326010](v63, -1, -1);
        }
        else
        {
        }
      }
      else
      {
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v66 = sub_24D39C950();
        sub_24D2B508C(v66, (uint64_t)qword_269869FD0);
        uint64_t v67 = v10;
        id v68 = (id)a1;
        id v69 = v67;
        id v70 = v68;
        int v71 = sub_24D39C930();
        os_log_type_t v72 = sub_24D39CDF0();
        LODWORD(v100) = v72;
        if (os_log_type_enabled(v71, v72))
        {
          uint64_t v73 = swift_slowAlloc();
          uint64_t v95 = (uint64_t)v69;
          uint64_t v74 = (uint8_t *)v73;
          __int16 v99 = swift_slowAlloc();
          uint64_t v97 = swift_slowAlloc();
          uint64_t v104 = v97;
          uint64_t v98 = v74;
          *(_DWORD *)uint64_t v74 = 138412546;
          os_log_t v96 = v71;
          id v101 = v2;
          v105[0] = v70;
          id v75 = v70;
          uint64_t v102 = v5;
          id v76 = v75;
          sub_24D39D070();
          v99->Class isa = (Class)v70;

          uint64_t v77 = v98;
          *((_WORD *)v98 + 6) = 2080;
          uint64_t v94 = v77 + 14;
          uint64_t v78 = (void *)v95;
          sub_24D2B6CE8(v95 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_findable, (uint64_t)v105);
          uint64_t v79 = v106;
          unint64_t v80 = v107;
          sub_24D2B8A34(v105, v106);
          unint64_t v81 = (uint64_t (*)(uint64_t, void *))v80[1];
          unsigned __int16 v82 = v80;
          id v2 = v101;
          uint64_t v83 = v81(v79, v82);
          unint64_t v85 = v84;
          sub_24D2B6E58((uint64_t)v105);
          v105[0] = sub_24D2B8328(v83, v85, (uint64_t *)&v104);
          uint64_t v5 = v102;
          sub_24D39D070();

          swift_bridgeObjectRelease();
          os_log_t v86 = v96;
          id v87 = v98;
          _os_log_impl(&dword_24D2B1000, v96, (os_log_type_t)v100, "ðŸ§­ FMR1ProximMgr%@: unsubscribing, tore down '%s'", v98, 0x16u);
          sub_24D2B7450(&qword_269861308);
          os_log_type_t v88 = v99;
          swift_arrayDestroy();
          MEMORY[0x253326010](v88, -1, -1);
          uint64_t v89 = v97;
          swift_arrayDestroy();
          MEMORY[0x253326010](v89, -1, -1);
          MEMORY[0x253326010](v87, -1, -1);
        }
        else
        {
        }
      }
      sub_24D2EC3AC();
      swift_beginAccess();
      uint64_t v21 = (void *)sub_24D2D59BC((uint64_t)v8);
      swift_endAccess();

      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v41 = *(void (**)(char *, uint64_t))(v6 + 8);
  v6 += 8;
  v41(v8, v5);
  unint64_t v42 = (uint64_t *)(a1 + OBJC_IVAR____TtC11FMFindingUI20FMR1ProximityManager_subscriptions);
  swift_beginAccess();
  id v43 = a2;
  uint64_t v5 = sub_24D2F5DBC(v42, (uint64_t)v43);

  a1 = *v42;
  if ((unint64_t)*v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_24D39D2D0();
    swift_bridgeObjectRelease();
    if (v44 < v5) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v44 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v44 < v5)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
  }
LABEL_30:
  sub_24D2F58B0(v5, v44, (void (*)(void))type metadata accessor for FMR1ProximityManagerSubscription);
  return swift_endAccess();
}

id sub_24D2F4864()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1ProximityManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMR1ProximityManager()
{
  return self;
}

uint64_t getEnumTagSinglePayload for FMLocalizerActivity(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMLocalizerActivity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D2F4A74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMLocalizerActivity()
{
  return &type metadata for FMLocalizerActivity;
}

uint64_t getEnumTagSinglePayload for FMFindableState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMFindableState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D2F4C08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindableState()
{
  return &type metadata for FMFindableState;
}

unsigned char *storeEnumTagSinglePayload for FMLocalizerState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D2F4D0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMLocalizerState()
{
  return &type metadata for FMLocalizerState;
}

unint64_t sub_24D2F4D48()
{
  unint64_t result = qword_2698615B0;
  if (!qword_2698615B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698615B0);
  }
  return result;
}

unint64_t sub_24D2F4DA0()
{
  unint64_t result = qword_2698615B8;
  if (!qword_2698615B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698615B8);
  }
  return result;
}

unint64_t sub_24D2F4DF8()
{
  unint64_t result = qword_2698615C0;
  if (!qword_2698615C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698615C0);
  }
  return result;
}

uint64_t sub_24D2F4E4C(uint64_t (*a1)(void))
{
  return a1();
}

void sub_24D2F4E74(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  unsigned int v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_24D39D070();
  *a1 = v7;
  int v8 = *a2;
  if (*a2)
  {
    *int v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_24D2F4F2C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_24D39D2D0();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_identifier;
  while (1)
  {
    id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x253325220](v5, a1) : *(id *)(a1 + 8 * v5 + 32);
    uint64_t v7 = v6;
    char v8 = sub_24D39C870();

    if (v8) {
      return v5;
    }
    uint64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4) {
      return 0;
    }
  }
}

uint64_t sub_24D2F5040(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer;
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer);
  *(void *)(v2 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer) = a1;
  id v5 = a1;

  if (*(void *)(v2 + v3))
  {
    return sub_24D2EC8A4();
  }
  else
  {
    uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem;
    if (*(void *)(v2 + OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_releaseItemLocalizerWorkItem))
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)(v2 + v7) = 0;
    return swift_release();
  }
}

void sub_24D2F50EC()
{
  uint64_t v1 = (char *)MEMORY[0x253326120](&v0[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_context]);
  if (!v1)
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24D39C950();
    sub_24D2B508C(v9, (uint64_t)qword_269869FD0);
    unint64_t v15 = v0;
    uint64_t v10 = sub_24D39C930();
    os_log_type_t v11 = sub_24D39CDF0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      unint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      char v14 = v15;
      sub_24D39D070();
      *unint64_t v13 = v15;

      _os_log_impl(&dword_24D2B1000, v10, v11, "ðŸ§­ FMR1PrxSubscr%@: asking to log torch changed state analytics event but no context", v12, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v13, -1, -1);
      MEMORY[0x253326010](v12, -1, -1);

      return;
    }

    goto LABEL_13;
  }
  if (!*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI24FMR1ItemLocalizerContext_itemLocalizer])
  {
    unint64_t v15 = v1;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_24D39C950();
    sub_24D2B508C(v2, (uint64_t)qword_269869FD0);
    uint64_t v3 = v0;
    uint64_t v4 = sub_24D39C930();
    os_log_type_t v5 = sub_24D39CDF0();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)id v6 = 138412290;
      char v8 = v3;
      sub_24D39D070();
      *uint64_t v7 = v3;

      _os_log_impl(&dword_24D2B1000, v4, v5, "ðŸ§­ FMR1PrxSubscr%@: asking to log torch changed state analytics event but no itemlocalizer", v6, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v7, -1, -1);
      MEMORY[0x253326010](v6, -1, -1);

      return;
    }

LABEL_13:
    uint64_t v1 = v15;
  }
}

uint64_t sub_24D2F5450(uint64_t a1, uint64_t a2)
{
  return sub_24D2F58B0(a1, a2, (void (*)(void))type metadata accessor for FMNearbyInteractionManagerSubscription);
}

uint64_t sub_24D2F5468(unint64_t a1)
{
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x253325220](v3, a1);
LABEL_9:
        os_log_type_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        sub_24D39C8A0();
        sub_24D2F6148((unint64_t *)&qword_2698613A0, 255, MEMORY[0x263F07508]);
        if (sub_24D39CAB0())
        {
        }
        else
        {
          sub_24D39D240();
          sub_24D39D270();
          sub_24D39D280();
          sub_24D39D250();
        }
        ++v3;
        if (v6 == v2) {
          return v8;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_24D39D2D0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

unint64_t sub_24D2F5624(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

unint64_t sub_24D2F5634(unint64_t result)
{
  if (result >= 9) {
    return 9;
  }
  return result;
}

unint64_t sub_24D2F5644(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

unint64_t sub_24D2F5654()
{
  unint64_t result = qword_2698615D0;
  if (!qword_2698615D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698615D0);
  }
  return result;
}

unint64_t sub_24D2F56A8()
{
  unint64_t result = qword_2698615D8;
  if (!qword_2698615D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698615D8);
  }
  return result;
}

unint64_t sub_24D2F56FC()
{
  unint64_t result = qword_2698615E0;
  if (!qword_2698615E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698615E0);
  }
  return result;
}

uint64_t sub_24D2F5750()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24D2F5788()
{
  sub_24D2ED96C(*(unsigned char **)(v0 + 16), "ðŸ§­ FMR1PrxContxt%@: expired background");
}

uint64_t sub_24D2F57AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D2F57BC()
{
  return swift_release();
}

void sub_24D2F57C4()
{
  sub_24D2ED96C(*(unsigned char **)(v0 + 16), "ðŸ§­ FMR1PrxContxt%@: entered background");
}

uint64_t sub_24D2F57E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450((uint64_t *)&unk_269861600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D2F5850(uint64_t a1)
{
  uint64_t v2 = sub_24D2B7450((uint64_t *)&unk_269861600);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D2F58B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_24D39D2D0();
  swift_bridgeObjectRelease();
  if (v23 < v3) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_24D39D2D0();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 + v7;
    if (!__OFADD__(v9, v7)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_24D39D2D0();
    swift_bridgeObjectRelease();
    unint64_t v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 - v8;
  if (__OFADD__(v9, v7)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  uint64_t v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v9 = 1;
  }
  if (v11 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10) {
    uint64_t v14 = v10;
  }
  swift_bridgeObjectRetain();
  *uint64_t v4 = MEMORY[0x253325230](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = *v4 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v15 = v13 + 32;
  unint64_t v16 = (char *)(v13 + 32 + 8 * v5);
  v6(0);
  swift_arrayDestroy();
  if (v7)
  {
    if (*v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_24D39D2D0();
      swift_bridgeObjectRelease();
      uint64_t v18 = v24 - v3;
      if (!__OFSUB__(v24, v3))
      {
LABEL_21:
        if (v18 < 0)
        {
LABEL_46:
          uint64_t result = sub_24D39D310();
          __break(1u);
          return result;
        }
        uint64_t v19 = (char *)(v15 + 8 * v3);
        if (v5 != v3 || v16 >= &v19[8 * v18]) {
          memmove(v16, v19, 8 * v18);
        }
        if (!(*v4 >> 62))
        {
          uint64_t v20 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v21 = v20 + v7;
          if (!__OFADD__(v20, v7))
          {
LABEL_27:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v21;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_24D39D2D0();
        swift_bridgeObjectRelease();
        uint64_t v21 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v18 = v17 - v3;
      if (!__OFSUB__(v17, v3)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_24D39CC30();
}

uint64_t sub_24D2F5BC4()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24D2F5BFC()
{
  sub_24D2ECBC0(v0);
}

id sub_24D2F5C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24D39C8A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v3[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber];
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_subscriber + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v3[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsRangingOnly] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_wantsLocalizer] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_poseProvider] = 0;
  unint64_t v11 = v3;
  sub_24D39C890();
  (*(void (**)(unsigned char *, char *, uint64_t))(v7 + 32))(&v11[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_identifier], v9, v6);
  *((void *)v10 + 1) = a2;
  swift_unknownObjectWeakAssign();
  sub_24D2B6CE8(a3, (uint64_t)&v11[OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_findable]);
  swift_unknownObjectWeakAssign();

  uint64_t v12 = (objc_class *)type metadata accessor for FMR1ProximityManagerSubscription();
  v15.receiver = v11;
  v15.super_class = v12;
  id v13 = objc_msgSendSuper2(&v15, sel_init);
  sub_24D2B6E58(a3);
  return v13;
}

unint64_t sub_24D2F5DBC(uint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_24D2F4F2C(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v8)
    {
      unint64_t v24 = *a1;
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v6 = sub_24D39D2D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      uint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_54;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_55:
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_24D39D2D0();
        swift_bridgeObjectRelease();
        if (v9 != v26) {
          goto LABEL_6;
        }
      }
      else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        a2 += OBJC_IVAR____TtC11FMFindingUI32FMR1ProximityManagerSubscription_identifier;
        for (unint64_t i = v6 + 5; ; ++i)
        {
          unint64_t v11 = i - 4;
          uint64_t v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            id v13 = (id)MEMORY[0x253325220](i - 4);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
            if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_45;
            }
            id v13 = *(id *)(v12 + 8 * i);
          }
          uint64_t v14 = v13;
          uint64_t v9 = sub_24D39C870();

          if ((v9 & 1) == 0) {
            break;
          }
LABEL_32:
          uint64_t v9 = i - 3;
          if (__OFADD__(v11, 1)) {
            goto LABEL_46;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v23 = sub_24D39D2D0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v23 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v9 == v23) {
            return v6;
          }
        }
        if (v11 == v6)
        {
LABEL_31:
          if (__OFADD__(v6++, 1)) {
            goto LABEL_47;
          }
          goto LABEL_32;
        }
        uint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v15 = (id)MEMORY[0x253325220](v6, *a1);
          uint64_t v9 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_50;
            }
            if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_51;
            }
            id v16 = *(id *)(v9 + 8 * i);
            goto LABEL_20;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_48;
          }
          if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_49;
          }
          id v15 = *(id *)(v9 + 8 * v6 + 32);
          if ((v9 & 0xC000000000000001) == 0) {
            goto LABEL_17;
          }
        }
        id v16 = (id)MEMORY[0x253325220](i - 4, v9);
        uint64_t v9 = *a1;
LABEL_20:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          uint64_t v9 = sub_24D3594D0(v9);
          *a1 = v9;
        }
        uint64_t v18 = *(void **)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v16;

        sub_24D39CC30();
        uint64_t v9 = *a1;
        int v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!v19 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          uint64_t v9 = sub_24D3594D0(v9);
          *a1 = v9;
        }
        if ((v11 & 0x8000000000000000) != 0) {
          goto LABEL_52;
        }
        uint64_t v20 = v9 & 0xFFFFFFFFFFFFFF8;
        if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_53;
        }
        uint64_t v21 = *(void **)(v20 + 8 * i);
        *(void *)(v20 + 8 * i) = v15;

        sub_24D39CC30();
        goto LABEL_31;
      }
    }
  }
  return v6;
}

uint64_t sub_24D2F60F0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D2F6130()
{
  return sub_24D2F3CF8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_24D2F6138()
{
  sub_24D2F36D4(v0);
}

void sub_24D2F6140()
{
  sub_24D2F39D8(v0);
}

uint64_t sub_24D2F6148(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void destroy for FMFindingState(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 99) <= 3u) {
    sub_24D2B6DE8(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(_WORD *)(a1 + 96), *(unsigned char *)(a1 + 98));
  }
}

uint64_t initializeWithCopy for FMFindingState(uint64_t a1, uint64_t *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 99);
  if (v4 > 3)
  {
    long long v12 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v12;
    *(void *)(a1 + 93) = *(uint64_t *)((char *)a2 + 93);
    long long v13 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    long long v14 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v14;
  }
  else
  {
    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    char v7 = (void *)a2[2];
    char v8 = (void *)a2[3];
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    uint64_t v11 = a2[6];
    uint64_t v16 = a2[7];
    uint64_t v17 = a2[8];
    uint64_t v18 = a2[9];
    uint64_t v19 = a2[10];
    uint64_t v20 = a2[11];
    __int16 v21 = *((_WORD *)a2 + 48);
    char v22 = *((unsigned char *)a2 + 98);
    sub_24D2B6F80(*a2, v6, v7, v8, v9, v10, v11, v16, v17, v18, v19, v20, v21, v22);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v16;
    *(void *)(a1 + 64) = v17;
    *(void *)(a1 + 72) = v18;
    *(void *)(a1 + 80) = v19;
    *(void *)(a1 + 88) = v20;
    *(_WORD *)(a1 + 96) = v21;
    *(unsigned char *)(a1 + 98) = v22;
    *(unsigned char *)(a1 + 99) = v4;
    *(unsigned char *)(a1 + 100) = *((unsigned char *)a2 + 100);
  }
  return a1;
}

uint64_t assignWithCopy for FMFindingState(uint64_t a1, long long *a2)
{
  unsigned int v4 = *((unsigned __int8 *)a2 + 99);
  if (*(unsigned __int8 *)(a1 + 99) > 3u)
  {
    if (v4 <= 3)
    {
      uint64_t v26 = *(void *)a2;
      uint64_t v27 = *((void *)a2 + 1);
      uint64_t v28 = (void *)*((void *)a2 + 2);
      uint64_t v29 = (void *)*((void *)a2 + 3);
      uint64_t v30 = *((void *)a2 + 4);
      uint64_t v31 = *((void *)a2 + 5);
      uint64_t v32 = *((void *)a2 + 6);
      uint64_t v33 = *((void *)a2 + 7);
      uint64_t v41 = *((void *)a2 + 8);
      uint64_t v43 = *((void *)a2 + 9);
      uint64_t v45 = *((void *)a2 + 10);
      uint64_t v47 = *((void *)a2 + 11);
      __int16 v49 = *((_WORD *)a2 + 48);
      char v51 = *((unsigned char *)a2 + 98);
      sub_24D2B6F80(*(void *)a2, v27, v28, v29, v30, v31, v32, v33, v41, v43, v45, v47, v49, v51);
      *(void *)a1 = v26;
      *(void *)(a1 + 8) = v27;
      *(void *)(a1 + 16) = v28;
      *(void *)(a1 + 24) = v29;
      *(void *)(a1 + 32) = v30;
      *(void *)(a1 + 40) = v31;
      *(void *)(a1 + 48) = v32;
      *(void *)(a1 + 56) = v33;
      *(void *)(a1 + 64) = v41;
      *(void *)(a1 + 72) = v43;
      *(void *)(a1 + 80) = v45;
      *(void *)(a1 + 88) = v47;
      *(_WORD *)(a1 + 96) = v49;
      *(unsigned char *)(a1 + 98) = v51;
      goto LABEL_6;
    }
LABEL_8:
    long long v34 = *a2;
    long long v35 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v35;
    *(_OWORD *)a1 = v34;
    long long v36 = a2[3];
    long long v37 = a2[4];
    long long v38 = a2[5];
    *(void *)(a1 + 93) = *(void *)((char *)a2 + 93);
    *(_OWORD *)(a1 + 64) = v37;
    *(_OWORD *)(a1 + 80) = v38;
    *(_OWORD *)(a1 + 48) = v36;
    return a1;
  }
  if (v4 > 3)
  {
    sub_24D2B6DE8(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(_WORD *)(a1 + 96), *(unsigned char *)(a1 + 98));
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *((void *)a2 + 1);
  char v7 = (void *)*((void *)a2 + 2);
  char v8 = (void *)*((void *)a2 + 3);
  uint64_t v9 = *((void *)a2 + 4);
  uint64_t v10 = *((void *)a2 + 5);
  uint64_t v11 = *((void *)a2 + 6);
  uint64_t v12 = *((void *)a2 + 7);
  uint64_t v40 = *((void *)a2 + 8);
  uint64_t v42 = *((void *)a2 + 9);
  uint64_t v44 = *((void *)a2 + 10);
  uint64_t v46 = *((void *)a2 + 11);
  __int16 v48 = *((_WORD *)a2 + 48);
  char v50 = *((unsigned char *)a2 + 98);
  sub_24D2B6F80(*(void *)a2, v6, v7, v8, v9, v10, v11, v12, v40, v42, v44, v46, v48, v50);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  id v15 = *(void **)(a1 + 16);
  uint64_t v16 = *(void **)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  long long v21 = *(_OWORD *)(a1 + 64);
  uint64_t v22 = *(void *)(a1 + 80);
  uint64_t v23 = *(void *)(a1 + 88);
  __int16 v24 = *(_WORD *)(a1 + 96);
  char v25 = *(unsigned char *)(a1 + 98);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v40;
  *(void *)(a1 + 72) = v42;
  *(void *)(a1 + 80) = v44;
  *(void *)(a1 + 88) = v46;
  *(_WORD *)(a1 + 96) = v48;
  *(unsigned char *)(a1 + 98) = v50;
  sub_24D2B6DE8(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25);
LABEL_6:
  *(unsigned char *)(a1 + 99) = *((unsigned char *)a2 + 99);
  *(unsigned char *)(a1 + 100) = *((unsigned char *)a2 + 100);
  return a1;
}

__n128 initializeWithTake for FMFindingState(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 93) = *(void *)((char *)a2 + 93);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FMFindingState(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 99) > 3u) {
    goto LABEL_5;
  }
  unsigned int v4 = *(unsigned __int8 *)(a2 + 99);
  if (v4 > 3)
  {
    sub_24D2B6DE8(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(_WORD *)(a1 + 96), *(unsigned char *)(a1 + 98));
LABEL_5:
    long long v23 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v23;
    *(void *)(a1 + 93) = *(void *)(a2 + 93);
    long long v24 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v24;
    long long v25 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v25;
    return a1;
  }
  __int16 v5 = *(_WORD *)(a2 + 96);
  char v6 = *(unsigned char *)(a2 + 98);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  uint64_t v10 = *(void **)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  long long v15 = *(_OWORD *)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 88);
  __int16 v18 = *(_WORD *)(a1 + 96);
  char v19 = *(unsigned char *)(a1 + 98);
  long long v20 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v20;
  long long v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  long long v22 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v22;
  *(_WORD *)(a1 + 96) = v5;
  *(unsigned char *)(a1 + 98) = v6;
  sub_24D2B6DE8(v7, v8, v9, v10, v11, v12, v13, v14, v15, *((uint64_t *)&v15 + 1), v16, v17, v18, v19);
  *(unsigned char *)(a1 + 99) = v4;
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 101)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 99);
  if (v3 >= 4) {
    unsigned int v4 = v3 - 3;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 5) {
    return v4 - 4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FMFindingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(void *)(result + 93) = 0;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 101) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 101) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 99) = a2 + 7;
    }
  }
  return result;
}

uint64_t sub_24D2F6778(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 99);
  if (v1 >= 4) {
    return v1 - 3;
  }
  else {
    return 0;
  }
}

double sub_24D2F678C(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xFC)
  {
    *(void *)(a1 + 88) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 100) = 0;
    *(_DWORD *)(a1 + 96) = 0;
    *(void *)a1 = a2 - 253;
  }
  else if (a2)
  {
    *(unsigned char *)(a1 + 99) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingState()
{
  return &type metadata for FMFindingState;
}

uint64_t sub_24D2F67E4(unsigned __int8 *a1, char *a2)
{
  return sub_24D37A848(*a1, *a2);
}

uint64_t sub_24D2F67F0()
{
  return sub_24D39D5D0();
}

uint64_t sub_24D2F68BC()
{
  sub_24D39CB40();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D2F6970()
{
  return sub_24D39D5D0();
}

uint64_t sub_24D2F6A38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D2F8828();
  *a1 = result;
  return result;
}

void sub_24D2F6A68(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701869940;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000746E65;
      uint64_t v3 = 0x6D6572757361656DLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x646E657274;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 1953393000;
      a1[1] = 0xE400000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_24D2F6AF4()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6572757361656DLL;
      break;
    case 2:
      uint64_t result = 0x646E657274;
      break;
    case 3:
      uint64_t result = 1953393000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D2F6B74@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D2F8828();
  *a1 = result;
  return result;
}

void sub_24D2F6B9C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24D2F6BA8(uint64_t a1)
{
  unint64_t v2 = sub_24D2F8DCC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D2F6BE4(uint64_t a1)
{
  unint64_t v2 = sub_24D2F8DCC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D2F6C20()
{
  sub_24D2B6EA8(v0, (uint64_t)v26);
  uint64_t v22 = v26[1];
  uint64_t v23 = v26[0];
  unsigned int v1 = (void *)v26[3];
  long long v21 = (void *)v26[2];
  uint64_t v2 = v26[4];
  uint64_t v3 = v26[5];
  uint64_t v4 = v26[6];
  uint64_t v5 = v26[7];
  uint64_t v6 = v26[10];
  int v24 = v27;
  sub_24D2B6EA8(v0, (uint64_t)&v28);
  unint64_t v7 = 0xEC00000064657463;
  uint64_t v8 = 0x656E6E6F63736964;
  uint64_t v9 = MEMORY[0x263F8D310];
  uint64_t v10 = (_OWORD *)&unk_24D3A0000;
  switch((unsigned __int16)(((unint64_t)(v43 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
      break;
    case 1u:
      unint64_t v7 = 0xEA0000000000676ELL;
      uint64_t v8 = 0x697463656E6E6F63;
      break;
    case 2u:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v8 = 0x676E69766F6DLL;
      break;
    case 3u:
      unint64_t v7 = 0xEF68746150646574;
      uint64_t v8 = 0x6172656E65676564;
      break;
    default:
      uint64_t v11 = v5;
      uint64_t v12 = v2;
      unint64_t v25 = 0xE300000000000000;
      uint64_t v13 = 7496038;
      uint64_t v9 = MEMORY[0x263F8D310];
      switch(BYTE2(v43))
      {
        case 1:
          unint64_t v25 = 0xE400000000000000;
          uint64_t v13 = 1918985582;
          break;
        case 2:
          unint64_t v25 = 0xE400000000000000;
          uint64_t v13 = 1701995880;
          break;
        case 3:
          unint64_t v25 = 0xE500000000000000;
          uint64_t v13 = 0x646E756F66;
          break;
        case 4:
          if (v30 != (void *)1)
          {
            uint64_t v19 = v29;
            uint64_t v20 = v28;
            uint64_t v44 = v28;
            char v45 = v29 & 1;
            uint64_t v46 = v30;
            uint64_t v47 = v31;
            __int16 v18 = v31;
            uint64_t v48 = v32;
            char v49 = v33 & 1;
            uint64_t v50 = v34;
            char v51 = v35 & 1;
            char v52 = v36 & 1;
            uint64_t v53 = v37;
            char v54 = v38 & 1;
            char v55 = v39 & 1;
            char v56 = v40 & 1;
            uint64_t v57 = v41;
            uint64_t v58 = v42;
            __int16 v59 = v43 & 0x101;
            uint64_t v14 = v30;
            sub_24D2B6F80(v23, v22, v21, v1, v12, v3, v4, v11, MEMORY[0x263F8D310], 0x24D3A0000, v6, 0x656E6E6F63736964, v24, SBYTE2(v24));
            sub_24D2B6FAC(v20, v19, v14, v18);
            sub_24D2BE2F8();
          }
          sub_24D39CB70();
          sub_24D2F86E4(0xEC00000064657463, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
          swift_bridgeObjectRelease();
          uint64_t v13 = 0x3A65736963657270;
          unint64_t v25 = 0xE900000000000020;
          break;
        default:
          break;
      }
      sub_24D2B7450((uint64_t *)&unk_269861860);
      uint64_t v15 = swift_allocObject();
      uint64_t v10 = &unk_24D3A0000;
      *(_OWORD *)(v15 + 16) = xmmword_24D3A0050;
      *(void *)(v15 + 56) = v9;
      *(void *)(v15 + 64) = sub_24D2B7494();
      *(void *)(v15 + 32) = v13;
      *(void *)(v15 + 40) = v25;
      sub_24D39CB00();
      sub_24D39CB70();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24D39CB70();
      swift_bridgeObjectRelease();
      sub_24D2B7450(&qword_269861660);
      sub_24D39D030();
      swift_bridgeObjectRetain();
      sub_24D39CB70();
      sub_24D2F86E4(0xEC00000064657463, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = 0x657463656E6E6F63;
      unint64_t v7 = 0xEB00000000203A64;
      break;
  }
  sub_24D2B7450((uint64_t *)&unk_269861860);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = v10[5];
  *(void *)(v16 + 56) = v9;
  *(void *)(v16 + 64) = sub_24D2B7494();
  *(void *)(v16 + 32) = v8;
  *(void *)(v16 + 40) = v7;
  return sub_24D39CB00();
}

uint64_t sub_24D2F7138(void *a1)
{
  uint64_t v2 = v1;
  sub_24D2B6EA8(v2, (uint64_t)v59);
  uint64_t v40 = v59[1];
  uint64_t v41 = v59[0];
  char v38 = (void *)v59[3];
  char v39 = (void *)v59[2];
  uint64_t v36 = v59[5];
  uint64_t v37 = v59[4];
  uint64_t v34 = v59[7];
  uint64_t v35 = v59[6];
  uint64_t v32 = v59[9];
  uint64_t v33 = v59[8];
  uint64_t v30 = v59[11];
  uint64_t v31 = v59[10];
  uint64_t v29 = v61;
  int v4 = v60;
  uint64_t v65 = sub_24D2B7450(&qword_269861648);
  uint64_t v42 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D2F8DCC();
  sub_24D39D5F0();
  sub_24D2B6EA8(v2, (uint64_t)v62);
  char v7 = v64;
  __int16 v8 = v63;
  __int16 v9 = HIWORD(v63);
  switch((unsigned __int16)(((unint64_t)(v63 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
      LOBYTE(v45) = 0;
      goto LABEL_10;
    case 1u:
      LOBYTE(v45) = 0;
      goto LABEL_10;
    case 2u:
      LOBYTE(v45) = 0;
      goto LABEL_10;
    case 3u:
      LOBYTE(v45) = 0;
LABEL_10:
      uint64_t v15 = v65;
      sub_24D39D440();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v6, v15);
      break;
    default:
      uint64_t v27 = v62[0];
      uint64_t v28 = v2;
      uint64_t v29 = v62[2];
      uint64_t v10 = v62[3];
      uint64_t v25 = v62[4];
      uint64_t v26 = v62[1];
      uint64_t v23 = v62[6];
      uint64_t v24 = v62[5];
      uint64_t v21 = v62[8];
      uint64_t v22 = v62[7];
      uint64_t v19 = v62[10];
      uint64_t v20 = v62[9];
      uint64_t v18 = v62[11];
      LOBYTE(v45) = 0;
      sub_24D2B6F80(v41, v40, v39, v38, v37, v36, v35, v34, v33, v32, v31, v30, v4, SBYTE2(v4));
      uint64_t v11 = v65;
      uint64_t v12 = v43;
      sub_24D39D440();
      if (v12)
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v11);
        uint64_t v13 = v28;
      }
      else
      {
        uint64_t v45 = v27;
        uint64_t v46 = v26;
        uint64_t v47 = v29;
        uint64_t v48 = v10;
        uint64_t v49 = v25;
        uint64_t v50 = v24;
        uint64_t v51 = v23;
        uint64_t v52 = v22;
        uint64_t v53 = v21;
        uint64_t v54 = v20;
        uint64_t v55 = v19;
        uint64_t v56 = v18;
        __int16 v57 = v8;
        char v58 = v9;
        char v44 = 1;
        sub_24D2F8F1C();
        sub_24D39D450();
        LOBYTE(v45) = HIBYTE(v9);
        char v44 = 2;
        sub_24D2F8F70();
        sub_24D39D450();
        uint64_t v16 = v28;
        LOBYTE(v45) = v7;
        char v44 = 3;
        sub_24D2B7450(&qword_269861660);
        sub_24D2F8FC4();
        sub_24D39D450();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v11);
        uint64_t v13 = v16;
      }
      uint64_t result = sub_24D2F86E4(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
      break;
  }
  return result;
}

uint64_t sub_24D2F75B8()
{
  sub_24D2B6EA8(v0, (uint64_t)&v16);
  int v1 = v29;
  int v2 = v28;
  switch((unsigned __int16)(((unint64_t)(v28 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      return sub_24D39D5A0();
    default:
      uint64_t v14 = v17;
      uint64_t v15 = v16;
      uint64_t v12 = v19;
      uint64_t v13 = v18;
      uint64_t v10 = v21;
      uint64_t v11 = v20;
      uint64_t v8 = v23;
      uint64_t v9 = v22;
      uint64_t v4 = v24;
      uint64_t v5 = v25;
      uint64_t v6 = v26;
      uint64_t v7 = v27;
      uint64_t v30 = v16;
      uint64_t v31 = v17;
      uint64_t v32 = v18;
      uint64_t v33 = v19;
      uint64_t v34 = v20;
      uint64_t v35 = v21;
      uint64_t v36 = v22;
      uint64_t v37 = v23;
      uint64_t v38 = v24;
      uint64_t v39 = v25;
      uint64_t v40 = v26;
      uint64_t v41 = v27;
      __int16 v42 = v28;
      char v43 = BYTE2(v28);
      sub_24D39D5A0();
      sub_24D2B6F80(v15, v14, v13, v12, v11, v10, v9, v8, v4, v5, v6, v7, v2, SBYTE2(v2));
      sub_24D328C28();
      sub_24D39D5A0();
      if (v1 == 3) {
        goto LABEL_7;
      }
      sub_24D39D5B0();
      if (v1 == 2)
      {
        sub_24D39D5A0();
      }
      else
      {
        sub_24D39D5A0();
LABEL_7:
        sub_24D39D5B0();
      }
      return sub_24D2F86E4(v0, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
  }
}

uint64_t sub_24D2F778C()
{
  sub_24D39D590();
  sub_24D2B6EA8(v0, (uint64_t)&v16);
  int v1 = v29;
  int v2 = v28;
  switch((unsigned __int16)(((unint64_t)(v28 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      sub_24D39D5A0();
      return sub_24D39D5D0();
    default:
      uint64_t v14 = v17;
      uint64_t v15 = v16;
      uint64_t v12 = v19;
      uint64_t v13 = v18;
      uint64_t v10 = v21;
      uint64_t v11 = v20;
      uint64_t v4 = v23;
      uint64_t v9 = v22;
      uint64_t v5 = v24;
      uint64_t v6 = v25;
      uint64_t v7 = v26;
      uint64_t v8 = v27;
      uint64_t v30 = v16;
      uint64_t v31 = v17;
      uint64_t v32 = v18;
      uint64_t v33 = v19;
      uint64_t v34 = v20;
      uint64_t v35 = v21;
      uint64_t v36 = v22;
      uint64_t v37 = v23;
      uint64_t v38 = v24;
      uint64_t v39 = v25;
      uint64_t v40 = v26;
      uint64_t v41 = v27;
      __int16 v42 = v28;
      char v43 = BYTE2(v28);
      sub_24D39D5A0();
      sub_24D2B6F80(v15, v14, v13, v12, v11, v10, v9, v4, v5, v6, v7, v8, v2, SBYTE2(v2));
      sub_24D328C28();
      sub_24D39D5A0();
      if (v1 == 3) {
        goto LABEL_8;
      }
      sub_24D39D5B0();
      if (v1 == 2)
      {
        sub_24D39D5A0();
      }
      else
      {
        sub_24D39D5A0();
LABEL_8:
        sub_24D39D5B0();
      }
      sub_24D2F86E4(v0, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
      return sub_24D39D5D0();
  }
}

uint64_t sub_24D2F7980(uint64_t a1, uint64_t a2)
{
  sub_24D2B6EA8(a1, (uint64_t)v4);
  sub_24D2B6EA8(a2, (uint64_t)v5);
  return sub_24D2F8060((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_24D2F79CC()
{
  sub_24D2B6EA8(v0, (uint64_t)v2);
  return sub_24D2F778C();
}

uint64_t sub_24D2F7A04()
{
  sub_24D2B6EA8(v0, (uint64_t)v2);
  return sub_24D2F75B8();
}

uint64_t sub_24D2F7A44()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 64);
  uint64_t v14 = *(void *)(v0 + 72);
  uint64_t v15 = *(void **)(v0 + 16);
  unint64_t v9 = *(unsigned int *)(v0 + 96) | ((unint64_t)*(unsigned __int8 *)(v0 + 100) << 32);
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v11 = *(void *)(v0 + 88);
  uint64_t v13 = v10;
  sub_24D39D590();
  switch((unsigned __int16)(((unint64_t)(v9 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
      sub_24D39D5A0();
      break;
    default:
      sub_24D39D5A0();
      sub_24D2B6F80(v1, v2, v15, v3, v5, v4, v6, v7, v8, v14, v13, v11, v9, SBYTE2(v9));
      sub_24D328C28();
      sub_24D39D5A0();
      if (HIDWORD(v9) == 3)
      {
        sub_24D39D5B0();
        sub_24D2B72E4(v1, v2, v15, v3, v5, v4, v6, v7, v8, v14, v13, v11, v9);
      }
      else
      {
        sub_24D39D5B0();
        sub_24D39D5A0();
        if (HIDWORD(v9) != 2) {
          sub_24D39D5B0();
        }
        sub_24D2B72E4(v1, v2, v15, v3, v5, v4, v6, v7, v8, v14, v13, v11, v9);
      }
      break;
  }
  return sub_24D39D5D0();
}

uint64_t sub_24D2F7CA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24D2F8874(a1, (uint64_t)v5);
  if (!v2) {
    return sub_24D2B6EA8((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_24D2F7CEC(void *a1)
{
  sub_24D2B6EA8(v1, (uint64_t)v4);
  return sub_24D2F7138(a1);
}

uint64_t sub_24D2F7D3C()
{
  sub_24D2B6EA8(v0, (uint64_t)v2);
  return sub_24D2F6C20();
}

unint64_t sub_24D2F7D78()
{
  unint64_t result = qword_269861618;
  if (!qword_269861618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861618);
  }
  return result;
}

uint64_t sub_24D2F7DCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_mainScreen);
  uint64_t v5 = (void *)sub_24D39CAC0();
  int v6 = MGGetSInt32Answer();

  id v7 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v7, sel_nativeScale);
  double v9 = v8;

  id v10 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v10, sel_bounds);
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;

  v41.origin.x = v12;
  v41.origin.y = v14;
  v41.size.width = v16;
  v41.size.height = v18;
  double Width = CGRectGetWidth(v41);
  id v20 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v20, sel_bounds);
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;

  v42.origin.x = v22;
  v42.origin.y = v24;
  v42.size.width = v26;
  v42.size.height = v28;
  double v29 = CGRectGetWidth(v42);
  uint64_t result = sub_24D2B6EA8(v1, (uint64_t)v39);
  _Q0 = 0uLL;
  float v32 = 0.0;
  double v33 = 0.0;
  if ((v40 | 0x2000000u) >> 25 == 3)
  {
    double v34 = 0.0;
  }
  else
  {
    double v34 = 0.0;
    switch(BYTE2(v40))
    {
      case 1:
        __asm { FMOV            V0.2D, #0.5; jumptable 000000024D2F7FE4 case 1 }
        *(double *)&_Q0 = (32.0 / Width + (double)v6 * 1.252 / v9 / v29) * 0.5;
        double v33 = 0.5;
        float v32 = 0.5;
        goto LABEL_9;
      case 2:
        __asm { FMOV            V0.2D, #4.5; jumptable 000000024D2F7FE4 case 2 }
        *(double *)&_Q0 = (double)v6 * 1.252 / v9 / v29;
        double v34 = 1.0;
        double v33 = INFINITY;
        float v32 = 0.8;
        break;
      case 3:
        __asm { FMOV            V0.2D, #4.5; jumptable 000000024D2F7FE4 case 3 }
        *(double *)&_Q0 = (double)v6 * 1.252 / v9 / v29;
LABEL_9:
        double v34 = 1.0;
        break;
      case 4:
        break;
      default:
        *(double *)&_Q0 = 32.0 / Width;
        double v34 = 1.0;
        float v32 = 0.2;
        double v33 = 1.0;
        break;
    }
  }
  *(_OWORD *)a1 = _Q0;
  *(double *)(a1 + 16) = v34;
  *(float *)(a1 + 24) = v32;
  *(double *)(a1 + 32) = v33;
  return result;
}

uint64_t sub_24D2F8060(uint64_t a1, uint64_t a2)
{
  sub_24D2B6EA8(a2, (uint64_t)v109);
  unint64_t v80 = (void *)v109[2];
  uint64_t v81 = v109[1];
  uint64_t v79 = (void *)v109[3];
  uint64_t v77 = v109[0];
  uint64_t v78 = v109[4];
  uint64_t v3 = v109[5];
  uint64_t v4 = v109[6];
  uint64_t v5 = v109[7];
  uint64_t v6 = v109[8];
  uint64_t v7 = v109[9];
  uint64_t v8 = v109[10];
  uint64_t v9 = v109[11];
  int v10 = v110;
  sub_24D2B6EA8(a1, (uint64_t)v125);
  switch((unsigned __int16)(((unint64_t)(v126 & 0xFF000000) - 0x4000000) >> 24))
  {
    case 0u:
      sub_24D2B6EA8(a2, (uint64_t)&v83);
      if ((unint64_t)HIBYTE(v95) << 24 == 0x4000000) {
        goto LABEL_7;
      }
      goto LABEL_9;
    case 1u:
      sub_24D2B6EA8(a2, (uint64_t)&v83);
      if ((unint64_t)HIBYTE(v95) << 24 != 83886080) {
        goto LABEL_9;
      }
      goto LABEL_7;
    case 2u:
      sub_24D2B6EA8(a2, (uint64_t)&v83);
      if ((v95 & 0xFE000000) != 0x6000000) {
        goto LABEL_9;
      }
LABEL_7:
      char v11 = 1;
      return v11 & 1;
    case 3u:
      goto LABEL_9;
    default:
      int v63 = v10;
      int v66 = v126;
      uint64_t v68 = v9;
      uint64_t v69 = v8;
      uint64_t v70 = v7;
      uint64_t v71 = v6;
      int v72 = v126;
      uint64_t v73 = v5;
      uint64_t v74 = v4;
      uint64_t v75 = v3;
      uint64_t v76 = a1;
      uint64_t v12 = v125[0];
      uint64_t v13 = v125[1];
      int v61 = v127;
      uint64_t v62 = v125[2];
      uint64_t v14 = v125[3];
      uint64_t v15 = v125[4];
      uint64_t v16 = v125[5];
      uint64_t v17 = v125[6];
      uint64_t v18 = v125[7];
      uint64_t v60 = v125[8];
      uint64_t v19 = v125[9];
      uint64_t v20 = v125[10];
      uint64_t v21 = v125[11];
      sub_24D2B6EA8(a2, (uint64_t)&v111);
      if ((v123 | 0x2000000u) >> 25 == 3)
      {
LABEL_9:
        char v11 = 0;
        return v11 & 1;
      }
      break;
  }
  uint64_t v53 = v15;
  uint64_t v54 = v16;
  uint64_t v55 = v17;
  uint64_t v56 = v18;
  uint64_t v57 = v12;
  uint64_t v58 = v19;
  uint64_t v52 = v13;
  uint64_t v59 = v20;
  int v23 = v63;
  __int16 v64 = v66;
  uint64_t v47 = v111;
  uint64_t v48 = v112;
  int v24 = HIBYTE(v66);
  int v25 = v124;
  uint64_t v26 = v113;
  uint64_t v50 = v114;
  __int16 v51 = v123;
  int v27 = BYTE2(v123);
  uint64_t v49 = v115;
  uint64_t v65 = v116;
  uint64_t v67 = v117;
  uint64_t v28 = v118;
  uint64_t v29 = v119;
  uint64_t v30 = v120;
  uint64_t v31 = v121;
  uint64_t v32 = v122;
  switch(BYTE2(v72))
  {
    case 1:
      int v33 = HIBYTE(v123);
      sub_24D2F86E4(v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
      char v11 = 0;
      if (v27 == 1) {
        goto LABEL_19;
      }
      return v11 & 1;
    case 2:
      int v33 = HIBYTE(v123);
      sub_24D2F86E4(v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
      char v11 = 0;
      if (v27 == 2) {
        goto LABEL_19;
      }
      return v11 & 1;
    case 3:
      int v33 = HIBYTE(v123);
      sub_24D2F86E4(v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
      char v11 = 0;
      if (v27 == 3) {
        goto LABEL_19;
      }
      return v11 & 1;
    case 4:
      if (BYTE2(v123) != 4) {
        goto LABEL_9;
      }
      if (v62 != 1)
      {
        if (v113 != 1)
        {
          int v45 = HIBYTE(v123);
          uint64_t v128 = v57;
          char v129 = v52 & 1;
          uint64_t v130 = v62;
          uint64_t v131 = v14;
          uint64_t v132 = v53;
          char v133 = v54 & 1;
          uint64_t v134 = v55;
          __int16 v135 = v56 & 0x101;
          uint64_t v136 = v60;
          __int16 v137 = v58 & 0x101;
          char v138 = BYTE2(v58) & 1;
          uint64_t v139 = v59;
          uint64_t v140 = v21;
          char v141 = v64 & 1;
          char v142 = BYTE1(v72) & 1;
          uint64_t v83 = v111;
          LOBYTE(v84) = v112 & 1;
          uint64_t v85 = v113;
          uint64_t v86 = v114;
          uint64_t v87 = v115;
          LOBYTE(v88) = v116 & 1;
          uint64_t v89 = v117;
          LOWORD(v90) = v118 & 0x101;
          uint64_t v91 = v119;
          LOWORD(v92) = v120 & 0x101;
          BYTE2(v92) = BYTE2(v120) & 1;
          uint64_t v93 = v121;
          uint64_t v94 = v122;
          LOWORD(v95) = v123 & 0x101;
          sub_24D2F86E4(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
          sub_24D2F86E4(v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
          char v46 = sub_24D2BEE6C((uint64_t)&v128, (uint64_t)&v83);
          sub_24D2F86E4(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
          sub_24D2F86E4(v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
          char v11 = 0;
          if ((v46 & 1) == 0) {
            return v11 & 1;
          }
          int v34 = v61;
          if (v24 != v45) {
            return v11 & 1;
          }
          goto LABEL_20;
        }
        uint64_t v44 = v120;
        sub_24D2B6F80(v77, v81, v80, v79, v78, v75, v74, v73, v71, v70, v69, v68, v23, SBYTE2(v23));
        uint64_t v30 = v44;
        uint64_t v36 = v59;
        uint64_t v35 = v21;
        uint64_t v38 = v57;
        uint64_t v37 = v58;
        uint64_t v39 = v60;
        uint64_t v41 = v55;
        uint64_t v40 = v56;
        uint64_t v43 = v53;
        uint64_t v42 = v54;
LABEL_36:
        uint64_t v83 = v38;
        uint64_t v84 = v52;
        uint64_t v85 = v62;
        uint64_t v86 = v14;
        uint64_t v87 = v43;
        uint64_t v88 = v42;
        uint64_t v89 = v41;
        uint64_t v90 = v40;
        uint64_t v91 = v39;
        uint64_t v92 = v37;
        uint64_t v93 = v36;
        uint64_t v94 = v35;
        LOWORD(v95) = v64;
        uint64_t v96 = v47;
        uint64_t v97 = v48;
        uint64_t v98 = v26;
        uint64_t v99 = v50;
        uint64_t v100 = v49;
        uint64_t v101 = v65;
        uint64_t v102 = v67;
        uint64_t v103 = v28;
        uint64_t v104 = v29;
        uint64_t v105 = v30;
        uint64_t v106 = v31;
        uint64_t v107 = v32;
        __int16 v108 = v51;
        sub_24D2F86E4(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
        sub_24D2F86E4(v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
        sub_24D2F8750((uint64_t)&v83);
        goto LABEL_9;
      }
      uint64_t v36 = v59;
      uint64_t v35 = v21;
      uint64_t v38 = v57;
      uint64_t v37 = v58;
      uint64_t v39 = v60;
      uint64_t v41 = v55;
      uint64_t v40 = v56;
      uint64_t v43 = v53;
      uint64_t v42 = v54;
      if (v113 != 1) {
        goto LABEL_36;
      }
      int v34 = v61;
      if (v24 != HIBYTE(v123)) {
        goto LABEL_9;
      }
LABEL_20:
      char v11 = v34 == 3;
      if (v25 != 3) {
        char v11 = 0;
      }
      if (v34 != 3 && v25 != 3)
      {
        char v11 = v34 == 2;
        if (v25 != 2) {
          char v11 = 0;
        }
        if (v34 != 2 && v25 != 2) {
          char v11 = ((v34 & 1) == 0) ^ v25;
        }
      }
      return v11 & 1;
    default:
      int v33 = HIBYTE(v123);
      sub_24D2F86E4(v76, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
      char v11 = 0;
      if (v27) {
        return v11 & 1;
      }
LABEL_19:
      int v34 = v61;
      if (v24 == v33) {
        goto LABEL_20;
      }
      return v11 & 1;
  }
}

uint64_t sub_24D2F86E4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))
{
  return a1;
}

uint64_t sub_24D2F8750(uint64_t a1)
{
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v2 = *(void **)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v3 = *(void **)(a1 + 128);
  sub_24D2B6E14(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24));
  sub_24D2B6E14(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_24D2F8828()
{
  unint64_t v0 = sub_24D39D330();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_24D2F8874@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24D2B7450(&qword_269861620);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D2F8DCC();
  sub_24D39D5E0();
  if (v2) {
    return sub_24D2B6E58((uint64_t)a1);
  }
  LOBYTE(v37) = 0;
  switch(sub_24D39D3B0())
  {
    case 1:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v10 = 0;
      uint64_t v32 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      unint64_t v15 = 0x4000000;
      break;
    case 2:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v10 = 0;
      uint64_t v32 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      unint64_t v15 = 83886080;
      break;
    case 3:
      char v51 = 1;
      sub_24D2F8E20();
      sub_24D39D3C0();
      uint64_t v35 = v38;
      uint64_t v36 = v37;
      uint64_t v33 = v40;
      uint64_t v34 = v39;
      uint64_t v30 = v42;
      uint64_t v31 = v41;
      uint64_t v29 = v43;
      uint64_t v32 = v44;
      uint64_t v28 = v45;
      uint64_t v27 = v46;
      uint64_t v26 = v47;
      uint64_t v25 = v48;
      uint64_t v16 = v49;
      uint64_t v17 = v50;
      char v51 = 2;
      sub_24D2F8E74();
      sub_24D39D3C0();
      uint64_t v23 = v17;
      uint64_t v24 = v16;
      uint64_t v22 = v37;
      char v51 = 3;
      sub_24D2F8EC8();
      sub_24D39D3C0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t v15 = v24 | (v23 << 16) | (v22 << 24) | ((unint64_t)v37 << 32);
      uint64_t v10 = v29;
      uint64_t v11 = v28;
      uint64_t v12 = v27;
      uint64_t v13 = v26;
      uint64_t v14 = v25;
      break;
    case 4:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v10 = 0;
      uint64_t v32 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      unint64_t v15 = 100663296;
      break;
    case 5:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v10 = 0;
      uint64_t v32 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      unint64_t v15 = 117440512;
      break;
    default:
      sub_24D39D2B0();
      __break(1u);
      JUMPOUT(0x24D2F8DB8);
  }
  uint64_t result = sub_24D2B6E58((uint64_t)a1);
  uint64_t v18 = v35;
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v18;
  uint64_t v19 = v33;
  *(void *)(a2 + 16) = v34;
  *(void *)(a2 + 24) = v19;
  uint64_t v20 = v30;
  *(void *)(a2 + 32) = v31;
  *(void *)(a2 + 40) = v20;
  uint64_t v21 = v32;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v21;
  *(void *)(a2 + 64) = v11;
  *(void *)(a2 + 72) = v12;
  *(void *)(a2 + 80) = v13;
  *(void *)(a2 + 88) = v14;
  *(_DWORD *)(a2 + 96) = v15;
  *(unsigned char *)(a2 + 100) = BYTE4(v15);
  return result;
}

unint64_t sub_24D2F8DCC()
{
  unint64_t result = qword_269861628;
  if (!qword_269861628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861628);
  }
  return result;
}

unint64_t sub_24D2F8E20()
{
  unint64_t result = qword_269861630;
  if (!qword_269861630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861630);
  }
  return result;
}

unint64_t sub_24D2F8E74()
{
  unint64_t result = qword_269861638;
  if (!qword_269861638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861638);
  }
  return result;
}

unint64_t sub_24D2F8EC8()
{
  unint64_t result = qword_269861640;
  if (!qword_269861640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861640);
  }
  return result;
}

unint64_t sub_24D2F8F1C()
{
  unint64_t result = qword_269861650;
  if (!qword_269861650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861650);
  }
  return result;
}

unint64_t sub_24D2F8F70()
{
  unint64_t result = qword_269861658;
  if (!qword_269861658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861658);
  }
  return result;
}

unint64_t sub_24D2F8FC4()
{
  unint64_t result = qword_269861668;
  if (!qword_269861668)
  {
    sub_24D2C067C(&qword_269861660);
    sub_24D2F9038();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861668);
  }
  return result;
}

unint64_t sub_24D2F9038()
{
  unint64_t result = qword_269861670;
  if (!qword_269861670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861670);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMFindingType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMFindingState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D2F91E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingState.CodingKeys()
{
  return &type metadata for FMFindingState.CodingKeys;
}

unint64_t sub_24D2F9224()
{
  unint64_t result = qword_269861678;
  if (!qword_269861678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861678);
  }
  return result;
}

unint64_t sub_24D2F927C()
{
  unint64_t result = qword_269861680;
  if (!qword_269861680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861680);
  }
  return result;
}

unint64_t sub_24D2F92D4()
{
  unint64_t result = qword_269861688;
  if (!qword_269861688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861688);
  }
  return result;
}

uint64_t sub_24D2F9468()
{
  sub_24D39D1D0();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_24D39D600();
  uint64_t v2 = sub_24D34315C(6, v0, v1);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  MEMORY[0x253324B60](v2, v4, v6, v8);
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  uint64_t v9 = sub_24D39CB00();
  swift_bridgeObjectRelease();
  return v9;
}

id sub_24D2F960C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_24D39C9A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC11FMFindingUI13FMPFARSCNView_innerIsolationQueue;
  sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F080], v12);
  uint64_t v17 = v5;
  uint64_t v18 = sub_24D39CED0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *(void *)&v6[v16] = v18;
  *(void *)&v17[OBJC_IVAR____TtC11FMFindingUI13FMPFARSCNView_internalIsolationQueue] = 0;

  if (a1)
  {
    uint64_t v19 = (void *)sub_24D39CA70();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = 0;
  }
  uint64_t v20 = (objc_class *)type metadata accessor for FMPFARSCNView();
  v23.receiver = v17;
  v23.super_class = v20;
  id v21 = objc_msgSendSuper2(&v23, sel_initWithFrame_options_, v19, a2, a3, a4, a5);

  return v21;
}

id sub_24D2F99FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24D39C9A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC11FMFindingUI13FMPFARSCNView_innerIsolationQueue;
  sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F080], v4);
  uint64_t v9 = v1;
  uint64_t v10 = sub_24D39CED0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(void *)&v2[v8] = v10;
  *(void *)&v9[OBJC_IVAR____TtC11FMFindingUI13FMPFARSCNView_internalIsolationQueue] = 0;

  uint64_t v11 = (objc_class *)type metadata accessor for FMPFARSCNView();
  v14.receiver = v9;
  v14.super_class = v11;
  id v12 = objc_msgSendSuper2(&v14, sel_initWithCoder_, a1);

  return v12;
}

id sub_24D2F9B94()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFARSCNView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFARSCNView()
{
  return self;
}

unint64_t sub_24D2F9C38()
{
  unint64_t result = qword_2698616A8;
  if (!qword_2698616A8)
  {
    sub_24D2BC100(255, (unint64_t *)&qword_2698616A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698616A8);
  }
  return result;
}

id sub_24D2F9CA0(double a1, double a2, double a3, double a4)
{
  id v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  double v9 = a3 * 0.5;
  double v10 = a1 - a3 * 0.5;
  double v11 = a4 * 0.5;
  double v12 = a4 * 0.5 + a2;
  double v13 = v9 + a1;
  double v14 = a2 - v11;
  id v15 = v8;
  objc_msgSend(v15, sel_moveToPoint_, v10, v12);
  objc_msgSend(v15, sel_addLineToPoint_, v13, v12);
  objc_msgSend(v15, sel_addLineToPoint_, v13, v14);
  objc_msgSend(v15, sel_addLineToPoint_, v10, v14);
  objc_msgSend(v15, sel_addLineToPoint_, v10, v12);
  objc_msgSend(v15, sel_closePath);

  return v15;
}

id sub_24D2F9D9C()
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  id v1 = objc_allocWithZone(v0);
  sub_24D2BC100(0, &qword_269861878);
  objc_super v2 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  sub_24D2BC100(0, &qword_269861858);
  uint64_t v3 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  v8[0] = 0;
  id v4 = objc_msgSend(v1, sel_initWithEvents_parameters_error_, v2, v3, v8);

  if (v4)
  {
    id v5 = v8[0];
  }
  else
  {
    id v6 = v8[0];
    sub_24D39C710();

    swift_willThrow();
  }
  return v4;
}

id sub_24D2F9ED8(uint64_t a1, uint64_t a2)
{
  return sub_24D2F9FBC(a1, a2, &qword_269861858, 0x263F00580, (SEL *)&selRef_initWithEvents_parameters_error_);
}

id sub_24D2F9F58(uint64_t a1, uint64_t a2)
{
  return sub_24D2F9FBC(a1, a2, (unint64_t *)&unk_2698618A0, 0x263F005A0, (SEL *)&selRef_initWithEvents_parameterCurves_error_);
}

id sub_24D2F9FBC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, SEL *a5)
{
  v16[1] = *(id *)MEMORY[0x263EF8340];
  id v8 = &v5[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_name];
  *id v8 = 0;
  v8[1] = 0;
  v5[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_isTap] = 2;
  sub_24D2BC100(0, &qword_269861878);
  double v9 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  sub_24D2BC100(0, a3);
  double v10 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  v16[0] = 0;
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for FMR1HapticPattern();
  id v11 = objc_msgSendSuper2(&v15, *a5, v9, v10, v16);

  if (v11)
  {
    id v12 = v16[0];
  }
  else
  {
    id v13 = v16[0];
    sub_24D39C710();

    swift_willThrow();
  }
  return v11;
}

id sub_24D2FA138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t a7, SEL *a8)
{
  sub_24D2BC100(0, &qword_269861878);
  uint64_t v11 = sub_24D39CC10();
  sub_24D2BC100(0, a6);
  uint64_t v12 = sub_24D39CC10();
  return sub_24D2F9FBC(v11, v12, a6, a7, a8);
}

id sub_24D2FA230()
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  id v1 = &v0[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_name];
  void *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_isTap] = 2;
  type metadata accessor for Key(0);
  sub_24D3059D8(&qword_269860888, type metadata accessor for Key);
  objc_super v2 = (void *)sub_24D39CA70();
  swift_bridgeObjectRelease();
  v8[0] = 0;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for FMR1HapticPattern();
  id v3 = objc_msgSendSuper2(&v7, sel_initWithDictionary_error_, v2, v8);

  if (v3)
  {
    id v4 = v8[0];
  }
  else
  {
    id v5 = v8[0];
    sub_24D39C710();

    swift_willThrow();
  }
  return v3;
}

id sub_24D2FA458(uint64_t a1)
{
  objc_super v2 = v1;
  v14[1] = *(id *)MEMORY[0x263EF8340];
  id v4 = objc_allocWithZone(v2);
  id v5 = (void *)sub_24D39C740();
  v14[0] = 0;
  id v6 = objc_msgSend(v4, sel_initWithContentsOfURL_error_, v5, v14);

  id v7 = v14[0];
  if (v6)
  {
    uint64_t v8 = sub_24D39C780();
    double v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v14[0];
    sub_24D39C710();

    swift_willThrow();
    uint64_t v12 = sub_24D39C780();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

id sub_24D2FA5B0(uint64_t a1)
{
  objc_super v2 = v1;
  v15[1] = *(id *)MEMORY[0x263EF8340];
  id v4 = &v2[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_name];
  *id v4 = 0;
  v4[1] = 0;
  v2[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_isTap] = 2;
  id v5 = (void *)sub_24D39C740();
  v15[0] = 0;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for FMR1HapticPattern();
  id v6 = objc_msgSendSuper2(&v14, sel_initWithContentsOfURL_error_, v5, v15);

  id v7 = v15[0];
  if (v6)
  {
    uint64_t v8 = sub_24D39C780();
    double v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v15[0];
    sub_24D39C710();

    swift_willThrow();
    uint64_t v12 = sub_24D39C780();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

id sub_24D2FA7F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1HapticPattern();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMR1HapticPattern()
{
  return self;
}

NSObject *sub_24D2FA864()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticCapability;
  objc_super v2 = self;
  id v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_capabilitiesForHardware);
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink] = 0;
  id v4 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastRenderTime];
  *(void *)id v4 = 0;
  v4[8] = 1;
  id v5 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticLastPlayTimestamp];
  *(void *)id v5 = 0;
  v5[8] = 1;
  id v6 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay];
  *(void *)id v6 = 0;
  v6[8] = 1;
  id v7 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(void *)id v7 = 0;
  v7[8] = 1;
  uint64_t v8 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern] = 0;
  double v9 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPatternIntensity];
  *(_DWORD *)double v9 = 0;
  v9[4] = 1;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap1HapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap2HapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap3HapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap4HapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap5HapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_connectedHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_buildHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_scatterHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadOffHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachOffHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_preNearbyHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelIncreaseHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelDecreaseHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_farNearHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_farHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_pulseViewPattern] = 0;
  id v10 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticLastPlayTimestamp];
  *(void *)id v10 = 0;
  v10[8] = 1;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer] = 0;
  id v11 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactor];
  *(_DWORD *)id v11 = 0;
  v11[4] = 1;
  uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticRampingFactorSpring;
  *(void *)&v3[v12] = sub_24D32B3C8(0x3FF0000000000000, 0, 0, 1, 0, 1);
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_setup] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_restartContinuousHapticWorkItem] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_enablePlayingAheadHaptic] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem] = 0;
  v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactorLogCounter] = 0;
  id v13 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastLoggedContinuousHapticFactor];
  *(_DWORD *)id v13 = 0;
  v13[4] = 1;
  objc_super v14 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler];
  *(void *)objc_super v14 = 0;
  *((void *)v14 + 1) = 0;

  v26.receiver = v3;
  v26.super_class = (Class)type metadata accessor for FMR1HapticsController();
  id v15 = objc_msgSendSuper2(&v26, sel_init);
  uint64_t v16 = qword_2698602B0;
  id v17 = v15;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_24D39C950();
  sub_24D2B508C(v18, (uint64_t)qword_269869FD0);
  uint64_t v19 = v17;
  uint64_t v20 = sub_24D39C930();
  os_log_type_t v21 = sub_24D39CDF0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    objc_super v23 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 138412290;
    uint64_t v24 = v19;
    sub_24D39D070();
    *objc_super v23 = v19;

    _os_log_impl(&dword_24D2B1000, v20, v21, "ðŸ§­ FMR1HaptiCtrl%@: init", v22, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v23, -1, -1);
    MEMORY[0x253326010](v22, -1, -1);
  }
  else
  {

    uint64_t v20 = v19;
  }

  return v19;
}

id sub_24D2FAD28()
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
  id v2 = v0;
  id v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = v6;
    *(_DWORD *)id v5 = 136315138;
    id v7 = objc_msgSend(v2, sel_description);
    uint64_t v8 = sub_24D39CAF0();
    unint64_t v10 = v9;

    sub_24D2B8328(v8, v10, &v13);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v3, v4, "ðŸ§­ FMR1HaptiCtrl%s: deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v6, -1, -1);
    MEMORY[0x253326010](v5, -1, -1);
  }
  else
  {
  }
  id v11 = (objc_class *)type metadata accessor for FMR1HapticsController();
  v14.receiver = v2;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, sel_dealloc);
}

uint64_t sub_24D2FB1F8()
{
  uint64_t v0 = sub_24D39D600();
  uint64_t v2 = sub_24D34315C(6, v0, v1);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  MEMORY[0x253324B60](v2, v4, v6, v8);
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  uint64_t v9 = sub_24D39CB00();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_24D2FB314(uint64_t a1, unint64_t a2, int a3)
{
  int v54 = a3;
  uint64_t v5 = sub_24D2B7450((uint64_t *)&unk_269861890);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_24D39C780();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v53[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  id v15 = &v53[-v14];
  MEMORY[0x270FA5388](v13);
  id v17 = &v53[-v16];
  type metadata accessor for FMR1HapticsController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v19 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v55 = a1;
  unint64_t v57 = a2;
  uint64_t v20 = (void *)sub_24D39CAC0();
  os_log_type_t v21 = (void *)sub_24D39CAC0();
  id v58 = v19;
  id v22 = objc_msgSend(v19, sel_URLForResource_withExtension_, v20, v21);

  if (!v22)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_5;
  }
  sub_24D39C760();

  objc_super v23 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32);
  v23(v7, v15, v8);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_5:
    sub_24D2BBFB4((uint64_t)v7, (uint64_t *)&unk_269861890);
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_24D39C950();
    sub_24D2B508C(v26, (uint64_t)qword_269869FD0);
    unint64_t v27 = v57;
    swift_bridgeObjectRetain_n();
    uint64_t v28 = v56;
    uint64_t v29 = sub_24D39C930();
    os_log_type_t v30 = sub_24D39CDF0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = (void *)swift_slowAlloc();
      uint64_t v56 = (char *)swift_slowAlloc();
      uint64_t v59 = (uint64_t)v28;
      uint64_t v60 = v56;
      *(_DWORD *)uint64_t v31 = 138412546;
      uint64_t v33 = v28;
      sub_24D39D070();
      void *v32 = v28;

      *(_WORD *)(v31 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_24D2B8328(v55, v27, (uint64_t *)&v60);
      sub_24D39D070();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24D2B1000, v29, v30, "ðŸ§­ FMR1HaptiCtrl%@: unable to load '%s' haptic pattern", (uint8_t *)v31, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v32, -1, -1);
      uint64_t v34 = v56;
      swift_arrayDestroy();
      MEMORY[0x253326010](v34, -1, -1);
      MEMORY[0x253326010](v31, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    return 0;
  }
  uint64_t v24 = v17;
  v23(v17, v7, v8);
  type metadata accessor for FMR1HapticPattern();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v12, v17, v8);
  id v25 = sub_24D2FA458((uint64_t)v12);
  id v35 = v25;
  if (!v25)
  {

    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v24, v8);
    return 0;
  }
  uint64_t v56 = (char *)v25;
  unint64_t v37 = v57;
  swift_bridgeObjectRetain();
  unint64_t v38 = sub_24D304C34(4, v55, v37);
  swift_bridgeObjectRelease();
  uint64_t result = sub_24D39D050();
  if (v39) {
    unint64_t v40 = v38;
  }
  else {
    unint64_t v40 = result;
  }
  if (v40 >> 14 >= v38 >> 14)
  {
    uint64_t v41 = sub_24D39D060();
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    uint64_t v47 = v46;
    swift_bridgeObjectRelease();
    uint64_t v48 = MEMORY[0x253324B60](v41, v43, v45, v47);
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    char v51 = v56;
    uint64_t v52 = (uint64_t *)&v56[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_name];
    *uint64_t v52 = v48;
    v52[1] = v50;

    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v24, v8);
    v51[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_isTap] = v54 & 1;

    return (uint64_t)v35;
  }
  __break(1u);
  return result;
}

void sub_24D2FB96C()
{
  uint64_t v103 = *MEMORY[0x263EF8340];
  if ((v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_setup] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_setup] = 1;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_24D39C950();
    sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
    uint64_t v2 = v0;
    uint64_t v3 = sub_24D39C930();
    os_log_type_t v4 = sub_24D39CDF0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 138412290;
      uint64_t aBlock = v2;
      uint64_t v7 = v2;
      sub_24D39D070();
      *uint64_t v6 = v2;

      _os_log_impl(&dword_24D2B1000, v3, v4, "ðŸ§­ FMR1HaptiCtrl%@: setting up haptic engine", v5, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v6, -1, -1);
      MEMORY[0x253326010](v5, -1, -1);
    }
    else
    {
    }
    sub_24D2B7450(&qword_269861880);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24D3A10C0;
    uint64_t v9 = (void *)*MEMORY[0x263F004E8];
    uint64_t v10 = MEMORY[0x263F8D310];
    *(void *)(inited + 32) = *MEMORY[0x263F004E8];
    *(void *)(inited + 40) = 0x746C7561666544;
    *(void *)(inited + 48) = 0xE700000000000000;
    uint64_t v11 = (void *)*MEMORY[0x263F004E0];
    *(void *)(inited + 64) = v10;
    *(void *)(inited + 72) = v11;
    uint64_t v12 = (void *)*MEMORY[0x263F00570];
    type metadata accessor for CHHapticPowerUsage(0);
    *(void *)(inited + 80) = v12;
    uint64_t v13 = (void *)*MEMORY[0x263F004F0];
    *(void *)(inited + 104) = v14;
    *(void *)(inited + 112) = v13;
    id v15 = (void *)*MEMORY[0x263F00578];
    type metadata accessor for CHHapticUsageCategory(0);
    *(void *)(inited + 144) = v16;
    *(void *)(inited + 120) = v15;
    id v17 = v9;
    id v18 = v11;
    id v19 = v12;
    id v20 = v13;
    id v21 = v15;
    unint64_t v22 = sub_24D3120F0(inited);
    sub_24D2FC5C4(v22);
    swift_bridgeObjectRelease();
    id v23 = objc_allocWithZone(MEMORY[0x263F00588]);
    uint64_t v24 = (void *)sub_24D39CA70();
    swift_bridgeObjectRelease();
    uint64_t aBlock = 0;
    id v25 = objc_msgSend(v23, sel_initWithAudioSession_sessionIsShared_options_error_, 0, 0, v24, &aBlock);

    uint64_t v26 = aBlock;
    if (v25)
    {
      uint64_t v27 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine;
      uint64_t v28 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
      *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine] = v25;
      uint64_t v29 = v26;

      os_log_type_t v30 = *(void **)&v2[v27];
      if (v30)
      {
        uint64_t v31 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v101 = sub_24D3059B0;
        uint64_t v102 = v31;
        uint64_t aBlock = (char *)MEMORY[0x263EF8330];
        uint64_t v98 = 1107296256;
        uint64_t v99 = sub_24D32194C;
        uint64_t v100 = &unk_26FF87230;
        uint64_t v32 = _Block_copy(&aBlock);
        id v33 = v30;
        swift_release();
        objc_msgSend(v33, sel_setResetHandler_, v32);
        _Block_release(v32);
        uint64_t v34 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v101 = sub_24D3059B8;
        uint64_t v102 = v34;
        uint64_t aBlock = (char *)MEMORY[0x263EF8330];
        uint64_t v98 = 1107296256;
        uint64_t v99 = sub_24D2FCFE8;
        uint64_t v100 = &unk_26FF87258;
        id v35 = _Block_copy(&aBlock);
        swift_release();
        objc_msgSend(v33, sel_setStoppedHandler_, v35);
        _Block_release(v35);
        objc_msgSend(v33, sel_setPlaysHapticsOnly_, 0);
        objc_msgSend(v33, sel_setIsMutedForAudio_, 0);
        objc_msgSend(v33, sel_setFollowAudioRoute_, 0);
        objc_msgSend(v33, sel_startWithCompletionHandler_, 0);
        uint64_t v36 = v2;
        unint64_t v37 = sub_24D39C930();
        os_log_type_t v38 = sub_24D39CDF0();
        if (os_log_type_enabled(v37, v38))
        {
          char v39 = (uint8_t *)swift_slowAlloc();
          int v95 = (void *)swift_slowAlloc();
          *(_DWORD *)char v39 = 138412290;
          uint64_t aBlock = v36;
          unint64_t v40 = v36;
          sub_24D39D070();
          *int v95 = v36;

          _os_log_impl(&dword_24D2B1000, v37, v38, "ðŸ§­ FMR1HaptiCtrl%@: started haptic engine", v39, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v95, -1, -1);
          MEMORY[0x253326010](v39, -1, -1);
        }
        else
        {
        }
      }
    }
    else
    {
      uint64_t v41 = aBlock;
      uint64_t v42 = (void *)sub_24D39C710();

      swift_willThrow();
      uint64_t v43 = v2;
      id v44 = v42;
      uint64_t v45 = v43;
      id v46 = v42;
      uint64_t v47 = sub_24D39C930();
      os_log_type_t v48 = sub_24D39CDF0();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v50 = (void *)swift_slowAlloc();
        uint64_t v96 = (char *)swift_slowAlloc();
        uint64_t aBlock = v96;
        *(_DWORD *)uint64_t v49 = 138412546;
        char v51 = v45;
        sub_24D39D070();
        *uint64_t v50 = v45;

        *(_WORD *)(v49 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v52 = sub_24D39D520();
        sub_24D2B8328(v52, v53, (uint64_t *)&aBlock);
        sub_24D39D070();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_24D2B1000, v47, v48, "ðŸ§­ FMR1HaptiCtrl%@: failed creating haptic engine: %s", (uint8_t *)v49, 0x16u);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v50, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253326010](v96, -1, -1);
        MEMORY[0x253326010](v49, -1, -1);
      }
      else
      {
      }
    }
    uint64_t v54 = sub_24D2FB314(0xD000000000000011, 0x800000024D3A71D0, 1);
    uint64_t v55 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap1HapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap1HapticPattern] = v54;

    uint64_t v56 = sub_24D2FB314(0xD000000000000011, 0x800000024D3A71F0, 1);
    unint64_t v57 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap2HapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap2HapticPattern] = v56;

    uint64_t v58 = sub_24D2FB314(0xD000000000000013, 0x800000024D3A7210, 1);
    uint64_t v59 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap3HapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap3HapticPattern] = v58;

    uint64_t v60 = sub_24D2FB314(0xD000000000000012, 0x800000024D3A7230, 1);
    int v61 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap4HapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap4HapticPattern] = v60;

    uint64_t v62 = sub_24D2FB314(0xD000000000000012, 0x800000024D3A7250, 1);
    int v63 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap5HapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap5HapticPattern] = v62;

    uint64_t v64 = sub_24D2FB314(0xD000000000000012, 0x800000024D3A7270, 0);
    uint64_t v65 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_connectedHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_connectedHapticPattern] = v64;

    uint64_t v66 = sub_24D2FB314(0xD000000000000014, 0x800000024D3A7290, 0);
    uint64_t v67 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_buildHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_buildHapticPattern] = v66;

    uint64_t v68 = sub_24D2FB314(0xD000000000000016, 0x800000024D3A72B0, 0);
    uint64_t v69 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_scatterHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_scatterHapticPattern] = v68;

    uint64_t v70 = sub_24D2FB314(0x6165684131524D46, 0xEE00393833422D64, 1);
    uint64_t v71 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadHapticPattern] = v70;

    uint64_t v72 = sub_24D2FB314(0xD000000000000012, 0x800000024D3A72D0, 0);
    uint64_t v73 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadOffHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadOffHapticPattern] = v72;

    uint64_t v74 = sub_24D2FB314(0xD000000000000012, 0x800000024D3A72F0, 0);
    uint64_t v75 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachHapticPattern] = v74;

    uint64_t v76 = sub_24D2FB314(0xD000000000000016, 0x800000024D3A7310, 0);
    uint64_t v77 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachOffHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachOffHapticPattern] = v76;

    uint64_t v78 = sub_24D2FB314(0xD000000000000012, 0x800000024D3A7330, 0);
    uint64_t v79 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_preNearbyHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_preNearbyHapticPattern] = v78;

    uint64_t v80 = sub_24D2FB314(0x7261654E31524D46, 0xEF393833422D7962, 0);
    uint64_t v81 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticPattern] = v80;

    uint64_t v82 = sub_24D2FB314(0x462D495353524D46, 0xEF7261654E2D7261, 0);
    uint64_t v83 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_farNearHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_farNearHapticPattern] = v82;

    uint64_t v84 = sub_24D2FB314(0xD000000000000015, 0x800000024D3A7350, 0);
    uint64_t v85 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelIncreaseHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelIncreaseHapticPattern] = v84;

    uint64_t v86 = sub_24D2FB314(0xD000000000000015, 0x800000024D3A7370, 0);
    uint64_t v87 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelDecreaseHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelDecreaseHapticPattern] = v86;

    id v88 = objc_msgSend(self, sel_displayLinkWithTarget_selector_, v2, sel_hapticDisplayLinkUpdateWithDisplaylink_);
    uint64_t v89 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink;
    uint64_t v90 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink] = v88;

    uint64_t v91 = *(void **)&v2[v89];
    if (v91)
    {
      uint64_t v92 = self;
      id v93 = v91;
      id v94 = objc_msgSend(v92, sel_currentRunLoop);
      objc_msgSend(v93, sel_addToRunLoop_forMode_, v94, *MEMORY[0x263EFF588]);
    }
    sub_24D2FD148();
  }
}

uint64_t sub_24D2FC5C4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_24D2B7450(&qword_269861888);
    uint64_t v2 = sub_24D39D300();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = *(void **)(*(void *)(a1 + 48) + 8 * v12);
    sub_24D2B8A78(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    *(void *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    uint64_t v38 = v40;
    *(void *)&v36[0] = v17;
    type metadata accessor for CHHapticEngineOptionKey(0);
    id v18 = v17;
    swift_dynamicCast();
    sub_24D3059C0((_OWORD *)((char *)v37 + 8), v31);
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_24D3059C0(v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_24D3059C0(v35, v36);
    sub_24D3059C0(v36, &v32);
    uint64_t result = sub_24D39D190();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_24D3059C0(&v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_24D3059D0();
    return v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_24D2FC98C(uint64_t a1)
{
  v28[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x253326120](v1);
  if (!v2) {
    return;
  }
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine);
  if (!v4) {
    goto LABEL_5;
  }
  v28[0] = 0;
  if (objc_msgSend(v4, sel_startAndReturnError_, v28))
  {
    id v5 = v28[0];
LABEL_5:
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_24D39C950();
    sub_24D2B508C(v6, (uint64_t)qword_269869FD0);
    id v7 = v3;
    int64_t v8 = sub_24D39C930();
    os_log_type_t v9 = sub_24D39CDF0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      unint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      v28[0] = v7;
      id v12 = v7;
      sub_24D39D070();
      *unint64_t v11 = v3;

      _os_log_impl(&dword_24D2B1000, v8, v9, "ðŸ§­ FMR1HaptiCtrl%@: restarted haptic engine", v10, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v11, -1, -1);
      MEMORY[0x253326010](v10, -1, -1);
    }
    else
    {
    }
    return;
  }
  id v13 = v28[0];
  unint64_t v14 = (void *)sub_24D39C710();

  swift_willThrow();
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_24D39C950();
  sub_24D2B508C(v15, (uint64_t)qword_269869FD0);
  id v16 = v3;
  id v17 = v14;
  id v18 = v16;
  id v19 = v14;
  unint64_t v20 = sub_24D39C930();
  os_log_type_t v21 = sub_24D39CDF0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    unint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    v28[0] = v27;
    *(_DWORD *)uint64_t v22 = 138412546;
    id v24 = v18;
    sub_24D39D070();
    *unint64_t v23 = v3;

    *(_WORD *)(v22 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v25 = sub_24D39D520();
    sub_24D2B8328(v25, v26, (uint64_t *)v28);
    sub_24D39D070();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24D2B1000, v20, v21, "ðŸ§­ FMR1HaptiCtrl%@: failed restarting haptic engine: %s", (uint8_t *)v22, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v23, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v27, -1, -1);
    MEMORY[0x253326010](v22, -1, -1);
  }
  else
  {
  }
}

void sub_24D2FCE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x253326120](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_24D39C950();
    sub_24D2B508C(v5, (uint64_t)qword_269869FD0);
    uint64_t v6 = v4;
    id v7 = sub_24D39C930();
    os_log_type_t v8 = sub_24D39CDF0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412546;
      uint64_t v6 = v6;
      sub_24D39D070();
      *uint64_t v10 = v4;

      *(_WORD *)(v9 + 12) = 2048;
      sub_24D39D070();
      _os_log_impl(&dword_24D2B1000, v7, v8, "ðŸ§­ FMR1HaptiCtrl%@: stopped haptic engine (%ld)", (uint8_t *)v9, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v10, -1, -1);
      MEMORY[0x253326010](v9, -1, -1);
    }
    else
    {

      id v7 = v6;
    }
  }
}

uint64_t sub_24D2FCFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_24D2FD03C()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_setup;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_setup) == 1)
  {
    sub_24D2FD83C();
    uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink;
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink);
    if (v3)
    {
      uint64_t v4 = self;
      id v5 = v3;
      id v6 = objc_msgSend(v4, sel_currentRunLoop);
      objc_msgSend(v5, sel_removeFromRunLoop_forMode_, v6, *MEMORY[0x263EFF588]);

      id v7 = *(void **)(v0 + v2);
    }
    else
    {
      id v7 = 0;
    }
    objc_msgSend(v7, sel_invalidate);
    os_log_type_t v8 = *(void **)(v0 + v2);
    *(void *)(v0 + v2) = 0;

    uint64_t v9 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine;
    uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine);
    if (v10)
    {
      objc_msgSend(v10, sel_stopWithCompletionHandler_, 0);
      unint64_t v11 = *(void **)(v0 + v9);
    }
    else
    {
      unint64_t v11 = 0;
    }
    *(void *)(v0 + v9) = 0;

    *(unsigned char *)(v0 + v1) = 0;
  }
}

void sub_24D2FD148()
{
  v55[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = *MEMORY[0x263F00508];
    id v4 = objc_allocWithZone(MEMORY[0x263F00598]);
    id v5 = v1;
    LODWORD(v6) = 0.5;
    id v7 = objc_msgSend(v4, sel_initWithParameterID_value_, v3, v6);
    uint64_t v8 = *MEMORY[0x263F00510];
    id v9 = objc_allocWithZone(MEMORY[0x263F00598]);
    LODWORD(v10) = 0.5;
    id v11 = objc_msgSend(v9, sel_initWithParameterID_value_, v8, v10);
    id v12 = (void *)*MEMORY[0x263F00520];
    sub_24D2B7450(&qword_269861330);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_24D3A0B10;
    *(void *)(v13 + 32) = v7;
    *(void *)(v13 + 40) = v11;
    sub_24D39CC30();
    id v14 = objc_allocWithZone(MEMORY[0x263F00590]);
    sub_24D2BC100(0, &qword_269861870);
    id v15 = v12;
    id v54 = v7;
    id v16 = v11;
    id v17 = (void *)sub_24D39CC00();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v14, sel_initWithEventType_parameters_relativeTime_duration_, v15, v17, 0.0, 100.0);

    type metadata accessor for FMR1HapticPattern();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_24D3A0210;
    *(void *)(v19 + 32) = v18;
    v55[0] = (id)v19;
    sub_24D39CC30();
    id v20 = v18;
    uint64_t v34 = (char *)sub_24D2F9D9C();
    *(_OWORD *)&v34[OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_name] = xmmword_24D3A17B0;
    swift_bridgeObjectRelease();
    id v35 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPattern];
    *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPattern] = v34;
    uint64_t v36 = v34;

    v55[0] = 0;
    id v37 = objc_msgSend(v5, sel_createPlayerWithPattern_error_, v36, v55);
    id v38 = v55[0];
    if (v37)
    {
      *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer] = v37;
      id v39 = v38;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_24D39C950();
      sub_24D2B508C(v40, (uint64_t)qword_269869FD0);
      uint64_t v41 = v2;
      uint64_t v42 = sub_24D39C930();
      os_log_type_t v43 = sub_24D39CDF0();
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v50 = v36;
        id v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = (void *)swift_slowAlloc();
        *(_DWORD *)id v44 = 138412290;
        v55[0] = v41;
        uint64_t v52 = v20;
        id v46 = v41;
        sub_24D39D070();
        *uint64_t v45 = v41;

        _os_log_impl(&dword_24D2B1000, v42, v43, "ðŸ§­ FMR1HaptiCtrl%@: created continuous haptic player", v44, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v45, -1, -1);
        MEMORY[0x253326010](v44, -1, -1);

        swift_unknownObjectRelease();
        long long v33 = v5;
      }
      else
      {

        swift_unknownObjectRelease();
        long long v33 = v54;
      }
    }
    else
    {
      id v47 = v55[0];
      os_log_type_t v48 = (void *)sub_24D39C710();

      swift_willThrow();
      unint64_t v53 = v5;
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_24D39C950();
      sub_24D2B508C(v21, (uint64_t)qword_269869FD0);
      uint64_t v22 = v2;
      id v23 = v48;
      id v24 = v22;
      id v25 = v48;
      unint64_t v26 = sub_24D39C930();
      os_log_type_t v27 = sub_24D39CDF0();
      if (!os_log_type_enabled(v26, v27))
      {

        return;
      }
      uint64_t v28 = swift_slowAlloc();
      long long v29 = (void *)swift_slowAlloc();
      uint64_t v49 = (void *)swift_slowAlloc();
      v55[0] = v49;
      *(_DWORD *)uint64_t v28 = 138412546;
      id v51 = v20;
      uint64_t v30 = v24;
      sub_24D39D070();
      *long long v29 = v24;

      *(_WORD *)(v28 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v31 = sub_24D39D520();
      sub_24D2B8328(v31, v32, (uint64_t *)v55);
      sub_24D39D070();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24D2B1000, v26, v27, "ðŸ§­ FMR1HaptiCtrl%@: failed creating continuous haptic player: %s", (uint8_t *)v28, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v29, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x253326010](v49, -1, -1);
      MEMORY[0x253326010](v28, -1, -1);

      long long v33 = v51;
    }
  }
}

uint64_t sub_24D2FD83C()
{
  v7[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer);
  if (v2)
  {
    v7[0] = 0;
    if (objc_msgSend(v2, sel_stopAtTime_error_, v7, 0.0))
    {
      id v3 = v7[0];
    }
    else
    {
      id v4 = v7[0];
      id v5 = (void *)sub_24D39C710();

      swift_willThrow();
    }
  }
  *(void *)(v0 + v1) = 0;
  return swift_unknownObjectRelease();
}

void sub_24D2FD900(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_24D39CA10();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v50 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v49 = sub_24D39C990();
  MEMORY[0x270FA5388](v49);
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_24D39C950();
  uint64_t v10 = sub_24D2B508C(v9, (uint64_t)qword_269869FD0);
  id v11 = v2;
  uint64_t v47 = v10;
  id v12 = sub_24D39C930();
  os_log_type_t v13 = sub_24D39CDF0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v46 = v3;
    id v14 = (uint8_t *)swift_slowAlloc();
    id v44 = (void *)swift_slowAlloc();
    uint64_t v45 = v8;
    *(_DWORD *)id v14 = 138412290;
    aBlock[0] = v11;
    uint64_t v15 = v4;
    id v16 = v11;
    uint64_t v8 = v45;
    uint64_t v3 = v46;
    sub_24D39D070();
    id v17 = v44;
    *id v44 = v11;

    uint64_t v4 = v15;
    _os_log_impl(&dword_24D2B1000, v12, v13, "ðŸ§­ FMR1HaptiCtrl%@: playing continuous haptic", v14, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v17, -1, -1);
    MEMORY[0x253326010](v14, -1, -1);
  }
  else
  {
  }
  id v18 = *(void **)&v11[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer];
  if (v18)
  {
    aBlock[0] = 0;
    if (!objc_msgSend(v18, sel_startAtTime_error_, aBlock, 0.0))
    {
      id v29 = aBlock[0];
      uint64_t v30 = (void *)sub_24D39C710();

      swift_willThrow();
      uint64_t v31 = v11;
      id v32 = v30;
      long long v33 = v31;
      id v34 = v30;
      id v35 = sub_24D39C930();
      os_log_type_t v36 = sub_24D39CDF0();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        id v38 = (void *)swift_slowAlloc();
        uint64_t v50 = (char *)swift_slowAlloc();
        aBlock[0] = v50;
        *(_DWORD *)uint64_t v37 = 138412546;
        uint64_t v51 = (uint64_t)v33;
        id v39 = v33;
        sub_24D39D070();
        void *v38 = v33;

        *(_WORD *)(v37 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v40 = sub_24D39D520();
        uint64_t v51 = sub_24D2B8328(v40, v41, (uint64_t *)aBlock);
        sub_24D39D070();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_24D2B1000, v35, v36, "ðŸ§­ FMR1HaptiCtrl%@: failed starting continuous haptic player: %s", (uint8_t *)v37, 0x16u);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v38, -1, -1);
        uint64_t v42 = v50;
        swift_arrayDestroy();
        MEMORY[0x253326010](v42, -1, -1);
        MEMORY[0x253326010](v37, -1, -1);
      }
      else
      {
      }
      return;
    }
    id v19 = aBlock[0];
  }
  v11[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] = 1;
  id v20 = *(void (**)(void *, uint64_t))&v11[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler];
  if (v20)
  {
    uint64_t v21 = *(void **)&v11[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPattern];
    sub_24D2C6D74(*(void *)&v11[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler]);
    id v22 = v21;
    v20(v21, v48);
    sub_24D2E44C8((uint64_t)v20);
  }
  uint64_t v23 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_restartContinuousHapticWorkItem;
  if (*(void *)&v11[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_restartContinuousHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  id v24 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_24D3059A8;
  aBlock[5] = v24;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D32194C;
  aBlock[3] = &unk_26FF87208;
  _Block_copy(aBlock);
  uint64_t v51 = MEMORY[0x263F8EE78];
  sub_24D3059D8((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
  swift_retain();
  sub_24D2B7450((uint64_t *)&unk_2698610D0);
  sub_24D2C8438();
  sub_24D39D0E0();
  sub_24D39CA40();
  swift_allocObject();
  uint64_t v25 = sub_24D39CA20();
  swift_release();
  swift_release();
  *(void *)&v11[v23] = v25;
  swift_retain();
  swift_release();
  sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
  unint64_t v26 = (void *)sub_24D39CE90();
  os_log_type_t v27 = v50;
  sub_24D39CA00();
  MEMORY[0x253324A90](v27, 30.0);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v4 + 8);
  v28(v27, v3);
  sub_24D39CE60();
  swift_release();

  v28(v8, v3);
}

uint64_t sub_24D2FE080(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x253326120](v1);
  if (result)
  {
    uint64_t v3 = (void *)result;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24D39C950();
    sub_24D2B508C(v4, (uint64_t)qword_269869FD0);
    uint64_t v5 = v3;
    uint64_t v6 = sub_24D39C930();
    os_log_type_t v7 = sub_24D39CDF0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      *(void *)&v11[0] = v5;
      uint64_t v10 = v5;
      sub_24D39D070();
      *uint64_t v9 = v3;

      _os_log_impl(&dword_24D2B1000, v6, v7, "ðŸ§­ FMR1HaptiCtrl%@: will restart continuous haptic", v8, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v9, -1, -1);
      MEMORY[0x253326010](v8, -1, -1);
    }
    else
    {

      uint64_t v6 = v5;
    }

    memset(v11, 0, sizeof(v11));
    sub_24D2FD900(v11);

    return sub_24D2BBFB4((uint64_t)v11, &qword_269861850);
  }
  return result;
}

void sub_24D2FE268()
{
  uint64_t v1 = v0;
  v25[1] = *(id *)MEMORY[0x263EF8340];
  if (*(void *)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_restartContinuousHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer];
  if (!v2) {
    goto LABEL_6;
  }
  v25[0] = 0;
  if (objc_msgSend(v2, sel_stopAtTime_error_, v25, 0.0))
  {
    id v3 = v25[0];
LABEL_6:
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24D39C950();
    sub_24D2B508C(v4, (uint64_t)qword_269869FD0);
    uint64_t v5 = v0;
    uint64_t v6 = sub_24D39C930();
    os_log_type_t v7 = sub_24D39CDF0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      v25[0] = v5;
      uint64_t v10 = v5;
      sub_24D39D070();
      *uint64_t v9 = v5;

      _os_log_impl(&dword_24D2B1000, v6, v7, "ðŸ§­ FMR1HaptiCtrl%@: stopped continuous haptic player", v8, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v9, -1, -1);
      MEMORY[0x253326010](v8, -1, -1);

      return;
    }

    goto LABEL_16;
  }
  id v11 = v25[0];
  id v12 = (void *)sub_24D39C710();

  swift_willThrow();
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_24D39C950();
  sub_24D2B508C(v13, (uint64_t)qword_269869FD0);
  id v14 = v1;
  id v15 = v12;
  id v16 = v14;
  id v17 = v12;
  uint64_t v5 = sub_24D39C930();
  os_log_type_t v18 = sub_24D39CDF0();
  if (os_log_type_enabled(v5, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    id v20 = (void *)swift_slowAlloc();
    id v24 = (void *)swift_slowAlloc();
    v25[0] = v24;
    *(_DWORD *)uint64_t v19 = 138412546;
    id v21 = v16;
    sub_24D39D070();
    *id v20 = v16;

    *(_WORD *)(v19 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v22 = sub_24D39D520();
    sub_24D2B8328(v22, v23, (uint64_t *)v25);
    sub_24D39D070();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24D2B1000, v5, v18, "ðŸ§­ FMR1HaptiCtrl%@: failed stopping continuous haptic player: %s", (uint8_t *)v19, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v24, -1, -1);
    MEMORY[0x253326010](v19, -1, -1);

    return;
  }

LABEL_16:
}

void sub_24D2FE6D0(unint64_t a1, float a2)
{
  uint64_t v4 = v2;
  unint64_t v5 = a1;
  os_log_type_t v7 = (float *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactor];
  *os_log_type_t v7 = a2;
  *((unsigned char *)v7 + 4) = 0;
  if (a1)
  {
    uint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticRampingFactorSpring];
    sub_24D2D9DA8(0.0);
    *(unsigned char *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
  }
  uint64_t v9 = *(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticRampingFactorSpring];
  uint64_t v10 = v9 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  uint64_t v11 = v9 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
  double v12 = *(double *)(v9 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  if (*(double *)(v10 + 280) + v12 == 1.79769313e308)
  {
    sub_24D2D9DA8(1.0);
    *(unsigned char *)(v9 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    double v12 = *(double *)(v11 + 40);
  }
  double v13 = 1.0 - v12;
  *(double *)(v10 + 280) = v13;
  *(double *)(v10 + 240) = v13;
  *(void *)(v10 + 248) = 0;
  uint64_t v14 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactorLogCounter;
  uint64_t v15 = *(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactorLogCounter];
  if (__ROR8__(0xEEEEEEEEEEEEEEEFLL * v15 + 0x888888888888888, 2) > 0x444444444444444uLL) {
    goto LABEL_18;
  }
  id v3 = (float *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastLoggedContinuousHapticFactor];
  float v16 = *(float *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastLoggedContinuousHapticFactor];
  if (v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastLoggedContinuousHapticFactor + 4]) {
    float v16 = 3.4028e38;
  }
  if (vabds_f32(a2, v16) < 0.01) {
    goto LABEL_17;
  }
  v32[0] = 0;
  v32[1] = 0xE000000000000000;
  sub_24D39D1D0();
  sub_24D39CB70();
  id v17 = objc_msgSend(v4, sel_description);
  sub_24D39CAF0();

  sub_24D39CB70();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  sub_24D2B7450((uint64_t *)&unk_269861860);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_24D3A0220;
  unint64_t v19 = sub_24D2B7494();
  uint64_t v20 = 0x20676E69706D6172;
  if ((v5 & 1) == 0) {
    uint64_t v20 = 0;
  }
  unint64_t v21 = 0xE800000000000000;
  if ((v5 & 1) == 0) {
    unint64_t v21 = 0xE000000000000000;
  }
  *(void *)(v18 + 56) = MEMORY[0x263F8D310];
  *(void *)(v18 + 64) = v19;
  *(void *)(v18 + 32) = v20;
  *(void *)(v18 + 40) = v21;
  uint64_t v22 = MEMORY[0x263F8D648];
  *(void *)(v18 + 96) = MEMORY[0x263F8D5C8];
  *(void *)(v18 + 104) = v22;
  *(float *)(v18 + 72) = a2 * 100.0;
  uint64_t v10 = sub_24D39CB00();
  unint64_t v5 = v23;
  swift_bridgeObjectRelease();
  if (qword_2698602B0 != -1) {
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v24 = sub_24D39C950();
    sub_24D2B508C(v24, (uint64_t)qword_269869FD0);
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_24D39C930();
    os_log_type_t v26 = sub_24D39CDF0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v31 = v10;
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v32[0] = v28;
      *(_DWORD *)os_log_type_t v27 = 136315138;
      uint64_t v10 = (uint64_t)(v27 + 4);
      swift_bridgeObjectRetain();
      sub_24D2B8328(v31, v5, v32);
      sub_24D39D070();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24D2B1000, v25, v26, "%s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253326010](v28, -1, -1);
      MEMORY[0x253326010](v27, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_17:
    *id v3 = a2;
    *((unsigned char *)v3 + 4) = 0;
    uint64_t v15 = *(void *)&v4[v14];
LABEL_18:
    BOOL v29 = __OFADD__(v15, 1);
    uint64_t v30 = v15 + 1;
    if (!v29) {
      break;
    }
    __break(1u);
LABEL_21:
    swift_once();
  }
  *(void *)&v4[v14] = v30;
}

void sub_24D2FEB18()
{
  v32[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *MEMORY[0x263F004D0];
  id v2 = objc_allocWithZone(MEMORY[0x263F00580]);
  LODWORD(v3) = 1.0;
  uint64_t v4 = objc_msgSend(v2, sel_initWithParameterID_value_relativeTime_, v1, v3, 0.0);
  unint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer];
  if (!v5)
  {
LABEL_4:
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24D39C950();
    sub_24D2B508C(v11, (uint64_t)qword_269869FD0);
    double v12 = v0;
    double v13 = sub_24D39C930();
    os_log_type_t v14 = sub_24D39CDF0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      float v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138412290;
      v32[0] = v12;
      id v17 = v12;
      sub_24D39D070();
      *float v16 = v12;

      _os_log_impl(&dword_24D2B1000, v13, v14, "ðŸ§­ FMR1HaptiCtrl%@: reset continuous haptic player intensity to 1.0", v15, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v16, -1, -1);
      MEMORY[0x253326010](v15, -1, -1);

      return;
    }

    goto LABEL_14;
  }
  sub_24D2B7450(&qword_269861330);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24D3A0210;
  *(void *)(v6 + 32) = v4;
  sub_24D39CC30();
  sub_24D2BC100(0, &qword_269861858);
  swift_unknownObjectRetain();
  os_log_type_t v7 = v4;
  uint64_t v8 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  v32[0] = 0;
  unsigned int v9 = objc_msgSend(v5, sel_sendParameters_atTime_error_, v8, v32, 0.0);
  swift_unknownObjectRelease();

  if (v9)
  {
    id v10 = v32[0];
    goto LABEL_4;
  }
  id v18 = v32[0];
  unint64_t v19 = (void *)sub_24D39C710();

  swift_willThrow();
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_24D39C950();
  sub_24D2B508C(v20, (uint64_t)qword_269869FD0);
  unint64_t v21 = v0;
  id v22 = v19;
  unint64_t v23 = v21;
  id v24 = v19;
  uint64_t v4 = sub_24D39C930();
  os_log_type_t v25 = sub_24D39CDF0();
  if (os_log_type_enabled(v4, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    os_log_type_t v27 = (void *)swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    v32[0] = v31;
    *(_DWORD *)uint64_t v26 = 138412546;
    uint64_t v28 = v23;
    sub_24D39D070();
    *os_log_type_t v27 = v23;

    *(_WORD *)(v26 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v29 = sub_24D39D520();
    sub_24D2B8328(v29, v30, (uint64_t *)v32);
    sub_24D39D070();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24D2B1000, v4, v25, "ðŸ§­ FMR1HaptiCtrl%@: failed parametering continuous haptic player: %s", (uint8_t *)v26, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v27, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v31, -1, -1);
    MEMORY[0x253326010](v26, -1, -1);

    return;
  }

LABEL_14:
}

void sub_24D2FF03C()
{
  v32[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *MEMORY[0x263F004D0];
  id v2 = objc_allocWithZone(MEMORY[0x263F00580]);
  LODWORD(v3) = 1058642330;
  uint64_t v4 = objc_msgSend(v2, sel_initWithParameterID_value_relativeTime_, v1, v3, 0.0);
  unint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer];
  if (!v5)
  {
LABEL_4:
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_24D39C950();
    sub_24D2B508C(v11, (uint64_t)qword_269869FD0);
    double v12 = v0;
    double v13 = sub_24D39C930();
    os_log_type_t v14 = sub_24D39CDF0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      float v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138412546;
      v32[0] = v12;
      id v17 = v12;
      sub_24D39D070();
      *float v16 = v12;

      *(_WORD *)(v15 + 12) = 2048;
      v32[0] = (id)0x3FE3333340000000;
      sub_24D39D070();
      _os_log_impl(&dword_24D2B1000, v13, v14, "ðŸ§­ FMR1HaptiCtrl%@: reset continuous haptic player intensity to %f", (uint8_t *)v15, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v16, -1, -1);
      MEMORY[0x253326010](v15, -1, -1);

      return;
    }

    goto LABEL_14;
  }
  sub_24D2B7450(&qword_269861330);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24D3A0210;
  *(void *)(v6 + 32) = v4;
  sub_24D39CC30();
  sub_24D2BC100(0, &qword_269861858);
  swift_unknownObjectRetain();
  os_log_type_t v7 = v4;
  uint64_t v8 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  v32[0] = 0;
  unsigned int v9 = objc_msgSend(v5, sel_sendParameters_atTime_error_, v8, v32, 0.0);
  swift_unknownObjectRelease();

  if (v9)
  {
    id v10 = v32[0];
    goto LABEL_4;
  }
  id v18 = v32[0];
  unint64_t v19 = (void *)sub_24D39C710();

  swift_willThrow();
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_24D39C950();
  sub_24D2B508C(v20, (uint64_t)qword_269869FD0);
  unint64_t v21 = v0;
  id v22 = v19;
  unint64_t v23 = v21;
  id v24 = v19;
  uint64_t v4 = sub_24D39C930();
  os_log_type_t v25 = sub_24D39CDF0();
  if (os_log_type_enabled(v4, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    os_log_type_t v27 = (void *)swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    v32[0] = v31;
    *(_DWORD *)uint64_t v26 = 138412546;
    uint64_t v28 = v23;
    sub_24D39D070();
    *os_log_type_t v27 = v23;

    *(_WORD *)(v26 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v29 = sub_24D39D520();
    sub_24D2B8328(v29, v30, (uint64_t *)v32);
    sub_24D39D070();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24D2B1000, v4, v25, "ðŸ§­ FMR1HaptiCtrl%@: failed parametering continuous haptic player: %s", (uint8_t *)v26, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v27, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v31, -1, -1);
    MEMORY[0x253326010](v26, -1, -1);

    return;
  }

LABEL_14:
}

id sub_24D2FF590(id a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_enablePlayingAheadHaptic;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_enablePlayingAheadHaptic) == 1)
  {
    memset(v23, 0, sizeof(v23));
    sub_24D3025A0((uint64_t)v23);
    sub_24D2BBFB4((uint64_t)v23, &qword_269861850);
    *(unsigned char *)(v1 + v4) = 0;
  }
  else if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod + 8) & 1) == 0)
  {
    double v5 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod);
    uint64_t v6 = v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticLastPlayTimestamp;
    if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticLastPlayTimestamp + 8) & 1) != 0
      || (uint64_t v7 = v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay,
          (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay + 8) & 1) != 0))
    {
      objc_msgSend(a1, sel_timestamp);
      *(void *)uint64_t v6 = v8;
      *(unsigned char *)(v6 + 8) = 0;
      uint64_t v9 = v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay;
      *(double *)uint64_t v9 = v5;
      *(unsigned char *)(v9 + 8) = 0;
    }
    else
    {
      double v17 = *(double *)v7;
      double v18 = *(double *)v6;
      objc_msgSend(a1, sel_timestamp);
      double v20 = v19 - v18;
      if (v17 > v5) {
        double v21 = v17;
      }
      else {
        double v21 = v5;
      }
      if (v21 > v20) {
        goto LABEL_8;
      }
      objc_msgSend(a1, sel_timestamp);
      *(void *)uint64_t v6 = v22;
      *(unsigned char *)(v6 + 8) = 0;
      *(double *)uint64_t v7 = v5;
      *(unsigned char *)(v7 + 8) = 0;
    }
    sub_24D3051B8();
  }
LABEL_8:
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) == 1
    && (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastRenderTime + 8) & 1) == 0
    && (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactor + 4) & 1) == 0)
  {
    float v10 = *(float *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticFactor);
    double v11 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastRenderTime);
    objc_msgSend(a1, sel_timestamp);
    uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticRampingFactorSpring);
    sub_24D2D9F4C(v12 - v11);
    *(unsigned char *)(v13 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    sub_24D304CE4(v10);
  }
  id result = objc_msgSend(a1, sel_timestamp);
  uint64_t v15 = v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_lastRenderTime;
  *(void *)uint64_t v15 = v16;
  *(unsigned char *)(v15 + 8) = 0;
  return result;
}

uint64_t type metadata accessor for FMR1HapticsController()
{
  return self;
}

float sub_24D2FF808(double a1)
{
  if (a1 < 0.2)
  {
    uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap1HapticPattern;
LABEL_7:
    uint64_t v4 = *(void **)(v1 + v3);
    uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern;
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern);
    goto LABEL_8;
  }
  if (a1 < 0.4)
  {
    uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap2HapticPattern;
    goto LABEL_7;
  }
  if (a1 < 0.6)
  {
    uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap3HapticPattern;
    goto LABEL_7;
  }
  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern;
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern);
  if (a1 >= 0.8) {
    uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap5HapticPattern;
  }
  else {
    uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTap4HapticPattern;
  }
  uint64_t v4 = *(void **)(v1 + v12);
LABEL_8:
  *(void *)(v1 + v5) = v4;
  id v7 = v4;

  float v8 = 1.0 - a1;
  float v9 = a1;
  float result = (float)(v9 * 0.65) + (float)(v8 * 0.4);
  uint64_t v11 = v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPatternIntensity;
  *(float *)uint64_t v11 = result;
  *(unsigned char *)(v11 + 4) = 0;
  return result;
}

void sub_24D2FF920(uint64_t a1)
{
  sub_24D2FFA10(a1, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_buildHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing build haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing build haptic (%s)");
}

void sub_24D2FF998(uint64_t a1)
{
  sub_24D2FFA10(a1, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_scatterHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing scatter haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing scatter haptic (%s)");
}

void sub_24D2FFA10(uint64_t a1, uint64_t *a2, void *a3, char *a4, const char *a5)
{
  float v10 = v5;
  uint64_t v69 = *MEMORY[0x263EF8340];
  uint64_t v11 = &v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(void *)uint64_t v11 = 0;
  v11[8] = 1;
  memset(v68, 0, sizeof(v68));
  uint64_t v12 = (uint64_t)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_24D3049DC((uint64_t)v68, v12);
  swift_endAccess();
  uint64_t v13 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(void *)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v5[v13] = 0;
  swift_release();
  if (v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_24D2FE268();
  }
  uint64_t v14 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(void *)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v5[v14] = 0;
  swift_release();
  uint64_t v15 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(void *)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v5[v15] = 0;
  swift_release();
  v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  uint64_t v16 = *a2;
  if (*(void *)&v5[*a2])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v5[v16] = 0;
  swift_release();
  double v17 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v17)
  {
    double v18 = *(void **)&v5[*a3];
    if (v18)
    {
      *(void *)&v68[0] = 0;
      id v19 = v17;
      id v20 = v18;
      id v21 = objc_msgSend(v19, sel_createPlayerWithPattern_error_, v20, v68);
      if (v21)
      {
        uint64_t v22 = v21;
        format = a4;
        uint64_t v23 = qword_2698602B0;
        id v24 = *(id *)&v68[0];
        if (v23 != -1) {
          swift_once();
        }
        uint64_t v25 = sub_24D39C950();
        sub_24D2B508C(v25, (uint64_t)qword_269869FD0);
        uint64_t v26 = v10;
        os_log_type_t v27 = sub_24D39C930();
        os_log_type_t v28 = sub_24D39CDF0();
        uint64_t v62 = a5;
        if (os_log_type_enabled(v27, v28))
        {
          id v66 = v20;
          uint64_t v29 = (uint8_t *)swift_slowAlloc();
          *(void *)os_log_type_t type = v19;
          unint64_t v30 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v29 = 138412290;
          *(void *)&v68[0] = v26;
          uint64_t v60 = v18;
          uint64_t v31 = v26;
          sub_24D39D070();
          *unint64_t v30 = v26;

          double v18 = v60;
          _os_log_impl(&dword_24D2B1000, v27, v28, format, v29, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          id v32 = v30;
          id v19 = *(id *)type;
          MEMORY[0x253326010](v32, -1, -1);
          long long v33 = v29;
          id v20 = v66;
          MEMORY[0x253326010](v33, -1, -1);
        }
        else
        {

          os_log_type_t v27 = v26;
        }

        *(void *)&v68[0] = 0;
        unsigned int v36 = objc_msgSend(v22, sel_startAtTime_error_, v68, 0.0);
        uint64_t v37 = *(void **)&v68[0];
        if (v36)
        {
          *((unsigned char *)&v26->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          id v38 = v37;
        }
        else
        {
          id v39 = *(id *)&v68[0];
          uint64_t v40 = (void *)sub_24D39C710();

          swift_willThrow();
          unint64_t v41 = v26;
          id v42 = v40;
          uint64_t v43 = v41;
          id v44 = v40;
          uint64_t v45 = sub_24D39C930();
          os_log_type_t v46 = sub_24D39CDF0();
          if (os_log_type_enabled(v45, v46))
          {
            int v63 = v45;
            uint64_t v47 = swift_slowAlloc();
            uint64_t v59 = (void *)swift_slowAlloc();
            formata = (char *)swift_slowAlloc();
            *(void *)&v68[0] = formata;
            *(_DWORD *)uint64_t v47 = 138412546;
            uint64_t v48 = v43;
            sub_24D39D070();
            *uint64_t v59 = v43;

            *(_WORD *)(v47 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v49 = sub_24D39D520();
            sub_24D2B8328(v49, v50, (uint64_t *)v68);
            sub_24D39D070();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24D2B1000, v63, v46, v62, (uint8_t *)v47, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v59, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x253326010](formata, -1, -1);
            MEMORY[0x253326010](v47, -1, -1);
          }
          else
          {
          }
        }
        uint64_t v51 = *(void (**)(void *, uint64_t))((char *)&v26->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v51)
        {
          id v52 = v20;
          sub_24D2C6D74((uint64_t)v51);
          v51(v18, a1);
          sub_24D2E44C8((uint64_t)v51);
        }
        unint64_t v53 = *(Class *)((char *)&v26->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink);
        if (v53)
        {
          id v54 = v53;
          objc_msgSend(v54, sel_timestamp);
          uint64_t v56 = v55;

          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
          uint64_t v56 = 0;
        }
        unint64_t v57 = (char *)v26 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticLastPlayTimestamp;
        *(void *)unint64_t v57 = v56;
        v57[8] = 0;
        uint64_t v58 = (char *)v26 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay;
        *(void *)uint64_t v58 = 0x3FF0000000000000;
        v58[8] = 0;
      }
      else
      {
        id v34 = *(id *)&v68[0];
        id v35 = (void *)sub_24D39C710();

        swift_willThrow();
      }
    }
  }
}

uint64_t sub_24D300154(uint64_t a1, char a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t v7 = v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod;
    *(void *)uint64_t v7 = a1;
    *(unsigned char *)(v7 + 8) = 1;
    memset(v11, 0, sizeof(v11));
  }
  else
  {
    uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
    if (*(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem))
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)(v3 + v6) = 0;
    swift_release();
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) == 1)
    {
      *(unsigned char *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) = 0;
      sub_24D2FE268();
    }
    uint64_t v8 = v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod;
    *(void *)uint64_t v8 = a1;
    *(unsigned char *)(v8 + 8) = 0;
    sub_24D304BCC(a3, (uint64_t)v11);
  }
  uint64_t v9 = v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext;
  swift_beginAccess();
  sub_24D3049DC((uint64_t)v11, v9);
  return swift_endAccess();
}

void sub_24D300268(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v54 = *MEMORY[0x263EF8340];
  uint64_t v5 = &v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(void *)uint64_t v5 = 0;
  v5[8] = 1;
  memset(v53, 0, sizeof(v53));
  uint64_t v6 = (uint64_t)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_24D3049DC((uint64_t)v53, v6);
  swift_endAccess();
  if ((a1 & 1) == 0)
  {
    uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
    if (*(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)&v3[v7] = 0;
    swift_release();
    if (v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
    {
      v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
      sub_24D2FE268();
    }
  }
  uint64_t v8 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v3[v8] = 0;
  swift_release();
  uint64_t v9 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v3[v9] = 0;
  swift_release();
  uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(void *)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v3[v10] = 0;
  swift_release();
  uint64_t v11 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v11)
  {
    uint64_t v12 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachHapticPattern];
    if (v12)
    {
      *(void *)&v53[0] = 0;
      id v13 = v11;
      id v14 = v12;
      uint64_t v51 = v13;
      id v15 = objc_msgSend(v13, sel_createPlayerWithPattern_error_, v14, v53);
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v17 = qword_2698602B0;
        id v18 = *(id *)&v53[0];
        if (v17 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_24D39C950();
        sub_24D2B508C(v19, (uint64_t)qword_269869FD0);
        id v20 = v3;
        id v21 = sub_24D39C930();
        os_log_type_t v22 = sub_24D39CDF0();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v49 = v12;
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          id v24 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 138412290;
          *(void *)&v53[0] = v20;
          uint64_t v25 = v20;
          sub_24D39D070();
          *id v24 = v20;

          _os_log_impl(&dword_24D2B1000, v21, v22, "ðŸ§­ FMR1HaptiCtrl%@: playing arm's reach haptic", v23, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v24, -1, -1);
          uint64_t v26 = v23;
          uint64_t v12 = v49;
          MEMORY[0x253326010](v26, -1, -1);
        }
        else
        {

          id v21 = v20;
        }

        *(void *)&v53[0] = 0;
        unsigned int v29 = objc_msgSend(v16, sel_startAtTime_error_, v53, 0.0);
        unint64_t v30 = *(void **)&v53[0];
        if (v29)
        {
          *((unsigned char *)&v20->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          id v31 = v30;
        }
        else
        {
          id v32 = *(id *)&v53[0];
          long long v33 = (void *)sub_24D39C710();

          swift_willThrow();
          id v34 = v20;
          id v35 = v33;
          unsigned int v36 = v34;
          id v37 = v33;
          id v38 = sub_24D39C930();
          os_log_type_t v39 = sub_24D39CDF0();
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v40 = swift_slowAlloc();
            uint64_t v47 = (void *)swift_slowAlloc();
            uint64_t v50 = swift_slowAlloc();
            *(void *)&v53[0] = v50;
            *(_DWORD *)uint64_t v40 = 138412546;
            os_log_t log = v38;
            unint64_t v41 = v20;
            id v42 = v36;
            sub_24D39D070();
            void *v47 = v36;

            id v20 = v41;
            *(_WORD *)(v40 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v43 = sub_24D39D520();
            sub_24D2B8328(v43, v44, (uint64_t *)v53);
            sub_24D39D070();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24D2B1000, log, v39, "ðŸ§­ FMR1HaptiCtrl%@: failed playing arm's reach haptic (%s)", (uint8_t *)v40, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v47, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x253326010](v50, -1, -1);
            MEMORY[0x253326010](v40, -1, -1);
          }
          else
          {
          }
        }
        uint64_t v45 = *(void (**)(void *, uint64_t))((char *)&v20->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v45)
        {
          id v46 = v14;
          sub_24D2C6D74((uint64_t)v45);
          v45(v12, a2);

          sub_24D2E44C8((uint64_t)v45);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {
        id v27 = *(id *)&v53[0];
        os_log_type_t v28 = (void *)sub_24D39C710();

        swift_willThrow();
      }
    }
  }
}

void sub_24D300928(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v104 = a1;
  uint64_t v110 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_24D39C990();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24D39C9D0();
  uint64_t v102 = *(void *)(v7 - 8);
  uint64_t v103 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24D39C9F0();
  uint64_t v101 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  id v13 = (char *)v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)v87 - v14;
  uint64_t v16 = &v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(void *)uint64_t v16 = 0;
  v16[8] = 1;
  long long aBlock = 0u;
  long long v106 = 0u;
  uint64_t v17 = (uint64_t)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_24D3049DC((uint64_t)&aBlock, v17);
  swift_endAccess();
  uint64_t v18 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v2[v18] = 0;
  swift_release();
  if (v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_24D2FE268();
  }
  uint64_t v19 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v2[v19] = 0;
  swift_release();
  v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  uint64_t v20 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v2[v20] = 0;
  swift_release();
  uint64_t v21 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(void *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v2[v21] = 0;
  swift_release();
  sub_24D2FEB18();
  os_log_type_t v22 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v22)
  {
    uint64_t v23 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticPattern];
    if (v23)
    {
      uint64_t v96 = v4;
      uint64_t v97 = v3;
      *(void *)&long long aBlock = 0;
      id v24 = v22;
      id v25 = v23;
      id v26 = objc_msgSend(v24, sel_createPlayerWithPattern_error_, v25, &aBlock);
      if (!v26)
      {
        id v33 = (id)aBlock;
        id v34 = (void *)sub_24D39C710();

        swift_willThrow();
        return;
      }
      id v100 = v26;
      id v98 = v25;
      id v99 = v24;
      id v27 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink];
      int v95 = v23;
      if (v27)
      {
        id v28 = (id)aBlock;
        objc_msgSend(v27, sel_timestamp);
        double v30 = v29;
        id v31 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticLastPlayTimestamp];
        id v32 = &v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticLastPlayTimestamp + 8];
        if (*v32)
        {
          if (v29 >= 2.0) {
            goto LABEL_26;
          }
          goto LABEL_22;
        }
      }
      else
      {
        id v31 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticLastPlayTimestamp];
        char v35 = v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_nearbyHapticLastPlayTimestamp + 8];
        id v36 = (id)aBlock;
        if (v35)
        {
LABEL_22:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v37 = sub_24D39C950();
          sub_24D2B508C(v37, (uint64_t)qword_269869FD0);
          id v38 = v2;
          os_log_type_t v39 = sub_24D39C930();
          os_log_type_t v40 = sub_24D39CDF0();
          if (os_log_type_enabled(v39, v40))
          {
            unint64_t v41 = (uint8_t *)swift_slowAlloc();
            id v42 = (void *)swift_slowAlloc();
            *(_DWORD *)unint64_t v41 = 138412290;
            *(void *)&long long aBlock = v38;
            uint64_t v43 = v38;
            sub_24D39D070();
            *id v42 = v38;

            _os_log_impl(&dword_24D2B1000, v39, v40, "ðŸ§­ FMR1HaptiCtrl%@: not playing nearby haptic (we just played it)", v41, 0xCu);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v42, -1, -1);
            MEMORY[0x253326010](v41, -1, -1);

            swift_unknownObjectRelease();
          }
          else
          {

            swift_unknownObjectRelease();
          }

          return;
        }
        id v32 = v31 + 1;
        double v30 = 0.0;
      }
      if (*v31 + 2.0 <= v30)
      {
LABEL_26:
        uint64_t v92 = v32;
        id v93 = v31;
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v44 = sub_24D39C950();
        sub_24D2B508C(v44, (uint64_t)qword_269869FD0);
        uint64_t v45 = v2;
        id v46 = sub_24D39C930();
        os_log_type_t v47 = sub_24D39CDF0();
        int v48 = v47;
        BOOL v49 = os_log_type_enabled(v46, v47);
        id v94 = v45;
        if (v49)
        {
          int v90 = v48;
          uint64_t v50 = (uint8_t *)swift_slowAlloc();
          uint64_t v51 = swift_slowAlloc();
          uint64_t v89 = v6;
          id v52 = (void *)v51;
          uint64_t v91 = v10;
          id v88 = v50;
          *(_DWORD *)uint64_t v50 = 138412290;
          v87[1] = v50 + 4;
          *(void *)&long long aBlock = v45;
          unint64_t v53 = v45;
          uint64_t v10 = v91;
          sub_24D39D070();
          *id v52 = v45;

          uint64_t v54 = v88;
          _os_log_impl(&dword_24D2B1000, v46, (os_log_type_t)v90, "ðŸ§­ FMR1HaptiCtrl%@: playing nearby haptic", v88, 0xCu);
          sub_24D2B7450(&qword_269861308);
          uint64_t v55 = v52;
          uint64_t v6 = v89;
          swift_arrayDestroy();
          MEMORY[0x253326010](v55, -1, -1);
          MEMORY[0x253326010](v54, -1, -1);
        }
        else
        {

          id v46 = v45;
        }

        *(void *)&long long aBlock = 0;
        unsigned int v56 = objc_msgSend(v100, sel_startAtTime_error_, &aBlock, 0.0);
        unint64_t v57 = (void *)aBlock;
        if (v56)
        {
          id v58 = v94;
          v94[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] = 1;
          sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
          id v59 = v57;
          uint64_t v91 = sub_24D39CE90();
          sub_24D39C9E0();
          MEMORY[0x253324A80](v13, 0.2);
          uint64_t v101 = *(void *)(v101 + 8);
          ((void (*)(char *, uint64_t))v101)(v13, v10);
          uint64_t v60 = swift_allocObject();
          *(void *)(v60 + 16) = v58;
          uint64_t v107 = sub_24D304BA8;
          uint64_t v108 = v60;
          *(void *)&long long aBlock = MEMORY[0x263EF8330];
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v106 = sub_24D32194C;
          *((void *)&v106 + 1) = &unk_26FF871E0;
          int v61 = _Block_copy(&aBlock);
          id v62 = v58;
          swift_release();
          sub_24D39C9B0();
          *(void *)&long long aBlock = MEMORY[0x263F8EE78];
          sub_24D3059D8((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
          sub_24D2B7450((uint64_t *)&unk_2698610D0);
          sub_24D2C8438();
          uint64_t v63 = v97;
          sub_24D39D0E0();
          uint64_t v64 = (void *)v91;
          MEMORY[0x253324EA0](v15, v9, v6, v61);
          _Block_release(v61);

          uint64_t v65 = v63;
          id v66 = v58;
          (*(void (**)(char *, uint64_t))(v96 + 8))(v6, v65);
          (*(void (**)(char *, uint64_t))(v102 + 8))(v9, v103);
          ((void (*)(char *, uint64_t))v101)(v15, v10);
        }
        else
        {
          id v67 = (id)aBlock;
          uint64_t v68 = (void *)sub_24D39C710();

          swift_willThrow();
          id v66 = v94;
          uint64_t v69 = v94;
          id v70 = v68;
          uint64_t v71 = v69;
          id v72 = v68;
          uint64_t v73 = sub_24D39C930();
          os_log_type_t v74 = sub_24D39CDF0();
          if (os_log_type_enabled(v73, v74))
          {
            uint64_t v75 = swift_slowAlloc();
            uint64_t v76 = (void *)swift_slowAlloc();
            uint64_t v103 = swift_slowAlloc();
            *(void *)&long long aBlock = v103;
            *(_DWORD *)uint64_t v75 = 138412546;
            uint64_t v109 = (uint64_t)v71;
            uint64_t v77 = v71;
            sub_24D39D070();
            *uint64_t v76 = v71;

            *(_WORD *)(v75 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v78 = sub_24D39D520();
            uint64_t v109 = sub_24D2B8328(v78, v79, (uint64_t *)&aBlock);
            sub_24D39D070();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24D2B1000, v73, v74, "ðŸ§­ FMR1HaptiCtrl%@: failed playing nearby haptic (%s)", (uint8_t *)v75, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            uint64_t v80 = v76;
            id v66 = v94;
            MEMORY[0x253326010](v80, -1, -1);
            uint64_t v81 = v103;
            swift_arrayDestroy();
            MEMORY[0x253326010](v81, -1, -1);
            MEMORY[0x253326010](v75, -1, -1);
          }
          else
          {
          }
        }
        uint64_t v82 = v104;
        id v83 = v99;
        uint64_t v84 = v93;
        uint64_t v85 = *(void (**)(void *, uint64_t))&v66[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler];
        if (v85)
        {
          id v86 = v98;
          sub_24D2C6D74((uint64_t)v85);
          v85(v95, v82);

          sub_24D2E44C8((uint64_t)v85);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
        *uint64_t v84 = v30;
        *uint64_t v92 = 0;
        return;
      }
      goto LABEL_22;
    }
  }
}

uint64_t sub_24D30162C()
{
  return sub_24D301688(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem, (uint64_t)sub_24D304B40, (uint64_t)&unk_26FF87190, 0.5);
}

uint64_t sub_24D301658()
{
  return sub_24D301688(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem, (uint64_t)sub_24D304B10, (uint64_t)&unk_26FF87168, 0.2);
}

uint64_t sub_24D301688(uint64_t *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v9 = sub_24D39CA10();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = sub_24D39C990();
  uint64_t result = MEMORY[0x270FA5388](v15);
  uint64_t v17 = *a1;
  if (!*(void *)(v4 + *a1))
  {
    uint64_t v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = a2;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24D32194C;
    aBlock[3] = a3;
    _Block_copy(aBlock);
    uint64_t v27 = MEMORY[0x263F8EE78];
    sub_24D3059D8((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
    swift_retain();
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    uint64_t v25 = v9;
    sub_24D2C8438();
    sub_24D39D0E0();
    sub_24D39CA40();
    swift_allocObject();
    uint64_t v19 = sub_24D39CA20();
    swift_release();
    swift_release();
    *(void *)(v4 + v17) = v19;
    swift_retain();
    swift_release();
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v20 = (void *)sub_24D39CE90();
    sub_24D39CA00();
    MEMORY[0x253324A90](v12, a4);
    uint64_t v21 = *(void (**)(char *, uint64_t))(v26 + 8);
    os_log_type_t v22 = v12;
    uint64_t v23 = v25;
    v21(v22, v25);
    sub_24D39CE60();
    swift_release();

    return ((uint64_t (*)(char *, uint64_t))v21)(v14, v23);
  }
  return result;
}

uint64_t sub_24D3019A4(uint64_t a1, void (*a2)(_OWORD *))
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x253326120](v3);
  if (result)
  {
    uint64_t v5 = (void *)result;
    memset(v6, 0, sizeof(v6));
    a2(v6);

    return sub_24D2BBFB4((uint64_t)v6, &qword_269861850);
  }
  return result;
}

uint64_t sub_24D301A1C(char a1)
{
  uint64_t v3 = sub_24D39CA10();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = sub_24D39C990();
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (!*(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem))
  {
    uint64_t v13 = swift_allocObject();
    uint64_t v22 = v3;
    uint64_t v14 = v13;
    swift_unknownObjectWeakInit();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    *(unsigned char *)(v15 + 24) = a1 & 1;
    aBlock[4] = sub_24D304B04;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24D32194C;
    aBlock[3] = &unk_26FF87140;
    v21[1] = _Block_copy(aBlock);
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_24D3059D8((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
    swift_retain();
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    sub_24D39CA40();
    swift_allocObject();
    uint64_t v16 = sub_24D39CA20();
    swift_release();
    swift_release();
    *(void *)(v1 + v12) = v16;
    swift_retain();
    swift_release();
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v17 = (void *)sub_24D39CE90();
    sub_24D39CA00();
    MEMORY[0x253324A90](v7, 0.0);
    uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v19 = v7;
    uint64_t v20 = v22;
    v18(v19, v22);
    sub_24D39CE60();
    swift_release();

    return ((uint64_t (*)(char *, uint64_t))v18)(v9, v20);
  }
  return result;
}

uint64_t sub_24D301D60(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x253326120](v3);
  if (result)
  {
    uint64_t v5 = (char *)result;
    memset(v6, 0, sizeof(v6));
    sub_24D300268(a2 & 1, (uint64_t)v6);
    sub_24D2BBFB4((uint64_t)v6, &qword_269861850);
    *(void *)&v5[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem] = 0;

    return swift_release();
  }
  return result;
}

uint64_t sub_24D301DF0()
{
  return sub_24D301688(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem, (uint64_t)sub_24D304AC4, (uint64_t)&unk_26FF870F0, 0.5);
}

void sub_24D301E1C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x253326120](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    if (*((unsigned char *)v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern))
    {
    }
    else
    {
      *((unsigned char *)v2 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) = 1;
      memset(v4, 0, sizeof(v4));
      sub_24D2FD900((uint64_t)v4);

      sub_24D2BBFB4((uint64_t)v4, &qword_269861850);
    }
  }
}

uint64_t sub_24D301EAC()
{
  return sub_24D301688(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem, (uint64_t)sub_24D304A7C, (uint64_t)&unk_26FF870C8, 0.05);
}

void sub_24D301EDC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v52 = *MEMORY[0x263EF8340];
  uint64_t v3 = &v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  memset(v51, 0, sizeof(v51));
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_24D3049DC((uint64_t)v51, v4);
  swift_endAccess();
  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v5] = 0;
  swift_release();
  if (v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_24D2FE268();
  }
  uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v6] = 0;
  swift_release();
  uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v7] = 0;
  swift_release();
  v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  uint64_t v8 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v8] = 0;
  swift_release();
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v9)
  {
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_connectedHapticPattern];
    if (v10)
    {
      *(void *)&v51[0] = 0;
      id v11 = v9;
      id v12 = v10;
      BOOL v49 = v11;
      id v13 = objc_msgSend(v11, sel_createPlayerWithPattern_error_, v12, v51);
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = qword_2698602B0;
        id v16 = *(id *)&v51[0];
        if (v15 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_24D39C950();
        sub_24D2B508C(v17, (uint64_t)qword_269869FD0);
        uint64_t v18 = v2;
        uint64_t v19 = sub_24D39C930();
        os_log_type_t v20 = sub_24D39CDF0();
        if (os_log_type_enabled(v19, v20))
        {
          os_log_type_t v47 = v10;
          uint64_t v21 = (uint8_t *)swift_slowAlloc();
          uint64_t v22 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v21 = 138412290;
          *(void *)&v51[0] = v18;
          uint64_t v23 = v18;
          sub_24D39D070();
          *uint64_t v22 = v18;

          _os_log_impl(&dword_24D2B1000, v19, v20, "ðŸ§­ FMR1HaptiCtrl%@: playing connected haptic", v21, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v22, -1, -1);
          uint64_t v24 = v21;
          uint64_t v10 = v47;
          MEMORY[0x253326010](v24, -1, -1);
        }
        else
        {

          uint64_t v19 = v18;
        }

        *(void *)&v51[0] = 0;
        unsigned int v27 = objc_msgSend(v14, sel_startAtTime_error_, v51, 0.0);
        id v28 = *(void **)&v51[0];
        if (v27)
        {
          *((unsigned char *)&v18->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          id v29 = v28;
        }
        else
        {
          id v30 = *(id *)&v51[0];
          id v31 = (void *)sub_24D39C710();

          swift_willThrow();
          id v32 = v18;
          id v33 = v31;
          id v34 = v32;
          id v35 = v31;
          id v36 = sub_24D39C930();
          os_log_type_t v37 = sub_24D39CDF0();
          if (os_log_type_enabled(v36, v37))
          {
            uint64_t v38 = swift_slowAlloc();
            uint64_t v45 = (void *)swift_slowAlloc();
            uint64_t v48 = swift_slowAlloc();
            *(void *)&v51[0] = v48;
            *(_DWORD *)uint64_t v38 = 138412546;
            os_log_t log = v36;
            os_log_type_t v39 = v18;
            os_log_type_t v40 = v34;
            sub_24D39D070();
            *uint64_t v45 = v34;

            uint64_t v18 = v39;
            *(_WORD *)(v38 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v41 = sub_24D39D520();
            sub_24D2B8328(v41, v42, (uint64_t *)v51);
            sub_24D39D070();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24D2B1000, log, v37, "ðŸ§­ FMR1HaptiCtrl%@: failed playing connected haptic (%s)", (uint8_t *)v38, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v45, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x253326010](v48, -1, -1);
            MEMORY[0x253326010](v38, -1, -1);
          }
          else
          {
          }
        }
        uint64_t v43 = *(void (**)(void *, uint64_t))((char *)&v18->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v43)
        {
          id v44 = v12;
          sub_24D2C6D74((uint64_t)v43);
          v43(v10, a1);

          sub_24D2E44C8((uint64_t)v43);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {
        id v25 = *(id *)&v51[0];
        uint64_t v26 = (void *)sub_24D39C710();

        swift_willThrow();
      }
    }
  }
}

void sub_24D3025A0(uint64_t a1)
{
  uint64_t v2 = v1;
  v55[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v3] = 0;
  swift_release();
  uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v4] = 0;
  swift_release();
  v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v5] = 0;
  swift_release();
  uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v6] = 0;
  swift_release();
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v7)
  {
    uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadHapticPattern];
    if (v8)
    {
      v55[0] = 0;
      id v9 = v7;
      id v10 = v8;
      unint64_t v53 = v9;
      id v11 = objc_msgSend(v9, sel_createPlayerWithPattern_error_, v10, v55);
      if (v11)
      {
        id v12 = v11;
        uint64_t v13 = qword_2698602B0;
        id v14 = v55[0];
        if (v13 != -1) {
          swift_once();
        }
        uint64_t v15 = sub_24D39C950();
        sub_24D2B508C(v15, (uint64_t)qword_269869FD0);
        id v16 = v2;
        uint64_t v17 = sub_24D39C930();
        os_log_type_t v18 = sub_24D39CDF0();
        if (os_log_type_enabled(v17, v18))
        {
          id v51 = v10;
          uint64_t v19 = (uint8_t *)swift_slowAlloc();
          os_log_type_t v20 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v19 = 138412290;
          v55[0] = v16;
          uint64_t v21 = v16;
          sub_24D39D070();
          *os_log_type_t v20 = v16;

          _os_log_impl(&dword_24D2B1000, v17, v18, "ðŸ§­ FMR1HaptiCtrl%@: playing ahead (green) haptic", v19, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v20, -1, -1);
          uint64_t v22 = v19;
          id v10 = v51;
          MEMORY[0x253326010](v22, -1, -1);
        }
        else
        {

          uint64_t v17 = v16;
        }

        v55[0] = 0;
        unsigned int v25 = objc_msgSend(v12, sel_startAtTime_error_, v55, 0.0);
        id v26 = v55[0];
        if (v25)
        {
          *((unsigned char *)&v16->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          id v27 = v26;
        }
        else
        {
          id v28 = v55[0];
          id v29 = (void *)sub_24D39C710();

          swift_willThrow();
          id v30 = v16;
          id v31 = v29;
          id v32 = v30;
          id v33 = v29;
          id v34 = sub_24D39C930();
          os_log_type_t v35 = sub_24D39CDF0();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v36 = swift_slowAlloc();
            BOOL v49 = (void *)swift_slowAlloc();
            uint64_t v52 = (void *)swift_slowAlloc();
            v55[0] = v52;
            *(_DWORD *)uint64_t v36 = 138412546;
            os_log_t log = v34;
            os_log_type_t v37 = v16;
            uint64_t v38 = v32;
            sub_24D39D070();
            *BOOL v49 = v32;

            id v16 = v37;
            *(_WORD *)(v36 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v39 = sub_24D39D520();
            sub_24D2B8328(v39, v40, (uint64_t *)v55);
            sub_24D39D070();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24D2B1000, log, v35, "ðŸ§­ FMR1HaptiCtrl%@: failed playing ahead haptic (%s)", (uint8_t *)v36, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v49, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x253326010](v52, -1, -1);
            MEMORY[0x253326010](v36, -1, -1);
          }
          else
          {
          }
        }
        uint64_t v41 = *(void (**)(void *, uint64_t))((char *)&v16->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v41)
        {
          id v42 = v10;
          sub_24D2C6D74((uint64_t)v41);
          v41(v8, a1);
          sub_24D2E44C8((uint64_t)v41);
        }
        uint64_t v43 = *(Class *)((char *)&v16->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticDisplayLink);
        if (v43)
        {
          id v44 = v43;
          objc_msgSend(v44, sel_timestamp);
          uint64_t v46 = v45;

          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
          uint64_t v46 = 0;
        }
        os_log_type_t v47 = (char *)v16 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticLastPlayTimestamp;
        *(void *)os_log_type_t v47 = v46;
        v47[8] = 0;
        uint64_t v48 = (char *)v16 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticNextPlayDelay;
        *(void *)uint64_t v48 = 0;
        v48[8] = 0;
      }
      else
      {
        id v23 = v55[0];
        uint64_t v24 = (void *)sub_24D39C710();

        swift_willThrow();
      }
    }
  }
}

void sub_24D302C50(uint64_t a1)
{
  sub_24D302ED8(a1, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_aheadOffHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing ahead off (green) haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing ahead off haptic (%s)");
}

uint64_t sub_24D302CC0(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem))
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)(v3 + v7) = 0;
  swift_release();
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) == 1)
  {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern) = 0;
    sub_24D2FE268();
  }
  uint64_t v8 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem))
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)(v3 + v8) = 0;
  swift_release();
  uint64_t v9 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem))
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)(v3 + v9) = 0;
  swift_release();
  *(unsigned char *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic) = 0;
  uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem))
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)(v3 + v10) = 0;
  swift_release();
  uint64_t v11 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem))
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)(v3 + v11) = 0;
  swift_release();
  sub_24D2FF808(a2);
  return sub_24D300154(*(uint64_t *)&a3, 0, a1);
}

void sub_24D302E68(uint64_t a1)
{
  sub_24D302ED8(a1, &OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_armsReachOffHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing arm's reach off haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing arm's reach off haptic (%s)");
}

void sub_24D302ED8(uint64_t a1, void *a2, const char *a3, const char *a4)
{
  uint64_t v8 = v4;
  uint64_t v62 = *MEMORY[0x263EF8340];
  uint64_t v10 = &v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(void *)uint64_t v10 = 0;
  v10[8] = 1;
  memset(v61, 0, sizeof(v61));
  uint64_t v11 = (uint64_t)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_24D3049DC((uint64_t)v61, v11);
  swift_endAccess();
  uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v4[v12] = 0;
  swift_release();
  if (v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_24D2FE268();
  }
  uint64_t v13 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v4[v13] = 0;
  swift_release();
  uint64_t v14 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v4[v14] = 0;
  swift_release();
  v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  uint64_t v15 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v4[v15] = 0;
  swift_release();
  uint64_t v16 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v4[v16] = 0;
  swift_release();
  uint64_t v17 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v17)
  {
    os_log_type_t v18 = *(void **)&v4[*a2];
    if (v18)
    {
      *(void *)&v61[0] = 0;
      id v19 = v17;
      id v60 = v18;
      id v20 = objc_msgSend(v19, sel_createPlayerWithPattern_error_);
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = qword_2698602B0;
        id v23 = *(id *)&v61[0];
        if (v22 != -1) {
          swift_once();
        }
        uint64_t v24 = sub_24D39C950();
        sub_24D2B508C(v24, (uint64_t)qword_269869FD0);
        unsigned int v25 = v8;
        id v26 = sub_24D39C930();
        os_log_type_t v27 = sub_24D39CDF0();
        unsigned int v56 = a4;
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v59 = a1;
          id v28 = a3;
          id v29 = (uint8_t *)swift_slowAlloc();
          id v54 = v19;
          id v30 = (void *)swift_slowAlloc();
          *(_DWORD *)id v29 = 138412290;
          *(void *)&v61[0] = v25;
          id v31 = v25;
          id v32 = v25;
          sub_24D39D070();
          *id v30 = v31;

          unsigned int v25 = v31;
          _os_log_impl(&dword_24D2B1000, v26, v27, v28, v29, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          id v33 = v30;
          id v19 = v54;
          MEMORY[0x253326010](v33, -1, -1);
          a1 = v59;
          MEMORY[0x253326010](v29, -1, -1);
        }
        else
        {

          id v26 = v25;
        }

        *(void *)&v61[0] = 0;
        unsigned int v36 = objc_msgSend(v21, sel_startAtTime_error_, v61, 0.0);
        os_log_type_t v37 = *(void **)&v61[0];
        if (v36)
        {
          *((unsigned char *)&v25->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          id v38 = v37;
        }
        else
        {
          id v39 = *(id *)&v61[0];
          unint64_t v40 = (void *)sub_24D39C710();

          swift_willThrow();
          uint64_t v41 = v25;
          id v42 = v40;
          uint64_t v43 = v41;
          id v44 = v40;
          uint64_t v45 = sub_24D39C930();
          os_log_type_t v46 = sub_24D39CDF0();
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v55 = v45;
            uint64_t v47 = swift_slowAlloc();
            unint64_t v53 = (void *)swift_slowAlloc();
            uint64_t v57 = swift_slowAlloc();
            *(void *)&v61[0] = v57;
            *(_DWORD *)uint64_t v47 = 138412546;
            id v58 = v18;
            uint64_t v48 = v43;
            sub_24D39D070();
            *unint64_t v53 = v43;

            os_log_type_t v18 = v58;
            *(_WORD *)(v47 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v49 = sub_24D39D520();
            sub_24D2B8328(v49, v50, (uint64_t *)v61);
            sub_24D39D070();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24D2B1000, v55, v46, v56, (uint8_t *)v47, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v53, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x253326010](v57, -1, -1);
            MEMORY[0x253326010](v47, -1, -1);
          }
          else
          {
          }
        }
        id v51 = *(void (**)(void *, uint64_t))((char *)&v25->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v51)
        {
          id v52 = v60;
          sub_24D2C6D74((uint64_t)v51);
          v51(v18, a1);

          sub_24D2E44C8((uint64_t)v51);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {
        id v34 = *(id *)&v61[0];
        os_log_type_t v35 = (void *)sub_24D39C710();

        swift_willThrow();
      }
    }
  }
}

void sub_24D3035F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v53 = *MEMORY[0x263EF8340];
  uint64_t v3 = &v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  memset(v52, 0, sizeof(v52));
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_24D3049DC((uint64_t)v52, v4);
  swift_endAccess();
  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v5] = 0;
  swift_release();
  if (v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_24D2FE268();
  }
  uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v6] = 0;
  swift_release();
  uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v7] = 0;
  swift_release();
  v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
  uint64_t v8 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v8] = 0;
  swift_release();
  uint64_t v9 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v1[v9] = 0;
  swift_release();
  sub_24D2FEB18();
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v10)
  {
    uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_preNearbyHapticPattern];
    if (v11)
    {
      *(void *)&v52[0] = 0;
      id v12 = v10;
      id v13 = v11;
      unint64_t v50 = v12;
      id v14 = objc_msgSend(v12, sel_createPlayerWithPattern_error_, v13, v52);
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = qword_2698602B0;
        id v17 = *(id *)&v52[0];
        if (v16 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_24D39C950();
        sub_24D2B508C(v18, (uint64_t)qword_269869FD0);
        id v19 = v2;
        id v20 = sub_24D39C930();
        os_log_type_t v21 = sub_24D39CDF0();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v48 = v11;
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          id v23 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v22 = 138412290;
          *(void *)&v52[0] = v19;
          uint64_t v24 = v19;
          sub_24D39D070();
          *id v23 = v19;

          _os_log_impl(&dword_24D2B1000, v20, v21, "ðŸ§­ FMR1HaptiCtrl%@: playing pre-nearby haptic", v22, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v23, -1, -1);
          unsigned int v25 = v22;
          uint64_t v11 = v48;
          MEMORY[0x253326010](v25, -1, -1);
        }
        else
        {

          id v20 = v19;
        }

        *(void *)&v52[0] = 0;
        unsigned int v28 = objc_msgSend(v15, sel_startAtTime_error_, v52, 0.0);
        id v29 = *(void **)&v52[0];
        if (v28)
        {
          *((unsigned char *)&v19->isa + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying) = 1;
          id v30 = v29;
        }
        else
        {
          id v31 = *(id *)&v52[0];
          id v32 = (void *)sub_24D39C710();

          swift_willThrow();
          id v33 = v19;
          id v34 = v32;
          os_log_type_t v35 = v33;
          id v36 = v32;
          os_log_type_t v37 = sub_24D39C930();
          os_log_type_t v38 = sub_24D39CDF0();
          if (os_log_type_enabled(v37, v38))
          {
            uint64_t v39 = swift_slowAlloc();
            os_log_type_t v46 = (void *)swift_slowAlloc();
            uint64_t v49 = swift_slowAlloc();
            *(void *)&v52[0] = v49;
            *(_DWORD *)uint64_t v39 = 138412546;
            os_log_t log = v37;
            unint64_t v40 = v19;
            uint64_t v41 = v35;
            sub_24D39D070();
            *os_log_type_t v46 = v35;

            id v19 = v40;
            *(_WORD *)(v39 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v42 = sub_24D39D520();
            sub_24D2B8328(v42, v43, (uint64_t *)v52);
            sub_24D39D070();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24D2B1000, log, v38, "ðŸ§­ FMR1HaptiCtrl%@: failed playing -prenearby haptic (%s)", (uint8_t *)v39, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v46, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x253326010](v49, -1, -1);
            MEMORY[0x253326010](v39, -1, -1);
          }
          else
          {
          }
        }
        id v44 = *(void (**)(void *, uint64_t))((char *)&v19->isa
                                                     + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
        if (v44)
        {
          id v45 = v13;
          sub_24D2C6D74((uint64_t)v44);
          v44(v11, a1);

          sub_24D2E44C8((uint64_t)v44);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {
        id v26 = *(id *)&v52[0];
        os_log_type_t v27 = (void *)sub_24D39C710();

        swift_willThrow();
      }
    }
  }
}

void sub_24D303CF8()
{
  sub_24D303E48(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelIncreaseHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing level increased haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing level increased haptic (%s)");
}

void sub_24D303D68()
{
  sub_24D303E48(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_levelDecreaseHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing level decreased haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing level decreased haptic (%s)");
}

void sub_24D303DD8()
{
  sub_24D303E48(&OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_farNearHapticPattern, "ðŸ§­ FMR1HaptiCtrl%@: playing level far->near haptic", "ðŸ§­ FMR1HaptiCtrl%@: failed playing far->near haptic (%s)");
}

void sub_24D303E48(void *a1, const char *a2, const char *a3)
{
  uint64_t v7 = v3;
  uint64_t v53 = *MEMORY[0x263EF8340];
  uint64_t v8 = &v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  memset(v52, 0, sizeof(v52));
  uint64_t v9 = (uint64_t)&v3[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
  swift_beginAccess();
  sub_24D3049DC((uint64_t)v52, v9);
  swift_endAccess();
  uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
  if (*(void *)&v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v7[v10] = 0;
  swift_release();
  if (v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
    sub_24D2FE268();
  }
  uint64_t v11 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
  if (*(void *)&v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v7[v11] = 0;
  swift_release();
  uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
  if (*(void *)&v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v7[v12] = 0;
  swift_release();
  uint64_t v13 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
  if (*(void *)&v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)&v7[v13] = 0;
  swift_release();
  id v14 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v14)
  {
    uint64_t v15 = *(void **)&v7[*a1];
    if (v15)
    {
      *(void *)&v52[0] = 0;
      id v16 = v14;
      id v17 = v15;
      id v18 = objc_msgSend(v16, sel_createPlayerWithPattern_error_, v17, v52);
      id v19 = *(void **)&v52[0];
      if (v18)
      {
        id v20 = v18;
        *(void *)&v52[0] = 0;
        id v21 = v19;
        unsigned int v22 = objc_msgSend(v20, sel_startAtTime_error_, v52, 0.0);
        id v23 = *(void **)&v52[0];
        if (v22)
        {
          v7[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] = 1;
          uint64_t v24 = qword_2698602B0;
          id v25 = v23;
          if (v24 != -1) {
            swift_once();
          }
          uint64_t v26 = sub_24D39C950();
          sub_24D2B508C(v26, (uint64_t)qword_269869FD0);
          os_log_type_t v27 = v7;
          unsigned int v28 = sub_24D39C930();
          os_log_type_t v29 = sub_24D39CDF0();
          if (os_log_type_enabled(v28, v29))
          {
            id v30 = (uint8_t *)swift_slowAlloc();
            unint64_t v50 = v17;
            id v31 = (void *)swift_slowAlloc();
            *(_DWORD *)id v30 = 138412290;
            *(void *)&v52[0] = v27;
            id v32 = v27;
            sub_24D39D070();
            void *v31 = v27;

            _os_log_impl(&dword_24D2B1000, v28, v29, a2, v30, 0xCu);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v31, -1, -1);
            MEMORY[0x253326010](v30, -1, -1);

            swift_unknownObjectRelease();
          }
          else
          {

            swift_unknownObjectRelease();
          }
        }
        else
        {
          id v51 = v17;
          id v35 = *(id *)&v52[0];
          id v36 = (void *)sub_24D39C710();

          swift_willThrow();
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v37 = sub_24D39C950();
          sub_24D2B508C(v37, (uint64_t)qword_269869FD0);
          os_log_type_t v38 = v7;
          id v39 = v36;
          unint64_t v40 = v38;
          id v41 = v36;
          uint64_t v42 = sub_24D39C930();
          os_log_type_t v43 = sub_24D39CDF0();
          if (os_log_type_enabled(v42, v43))
          {
            uint64_t v44 = swift_slowAlloc();
            id v45 = (void *)swift_slowAlloc();
            format = (char *)swift_slowAlloc();
            *(void *)&v52[0] = format;
            *(_DWORD *)uint64_t v44 = 138412546;
            os_log_type_t v46 = v40;
            sub_24D39D070();
            *id v45 = v40;

            *(_WORD *)(v44 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v47 = sub_24D39D520();
            sub_24D2B8328(v47, v48, (uint64_t *)v52);
            sub_24D39D070();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24D2B1000, v42, v43, a3, (uint8_t *)v44, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v45, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x253326010](format, -1, -1);
            MEMORY[0x253326010](v44, -1, -1);

            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
      }
      else
      {
        id v33 = *(id *)&v52[0];
        id v34 = (void *)sub_24D39C710();

        swift_willThrow();
      }
    }
  }
}

void sub_24D3044F0()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying;
  if (v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] == 1)
  {
    uint64_t v2 = v0;
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_24D39C950();
    sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
    uint64_t v4 = v0;
    uint64_t v5 = sub_24D39C930();
    os_log_type_t v6 = sub_24D39CDF0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = v1;
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      *(void *)&v19[0] = v4;
      uint64_t v9 = v4;
      sub_24D39D070();
      *uint64_t v8 = v4;

      _os_log_impl(&dword_24D2B1000, v5, v6, "ðŸ§­ FMR1HaptiCtrl%@: stopping haptics", v7, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      uint64_t v10 = v8;
      uint64_t v1 = v18;
      MEMORY[0x253326010](v10, -1, -1);
      MEMORY[0x253326010](v7, -1, -1);
    }
    else
    {
    }
    uint64_t v11 = &v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod];
    *(void *)uint64_t v11 = 0;
    v11[8] = 1;
    memset(v19, 0, sizeof(v19));
    uint64_t v12 = (uint64_t)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
    swift_beginAccess();
    sub_24D3049DC((uint64_t)v19, v12);
    swift_endAccess();
    uint64_t v13 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem;
    if (*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_startContinuousHapticWorkItem])
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)&v4[v13] = 0;
    swift_release();
    if (v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
    {
      v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] = 0;
      sub_24D2FE268();
    }
    uint64_t v14 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
    if (*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem])
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)&v4[v14] = 0;
    swift_release();
    uint64_t v15 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
    if (*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem])
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)&v4[v15] = 0;
    swift_release();
    v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic] = 0;
    uint64_t v16 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem;
    if (*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playScatterHapticWorkItem])
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)&v4[v16] = 0;
    swift_release();
    uint64_t v17 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem;
    if (*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playBuildHapticWorkItem])
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)&v4[v17] = 0;
    swift_release();
    v2[v1] = 0;
  }
}

void sub_24D304844(unsigned __int8 a1, char a2, unint64_t a3, double a4)
{
  uint64_t v5 = v4;
  int v10 = a1;
  uint64_t v11 = v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticPlaybackPeriod;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  memset(v17, 0, sizeof(v17));
  uint64_t v12 = v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext;
  swift_beginAccess();
  sub_24D3049DC((uint64_t)v17, v12);
  swift_endAccess();
  if (v10 != 2 && (a1 & 1) == 0) {
    *(unsigned char *)(v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic) = 1;
  }
  if (1.0 - a4 <= 2.22044605e-16)
  {
    uint64_t v14 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem;
    if (*(void *)(v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playArmsReachHapticWorkItem))
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)(v5 + v14) = 0;
    swift_release();
    *(unsigned char *)(v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic) = 0;
  }
  else
  {
    uint64_t v13 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem;
    if (*(void *)(v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playNearbyHapticWorkItem))
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)(v5 + v13) = 0;
    swift_release();
    uint64_t v15 = OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic;
    if ((*(unsigned char *)(v5 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hasPlayedArmsReachHaptic) & 1) == 0)
    {
      sub_24D301A1C(1);
      *(unsigned char *)(v5 + v15) = 1;
    }
    if (a2)
    {
      sub_24D301DF0();
      float v16 = a4;
      sub_24D2FE6D0(a3, v16);
    }
  }
}

uint64_t sub_24D3049DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269861850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D304A44()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24D304A7C()
{
  return sub_24D3019A4(v0, (void (*)(_OWORD *))sub_24D300928);
}

uint64_t sub_24D304AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D304ABC()
{
  return swift_release();
}

void sub_24D304AC4()
{
  sub_24D301E1C(v0);
}

uint64_t sub_24D304ACC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_24D304B04()
{
  return sub_24D301D60(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_24D304B10()
{
  return sub_24D3019A4(v0, (void (*)(_OWORD *))sub_24D2FF998);
}

uint64_t sub_24D304B40()
{
  return sub_24D3019A4(v0, (void (*)(_OWORD *))sub_24D2FF920);
}

uint64_t sub_24D304B70()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24D304BA8()
{
}

uint64_t sub_24D304BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269861850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D304C34(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return MEMORY[0x270F9D8F0]();
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t v6 = sub_24D39CB50();
  if (v7) {
    unint64_t v6 = v5;
  }
  if (4 * v3 < v6 >> 14) {
    goto LABEL_14;
  }
  return MEMORY[0x270F9D8F0]();
}

void sub_24D304CE4(float a1)
{
  v36[1] = *(id *)MEMORY[0x263EF8340];
  if (v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_isPlayingContinuousHapticPattern] == 1)
  {
    float v3 = 1.0 - a1;
    float v4 = (float)(a1 * 0.6) + (float)((float)(1.0 - a1) * 0.5);
    uint64_t v5 = *MEMORY[0x263F004D0];
    id v6 = objc_allocWithZone(MEMORY[0x263F00580]);
    *(float *)&double v7 = v4;
    id v35 = objc_msgSend(v6, sel_initWithParameterID_value_relativeTime_, v5, v7, 0.0);
    uint64_t v8 = *MEMORY[0x263F004D8];
    id v9 = objc_allocWithZone(MEMORY[0x263F00580]);
    *(float *)&double v10 = (float)(a1 * 0.1) - v3;
    id v11 = objc_msgSend(v9, sel_initWithParameterID_value_relativeTime_, v8, v10, 0.0);
    uint64_t v12 = v11;
    uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_continuousHapticPlayer];
    if (v13)
    {
      sub_24D2B7450(&qword_269861330);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_24D3A0B10;
      *(void *)(v14 + 32) = v35;
      *(void *)(v14 + 40) = v12;
      sub_24D39CC30();
      sub_24D2BC100(0, &qword_269861858);
      swift_unknownObjectRetain();
      id v15 = v35;
      id v16 = v12;
      uint64_t v17 = (void *)sub_24D39CC00();
      swift_bridgeObjectRelease();
      v36[0] = 0;
      unsigned int v18 = objc_msgSend(v13, sel_sendParameters_atTime_error_, v17, v36, 0.0);
      swift_unknownObjectRelease();

      if (v18)
      {
        id v19 = v36[0];
      }
      else
      {
        id v20 = v36[0];
        id v21 = (void *)sub_24D39C710();

        swift_willThrow();
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_24D39C950();
        sub_24D2B508C(v22, (uint64_t)qword_269869FD0);
        id v23 = v1;
        id v24 = v21;
        id v25 = v23;
        id v26 = v21;
        os_log_type_t v27 = sub_24D39C930();
        os_log_type_t v28 = sub_24D39CDF0();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = swift_slowAlloc();
          id v30 = (void *)swift_slowAlloc();
          id v34 = (void *)swift_slowAlloc();
          v36[0] = v34;
          *(_DWORD *)uint64_t v29 = 138412546;
          id v31 = v25;
          sub_24D39D070();
          *id v30 = v25;

          *(_WORD *)(v29 + 12) = 2080;
          swift_getErrorValue();
          uint64_t v32 = sub_24D39D520();
          sub_24D2B8328(v32, v33, (uint64_t *)v36);
          sub_24D39D070();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_24D2B1000, v27, v28, "ðŸ§­ FMR1HaptiCtrl%@: failed parametering continuous haptic player: %s", (uint8_t *)v29, 0x16u);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v30, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x253326010](v34, -1, -1);
          MEMORY[0x253326010](v29, -1, -1);
        }
        else
        {
        }
      }
    }
    else
    {
    }
  }
}

void sub_24D3051B8()
{
  v61[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticEngine];
  if (v1)
  {
    uint64_t v2 = v0;
    float v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPattern];
    if (v3)
    {
      v61[0] = 0;
      id v4 = v3;
      id v5 = v1;
      id v6 = objc_msgSend(v5, sel_createPlayerWithPattern_error_, v4, v61);
      id v7 = v61[0];
      if (v6)
      {
        uint64_t v8 = v6;
        if (v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPatternIntensity + 4])
        {
          id v9 = v61[0];
        }
        else
        {
          int v12 = *(_DWORD *)&v0[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_singleTapSelectedHapticPatternIntensity];
          uint64_t v13 = *MEMORY[0x263F004D0];
          id v14 = objc_allocWithZone(MEMORY[0x263F00580]);
          id v15 = v7;
          LODWORD(v16) = v12;
          id v17 = objc_msgSend(v14, sel_initWithParameterID_value_relativeTime_, v13, v16, 0.0);
          sub_24D2B7450(&qword_269861330);
          uint64_t v18 = swift_allocObject();
          *(_OWORD *)(v18 + 16) = xmmword_24D3A0210;
          *(void *)(v18 + 32) = v17;
          v61[0] = (id)v18;
          sub_24D39CC30();
          sub_24D2BC100(0, &qword_269861858);
          id v19 = v17;
          id v20 = (void *)sub_24D39CC00();
          swift_bridgeObjectRelease();
          v61[0] = 0;
          LOBYTE(v13) = objc_msgSend(v8, sel_sendParameters_atTime_error_, v20, v61, 0.0);

          if (v13)
          {
            id v21 = v61[0];
          }
          else
          {
            id v22 = v61[0];
            id v23 = (void *)sub_24D39C710();

            swift_willThrow();
            if (qword_2698602B0 != -1) {
              swift_once();
            }
            uint64_t v24 = sub_24D39C950();
            sub_24D2B508C(v24, (uint64_t)qword_269869FD0);
            id v25 = v2;
            id v26 = v23;
            os_log_type_t v27 = v25;
            id v28 = v23;
            uint64_t v29 = sub_24D39C930();
            os_log_type_t v30 = sub_24D39CDF0();
            if (os_log_type_enabled(v29, v30))
            {
              id v58 = v4;
              uint64_t v31 = swift_slowAlloc();
              uint64_t v55 = (void *)swift_slowAlloc();
              uint64_t v57 = (void *)swift_slowAlloc();
              v61[0] = v57;
              *(_DWORD *)uint64_t v31 = 138412546;
              id v54 = v23;
              os_log_t v60 = v19;
              uint64_t v32 = v27;
              sub_24D39D070();
              void *v55 = v27;

              *(_WORD *)(v31 + 12) = 2080;
              swift_getErrorValue();
              uint64_t v33 = sub_24D39D520();
              sub_24D2B8328(v33, v34, (uint64_t *)v61);
              sub_24D39D070();
              swift_bridgeObjectRelease();

              _os_log_impl(&dword_24D2B1000, v29, v30, "ðŸ§­ FMR1HaptiCtrl%@: failed parametering tap haptic player: %s", (uint8_t *)v31, 0x16u);
              sub_24D2B7450(&qword_269861308);
              swift_arrayDestroy();
              MEMORY[0x253326010](v55, -1, -1);
              swift_arrayDestroy();
              MEMORY[0x253326010](v57, -1, -1);
              uint64_t v35 = v31;
              id v4 = v58;
              MEMORY[0x253326010](v35, -1, -1);
            }
            else
            {
            }
          }
        }
        id v36 = *(void (**)(void *, id *))&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler];
        if (v36)
        {
          uint64_t v37 = (uint64_t)&v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_tapHapticContext];
          swift_beginAccess();
          sub_24D304BCC(v37, (uint64_t)v61);
          id v38 = v4;
          sub_24D2C6D74((uint64_t)v36);
          v36(v3, v61);

          sub_24D2E44C8((uint64_t)v36);
          sub_24D2BBFB4((uint64_t)v61, &qword_269861850);
        }
        v61[0] = 0;
        if (objc_msgSend(v8, sel_startAtTime_error_, v61, 0.0, v54))
        {
          id v39 = v61[0];

          swift_unknownObjectRelease();
          v2[OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_hapticsMayBePlaying] = 1;
        }
        else
        {
          id v40 = v61[0];
          id v41 = (void *)sub_24D39C710();

          swift_willThrow();
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v42 = sub_24D39C950();
          sub_24D2B508C(v42, (uint64_t)qword_269869FD0);
          os_log_type_t v43 = v2;
          id v44 = v41;
          id v45 = v43;
          id v46 = v41;
          uint64_t v47 = sub_24D39C930();
          os_log_type_t v48 = sub_24D39CDF0();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            unint64_t v50 = (void *)swift_slowAlloc();
            os_log_type_t type = (void *)swift_slowAlloc();
            v61[0] = type;
            *(_DWORD *)uint64_t v49 = 138412546;
            uint64_t v59 = v4;
            id v51 = v45;
            sub_24D39D070();
            *unint64_t v50 = v45;

            *(_WORD *)(v49 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v52 = sub_24D39D520();
            sub_24D2B8328(v52, v53, (uint64_t *)v61);
            sub_24D39D070();
            swift_bridgeObjectRelease();

            _os_log_impl(&dword_24D2B1000, v47, v48, "ðŸ§­ FMR1HaptiCtrl%@: failed playing single tap haptic (%s)", (uint8_t *)v49, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v50, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x253326010](type, -1, -1);
            MEMORY[0x253326010](v49, -1, -1);

            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
      }
      else
      {
        id v10 = v61[0];
        id v11 = (void *)sub_24D39C710();

        swift_willThrow();
      }
    }
  }
}

uint64_t sub_24D3059A8()
{
  return sub_24D2FE080(v0);
}

void sub_24D3059B0()
{
  sub_24D2FC98C(v0);
}

void sub_24D3059B8(uint64_t a1)
{
  sub_24D2FCE04(a1, v1);
}

_OWORD *sub_24D3059C0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_24D3059D0()
{
  return swift_release();
}

uint64_t sub_24D3059D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FMMockFindingSession.__allocating_init(findables:primaryPart:findingTechnology:groupedItemIdentifiers:arSession:)(uint64_t *a1, uint64_t a2, _WORD *a3, uint64_t a4, void *a5)
{
  uint64_t v11 = swift_allocObject();
  v16[0] = *a3;
  unsigned __int16 v12 = v16[0];
  type metadata accessor for FMFindingMockLocalizer();
  swift_allocObject();
  swift_retain();
  uint64_t v13 = swift_bridgeObjectRetain();
  *(void *)(v11 + OBJC_IVAR____TtC11FMFindingUI20FMMockFindingSession_mockLocalizer) = sub_24D320CB4(v13, v16);
  swift_release();
  sub_24D305DD8(a2, (uint64_t)v16);
  unsigned __int16 v17 = v12;
  uint64_t v14 = sub_24D37B88C(a1, (uint64_t)v16, &v17, a4, a5);
  sub_24D305E40(a2);
  if (!v5)
  {
    *(void *)(*(void *)(v14 + OBJC_IVAR____TtC11FMFindingUI20FMMockFindingSession_mockLocalizer) + 24) = &off_26FF8B478;
    swift_unknownObjectWeakAssign();
  }
  return v14;
}

uint64_t FMMockFindingSession.init(findables:primaryPart:findingTechnology:groupedItemIdentifiers:arSession:)(uint64_t *a1, uint64_t a2, _WORD *a3, uint64_t a4, void *a5)
{
  v15[0] = *a3;
  unsigned __int16 v11 = v15[0];
  type metadata accessor for FMFindingMockLocalizer();
  swift_allocObject();
  swift_retain();
  uint64_t v12 = swift_bridgeObjectRetain();
  *(void *)(v5 + OBJC_IVAR____TtC11FMFindingUI20FMMockFindingSession_mockLocalizer) = sub_24D320CB4(v12, v15);
  swift_release();
  sub_24D305DD8(a2, (uint64_t)v15);
  unsigned __int16 v16 = v11;
  uint64_t v13 = sub_24D37B88C(a1, (uint64_t)v15, &v16, a4, a5);
  sub_24D305E40(a2);
  if (!v6)
  {
    *(void *)(*(void *)(v13 + OBJC_IVAR____TtC11FMFindingUI20FMMockFindingSession_mockLocalizer) + 24) = &off_26FF8B478;
    swift_unknownObjectWeakAssign();
  }
  return v13;
}

uint64_t sub_24D305C9C()
{
  return swift_release();
}

uint64_t FMMockFindingSession.deinit()
{
  uint64_t v0 = FMFindingSession.deinit();
  swift_release();
  return v0;
}

uint64_t FMMockFindingSession.__deallocating_deinit()
{
  FMFindingSession.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24D305D58(uint64_t *a1, uint64_t a2, __int16 *a3, uint64_t a4, void *a5)
{
  __int16 v10 = *a3;
  type metadata accessor for FMMockFindingSession();
  swift_allocObject();
  return FMMockFindingSession.init(findables:primaryPart:findingTechnology:groupedItemIdentifiers:arSession:)(a1, a2, &v10, a4, a5);
}

uint64_t sub_24D305DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269860AA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D305E40(uint64_t a1)
{
  uint64_t v2 = sub_24D2B7450(&qword_269860AA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D305EA0()
{
  return type metadata accessor for FMMockFindingSession();
}

uint64_t type metadata accessor for FMMockFindingSession()
{
  uint64_t result = qword_2698618B0;
  if (!qword_2698618B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24D305EF4()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for FMMockFindingSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMMockFindingSession);
}

uint64_t dispatch thunk of FMMockFindingSession.__allocating_init(findables:primaryPart:findingTechnology:groupedItemIdentifiers:arSession:)()
{
  return (*(uint64_t (**)(void))(v0 + 320))();
}

__n128 initializeBufferWithCopyOfBuffer for FMPFMetalBGRABackdropMixerParameters(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for FMPFMetalBGRABackdropMixerParameters()
{
  return &type metadata for FMPFMetalBGRABackdropMixerParameters;
}

uint64_t sub_24D305F98()
{
  uint64_t v1 = sub_24D39C990();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24D39C9D0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x270FA5388](v5);
  id v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalDevice];
  if (v10)
  {
    v14[0] = *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalProcessingQueue];
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v0;
    aBlock[4] = sub_24D307D18;
    aBlock[5] = v11;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24D32194C;
    aBlock[3] = &unk_26FF873D0;
    uint64_t v12 = _Block_copy(aBlock);
    swift_unknownObjectRetain_n();
    uint64_t v13 = v0;
    sub_24D39C9B0();
    v14[1] = MEMORY[0x263F8EE78];
    sub_24D307BD8((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    MEMORY[0x253324EE0](0, v9, v4, v12);
    _Block_release(v12);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    return swift_release();
  }
  return result;
}

void sub_24D306260(id metalDevice, char *a2)
{
  cacheOut[1] = *(CVMetalTextureCacheRef *)MEMORY[0x263EF8340];
  cacheOut[0] = 0;
  CVMetalTextureCacheCreate((CFAllocatorRef)*MEMORY[0x263EFFB08], 0, metalDevice, 0, cacheOut);
  CVMetalTextureCacheRef v4 = cacheOut[0];
  uint64_t v5 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache];
  *(CVMetalTextureCacheRef *)&a2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache] = cacheOut[0];
  uint64_t v6 = v4;

  id v7 = objc_msgSend(metalDevice, sel_newCommandQueue);
  *(void *)&a2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalCommandQueue] = v7;
  swift_unknownObjectRelease();
  type metadata accessor for FMPFView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v9 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  id v36 = 0;
  id v10 = objc_msgSend(metalDevice, sel_newDefaultLibraryWithBundle_error_, v9, &v36);
  id v11 = v36;
  if (v10)
  {
    uint64_t v12 = v10;
    swift_unknownObjectRetain();
    id v13 = v11;
    uint64_t v14 = (void *)sub_24D39CAC0();
    id v15 = objc_msgSend(v12, sel_newFunctionWithName_, v14);
    swift_unknownObjectRelease();

    if (v15)
    {
      id v36 = 0;
      id v16 = objc_msgSend(metalDevice, sel_newComputePipelineStateWithFunction_error_, v15, &v36);
      id v17 = v36;
      if (v16)
      {
        *(void *)&a2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerPipelineState] = v16;
        id v18 = v17;

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        id v21 = v36;
        id v22 = (void *)sub_24D39C710();

        swift_willThrow();
        if (qword_2698602A0 != -1) {
          swift_once();
        }
        uint64_t v23 = sub_24D39C950();
        sub_24D2B508C(v23, (uint64_t)qword_269869FA0);
        uint64_t v24 = a2;
        id v25 = v22;
        id v26 = v24;
        id v27 = v22;
        id v28 = sub_24D39C930();
        os_log_type_t v29 = sub_24D39CDF0();
        if (!os_log_type_enabled(v28, v29))
        {
          swift_unknownObjectRelease();

          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v30 = swift_slowAlloc();
        unint64_t v34 = (void *)swift_slowAlloc();
        uint64_t v35 = (void *)swift_slowAlloc();
        id v36 = v35;
        *(_DWORD *)uint64_t v30 = 138412546;
        uint64_t v31 = v26;
        sub_24D39D070();
        void *v34 = v26;

        *(_WORD *)(v30 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v32 = sub_24D39D520();
        sub_24D2B8328(v32, v33, (uint64_t *)&v36);
        sub_24D39D070();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_24D2B1000, v28, v29, "ðŸ§­ FMPFView%@: failed loading Metal Shader (%s)", (uint8_t *)v30, 0x16u);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v34, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x253326010](v35, -1, -1);
        MEMORY[0x253326010](v30, -1, -1);

        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    id v19 = v36;
    id v20 = (void *)sub_24D39C710();

    swift_willThrow();
  }
LABEL_12:
}

void sub_24D306720(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache;
  uint64_t v3 = *(__CVMetalTextureCache **)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache);
  if (v3)
  {
    CVMetalTextureCacheFlush(v3, 0);
    uint64_t v3 = *(__CVMetalTextureCache **)(a1 + v2);
  }
  *(void *)(a1 + v2) = 0;
}

id sub_24D306774(void *a1, double a2)
{
  textureOut[1] = *(CVMetalTextureRef *)MEMORY[0x263EF8340];
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalTextureCache);
  if (v3)
  {
    swift_retain();
    id v6 = v3;
    id v7 = sub_24D38B618(a1, a2);
    swift_release();
    if (v7)
    {
      size_t Width = CVPixelBufferGetWidth(v7);
      size_t Height = CVPixelBufferGetHeight(v7);
      textureOut[0] = 0;
      if (CVMetalTextureCacheCreateTextureFromImage((CFAllocatorRef)*MEMORY[0x263EFFB08], (CVMetalTextureCacheRef)v6, v7, 0, MTLPixelFormatBGRA8Unorm_sRGB, Width, Height, 0, textureOut))
      {
      }
      else if (textureOut[0])
      {
        uint64_t v12 = textureOut[0];
        id v10 = CVMetalTextureGetTexture(v12);

        return v10;
      }
    }
  }
  return 0;
}

void sub_24D3068C8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v62 = *MEMORY[0x263EF8340];
  CVMetalTextureCacheRef v4 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalDevice];
  if (v4)
  {
    uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalCommandQueue];
    if (v5)
    {
      if (*(void *)&v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerPipelineState])
      {
        id v52 = *(id *)&v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerPipelineState];
        if (v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalHasLoggedSetup])
        {
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
        }
        else
        {
          v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalHasLoggedSetup] = 1;
          uint64_t v13 = qword_2698602A0;
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v13 != -1) {
            swift_once();
          }
          uint64_t v14 = sub_24D39C950();
          sub_24D2B508C(v14, (uint64_t)qword_269869FA0);
          swift_unknownObjectRetain_n();
          id v15 = v2;
          id v16 = sub_24D39C930();
          os_log_type_t v17 = sub_24D39CDF0();
          if (os_log_type_enabled(v16, v17))
          {
            os_log_type_t type = v17;
            uint64_t v18 = swift_slowAlloc();
            uint64_t v47 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v18 = 138412802;
            os_log_t log = v16;
            id v19 = v15;
            sub_24D39D070();
            void *v47 = v15;

            *(_WORD *)(v18 + 12) = 2048;
            objc_msgSend(a1, sel_width);
            swift_unknownObjectRelease();
            sub_24D39D070();
            swift_unknownObjectRelease();
            *(_WORD *)(v18 + 22) = 2048;
            id v20 = objc_msgSend(a1, sel_height);
            swift_unknownObjectRelease();
            *(void *)&long long aBlock = v20;
            sub_24D39D070();
            swift_unknownObjectRelease();
            _os_log_impl(&dword_24D2B1000, log, type, "ðŸ§­ FMPFView%@: set up Metal Shader %ldx%ld in/out texture", (uint8_t *)v18, 0x20u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v47, -1, -1);
            MEMORY[0x253326010](v18, -1, -1);
          }
          else
          {

            swift_unknownObjectRelease_n();
          }
        }
        id v21 = objc_msgSend(self, sel_texture2DDescriptorWithPixelFormat_width_height_mipmapped_, objc_msgSend(a1, sel_pixelFormat), objc_msgSend(a1, sel_width), objc_msgSend(a1, sel_height), 1);
        objc_msgSend(v21, sel_setUsage_, 3);
        id v22 = objc_msgSend(v4, sel_newTextureWithDescriptor_, v21);
        if (!v22)
        {
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          return;
        }
        id v23 = v22;
        swift_unknownObjectRetain();
        id v24 = objc_msgSend(v5, sel_commandBuffer);
        if (v24)
        {
          id v25 = v24;
          id v26 = objc_msgSend(v5, sel_commandBuffer);
          if (v26)
          {
            id v27 = v26;
            uint64_t v28 = swift_allocObject();
            *(void *)(v28 + 16) = a2;
            *(void *)(v28 + 24) = v23;
            os_log_t v60 = sub_24D307C60;
            uint64_t v61 = v28;
            *(void *)&long long aBlock = MEMORY[0x263EF8330];
            *((void *)&aBlock + 1) = 1107296256;
            id v58 = sub_24D3072D0;
            uint64_t v59 = &unk_26FF87380;
            os_log_type_t v29 = _Block_copy(&aBlock);
            swift_unknownObjectRetain();
            id v30 = a2;
            uint64_t v31 = v25;
            swift_release();
            objc_msgSend(v27, sel_addCompletedHandler_, v29);
            _Block_release(v29);
            if (v3[OBJC_IVAR____TtC11FMFindingUI8FMPFView_experienceType] < 2u)
            {
              uint64_t v32 = *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropSigmaSpring];
              unint64_t v33 = (double *)(v32 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
              swift_beginAccess();
              double v34 = *v33 + *(double *)(v32 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
              if (vabdd_f64(v33[35] + *(double *)(v32 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v34) <= *(double *)(v32 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
                double v34 = v33[35] + *(double *)(v32 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
              }
              float v35 = v34;
              id v36 = objc_allocWithZone(MEMORY[0x263F13288]);
              *(float *)&double v37 = v35;
              id v38 = objc_msgSend(v36, sel_initWithDevice_sigma_, v4, v37);
              objc_msgSend(v38, sel_encodeToCommandBuffer_sourceTexture_destinationTexture_, v31, a1, v23);
              objc_msgSend(v31, sel_commit);
            }
            id v39 = objc_msgSend(v27, sel_computeCommandEncoder);
            if (!v39)
            {
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              goto LABEL_41;
            }
            id v40 = v39;
            long long v56 = *(_OWORD *)&v3[OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerParameters];
            objc_msgSend(v39, sel_setComputePipelineState_, v52);
            objc_msgSend(v40, sel_setBytes_length_atIndex_, &v56, 16, 0);
            objc_msgSend(v40, sel_setTexture_atIndex_, v23, 0);
            objc_msgSend(v40, sel_setTexture_atIndex_, v23, 1);
            double v41 = sqrt((double)(uint64_t)objc_msgSend(v52, sel_maxTotalThreadsPerThreadgroup));
            if ((~*(void *)&v41 & 0x7FF0000000000000) != 0)
            {
              if (v41 > -9.22337204e18)
              {
                if (v41 < 9.22337204e18)
                {
                  unint64_t v42 = (uint64_t)v41 + ((uint64_t)v41 < 0 ? 0xFuLL : 0);
                  sub_24D307CC8(v42 & 0xFFFFFFFFFFFFFFF0, v42 & 0xFFFFFFFFFFFFFFF0, &aBlock);
                  long long v43 = aBlock;
                  id v51 = v58;
                  id v44 = objc_msgSend(a1, sel_width);
                  if ((void)v43)
                  {
                    uint64_t v45 = (uint64_t)v44;
                    if (v44 == (id)0x8000000000000000 && (void)v43 == -1) {
                      goto LABEL_48;
                    }
                    uint64_t v46 = (uint64_t)objc_msgSend(a1, sel_height);
                    if (*((void *)&v43 + 1))
                    {
                      if (v46 != 0x8000000000000000 || *((void *)&v43 + 1) != -1)
                      {
                        sub_24D307CC8(v45 / (uint64_t)v43, v46 / *((void *)&v43 + 1), &aBlock);
                        long long v54 = v43;
                        uint64_t v55 = v51;
                        objc_msgSend(v40, sel_dispatchThreadgroups_threadsPerThreadgroup_, &aBlock, &v54);
                        objc_msgSend(v40, sel_endEncoding);
                        objc_msgSend(v27, sel_commit);
                        swift_unknownObjectRelease();
                        swift_unknownObjectRelease();
                        swift_unknownObjectRelease();
                        swift_unknownObjectRelease();
                        swift_unknownObjectRelease();
LABEL_41:
                        swift_unknownObjectRelease();

                        goto LABEL_42;
                      }
LABEL_49:
                      __break(1u);
                    }
LABEL_47:
                    __break(1u);
LABEL_48:
                    __break(1u);
                    goto LABEL_49;
                  }
LABEL_46:
                  __break(1u);
                  goto LABEL_47;
                }
LABEL_45:
                __break(1u);
                goto LABEL_46;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            goto LABEL_45;
          }
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

LABEL_42:
        swift_unknownObjectRelease_n();
        return;
      }
    }
  }
  if (qword_2698602A0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_24D39C950();
  sub_24D2B508C(v7, (uint64_t)qword_269869FA0);
  unint64_t v53 = v2;
  uint64_t v8 = sub_24D39C930();
  os_log_type_t v9 = sub_24D39CDF0();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    id v11 = (void *)swift_slowAlloc();
    *(_DWORD *)id v10 = 138412290;
    *(void *)&long long aBlock = v53;
    uint64_t v12 = v53;
    sub_24D39D070();
    *id v11 = v53;

    _os_log_impl(&dword_24D2B1000, v8, v9, "ðŸ§­ FMPFView%@: cannot use Metal Shader as it is not set up", v10, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v11, -1, -1);
    MEMORY[0x253326010](v10, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_24D3072D0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_24D307330(void *a1, void *a2)
{
  uint64_t v5 = sub_24D39C990();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24D39C9D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (CVPixelBufferGetPixelFormatType((CVPixelBufferRef)a1) == 875704422)
  {
    uint64_t v36 = v9;
    uint64_t v13 = a2;
    uint64_t v14 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView;
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView], sel_bounds);
    double v16 = v15;
    objc_msgSend(*(id *)&v2[v14], sel_bounds);
    double v18 = v16 / v17;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a1;
    *(void *)(v19 + 24) = v2;
    *(double *)(v19 + 32) = v18;
    *(void *)(v19 + 40) = v13;
    aBlock[4] = (uint64_t)sub_24D307BB0;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24D32194C;
    aBlock[3] = (uint64_t)&unk_26FF87330;
    id v20 = _Block_copy(aBlock);
    id v21 = a1;
    id v22 = v2;
    id v23 = v13;
    sub_24D39C9B0();
    uint64_t v38 = MEMORY[0x263F8EE78];
    sub_24D307BD8((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    MEMORY[0x253324EE0](0, v12, v8, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v36);
    swift_release();
  }
  else
  {
    sub_24D2B7450((uint64_t *)&unk_269861860);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_24D3A0220;
    *(void *)(v24 + 56) = type metadata accessor for FMPFView();
    *(void *)(v24 + 64) = sub_24D307BD8(&qword_269862920, (void (*)(uint64_t))type metadata accessor for FMPFView);
    *(void *)(v24 + 32) = v2;
    id v25 = v2;
    OSType PixelFormatType = CVPixelBufferGetPixelFormatType((CVPixelBufferRef)a1);
    uint64_t v27 = MEMORY[0x263F8E960];
    *(void *)(v24 + 96) = MEMORY[0x263F8E8F8];
    *(void *)(v24 + 104) = v27;
    *(_DWORD *)(v24 + 72) = PixelFormatType;
    uint64_t v28 = sub_24D39CB00();
    unint64_t v30 = v29;
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_24D39C950();
    sub_24D2B508C(v31, (uint64_t)qword_269869FA0);
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_24D39C930();
    os_log_type_t v33 = sub_24D39CDF0();
    if (os_log_type_enabled(v32, v33))
    {
      double v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      aBlock[0] = v35;
      *(_DWORD *)double v34 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_24D2B8328(v28, v30, aBlock);
      sub_24D39D070();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24D2B1000, v32, v33, "%s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253326010](v35, -1, -1);
      MEMORY[0x253326010](v34, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_24D30785C(__CVBuffer *a1, void *a2, void *a3, double a4)
{
  int64_t Width = CVPixelBufferGetWidth(a1);
  double v9 = 0.5;
  if (Width < 1920) {
    double v9 = 0.75;
  }
  id v10 = sub_24D306774(a1, v9);
  if (v10)
  {
    uint64_t v11 = v10;
    double v12 = (double)(uint64_t)objc_msgSend(v10, sel_width);
    double v13 = 1.0 / (v12 / (double)(uint64_t)objc_msgSend(v11, sel_height));
    BOOL v14 = v13 < a4;
    float v15 = v13 / a4;
    float v16 = a4 / v13;
    if (v14) {
      float v17 = v15;
    }
    else {
      float v17 = 1.0;
    }
    if (v14) {
      float v18 = 1.0;
    }
    else {
      float v18 = v16;
    }
    SCNMatrix4MakeRotation(&a, 1.5708, 0.0, 0.0, 1.0);
    b.m11 = v17;
    *(void *)&b.m14 = 0;
    *(void *)&b.m12 = 0;
    b.m22 = v18;
    *(void *)&b.m23 = 0;
    *(void *)&b.m31 = 0;
    b.m33 = 1.0;
    *(void *)&b.m42 = 0;
    *(void *)&b.m34 = 0;
    b.m44 = 1.0;
    SCNMatrix4Mult(&v26, &a, &b);
    SCNMatrix4 a = v26;
    objc_msgSend(a3, sel_setContentsTransform_, &a);
    sub_24D3068C8(v11, a3);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_24D39C950();
    sub_24D2B508C(v19, (uint64_t)qword_269869FA0);
    id v25 = a2;
    id v20 = sub_24D39C930();
    os_log_type_t v21 = sub_24D39CDF0();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      id v23 = (void *)swift_slowAlloc();
      *(_DWORD *)id v22 = 138412290;
      *(void *)&a.m11 = v25;
      id v24 = v25;
      sub_24D39D070();
      *id v23 = v25;

      _os_log_impl(&dword_24D2B1000, v20, v21, "ðŸ§­ FMPFView%@: cannot process camera frame as it could not be converted to BGRA", v22, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v23, -1, -1);
      MEMORY[0x253326010](v22, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_24D307B68()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_24D307BB0()
{
  sub_24D30785C(*(__CVBuffer **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 40), *(double *)(v0 + 32));
}

uint64_t sub_24D307BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D307BD0()
{
  return swift_release();
}

uint64_t sub_24D307BD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D307C20()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_24D307C60()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  objc_msgSend(v1, sel_setWrapT_, 3);
  objc_msgSend(v1, sel_setWrapS_, 3);
  return objc_msgSend(v1, sel_setContents_, v2);
}

uint64_t sub_24D307CC8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  a3[2] = 1;
  return result;
}

uint64_t sub_24D307CD8()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24D307D18()
{
  sub_24D306260(*(id *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_24D307D30()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton;
  uint64_t v3 = (char *)*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton];
  uint64_t v4 = sub_24D345D74(0xD00000000000001BLL, 0x800000024D3A7470, 0, 0);
  uint64_t v5 = (uint64_t *)&v3[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_legend];
  *uint64_t v5 = v4;
  v5[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label];
  if (v5[1])
  {
    id v8 = v7;
    swift_bridgeObjectRetain();
    double v9 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = v7;
    double v9 = 0;
  }
  objc_msgSend(v7, sel_setText_, v9);

  id v11 = objc_msgSend(self, sel_defaultDeviceWithMediaType_, *MEMORY[0x263EF9D48]);
  if (!v11) {
    goto LABEL_14;
  }
  double v12 = v11;
  if (!objc_msgSend(v11, sel_hasTorch))
  {

LABEL_14:
    SCNMatrix4 v26 = *(void **)&v1[v2];
    uint64_t v60 = type metadata accessor for FMFindingViewController();
    v59[0] = v1;
    uint64_t v27 = v1;
    id v28 = v26;
    uint64_t v29 = sub_24D345D74(0xD000000000000024, 0x800000024D3A7490, 0, 0);
    sub_24D398F08((uint64_t)v59, (uint64_t)sel_torchActionWithSender_, 64, v29, v30);
    swift_bridgeObjectRelease();

    sub_24D2BBFB4((uint64_t)v59, &qword_269861850);
    return 0;
  }
  id v13 = objc_msgSend(v12, sel_torchMode);
  BOOL v14 = *(char **)&v1[v2];
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_named];
  uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_named + 8];
  if (v13 != (id)1)
  {
    if (v16 && (v15 == 0xD000000000000013 && v16 == 0x800000024D3A74C0 || (sub_24D39D4B0() & 1) != 0))
    {
    }
    else
    {
      uint64_t v32 = self;
      os_log_type_t v33 = v14;
      id v34 = objc_msgSend(v32, sel_whiteColor);
      id v35 = objc_msgSend(v32, sel_whiteColor);
      id v36 = objc_msgSend(v35, sel_colorWithAlphaComponent_, 0.2);

      sub_24D3993B8(0xD000000000000013, 0x800000024D3A74C0, v34, v36);
      double v37 = *(void **)&v1[v2];
      uint64_t v60 = type metadata accessor for FMFindingViewController();
      v59[0] = v1;
      uint64_t v38 = v1;
      id v39 = v37;
      uint64_t v40 = sub_24D345D74(0xD000000000000024, 0x800000024D3A7490, 0, 0);
      sub_24D398F08((uint64_t)v59, (uint64_t)sel_torchActionWithSender_, 64, v40, v41);
      swift_bridgeObjectRelease();

      sub_24D2BBFB4((uint64_t)v59, &qword_269861850);
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_24D39C950();
      sub_24D2B508C(v42, (uint64_t)qword_269869FD0);
      long long v43 = sub_24D39C930();
      os_log_type_t v44 = sub_24D39CDF0();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v45 = 0;
        _os_log_impl(&dword_24D2B1000, v43, v44, "ðŸ§­ FMFindingViewCtrl: Updated torch button (light is off)", v45, 2u);
        MEMORY[0x253326010](v45, -1, -1);
      }
    }
    return 0;
  }
  if (!v16 || (v15 != 0xD000000000000012 || v16 != 0x800000024D3A74E0) && (sub_24D39D4B0() & 1) == 0)
  {
    if (*(unsigned char *)(*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView]
                  + OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown) == 1)
    {
      float v17 = self;
      float v18 = v14;
      id v19 = objc_msgSend(v17, sel_standardUserDefaults);
      objc_msgSend(v19, sel_fmpfGreenBackdropHue);
      double v21 = v20;
      objc_msgSend(v19, sel_fmpfGreenBackdropSaturation);
      double v23 = v22;
      objc_msgSend(v19, sel_fmpfGreenBackdropValue);
      id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithHue_saturation_brightness_alpha_, v21, v23, v24, 1.0);
    }
    else
    {
      uint64_t v46 = self;
      uint64_t v47 = v14;
      id v25 = objc_msgSend(v46, sel_systemBlackColor);
    }
    id v48 = objc_msgSend(self, sel_whiteColor);
    id v49 = objc_msgSend(v48, sel_colorWithAlphaComponent_, 0.9);

    sub_24D3993B8(0xD000000000000012, 0x800000024D3A74E0, v25, v49);
    unint64_t v50 = *(void **)&v1[v2];
    uint64_t v60 = type metadata accessor for FMFindingViewController();
    v59[0] = v1;
    id v51 = v50;
    id v52 = v1;
    uint64_t v53 = sub_24D345D74(0xD000000000000025, 0x800000024D3A7500, 0, 0);
    sub_24D398F08((uint64_t)v59, (uint64_t)sel_torchActionWithSender_, 64, v53, v54);
    swift_bridgeObjectRelease();

    sub_24D2BBFB4((uint64_t)v59, &qword_269861850);
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_24D39C950();
    sub_24D2B508C(v55, (uint64_t)qword_269869FD0);
    long long v56 = sub_24D39C930();
    os_log_type_t v57 = sub_24D39CDF0();
    if (os_log_type_enabled(v56, v57))
    {
      id v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v58 = 0;
      _os_log_impl(&dword_24D2B1000, v56, v57, "ðŸ§­ FMFindingViewCtrl: Updated torch button (light is on)", v58, 2u);
      MEMORY[0x253326010](v58, -1, -1);
    }
  }
  return 1;
}

void sub_24D308474(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24D39CA10();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  double v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_24D39C990();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_showTorchButtonWorkItem;
  uint64_t v14 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_showTorchButtonWorkItem];
  if (a1)
  {
    if (!v14)
    {
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v15;
      *(unsigned char *)(v16 + 24) = a2 & 1;
      id v35 = sub_24D30A390;
      uint64_t v36 = v16;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v32 = 1107296256;
      os_log_type_t v33 = sub_24D32194C;
      id v34 = &unk_26FF87538;
      _Block_copy(&aBlock);
      uint64_t v30 = MEMORY[0x263F8EE78];
      sub_24D30A39C((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
      swift_retain();
      sub_24D2B7450((uint64_t *)&unk_2698610D0);
      uint64_t v28 = v6;
      sub_24D2C8438();
      sub_24D39D0E0();
      sub_24D39CA40();
      swift_allocObject();
      uint64_t v17 = sub_24D39CA20();
      swift_release();
      swift_release();
      *(void *)&v2[v13] = v17;
      swift_retain();
      swift_release();
      sub_24D2C8328();
      float v18 = (void *)sub_24D39CE90();
      sub_24D39CA00();
      MEMORY[0x253324A90](v9, 1.0);
      id v19 = *(void (**)(char *, uint64_t))(v29 + 8);
      float v20 = v9;
      uint64_t v21 = v28;
      v19(v20, v28);
      sub_24D39CE60();
      swift_release();

      v19(v11, v21);
    }
  }
  else
  {
    if (v14)
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    *(void *)&v2[v13] = 0;
    swift_release();
    float v22 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton];
    if (a2)
    {
      double v23 = self;
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v22;
      *(unsigned char *)(v24 + 24) = 0;
      id v35 = sub_24D30A34C;
      uint64_t v36 = v24;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v32 = 1107296256;
      os_log_type_t v33 = sub_24D32194C;
      id v34 = &unk_26FF874E8;
      id v25 = _Block_copy(&aBlock);
      id v26 = v22;
      swift_release();
      objc_msgSend(v23, sel_animateWithDuration_animations_, v25, 0.5);
      _Block_release(v25);
    }
    else
    {
      objc_msgSend(v22, sel_setAlpha_, 0.0);
    }
    objc_msgSend(v3, sel_accessibilityShowViewHandler);
  }
}

uint64_t sub_24D3088EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_sleepPreventer);
  if (*(void *)(v2 + 16))
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)(v2 + 16) = 0;
  swift_release();
  id v3 = objc_msgSend(self, sel_sharedApplication);
  objc_msgSend(v3, sel_setIdleTimerDisabled_, 0);

  uint64_t v4 = (void (**)(uint64_t))(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler);
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *v4;
  if (*v4)
  {
    uint64_t v7 = swift_retain();
    v6(v7);
    return sub_24D2E44C8((uint64_t)v6);
  }
  return result;
}

void sub_24D308AD8(uint64_t a1)
{
  uint64_t v2 = sub_24D39C8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D304BCC(a1, (uint64_t)v35);
  if (!v35[3])
  {
    float v20 = &qword_269861850;
    uint64_t v21 = (long long *)v35;
LABEL_10:
    sub_24D2BBFB4((uint64_t)v21, v20);
    goto LABEL_11;
  }
  sub_24D2B7450(&qword_2698618C0);
  if (swift_dynamicCast())
  {
    long long v6 = v32;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(long long *__return_ptr, uint64_t, void))(*((void *)&v6 + 1) + 8))(&v32, ObjectType, *((void *)&v6 + 1));
    if (v33)
    {
      sub_24D2B6F04(&v32, (uint64_t)v35);
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_24D39C950();
      sub_24D2B508C(v8, (uint64_t)qword_269869FD0);
      sub_24D2B6CE8((uint64_t)v35, (uint64_t)&v32);
      double v9 = sub_24D39C930();
      os_log_type_t v10 = sub_24D39CDF0();
      int v11 = v10;
      if (os_log_type_enabled(v9, v10))
      {
        int v29 = v11;
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v31 = v28;
        *(_DWORD *)uint64_t v12 = 136315138;
        id v26 = v12 + 4;
        uint64_t v27 = v12;
        uint64_t v14 = v33;
        uint64_t v13 = v34;
        sub_24D2B8A34(&v32, v33);
        (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v14, v13);
        sub_24D30A39C((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
        uint64_t v15 = sub_24D39D490();
        unint64_t v17 = v16;
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        uint64_t v30 = sub_24D2B8328(v15, v17, &v31);
        sub_24D39D070();
        swift_bridgeObjectRelease();
        sub_24D2B6E58((uint64_t)&v32);
        float v18 = v27;
        _os_log_impl(&dword_24D2B1000, v9, (os_log_type_t)v29, "ðŸ§­ FMFindingViewCtrl: User selected %s through part picker.", v27, 0xCu);
        uint64_t v19 = v28;
        swift_arrayDestroy();
        MEMORY[0x253326010](v19, -1, -1);
        MEMORY[0x253326010](v18, -1, -1);
      }
      else
      {
        sub_24D2B6E58((uint64_t)&v32);
      }

      sub_24D37CAE0(v35);
      sub_24D2B6E58((uint64_t)v35);
      return;
    }

    float v20 = &qword_269860AA8;
    uint64_t v21 = &v32;
    goto LABEL_10;
  }
LABEL_11:
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_24D39C950();
  sub_24D2B508C(v22, (uint64_t)qword_269869FD0);
  double v23 = sub_24D39C930();
  os_log_type_t v24 = sub_24D39CDE0();
  if (os_log_type_enabled(v23, v24))
  {
    id v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v25 = 0;
    _os_log_impl(&dword_24D2B1000, v23, v24, "ðŸ§­ FMFindingViewCtrl: Unknown part selected.", v25, 2u);
    MEMORY[0x253326010](v25, -1, -1);
  }
}

void sub_24D309058(char a1, char a2)
{
  v27[1] = *(id *)MEMORY[0x263EF8340];
  id v4 = objc_msgSend(self, sel_defaultDeviceWithMediaType_, *MEMORY[0x263EF9D48]);
  if (!v4) {
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  if (!objc_msgSend(v4, sel_hasTorch))
  {

LABEL_8:
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_24D39C950();
    sub_24D2B508C(v7, (uint64_t)qword_269869FD0);
    osos_log_t log = sub_24D39C930();
    os_log_type_t v8 = sub_24D39CDF0();
    if (os_log_type_enabled(oslog, v8))
    {
      double v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v9 = 0;
      _os_log_impl(&dword_24D2B1000, oslog, v8, "ðŸ§­ FMFindingViewCtrl: Unable to set torch mode", v9, 2u);
      MEMORY[0x253326010](v9, -1, -1);
    }

    return;
  }
  v27[0] = 0;
  if (objc_msgSend(v5, sel_lockForConfiguration_, v27))
  {
    if (a2)
    {
      id v16 = v27[0];
      uint64_t v17 = objc_msgSend(v5, sel_torchMode) != (id)1;
    }
    else
    {
      if (a1 == 2)
      {
        id v6 = v27[0];
LABEL_33:
        objc_msgSend(v5, sel_unlockForConfiguration);
        sub_24D307D30();

        return;
      }
      uint64_t v17 = a1 & 1;
      id v18 = v27[0];
    }
    objc_msgSend(v5, sel_setTorchMode_, v17);
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_24D39C950();
    sub_24D2B508C(v19, (uint64_t)qword_269869FD0);
    float v20 = sub_24D39C930();
    os_log_type_t v21 = sub_24D39CDF0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      double v23 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      v27[0] = v23;
      if (v17) {
        uint64_t v24 = 28271;
      }
      else {
        uint64_t v24 = 6710895;
      }
      if (v17) {
        unint64_t v25 = 0xE200000000000000;
      }
      else {
        unint64_t v25 = 0xE300000000000000;
      }
      sub_24D2B8328(v24, v25, (uint64_t *)v27);
      sub_24D39D070();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D2B1000, v20, v21, "ðŸ§­ FMFindingViewCtrl: Did set torch mode %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253326010](v23, -1, -1);
      MEMORY[0x253326010](v22, -1, -1);
    }

    sub_24D3096CC(v17);
    goto LABEL_33;
  }
  id v10 = v27[0];
  int v11 = (void *)sub_24D39C710();

  swift_willThrow();
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_24D39C950();
  sub_24D2B508C(v12, (uint64_t)qword_269869FD0);
  uint64_t v13 = sub_24D39C930();
  os_log_type_t v14 = sub_24D39CDF0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_24D2B1000, v13, v14, "ðŸ§­ FMFindingViewCtrl: Failed setting torch mode", v15, 2u);
    MEMORY[0x253326010](v15, -1, -1);
  }
}

void sub_24D309560(uint64_t a1, char a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x253326120](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = *(void **)(v4 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton);
    if (a2)
    {
      uint64_t v7 = self;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v6;
      *(unsigned char *)(v8 + 24) = 1;
      aBlock[4] = sub_24D30A494;
      aBlock[5] = v8;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D32194C;
      aBlock[3] = &unk_26FF87588;
      double v9 = _Block_copy(aBlock);
      id v10 = v6;
      swift_release();
      objc_msgSend(v7, sel_animateWithDuration_animations_, v9, 0.5);
      _Block_release(v9);
    }
    else
    {
      objc_msgSend(v6, sel_setAlpha_, 1.0);
    }
    objc_msgSend(v5, sel_accessibilityShowViewHandler);
  }
}

uint64_t sub_24D3096CC(uint64_t a1)
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FD0);
  uint64_t v4 = v1;
  uint64_t v5 = sub_24D39C930();
  os_log_type_t v6 = sub_24D39CDF0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = v16;
    *(_DWORD *)uint64_t v7 = 138412546;
    double v9 = v4;
    sub_24D39D070();
    *uint64_t v8 = v4;

    *(_WORD *)(v7 + 12) = 2080;
    if (a1 == 1) {
      uint64_t v10 = 28271;
    }
    else {
      uint64_t v10 = 6710895;
    }
    if (a1 == 1) {
      unint64_t v11 = 0xE200000000000000;
    }
    else {
      unint64_t v11 = 0xE300000000000000;
    }
    sub_24D2B8328(v10, v11, &v17);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v5, v6, "ðŸ§­ FMR1RangingVC%@: Analytics: Torch button changed state to %s", (uint8_t *)v7, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253326010](v16, -1, -1);
    MEMORY[0x253326010](v7, -1, -1);
  }
  else
  {
  }
  uint64_t v12 = (void *)(*(void *)&v4[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
                 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer);
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  sub_24D2B8A34(v12, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 80))(a1, v13, v14);
}

void sub_24D309948(char a1)
{
  uint64_t v3 = *(unsigned char **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton);
  v3[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_isEnabled] = a1;
  uint64_t v4 = v3;
  objc_msgSend(v4, sel_setUserInteractionEnabled_, a1 & 1);
  uint64_t v5 = self;
  os_log_type_t v6 = *(void **)&v4[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_button];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  v11[4] = sub_24D309AD8;
  v11[5] = v7;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_24D32194C;
  v11[3] = &unk_26FF87420;
  uint64_t v8 = _Block_copy(v11);
  double v9 = v4;
  id v10 = v6;
  swift_release();
  objc_msgSend(v5, sel_transitionWithView_duration_options_animations_completion_, v10, 5242880, v8, 0, 0.25);
  _Block_release(v8);
}

uint64_t sub_24D309AA0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_24D309AD8()
{
  return sub_24D398EE0(*(void *)(v0 + 16));
}

uint64_t sub_24D309AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D309AF0()
{
  return swift_release();
}

uint64_t sub_24D309AF8()
{
  uint64_t v1 = v0;
  sub_24D309948(0);
  uint64_t v2 = (unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  uint64_t result = swift_beginAccess();
  if ((*v2 & 1) == 0)
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24D39C950();
    sub_24D2B508C(v4, (uint64_t)qword_269869FD0);
    uint64_t v5 = sub_24D39C930();
    os_log_type_t v6 = sub_24D39CDF0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_24D2B1000, v5, v6, "ðŸ§­ FMFindingViewCtrl: Asked to play ranging sound", v7, 2u);
      MEMORY[0x253326010](v7, -1, -1);
    }

    sub_24D30EC70();
    uint64_t v8 = (void (**)(uint64_t, void, void (*)(char), uint64_t))(v1
                                                                                   + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler);
    uint64_t result = swift_beginAccess();
    double v9 = *v8;
    if (*v8)
    {
      uint64_t v10 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_24D2C6D74((uint64_t)v9);
      swift_retain();
      v9(1, 0, sub_24D30A304, v10);
      sub_24D2E44C8((uint64_t)v9);
      return swift_release_n();
    }
  }
  return result;
}

void sub_24D309CCC()
{
  uint64_t v1 = sub_24D2B7450((uint64_t *)&unk_269861890);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24D39C780();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
      + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_24D30A20C(v11, (uint64_t)v10);
  uint64_t v12 = *((void *)v10 + 1);
  if (*(void *)(v12 + 16) && (unint64_t v13 = sub_24D3839F0((uint64_t)&v10[*(int *)(v8 + 36)]), (v14 & 1) != 0))
  {
    sub_24D2B6CE8(*(void *)(v12 + 56) + 40 * v13, (uint64_t)&v29);
    sub_24D2B6F04(&v29, (uint64_t)&v32);
    sub_24D30A270((uint64_t)v10);
    uint64_t v15 = v34;
    uint64_t v16 = v35;
    sub_24D2B8A34(&v32, v34);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v16 + 24))(&v29, v15, v16);
    uint64_t v17 = v30;
    if (v31 != 1)
    {
      sub_24D2D78EC((void *)v29, *((uint64_t *)&v29 + 1), v30, v31);
      sub_24D2B6E58((uint64_t)&v32);
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_24D39C950();
      sub_24D2B508C(v18, (uint64_t)qword_269869FD0);
      uint64_t v19 = sub_24D39C930();
      os_log_type_t v20 = sub_24D39CDE0();
      if (!os_log_type_enabled(v19, v20)) {
        goto LABEL_16;
      }
      os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v21 = 0;
      uint64_t v22 = "FMFindingViewCtrl: Can't open messages without a friend";
      goto LABEL_15;
    }

    sub_24D2B6E58((uint64_t)&v32);
    if (v17)
    {
      unint64_t v32 = 0;
      unint64_t v33 = 0xE000000000000000;
      sub_24D39D1D0();
      swift_bridgeObjectRelease();
      unint64_t v32 = 0xD000000000000012;
      unint64_t v33 = 0x800000024D3A75B0;
      sub_24D39CB70();
      swift_bridgeObjectRelease();
    }
    sub_24D39C770();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_24D2BBFB4((uint64_t)v3, (uint64_t *)&unk_269861890);
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_24D39C950();
      sub_24D2B508C(v23, (uint64_t)qword_269869FD0);
      uint64_t v19 = sub_24D39C930();
      os_log_type_t v20 = sub_24D39CDE0();
      if (!os_log_type_enabled(v19, v20)) {
        goto LABEL_16;
      }
      os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v21 = 0;
      uint64_t v22 = "FMFindingViewCtrl: Error opening settings. Invalid URL";
LABEL_15:
      _os_log_impl(&dword_24D2B1000, v19, v20, v22, v21, 2u);
      MEMORY[0x253326010](v21, -1, -1);
LABEL_16:

      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    id v24 = objc_msgSend(self, sel_defaultWorkspace);
    if (v24)
    {
      unint64_t v25 = v24;
      id v26 = (void *)sub_24D39C740();
      uint64_t v27 = (void *)sub_24D39CA70();
      objc_msgSend(v25, sel_openSensitiveURL_withOptions_, v26, v27);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_24D39D2B0();
    __break(1u);
  }
}

uint64_t sub_24D30A20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFindingSessionState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D30A270(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FMFindingSessionState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D30A2CC()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24D30A304(char a1)
{
  sub_24D340E8C(a1, v1);
}

uint64_t sub_24D30A30C()
{
  return sub_24D3088EC(*(void *)(v0 + 16));
}

uint64_t sub_24D30A314()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

id sub_24D30A34C()
{
  return sub_24D339C10(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_24D30A358()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 25, 7);
}

void sub_24D30A390()
{
  sub_24D309560(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_24D30A39C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D30A3E4()
{
  id v0 = objc_msgSend(self, sel_defaultDeviceWithMediaType_, *MEMORY[0x263EF9D48]);
  if (v0)
  {
    uint64_t v1 = v0;
    if (objc_msgSend(v0, sel_hasTorch) && objc_msgSend(v1, sel_isTorchModeSupported_, 0))
    {
      uint64_t v2 = 1;
      unsigned __int8 v3 = objc_msgSend(v1, sel_isTorchModeSupported_, 1);

      if (v3) {
        return v2;
      }
    }
    else
    {
    }
  }
  return 0;
}

uint64_t sub_24D30A4C0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24D30A4E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_24D30A510(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  unsigned __int8 v3 = (void **)(*a2 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *unsigned __int8 v3 = v2;
  id v5 = v2;
}

void *sub_24D30A574()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_24D30A5C4(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_24D30A618())()
{
  return j__swift_endAccess;
}

uint64_t sub_24D30A678()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  swift_beginAccess();
  return MEMORY[0x253326120](v1);
}

uint64_t sub_24D30A6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_24D30A734(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x253326120](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_24D30A7BC;
}

void sub_24D30A7BC(uint64_t a1, char a2)
{
  id v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id FMPrecisionConnectionManager.__allocating_init(findables:connectionContext:arSession:)(uint64_t a1, char *a2, void *a3)
{
  id v7 = objc_allocWithZone(v3);
  return FMPrecisionConnectionManager.init(findables:connectionContext:arSession:)(a1, a2, a3);
}

id FMPrecisionConnectionManager.init(findables:connectionContext:arSession:)(uint64_t a1, char *a2, void *a3)
{
  char v6 = *a2;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_subscriptions] = MEMORY[0x263F8EE78];
  id v7 = (void **)&v3[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession];
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = qword_2698602D0;
  uint64_t v9 = v3;
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_26986A030;
  *(void *)&v9[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_nearbyInteractionManager] = qword_26986A030;
  swift_beginAccess();
  uint64_t v11 = *v7;
  *id v7 = a3;
  id v12 = v10;
  id v13 = a3;

  LOBYTE(v28) = v6;
  id v14 = sub_24D2B7AB0(a1, (unsigned __int8 *)&v28);
  uint64_t v15 = qword_2698602A8;
  id v16 = v14;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_24D39C950();
  sub_24D2B508C(v17, (uint64_t)qword_269869FB8);
  id v18 = v16;
  uint64_t v19 = sub_24D39C930();
  os_log_type_t v20 = sub_24D39CDF0();
  if (os_log_type_enabled(v19, v20))
  {
    os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v28 = v22;
    *(_DWORD *)os_log_type_t v21 = 136315138;
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = MEMORY[0x253324C50](v23, MEMORY[0x263F8D310]);
    unint64_t v26 = v25;
    swift_bridgeObjectRelease();
    sub_24D2B8328(v24, v26, &v28);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v19, v20, "FMPrecisionConnectionManager: initialized for items: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v22, -1, -1);
    MEMORY[0x253326010](v21, -1, -1);
  }
  else
  {
  }
  return v18;
}

void sub_24D30AB60(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_24D30AB68()
{
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FB8);
  id v2 = v0;
  id v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = MEMORY[0x253324C50](v7, MEMORY[0x263F8D310]);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_24D2B8328(v8, v10, &v15);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v3, v4, "FMPrecisionConnectionManager: requesting connection for items: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v6, -1, -1);
    MEMORY[0x253326010](v5, -1, -1);
  }
  else
  {
  }
  uint64_t v11 = (char *)v2;
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_24D30BBB4(v12, (uint64_t)v11);
  swift_bridgeObjectRelease();

  *(void *)&v11[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_subscriptions] = v13;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D30AD90()
{
  if (qword_2698602A8 != -1) {
    goto LABEL_16;
  }
  while (1)
  {
    uint64_t v1 = sub_24D39C950();
    sub_24D2B508C(v1, (uint64_t)qword_269869FB8);
    id v2 = (char *)(id)v0;
    id v3 = sub_24D39C930();
    os_log_type_t v4 = sub_24D39CDF0();
    uint64_t v24 = v2;
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      aBlock[0] = v6;
      *(_DWORD *)uint64_t v5 = 136315138;
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = MEMORY[0x253324C50](v7, MEMORY[0x263F8D310]);
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      sub_24D2B8328(v8, v10, aBlock);
      sub_24D39D070();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D2B1000, v3, v4, "FMPrecisionConnectionManager: requesting disconnection for items: %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253326010](v6, -1, -1);
      MEMORY[0x253326010](v5, -1, -1);
    }
    else
    {
    }
    unint64_t v0 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_subscriptions];
    if (v0 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_24D39D2D0();
      uint64_t v11 = result;
      if (!result) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v11) {
        return swift_bridgeObjectRelease();
      }
    }
    if (v11 < 1) {
      break;
    }
    uint64_t v13 = 0;
    uint64_t v23 = OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_nearbyInteractionManager;
    while (1)
    {
      id v14 = (v0 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x253325220](v13, v0)
          : *(id *)(v0 + 8 * v13 + 32);
      uint64_t v15 = v14;
      id v16 = *(char **)&v2[v23];
      uint64_t v17 = *(NSObject **)&v16[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_serialQueue];
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v16;
      *(void *)(v18 + 24) = v15;
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_24D2D8DE4;
      *(void *)(v19 + 24) = v18;
      aBlock[4] = (uint64_t)sub_24D2C83A0;
      aBlock[5] = v19;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_24D30A4E8;
      aBlock[3] = (uint64_t)&unk_26FF87600;
      os_log_type_t v20 = _Block_copy(aBlock);
      os_log_type_t v21 = v16;
      id v22 = v15;
      swift_retain();
      swift_release();
      dispatch_sync(v17, v20);
      _Block_release(v20);
      LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      if (v20) {
        break;
      }
      ++v13;
      id v2 = v24;
      if (v11 == v13) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_16:
    swift_once();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D30B178(uint64_t a1)
{
  return sub_24D30B1B8(a1, "ðŸ§­ FMPrecisionConnectionManager: Updating location for local device", (void (*)(uint64_t))sub_24D2DF078);
}

uint64_t sub_24D30B198(uint64_t a1)
{
  return sub_24D30B1B8(a1, "ðŸ§­ FMPrecisionConnectionManager: Updating heading for local device", (void (*)(uint64_t))sub_24D2DF2A8);
}

uint64_t sub_24D30B1B8(uint64_t a1, const char *a2, void (*a3)(uint64_t))
{
  uint64_t v6 = v3;
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_24D39C950();
  sub_24D2B508C(v8, (uint64_t)qword_269869FD0);
  unint64_t v9 = sub_24D39C930();
  os_log_type_t v10 = sub_24D39CDD0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_24D2B1000, v9, v10, a2, v11, 2u);
    MEMORY[0x253326010](v11, -1, -1);
  }

  unint64_t v12 = *(void *)(v6 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_subscriptions);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_24D39D2D0();
    uint64_t v13 = result;
    if (!result) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v13) {
      goto LABEL_16;
    }
  }
  if (v13 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v13; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0) {
      id v16 = (char *)MEMORY[0x253325220](i, v12);
    }
    else {
      id v16 = (char *)*(id *)(v12 + 8 * i + 32);
    }
    uint64_t v17 = v16;
    uint64_t v18 = MEMORY[0x253326120](&v16[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context]);
    if (v18)
    {
      uint64_t v19 = (void *)v18;
      a3(a1);

      uint64_t v17 = v19;
    }
  }
LABEL_16:
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D30B394(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24D39C8A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_24D39C950();
  sub_24D2B508C(v10, (uint64_t)qword_269869FD0);
  sub_24D2B6CE8(a1, (uint64_t)v37);
  uint64_t v11 = sub_24D39C930();
  os_log_type_t v12 = sub_24D39CDD0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    int v33 = v13;
    id v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v36 = v32;
    *(_DWORD *)id v14 = 136315138;
    uint64_t v30 = v14 + 4;
    char v31 = v14;
    uint64_t v34 = v3;
    uint64_t v16 = v38;
    uint64_t v15 = v39;
    sub_24D2B8A34(v37, v38);
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v16, v15);
    sub_24D30BF74();
    uint64_t v17 = sub_24D39D490();
    unint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v35 = sub_24D2B8328(v17, v19, &v36);
    sub_24D39D070();
    uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    sub_24D2B6E58((uint64_t)v37);
    os_log_type_t v20 = v31;
    _os_log_impl(&dword_24D2B1000, v11, (os_log_type_t)v33, "ðŸ§­ FMPrecisionConnectionManager: Updating location for findable: %s", v31, 0xCu);
    uint64_t v21 = v32;
    swift_arrayDestroy();
    MEMORY[0x253326010](v21, -1, -1);
    MEMORY[0x253326010](v20, -1, -1);
  }
  else
  {
    sub_24D2B6E58((uint64_t)v37);
  }

  unint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_subscriptions);
  if (!(v22 >> 62))
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v23) {
      goto LABEL_8;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_24D39D2D0();
  uint64_t v23 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_8:
  if (v23 >= 1)
  {
    for (uint64_t i = 0; i != v23; ++i)
    {
      if ((v22 & 0xC000000000000001) != 0) {
        unint64_t v26 = (char *)MEMORY[0x253325220](i, v22);
      }
      else {
        unint64_t v26 = (char *)*(id *)(v22 + 8 * i + 32);
      }
      uint64_t v27 = v26;
      uint64_t v28 = MEMORY[0x253326120](&v26[OBJC_IVAR____TtC11FMFindingUI38FMNearbyInteractionManagerSubscription_context]);
      if (v28)
      {
        long long v29 = (void *)v28;
        sub_24D2DF6E8(a1, a2);

        uint64_t v27 = v29;
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D30B708()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  return sub_24D2C6E6C(v1);
}

id FMPrecisionConnectionManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPrecisionConnectionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_24D30B808(char a1)
{
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FB8);
  os_log_type_t v4 = sub_24D39C930();
  os_log_type_t v5 = sub_24D39CDF0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    v16[0] = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    unint64_t v8 = 0xE700000000000000;
    uint64_t v9 = 0x6E776F6E6B6E75;
    switch(a1)
    {
      case 1:
        unint64_t v8 = 0xE900000000000079;
        uint64_t v9 = 0x6461657220746F6ELL;
        break;
      case 2:
        unint64_t v8 = 0xE500000000000000;
        uint64_t v9 = 0x7964616572;
        break;
      case 3:
        unint64_t v8 = 0xE500000000000000;
        uint64_t v9 = 0x726F727265;
        break;
      case 4:
        uint64_t v9 = 0x666F206574617473;
        unint64_t v8 = 0xE900000000000066;
        break;
      default:
        break;
    }
    sub_24D2B8328(v9, v8, v16);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v4, v5, "FMPrecisionConnectionManager: entered state: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v7, -1, -1);
    MEMORY[0x253326010](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v10 = v1 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
    swift_beginAccess();
    if (MEMORY[0x253326120](v10))
    {
      uint64_t v11 = *(void *)(v10 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, BOOL, void, uint64_t, uint64_t))(v11 + 8))(v1, a1 == 2, 0, ObjectType, v11);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    int v13 = sub_24D39C930();
    os_log_type_t v14 = sub_24D39CDF0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_24D2B1000, v13, v14, "FMPrecisionConnectionManager: ignoring unknown state, waiting for a decision to be made before forwarding.", v15, 2u);
      MEMORY[0x253326010](v15, -1, -1);
    }
  }
}

uint64_t sub_24D30BB18(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x253326120](v3);
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, 0, a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24D30BBB4(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v33 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = a2;
    uint64_t v6 = a1 + 32;
    uint64_t v27 = OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_nearbyInteractionManager;
    uint64_t v26 = OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_connectionContext;
    uint64_t v7 = (void **)(a2 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession);
    v21[1] = a1;
    swift_bridgeObjectRetain();
    unint64_t v25 = v7;
    swift_beginAccess();
    uint64_t v24 = v31;
    uint64_t v8 = type metadata accessor for FMNearbyInteractionManagerSubscription();
    uint64_t v23 = v8;
    uint64_t v22 = v5;
    while (1)
    {
      uint64_t v28 = v4;
      long long v29 = v21;
      uint64_t v9 = v27;
      uint64_t v10 = *v25;
      MEMORY[0x270FA5388](v8);
      v21[-6] = v6;
      v21[-5] = v11;
      v21[-4] = v10;
      v21[-3] = v5;
      v21[-2] = &off_26FF87628;
      LOWORD(v21[-1]) = v12;
      id v13 = v11;
      id v14 = v10;
      sub_24D39CEA0();

      uint64_t v15 = *(char **)(v5 + v9);
      uint64_t v16 = *(NSObject **)&v15[OBJC_IVAR____TtC11FMFindingUI26FMNearbyInteractionManager_serialQueue];
      sub_24D2B6CE8(v6, (uint64_t)v32);
      uint64_t v17 = swift_allocObject();
      sub_24D2B6F04(v32, v17 + 16);
      *(void *)(v17 + 56) = v15;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_24D30C3A4;
      *(void *)(v18 + 24) = v17;
      _OWORD v31[2] = sub_24D30C3C0;
      v31[3] = v18;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      v31[0] = sub_24D30A4E8;
      v31[1] = &unk_26FF876C8;
      unint64_t v19 = _Block_copy(aBlock);
      os_log_type_t v20 = v15;
      swift_retain();
      swift_release();
      dispatch_sync(v16, v19);
      _Block_release(v19);
      LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      uint64_t result = swift_release();
      if (v16) {
        break;
      }
      MEMORY[0x253324C20](result);
      if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24D39CC40();
      }
      sub_24D39CC60();
      uint64_t v8 = sub_24D39CC30();
      v6 += 40;
      uint64_t v4 = v28 - 1;
      uint64_t v5 = v22;
      if (v28 == 1)
      {
        swift_bridgeObjectRelease();
        return v33;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24D30BF0C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D30BF4C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D30BF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D30BF6C()
{
  return swift_release();
}

unint64_t sub_24D30BF74()
{
  unint64_t result = qword_2698610F0;
  if (!qword_2698610F0)
  {
    sub_24D39C8A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698610F0);
  }
  return result;
}

uint64_t type metadata accessor for FMPrecisionConnectionManager()
{
  return self;
}

id sub_24D30BFF0@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_arSession);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_24D30C058@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x253326120](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_24D30C0B4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC11FMFindingUI28FMPrecisionConnectionManager_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FMPrecisionConnectionManagerDelegate.precisionConnectionManager(_:isAvailable:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for FMPrecisionConnectionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMPrecisionConnectionManager);
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.arSession.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.arSession.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.arSession.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.__allocating_init(findables:connectionContext:arSession:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.updateLocationForLocalDevice(location:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.updateHeadingForLocalDevice(heading:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of FMPrecisionConnectionManager.updateLocationForFindable(findable:location:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t sub_24D30C364()
{
  sub_24D2B6E58(v0 + 16);

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24D30C3A4()
{
  return sub_24D2E19AC((void *)(v0 + 16), *(char **)(v0 + 56));
}

uint64_t sub_24D30C3B0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_24D30C3CC(__int16 *a1)
{
  __int16 v2 = *a1;
  uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDotNode;
  id v4 = objc_allocWithZone((Class)type metadata accessor for FMPFSKBTRangeDotNode());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(_WORD *)&v5[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_findingTechnology] = v2;
  __int16 v17 = v2;
  id v6 = objc_allocWithZone((Class)type metadata accessor for FMPFSKBTLevelsNode());
  *(void *)&v5[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_levelRingsNode] = sub_24D38CEF8(&v17);
  uint64_t v7 = (objc_class *)type metadata accessor for FMPFSKBTRangeDiskNode();
  uint64_t v8 = (char *)objc_allocWithZone(v7);
  uint64_t v9 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_sizeSpring;
  uint64_t v10 = v8;
  *(void *)&v8[v9] = sub_24D32B080(0, 0, 0x3F50624DD2F1A9FCLL, 0);
  uint64_t v11 = OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_opacitySpring;
  *(void *)&v10[v11] = sub_24D32B3C8(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  *(_WORD *)&v10[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_findingTechnology] = v2;

  v16.receiver = v10;
  v16.super_class = v7;
  id v12 = objc_msgSendSuper2(&v16, sel_init);
  sub_24D34BED4();

  *(void *)&v5[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDiskNode] = v12;
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for FMPFSKBTRangingNode();
  id v13 = objc_msgSendSuper2(&v15, sel_init);
  sub_24D30C5F8();

  return v13;
}

void sub_24D30C5F8()
{
  uint64_t v1 = v0;
  __int16 v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDiskNode];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_levelRingsNode];
  id v4 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDotNode];
  uint64_t v5 = self;
  id v6 = self;
  id v7 = v2;
  id v8 = v3;
  id v22 = v4;
  objc_msgSend(v1, sel_addChild_, v7);
  sub_24D2B7450(&qword_269861330);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24D3A0210;
  id v10 = objc_msgSend(v6, sel_rangeWithConstantValue_, 0.0);
  id v11 = objc_msgSend(v5, sel_distance_toNode_, v10, v1);

  *(void *)(v9 + 32) = v11;
  sub_24D39CC30();
  sub_24D30CA5C();
  id v12 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setConstraints_, v12);

  id v13 = v8;
  objc_msgSend(v1, sel_addChild_, v13);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24D3A0210;
  id v15 = objc_msgSend(v6, sel_rangeWithConstantValue_, 0.0);
  id v16 = objc_msgSend(v5, sel_distance_toNode_, v15, v1);

  *(void *)(v14 + 32) = v16;
  sub_24D39CC30();
  __int16 v17 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setConstraints_, v17);

  id v18 = v22;
  objc_msgSend(v1, sel_addChild_, v18);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_24D3A0210;
  id v20 = objc_msgSend(v6, sel_rangeWithConstantValue_, 0.0);
  id v21 = objc_msgSend(v5, sel_distance_toNode_, v20, v1);

  *(void *)(v19 + 32) = v21;
  sub_24D39CC30();
  uint64_t v23 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setConstraints_, v23);
}

void sub_24D30C958()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_levelRingsNode);
}

id sub_24D30C9A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFSKBTRangingNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKBTRangingNode()
{
  return self;
}

unint64_t sub_24D30CA5C()
{
  unint64_t result = qword_269860EB8;
  if (!qword_269860EB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269860EB8);
  }
  return result;
}

id sub_24D30CA9C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMR1ProximityManager()), sel_init);
  qword_26986A028 = (uint64_t)result;
  return result;
}

id sub_24D30CAD0()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for FMNearbyInteractionManager());
  id result = sub_24D2E0DD8(0);
  qword_26986A030 = (uint64_t)result;
  return result;
}

uint64_t FMFindableObject.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFindableObject.findingIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMFindableObject() + 20);
  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for FMFindableObject()
{
  uint64_t result = qword_269861910;
  if (!qword_269861910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id FMFindableObject.findingProductType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMFindableObject() + 24);
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  char v7 = *(unsigned char *)(v3 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  return sub_24D30CC58(v4, v5, v6, v7);
}

id sub_24D30CC58(id result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1)
  {
    id v5 = result;
    swift_bridgeObjectRetain();
    return v5;
  }
  return result;
}

uint64_t FMFindableObject.findingTechnology.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for FMFindableObject();
  *a1 = *(_WORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t FMFindableObject.videoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FMFindableObject() + 32);
  uint64_t v4 = *(void *)(v3 + 112);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = *(void *)(v3 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(void *)(a1 + 40) = *(void *)(v3 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v3 + 48);
  *(void *)(a1 + 64) = *(void *)(v3 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(v3 + 72);
  *(void *)(a1 + 88) = *(void *)(v3 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v3 + 96);
  *(void *)(a1 + 112) = v4;
  return swift_bridgeObjectRetain();
}

id FMFindableObject.discoveryToken.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for FMFindableObject() + 36));
  return v1;
}

void *FMFindableObject.init(name:findingIdentifier:findingTechnology:findingProductType:videoInfo:discoveryToken:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  __int16 v55 = *a4;
  unint64_t v10 = *(void *)a5;
  uint64_t v11 = *(void *)(a5 + 8);
  uint64_t v12 = *(void *)(a5 + 16);
  int v13 = *(unsigned __int8 *)(a5 + 24);
  uint64_t v45 = *a6;
  uint64_t v46 = a6[1];
  unint64_t v70 = a6[2];
  uint64_t v47 = a6[3];
  uint64_t v48 = a6[4];
  unint64_t v71 = a6[5];
  uint64_t v49 = a6[6];
  uint64_t v50 = a6[7];
  unint64_t v72 = a6[8];
  uint64_t v60 = a6[9];
  uint64_t v62 = a6[10];
  unint64_t v64 = a6[11];
  uint64_t v14 = a6[14];
  uint64_t v66 = a6[12];
  uint64_t v68 = a6[13];
  *a8 = a1;
  a8[1] = a2;
  id v15 = (int *)type metadata accessor for FMFindableObject();
  id v16 = (char *)a8 + v15[5];
  uint64_t v17 = sub_24D39C8A0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v16;
  uint64_t v20 = a3;
  uint64_t v21 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v19, v20, v17);
  id v22 = (char *)a8 + v15[6];
  *(void *)id v22 = v10;
  *((void *)v22 + 1) = v11;
  uint64_t v44 = v11;
  uint64_t v51 = v12;
  *((void *)v22 + 2) = v12;
  v22[24] = v13;
  os_log_type_t v57 = v15;
  id v58 = a8;
  *(_WORD *)((char *)a8 + v15[7]) = v55;
  if (v14)
  {
    unint64_t v52 = HIDWORD(v70);
    unint64_t v53 = HIDWORD(v71);
    unint64_t v54 = HIDWORD(v72);
    int v23 = v64;
    unint64_t v56 = HIDWORD(v64);
    uint64_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v20, v21);
    uint64_t v26 = v66;
    uint64_t v25 = v68;
    uint64_t v27 = v62;
    uint64_t v28 = a7;
    uint64_t v29 = v60;
    uint64_t v31 = v49;
    uint64_t v30 = v50;
    uint64_t v33 = v47;
    uint64_t v32 = v48;
    uint64_t v35 = v45;
    uint64_t v34 = v46;
  }
  else
  {
    uint64_t v42 = (void *)v10;
    uint64_t v43 = v20;
    if (v13)
    {
      if (v13 == 1)
      {
        uint64_t v36 = qword_2698602E0;
        id v37 = (id)v10;
        swift_bridgeObjectRetain();
        if (v36 != -1) {
          swift_once();
        }
        uint64_t v38 = &xmmword_269861A18;
      }
      else if (v12 | v11 | v10)
      {
        if (qword_2698602D8 != -1) {
          swift_once();
        }
        uint64_t v38 = &xmmword_2698619A0;
      }
      else
      {
        if (qword_2698602E8 != -1) {
          swift_once();
        }
        uint64_t v38 = &xmmword_269861A90;
      }
    }
    else
    {
      if (qword_2698602F8 != -1) {
        swift_once();
      }
      uint64_t v38 = &xmmword_269861B80;
    }
    uint64_t v14 = *((void *)v38 + 14);
    uint64_t v67 = *((void *)v38 + 12);
    uint64_t v69 = *((void *)v38 + 13);
    LODWORD(v56) = *((_DWORD *)v38 + 23);
    int v65 = *((_DWORD *)v38 + 22);
    uint64_t v63 = *((void *)v38 + 10);
    uint64_t v61 = *((void *)v38 + 9);
    LODWORD(v54) = *((_DWORD *)v38 + 17);
    LODWORD(v72) = *((_DWORD *)v38 + 16);
    uint64_t v31 = *((void *)v38 + 6);
    uint64_t v30 = *((void *)v38 + 7);
    LODWORD(v53) = *((_DWORD *)v38 + 11);
    LODWORD(v71) = *((_DWORD *)v38 + 10);
    uint64_t v33 = *((void *)v38 + 3);
    uint64_t v32 = *((void *)v38 + 4);
    LODWORD(v52) = *((_DWORD *)v38 + 5);
    LODWORD(v70) = *((_DWORD *)v38 + 4);
    uint64_t v35 = *(void *)v38;
    uint64_t v34 = *((void *)v38 + 1);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    swift_bridgeObjectRetain();
    v39(v43, v21);
    char v40 = v13;
    int v23 = v65;
    uint64_t result = sub_24D2D78EC(v42, v44, v51, v40);
    uint64_t v28 = a7;
    uint64_t v29 = v61;
    uint64_t v27 = v63;
    uint64_t v26 = v67;
    uint64_t v25 = v69;
  }
  uint64_t v41 = (char *)v58 + v57[8];
  *(void *)uint64_t v41 = v35;
  *((void *)v41 + 1) = v34;
  *((_DWORD *)v41 + 4) = v70;
  *((_DWORD *)v41 + 5) = v52;
  *((void *)v41 + 3) = v33;
  *((void *)v41 + 4) = v32;
  *((_DWORD *)v41 + 10) = v71;
  *((_DWORD *)v41 + 11) = v53;
  *((void *)v41 + 6) = v31;
  *((void *)v41 + 7) = v30;
  *((_DWORD *)v41 + 16) = v72;
  *((_DWORD *)v41 + 17) = v54;
  *((void *)v41 + 9) = v29;
  *((void *)v41 + 10) = v27;
  *((_DWORD *)v41 + 22) = v23;
  *((_DWORD *)v41 + 23) = v56;
  *((void *)v41 + 12) = v26;
  *((void *)v41 + 13) = v25;
  *((void *)v41 + 14) = v14;
  *(void *)((char *)v58 + v57[9]) = v28;
  return result;
}

uint64_t FMFindableObject.supportedFindingTechnologies.getter()
{
  sub_24D2B7450(&qword_269861908);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24D3A0050;
  *(_WORD *)(inited + 32) = *(_WORD *)(v0 + *(int *)(type metadata accessor for FMFindableObject() + 28));
  uint64_t v2 = sub_24D30D3AC(inited);
  swift_setDeallocating();
  return v2;
}

id sub_24D30D20C(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_24D30D218()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24D30D248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_24D39C8A0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

id sub_24D30D2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 24);
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  char v7 = *(unsigned char *)(v3 + 24);
  *(unsigned char *)(a2 + 24) = v7;
  return sub_24D30CC58(v4, v5, v6, v7);
}

uint64_t sub_24D30D2DC(uint64_t a1)
{
  sub_24D2B7450(&qword_269861908);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24D3A0050;
  *(_WORD *)(inited + 32) = *(_WORD *)(v1 + *(int *)(a1 + 28));
  uint64_t v4 = sub_24D30D3AC(inited);
  swift_setDeallocating();
  return v4;
}

uint64_t sub_24D30D350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 32);
  uint64_t v4 = *(void *)(v3 + 112);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(void *)(a2 + 16) = *(void *)(v3 + 16);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(void *)(a2 + 40) = *(void *)(v3 + 40);
  *(_OWORD *)(a2 + 48) = *(_OWORD *)(v3 + 48);
  *(void *)(a2 + 64) = *(void *)(v3 + 64);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(v3 + 72);
  *(void *)(a2 + 88) = *(void *)(v3 + 88);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v3 + 96);
  *(void *)(a2 + 112) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24D30D3AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_24D2B7450(&qword_269861920);
    uint64_t v3 = sub_24D39D1C0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    while (1)
    {
      int v6 = *(__int16 *)(a1 + 32 + 2 * v4);
      sub_24D39D590();
      sub_24D39D5A0();
      if (v6 < 0)
      {
        sub_24D39D5B0();
        sub_24D39D5A0();
      }
      else
      {
        sub_24D39D5A0();
        sub_24D39D5B0();
      }
      uint64_t result = sub_24D39D5D0();
      uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v9 = result & v8;
      unint64_t v10 = (result & (unint64_t)v8) >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * v10);
      uint64_t v12 = 1 << (result & v8);
      uint64_t v13 = *(void *)(v3 + 48);
      if ((v12 & v11) != 0)
      {
        do
        {
          int v17 = *(__int16 *)(v13 + 2 * v9);
          if (v17 < 0)
          {
            if (v6 < 0)
            {
              BOOL v18 = (v17 & 1) == 0;
              int v19 = ((unsigned __int16)v17 ^ (unsigned __int16)v6) & 0x7F00;
              if ((v6 & 1) != v18 && v19 == 0) {
                goto LABEL_3;
              }
            }
          }
          else if ((v6 & 0x80000000) == 0 {
                 && v17 == v6
          }
                 && ((((v17 & 0x100) == 0) ^ ((unsigned __int16)(v6 & 0x100) >> 8)) & 1) != 0)
          {
            goto LABEL_3;
          }
          unint64_t v9 = (v9 + 1) & v8;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
        }
        while ((v11 & (1 << v9)) != 0);
      }
      *(void *)(v5 + 8 * v10) = v12 | v11;
      *(_WORD *)(v13 + 2 * v9) = v6;
      uint64_t v14 = *(void *)(v3 + 16);
      BOOL v15 = __OFADD__(v14, 1);
      uint64_t v16 = v14 + 1;
      if (v15) {
        break;
      }
      *(void *)(v3 + 16) = v16;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FMFindableObject(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24D39C8A0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    BOOL v15 = (char *)a2 + v13;
    id v16 = *(id *)v15;
    uint64_t v17 = *((void *)v15 + 1);
    uint64_t v18 = *((void *)v15 + 2);
    LOBYTE(v11) = v15[24];
    sub_24D30CC58(*(id *)v15, v17, v18, v11);
    *(void *)uint64_t v14 = v16;
    *((void *)v14 + 1) = v17;
    *((void *)v14 + 2) = v18;
    v14[24] = v11;
    uint64_t v19 = a3[8];
    *(_WORD *)((char *)v4 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
    uint64_t v20 = (char *)v4 + v19;
    uint64_t v21 = (char *)a2 + v19;
    *(void *)uint64_t v20 = *(void *)v21;
    *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
    *((void *)v20 + 3) = *((void *)v21 + 3);
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    *((void *)v20 + 6) = *((void *)v21 + 6);
    *(_OWORD *)(v20 + 56) = *(_OWORD *)(v21 + 56);
    *((void *)v20 + 9) = *((void *)v21 + 9);
    *((_OWORD *)v20 + 5) = *((_OWORD *)v21 + 5);
    uint64_t v22 = *((void *)v21 + 13);
    *((void *)v20 + 12) = *((void *)v21 + 12);
    *((void *)v20 + 13) = v22;
    *((void *)v20 + 14) = *((void *)v21 + 14);
    uint64_t v23 = a3[9];
    uint64_t v24 = *(void **)((char *)a2 + v23);
    *(uint64_t *)((char *)v4 + v23) = (uint64_t)v24;
    swift_bridgeObjectRetain();
    id v25 = v24;
  }
  return v4;
}

void destroy for FMFindableObject(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_24D39C8A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_24D2D78EC(*(void **)(a1 + a2[6]), *(void *)(a1 + a2[6] + 8), *(void *)(a1 + a2[6] + 16), *(unsigned char *)(a1 + a2[6] + 24));
  swift_bridgeObjectRelease();
  int v6 = *(void **)(a1 + a2[9]);
}

void *initializeWithCopy for FMFindableObject(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24D39C8A0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  id v15 = *(id *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  uint64_t v17 = *((void *)v14 + 2);
  LOBYTE(v10) = v14[24];
  sub_24D30CC58(*(id *)v14, v16, v17, v10);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  *((void *)v13 + 2) = v17;
  v13[24] = v10;
  uint64_t v18 = a3[8];
  *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  *((void *)v19 + 3) = *((void *)v20 + 3);
  *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
  *((void *)v19 + 6) = *((void *)v20 + 6);
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
  *((void *)v19 + 9) = *((void *)v20 + 9);
  *((_OWORD *)v19 + 5) = *((_OWORD *)v20 + 5);
  uint64_t v21 = *((void *)v20 + 13);
  *((void *)v19 + 12) = *((void *)v20 + 12);
  *((void *)v19 + 13) = v21;
  *((void *)v19 + 14) = *((void *)v20 + 14);
  uint64_t v22 = a3[9];
  uint64_t v23 = *(void **)((char *)a2 + v22);
  *(void *)((char *)a1 + v22) = v23;
  swift_bridgeObjectRetain();
  id v24 = v23;
  return a1;
}

void *assignWithCopy for FMFindableObject(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24D39C8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  id v13 = *(id *)v12;
  uint64_t v14 = *((void *)v12 + 1);
  uint64_t v15 = *((void *)v12 + 2);
  char v16 = v12[24];
  sub_24D30CC58(*(id *)v12, v14, v15, v16);
  uint64_t v17 = *(void **)v11;
  uint64_t v18 = *((void *)v11 + 1);
  uint64_t v19 = *((void *)v11 + 2);
  *(void *)uint64_t v11 = v13;
  *((void *)v11 + 1) = v14;
  *((void *)v11 + 2) = v15;
  char v20 = v11[24];
  v11[24] = v16;
  sub_24D2D78EC(v17, v18, v19, v20);
  *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
  uint64_t v21 = a3[8];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  *((_DWORD *)v22 + 4) = *((_DWORD *)v23 + 4);
  *((_DWORD *)v22 + 5) = *((_DWORD *)v23 + 5);
  *((void *)v22 + 3) = *((void *)v23 + 3);
  *((void *)v22 + 4) = *((void *)v23 + 4);
  *((_DWORD *)v22 + 10) = *((_DWORD *)v23 + 10);
  *((_DWORD *)v22 + 11) = *((_DWORD *)v23 + 11);
  *((void *)v22 + 6) = *((void *)v23 + 6);
  *((void *)v22 + 7) = *((void *)v23 + 7);
  *((_DWORD *)v22 + 16) = *((_DWORD *)v23 + 16);
  *((_DWORD *)v22 + 17) = *((_DWORD *)v23 + 17);
  *((void *)v22 + 9) = *((void *)v23 + 9);
  *((void *)v22 + 10) = *((void *)v23 + 10);
  *((_DWORD *)v22 + 22) = *((_DWORD *)v23 + 22);
  *((_DWORD *)v22 + 23) = *((_DWORD *)v23 + 23);
  *((void *)v22 + 12) = *((void *)v23 + 12);
  *((void *)v22 + 13) = *((void *)v23 + 13);
  *((void *)v22 + 14) = *((void *)v23 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  id v25 = *(void **)((char *)a2 + v24);
  uint64_t v26 = *(void **)((char *)a1 + v24);
  *(void *)((char *)a1 + v24) = v25;
  id v27 = v25;

  return a1;
}

_OWORD *initializeWithTake for FMFindableObject(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24D39C8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (_OWORD *)((char *)a1 + v10);
  id v13 = (_OWORD *)((char *)a2 + v10);
  *uint64_t v12 = *v13;
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)v13 + 9);
  *(_WORD *)((char *)a1 + v11) = *(_WORD *)((char *)a2 + v11);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  char v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)char v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  long long v19 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v19;
  *((void *)v16 + 14) = *((void *)v17 + 14);
  long long v20 = *((_OWORD *)v17 + 6);
  long long v21 = *((_OWORD *)v17 + 4);
  *((_OWORD *)v16 + 5) = *((_OWORD *)v17 + 5);
  *((_OWORD *)v16 + 6) = v20;
  *((_OWORD *)v16 + 4) = v21;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  return a1;
}

void *assignWithTake for FMFindableObject(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24D39C8A0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  id v13 = (char *)a2 + v11;
  uint64_t v14 = *((void *)v13 + 2);
  char v15 = v13[24];
  char v16 = *(void **)v12;
  uint64_t v17 = *((void *)v12 + 1);
  uint64_t v18 = *((void *)v12 + 2);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((void *)v12 + 2) = v14;
  char v19 = v12[24];
  v12[24] = v15;
  sub_24D2D78EC(v16, v17, v18, v19);
  uint64_t v20 = a3[8];
  *(_WORD *)((char *)a1 + a3[7]) = *(_WORD *)((char *)a2 + a3[7]);
  long long v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *(_OWORD *)long long v21 = *(_OWORD *)v22;
  *((void *)v21 + 2) = *((void *)v22 + 2);
  *(_OWORD *)(v21 + 24) = *(_OWORD *)(v22 + 24);
  *((void *)v21 + 5) = *((void *)v22 + 5);
  *((_OWORD *)v21 + 3) = *((_OWORD *)v22 + 3);
  *((void *)v21 + 8) = *((void *)v22 + 8);
  *(_OWORD *)(v21 + 72) = *(_OWORD *)(v22 + 72);
  *((void *)v21 + 11) = *((void *)v22 + 11);
  *((_OWORD *)v21 + 6) = *((_OWORD *)v22 + 6);
  *((void *)v21 + 14) = *((void *)v22 + 14);
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  uint64_t v24 = *(void **)((char *)a1 + v23);
  *(void *)((char *)a1 + v23) = *(void *)((char *)a2 + v23);

  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindableObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24D30DD40);
}

uint64_t sub_24D30DD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24D39C8A0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FMFindableObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D30DE04);
}

uint64_t sub_24D30DE04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24D39C8A0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24D30DEAC()
{
  uint64_t result = sub_24D39C8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24D30DF70(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_fontDescriptor);
  id v4 = objc_msgSend(v3, sel_fontDescriptorWithSymbolicTraits_, a1);

  if (v4)
  {
    id v5 = objc_msgSend(self, sel_fontWithDescriptor_size_, v4, 0.0);

    return (uint64_t)v5;
  }
  else
  {
    sub_24D39D1D0();
    sub_24D39CB70();
    type metadata accessor for SymbolicTraits(0);
    sub_24D39D290();
    uint64_t result = sub_24D39D2B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D30E0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_24D30E0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_24D30E0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t sub_24D30E0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_24D30E104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t sub_24D30E118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t sub_24D30E12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_24D30E140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_24D30E154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_24D30E168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_24D30E17C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, void))(a6 + 88))(a1, a2 & 1);
}

uint64_t sub_24D30E194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

unint64_t sub_24D30E1A8(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 7:
      unint64_t result = 0xD000000000000030;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D30E2A0()
{
  char v1 = *v0;
  sub_24D39D590();
  sub_24D30E1A8(v1);
  sub_24D39CB40();
  swift_bridgeObjectRelease();
  return sub_24D39D5D0();
}

uint64_t sub_24D30E304()
{
  sub_24D30E1A8(*v0);
  sub_24D39CB40();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D30E358()
{
  char v1 = *v0;
  sub_24D39D590();
  sub_24D30E1A8(v1);
  sub_24D39CB40();
  swift_bridgeObjectRelease();
  return sub_24D39D5D0();
}

uint64_t sub_24D30E3B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D30E73C();
  *a1 = result;
  return result;
}

unint64_t sub_24D30E3E8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24D30E1A8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24D30E414(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_24D30E1A8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_24D30E1A8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_24D39D4B0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t getEnumTagSinglePayload for FMPFViewState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMPFViewState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D30E5FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFViewState()
{
  return &type metadata for FMPFViewState;
}

uint64_t sub_24D30E634()
{
  return sub_24D39CBD0();
}

uint64_t sub_24D30E694()
{
  return sub_24D39CBB0();
}

unint64_t sub_24D30E6E8()
{
  unint64_t result = qword_269861928;
  if (!qword_269861928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861928);
  }
  return result;
}

uint64_t sub_24D30E73C()
{
  unint64_t v0 = sub_24D39D330();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA) {
    return 10;
  }
  else {
    return v0;
  }
}

unint64_t sub_24D30E788()
{
  unint64_t result = qword_269861930;
  if (!qword_269861930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861930);
  }
  return result;
}

void sub_24D30E7DC(uint64_t a1, void *a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate;
  if (MEMORY[0x253326120](v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate))
  {
    uint64_t v6 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v6 + 8))(a1, a2, ObjectType, v6);
    swift_unknownObjectRelease();
  }
  id v8 = objc_msgSend(a2, sel_capturedImage);
  id v9 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_scnSceneView), sel_scene);
  id v10 = objc_msgSend(v9, sel_background);

  sub_24D307330(v8, v10);
}

void sub_24D30EC70()
{
  uint64_t v1 = v0;
  uint64_t v23 = sub_24D39CA10();
  uint64_t v2 = *(void *)(v23 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v23);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_24D39C990();
  MEMORY[0x270FA5388](v8);
  id v9 = objc_msgSend(self, sel_sharedApplication);
  objc_msgSend(v9, sel_setIdleTimerDisabled_, 1);

  if (*(void *)(v1 + 16))
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = (uint64_t)sub_24D30F3D8;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_24D32194C;
  aBlock[3] = (uint64_t)&unk_26FF877F0;
  _Block_copy(aBlock);
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_24D2C83E0();
  swift_retain();
  sub_24D2B7450((uint64_t *)&unk_2698610D0);
  sub_24D2C8438();
  sub_24D39D0E0();
  sub_24D39CA40();
  swift_allocObject();
  uint64_t v11 = sub_24D39CA20();
  swift_release();
  swift_release();
  *(void *)(v1 + 16) = v11;
  swift_retain();
  swift_release();
  sub_24D2C8328();
  uint64_t v12 = (void *)sub_24D39CE90();
  sub_24D39CA00();
  MEMORY[0x253324A90](v5, 180.0);
  id v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v14 = v5;
  uint64_t v15 = v23;
  v13(v14, v23);
  sub_24D39CE60();

  v13(v7, v15);
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_24D39C950();
  sub_24D2B508C(v16, (uint64_t)qword_269869FD0);
  swift_retain_n();
  uint64_t v17 = sub_24D39C930();
  os_log_type_t v18 = sub_24D39CDF0();
  if (os_log_type_enabled(v17, v18))
  {
    char v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v1;
    aBlock[0] = v20;
    *(_DWORD *)char v19 = 136315138;
    type metadata accessor for FMFindingSleepPreventer();
    swift_retain();
    uint64_t v21 = sub_24D39CB20();
    uint64_t v24 = sub_24D2B8328(v21, v22, aBlock);
    sub_24D39D070();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v17, v18, "ðŸ§­ FMItemDetailContentViewController%s: disabling sleeping timer", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v20, -1, -1);
    MEMORY[0x253326010](v19, -1, -1);
    swift_release();
  }
  else
  {

    swift_release_n();
    swift_release();
  }
}

void sub_24D30F11C()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v0 = objc_msgSend(self, sel_sharedApplication);
    objc_msgSend(v0, sel_setIdleTimerDisabled_, 0);

    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_24D39C950();
    sub_24D2B508C(v1, (uint64_t)qword_269869FD0);
    swift_retain_n();
    uint64_t v2 = sub_24D39C930();
    os_log_type_t v3 = sub_24D39CDF0();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      uint64_t v8 = v5;
      *(_DWORD *)uint64_t v4 = 136315138;
      type metadata accessor for FMFindingSleepPreventer();
      swift_retain();
      uint64_t v6 = sub_24D39CB20();
      sub_24D2B8328(v6, v7, &v8);
      sub_24D39D070();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D2B1000, v2, v3, "ðŸ§­ FMItemDetailContentViewController%s: re-enabling sleeping timer", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253326010](v5, -1, -1);
      MEMORY[0x253326010](v4, -1, -1);
      swift_release();
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_24D30F344()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFindingSleepPreventer()
{
  return self;
}

uint64_t sub_24D30F3A0()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24D30F3D8()
{
}

uint64_t sub_24D30F3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D30F3F0()
{
  return swift_release();
}

BOOL FMFindingProductType.isPerson.getter()
{
  return *(unsigned char *)(v0 + 24) == 1;
}

BOOL FMFindingProductType.isAirPods.getter()
{
  return *(unsigned char *)(v0 + 24) == 0;
}

uint64_t sub_24D30F418()
{
  uint64_t v0 = sub_24D39CF70();
  int v2 = v1;
  unint64_t v19 = HIDWORD(v1);
  uint64_t v20 = v3;
  uint64_t v4 = sub_24D39CF70();
  int v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = HIDWORD(v5);
  uint64_t v10 = sub_24D39CF70();
  int v12 = v11;
  uint64_t v14 = v13;
  unint64_t v15 = HIDWORD(v11);
  uint64_t result = sub_24D39CF70();
  *(void *)&xmmword_2698619A0 = 60;
  *((void *)&xmmword_2698619A0 + 1) = v0;
  LODWORD(qword_2698619B0) = v2;
  HIDWORD(qword_2698619B0) = v19;
  qword_2698619B8 = v20;
  unk_2698619C0 = v4;
  LODWORD(qword_2698619C8) = v6;
  HIDWORD(qword_2698619C8) = v9;
  *(void *)&xmmword_2698619D0 = v8;
  *((void *)&xmmword_2698619D0 + 1) = v10;
  LODWORD(qword_2698619E0) = v12;
  HIDWORD(qword_2698619E0) = v15;
  qword_2698619E8 = v14;
  qword_2698619F0 = result;
  qword_2698619F8 = v17;
  *(void *)&xmmword_269861A00 = v18;
  *((void *)&xmmword_269861A00 + 1) = 0x6C75616665444D46;
  qword_269861A10 = 0xEE00646E756F4674;
  return result;
}

uint64_t FMDefaultFoundVideoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698602D8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269861A10;
  *(_OWORD *)a1 = xmmword_2698619A0;
  *(void *)(a1 + 16) = qword_2698619B0;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_2698619B8;
  *(void *)(a1 + 40) = qword_2698619C8;
  *(_OWORD *)(a1 + 48) = xmmword_2698619D0;
  *(void *)(a1 + 64) = qword_2698619E0;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&qword_2698619E8;
  *(void *)(a1 + 88) = qword_2698619F8;
  *(_OWORD *)(a1 + 96) = xmmword_269861A00;
  *(void *)(a1 + 112) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24D30F5D4()
{
  uint64_t v0 = sub_24D39CF70();
  int v2 = v1;
  unint64_t v19 = HIDWORD(v1);
  uint64_t v20 = v3;
  uint64_t v4 = sub_24D39CF70();
  int v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = HIDWORD(v5);
  uint64_t v10 = sub_24D39CF70();
  int v12 = v11;
  uint64_t v14 = v13;
  unint64_t v15 = HIDWORD(v11);
  uint64_t result = sub_24D39CF70();
  *(void *)&xmmword_269861A18 = 60;
  *((void *)&xmmword_269861A18 + 1) = v0;
  LODWORD(qword_269861A28) = v2;
  HIDWORD(qword_269861A28) = v19;
  qword_269861A30 = v20;
  unk_269861A38 = v4;
  LODWORD(qword_269861A40) = v6;
  HIDWORD(qword_269861A40) = v9;
  *(void *)&xmmword_269861A48 = v8;
  *((void *)&xmmword_269861A48 + 1) = v10;
  LODWORD(qword_269861A58) = v12;
  HIDWORD(qword_269861A58) = v15;
  qword_269861A60 = v14;
  qword_269861A68 = result;
  qword_269861A70 = v17;
  *(void *)&xmmword_269861A78 = v18;
  *((void *)&xmmword_269861A78 + 1) = 0xD000000000000018;
  qword_269861A88 = 0x800000024D3A77D0;
  return result;
}

uint64_t FMDefaultFoundVideoInfoRedStripe.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698602E0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269861A88;
  *(_OWORD *)a1 = xmmword_269861A18;
  *(void *)(a1 + 16) = qword_269861A28;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_269861A30;
  *(void *)(a1 + 40) = qword_269861A40;
  *(_OWORD *)(a1 + 48) = xmmword_269861A48;
  *(void *)(a1 + 64) = qword_269861A58;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&qword_269861A60;
  *(void *)(a1 + 88) = qword_269861A70;
  *(_OWORD *)(a1 + 96) = xmmword_269861A78;
  *(void *)(a1 + 112) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24D30F788()
{
  uint64_t v0 = sub_24D39CF70();
  int v2 = v1;
  unint64_t v19 = HIDWORD(v1);
  uint64_t v20 = v3;
  uint64_t v4 = sub_24D39CF70();
  int v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = HIDWORD(v5);
  uint64_t v10 = sub_24D39CF70();
  int v12 = v11;
  uint64_t v14 = v13;
  unint64_t v15 = HIDWORD(v11);
  uint64_t result = sub_24D39CF70();
  *(void *)&xmmword_269861A90 = 60;
  *((void *)&xmmword_269861A90 + 1) = v0;
  LODWORD(qword_269861AA0) = v2;
  HIDWORD(qword_269861AA0) = v19;
  qword_269861AA8 = v20;
  unk_269861AB0 = v4;
  LODWORD(qword_269861AB8) = v6;
  HIDWORD(qword_269861AB8) = v9;
  *(void *)&xmmword_269861AC0 = v8;
  *((void *)&xmmword_269861AC0 + 1) = v10;
  LODWORD(qword_269861AD0) = v12;
  HIDWORD(qword_269861AD0) = v15;
  qword_269861AD8 = v14;
  qword_269861AE0 = result;
  qword_269861AE8 = v17;
  *(void *)&xmmword_269861AF0 = v18;
  *((void *)&xmmword_269861AF0 + 1) = 0x6E756F4631524D46;
  qword_269861B00 = 0xEE00393833422D64;
  return result;
}

uint64_t FMR1AirTagDefaultVideoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698602E8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269861B00;
  *(_OWORD *)a1 = xmmword_269861A90;
  *(void *)(a1 + 16) = qword_269861AA0;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_269861AA8;
  *(void *)(a1 + 40) = qword_269861AB8;
  *(_OWORD *)(a1 + 48) = xmmword_269861AC0;
  *(void *)(a1 + 64) = qword_269861AD0;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&qword_269861AD8;
  *(void *)(a1 + 88) = qword_269861AE8;
  *(_OWORD *)(a1 + 96) = xmmword_269861AF0;
  *(void *)(a1 + 112) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24D30F944()
{
  uint64_t v0 = sub_24D39CF70();
  int v2 = v1;
  unint64_t v19 = HIDWORD(v1);
  uint64_t v20 = v3;
  uint64_t v4 = sub_24D39CF70();
  int v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = HIDWORD(v5);
  uint64_t v10 = sub_24D39CF70();
  int v12 = v11;
  uint64_t v14 = v13;
  unint64_t v15 = HIDWORD(v11);
  uint64_t result = sub_24D39CF70();
  *(void *)&xmmword_269861B08 = 60;
  *((void *)&xmmword_269861B08 + 1) = v0;
  LODWORD(qword_269861B18) = v2;
  HIDWORD(qword_269861B18) = v19;
  qword_269861B20 = v20;
  unk_269861B28 = v4;
  LODWORD(qword_269861B30) = v6;
  HIDWORD(qword_269861B30) = v9;
  *(void *)&xmmword_269861B38 = v8;
  *((void *)&xmmword_269861B38 + 1) = v10;
  LODWORD(qword_269861B48) = v12;
  HIDWORD(qword_269861B48) = v15;
  qword_269861B50 = v14;
  unk_269861B58 = result;
  qword_269861B60 = v17;
  *(void *)&xmmword_269861B68 = v18;
  *((void *)&xmmword_269861B68 + 1) = 0xD000000000000012;
  qword_269861B78 = 0x800000024D3A77B0;
  return result;
}

uint64_t FMR1AirTagZeusVideoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698602F0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269861B78;
  *(_OWORD *)a1 = xmmword_269861B08;
  *(void *)(a1 + 16) = qword_269861B18;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_269861B20;
  *(void *)(a1 + 40) = qword_269861B30;
  *(_OWORD *)(a1 + 48) = xmmword_269861B38;
  *(void *)(a1 + 64) = qword_269861B48;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&qword_269861B50;
  *(void *)(a1 + 88) = qword_269861B60;
  *(_OWORD *)(a1 + 96) = xmmword_269861B68;
  *(void *)(a1 + 112) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24D30FAF8()
{
  uint64_t v0 = sub_24D39CF70();
  int v2 = v1;
  unint64_t v19 = HIDWORD(v1);
  uint64_t v20 = v3;
  uint64_t v4 = sub_24D39CF70();
  int v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = HIDWORD(v5);
  uint64_t v10 = sub_24D39CF70();
  int v12 = v11;
  uint64_t v14 = v13;
  unint64_t v15 = HIDWORD(v11);
  uint64_t result = sub_24D39CF70();
  *(void *)&xmmword_269861B80 = 60;
  *((void *)&xmmword_269861B80 + 1) = v0;
  LODWORD(qword_269861B90) = v2;
  HIDWORD(qword_269861B90) = v19;
  qword_269861B98 = v20;
  unk_269861BA0 = v4;
  LODWORD(qword_269861BA8) = v6;
  HIDWORD(qword_269861BA8) = v9;
  *(void *)&xmmword_269861BB0 = v8;
  *((void *)&xmmword_269861BB0 + 1) = v10;
  LODWORD(qword_269861BC0) = v12;
  HIDWORD(qword_269861BC0) = v15;
  qword_269861BC8 = v14;
  qword_269861BD0 = result;
  qword_269861BD8 = v17;
  *(void *)&xmmword_269861BE0 = v18;
  *((void *)&xmmword_269861BE0 + 1) = 0x6E756F4631524D46;
  qword_269861BF0 = 0xEE00373236422D64;
  return result;
}

uint64_t FMR1AirPodsVideoInfo.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698602F8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269861BF0;
  *(_OWORD *)a1 = xmmword_269861B80;
  *(void *)(a1 + 16) = qword_269861B90;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_269861B98;
  *(void *)(a1 + 40) = qword_269861BA8;
  *(_OWORD *)(a1 + 48) = xmmword_269861BB0;
  *(void *)(a1 + 64) = qword_269861BC0;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)&qword_269861BC8;
  *(void *)(a1 + 88) = qword_269861BD8;
  *(_OWORD *)(a1 + 96) = xmmword_269861BE0;
  *(void *)(a1 + 112) = v2;
  return swift_bridgeObjectRetain();
}

BOOL FMFindingProductType.isDevice.getter()
{
  return *(unsigned __int8 *)(v0 + 24) >= 2u && (*(void *)(v0 + 8) | *(void *)(v0 + 16) | *(void *)v0) != 0;
}

BOOL static FMFindingPartType.< infix(_:_:)(char *a1, char *a2)
{
  return flt_24D3A1F4C[*a1] < flt_24D3A1F4C[*a2];
}

BOOL static FMFindingPartType.isEqualSortOrder(lhs:rhs:)(char *a1, char *a2)
{
  return flt_24D3A1F4C[*a1] == flt_24D3A1F4C[*a2];
}

FMFindingUI::FMFindingPartType_optional __swiftcall FMFindingPartType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24D39D330();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t FMFindingPartType.rawValue.getter()
{
  uint64_t result = 0x6F6C61646E617473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702060387;
      break;
    case 2:
      uint64_t result = 0x6475427466656CLL;
      break;
    case 3:
      uint64_t result = 0x6475427468676972;
      break;
    case 4:
      uint64_t result = 0x636972656E6567;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D30FE30(unsigned __int8 *a1, char *a2)
{
  return sub_24D37A684(*a1, *a2);
}

uint64_t sub_24D30FE3C()
{
  return sub_24D39D5D0();
}

uint64_t sub_24D30FF30()
{
  sub_24D39CB40();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D31000C()
{
  return sub_24D39D5D0();
}

FMFindingUI::FMFindingPartType_optional sub_24D3100FC(Swift::String *a1)
{
  return FMFindingPartType.init(rawValue:)(*a1);
}

void sub_24D310108(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA0000000000656ELL;
  uint64_t v3 = 0x6F6C61646E617473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1702060387;
      goto LABEL_3;
    case 2:
      *a1 = 0x6475427466656CLL;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x6475427468676972;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0x636972656E6567;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_24D3101C0()
{
  return sub_24D39CBD0();
}

uint64_t sub_24D310220()
{
  return sub_24D39CBB0();
}

BOOL sub_24D310270(char *a1, char *a2)
{
  return flt_24D3A1F4C[*a1] < flt_24D3A1F4C[*a2];
}

BOOL sub_24D310294(char *a1, char *a2)
{
  return flt_24D3A1F4C[*a2] >= flt_24D3A1F4C[*a1];
}

BOOL sub_24D3102B8(char *a1, char *a2)
{
  return flt_24D3A1F4C[*a1] >= flt_24D3A1F4C[*a2];
}

BOOL sub_24D3102DC(char *a1, char *a2)
{
  return flt_24D3A1F4C[*a2] < flt_24D3A1F4C[*a1];
}

uint64_t FMFindingPartInfo.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FMFindingPartInfo.symbol.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void FMFindingPartInfo.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

void __swiftcall FMFindingPartInfo.init(name:symbol:type:)(FMFindingUI::FMFindingPartInfo *__return_ptr retstr, Swift::String name, Swift::String_optional symbol, FMFindingUI::FMFindingPartType type)
{
  FMFindingUI::FMFindingPartType v4 = *(unsigned char *)type;
  retstr->name = name;
  retstr->symbol = symbol;
  retstr->os_log_type_t type = v4;
}

uint64_t FMFindingPartInfo.debugDescription.getter()
{
  return 0x203A656D614ELL;
}

uint64_t sub_24D310548()
{
  uint64_t v1 = 0x6C6F626D7973;
  if (*v0 != 1) {
    uint64_t v1 = 1701869940;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_24D310590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D31155C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24D3105B8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24D3105C4(uint64_t a1)
{
  unint64_t v2 = sub_24D310B9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D310600(uint64_t a1)
{
  unint64_t v2 = sub_24D310B9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FMFindingPartInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_24D2B7450(&qword_269861BF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  _OWORD v11[2] = v7;
  int v12 = *(unsigned __int8 *)(v1 + 32);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D310B9C();
  sub_24D39D5F0();
  char v16 = 0;
  uint64_t v8 = v11[3];
  sub_24D39D400();
  if (!v8)
  {
    char v9 = v12;
    char v15 = 1;
    sub_24D39D3F0();
    char v14 = v9;
    char v13 = 2;
    sub_24D310BF0();
    sub_24D39D450();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FMFindingPartInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24D2B7450(&qword_269861C10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D310B9C();
  sub_24D39D5E0();
  if (v2) {
    return sub_24D2B6E58((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_24D39D370();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24D39D360();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  char v22 = 2;
  sub_24D310C44();
  swift_bridgeObjectRetain();
  uint64_t v20 = v14;
  sub_24D39D3C0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v15 = v23;
  uint64_t v16 = v20;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v16;
  *(unsigned char *)(a2 + 32) = v15;
  sub_24D2B6E58((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D310A98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FMFindingPartInfo.init(from:)(a1, a2);
}

uint64_t sub_24D310AB0(void *a1)
{
  return FMFindingPartInfo.encode(to:)(a1);
}

uint64_t _s11FMFindingUI0A8PartInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v8 && (sub_24D39D4B0() & 1) == 0) {
    return 0;
  }
  if (v3)
  {
    if (v5)
    {
      BOOL v9 = v2 == v6 && v3 == v5;
      if (v9 || (sub_24D39D4B0() & 1) != 0) {
        goto LABEL_13;
      }
    }
    return 0;
  }
  if (v5) {
    return 0;
  }
LABEL_13:
  return sub_24D37A684(v4, v7);
}

unint64_t sub_24D310B9C()
{
  unint64_t result = qword_269861C00;
  if (!qword_269861C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861C00);
  }
  return result;
}

unint64_t sub_24D310BF0()
{
  unint64_t result = qword_269861C08;
  if (!qword_269861C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861C08);
  }
  return result;
}

unint64_t sub_24D310C44()
{
  unint64_t result = qword_269861C18;
  if (!qword_269861C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861C18);
  }
  return result;
}

unint64_t sub_24D310C9C()
{
  unint64_t result = qword_269861C20;
  if (!qword_269861C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861C20);
  }
  return result;
}

uint64_t dispatch thunk of FMFindable.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FMFindable.findingIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FMFindable.findingProductType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FMFindable.supportedFindingTechnologies.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FMFindable.videoInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FMEnhancedFindable.findingProductUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FMEnhancedFindable.findingPartInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FMEnhancedFindable.findingPartType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FMNIFindable.discoveryToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void *destroy for FMFindingProductType(uint64_t a1)
{
  return sub_24D2D78EC(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for FMFindingProductType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_24D30CC58(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FMFindingProductType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_24D30CC58(*(id *)a2, v4, v5, v6);
  char v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_24D2D78EC(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for FMFindingProductType(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMFindingProductType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_24D2D78EC(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingProductType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingProductType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24D310F7C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24D310F94(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingProductType()
{
  return &type metadata for FMFindingProductType;
}

unsigned char *storeEnumTagSinglePayload for FMFindingPartType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D31108CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingPartType()
{
  return &type metadata for FMFindingPartType;
}

uint64_t destroy for FMFindingPartInfo()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMFindingPartInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFindingPartInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 initializeWithTake for FMFindingPartInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FMFindingPartInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingPartInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingPartInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingPartInfo()
{
  return &type metadata for FMFindingPartInfo;
}

uint64_t getEnumTagSinglePayload for FMExperienceType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FMFindingPartInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D31141CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingPartInfo.CodingKeys()
{
  return &type metadata for FMFindingPartInfo.CodingKeys;
}

unint64_t sub_24D311458()
{
  unint64_t result = qword_269861C28;
  if (!qword_269861C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861C28);
  }
  return result;
}

unint64_t sub_24D3114B0()
{
  unint64_t result = qword_269861C30;
  if (!qword_269861C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861C30);
  }
  return result;
}

unint64_t sub_24D311508()
{
  unint64_t result = qword_269861C38;
  if (!qword_269861C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861C38);
  }
  return result;
}

uint64_t sub_24D31155C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24D39D4B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_24D31168C()
{
  unint64_t result = qword_269861C40;
  if (!qword_269861C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861C40);
  }
  return result;
}

uint64_t sub_24D3116E0(double a1)
{
  uint64_t v3 = sub_24D39C990();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24D39C9D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate];
  if (MEMORY[0x253326120](&v1[OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate]))
  {
    uint64_t v12 = *((void *)v11 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 72))(v1, ObjectType, v12, a1);
    swift_unknownObjectRelease();
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  *(double *)(v14 + 24) = a1;
  char v15 = self;
  uint64_t v16 = v1;
  if (objc_msgSend(v15, sel_isMainThread))
  {
    sub_24D311A6C((uint64_t)v16, a1);
    return swift_release();
  }
  else
  {
    sub_24D2C8328();
    uint64_t v22 = sub_24D39CE90();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_24D311E04;
    *(void *)(v18 + 24) = v14;
    aBlock[4] = sub_24D2C83A0;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_24D32194C;
    aBlock[3] = &unk_26FF87B18;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_24D39C9B0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_24D2C83E0();
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    uint64_t v20 = (void *)v22;
    MEMORY[0x253324EE0](0, v10, v6, v19);
    _Block_release(v19);
    swift_release();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

float sub_24D311A6C(uint64_t a1, double a2)
{
  uint64_t v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSprings);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSprings);
  sub_24D2D9F4C(a2);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  uint64_t v6 = v4[1];
  sub_24D2D9F4C(a2);
  *(unsigned char *)(v6 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  uint64_t v7 = v4[2];
  sub_24D2D9F4C(a2);
  *(unsigned char *)(v7 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropSigmaSpring);
  sub_24D2D9F4C(a2);
  *(unsigned char *)(v8 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  uint64_t v9 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropAlphaSpring;
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropAlphaSpring);
  sub_24D2D9F4C(a2);
  *(unsigned char *)(v10 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  uint64_t v11 = *v4;
  uint64_t v12 = (double *)(*v4 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  if (vabdd_f64(v12[35] + *(double *)(v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v12 + *(double *)(v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v11+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))double v13 = *v12 + *(double *)(v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o); {
  else
  }
    double v13 = v12[35] + *(double *)(v11 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  uint64_t v14 = v4[1];
  char v15 = (double *)(v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  if (vabdd_f64(v15[35] + *(double *)(v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v15 + *(double *)(v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v14+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))double v16 = *v15 + *(double *)(v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o); {
  else
  }
    double v16 = v15[35] + *(double *)(v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  uint64_t v17 = v4[2];
  uint64_t v18 = (double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  if (vabdd_f64(v18[35] + *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v18 + *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v17+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))double v19 = *v18 + *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o); {
  else
  }
    double v19 = v18[35] + *(double *)(v17 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  uint64_t v20 = *(void *)(a1 + v9);
  uint64_t v21 = (double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  double v22 = *v21 + *(double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  if (vabdd_f64(v21[35] + *(double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v22) <= *(double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
    double v22 = v21[35] + *(double *)(v20 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  }
  float v23 = v13;
  char v24 = (float *)(a1 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_metalBGRABackdropMixerParameters);
  float v25 = v16;
  *char v24 = v23;
  v24[1] = v25;
  float v26 = v19;
  float result = v22;
  v24[2] = v26;
  v24[3] = result;
  return result;
}

uint64_t sub_24D311CE0(uint64_t a1, uint64_t a2)
{
  return sub_24D311D30(a1, a2, 0);
}

uint64_t sub_24D311CE8(uint64_t a1, uint64_t a2)
{
  return sub_24D311D30(a1, a2, 1);
}

uint64_t sub_24D311CF0(uint64_t a1, uint64_t a2)
{
  return sub_24D311D30(a1, a2, 2);
}

uint64_t sub_24D311CF8(uint64_t a1, uint64_t a2)
{
  return sub_24D311D30(a1, a2, 3);
}

uint64_t sub_24D311D00(uint64_t a1, uint64_t a2)
{
  return sub_24D311D30(a1, a2, 4);
}

uint64_t sub_24D311D08(uint64_t a1, uint64_t a2)
{
  return sub_24D311D30(a1, a2, 5);
}

uint64_t sub_24D311D10(uint64_t a1, uint64_t a2)
{
  return sub_24D311D30(a1, a2, 6);
}

uint64_t sub_24D311D18(uint64_t a1, uint64_t a2)
{
  return sub_24D311D30(a1, a2, 7);
}

uint64_t sub_24D311D20(uint64_t a1, uint64_t a2)
{
  return sub_24D311D30(a1, a2, 8);
}

uint64_t sub_24D311D28(uint64_t a1, uint64_t a2)
{
  return sub_24D311D30(a1, a2, 9);
}

uint64_t sub_24D311D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate;
  uint64_t result = MEMORY[0x253326120](v3 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate);
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 96))(v3, a3, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24D311DCC()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

float sub_24D311E04()
{
  return sub_24D311A6C(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_24D311E10()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D311E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D311E58()
{
  return swift_release();
}

uint64_t sub_24D311E60()
{
  sub_24D39CB40();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D311F8C()
{
  return sub_24D39D5D0();
}

unint64_t sub_24D3120C8(uint64_t a1)
{
  return sub_24D312118(a1, &qword_269861CA8, &qword_269861CB0, (uint64_t (*)(uint64_t))sub_24D38395C);
}

unint64_t sub_24D3120F0(uint64_t a1)
{
  return sub_24D312118(a1, &qword_269861CC8, &qword_269861CD0, (uint64_t (*)(uint64_t))sub_24D38395C);
}

unint64_t sub_24D312118(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24D2B7450(a2);
  uint64_t v7 = sub_24D39D300();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24D2BBF50(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_24D3059C0(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    id v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24D312248(uint64_t a1)
{
  uint64_t v2 = sub_24D2B7450(&qword_269861CE8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24D2B7450(&qword_269861170);
  uint64_t v6 = sub_24D39D300();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (long long *)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24D2BBF50(v12, (uint64_t)v5, &qword_269861CE8);
    unint64_t result = sub_24D3839F0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24D39C8A0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = sub_24D2B6F04(v9, v7[7] + 40 * v16);
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    id v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24D312448(uint64_t a1)
{
  uint64_t v2 = sub_24D2B7450(&qword_269861CE0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24D2B7450(&qword_2698610E8);
  uint64_t v6 = sub_24D39D300();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v30[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_24D2BBF50(v12, (uint64_t)v5, &qword_269861CE0);
    unint64_t result = sub_24D3839F0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_24D39C8A0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7] + 104 * v16;
    char v20 = v9[100];
    int v21 = *((_DWORD *)v9 + 24);
    long long v22 = *((_OWORD *)v9 + 1);
    long long v23 = *((_OWORD *)v9 + 2);
    long long v24 = *((_OWORD *)v9 + 3);
    long long v25 = *((_OWORD *)v9 + 4);
    long long v26 = *((_OWORD *)v9 + 5);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v9;
    *(_OWORD *)(v19 + 16) = v22;
    *(_OWORD *)(v19 + 32) = v23;
    *(_OWORD *)(v19 + 48) = v24;
    *(_OWORD *)(v19 + 64) = v25;
    *(_OWORD *)(v19 + 80) = v26;
    *(_DWORD *)(v19 + 96) = v21;
    *(unsigned char *)(v19 + 100) = v20;
    uint64_t v27 = v7[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_11;
    }
    id v7[2] = v29;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24D312668(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24D2B7450(&qword_269861CD8);
  uint64_t v2 = (void *)sub_24D39D300();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_24D383B04(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    void v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24D312784(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_10;
  }
  sub_24D2B7450(&qword_2698610E0);
  uint64_t v2 = (void *)sub_24D39D300();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = v3 - 1;
  for (uint64_t i = 32; ; i += 144)
  {
    long long v6 = *(_OWORD *)(a1 + i + 112);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)(a1 + i + 96);
    *(_OWORD *)&v27[16] = v6;
    long long v7 = *(_OWORD *)(a1 + i + 128);
    long long v8 = *(_OWORD *)(a1 + i + 16);
    long long v21 = *(_OWORD *)(a1 + i);
    long long v22 = v8;
    long long v9 = *(_OWORD *)(a1 + i + 48);
    long long v23 = *(_OWORD *)(a1 + i + 32);
    long long v24 = v9;
    long long v10 = *(_OWORD *)(a1 + i + 80);
    long long v25 = *(_OWORD *)(a1 + i + 64);
    long long v26 = v10;
    long long v28 = v7;
    v29[0] = v21;
    v29[1] = v22;
    long long v29[2] = v23;
    void v29[3] = v9;
    v29[4] = v25;
    v29[5] = v10;
    char v31 = v27[4];
    int v30 = *(_DWORD *)v27;
    sub_24D313AA4((uint64_t)&v21);
    unint64_t result = sub_24D383754((uint64_t)v29);
    if (v12) {
      break;
    }
    unint64_t v13 = result;
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t result = sub_24D2B6EA8((uint64_t)v29, v2[6] + 104 * result);
    uint64_t v14 = v2[7] + 40 * v13;
    uint64_t v15 = *(void *)&v27[24];
    int v16 = v28;
    uint64_t v17 = *((void *)&v28 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)&v27[8];
    *(void *)(v14 + 16) = v15;
    *(_DWORD *)(v14 + 24) = v16;
    *(void *)(v14 + 32) = v17;
    uint64_t v18 = v2[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_12;
    }
    void v2[2] = v20;
    if (!v4)
    {
      swift_release();
      goto LABEL_10;
    }
    --v4;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_24D312920(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_24D2B7450(&qword_269861CB8);
  uint64_t v2 = sub_24D39D300();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_24D2BBF50(v6, (uint64_t)&v15, &qword_269861CC0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_24D383B04(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_24D3059C0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    uint64_t v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

FMFindingUI::FinishReasons_optional __swiftcall FinishReasons.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_24D39D330();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t FinishReasons.rawValue.getter()
{
  unint64_t result = 0x76616E755F627775;
  switch(*v0)
  {
    case 1:
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x73736563637573;
      break;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D312BA8(unsigned __int8 *a1, char *a2)
{
  return sub_24D37A2CC(*a1, *a2);
}

uint64_t sub_24D312BB4()
{
  return sub_24D311F8C();
}

uint64_t sub_24D312BC0()
{
  return sub_24D311E60();
}

uint64_t sub_24D312BC8()
{
  return sub_24D311F8C();
}

FMFindingUI::FinishReasons_optional sub_24D312BD0(Swift::String *a1)
{
  return FinishReasons.init(rawValue:)(*a1);
}

unint64_t sub_24D312BDC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FinishReasons.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_24D312C04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24D39C8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24D39C830();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  char v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v34 - v11;
  sub_24D39C810();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_startTime, v6);
  sub_24D39C7D0();
  double v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v15(v12, v6);
  sub_24D2B7450(&qword_269861C50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24D3A1F80;
  *(void *)(inited + 32) = 0xD000000000000014;
  *(void *)(inited + 40) = 0x800000024D3A77F0;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_instanceIdentifier, v2);
  sub_24D39C850();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v17 = objc_allocWithZone(NSString);
  uint64_t v18 = (void *)sub_24D39CAC0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_initWithString_, v18);

  *(void *)(inited + 48) = v19;
  *(void *)(inited + 56) = 0x756F635F676E6970;
  *(void *)(inited + 64) = 0xEA0000000000746ELL;
  *(void *)(inited + 72) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_pingCount));
  *(void *)(inited + 80) = 0x6E6F697461727564;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v14);
  *(void *)(inited + 104) = 0x736165725F646E65;
  *(void *)(inited + 112) = 0xEA00000000006E6FLL;
  id v20 = objc_allocWithZone(NSString);
  long long v21 = (void *)sub_24D39CAC0();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v20, sel_initWithString_, v21);

  *(void *)(inited + 120) = v22;
  *(void *)(inited + 128) = 0xD000000000000011;
  *(void *)(inited + 136) = 0x800000024D3A7810;
  *(void *)(inited + 144) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_floorAlertCount));
  *(void *)(inited + 152) = 0xD000000000000018;
  *(void *)(inited + 160) = 0x800000024D3A7830;
  *(void *)(inited + 168) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v1+ OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_movingPhoneAlertCount));
  *(void *)(inited + 176) = 0xD000000000000019;
  *(void *)(inited + 184) = 0x800000024D3A7850;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_firstDistanceRangeSeen + 8)) {
    double v23 = -1.0;
  }
  else {
    double v23 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_firstDistanceRangeSeen);
  }
  *(void *)(inited + 192) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v23);
  sub_24D312668(inited);
  if (qword_2698602A0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_24D39C950();
  sub_24D2B508C(v24, (uint64_t)qword_269869FA0);
  swift_bridgeObjectRetain_n();
  long long v25 = sub_24D39C930();
  os_log_type_t v26 = sub_24D39CDF0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v35 = v28;
    *(_DWORD *)uint64_t v27 = 136315138;
    sub_24D313340();
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_24D39CA90();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_24D2B8328(v29, v31, &v35);
    sub_24D39D070();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v25, v26, "Payload: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v28, -1, -1);
    MEMORY[0x253326010](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v32 = (void *)sub_24D39CAC0();
  sub_24D313340();
  uint64_t v33 = (void *)sub_24D39CA70();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();
}

unint64_t sub_24D313340()
{
  unint64_t result = qword_269861C88;
  if (!qword_269861C88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269861C88);
  }
  return result;
}

void *sub_24D313380()
{
  return sub_24D3133A4(&OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_pingCount);
}

void *sub_24D31338C()
{
  return sub_24D3133A4(&OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_floorAlertCount);
}

void *sub_24D313398()
{
  return sub_24D3133A4(&OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_movingPhoneAlertCount);
}

void *sub_24D3133A4(void *result)
{
  uint64_t v2 = *(void *)(v1 + *result);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3) {
    __break(1u);
  }
  else {
    *(void *)(v1 + *result) = v4;
  }
  return result;
}

void sub_24D3133C0(double a1)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_firstDistanceRangeSeen;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_firstDistanceRangeSeen + 8) == 1)
  {
    *(double *)uint64_t v2 = a1;
    *(unsigned char *)(v2 + 8) = 0;
  }
}

unsigned char *sub_24D3133E4(unsigned char *result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_finishReason) = *result;
  return result;
}

id FMFindingWatchMetrics.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id FMFindingWatchMetrics.init()()
{
  id v1 = v0;
  sub_24D39C890();
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_pingCount] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_floorAlertCount] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_movingPhoneAlertCount] = 0;
  sub_24D39C810();
  v1[OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_finishReason] = 0;
  uint64_t v2 = &v1[OBJC_IVAR____TtC11FMFindingUI21FMFindingWatchMetrics_firstDistanceRangeSeen];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for FMFindingWatchMetrics();
  return objc_msgSendSuper2(&v4, sel_init);
}

id FMFindingWatchMetrics.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingWatchMetrics();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMFindingWatchMetrics()
{
  uint64_t result = qword_269861C98;
  if (!qword_269861C98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_24D313644()
{
  unint64_t result = qword_269861C90;
  if (!qword_269861C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861C90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FinishReasons(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FinishReasons(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D3137F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FinishReasons()
{
  return &type metadata for FinishReasons;
}

uint64_t sub_24D31382C()
{
  return type metadata accessor for FMFindingWatchMetrics();
}

uint64_t sub_24D313834()
{
  uint64_t result = sub_24D39C8A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24D39C830();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for FMFindingWatchMetrics(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFindingWatchMetrics);
}

uint64_t dispatch thunk of FMFindingWatchMetrics.recordEvent()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.incrementPingCount()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.incrementFloorAlertCount()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.incrementMovingPhoneAlertCount()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.setFirstDistanceRangeSeen(distance:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of FMFindingWatchMetrics.setFinishReason(newFinishReason:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x158))();
}

uint64_t sub_24D313AA4(uint64_t a1)
{
  return a1;
}

double sub_24D313B08()
{
  id v0 = objc_msgSend(self, sel_whiteColor);
  id v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.6);

  double result = 0.5;
  xmmword_269861CF0 = xmmword_24D3A20D0;
  qword_269861D00 = 0x3FC41B2F769CF0E0;
  qword_269861D08 = (uint64_t)v1;
  return result;
}

id sub_24D313B98(uint64_t a1, char a2, double a3, double a4, double a5)
{
  uint64_t v11 = &v5[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_style];
  uint64_t v12 = qword_269860300;
  double v13 = v5;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_269861D00;
  uint64_t v15 = (void *)qword_269861D08;
  *(_OWORD *)uint64_t v11 = xmmword_269861CF0;
  *((void *)v11 + 2) = v14;
  *((void *)v11 + 3) = v15;
  *(void *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScale] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngle] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngle] = 0;
  uint64_t v16 = (double *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_sceneSize];
  *uint64_t v16 = a3;
  v16[1] = a4;
  double v17 = *(double *)&a1;
  if (a2) {
    double v17 = 0.0;
  }
  *(double *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_verticalOffset] = v17;
  if (a4 >= a3) {
    double v18 = a3;
  }
  else {
    double v18 = a4;
  }
  *(double *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_diskRadius] = v18 * 0.5 * a5;
  id v19 = v15;
  *(void *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_opacitySpring] = sub_24D32B3C8(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);
  *(void *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngleSpring] = sub_24D32B3C8(0, 0, 0x3FA015BF9217271ALL, 0, 0, 1);
  *(void *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngleSpring] = sub_24D32B3C8(0, 0, 0x3FA015BF9217271ALL, 0, 0, 1);
  *(void *)&v13[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScaleSpring] = sub_24D32B3C8(0, 0, 0x3F847AE147AE147BLL, 0, 0, 1);

  v36.receiver = v13;
  v36.super_class = (Class)type metadata accessor for FMPFRingView();
  id v20 = objc_msgSendSuper2(&v36, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  long long v21 = self;
  id v22 = v20;
  id v23 = objc_msgSend(v21, sel_clearColor);
  objc_msgSend(v22, sel_setBackgroundColor_, v23);

  CGAffineTransformMakeRotation(&v35, -1.57079633);
  objc_msgSend(v22, sel_setTransform_, &v35);
  if (qword_2698602A0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_24D39C950();
  sub_24D2B508C(v24, (uint64_t)qword_269869FA0);
  id v25 = v22;
  os_log_type_t v26 = sub_24D39C930();
  os_log_type_t v27 = sub_24D39CDF0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(void *)&v35.SCNMatrix4 a = v29;
    *(_DWORD *)uint64_t v28 = 136315138;
    id v30 = objc_msgSend(v25, sel_description);
    uint64_t v31 = sub_24D39CAF0();
    unint64_t v33 = v32;

    sub_24D2B8328(v31, v33, (uint64_t *)&v35);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v26, v27, "ðŸ§­ FMPFRingView%s: init", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v29, -1, -1);
    MEMORY[0x253326010](v28, -1, -1);
  }
  else
  {
  }
  return v25;
}

id sub_24D314184()
{
  if (qword_2698602A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FA0);
  id v2 = v0;
  int v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    id v7 = objc_msgSend(v2, sel_description);
    uint64_t v8 = sub_24D39CAF0();
    unint64_t v10 = v9;

    sub_24D2B8328(v8, v10, &v13);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v3, v4, "ðŸ§­ FMPFRingView%s: deinit", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v6, -1, -1);
    MEMORY[0x253326010](v5, -1, -1);
  }
  else
  {
  }
  uint64_t v11 = (objc_class *)type metadata accessor for FMPFRingView();
  v14.receiver = v2;
  v14.super_class = v11;
  return objc_msgSendSuper2(&v14, sel_dealloc);
}

uint64_t sub_24D31445C(double a1)
{
  uint64_t v3 = sub_24D39C990();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24D39C9D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(double *)(v11 + 24) = a1;
  uint64_t v12 = self;
  uint64_t v13 = v1;
  if (objc_msgSend(v12, sel_isMainThread))
  {
    sub_24D3147A0(v13, a1);
    return swift_release();
  }
  else
  {
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v15 = (void *)sub_24D39CE90();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_24D3156C4;
    *(void *)(v16 + 24) = v11;
    aBlock[4] = sub_24D30C3C0;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_24D32194C;
    aBlock[3] = &unk_26FF87D98;
    double v17 = _Block_copy(aBlock);
    uint64_t v20 = v7;
    double v18 = v17;
    swift_retain();
    swift_release();
    sub_24D39C9B0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_24D2C83E0();
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    MEMORY[0x253324EE0](0, v10, v6, v18);
    _Block_release(v18);
    swift_release();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  }
}

id sub_24D3147A0(char *a1, double a2)
{
  uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_opacitySpring;
  uint64_t v5 = *(void *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_opacitySpring];
  if (!sub_24D32AEBC())
  {
    sub_24D2D9F4C(a2);
    *(unsigned char *)(v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    uint64_t v6 = *(void *)&a1[v4];
    uint64_t v7 = (double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    if (vabdd_f64(v7[35] + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v7 + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v6+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))double v8 = *v7 + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o); {
    else
    }
      double v8 = v7[35] + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    uint64_t v9 = self;
    objc_msgSend(v9, sel_begin);
    objc_msgSend(v9, sel_setDisableActions_, 1);
    objc_msgSend(a1, sel_setAlpha_, v8);
    objc_msgSend(v9, sel_commit);
  }
  uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngleSpring;
  uint64_t v11 = *(void *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngleSpring];
  if (!sub_24D32AEBC() || !sub_24D32AEBC() || !sub_24D32AEBC())
  {
    sub_24D2D9F4C(a2);
    *(unsigned char *)(v11 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngleSpring;
    uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngleSpring];
    sub_24D2D9F4C(a2);
    *(unsigned char *)(v13 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    uint64_t v14 = OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScaleSpring;
    uint64_t v15 = *(void *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScaleSpring];
    sub_24D2D9F4C(a2);
    *(unsigned char *)(v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    uint64_t v16 = *(void *)&a1[v10];
    double v17 = (double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    if (vabdd_f64(v17[35] + *(double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v17 + *(double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v16+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))double v18 = *v17 + *(double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o); {
    else
    }
      double v18 = v17[35] + *(double *)(v16 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    uint64_t v19 = *(void *)&a1[v12];
    uint64_t v20 = (double *)(v19 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    if (vabdd_f64(v20[35] + *(double *)(v19 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v20 + *(double *)(v19 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v19+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))double v21 = *v20 + *(double *)(v19 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o); {
    else
    }
      double v21 = v20[35] + *(double *)(v19 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    uint64_t v22 = *(void *)&a1[v14];
    id v23 = (double *)(v22 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    double v24 = *v23 + *(double *)(v22 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    if (vabdd_f64(v23[35] + *(double *)(v22 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v24) <= *(double *)(v22 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
      double v24 = v23[35] + *(double *)(v22 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    }
    *(double *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngle] = v18;
    *(double *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngle] = v21;
    *(double *)&a1[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScale] = v24;
  }
  return objc_msgSend(a1, sel_setNeedsDisplay);
}

uint64_t sub_24D314AA8(uint64_t a1, char a2, char a3, double a4, double a5)
{
  uint64_t v11 = sub_24D39C990();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24D39C9D0();
  uint64_t result = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (fabs(a5) >= a4)
  {
    uint64_t v29 = v17;
    uint64_t v30 = v12;
    char v20 = a2 & 1;
    BOOL v21 = (a2 & 1) != 0;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a1;
    *(unsigned char *)(v22 + 24) = v21;
    char v23 = a3 & 1;
    *(unsigned char *)(v22 + 25) = v23;
    *(void *)(v22 + 32) = v5;
    *(double *)(v22 + 40) = a4;
    *(double *)(v22 + 48) = a5;
    double v24 = self;
    id v25 = v5;
    if (objc_msgSend(v24, sel_isMainThread))
    {
      sub_24D314E38(a1, v20, v23, v25, a4, a5);
      return swift_release();
    }
    else
    {
      sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
      os_log_type_t v26 = (void *)sub_24D39CE90();
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_24D315674;
      *(void *)(v27 + 24) = v22;
      aBlock[4] = sub_24D30C3C0;
      aBlock[5] = v27;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_24D32194C;
      aBlock[3] = &unk_26FF87D20;
      uint64_t v28 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      sub_24D39C9B0();
      aBlock[0] = MEMORY[0x263F8EE78];
      sub_24D2C83E0();
      sub_24D2B7450((uint64_t *)&unk_2698610D0);
      sub_24D2C8438();
      sub_24D39D0E0();
      MEMORY[0x253324EE0](0, v19, v14, v28);
      _Block_release(v28);
      swift_release();

      (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v19, v15);
    }
  }
  return result;
}

void sub_24D314E38(uint64_t a1, char a2, char a3, char *a4, double a5, double a6)
{
  if (a2) {
    *(double *)&a1 = 0.0;
  }
  uint64_t v10 = *(void *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngleSpring];
  if (a3)
  {
    uint64_t v11 = v10 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)uint64_t v11 = a5;
    *(unsigned char *)(v11 + 8) = 0;
    sub_24D32ADF4();
    uint64_t v12 = *(void *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngleSpring]
        + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)uint64_t v12 = a6;
    *(unsigned char *)(v12 + 8) = 0;
    sub_24D32ADF4();
    uint64_t v13 = *(void *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScaleSpring]
        + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)uint64_t v13 = *(double *)&a1;
    *(unsigned char *)(v13 + 8) = 0;
    sub_24D32ADF4();
  }
  else
  {
    sub_24D2D9DA8(a5);
    *(unsigned char *)(v10 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    uint64_t v14 = *(void *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngleSpring];
    sub_24D2D9DA8(a6);
    *(unsigned char *)(v14 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    uint64_t v15 = *(void *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScaleSpring];
    double v16 = sub_24D2D9DA8(*(double *)&a1);
    *(unsigned char *)(v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    *(double *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngle] = a5;
    *(double *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngle] = a6;
    *(double *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScale] = *(double *)&a1;
    objc_msgSend(a4, sel_bounds, v16);
    objc_msgSend(a4, sel_drawRect_);
  }
}

uint64_t sub_24D314FA8(uint64_t a1, char a2, char a3)
{
  char v6 = a2 & 1;
  uint64_t v7 = sub_24D39C990();
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24D39C9D0();
  uint64_t v10 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(unsigned char *)(v13 + 24) = v6;
  *(unsigned char *)(v13 + 25) = a3;
  *(void *)(v13 + 32) = v3;
  uint64_t v14 = self;
  uint64_t v15 = v3;
  if (objc_msgSend(v14, sel_isMainThread))
  {
    sub_24D3152F8(a1, v6, a3 & 1, v15);
    return swift_release();
  }
  else
  {
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v17 = (void *)sub_24D39CE90();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_24D3155D8;
    *(void *)(v18 + 24) = v13;
    aBlock[4] = sub_24D2C83A0;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_24D32194C;
    aBlock[3] = &unk_26FF87CA8;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_24D39C9B0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_24D2C83E0();
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    MEMORY[0x253324EE0](0, v12, v9, v19);
    _Block_release(v19);
    swift_release();

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  }
}

void sub_24D3152F8(uint64_t a1, char a2, char a3, char *a4)
{
  if (a2) {
    *(double *)&a1 = 0.0;
  }
  uint64_t v5 = *(void *)&a4[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_opacitySpring];
  if (a3)
  {
    uint64_t v6 = v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget;
    *(double *)uint64_t v6 = *(double *)&a1;
    *(unsigned char *)(v6 + 8) = 0;
    sub_24D32ADF4();
  }
  else
  {
    sub_24D2D9DA8(*(double *)&a1);
    *(unsigned char *)(v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    uint64_t v8 = self;
    objc_msgSend(v8, sel_begin);
    objc_msgSend(v8, sel_setDisableActions_, 1);
    objc_msgSend(a4, sel_setAlpha_, *(double *)&a1);
    objc_msgSend(v8, sel_commit);
  }
}

uint64_t type metadata accessor for FMPFRingView()
{
  return self;
}

void destroy for FMPFRingViewStyle(uint64_t a1)
{
}

uint64_t initializeWithCopy for FMPFRingViewStyle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  id v4 = v3;
  return a1;
}

void *assignWithCopy for FMPFRingViewStyle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v3 = (void *)a2[3];
  id v4 = (void *)a1[3];
  a1[3] = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for FMPFRingViewStyle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v3 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for FMPFRingViewStyle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFRingViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFRingViewStyle()
{
  return &type metadata for FMPFRingViewStyle;
}

uint64_t sub_24D3155A0()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

void sub_24D3155D8()
{
  sub_24D3152F8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25), *(char **)(v0 + 32));
}

uint64_t sub_24D3155EC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D315624(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D315634()
{
  return swift_release();
}

uint64_t sub_24D31563C()
{
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_24D315674()
{
  sub_24D314E38(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25), *(char **)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_24D31568C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_24D3156C4()
{
  return sub_24D3147A0(*(char **)(v0 + 16), *(double *)(v0 + 24));
}

void sub_24D3156D0()
{
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v17);
  double v2 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_verticalOffset];
  objc_msgSend(v0, sel_bounds);
  double Height = CGRectGetHeight(v18);
  double v4 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_startAngle];
  double v5 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_endAngle];
  uint64_t v6 = &v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_style];
  double v7 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_style + 16];
  if (v7 + v7 < vabdd_f64(v4, v5))
  {
    double v8 = Height * 0.5;
    double v9 = Width * 0.5 - v2;
    double v10 = -v7;
    if (v4 <= v5) {
      double v11 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_style + 16];
    }
    else {
      double v11 = -v7;
    }
    if (v4 > v5) {
      double v10 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_style + 16];
    }
    id v12 = objc_msgSend(self, sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, v4 > v5, v9, v8, *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_diskRadius]* (*(double *)&v0[OBJC_IVAR____TtC11FMFindingUI12FMPFRingView_additionalRadiusScale] + 1.0), v10 - v4, v11 - v5);
    if (v12)
    {
      double v13 = *((double *)v6 + 1);
      id v15 = v12;
      objc_msgSend(v15, sel_setLineWidth_, v13);
      objc_msgSend(v15, sel_setLineCapStyle_, 1);
      objc_msgSend(*((id *)v6 + 3), sel_setStroke);
      id v14 = objc_msgSend(self, sel_clearColor);
      objc_msgSend(v14, sel_setFill);

      objc_msgSend(v15, sel_stroke);
    }
  }
}

void __swiftcall FMFindingUIAVPlayerVideoInfo.init(fps:start:startLoop:endLoop:last:assetName:)(FMFindingUI::FMFindingUIAVPlayerVideoInfo *__return_ptr retstr, Swift::Int fps, CMTime start, CMTime startLoop, CMTime endLoop, CMTime last, Swift::String assetName)
{
  retstr->fps = fps;
  retstr->start = start;
  retstr->startLoop = startLoop;
  retstr->endLoop = endLoop;
  retstr->last.value = last.value;
  retstr->last.timescale = last.timescale;
  retstr->last.flags = last.flags;
  *(_OWORD *)&retstr->last.epoch = *(_OWORD *)&last.epoch;
  retstr->assetName._object = assetName._object;
}

uint64_t destroy for FMFindingUIAVPlayerVideoInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMFindingUIAVPlayerVideoInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v3 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v3;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMFindingUIAVPlayerVideoInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FMFindingUIAVPlayerVideoInfo(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for FMFindingUIAVPlayerVideoInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingUIAVPlayerVideoInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingUIAVPlayerVideoInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 112) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingUIAVPlayerVideoInfo()
{
  return &type metadata for FMFindingUIAVPlayerVideoInfo;
}

char *sub_24D315C14(void *a1, double a2)
{
  uint64_t v43 = *MEMORY[0x263EF8340];
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle] = 0;
  double v5 = &v2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info];
  *(_OWORD *)double v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *((_OWORD *)v5 + 3) = 0u;
  *((_OWORD *)v5 + 4) = 0u;
  *((_OWORD *)v5 + 5) = 0u;
  *((_OWORD *)v5 + 6) = 0u;
  *((void *)v5 + 14) = 0;
  uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetManager;
  id v7 = objc_allocWithZone(MEMORY[0x263F6C218]);
  double v8 = v2;
  *(void *)&v2[v6] = objc_msgSend(v7, sel_init);
  double v9 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_time];
  *(void *)double v9 = 0;
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = 0;
  v9[24] = 1;
  *(void *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerEndedObserver] = 0;
  double v10 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerTimeObserver];
  *(_OWORD *)double v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  double v11 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName];
  *(void *)double v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem] = 0;
  v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] = 0;
  v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isShown] = 0;
  v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_disableAutoLoop] = 0;
  id v12 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
  *(void *)id v12 = 0;
  *((void *)v12 + 1) = 0;
  double v13 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler];
  *(void *)double v13 = 0;
  *((void *)v13 + 1) = 0;
  id v14 = &v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_showHideHandler];
  *(void *)id v14 = 0;
  *((void *)v14 + 1) = 0;
  *(void *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_placeholderView] = a1;
  *(double *)&v8[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_crossDissolveDuration] = a2;
  id v15 = a1;

  v42.receiver = v8;
  v42.super_class = (Class)type metadata accessor for FMAVPlayerView();
  id v16 = objc_msgSendSuper2(&v42, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = qword_2698602A0;
  CGRect v18 = (char *)v16;
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_24D39C950();
  sub_24D2B508C(v19, (uint64_t)qword_269869FA0);
  uint64_t v20 = sub_24D39C930();
  os_log_type_t v21 = sub_24D39CDF0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_24D2B1000, v20, v21, "ðŸ§­ FMAVPlayerView: init", v22, 2u);
    MEMORY[0x253326010](v22, -1, -1);
  }

  char v23 = self;
  id v24 = objc_msgSend(v23, sel_sharedInstance);
  uint64_t v25 = *MEMORY[0x263EF9060];
  uint64_t v26 = *MEMORY[0x263EF9108];
  id v41 = 0;
  unsigned int v27 = objc_msgSend(v24, sel_setCategory_mode_options_error_, v25, v26, 1, &v41);

  id v28 = v41;
  if (v27
    && (id v29 = v41,
        id v30 = objc_msgSend(v23, sel_sharedInstance),
        id v41 = 0,
        unsigned int v31 = objc_msgSend(v30, sel_setActive_withOptions_error_, 1, 0, &v41),
        v30,
        id v28 = v41,
        v31))
  {
    id v32 = v41;
  }
  else
  {
    id v33 = v28;
    uint64_t v34 = (void *)sub_24D39C710();

    swift_willThrow();
    CGAffineTransform v35 = sub_24D39C930();
    os_log_type_t v36 = sub_24D39CDF0();
    if (os_log_type_enabled(v35, v36))
    {
      id v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v37 = 0;
      _os_log_impl(&dword_24D2B1000, v35, v36, "ðŸ§­ FMAVPlayerView: failed to set the audio session", v37, 2u);
      MEMORY[0x253326010](v37, -1, -1);
    }
  }
  uint64_t v38 = *(void **)&v18[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetManager];
  objc_msgSend(v38, sel_setUseProcessLocalCache_, 1);
  id v39 = v38;
  objc_msgSend(v39, sel_activate);

  return v18;
}

id sub_24D316070()
{
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetManager], sel_invalidate);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAVPlayerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24D316294()
{
  uint64_t v1 = sub_24D39D600();
  uint64_t v3 = sub_24D34315C(6, v1, v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  MEMORY[0x253324B60](v3, v5, v7, v9);
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  sub_24D2B7450((uint64_t *)&unk_269861860);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24D3A0050;
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName);
  unint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8);
  *(void *)(v10 + 56) = MEMORY[0x263F8D310];
  *(void *)(v10 + 64) = sub_24D2B7494();
  uint64_t v13 = 0x7465737361206F6ELL;
  if (v11) {
    uint64_t v13 = v12;
  }
  unint64_t v14 = 0xE800000000000000;
  if (v11) {
    unint64_t v14 = v11;
  }
  *(void *)(v10 + 32) = v13;
  *(void *)(v10 + 40) = v14;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_24D39CB00();
  swift_bridgeObjectRelease();
  return v15;
}

void sub_24D316434()
{
  uint64_t v1 = (void *)sub_24D39CA10();
  uint64_t v2 = *(v1 - 1);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = sub_24D39C990();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle];
  if (v9)
  {
    uint64_t v10 = *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8];
    id v30 = v9;
    if (v10) {
      sub_24D319770();
    }

    id v11 = v30;
  }
  else
  {
    id v28 = v7;
    uint64_t v29 = v2;
    id v30 = v1;
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6C220]), sel_initWithTagColor_, 0);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v0;
    id v14 = objc_allocWithZone(MEMORY[0x263F6C228]);
    os_log_type_t v36 = sub_24D31A8F0;
    uint64_t v37 = v13;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v33 = 1107296256;
    uint64_t v34 = sub_24D31A608;
    CGAffineTransform v35 = &unk_26FF881C0;
    uint64_t v15 = _Block_copy(&aBlock);
    id v16 = v0;
    id v17 = objc_msgSend(v14, sel_initWithQueryResultHandler_, v15);
    _Block_release(v15);
    swift_release();
    CGRect v18 = *(void **)&v16[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetManager];
    id v26 = v17;
    id v27 = v12;
    objc_msgSend(v18, sel_getAssetBundleForDeviceQuery_withRequestConfiguration_, v12, v17);
    uint64_t v19 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem;
    if (*(void *)&v16[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem])
    {
      swift_retain();
      sub_24D39CA30();
      swift_release();
    }
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    os_log_type_t v36 = sub_24D31A8F8;
    uint64_t v37 = v20;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v33 = 1107296256;
    uint64_t v34 = sub_24D32194C;
    CGAffineTransform v35 = &unk_26FF881E8;
    _Block_copy(&aBlock);
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_24D31A964((unint64_t *)&qword_269860EE0, 255, MEMORY[0x263F8F030]);
    swift_retain();
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    sub_24D39CA40();
    swift_allocObject();
    uint64_t v21 = sub_24D39CA20();
    swift_release();
    swift_release();
    *(void *)&v16[v19] = v21;
    swift_retain();
    swift_release();
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v22 = (void *)sub_24D39CE90();
    sub_24D39CA00();
    char v23 = v28;
    MEMORY[0x253324A90](v5, 2.0);
    id v24 = v30;
    uint64_t v25 = *(void (**)(char *, id))(v29 + 8);
    v25(v5, v30);
    sub_24D39CE60();
    swift_release();

    v25(v23, v24);
  }
}

uint64_t sub_24D3168F4(void *a1, uint64_t a2, uint64_t a3, int a4, void *a5, void *a6)
{
  int v25 = a4;
  uint64_t v11 = sub_24D39C990();
  uint64_t v28 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = sub_24D39C9D0();
  uint64_t v14 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  id v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
  uint64_t v26 = sub_24D39CE90();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a6;
  *(void *)(v17 + 24) = a1;
  *(void *)(v17 + 32) = a2;
  *(void *)(v17 + 40) = a3;
  *(unsigned char *)(v17 + 48) = v25;
  *(void *)(v17 + 56) = a5;
  aBlock[4] = sub_24D31A950;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_24D32194C;
  aBlock[3] = &unk_26FF88238;
  CGRect v18 = _Block_copy(aBlock);
  id v19 = a6;
  id v20 = a1;
  swift_bridgeObjectRetain();
  id v21 = a5;
  swift_release();
  sub_24D39C9B0();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_24D31A964((unint64_t *)&qword_269860EE0, 255, MEMORY[0x263F8F030]);
  sub_24D2B7450((uint64_t *)&unk_2698610D0);
  sub_24D2C8438();
  sub_24D39D0E0();
  uint64_t v22 = (void *)v26;
  MEMORY[0x253324EE0](0, v16, v13, v18);
  _Block_release(v18);

  (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v13, v11);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v27);
}

void sub_24D316BF0(char *a1, void *a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  if (*(void *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem])
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
    sub_24D2B7450((uint64_t *)&unk_269861860);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_24D3A2130;
    *(void *)(v11 + 56) = type metadata accessor for FMAVPlayerView();
    *(void *)(v11 + 64) = sub_24D31A964(&qword_269861E08, v12, (void (*)(uint64_t))type metadata accessor for FMAVPlayerView);
    *(void *)(v11 + 32) = a1;
    uint64_t v13 = *(void *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
    unint64_t v14 = *(void *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8];
    uint64_t v61 = &a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
    uint64_t v15 = MEMORY[0x263F8D310];
    *(void *)(v11 + 96) = MEMORY[0x263F8D310];
    unint64_t v16 = sub_24D2B7494();
    uint64_t v17 = a2;
    unint64_t v18 = v16;
    *(void *)(v11 + 104) = v16;
    if (v14) {
      uint64_t v19 = v13;
    }
    else {
      uint64_t v19 = 7104878;
    }
    if (v14) {
      unint64_t v20 = v14;
    }
    else {
      unint64_t v20 = 0xE300000000000000;
    }
    *(void *)(v11 + 72) = v19;
    *(void *)(v11 + 80) = v20;
    uint64_t v63 = (uint64_t)v17;
    uint64_t v62 = v17;
    id v60 = v17;
    id v21 = a1;
    swift_bridgeObjectRetain();
    sub_24D2B7450(&qword_269861E10);
    uint64_t v22 = sub_24D39CB20();
    *(void *)(v11 + 136) = v15;
    *(void *)(v11 + 144) = v18;
    *(void *)(v11 + 112) = v22;
    *(void *)(v11 + 120) = v23;
    *(void *)(v11 + 176) = v15;
    *(void *)(v11 + 184) = v18;
    *(void *)(v11 + 152) = a3;
    *(void *)(v11 + 160) = a4;
    uint64_t v24 = 20302;
    if (a5) {
      uint64_t v24 = 5457241;
    }
    unint64_t v25 = 0xE200000000000000;
    if (a5) {
      unint64_t v25 = 0xE300000000000000;
    }
    *(void *)(v11 + 216) = v15;
    *(void *)(v11 + 224) = v18;
    *(void *)(v11 + 192) = v24;
    *(void *)(v11 + 200) = v25;
    uint64_t v63 = (uint64_t)a6;
    swift_bridgeObjectRetain();
    id v26 = a6;
    sub_24D2B7450(&qword_269861E18);
    uint64_t v27 = sub_24D39CB20();
    *(void *)(v11 + 256) = v15;
    *(void *)(v11 + 264) = v18;
    *(void *)(v11 + 232) = v27;
    *(void *)(v11 + 240) = v28;
    uint64_t v29 = sub_24D39CB00();
    unint64_t v31 = v30;
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_24D39C950();
    sub_24D2B508C(v32, (uint64_t)qword_269869FA0);
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_24D39C930();
    os_log_type_t v34 = sub_24D39CDF0();
    if (os_log_type_enabled(v33, v34))
    {
      CGAffineTransform v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v63 = v36;
      *(_DWORD *)CGAffineTransform v35 = 136315138;
      swift_bridgeObjectRetain();
      sub_24D2B8328(v29, v31, &v63);
      sub_24D39D070();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24D2B1000, v33, v34, "%s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253326010](v36, -1, -1);
      MEMORY[0x253326010](v35, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    os_log_type_t v57 = *(void **)&v21[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle];
    *(void *)&v21[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle] = v62;
    id v58 = v60;

    if (*((void *)v61 + 1)) {
      sub_24D319770();
    }
  }
  else
  {
    sub_24D2B7450((uint64_t *)&unk_269861860);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_24D3A10C0;
    *(void *)(v37 + 56) = type metadata accessor for FMAVPlayerView();
    *(void *)(v37 + 64) = sub_24D31A964(&qword_269861E08, v38, (void (*)(uint64_t))type metadata accessor for FMAVPlayerView);
    *(void *)(v37 + 32) = a1;
    uint64_t v39 = *(void *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
    unint64_t v40 = *(void *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8];
    uint64_t v41 = MEMORY[0x263F8D310];
    *(void *)(v37 + 96) = MEMORY[0x263F8D310];
    unint64_t v42 = sub_24D2B7494();
    *(void *)(v37 + 104) = v42;
    if (v40) {
      uint64_t v43 = v39;
    }
    else {
      uint64_t v43 = 7104878;
    }
    unint64_t v44 = 0xE300000000000000;
    if (v40) {
      unint64_t v44 = v40;
    }
    *(void *)(v37 + 72) = v43;
    *(void *)(v37 + 80) = v44;
    uint64_t v63 = (uint64_t)a2;
    id v45 = a2;
    swift_bridgeObjectRetain();
    uint64_t v46 = a1;
    sub_24D2B7450(&qword_269861E10);
    uint64_t v47 = sub_24D39CB20();
    *(void *)(v37 + 136) = v41;
    *(void *)(v37 + 144) = v42;
    *(void *)(v37 + 112) = v47;
    *(void *)(v37 + 120) = v48;
    uint64_t v49 = sub_24D39CB00();
    unint64_t v51 = v50;
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_24D39C950();
    sub_24D2B508C(v52, (uint64_t)qword_269869FA0);
    swift_bridgeObjectRetain();
    unint64_t v53 = sub_24D39C930();
    os_log_type_t v54 = sub_24D39CDF0();
    if (os_log_type_enabled(v53, v54))
    {
      __int16 v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v63 = v56;
      *(_DWORD *)__int16 v55 = 136315138;
      swift_bridgeObjectRetain();
      sub_24D2B8328(v49, v51, &v63);
      sub_24D39D070();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24D2B1000, v53, v54, "%s", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253326010](v56, -1, -1);
      MEMORY[0x253326010](v55, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_24D3171FC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x253326120](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24D39C950();
    sub_24D2B508C(v4, (uint64_t)qword_269869FA0);
    uint64_t v5 = v3;
    uint64_t v6 = sub_24D39C930();
    os_log_type_t v7 = sub_24D39CDF0();
    p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___PRBTGroupLocalizerDelegate + 16);
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = v19;
      *(_DWORD *)uint64_t v9 = 138412546;
      uint64_t v11 = v5;
      p_prots = &OBJC_PROTOCOL___PRBTGroupLocalizerDelegate.prots;
      sub_24D39D070();
      *uint64_t v10 = v3;

      *(_WORD *)(v9 + 12) = 2080;
      uint64_t v12 = (uint64_t *)&v11[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
      if (*(void *)&v11[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8])
      {
        uint64_t v13 = *v12;
        unint64_t v14 = v12[1];
      }
      else
      {
        unint64_t v14 = 0xE300000000000000;
        uint64_t v13 = 7104878;
      }
      swift_bridgeObjectRetain();
      sub_24D2B8328(v13, v14, &v20);
      sub_24D39D070();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D2B1000, v6, v7, "ðŸ§­ FMAVPlayerView%@: SFDeviceAssetManager.request('%s') never returned (59783662), using local asset", (uint8_t *)v9, 0x16u);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v10, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x253326010](v19, -1, -1);
      MEMORY[0x253326010](v9, -1, -1);
    }
    else
    {
    }
    *(void *)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem] = 0;
    swift_release();
    type metadata accessor for FMAVPlayerView();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v17 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle];
    *(void *)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle] = v16;
    id v18 = v16;

    if (*(uint64_t *)((char *)&p_prots[445][1].count + (void)v5)) {
      sub_24D319770();
    }
  }
}

void sub_24D317500(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v87 = a1;
  uint64_t v88 = a2;
  uint64_t v84 = sub_24D39C780();
  uint64_t v85 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v89 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_24D39CAC0();
  id v86 = a3;
  id v6 = objc_msgSend(a3, sel_pathsForResourcesOfType_inDirectory_, v5, 0);

  uint64_t v7 = sub_24D39CC10();
  uint64_t v90 = v7;
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9)
  {
    uint64_t v10 = (unint64_t *)(v90 + 40);
    *(void *)&long long v8 = 136315138;
    long long v93 = v8;
    uint64_t v92 = MEMORY[0x263F8EE58] + 8;
    do
    {
      uint64_t v12 = *(v10 - 1);
      unint64_t v11 = *v10;
      uint64_t v13 = qword_2698602A0;
      swift_bridgeObjectRetain();
      if (v13 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_24D39C950();
      sub_24D2B508C(v14, (uint64_t)qword_269869FA0);
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_24D39C930();
      os_log_type_t v16 = sub_24D39CDF0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        *(void *)&long long aBlock = v18;
        *(_DWORD *)uint64_t v17 = v93;
        swift_bridgeObjectRetain();
        *(void *)(v17 + 4) = sub_24D2B8328(v12, v11, (uint64_t *)&aBlock);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24D2B1000, v15, v16, "ðŸ§­ FMAVPlayerView: asset available %s", (uint8_t *)v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x253326010](v18, -1, -1);
        MEMORY[0x253326010](v17, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v10 += 2;
      --v9;
    }
    while (v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = v87;
  uint64_t v19 = v88;
  id v21 = (void *)sub_24D39CAC0();
  uint64_t v22 = (void *)sub_24D39CAC0();
  id v23 = objc_msgSend(v86, sel_pathForResource_ofType_, v21, v22);

  uint64_t v24 = v91;
  if (!v23)
  {
    type metadata accessor for FMAVPlayerView();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v26 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v27 = (void *)sub_24D39CAC0();
    uint64_t v28 = (void *)sub_24D39CAC0();
    id v23 = objc_msgSend(v26, sel_pathForResource_ofType_, v27, v28);

    if (!v23)
    {
LABEL_17:
      if (qword_2698602A0 == -1) {
        goto LABEL_18;
      }
      goto LABEL_43;
    }
  }
  sub_24D39CAF0();

  uint64_t v29 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying;
  if (v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] == 1)
  {
    uint64_t v30 = *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName + 8];
    if (v30)
    {
      if (*(void *)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName] == v20 && v30 == v19
        || (sub_24D39D4B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
  }
  sub_24D39C730();
  swift_bridgeObjectRelease();
  id v37 = objc_allocWithZone(MEMORY[0x263EFA800]);
  uint64_t v38 = (void *)sub_24D39C740();
  id v39 = objc_msgSend(v37, sel_initWithURL_, v38);

  id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA7F0]), sel_initWithPlayerItem_, v39);
  uint64_t v41 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player;
  unint64_t v42 = *(void **)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player];
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player] = v40;

  uint64_t v43 = (objc_class *)type metadata accessor for FMAVPlayerView();
  v98.receiver = v24;
  v98.super_class = v43;
  id v44 = objc_msgSendSuper2(&v98, sel_layer);
  self;
  uint64_t v45 = swift_dynamicCastObjCClass();
  if (v45)
  {
    uint64_t v46 = (void *)v45;
    id v47 = *(id *)&v24[v41];
    objc_msgSend(v46, sel_setPlayer_, v47);
  }
  v24[v29] = 1;
  id v48 = objc_msgSend(v39, sel_tracks);
  sub_24D2BC100(0, &qword_269861E00);
  unint64_t v49 = sub_24D39CC10();

  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_24D39D2D0();
    swift_bridgeObjectRelease();
    if (v54) {
      goto LABEL_24;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  if (!*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_33;
  }
LABEL_24:
  if ((v49 & 0xC000000000000001) != 0)
  {
    id v50 = (id)MEMORY[0x253325220](0, v49);
  }
  else
  {
    if (!*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_43:
      swift_once();
LABEL_18:
      uint64_t v31 = sub_24D39C950();
      sub_24D2B508C(v31, (uint64_t)qword_269869FA0);
      *(void *)&long long v93 = v24;
      uint64_t v32 = sub_24D39C930();
      os_log_type_t v33 = sub_24D39CDF0();
      if (os_log_type_enabled(v32, v33))
      {
        os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
        CGAffineTransform v35 = (void *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v34 = 138412290;
        *(void *)&long long aBlock = v93;
        id v36 = (id)v93;
        sub_24D39D070();
        void *v35 = v93;

        _os_log_impl(&dword_24D2B1000, v32, v33, "ðŸ§­ FMAVPlayerView%@: can't play video", v34, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v35, -1, -1);
        MEMORY[0x253326010](v34, -1, -1);
      }
      else
      {

        unint64_t v53 = (void *)v93;
      }
      return;
    }
    id v50 = *(id *)(v49 + 32);
  }
  unint64_t v51 = v50;
  swift_bridgeObjectRelease();
  id v52 = objc_msgSend(v51, sel_assetTrack);

  if (v52)
  {
    objc_msgSend(v52, sel_timeRange);
  }
LABEL_34:
  __int16 v55 = *(void **)&v24[v41];
  if (v55)
  {
    id v56 = v55;
    uint64_t v57 = sub_24D39CF70();
    unsigned int v59 = v58;
    uint64_t v61 = v60;
    unint64_t v62 = HIDWORD(v58);
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v63 = (void *)sub_24D39CE90();
    uint64_t v64 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v96 = sub_24D31A7B4;
    uint64_t v97 = v64;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v95 = sub_24D3184B0;
    *((void *)&v95 + 1) = &unk_26FF87F68;
    int v65 = _Block_copy(&aBlock);
    swift_release();
    *(void *)&long long aBlock = v57;
    *((void *)&aBlock + 1) = __PAIR64__(v62, v59);
    uint64_t v24 = v91;
    *(void *)&long long v95 = v61;
    id v66 = objc_msgSend(v56, sel_addPeriodicTimeObserverForInterval_queue_usingBlock_, &aBlock, v63, v65);
    _Block_release(v65);

    sub_24D39D0C0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long aBlock = 0u;
    long long v95 = 0u;
  }
  uint64_t v67 = v84;
  uint64_t v68 = (uint64_t)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerTimeObserver];
  swift_beginAccess();
  sub_24D3049DC((uint64_t)&aBlock, v68);
  swift_endAccess();
  uint64_t v69 = *(void **)&v24[v41];
  if (v69)
  {
    *(void *)&long long aBlock = *(void *)&v24[v41];
    swift_getKeyPath();
    uint64_t v70 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = sub_24D31A7FC;
    *(void *)(v71 + 24) = v70;
    id v72 = v69;
    uint64_t v73 = sub_24D39C720();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v73 = 0;
  }
  os_log_type_t v74 = *(void **)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation];
  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation] = v73;

  id v75 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v76 = (void *)sub_24D39CAC0();
  uint64_t v77 = self;
  id v78 = v39;
  id v79 = objc_msgSend(v77, sel_mainQueue);
  uint64_t v80 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v96 = sub_24D31A868;
  uint64_t v97 = v80;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v95 = sub_24D319408;
  *((void *)&v95 + 1) = &unk_26FF87FB8;
  uint64_t v81 = _Block_copy(&aBlock);
  swift_release();
  id v82 = objc_msgSend(v75, sel_addObserverForName_object_queue_usingBlock_, v76, v78, v79, v81);
  _Block_release(v81);

  *(void *)&v24[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerEndedObserver] = v82;
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v89, v67);
}

void sub_24D318090(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3, uint64_t a4)
{
  uint64_t v7 = a4 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x253326120](v7);
  if (v8)
  {
    uint64_t v9 = (char *)v8;
    uint64_t v10 = *(void (**)(CMTimeValue, uint64_t, CMTimeEpoch))(v8
                                                                   + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler);
    if (v10)
    {
      swift_retain();
      v10(a1, a2, a3);
      sub_24D2E44C8((uint64_t)v10);
    }
    unint64_t v11 = &v9[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info];
    if (*(void *)&v9[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info + 112])
    {
      if ((v9[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_disableAutoLoop] & 1) == 0)
      {
        CMTimeValue v12 = *((void *)v11 + 7);
        CMTimeValue v32 = *((void *)v11 + 4);
        CMTimeEpoch v33 = *((void *)v11 + 6);
        CMTimeFlags v30 = *((_DWORD *)v11 + 11);
        CMTimeScale v31 = *((_DWORD *)v11 + 10);
        uint64_t v14 = *((void *)v11 + 8);
        CMTimeEpoch v13 = *((void *)v11 + 9);
        swift_bridgeObjectRetain();
        time1.value = a1;
        *(void *)&time1.timescale = a2;
        time1.epoch = a3;
        time2.value = v12;
        *(void *)&time2.timescale = v14;
        time2.epoch = v13;
        int32_t v15 = CMTimeCompare(&time1, &time2);
        swift_bridgeObjectRelease();
        if (v15 != -1)
        {
          if (qword_2698602A0 != -1) {
            swift_once();
          }
          uint64_t v16 = sub_24D39C950();
          sub_24D2B508C(v16, (uint64_t)qword_269869FA0);
          uint64_t v17 = v9;
          uint64_t v18 = sub_24D39C930();
          os_log_type_t v19 = sub_24D39CDF0();
          if (os_log_type_enabled(v18, v19))
          {
            os_log_type_t type = v19;
            uint64_t v20 = swift_slowAlloc();
            id v21 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v20 = 138412546;
            time1.value = (CMTimeValue)v17;
            uint64_t v22 = v17;
            sub_24D39D070();
            *id v21 = v9;

            *(_WORD *)(v20 + 12) = 2048;
            sub_24D39CF80();
            time1.value = v23;
            sub_24D39D070();
            _os_log_impl(&dword_24D2B1000, v18, type, "ðŸ§­ FMAVPlayerView%@: restarting playing video (inner loop at %f)", (uint8_t *)v20, 0x16u);
            sub_24D2B7450(&qword_269861308);
            swift_arrayDestroy();
            MEMORY[0x253326010](v21, -1, -1);
            MEMORY[0x253326010](v20, -1, -1);
          }
          else
          {

            uint64_t v18 = v17;
          }

          uint64_t v24 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player;
          objc_msgSend(*(id *)((char *)&v17->isa + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player), sel_pause);
          unint64_t v25 = *(Class *)((char *)&v17->isa + v24);
          if (v25)
          {
            uint64_t v26 = swift_allocObject();
            *(void *)(v26 + 16) = v17;
            id v36 = sub_24D31A778;
            uint64_t v37 = v26;
            time1.value = MEMORY[0x263EF8330];
            *(void *)&time1.timescale = 1107296256;
            time1.epoch = (CMTimeEpoch)sub_24D31845C;
            CGAffineTransform v35 = &unk_26FF88170;
            uint64_t v27 = _Block_copy(&time1);
            uint64_t v28 = v17;
            uint64_t v9 = v25;
            swift_release();
            time1.value = v32;
            time1.timescale = v31;
            time1.flags = v30;
            time1.epoch = v33;
            objc_msgSend(v9, sel_seekToTime_completionHandler_, &time1, v27);

            _Block_release(v27);
          }
          else
          {
            uint64_t v9 = (char *)v17;
          }
        }
      }
    }
  }
}

uint64_t sub_24D31845C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_24D3184B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(v2, v3, v4);
  return swift_release();
}

void sub_24D31851C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x253326120](v4);
  if (!v5) {
    return;
  }
  id v6 = (id)v5;
  if (!a1)
  {
LABEL_12:

    return;
  }
  id v7 = a1;
  if (objc_msgSend(v7, sel_status) != (id)1)
  {

    goto LABEL_12;
  }
  if (qword_2698602A0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_24D39C950();
  sub_24D2B508C(v8, (uint64_t)qword_269869FA0);
  uint64_t v9 = v6;
  uint64_t v10 = sub_24D39C930();
  os_log_type_t v11 = sub_24D39CDF0();
  if (os_log_type_enabled(v10, v11))
  {
    CMTimeValue v12 = (uint8_t *)swift_slowAlloc();
    id v40 = (void *)swift_slowAlloc();
    *(_DWORD *)CMTimeValue v12 = 138412290;
    long long aBlock = (uint8_t *)v9;
    CMTimeEpoch v13 = v9;
    sub_24D39D070();
    *id v40 = v6;

    _os_log_impl(&dword_24D2B1000, v10, v11, "ðŸ§­ FMAVPlayerView%@: ready to play video", v12, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v40, -1, -1);
    MEMORY[0x253326010](v12, -1, -1);
  }
  else
  {

    uint64_t v10 = v9;
  }

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v7;
  int32_t v15 = (uint8_t **)((char *)v9 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_time);
  if (*((unsigned char *)&v9[3].isa + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_time))
  {
    id v6 = v7;
    uint64_t v16 = v9;
    sub_24D318A14(v16, v6);

    swift_release();
    goto LABEL_12;
  }
  uint64_t v17 = v15[1];
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))v15[2];
  buf = *v15;
  unint64_t v39 = (unint64_t)v17 >> 32;
  os_log_type_t v19 = v9;
  id v20 = v7;
  id v21 = v19;
  uint64_t v22 = sub_24D39C930();
  os_log_type_t v23 = sub_24D39CDF0();
  uint64_t v41 = v21;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v38 = v18;
    uint64_t v24 = swift_slowAlloc();
    unint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 138412546;
    os_log_type_t type = v23;
    uint64_t v26 = v21;
    sub_24D39D070();
    *unint64_t v25 = v6;
    uint64_t v27 = v25;

    *(_WORD *)(v24 + 12) = 2048;
    unsigned int v28 = v17;
    sub_24D39CF80();
    long long aBlock = v29;
    sub_24D39D070();
    _os_log_impl(&dword_24D2B1000, v22, type, "ðŸ§­ FMAVPlayerView%@: seek to %f sec before playing video", (uint8_t *)v24, 0x16u);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    MEMORY[0x253326010](v27, -1, -1);
    uint64_t v30 = v24;
    uint64_t v18 = v38;
    MEMORY[0x253326010](v30, -1, -1);
  }
  else
  {

    uint64_t v22 = v21;
    unsigned int v28 = v17;
  }

  uint64_t v31 = *MEMORY[0x263F010E0];
  int v32 = *(_DWORD *)(MEMORY[0x263F010E0] + 8);
  int v33 = *(_DWORD *)(MEMORY[0x263F010E0] + 12);
  uint64_t v34 = *(void *)(MEMORY[0x263F010E0] + 16);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_24D31A8B0;
  *(void *)(v35 + 24) = v14;
  __int16 v55 = sub_24D2C83A0;
  uint64_t v56 = v35;
  long long aBlock = (uint8_t *)MEMORY[0x263EF8330];
  unint64_t v52 = 1107296256;
  unint64_t v53 = sub_24D31845C;
  uint64_t v54 = &unk_26FF88080;
  id v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v50 = v34;
  long long aBlock = buf;
  unint64_t v52 = __PAIR64__(v39, v28);
  unint64_t v53 = v18;
  uint64_t v46 = v34;
  uint64_t v47 = v31;
  int v48 = v32;
  int v49 = v33;
  uint64_t v43 = v31;
  int v44 = v32;
  int v45 = v33;
  objc_msgSend(v20, sel_seekToTime_toleranceBefore_toleranceAfter_completionHandler_, &aBlock, &v47, &v43, v36);

  swift_release();
  _Block_release(v36);
}

void sub_24D318A14(unsigned char *a1, void *a2)
{
  a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isShown] = 1;
  uint64_t v4 = self;
  double v5 = *(double *)&a1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_crossDissolveDuration];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  uint64_t v17 = sub_24D31A8B8;
  uint64_t v18 = v6;
  uint64_t v13 = MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  int32_t v15 = sub_24D32194C;
  uint64_t v16 = &unk_26FF880D0;
  id v7 = _Block_copy(&v13);
  uint64_t v8 = a1;
  swift_release();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = a2;
  uint64_t v17 = sub_24D31A8CC;
  uint64_t v18 = v9;
  uint64_t v13 = MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  int32_t v15 = sub_24D31845C;
  uint64_t v16 = &unk_26FF88120;
  uint64_t v10 = _Block_copy(&v13);
  os_log_type_t v11 = v8;
  id v12 = a2;
  swift_release();
  objc_msgSend(v4, sel_animateWithDuration_animations_completion_, v7, v10, v5);
  _Block_release(v10);
  _Block_release(v7);
}

void sub_24D318BC8(int a1, char *a2, id a3)
{
  if (a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] == 1)
  {
    double v5 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_placeholderView];
    if (v5) {
      objc_msgSend(v5, sel_setAlpha_, 0.0);
    }
    uint64_t v6 = *(void (**)(uint64_t, double))&a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_showHideHandler];
    if (v6)
    {
      double v7 = *(double *)&a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_crossDissolveDuration];
      swift_retain();
      v6(1, v7);
      sub_24D2E44C8((uint64_t)v6);
    }
    objc_msgSend(a3, sel_play);
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_24D39C950();
    sub_24D2B508C(v8, (uint64_t)qword_269869FA0);
    uint64_t v17 = a2;
    uint64_t v9 = sub_24D39C930();
    os_log_type_t v10 = sub_24D39CDF0();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      id v12 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v11 = 138412290;
      uint64_t v13 = v17;
      sub_24D39D070();
      *id v12 = v17;

      uint64_t v14 = "ðŸ§­ FMAVPlayerView%@: started playing video";
LABEL_14:
      _os_log_impl(&dword_24D2B1000, v9, v10, v14, v11, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v12, -1, -1);
      MEMORY[0x253326010](v11, -1, -1);

      return;
    }
  }
  else
  {
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_24D39C950();
    sub_24D2B508C(v15, (uint64_t)qword_269869FA0);
    uint64_t v17 = a2;
    uint64_t v9 = sub_24D39C930();
    os_log_type_t v10 = sub_24D39CDF0();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      id v12 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v11 = 138412290;
      uint64_t v16 = v17;
      sub_24D39D070();
      *id v12 = v17;

      uint64_t v14 = "ðŸ§­ FMAVPlayerView%@: did not start playing video (aborted)";
      goto LABEL_14;
    }
  }
}

void sub_24D318F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x253326120](v2);
  if (v3)
  {
    uint64_t v4 = (char *)v3;
    uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player), sel_pause);
    if (v4[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_disableAutoLoop] == 1)
    {
      if (qword_2698602A0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_24D39C950();
      sub_24D2B508C(v6, (uint64_t)qword_269869FA0);
      double v7 = v4;
      uint64_t v8 = sub_24D39C930();
      os_log_type_t v9 = sub_24D39CDF0();
      if (os_log_type_enabled(v8, v9))
      {
        os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v11 = (void *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v10 = 138412290;
        long long aBlock = v7;
        id v12 = v7;
        sub_24D39D070();
        *os_log_type_t v11 = v4;

        _os_log_impl(&dword_24D2B1000, v8, v9, "ðŸ§­ FMAVPlayerView%@: will not restart playing video", v10, 0xCu);
        sub_24D2B7450(&qword_269861308);
        swift_arrayDestroy();
        MEMORY[0x253326010](v11, -1, -1);
        MEMORY[0x253326010](v10, -1, -1);
      }
      else
      {

        uint64_t v8 = v7;
      }

      os_log_type_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))((char *)&v7->isa
                                                             + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler);
      if (v19)
      {
        uint64_t v20 = *MEMORY[0x263F010E0];
        uint64_t v21 = *(void *)(MEMORY[0x263F010E0] + 8);
        uint64_t v22 = *(void *)(MEMORY[0x263F010E0] + 16);
        swift_retain();
        v19(v20, v21, v22);
        sub_24D2E44C8((uint64_t)v19);
      }
      goto LABEL_18;
    }
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_24D39C950();
    sub_24D2B508C(v13, (uint64_t)qword_269869FA0);
    double v7 = v4;
    uint64_t v14 = sub_24D39C930();
    os_log_type_t v15 = sub_24D39CDF0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      long long aBlock = v7;
      *(_DWORD *)uint64_t v16 = 138412290;
      uint64_t v18 = v7;
      sub_24D39D070();
      *uint64_t v17 = v4;

      _os_log_impl(&dword_24D2B1000, v14, v15, "ðŸ§­ FMAVPlayerView%@: restarting playing video", v16, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v17, -1, -1);
      MEMORY[0x253326010](v16, -1, -1);
    }
    else
    {

      uint64_t v14 = v7;
    }

    if (*(Class *)((char *)&v7[14].isa + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info))
    {
      swift_bridgeObjectRetain();
      sub_24D39CF80();
      uint64_t v23 = sub_24D39CF70();
      unint64_t v25 = v24;
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      unint64_t v28 = HIDWORD(v25);
      uint64_t v29 = *(void **)&v4[v5];
      if (!v29)
      {
LABEL_18:

        return;
      }
    }
    else
    {
      uint64_t v23 = *MEMORY[0x263F010E0];
      LODWORD(v25) = *(_DWORD *)(MEMORY[0x263F010E0] + 8);
      LODWORD(v28) = *(_DWORD *)(MEMORY[0x263F010E0] + 12);
      uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(MEMORY[0x263F010E0] + 16);
      uint64_t v29 = *(void **)&v4[v5];
      if (!v29) {
        goto LABEL_18;
      }
    }
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v7;
    uint64_t v37 = sub_24D31A778;
    uint64_t v38 = v30;
    long long aBlock = MEMORY[0x263EF8330];
    unint64_t v34 = 1107296256;
    uint64_t v35 = sub_24D31845C;
    id v36 = &unk_26FF88008;
    uint64_t v31 = _Block_copy(&aBlock);
    int v32 = v7;
    double v7 = v29;
    swift_release();
    long long aBlock = v23;
    unint64_t v34 = __PAIR64__(v28, v25);
    uint64_t v35 = v27;
    [v7 seekToTime:&aBlock completionHandler:v31];

    _Block_release(v31);
    goto LABEL_18;
  }
}

uint64_t sub_24D319408(uint64_t a1)
{
  uint64_t v2 = sub_24D39C6D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_24D39C6C0();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_24D3194FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t a1, uint64_t a2), char a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(a7 + 96);
  uint64_t v14 = *(void *)(a7 + 104);
  uint64_t v15 = *(void *)(a7 + 112);
  uint64_t v16 = &v7[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info];
  long long v17 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)a7;
  *((_OWORD *)v16 + 1) = v17;
  long long v18 = *(_OWORD *)(a7 + 48);
  *((_OWORD *)v16 + 2) = *(_OWORD *)(a7 + 32);
  *((_OWORD *)v16 + 3) = v18;
  long long v19 = *(_OWORD *)(a7 + 80);
  *((_OWORD *)v16 + 4) = *(_OWORD *)(a7 + 64);
  *((_OWORD *)v16 + 5) = v19;
  *((void *)v16 + 12) = v13;
  *((void *)v16 + 13) = v14;
  uint64_t v38 = v14;
  *((void *)v16 + 14) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a1;
  char v41 = a6;
  unint64_t v39 = a4;
  id v40 = a5;
  if (a6)
  {
    uint64_t v20 = *MEMORY[0x263F010E0];
    LODWORD(a4) = *(_DWORD *)(MEMORY[0x263F010E0] + 8);
    LODWORD(v21) = *(_DWORD *)(MEMORY[0x263F010E0] + 12);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(MEMORY[0x263F010E0] + 16);
  }
  else
  {
    unint64_t v21 = HIDWORD(a4);
    uint64_t v22 = a5;
    uint64_t v20 = a3;
  }
  uint64_t v23 = a3;
  if (*((void *)v16 + 14))
  {
    swift_bridgeObjectRetain();
    sub_24D39CF80();
    uint64_t v20 = sub_24D39CF70();
    a4 = v24;
    uint64_t v22 = v25;
    swift_bridgeObjectRelease();
    uint64_t v23 = a3;
    unint64_t v21 = HIDWORD(a4);
  }
  uint64_t v26 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player];
  if (v26)
  {
    uint64_t v27 = v23;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v7;
    uint64_t v46 = sub_24D31A778;
    uint64_t v47 = v28;
    uint64_t aBlock = MEMORY[0x263EF8330];
    unint64_t v43 = 1107296256;
    int v44 = sub_24D31845C;
    int v45 = &unk_26FF87F18;
    uint64_t v29 = _Block_copy(&aBlock);
    id v30 = v26;
    uint64_t v31 = v7;
    swift_release();
    uint64_t aBlock = v20;
    unint64_t v43 = __PAIR64__(v21, a4);
    int v44 = v22;
    objc_msgSend(v30, sel_seekToTime_completionHandler_, &aBlock, v29);
    _Block_release(v29);

    uint64_t v23 = v27;
  }
  int v32 = &v7[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_time];
  *(void *)int v32 = v23;
  uint64_t v33 = v38;
  *((void *)v32 + 1) = v39;
  *((void *)v32 + 2) = v40;
  v32[24] = v41 & 1;
  uint64_t v34 = v15;
  if (!v15)
  {
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v33 = v37;
    uint64_t v34 = v35;
  }
  id v36 = &v7[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
  *(void *)id v36 = v33;
  *((void *)v36 + 1) = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_24D316434();
}

void sub_24D319770()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle];
  if (!v1)
  {
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_24D39C950();
    sub_24D2B508C(v15, (uint64_t)qword_269869FA0);
    id v40 = v0;
    uint64_t v8 = sub_24D39C930();
    os_log_type_t v16 = sub_24D39CDE0();
    if (os_log_type_enabled(v8, v16))
    {
      long long v17 = (uint8_t *)swift_slowAlloc();
      long long v18 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v17 = 138412290;
      long long v19 = v40;
      sub_24D39D070();
      *long long v18 = v40;

      _os_log_impl(&dword_24D2B1000, v8, v16, "ðŸ§­ FMAVPlayerView%@: cannot load assets for nil bundle", v17, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v18, -1, -1);
      MEMORY[0x253326010](v17, -1, -1);
      goto LABEL_18;
    }
    goto LABEL_31;
  }
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName + 8];
  if (!v2)
  {
    uint64_t v30 = qword_2698602A0;
    id v40 = v1;
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_24D39C950();
    sub_24D2B508C(v31, (uint64_t)qword_269869FA0);
    int v32 = v0;
    uint64_t v33 = sub_24D39C930();
    os_log_type_t v34 = sub_24D39CDE0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      id v36 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 138412290;
      uint64_t v37 = v32;
      sub_24D39D070();
      void *v36 = v32;

      _os_log_impl(&dword_24D2B1000, v33, v34, "ðŸ§­ FMAVPlayerView%@: cannot load video for nil asset name", v35, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v36, -1, -1);
      MEMORY[0x253326010](v35, -1, -1);

      return;
    }

    goto LABEL_32;
  }
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
  p_prots = &OBJC_PROTOCOL___PRBTGroupLocalizerDelegate.prots;
  if (v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] == 1)
  {
    uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName + 8];
    if (v5)
    {
      BOOL v6 = v3 == *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName] && v2 == v5;
      if (v6 || (sub_24D39D4B0() & 1) != 0)
      {
        uint64_t v7 = qword_2698602A0;
        uint64_t v8 = v1;
        if (v7 != -1) {
          swift_once();
        }
        uint64_t v9 = sub_24D39C950();
        sub_24D2B508C(v9, (uint64_t)qword_269869FA0);
        id v40 = v0;
        os_log_type_t v10 = sub_24D39C930();
        os_log_type_t v11 = sub_24D39CDF0();
        if (os_log_type_enabled(v10, v11))
        {
          id v12 = (uint8_t *)swift_slowAlloc();
          uint64_t v13 = (void *)swift_slowAlloc();
          *(_DWORD *)id v12 = 138412290;
          uint64_t v14 = v40;
          sub_24D39D070();
          *uint64_t v13 = v40;

          _os_log_impl(&dword_24D2B1000, v10, v11, "ðŸ§­ FMAVPlayerView%@: did not start playing playing since it's already playing", v12, 0xCu);
          sub_24D2B7450(&qword_269861308);
          swift_arrayDestroy();
          MEMORY[0x253326010](v13, -1, -1);
          MEMORY[0x253326010](v12, -1, -1);

LABEL_18:
          return;
        }

LABEL_31:
LABEL_32:

        return;
      }
    }
  }
  uint64_t v20 = qword_2698602A0;
  id v21 = v1;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_24D39C950();
  sub_24D2B508C(v22, (uint64_t)qword_269869FA0);
  uint64_t v23 = v0;
  unint64_t v24 = sub_24D39C930();
  os_log_type_t v25 = sub_24D39CDF0();
  if (os_log_type_enabled(v24, v25))
  {
    id v39 = v21;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    id v41 = (id)v3;
    uint64_t v27 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 138412290;
    uint64_t v28 = v23;
    p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___PRBTGroupLocalizerDelegate + 16);
    sub_24D39D070();
    *uint64_t v27 = v23;

    id v21 = v39;
    _os_log_impl(&dword_24D2B1000, v24, v25, "ðŸ§­ FMAVPlayerView%@: will start playing video", v26, 0xCu);
    sub_24D2B7450(&qword_269861308);
    swift_arrayDestroy();
    uint64_t v29 = v27;
    uint64_t v3 = (uint64_t)v41;
    MEMORY[0x253326010](v29, -1, -1);
    MEMORY[0x253326010](v26, -1, -1);
  }
  else
  {
  }
  sub_24D317500(v3, v2, v21);
  uint64_t v38 = (uint64_t *)((char *)p_prots[440] + (void)v23);
  uint64_t *v38 = v3;
  v38[1] = v2;

  swift_bridgeObjectRelease();
}

void sub_24D319E38()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying;
  if (v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] == 1)
  {
    uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player], sel_pause);
    v0[v2] = 0;
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_24D39C950();
    sub_24D2B508C(v4, (uint64_t)qword_269869FA0);
    uint64_t v5 = v0;
    BOOL v6 = sub_24D39C930();
    os_log_type_t v7 = sub_24D39CDF0();
    if (os_log_type_enabled(v6, v7))
    {
      id v35 = (id)v3;
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      *(void *)&long long aBlock = v5;
      os_log_type_t v10 = v5;
      sub_24D39D070();
      *uint64_t v9 = v5;

      _os_log_impl(&dword_24D2B1000, v6, v7, "ðŸ§­ FMAVPlayerView%@: stopped playing video", v8, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v9, -1, -1);
      os_log_type_t v11 = v8;
      uint64_t v3 = (uint64_t)v35;
      MEMORY[0x253326010](v11, -1, -1);
    }
    else
    {
    }
    long long v18 = *(void **)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation];
    *(void *)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation] = 0;

    uint64_t v19 = (uint64_t)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerTimeObserver];
    swift_beginAccess();
    sub_24D304BCC(v19, (uint64_t)&v42);
    if (*((void *)&v43 + 1))
    {
      sub_24D3059C0(&v42, &aBlock);
      uint64_t v20 = *(void **)&v1[v3];
      if (v20)
      {
        sub_24D2B8A34(&aBlock, (uint64_t)v39);
        id v21 = v20;
        objc_msgSend(v21, sel_removeTimeObserver_, sub_24D39D4A0());

        swift_unknownObjectRelease();
      }
      long long v42 = 0u;
      long long v43 = 0u;
      swift_beginAccess();
      sub_24D3049DC((uint64_t)&v42, v19);
      swift_endAccess();
      sub_24D2B6E58((uint64_t)&aBlock);
    }
    else
    {
      sub_24D2BC948((uint64_t)&v42);
    }
    uint64_t v22 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerEndedObserver;
    uint64_t v23 = *(void *)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerEndedObserver];
    if (v23)
    {
      unint64_t v24 = self;
      swift_unknownObjectRetain();
      id v25 = objc_msgSend(v24, sel_defaultCenter);
      objc_msgSend(v25, sel_removeObserver_, v23);

      *(void *)&v5[v22] = 0;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t v26 = *(void (**)(void, double))&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_showHideHandler];
    if (v26)
    {
      swift_retain();
      v26(0, 0.0);
      sub_24D2E44C8((uint64_t)v26);
    }
    uint64_t v27 = self;
    double v28 = *(double *)&v5[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_crossDissolveDuration];
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v5;
    id v40 = sub_24D31A6FC;
    uint64_t v41 = v29;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v38 = sub_24D32194C;
    id v39 = &unk_26FF87E78;
    uint64_t v30 = _Block_copy(&aBlock);
    uint64_t v31 = v5;
    swift_release();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v31;
    id v40 = sub_24D31A770;
    uint64_t v41 = v32;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v38 = sub_24D31845C;
    id v39 = &unk_26FF87EC8;
    uint64_t v33 = _Block_copy(&aBlock);
    os_log_type_t v34 = v31;
    swift_release();
    objc_msgSend(v27, sel_animateWithDuration_animations_completion_, v30, v33, v28);
    _Block_release(v33);
    _Block_release(v30);
  }
  else
  {
    if (qword_2698602A0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_24D39C950();
    sub_24D2B508C(v12, (uint64_t)qword_269869FA0);
    id v36 = v0;
    uint64_t v13 = sub_24D39C930();
    os_log_type_t v14 = sub_24D39CDF0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138412290;
      *(void *)&long long aBlock = v36;
      long long v17 = v36;
      sub_24D39D070();
      *os_log_type_t v16 = v36;

      _os_log_impl(&dword_24D2B1000, v13, v14, "ðŸ§­ FMAVPlayerView%@: did not stop playing video since it's not playing", v15, 0xCu);
      sub_24D2B7450(&qword_269861308);
      swift_arrayDestroy();
      MEMORY[0x253326010](v16, -1, -1);
      MEMORY[0x253326010](v15, -1, -1);
    }
    else
    {
    }
  }
}

void sub_24D31A498(uint64_t a1, unsigned char *a2)
{
  a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isShown] = 0;
  if ((a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] & 1) == 0)
  {
    v6.receiver = a2;
    v6.super_class = (Class)type metadata accessor for FMAVPlayerView();
    id v3 = objc_msgSendSuper2(&v6, sel_layer);
    self;
    uint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (v4) {
      objc_msgSend(v4, sel_setPlayer_, 0);
    }

    uint64_t v5 = *(void **)&a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player];
    *(void *)&a2[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player] = 0;
  }
}

uint64_t type metadata accessor for FMAVPlayerView()
{
  return self;
}

void sub_24D31A608(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  uint64_t v9 = sub_24D39CAF0();
  uint64_t v11 = v10;
  swift_retain();
  id v13 = a2;
  id v12 = a5;
  v8(a2, v9, v11, a4, a5);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_24D31A6C4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_24D31A6FC()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_placeholderView];
  if (v2) {
    objc_msgSend(v2, sel_setAlpha_, 1.0);
  }
  return objc_msgSend(v1, sel_setAlpha_, 0.0);
}

uint64_t sub_24D31A758(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D31A768()
{
  return swift_release();
}

void sub_24D31A770(uint64_t a1)
{
  sub_24D31A498(a1, *(unsigned char **)(v1 + 16));
}

uint64_t sub_24D31A77C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24D31A7B4(CMTimeValue a1, uint64_t a2, CMTimeEpoch a3)
{
  sub_24D318090(a1, a2, a3, v3);
}

char *sub_24D31A7BC()
{
  return sel_status;
}

id sub_24D31A7C8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_status);
  *a2 = result;
  return result;
}

void sub_24D31A7FC(void *a1, uint64_t a2)
{
  sub_24D31851C(a1, a2, v2);
}

uint64_t sub_24D31A804()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D31A83C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_24D31A868(uint64_t a1)
{
  sub_24D318F30(a1, v1);
}

uint64_t sub_24D31A870()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_24D31A8B0()
{
  sub_24D318A14(*(unsigned char **)(v0 + 16), *(void **)(v0 + 24));
}

id sub_24D31A8B8()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
}

void sub_24D31A8CC(int a1)
{
  sub_24D318BC8(a1, *(char **)(v1 + 16), *(id *)(v1 + 24));
}

id sub_24D31A8D4()
{
  return objc_msgSend(*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player), sel_play);
}

uint64_t sub_24D31A8F0(void *a1, uint64_t a2, uint64_t a3, int a4, void *a5)
{
  return sub_24D3168F4(a1, a2, a3, a4, a5, *(void **)(v5 + 16));
}

void sub_24D31A8F8()
{
  sub_24D3171FC(v0);
}

uint64_t sub_24D31A900()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

void sub_24D31A950()
{
  sub_24D316BF0(*(char **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_24D31A964(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24D31A9AC()
{
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetBundle] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_info];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((void *)v1 + 14) = 0;
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetManager;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6C218]), sel_init);
  uint64_t v3 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_time];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  *((void *)v3 + 2) = 0;
  v3[24] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_player] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerStartedObservation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerEndedObserver] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playerTimeObserver];
  *uint64_t v4 = 0u;
  v4[1] = 0u;
  uint64_t v5 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingAssetName];
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_deviceAssetRequestWatchDogWorkItem] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isPlaying] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_isShown] = 0;
  v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_disableAutoLoop] = 0;
  objc_super v6 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_assetName];
  *objc_super v6 = 0;
  v6[1] = 0;
  os_log_type_t v7 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_playingHandler];
  *os_log_type_t v7 = 0;
  v7[1] = 0;
  uint64_t v8 = &v0[OBJC_IVAR____TtC11FMFindingUI14FMAVPlayerView_showHideHandler];
  *uint64_t v8 = 0;
  v8[1] = 0;

  sub_24D39D2B0();
  __break(1u);
}

__n128 initializeWithCopy for FMPFSKPatternNodeStyle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t getEnumTagSinglePayload for FMPFSKPatternNodeStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 208)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFSKPatternNodeStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 208) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKPatternNodeStyle()
{
  return &type metadata for FMPFSKPatternNodeStyle;
}

void destroy for FMPFSKPatternNodeConfig(uint64_t a1)
{
  if (*(void *)(a1 + 128))
  {
    swift_bridgeObjectRelease();
    long long v2 = *(void **)(a1 + 136);
  }
}

uint64_t initializeWithCopy for FMPFSKPatternNodeConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v4 = *(void *)(a2 + 128);
  if (v4)
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v4;
    int v5 = *(void **)(a2 + 136);
    *(void *)(a1 + 136) = v5;
    long long v6 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v6;
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    swift_bridgeObjectRetain();
    id v7 = v5;
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v8;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
  }
  return a1;
}

uint64_t assignWithCopy for FMPFSKPatternNodeConfig(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = (_OWORD *)(a1 + 120);
  id v12 = (long long *)(a2 + 120);
  uint64_t v13 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128))
  {
    if (v13)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      os_log_type_t v14 = *(void **)(a2 + 136);
      uint64_t v15 = *(void **)(a1 + 136);
      *(void *)(a1 + 136) = v14;
      id v16 = v14;

      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      long long v17 = *(_OWORD *)(a2 + 160);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = v17;
    }
    else
    {
      sub_24D31AF84(a1 + 120);
      long long v22 = v12[1];
      long long v21 = v12[2];
      long long v23 = *v12;
      *(_OWORD *)((char *)v11 + 41) = *(long long *)((char *)v12 + 41);
      v11[1] = v22;
      _OWORD v11[2] = v21;
      *uint64_t v11 = v23;
    }
  }
  else if (v13)
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    long long v18 = *(void **)(a2 + 136);
    *(void *)(a1 + 136) = v18;
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    long long v19 = *(_OWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = v19;
    swift_bridgeObjectRetain();
    id v20 = v18;
  }
  else
  {
    long long v24 = *v12;
    long long v25 = *(_OWORD *)(a2 + 136);
    long long v26 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
    *(_OWORD *)(a1 + 136) = v25;
    *(_OWORD *)(a1 + 152) = v26;
    *uint64_t v11 = v24;
  }
  return a1;
}

uint64_t sub_24D31AF84(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for FMPFSKPatternNodeConfig(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for FMPFSKPatternNodeConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  long long v4 = (_OWORD *)(a1 + 120);
  long long v5 = (_OWORD *)(a2 + 120);
  if (!*(void *)(a1 + 128)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 128);
  if (!v7)
  {
    sub_24D31AF84((uint64_t)v4);
LABEL_5:
    long long v9 = v5[1];
    *long long v4 = *v5;
    v4[1] = v9;
    _OWORD v4[2] = v5[2];
    *(_OWORD *)((char *)v4 + 41) = *(_OWORD *)((char *)v5 + 41);
    return a1;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMPFSKPatternNodeConfig(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 177)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 128);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFSKPatternNodeConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 176) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 177) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 177) = 0;
    }
    if (a2) {
      *(void *)(result + 128) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKPatternNodeConfig()
{
  return &type metadata for FMPFSKPatternNodeConfig;
}

id sub_24D31B21C()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_whiteColor);
  id v2 = objc_msgSend(v0, sel_whiteColor);
  id v3 = objc_msgSend(v2, sel_colorWithAlphaComponent_, 0.4);

  id result = objc_msgSend(v0, sel_whiteColor);
  qword_26986A040 = (uint64_t)v1;
  qword_26986A048 = (uint64_t)v3;
  qword_26986A050 = (uint64_t)result;
  qword_26986A058 = 0x3FE0000000000000;
  return result;
}

id sub_24D31B2D4()
{
  if (qword_269860350 != -1) {
    swift_once();
  }
  id v1 = (id)qword_26986A428;
  xmmword_26986A060 = xmmword_24D3A21C0;
  byte_26986A070 = 0;
  qword_26986A078 = 5;
  LOBYTE(xmmword_26986A080) = 0;
  *((void *)&xmmword_26986A080 + 1) = 120;
  byte_26986A090 = 0;
  qword_26986A098 = 0;
  LOBYTE(xmmword_26986A0A0) = 0;
  *((void *)&xmmword_26986A0A0 + 1) = 0x4059000000000000;
  byte_26986A0B0 = 0;
  qword_26986A0B8 = 1;
  LOBYTE(xmmword_26986A0C0) = 0;
  *((void *)&xmmword_26986A0C0 + 1) = 0;
  byte_26986A0D0 = 0;
  qword_26986A0D8 = qword_26986A418;
  unk_26986A0E0 = unk_26986A420;
  qword_26986A0E8 = qword_26986A428;
  xmmword_26986A0F0 = *(_OWORD *)&qword_26986A430;
  xmmword_26986A100 = *(long long *)((char *)&xmmword_26986A438 + 8);
  byte_26986A110 = byte_26986A450;
  swift_bridgeObjectRetain();
  return v1;
}

double sub_24D31B3E0()
{
  if (qword_2698602B8 != -1) {
    swift_once();
  }
  *(void *)&xmmword_26986A118 = 0x3FE0000000000000;
  BYTE8(xmmword_26986A118) = 0;
  xmmword_26986A128 = xmmword_24D3A21D0;
  *(void *)&xmmword_26986A138 = 0x3FEAAAAAAAAAAAABLL;
  BYTE8(xmmword_26986A138) = 0;
  xmmword_26986A148 = xmmword_24D3A21E0;
  xmmword_26986A158 = xmmword_24D3A21F0;
  xmmword_26986A168 = xmmword_24D3A2200;
  xmmword_26986A178 = xmmword_24D3A2210;
  xmmword_26986A188 = xmmword_24D3A2220;
  xmmword_26986A198 = xmmword_24D3A2230;
  xmmword_26986A1A8 = xmmword_24D3A2240;
  *(void *)&xmmword_26986A1B8 = 0x3FECCCCCCCCCCCCDLL;
  *((void *)&xmmword_26986A1B8 + 1) = *((void *)&xmmword_269861470 + 1);
  double result = 0.5;
  xmmword_26986A1C8 = xmmword_24D3A2250;
  xmmword_26986A1D8 = xmmword_24D3A2260;
  return result;
}

double sub_24D31B4DC()
{
  if (qword_2698602C0 != -1) {
    swift_once();
  }
  *(void *)&xmmword_26986A1E8 = 0;
  BYTE8(xmmword_26986A1E8) = 1;
  xmmword_26986A1F8 = xmmword_24D3A2270;
  *(void *)&xmmword_26986A208 = 0x3FEAAAAAAAAAAAABLL;
  BYTE8(xmmword_26986A208) = 1;
  xmmword_26986A218 = xmmword_24D3A21E0;
  xmmword_26986A228 = xmmword_24D3A2280;
  __asm { FMOV            V1.2D, #1.0 }
  xmmword_26986A238 = _Q1;
  xmmword_26986A248 = _Q1;
  xmmword_26986A258 = _Q1;
  xmmword_26986A268 = xmmword_24D3A2230;
  xmmword_26986A278 = xmmword_24D3A2240;
  *(void *)&xmmword_26986A288 = 0x3FECCCCCCCCCCCCDLL;
  *((void *)&xmmword_26986A288 + 1) = *((void *)&xmmword_2698614C8 + 1);
  double result = 0.6;
  xmmword_26986A298 = xmmword_24D3A2290;
  xmmword_26986A2A8 = xmmword_24D3A22A0;
  return result;
}

char *sub_24D31B5C4(unsigned __int8 *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, double a13, double a14, double a15, double a16, char a17, double a18, char a19, uint64_t a20,uint64_t a21,char a22,double a23,double a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34)
{
  int v36 = *a1;
  uint64_t v37 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode;
  id v38 = objc_allocWithZone((Class)type metadata accessor for FMPFSKNode());
  id v39 = v30;
  id v40 = v38;
  int v41 = v36;
  *(void *)&v30[v37] = objc_msgSend(v40, sel_init);
  *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbScatterRandomOffsetFrameCounter] = 0;
  long long v42 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition];
  *(void *)long long v42 = 0;
  *((void *)v42 + 1) = 0;
  char v43 = 1;
  v42[16] = 1;
  int v44 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialExplodedPosition];
  *(void *)int v44 = 0;
  *((void *)v44 + 1) = 0;
  v44[16] = 1;
  int v45 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength];
  *(void *)int v45 = 0;
  v45[8] = 1;
  uint64_t v46 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength];
  *(void *)uint64_t v46 = 0;
  uint64_t v46[8] = 1;
  *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction] = 0;
  uint64_t v47 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition];
  *(void *)uint64_t v47 = 0;
  *((void *)v47 + 1) = 0;
  v47[16] = 1;
  int v48 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_relativeHeading];
  *(void *)int v48 = 0;
  v48[8] = 1;
  uint64_t v168 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetXSpring;
  *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetXSpring] = 0;
  uint64_t v169 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetYSpring;
  *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetYSpring] = 0;
  uint64_t v170 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactorSpring;
  *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactorSpring] = 0;
  int v49 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition];
  *(void *)int v49 = 0;
  *((void *)v49 + 1) = 0;
  v49[16] = 1;
  uint64_t v50 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition];
  *(void *)uint64_t v50 = 0;
  *((void *)v50 + 1) = 0;
  v50[16] = 1;
  unint64_t v51 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition];
  *(void *)unint64_t v51 = 0;
  *((void *)v51 + 1) = 0;
  v51[16] = 1;
  v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_useAlternateScaling] = 0;
  unint64_t v52 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationTimingFunction];
  *(_OWORD *)unint64_t v52 = 0u;
  *((_OWORD *)v52 + 1) = 0u;
  v52[32] = 1;
  unint64_t v53 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedToExplodedFactor];
  *(void *)unint64_t v53 = 0;
  uint64_t v176 = v53;
  v53[8] = 1;
  uint64_t v54 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor];
  *(void *)uint64_t v54 = 0;
  v175 = v54;
  v54[8] = 1;
  __int16 v55 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_scalingFactor];
  *(void *)__int16 v55 = 0;
  uint64_t v174 = v55;
  v55[8] = 1;
  v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceScatterOffset] = 1;
  uint64_t v56 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffset];
  *(void *)uint64_t v56 = 0;
  *((void *)v56 + 1) = 0;
  int v171 = v56;
  v56[16] = 1;
  uint64_t v57 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset];
  *(void *)uint64_t v57 = 0;
  *((void *)v57 + 1) = 0;
  v57[16] = 1;
  v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceHomingFactor] = 1;
  unint64_t v58 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactor];
  *(void *)unint64_t v58 = 0;
  v58[8] = 1;
  unsigned int v59 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor];
  *(void *)unsigned int v59 = 0;
  v59[8] = 1;
  uint64_t v60 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_trackOffset];
  *(void *)uint64_t v60 = 0;
  v60[8] = 1;
  *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedAbsoluteHeading] = 0;
  v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_experienceType] = v36;
  if (v36 == 1)
  {
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    char v65 = 0;
    LOBYTE(v191[0]) = 1;
    LOBYTE(v190[0]) = 1;
    LOBYTE(v189[0]) = 1;
    LOBYTE(v188[0]) = 1;
    LOBYTE(v187[0]) = 1;
    LOBYTE(v186[0]) = 0;
    LOBYTE(v185[0]) = 0;
    LOBYTE(v184[0]) = 0;
    LOBYTE(v183[0]) = 0;
    LOBYTE(v182[0]) = 0;
    char v181 = 0;
    uint64_t v66 = 0x4010000000000000;
    char v67 = 0;
    uint64_t v68 = 0x3FF8000000000000;
    uint64_t v69 = 0x3FF0000000000000;
    char v70 = 0;
    uint64_t v71 = 0x4004000000000000;
    double v72 = 0.0;
    double v73 = 0.6;
    char v74 = 0;
  }
  else
  {
    uint64_t v71 = 0;
    uint64_t v69 = 0;
    uint64_t v68 = 0;
    uint64_t v66 = 0;
    LOBYTE(v191[0]) = 0;
    LOBYTE(v190[0]) = 0;
    LOBYTE(v189[0]) = 0;
    LOBYTE(v188[0]) = 0;
    LOBYTE(v187[0]) = 0;
    LOBYTE(v186[0]) = 1;
    LOBYTE(v185[0]) = 1;
    LOBYTE(v184[0]) = 1;
    LOBYTE(v183[0]) = 1;
    LOBYTE(v182[0]) = 1;
    char v181 = 1;
    char v65 = 1;
    char v67 = 1;
    uint64_t v64 = 0x3FF0000000000000;
    uint64_t v63 = 0x3FE6666666666666;
    uint64_t v61 = 0x3FB999999999999ALL;
    char v70 = 1;
    double v73 = 1.0;
    double v72 = 0.75;
    uint64_t v62 = 30;
    char v74 = 1;
    char v43 = 0;
  }
  id v75 = &v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style];
  *(_OWORD *)id v75 = xmmword_24D3A2300;
  *((_OWORD *)v75 + 1) = xmmword_24D3A2310;
  __asm { FMOV            V2.2D, #0.5 }
  *((_OWORD *)v75 + 2) = _Q2;
  *((void *)v75 + 6) = 16;
  *((double *)v75 + 7) = v72;
  *((_OWORD *)v75 + 4) = xmmword_24D3A2320;
  *((_OWORD *)v75 + 5) = xmmword_24D3A2330;
  *((double *)v75 + 12) = v73;
  *((void *)v75 + 13) = 0x3FF0000000000000;
  *((void *)v75 + 14) = v61;
  v75[120] = v43;
  *(_DWORD *)(v75 + 121) = v191[0];
  *((_DWORD *)v75 + 31) = *(_DWORD *)((char *)v191 + 3);
  *((void *)v75 + 16) = v62;
  v75[136] = v43;
  *((_DWORD *)v75 + 35) = *(_DWORD *)((char *)v190 + 3);
  *(_DWORD *)(v75 + 137) = v190[0];
  *((void *)v75 + 18) = 0;
  v75[152] = v43;
  *((_DWORD *)v75 + 39) = *(_DWORD *)((char *)v189 + 3);
  *(_DWORD *)(v75 + 153) = v189[0];
  *((void *)v75 + 20) = v63;
  v75[168] = v43;
  *((_DWORD *)v75 + 43) = *(_DWORD *)((char *)v188 + 3);
  *(_DWORD *)(v75 + 169) = v188[0];
  *((void *)v75 + 22) = v64;
  v75[184] = v43;
  int v81 = v187[0];
  *((_DWORD *)v75 + 47) = *(_DWORD *)((char *)v187 + 3);
  *(_DWORD *)(v75 + 185) = v81;
  *((void *)v75 + 24) = v69;
  v75[200] = v65;
  int v82 = v186[0];
  *((_DWORD *)v75 + 51) = *(_DWORD *)((char *)v186 + 3);
  *(_DWORD *)(v75 + 201) = v82;
  *((void *)v75 + 26) = v69;
  v75[216] = v65;
  int v83 = v185[0];
  *((_DWORD *)v75 + 55) = *(_DWORD *)((char *)v185 + 3);
  *(_DWORD *)(v75 + 217) = v83;
  *((void *)v75 + 28) = v71;
  v75[232] = v65;
  int v84 = v184[0];
  *((_DWORD *)v75 + 59) = *(_DWORD *)((char *)v184 + 3);
  *(_DWORD *)(v75 + 233) = v84;
  *((void *)v75 + 30) = v69;
  v75[248] = v67;
  int v85 = v183[0];
  *((_DWORD *)v75 + 63) = *(_DWORD *)((char *)v183 + 3);
  *(_DWORD *)(v75 + 249) = v85;
  *((void *)v75 + 32) = v68;
  v75[264] = v70;
  int v86 = v182[0];
  *((_DWORD *)v75 + 67) = *(_DWORD *)((char *)v182 + 3);
  *(_DWORD *)(v75 + 265) = v86;
  *((void *)v75 + 34) = 0x3FE0000000000000;
  *((void *)v75 + 35) = v66;
  v75[288] = v74;
  uint64_t v177 = v58;
  if (a8) {
    id v87 = a8;
  }
  else {
    id v87 = objc_msgSend(self, sel_whiteColor);
  }
  *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_renderingColor] = v87;
  *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedDiskRadius] = a3;
  *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralDiskRadius] = a4;
  *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_innerPeripheralDiskRadius] = a5;
  if (v41 != 1)
  {
    uint64_t v92 = qword_269860318;
    id v93 = a8;
    if (v92 != -1) {
      swift_once();
    }
    uint64_t v91 = (char *)&xmmword_26986A138 + 8;
    goto LABEL_13;
  }
  uint64_t v89 = qword_269860320;
  id v90 = a8;
  if (v89 != -1) {
    goto LABEL_67;
  }
  while (1)
  {
    uint64_t v91 = (char *)&xmmword_26986A208 + 8;
LABEL_13:
    v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle] = *v91;
    if (a30) {
      uint64_t v94 = 0;
    }
    else {
      uint64_t v94 = a29;
    }
    a30 = (char)v177;
    *(void *)uint64_t v176 = v94;
    v176[8] = 0;
    if (a32) {
      uint64_t v95 = 0;
    }
    else {
      uint64_t v95 = a31;
    }
    *(void *)v175 = v95;
    v175[8] = 0;
    if (a34) {
      uint64_t v96 = 0;
    }
    else {
      uint64_t v96 = a33;
    }
    *(void *)uint64_t v174 = v96;
    v174[8] = 0;
    *(void *)uint64_t v177 = 0;
    v177[8] = 0;
    double v97 = *(double *)&a12;
    if (a17) {
      double v97 = 1.0;
    }
    *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_minScaleFactor] = v97;
    double v98 = a18;
    if (a19) {
      double v98 = 1.0;
    }
    *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_maxScaleFactor] = v98;
    double v99 = *((double *)v75 + 8);
    double v100 = *((double *)v75 + 9);
    double v101 = v99 * (1.0 - v100);
    double v102 = 0.0;
    if (v101 < 0.0) {
      double v101 = 0.0;
    }
    *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedBrightness] = (1.0 - a2) * v101 + fmin(v99 * (v100 + 1.0), 1.0) * a2;
    double v103 = *((double *)v75 + 10);
    double v104 = *((double *)v75 + 11);
    if (v103 * (1.0 - v104) >= 0.0) {
      double v102 = v103 * (1.0 - v104);
    }
    *(double *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_nonConformedBrightness] = (1.0 - a2) * v102 + fmin(v103 * (v104 + 1.0), 1.0) * a2;
    double v105 = fmax(*((double *)v75 + 2) / 200.0 * a4, 1.0);
    if (v105 >= 0.0) {
      break;
    }
    __break(1u);
LABEL_67:
    swift_once();
  }
  sub_24D359564(-v105, v105);
  uint64_t v107 = v106;
  sub_24D359564(-v105, v105);
  uint64_t v108 = (uint64_t *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialDisturbanceScatterOffset];
  uint64_t *v108 = v107;
  v108[1] = v109;
  *(void *)int v171 = v107;
  *((void *)v171 + 1) = v109;
  v171[16] = 0;
  if ((v75[136] & 1) == 0)
  {
    uint64_t v110 = sub_24D32BAF0(v107, 0, 0x3FE0000000000000, 0);
    uint64_t v111 = *(void **)&v39[v168];
    *(void *)&v39[v168] = v110;

    if (v171[16]) {
      uint64_t v112 = 0;
    }
    else {
      uint64_t v112 = *((void *)v171 + 1);
    }
    uint64_t v113 = sub_24D32BAF0(v112, v171[16], 0x3FE0000000000000, 0);
    uint64_t v114 = *(void **)&v39[v169];
    *(void *)&v39[v169] = v113;

    uint64_t v115 = sub_24D32B3C8(*(void *)v177, v177[8], 0x3F847AE147AE147BLL, 0, 0, 1);
    uint64_t v116 = *(void **)&v39[v170];
    *(void *)&v39[v170] = v115;
  }
  *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_headingSpring] = sub_24D32B738(0, 0, *(uint64_t *)&a2, 0, 0x3FE0000000000000, 0);
  *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_noiseSubSpring] = sub_24D32B080(0, 0, 0, 1);
  if (a11)
  {
    type metadata accessor for FMPFView();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v118 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    swift_bridgeObjectRetain();
    uint64_t v119 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
    id v120 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v119, v118, 0);

    if (v120)
    {
      id v121 = objc_msgSend(self, sel_textureWithImage_, v120);
      swift_bridgeObjectRelease();

      id v118 = v120;
    }
    else
    {
      id v121 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F17C38]), sel_init);
      swift_bridgeObjectRelease();
    }

    type metadata accessor for FMPFSKSpriteNode();
    id v127 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithTexture_, v121);
    uint64_t v128 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode;
    *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode] = v127;
    id v124 = v127;
    objc_msgSend(v124, sel_size);
    double v130 = 0.5 - 1.0 / v129 * 0.5;
    objc_msgSend(*(id *)&v39[v128], sel_size);
    double v132 = 0.5 - 1.0 / v131 * 0.5;
    objc_msgSend(*(id *)&v39[v128], sel_size);
    double v134 = 1.0 / v133;
    objc_msgSend(*(id *)&v39[v128], sel_size);
    objc_msgSend(v124, sel_setCenterRect_, v130, v132, v134, 1.0 / v135);
  }
  else
  {
    type metadata accessor for FMPFSKSpriteNode();
    id v122 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    uint64_t v123 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode;
    *(void *)&v39[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode] = v122;
    objc_msgSend(v122, sel_setTexture_, a9);
    id v124 = *(id *)&v39[v123];
    if (a9)
    {
      objc_msgSend(a9, sel_size);
    }
    else
    {
      double v126 = 0.0;
      double v125 = 0.0;
    }
    objc_msgSend(v124, sel_setSize_, v125, v126);
  }

  v180.receiver = v39;
  v180.super_class = (Class)type metadata accessor for FMPFSKPatternFragmentNode();
  uint64_t v136 = (char *)objc_msgSendSuper2(&v180, sel_init);
  __int16 v137 = v136;
  if (a7)
  {
    char v138 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v138 = 0;
  }
  objc_msgSend(v136, sel_setName_, v138);

  uint64_t v139 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode;
  objc_msgSend(v136, sel_addChild_, *(void *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode]);
  uint64_t v140 = *(void **)&v136[v139];
  uint64_t v141 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode;
  objc_msgSend(v140, sel_addChild_, *(void *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode]);
  objc_msgSend(*(id *)&v136[v141], sel_setColorBlendFactor_, 1.0);
  double v142 = a23;
  double v143 = a24;
  char v144 = a25 & 1;
  if (a25)
  {
    double v143 = 0.0;
    double v142 = 0.0;
  }
  objc_msgSend(*(id *)&v136[v141], sel_setPosition_, v142, v143);
  uint64_t v145 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition];
  *(void *)uint64_t v145 = a20;
  *((void *)v145 + 1) = a21;
  v145[16] = a22 & 1;
  uint64_t v146 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition];
  *(double *)uint64_t v146 = a23;
  *((double *)v146 + 1) = a24;
  v146[16] = v144;
  long long v147 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition];
  *(void *)long long v147 = a26;
  *((void *)v147 + 1) = a27;
  v147[16] = a28 & 1;
  long long v148 = (double *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition];
  double *v148 = a23;
  v148[1] = a24;
  *((unsigned char *)v148 + 16) = v144;
  uint64_t v149 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialExplodedPosition];
  *(void *)uint64_t v149 = a20;
  *((void *)v149 + 1) = a21;
  v149[16] = a22 & 1;
  uint64_t v150 = sub_24D31C340();
  if (v152) {
    uint64_t v153 = *(void *)&a23;
  }
  else {
    uint64_t v153 = v150;
  }
  if (v152) {
    uint64_t v154 = *(void *)&a24;
  }
  else {
    uint64_t v154 = v151;
  }
  uint64_t v155 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition];
  *(void *)uint64_t v155 = v153;
  *((void *)v155 + 1) = v154;
  v155[16] = v152 & a25 & 1;
  uint64_t v156 = sub_24D31C828(*(void *)v147, *((void *)v147 + 1), v147[16], v153, v154, v152 & a25 & 1);
  v157 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength];
  *(void *)v157 = v156;
  v157[8] = v158 & 1;
  uint64_t v159 = sub_24D31D694(*(void *)v155, *((void *)v155 + 1), v155[16], *(void *)v146, *((void *)v146 + 1), v146[16]);
  uint64_t v160 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength];
  *(void *)uint64_t v160 = v159;
  v160[8] = v161 & 1;
  uint64_t v162 = (double *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor];
  if ((v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8] & 1) == 0) {
    sub_24D352FE4(*v162);
  }
  if ((v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_scalingFactor + 8] & 1) == 0) {
    sub_24D353268(*(double *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_scalingFactor]);
  }
  if ((v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffset + 16] & 1) == 0)
  {
    uint64_t v163 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset];
    *(_OWORD *)uint64_t v163 = *(_OWORD *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffset];
    v163[16] = 0;
    if (((_BYTE)v162[1] & 1) == 0) {
      sub_24D352FE4(*v162);
    }
  }
  if ((v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactor + 8] & 1) == 0)
  {
    uint64_t v164 = &v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor];
    *(void *)uint64_t v164 = *(void *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactor];
    v164[8] = 0;
  }
  double v165 = *(double *)&v136[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_nonConformedBrightness];
  int v166 = v136;
  objc_msgSend(v166, sel_setZPosition_, v165);

  return v166;
}

uint64_t sub_24D31C340()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16)) {
    goto LABEL_9;
  }
  double v1 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
  if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle))
  {
    uint64_t v3 = swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  char v2 = sub_24D39D4B0();
  uint64_t v3 = swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
LABEL_9:
    *(double *)&uint64_t result = 0.0;
    return result;
  }
LABEL_6:
  double v4 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_innerPeripheralDiskRadius);
  double v5 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style);
  sub_24D358488(v3, 0.0, 3.14159265);
  double v7 = v6 * 0.25;
  double v8 = 2.0;
  if (v1 > 0.0) {
    double v8 = -2.0;
  }
  *(double *)&uint64_t result = v4 * __sincos_stret(v5 * (v8 * v7) + 1.57079633).__cosval;
  return result;
}

uint64_t sub_24D31C4A0()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle;
  if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle)) {
    return swift_bridgeObjectRelease();
  }
  char v2 = sub_24D39D4B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2) {
    return result;
  }
  if (*(unsigned char *)(v0 + v1) && *(unsigned char *)(v0 + v1) == 1) {
    return swift_bridgeObjectRelease();
  }
  sub_24D39D4B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D31C68C(double a1)
{
  uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle)
    && *(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle) == 1)
  {
    swift_bridgeObjectRelease();
    return *(void *)&a1;
  }
  char v4 = sub_24D39D4B0();
  swift_bridgeObjectRelease();
  if (v4) {
    return *(void *)&a1;
  }
  if (*(unsigned char *)(v1 + v3))
  {
    char v6 = sub_24D39D4B0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_24D31C828(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3 & 1) != 0 || (a6) {
    return 0;
  }
  double v7 = *(double *)&a1;
  uint64_t v9 = 1;
  *(double *)&uint64_t v10 = COERCE_DOUBLE(sub_24D31C68C(*(double *)&a1));
  char v12 = v11;
  uint64_t v13 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_travelingStyle;
  double v28 = *(double *)&v10;
  double v15 = v14;
  double v16 = 0.0;
  double v17 = *(double *)&a2;
  double v18 = v7;
  do
  {
    double v23 = (double)v9 * 0.0625;
    double v24 = 1.0 - v23;
    if (!*(unsigned char *)(v6 + v13)) {
      goto LABEL_10;
    }
    char v25 = sub_24D39D4B0();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_12;
    }
    if (*(unsigned char *)(v6 + v13) && *(unsigned char *)(v6 + v13) == 1)
    {
LABEL_10:
      swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_24D39D4B0();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        goto LABEL_4;
      }
    }
LABEL_12:
    if (v12)
    {
LABEL_4:
      double v19 = v23 * *(double *)&a4 + v24 * v18;
      double v20 = v24 * v17;
      double v21 = v23 * *(double *)&a5;
      goto LABEL_5;
    }
    double v19 = v24 * (v23 * v28 + v24 * v18) + v23 * (v23 * *(double *)&a4 + v24 * v28);
    double v21 = v24 * (v23 * v15 + v24 * v17);
    double v20 = v23 * (v23 * *(double *)&a5 + v24 * v15);
LABEL_5:
    double v22 = v21 + v20;
    double v16 = v16 + sqrt((v22 - *(double *)&a2) * (v22 - *(double *)&a2) + (v19 - v7) * (v19 - v7));
    ++v9;
    *(double *)&a2 = v22;
    double v7 = v19;
  }
  while (v9 != 17);
  return *(void *)&v16;
}

void sub_24D31CAB4(void *a1)
{
  if ((objc_msgSend(v1, sel_isHidden) & 1) == 0)
  {
    uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode]
       + OBJC_IVAR____TtC11FMFindingUI16FMPFSKSpriteNode_brightness;
    if ((*(unsigned char *)(v3 + 8) & 1) == 0)
    {
      uint64_t v4 = *(void *)v3;
      if (!UIAccessibilityIsReduceMotionEnabled())
      {
        double v5 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode];
        uint64_t v6 = (void *)swift_allocObject();
        _OWORD v6[2] = a1;
        v6[3] = v4;
        v6[4] = v1;
        void v11[4] = sub_24D31DA20;
        v11[5] = v6;
        v11[0] = MEMORY[0x263EF8330];
        v11[1] = 1107296256;
        _OWORD v11[2] = sub_24D32194C;
        v11[3] = &unk_26FF88408;
        double v7 = _Block_copy(v11);
        id v8 = v5;
        id v9 = a1;
        uint64_t v10 = v1;
        swift_release();
        objc_msgSend(v8, sel_runAction_completion_, v9, v7);
        _Block_release(v7);
      }
    }
  }
}

void sub_24D31CC0C()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_dotNode)
       + OBJC_IVAR____TtC11FMFindingUI16FMPFSKSpriteNode_brightness;
    if ((*(unsigned char *)(v2 + 8) & 1) == 0)
    {
      uint64_t v3 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction;
      if (!*(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction))
      {
        long double v5 = *(double *)v1;
        long double v4 = *((double *)v1 + 1);
        double v6 = *(double *)v2;
        char v7 = sub_24D2B7918(11);
        uint64_t v8 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style;
        double v9 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 32) * 100.0;
        if (v9 < 0.0)
        {
          __break(1u);
        }
        else
        {
          char v10 = v7;
          double v11 = hypot(v5, v4);
          double v12 = dbl_24D3A0B00[(v10 & 1) == 0];
          sub_24D358488(v13, 0.0, v9);
          id v15 = objc_msgSend(self, sel_rotateByAngle_duration_, v12 / (double)*(uint64_t *)(v8 + 48), (v11 + v11)* 3.14159265/ (*(double *)(v8 + 24)* (v14 / -100.0 + 1.0))/ (double)*(uint64_t *)(v8 + 48));
          objc_msgSend(v15, sel_setTimingMode_, 0);
          objc_msgSend(v15, sel_setSpeed_, v6 * *(double *)(v8 + 40));
          double v16 = *(void **)(v0 + v3);
          *(void *)(v0 + v3) = v15;
          id v17 = v15;

          sub_24D31CAB4(v17);
        }
      }
    }
  }
}

void sub_24D31CDD4()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction;
  if (*(void *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction])
  {
    uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode], sel_removeAllActions);
    uint64_t v3 = *(void **)&v0[v1];
    *(void *)&v0[v1] = 0;

    long double v4 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition];
    if ((v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16] & 1) == 0)
    {
      long double v5 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition];
      if ((v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition + 16] & 1) == 0)
      {
        uint64_t v7 = *(void *)v4;
        long double v6 = *((double *)v4 + 1);
        long double v9 = *(double *)v5;
        long double v8 = *((double *)v5 + 1);
        double v10 = fmod(*(double *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedAbsoluteHeading]/ 180.0* 3.14159265, 6.28318531);
        if (v10 <= 3.14159265)
        {
          if (v10 < -3.14159265) {
            double v10 = v10 + 6.28318531;
          }
        }
        else
        {
          double v10 = v10 + -6.28318531;
        }
        objc_msgSend(*(id *)&v0[v2], sel_zRotation);
        double v12 = fmod(v11, 6.28318531);
        if (v12 <= 3.14159265)
        {
          if (v12 < -3.14159265) {
            double v12 = v12 + 6.28318531;
          }
        }
        else
        {
          double v12 = v12 + -6.28318531;
        }
        double v13 = v10 + v12;
        double v14 = hypot(*(long double *)&v7, v6);
        long double v15 = atan2(v6, *(long double *)&v7);
        __double2 v16 = __sincos_stret(v13 + v15);
        *(double *)long double v4 = v14 * v16.__cosval;
        *((double *)v4 + 1) = v14 * v16.__sinval;
        v4[16] = 0;
        sub_24D31D098();
        double v17 = hypot(v9, v8);
        long double v18 = atan2(v8, v9);
        __double2 v19 = __sincos_stret(v13 + v18);
        *(double *)long double v5 = v17 * v19.__cosval;
        *((double *)v5 + 1) = v17 * v19.__sinval;
        unsigned char v5[16] = 0;
      }
    }
    objc_msgSend(*(id *)&v0[v2], sel_setZRotation_, 0.0);
    objc_msgSend(v0, sel_setZRotation_, 0.0);
    uint64_t v20 = sub_24D31C340();
    if (v22)
    {
      uint64_t v23 = *(void *)v4;
      uint64_t v24 = *((void *)v4 + 1);
      char v25 = v4[16];
    }
    else
    {
      uint64_t v23 = v20;
      uint64_t v24 = v21;
      char v25 = 0;
    }
    char v26 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition];
    *(void *)char v26 = v23;
    *((void *)v26 + 1) = v24;
    v26[16] = v25;
    uint64_t v27 = sub_24D31C828(*(void *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition], *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 8], v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16], v23, v24, v25);
    double v28 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength];
    *(void *)double v28 = v27;
    v28[8] = v29 & 1;
    uint64_t v30 = sub_24D31D694(*(void *)v26, *((void *)v26 + 1), v26[16], *(void *)v4, *((void *)v4 + 1), v4[16]);
    uint64_t v31 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength];
    *(void *)uint64_t v31 = v30;
    v31[8] = v32 & 1;
    if ((v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8] & 1) == 0)
    {
      double v33 = *(double *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor];
      sub_24D352FE4(v33);
    }
  }
}

uint64_t sub_24D31D098()
{
  uint64_t v1 = sub_24D31C340();
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 8);
    char v6 = *(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16);
  }
  else
  {
    uint64_t v4 = v1;
    uint64_t v5 = v2;
    char v6 = 0;
  }
  uint64_t v7 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition;
  *(void *)uint64_t v7 = v4;
  *(void *)(v7 + 8) = v5;
  *(unsigned char *)(v7 + 16) = v6;
  uint64_t v8 = sub_24D31C828(*(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition), *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16), v4, v5, v6);
  uint64_t v9 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength;
  *(void *)uint64_t v9 = v8;
  *(unsigned char *)(v9 + 8) = v10 & 1;
  uint64_t result = sub_24D31D694(*(void *)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16), *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition), *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16));
  uint64_t v12 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength;
  *(void *)uint64_t v12 = result;
  *(unsigned char *)(v12 + 8) = v13 & 1;
  return result;
}

__n128 sub_24D31D160()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_experienceType) != 1)
  {
    char v1 = *(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition + 16);
    uint64_t v2 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition;
    *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition);
    *(unsigned char *)(v2 + 16) = v1;
    sub_24D31D098();
    uint64_t v3 = sub_24D31C340();
    if (v5)
    {
      uint64_t v6 = *(void *)v2;
      uint64_t v7 = *(void *)(v2 + 8);
      char v8 = *(unsigned char *)(v2 + 16);
    }
    else
    {
      uint64_t v6 = v3;
      uint64_t v7 = v4;
      char v8 = 0;
    }
    uint64_t v9 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition;
    *(void *)uint64_t v9 = v6;
    *(void *)(v9 + 8) = v7;
    *(unsigned char *)(v9 + 16) = v8;
    uint64_t v10 = sub_24D31C828(*(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition), *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16), v6, v7, v8);
    uint64_t v11 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength;
    *(void *)uint64_t v11 = v10;
    *(unsigned char *)(v11 + 8) = v12 & 1;
    uint64_t v13 = sub_24D31D694(*(void *)v9, *(void *)(v9 + 8), *(unsigned char *)(v9 + 16), *(void *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16));
    uint64_t v14 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength;
    *(void *)uint64_t v14 = v13;
    *(unsigned char *)(v14 + 8) = v15 & 1;
    unsigned __int8 v16 = *(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialExplodedPosition + 16);
    double v17 = (__n128 *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition);
    __n128 result = *(__n128 *)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialExplodedPosition);
    *double v17 = result;
    v17[1].n128_u8[0] = v16;
  }
  return result;
}

void sub_24D31D27C(char a1, double a2, double a3)
{
  uint64_t v4 = v3;
  char v5 = *(unsigned char **)(v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetXSpring);
  if (v5
    && (uint64_t v6 = *(unsigned char **)(v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetYSpring)) != 0)
  {
    uint64_t v9 = v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffset;
    *(double *)uint64_t v9 = a2;
    *(double *)(v9 + 8) = a3;
    *(unsigned char *)(v9 + 16) = 0;
    if ((a1 & 1) == 0
      || (uint64_t v10 = (double *)&v5[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s],
          swift_beginAccess(),
          v10[35] + *(double *)&v5[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40] == 1.79769313e308)
      || (uint64_t v11 = (double *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s],
          swift_beginAccess(),
          v11[35] + *(double *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40] == 1.79769313e308))
    {
      sub_24D2D9DA8(a2);
      v5[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
      sub_24D2D9DA8(a3);
      v6[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
      uint64_t v12 = v4 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset;
      *(double *)uint64_t v12 = a2;
      *(double *)(v12 + 8) = a3;
      *(unsigned char *)(v12 + 16) = 0;
      if ((*(unsigned char *)(v4 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8) & 1) == 0)
      {
        double v13 = *(double *)(v4 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor);
        uint64_t v14 = v5;
        char v15 = v6;
        sub_24D352FE4(v13);
      }
    }
    else
    {
      long double v18 = (double *)&v5[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
      *long double v18 = a2;
      *((unsigned char *)v18 + 8) = 0;
      sub_24D32ADF4();
      __double2 v19 = (double *)&v6[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
      *__double2 v19 = a3;
      *((unsigned char *)v19 + 8) = 0;
      sub_24D32ADF4();
    }
  }
  else
  {
    uint64_t v16 = v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset;
    *(unsigned char *)(v16 + 16) = 0;
    *(void *)uint64_t v16 = 0;
    *(void *)(v16 + 8) = 0;
    if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor + 8) & 1) == 0)
    {
      double v17 = *(double *)(v3 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor);
      sub_24D352FE4(v17);
    }
  }
}

void sub_24D31D4D0()
{
  char v1 = *(void **)(v0 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_renderingColor);
}

id sub_24D31D580()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFSKPatternFragmentNode();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFSKPatternFragmentNode()
{
  return self;
}

uint64_t sub_24D31D694(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if ((a3 | a6)) {
    return 0;
  }
  double v11 = hypot(*(long double *)&a4, *(long double *)&a5);
  double v12 = atan2(*(long double *)&a2, *(long double *)&a1);
  double v13 = atan2(*(long double *)&a5, *(long double *)&a4);
  double v14 = v13 - v12;
  if (vabdd_f64(v13, v12) > 3.14159265)
  {
    if (v12 >= 0.0 || v13 < 0.0)
    {
      if (v13 < 0.0 && v12 >= 0.0) {
        double v14 = v14 + 6.28318531;
      }
    }
    else
    {
      double v14 = v14 + -6.28318531;
    }
  }
  return fabs((v11 + v11) * v14);
}

double sub_24D31D77C(long double a1, long double a2, long double a3, long double a4, double a5)
{
  double v8 = atan2(a2, a1);
  double v9 = atan2(a4, a3);
  double v10 = v9 - v8;
  if (vabdd_f64(v9, v8) > 3.14159265)
  {
    if (v8 >= 0.0 || v9 < 0.0)
    {
      if (v9 < 0.0 && v8 >= 0.0) {
        double v10 = v10 + 6.28318531;
      }
    }
    else
    {
      double v10 = v10 + -6.28318531;
    }
  }
  double v12 = hypot(a3, a4);
  return v12 * __sincos_stret((1.0 - a5) * v8 + (v8 + v10) * a5).__cosval;
}

void sub_24D31D860(uint64_t a1@<X8>, double a2@<D0>)
{
  double v5 = 0.0;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition + 16) & 1) != 0
    || (uint64_t v6 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition,
        (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition + 16) & 1) != 0)
    || (uint64_t v7 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition,
        (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition + 16) & 1) != 0)
    || (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength + 8) & 1) != 0
    || (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength + 8) & 1) != 0)
  {
    char v8 = 1;
    uint64_t v9 = 0;
    long double v10 = 0.0;
    double v11 = 0.0;
  }
  else
  {
    long double v12 = *(double *)v6;
    long double v10 = *(double *)v7;
    double v13 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength);
    double v14 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength);
    double v15 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_trackOffset);
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_trackOffset + 8)) {
      double v15 = 0.0;
    }
    double v16 = *(double *)(v6 + 8) - v15;
    double v11 = *(double *)(v7 + 8) - v15;
    double v17 = 1.0 - a2;
    sub_24D31C68C(*(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition));
    double v18 = v14 / (v13 + v14);
    if (v17 <= v18) {
      sub_24D31C4A0();
    }
    else {
      double v5 = sub_24D31D77C(v12, v16, v10, v11, (v17 - v18) / (v13 / (v13 + v14)));
    }
    char v8 = 0;
  }
  *(double *)a1 = v5;
  *(void *)(a1 + 8) = v9;
  *(long double *)(a1 + 16) = v10;
  *(double *)(a1 + 24) = v11;
  *(unsigned char *)(a1 + 32) = v8;
}

uint64_t sub_24D31D9E0()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24D31DA20()
{
  char v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_setSpeed_, *(double *)(v0 + 24)* *(double *)(*(void *)(v0 + 32) + OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_style + 40));
  return sub_24D31CAB4(v1);
}

uint64_t sub_24D31DA74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D31DA84()
{
  return swift_release();
}

void sub_24D31DA8C()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_gimbalNode;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMPFSKNode()), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbScatterRandomOffsetFrameCounter] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialPeripheralPosition];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v2[16] = 1;
  uint64_t v3 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_initialExplodedPosition];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  uint64_t v4 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_curveLength];
  *(void *)uint64_t v4 = 0;
  v4[8] = 1;
  double v5 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_arcLength];
  *(void *)double v5 = 0;
  v5[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_perimeterRotateOnceAction] = 0;
  uint64_t v6 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_intermediatePosition];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v7 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_relativeHeading];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetXSpring] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffsetYSpring] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactorSpring] = 0;
  char v8 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_explodedPosition];
  *(void *)char v8 = 0;
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v9 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_peripheralPosition];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 1;
  long double v10 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_composedPosition];
  *(void *)long double v10 = 0;
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_useAlternateScaling] = 0;
  double v11 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationTimingFunction];
  *(_OWORD *)double v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[32] = 1;
  long double v12 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformedToExplodedFactor];
  *(void *)long double v12 = 0;
  v12[8] = 1;
  double v13 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_conformationFactor];
  *(void *)double v13 = 0;
  v13[8] = 1;
  double v14 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_scalingFactor];
  *(void *)double v14 = 0;
  v14[8] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceScatterOffset] = 1;
  double v15 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceScatterOffset];
  *(void *)double v15 = 0;
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  double v16 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceScatterOffset];
  *(void *)double v16 = 0;
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_shouldApplyDisturbanceHomingFactor] = 1;
  double v17 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_disturbanceHomingFactor];
  *(void *)double v17 = 0;
  v17[8] = 1;
  double v18 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedDisturbanceHomingFactor];
  *(void *)double v18 = 0;
  v18[8] = 1;
  __double2 v19 = &v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_trackOffset];
  *(void *)__double2 v19 = 0;
  v19[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI25FMPFSKPatternFragmentNode_presentedAbsoluteHeading] = 0;

  sub_24D39D2B0();
  __break(1u);
}

id sub_24D31DCF0()
{
  id v0 = objc_allocWithZone(MEMORY[0x263F3B9E0]);
  uint64_t v1 = (void *)sub_24D39CAC0();
  id v2 = objc_msgSend(v0, sel_initWithDefaultsSuiteName_, v1);

  id result = objc_msgSend(v2, sel_setMeasurementSystem_, 1);
  qword_26986A2B8 = (uint64_t)v2;
  return result;
}

uint64_t sub_24D31DDD4(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t))
{
  sub_24D31DE6C();
  sub_24D2F9C38();
  uint64_t v8 = sub_24D39CD20();
  id v9 = a4;
  id v10 = a1;
  a5(v8);

  return swift_bridgeObjectRelease();
}

unint64_t sub_24D31DE6C()
{
  unint64_t result = qword_2698616A0;
  if (!qword_2698616A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2698616A0);
  }
  return result;
}

void sub_24D31DEAC(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  unsigned int v5 = objc_msgSend(v4, sel_fmpfDebugMode);

  if (v5 && (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isInteractivelyDebugging) & 1) == 0)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isInteractivelyDebugging) = 1;
    *(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches) = 1;
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_24D39D120();
      sub_24D31DE6C();
      sub_24D2F9C38();
      sub_24D39CD50();
      a1 = v30[1];
      uint64_t v29 = v30[2];
      uint64_t v6 = v30[3];
      uint64_t v7 = v30[4];
      unint64_t v8 = v30[5];
    }
    else
    {
      uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v29 = a1 + 56;
      uint64_t v6 = ~v9;
      uint64_t v10 = -v9;
      if (v10 < 64) {
        uint64_t v11 = ~(-1 << v10);
      }
      else {
        uint64_t v11 = -1;
      }
      unint64_t v8 = v11 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v7 = 0;
    }
    int64_t v28 = (unint64_t)(v6 + 64) >> 6;
    while (1)
    {
      if (a1 < 0)
      {
        if (!sub_24D39D170()) {
          goto LABEL_39;
        }
        sub_24D31DE6C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v19 = (id)v30[0];
        swift_unknownObjectRelease();
        uint64_t v18 = v7;
        uint64_t v16 = v8;
        if (!v19) {
          goto LABEL_39;
        }
      }
      else
      {
        if (v8)
        {
          uint64_t v16 = (v8 - 1) & v8;
          unint64_t v17 = __clz(__rbit64(v8)) | (v7 << 6);
          uint64_t v18 = v7;
        }
        else
        {
          int64_t v20 = v7 + 1;
          if (__OFADD__(v7, 1))
          {
            __break(1u);
            return;
          }
          if (v20 >= v28) {
            goto LABEL_39;
          }
          unint64_t v21 = *(void *)(v29 + 8 * v20);
          uint64_t v18 = v7 + 1;
          if (!v21)
          {
            uint64_t v18 = v7 + 2;
            if (v7 + 2 >= v28) {
              goto LABEL_39;
            }
            unint64_t v21 = *(void *)(v29 + 8 * v18);
            if (!v21)
            {
              uint64_t v18 = v7 + 3;
              if (v7 + 3 >= v28) {
                goto LABEL_39;
              }
              unint64_t v21 = *(void *)(v29 + 8 * v18);
              if (!v21)
              {
                uint64_t v18 = v7 + 4;
                if (v7 + 4 >= v28) {
                  goto LABEL_39;
                }
                unint64_t v21 = *(void *)(v29 + 8 * v18);
                if (!v21)
                {
                  uint64_t v22 = v7 + 5;
                  while (v28 != v22)
                  {
                    unint64_t v21 = *(void *)(v29 + 8 * v22++);
                    if (v21)
                    {
                      uint64_t v18 = v22 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_39:
                  sub_24D3059D0();
                  return;
                }
              }
            }
          }
LABEL_32:
          uint64_t v16 = (v21 - 1) & v21;
          unint64_t v17 = __clz(__rbit64(v21)) + (v18 << 6);
        }
        id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v17);
        if (!v19) {
          goto LABEL_39;
        }
      }
      objc_msgSend(v19, sel_locationInNode_, v2);
      uint64_t v25 = v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation;
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation + 16) == 1)
      {
        *(void *)uint64_t v25 = v23;
        *(void *)(v25 + 8) = v24;
        *(unsigned char *)(v25 + 16) = 0;
        v30[0] = 0;
        uint64_t v26 = MEMORY[0x253326030](v30, 8);
        unint64_t v27 = v30[0];
        if ((unint64_t)(11 * v30[0]) <= 4)
        {
          do
          {
            v30[0] = 0;
            uint64_t v26 = MEMORY[0x253326030](v30, 8);
            unint64_t v27 = v30[0];
          }
          while ((unint64_t)(11 * v30[0]) < 5);
        }
        if (((v27 * (unsigned __int128)0xBuLL) >> 64))
        {
          double v12 = 45.0;
          double v13 = 180.0;
        }
        else
        {
          double v12 = -180.0;
          double v13 = -45.0;
        }
        sub_24D358488(v26, v12, v13);
        uint64_t v14 = v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing;
        *(void *)uint64_t v14 = v15;
        *(unsigned char *)(v14 + 8) = 0;
      }

      uint64_t v7 = v18;
      unint64_t v8 = v16;
    }
  }
}

void sub_24D31E260(uint64_t a1)
{
  if (v1[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches] == 1)
  {
    uint64_t v2 = v1;
    id v4 = objc_msgSend(self, sel_standardUserDefaults);
    unsigned int v5 = objc_msgSend(v4, sel_fmpfDebugMode);

    if (v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        sub_24D39D120();
        sub_24D31DE6C();
        sub_24D2F9C38();
        sub_24D39CD50();
        a1 = v47;
        uint64_t v6 = v48;
        uint64_t v7 = v49;
        uint64_t v8 = v50;
        unint64_t v9 = v51;
      }
      else
      {
        uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
        uint64_t v6 = a1 + 56;
        uint64_t v11 = ~v10;
        uint64_t v12 = -v10;
        if (v12 < 64) {
          uint64_t v13 = ~(-1 << v12);
        }
        else {
          uint64_t v13 = -1;
        }
        unint64_t v9 = v13 & *(void *)(a1 + 56);
        swift_bridgeObjectRetain();
        uint64_t v7 = v11;
        uint64_t v8 = 0;
      }
      int64_t v14 = (unint64_t)(v7 + 64) >> 6;
      int64_t v45 = v14;
      if ((a1 & 0x8000000000000000) == 0) {
        goto LABEL_14;
      }
LABEL_10:
      if (sub_24D39D170())
      {
        sub_24D31DE6C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v15 = v46;
        swift_unknownObjectRelease();
        uint64_t v16 = v8;
        uint64_t v17 = v9;
        if (v46)
        {
          do
          {
            objc_msgSend(v15, sel_locationInNode_, v2);
            uint64_t v24 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation];
            if ((v2[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation + 16] & 1) != 0
              || (v2[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing + 8] & 1) != 0)
            {

              uint64_t v8 = v16;
              unint64_t v9 = v17;
              if (a1 < 0) {
                goto LABEL_10;
              }
            }
            else
            {
              double v25 = v22;
              double v26 = v23;
              double v27 = *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing];
              double v28 = *v24;
              double v29 = v24[1];
              objc_msgSend(v2, sel_size);
              double v31 = v30;
              objc_msgSend(v2, sel_size);
              double v33 = v32;
              uint64_t v34 = MEMORY[0x253326120](&v2[OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate]);
              if (v34)
              {
                uint64_t v35 = v34;
                uint64_t v36 = v34 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate;
                if (MEMORY[0x253326120](v34 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate))
                {
                  uint64_t v37 = *(void *)(v36 + 8);
                  BOOL v44 = vabdd_f64(v28, v25) < vabdd_f64(v29, v26);
                  double v38 = hypot(v25 - v28, v26 - v29);
                  if (v33 >= v31) {
                    double v39 = v31;
                  }
                  else {
                    double v39 = v33;
                  }
                  uint64_t v40 = v6;
                  double v41 = fmin(v38 / (v39 * 0.66), 1.0);
                  uint64_t ObjectType = swift_getObjectType();
                  double v43 = v41;
                  uint64_t v6 = v40;
                  (*(void (**)(double, void, BOOL, uint64_t, uint64_t, uint64_t, double))(v37 + 88))(COERCE_DOUBLE(*(void *)&v43), 0, v44, v35, ObjectType, v37, v27);

                  swift_unknownObjectRelease();
                }
                else
                {
                }
                swift_unknownObjectRelease();
              }
              else
              {
              }
              uint64_t v8 = v16;
              unint64_t v9 = v17;
              int64_t v14 = v45;
              if (a1 < 0) {
                goto LABEL_10;
              }
            }
LABEL_14:
            if (v9)
            {
              uint64_t v17 = (v9 - 1) & v9;
              unint64_t v18 = __clz(__rbit64(v9)) | (v8 << 6);
              uint64_t v16 = v8;
            }
            else
            {
              int64_t v19 = v8 + 1;
              if (__OFADD__(v8, 1))
              {
                __break(1u);
                return;
              }
              if (v19 >= v14) {
                break;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v19);
              uint64_t v16 = v8 + 1;
              if (!v20)
              {
                uint64_t v16 = v8 + 2;
                if (v8 + 2 >= v14) {
                  break;
                }
                unint64_t v20 = *(void *)(v6 + 8 * v16);
                if (!v20)
                {
                  uint64_t v16 = v8 + 3;
                  if (v8 + 3 >= v14) {
                    break;
                  }
                  unint64_t v20 = *(void *)(v6 + 8 * v16);
                  if (!v20)
                  {
                    uint64_t v16 = v8 + 4;
                    if (v8 + 4 >= v14) {
                      break;
                    }
                    unint64_t v20 = *(void *)(v6 + 8 * v16);
                    if (!v20)
                    {
                      uint64_t v21 = v8 + 5;
                      while (v14 != v21)
                      {
                        unint64_t v20 = *(void *)(v6 + 8 * v21++);
                        if (v20)
                        {
                          uint64_t v16 = v21 - 1;
                          goto LABEL_29;
                        }
                      }
                      break;
                    }
                  }
                }
              }
LABEL_29:
              uint64_t v17 = (v20 - 1) & v20;
              unint64_t v18 = __clz(__rbit64(v20)) + (v16 << 6);
            }
            id v15 = *(id *)(*(void *)(a1 + 48) + 8 * v18);
          }
          while (v15);
        }
      }
      sub_24D3059D0();
    }
  }
}

void sub_24D31E6A0(uint64_t a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches) == 1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = a1;
    uint64_t v25 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches;
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_24D39D120();
      sub_24D31DE6C();
      sub_24D2F9C38();
      sub_24D39CD50();
      uint64_t v3 = v29;
      uint64_t v27 = v30;
      uint64_t v4 = v31;
      uint64_t v5 = v32;
      unint64_t v6 = v33;
    }
    else
    {
      uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v27 = a1 + 56;
      uint64_t v4 = ~v7;
      uint64_t v8 = -v7;
      if (v8 < 64) {
        uint64_t v9 = ~(-1 << v8);
      }
      else {
        uint64_t v9 = -1;
      }
      unint64_t v6 = v9 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v5 = 0;
    }
    int64_t v26 = (unint64_t)(v4 + 64) >> 6;
    while (1)
    {
      if (v3 < 0)
      {
        if (!sub_24D39D170()) {
          goto LABEL_38;
        }
        sub_24D31DE6C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v15 = v28;
        swift_unknownObjectRelease();
        uint64_t v14 = v5;
        uint64_t v12 = v6;
        if (!v28) {
          goto LABEL_38;
        }
      }
      else
      {
        if (v6)
        {
          uint64_t v12 = (v6 - 1) & v6;
          unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
          uint64_t v14 = v5;
        }
        else
        {
          int64_t v16 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
            __break(1u);
            return;
          }
          if (v16 >= v26) {
            goto LABEL_38;
          }
          unint64_t v17 = *(void *)(v27 + 8 * v16);
          uint64_t v14 = v5 + 1;
          if (!v17)
          {
            uint64_t v14 = v5 + 2;
            if (v5 + 2 >= v26) {
              goto LABEL_38;
            }
            unint64_t v17 = *(void *)(v27 + 8 * v14);
            if (!v17)
            {
              uint64_t v14 = v5 + 3;
              if (v5 + 3 >= v26) {
                goto LABEL_38;
              }
              unint64_t v17 = *(void *)(v27 + 8 * v14);
              if (!v17)
              {
                uint64_t v14 = v5 + 4;
                if (v5 + 4 >= v26) {
                  goto LABEL_38;
                }
                unint64_t v17 = *(void *)(v27 + 8 * v14);
                if (!v17)
                {
                  uint64_t v18 = v5 + 5;
                  while (v26 != v18)
                  {
                    unint64_t v17 = *(void *)(v27 + 8 * v18++);
                    if (v17)
                    {
                      uint64_t v14 = v18 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_38:
                  sub_24D3059D0();
                  *(unsigned char *)(v2 + v25) = 0;
                  *(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isInteractivelyDebugging) = 0;
                  return;
                }
              }
            }
          }
LABEL_31:
          uint64_t v12 = (v17 - 1) & v17;
          unint64_t v13 = __clz(__rbit64(v17)) + (v14 << 6);
        }
        id v15 = *(id *)(*(void *)(v3 + 48) + 8 * v13);
        if (!v15) {
          goto LABEL_38;
        }
      }
      objc_msgSend(v15, sel_locationInNode_, v2);
      if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing + 8) & 1) == 0
        && (*(unsigned char *)(v2 + 16 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation) & 1) == 0)
      {
        double v19 = *(double *)(v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing);
        uint64_t v20 = MEMORY[0x253326120](v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_altDelegate);
        if (v20)
        {
          uint64_t v21 = v20;
          uint64_t v22 = v20 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate;
          if (MEMORY[0x253326120](v20 + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate))
          {
            uint64_t v23 = *(void *)(v22 + 8);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double))(v23 + 88))(0, 1, 2, v21, ObjectType, v23, v19);
            swift_unknownObjectRelease();
          }
          swift_unknownObjectRelease();
        }
        uint64_t v10 = v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation;
        *(void *)uint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        *(unsigned char *)(v10 + 16) = 1;
        uint64_t v11 = v2 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing;
        *(void *)uint64_t v11 = 0;
        *(unsigned char *)(v11 + 8) = 1;
      }

      uint64_t v5 = v14;
      unint64_t v6 = v12;
    }
  }
}

void sub_24D31EA5C(uint64_t a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches) == 1)
  {
    uint64_t v2 = a1;
    uint64_t v19 = OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_usingDebuggingTouches;
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_24D39D120();
      sub_24D31DE6C();
      sub_24D2F9C38();
      sub_24D39CD50();
      uint64_t v2 = v23;
      uint64_t v21 = v24;
      uint64_t v3 = v25;
      uint64_t v4 = v26;
      unint64_t v5 = v27;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v21 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    uint64_t v18 = v3;
    int64_t v20 = (unint64_t)(v3 + 64) >> 6;
    if (v2 < 0) {
      goto LABEL_11;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v9 = (v5 - 1) & v5;
        unint64_t v10 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v11 = v4;
      }
      else
      {
        int64_t v13 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v13 >= v20) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v21 + 8 * v13);
        uint64_t v11 = v4 + 1;
        if (!v14)
        {
          uint64_t v11 = v4 + 2;
          if (v4 + 2 >= v20) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v21 + 8 * v11);
          if (!v14)
          {
            uint64_t v11 = v4 + 3;
            if (v4 + 3 >= v20) {
              goto LABEL_31;
            }
            unint64_t v14 = *(void *)(v21 + 8 * v11);
            if (!v14)
            {
              uint64_t v11 = v4 + 4;
              if (v4 + 4 >= v20) {
                goto LABEL_31;
              }
              unint64_t v14 = *(void *)(v21 + 8 * v11);
              if (!v14)
              {
                uint64_t v15 = v4 + 5;
                while (v20 != v15)
                {
                  unint64_t v14 = *(void *)(v21 + 8 * v15++);
                  if (v14)
                  {
                    uint64_t v11 = v15 - 1;
                    goto LABEL_27;
                  }
                }
LABEL_31:
                sub_24D3059D0();
                *(unsigned char *)(v1 + v19) = 0;
                *(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_isInteractivelyDebugging) = 0;
                return;
              }
            }
          }
        }
LABEL_27:
        uint64_t v9 = (v14 - 1) & v14;
        unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
      }
      id v12 = *(id *)(*(void *)(v2 + 48) + 8 * v10);
      if (!v12) {
        goto LABEL_31;
      }
      while (1)
      {
        objc_msgSend(v12, sel_locationInNode_, v1, v18);

        uint64_t v16 = v1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialTouchDownLocation;
        *(void *)uint64_t v16 = 0;
        *(void *)(v16 + 8) = 0;
        *(unsigned char *)(v16 + 16) = 1;
        uint64_t v17 = v1 + OBJC_IVAR____TtC11FMFindingUI11FMPFSKScene_initialBearing;
        *(void *)uint64_t v17 = 0;
        *(unsigned char *)(v17 + 8) = 1;
        uint64_t v4 = v11;
        unint64_t v5 = v9;
        if ((v2 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_11:
        if (sub_24D39D170())
        {
          sub_24D31DE6C();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v12 = v22;
          swift_unknownObjectRelease();
          uint64_t v11 = v4;
          uint64_t v9 = v5;
          if (v22) {
            continue;
          }
        }
        goto LABEL_31;
      }
    }
  }
}

void sub_24D31ED58()
{
  off_269861F80 = &unk_26FF84DC8;
}

void sub_24D31ED6C(__int16 *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24D2B6EA8(v2, (uint64_t)v33);
  if (*a1 < 0)
  {
    sub_24D31EF98((uint64_t)&v23);
    long long v7 = v23;
    long long v11 = v24;
    long long v12 = v25;
    long long v13 = v26;
    long long v14 = v27;
    long long v15 = v28;
    unint64_t v8 = v29 | ((unint64_t)v30 << 32);
    uint64_t v9 = v31;
    char v10 = v32;
  }
  else
  {
    long long v17 = v33[0];
    long long v18 = v33[1];
    long long v19 = v33[2];
    long long v20 = v33[3];
    long long v21 = v33[4];
    long long v22 = v33[5];
    uint64_t v5 = v35;
    uint64_t v6 = v34;
    sub_24D2B6EA8(v2, (uint64_t)&v23);
    long long v7 = 0uLL;
    unint64_t v8 = 83886080;
    if ((v29 & 0xFF000000) == 0x4000000)
    {
      uint64_t v9 = 0;
      char v10 = 1;
      goto LABEL_7;
    }
    if ((v29 & 0xFF000000) == 0x5000000)
    {
      uint64_t v9 = 0;
      char v10 = 1;
      unint64_t v8 = 0x301000000;
LABEL_7:
      long long v11 = 0uLL;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      long long v14 = 0uLL;
      long long v15 = 0uLL;
      goto LABEL_11;
    }
    unint64_t v16 = v6 | (v5 << 32);
    if ((v29 & 0xFE000000) == 0x6000000)
    {
      sub_24D2B7278(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
LABEL_10:
      uint64_t v9 = 0;
      char v10 = 1;
      unint64_t v8 = v16;
      long long v7 = v17;
      long long v11 = v18;
      long long v12 = v19;
      long long v13 = v20;
      long long v14 = v21;
      long long v15 = v22;
    }
    else
    {
      unint64_t v8 = 0x301010000;
      uint64_t v9 = BYTE2(v29);
      char v10 = 1;
      long long v11 = 0uLL;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      long long v14 = 0uLL;
      long long v15 = 0uLL;
      switch(BYTE2(v29))
      {
        case 1:
          uint64_t v9 = 0;
          unint64_t v8 = 0x301020000;
          break;
        case 2:
          uint64_t v9 = 0;
          unint64_t v8 = 0x303030000;
          break;
        case 3:
          uint64_t v9 = 0;
          unint64_t v8 = 0x4000000;
          break;
        case 4:
          sub_24D2B6FAC(v23, *((uint64_t *)&v23 + 1), (void *)v24, *((void **)&v24 + 1));
          goto LABEL_10;
        default:
          break;
      }
    }
  }
LABEL_11:
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v11;
  *(_OWORD *)(a2 + 32) = v12;
  *(_OWORD *)(a2 + 48) = v13;
  *(_OWORD *)(a2 + 64) = v14;
  *(_OWORD *)(a2 + 80) = v15;
  *(_DWORD *)(a2 + 96) = v8;
  *(unsigned char *)(a2 + 100) = BYTE4(v8);
  *(void *)(a2 + 104) = v9;
  *(unsigned char *)(a2 + 112) = v10;
}

void sub_24D31EF98(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_24D2B6EA8(v1, (uint64_t)v58);
  uint64_t v54 = v58[1];
  uint64_t v56 = v58[0];
  uint64_t v4 = v58[5];
  uint64_t v49 = (void *)v58[3];
  uint64_t v50 = v58[4];
  uint64_t v51 = v58[6];
  uint64_t v5 = v58[8];
  uint64_t v52 = v58[7];
  unint64_t v53 = (void *)v58[2];
  uint64_t v7 = v58[9];
  uint64_t v6 = v58[10];
  uint64_t v8 = v58[11];
  uint64_t v9 = v60;
  uint64_t v10 = v59;
  sub_24D2B6EA8(v2, (uint64_t)v61);
  uint64_t v11 = 83886080;
  if ((v64 & 0xFF000000) == 0x4000000)
  {
    uint64_t v22 = 0;
    uint64_t v12 = 0;
    long long v13 = 0;
    long long v14 = 0;
    uint64_t v21 = 0;
    uint64_t v15 = 0;
    double v16 = 0.0;
    uint64_t v17 = 0;
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    uint64_t v18 = 0;
    char v19 = 0;
    uint64_t v20 = 0x3FF0000000000000;
    goto LABEL_20;
  }
  if ((v64 & 0xFF000000) == 0x5000000)
  {
    uint64_t v12 = 0;
    long long v13 = 0;
    long long v14 = 0;
    uint64_t v15 = 0;
    double v16 = 0.0;
    uint64_t v17 = 0;
    uint64_t v6 = 0;
    uint64_t v18 = 0;
    char v19 = 0;
    uint64_t v20 = 0x3FF0000000000000;
    uint64_t v21 = 0x7FEFFFFFFFFFFFFFLL;
    uint64_t v22 = 0x4014000000000000;
    uint64_t v11 = 0x303040000;
    uint64_t v7 = 0x10000;
    uint64_t v5 = 0x4014000000000000;
LABEL_20:
    *(void *)a1 = v22;
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v14;
    *(void *)(a1 + 32) = v21;
    *(void *)(a1 + 40) = v15;
    *(double *)(a1 + 48) = v16;
    *(void *)(a1 + 56) = v17;
    *(void *)(a1 + 64) = v5;
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v6;
    *(void *)(a1 + 88) = v18;
    *(_DWORD *)(a1 + 96) = v11;
    *(unsigned char *)(a1 + 100) = BYTE4(v11);
    *(void *)(a1 + 104) = v20;
    *(unsigned char *)(a1 + 112) = v19;
    return;
  }
  uint64_t v11 = v10 | (v9 << 32);
  if ((v64 & 0xFE000000) == 0x6000000)
  {
    sub_24D2B7278(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
    uint64_t v20 = 0;
    char v19 = 1;
    uint64_t v15 = v4;
    uint64_t v18 = v8;
    double v16 = *(double *)&v51;
    uint64_t v17 = v52;
    long long v14 = v49;
    uint64_t v21 = v50;
    uint64_t v12 = v54;
    uint64_t v22 = v56;
    long long v13 = v53;
    goto LABEL_20;
  }
  uint64_t v23 = v8;
  if ((v64 & 0xFF0000) != 0x40000)
  {
    uint64_t v46 = v8;
    uint64_t v21 = v50;
    uint64_t v24 = v4;
    uint64_t v25 = v4;
    double v16 = *(double *)&v51;
    uint64_t v17 = v52;
    uint64_t v47 = v23;
    sub_24D2B6F80(v56, v54, v53, v49, v50, v25, v51, v52, v5, v7, v6, v46, v11, SBYTE2(v11));
    uint64_t v18 = v47;
    uint64_t v15 = v24;
    long long v14 = v49;
    long long v13 = v53;
    uint64_t v12 = v54;
    uint64_t v22 = v56;
    uint64_t v20 = 0;
    char v19 = 1;
    goto LABEL_20;
  }
  if (v62 == 1)
  {
    sub_24D2B6F80(v56, v54, v53, v49, v50, v4, v51, v52, v5, v7, v6, v8, v10, SBYTE2(v10));
LABEL_19:
    uint64_t v22 = 0;
    uint64_t v12 = 0;
    long long v13 = 0;
    long long v14 = 0;
    uint64_t v21 = 0;
    uint64_t v15 = 0;
    double v16 = 0.0;
    uint64_t v17 = 0;
    uint64_t v5 = 0;
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    char v19 = 1;
    uint64_t v11 = 0x4000000;
    goto LABEL_20;
  }
  if (v64) {
    goto LABEL_19;
  }
  int64_t v26 = v63;
  sub_24D2B6F80(v56, v54, v53, v49, v50, v4, v51, v52, v5, v7, v6, v8, v11, SBYTE2(v11));
  if (qword_269860330 != -1) {
    swift_once();
  }
  unint64_t v27 = *((void *)off_269861F80 + 2);
  if (v26 >= (uint64_t)(v27 - 1))
  {
    sub_24D2B7278(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
    goto LABEL_19;
  }
  if (v26 + 1 < v27)
  {
    uint64_t v48 = v26 + 1;
    long long v28 = (double *)((char *)off_269861F80 + 40 * v26 + 40);
    double v30 = v28[4];
    unsigned int v29 = (char *)(v28 + 4);
    double v31 = v30;
    int v32 = v29[16];
    int v33 = v29[17];
    char v57 = v29[32];
    uint64_t v55 = *((void *)v29 + 3);
    if (v32)
    {
      double v34 = 0.0;
      double v35 = 1.79769313e308;
    }
    else
    {
      double v35 = *((double *)v29 + 1);
      double v36 = (v31 + -1.0) / 9.0;
      double v37 = fmin(v36, 1.0);
      BOOL v38 = v36 < 0.0;
      double v39 = 0.0;
      if (!v38) {
        double v39 = v37;
      }
      double v34 = v39 * 45.0 + (1.0 - v39) * 20.0;
    }
    uint64_t v11 = 0x303040000;
    if (fabs(v35) <= v34) {
      uint64_t v40 = v32 ^ 1u;
    }
    else {
      uint64_t v40 = 0;
    }
    BOOL v41 = v33 == 0;
    uint64_t v42 = 256;
    if (v41) {
      uint64_t v42 = 0;
    }
    uint64_t v17 = v42 | v40;
    uint64_t v43 = *(void *)&v31;
    double v16 = v34;
    uint64_t v44 = v2;
    uint64_t v21 = *(void *)&v35;
    uint64_t v45 = v32 ^ 1u;
    sub_24D2B7278(v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
    uint64_t v15 = v45;
    uint64_t v22 = v43;
    uint64_t v12 = 0;
    long long v13 = 0;
    long long v14 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0x10000;
    uint64_t v5 = v22;
    uint64_t v18 = v48;
    char v19 = v57;
    uint64_t v20 = v55;
    goto LABEL_20;
  }
  __break(1u);
}

void sub_24D31F400(__int16 *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24D2B6EA8(v2, (uint64_t)v33);
  if (*a1 < 0)
  {
    sub_24D31F640((uint64_t)&v23);
    long long v7 = v23;
    long long v11 = v24;
    long long v12 = v25;
    long long v13 = v26;
    long long v14 = v27;
    long long v15 = v28;
    unint64_t v10 = v29 | ((unint64_t)v30 << 32);
    uint64_t v8 = v31;
    char v9 = v32;
  }
  else
  {
    long long v17 = v33[0];
    long long v18 = v33[1];
    long long v19 = v33[2];
    long long v20 = v33[3];
    long long v21 = v33[4];
    long long v22 = v33[5];
    uint64_t v5 = v35;
    uint64_t v6 = v34;
    sub_24D2B6EA8(v2, (uint64_t)&v23);
    long long v7 = 0uLL;
    if ((v29 & 0xFF000000) == 0x4000000)
    {
      uint64_t v8 = 0;
      char v9 = 1;
      unint64_t v10 = 0x303030000;
      goto LABEL_7;
    }
    if ((v29 & 0xFF000000) == 0x5000000)
    {
      uint64_t v8 = 0;
      char v9 = 1;
      unint64_t v10 = 0x4000000;
LABEL_7:
      long long v11 = 0uLL;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      long long v14 = 0uLL;
      long long v15 = 0uLL;
      goto LABEL_11;
    }
    unint64_t v16 = v6 | (v5 << 32);
    if ((v29 & 0xFE000000) == 0x6000000)
    {
      sub_24D2B7278(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
LABEL_10:
      uint64_t v8 = 0;
      char v9 = 1;
      unint64_t v10 = v16;
      long long v7 = v17;
      long long v11 = v18;
      long long v12 = v19;
      long long v13 = v20;
      long long v14 = v21;
      long long v15 = v22;
    }
    else
    {
      uint64_t v8 = BYTE2(v29);
      char v9 = 1;
      unint64_t v10 = 83886080;
      long long v11 = 0uLL;
      long long v12 = 0uLL;
      long long v13 = 0uLL;
      long long v14 = 0uLL;
      long long v15 = 0uLL;
      switch(BYTE2(v29))
      {
        case 1:
          uint64_t v8 = 0;
          unint64_t v10 = 0x302000000;
          char v9 = 1;
          break;
        case 2:
          uint64_t v8 = 0;
          unint64_t v10 = 0x302010000;
          char v9 = 1;
          break;
        case 3:
          uint64_t v8 = 0;
          unint64_t v10 = 0x301020000;
          break;
        case 4:
          sub_24D2B6FAC(v23, *((uint64_t *)&v23 + 1), (void *)v24, *((void **)&v24 + 1));
          goto LABEL_10;
        default:
          break;
      }
    }
  }
LABEL_11:
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v11;
  *(_OWORD *)(a2 + 32) = v12;
  *(_OWORD *)(a2 + 48) = v13;
  *(_OWORD *)(a2 + 64) = v14;
  *(_OWORD *)(a2 + 80) = v15;
  *(_DWORD *)(a2 + 96) = v10;
  *(unsigned char *)(a2 + 100) = BYTE4(v10);
  *(void *)(a2 + 104) = v8;
  *(unsigned char *)(a2 + 112) = v9;
}

void sub_24D31F640(uint64_t a1@<X8>)
{
  sub_24D2B6EA8(v1, (uint64_t)v52);
  uint64_t v47 = v52[1];
  uint64_t v48 = (void *)v52[2];
  uint64_t v3 = v52[5];
  uint64_t v49 = (void *)v52[3];
  uint64_t v50 = v52[4];
  uint64_t v4 = v52[6];
  uint64_t v5 = v52[7];
  uint64_t v45 = v52[0];
  uint64_t v46 = v52[8];
  uint64_t v6 = v52[10];
  uint64_t v51 = v52[9];
  uint64_t v7 = v52[11];
  uint64_t v8 = v54;
  uint64_t v9 = v53;
  sub_24D2B6EA8(v1, (uint64_t)v55);
  uint64_t v10 = 0x4000000;
  if ((v58 & 0xFF000000) == 0x4000000)
  {
    if (qword_269860330 != -1) {
      swift_once();
    }
    uint64_t v12 = 0;
    long long v13 = 0;
    long long v14 = 0;
    uint64_t v16 = 0;
    uint64_t v4 = 0;
    uint64_t v19 = 0;
    char v22 = 0;
    uint64_t v11 = 0x3FA999999999999ALL;
    uint64_t v10 = 0x303040000;
    uint64_t v20 = *((void *)off_269861F80 + 2) - 1;
    uint64_t v21 = 0x4014000000000000;
    uint64_t v15 = 0x7FEFFFFFFFFFFFFFLL;
    uint64_t v18 = 0x10000;
    uint64_t v5 = 256;
    uint64_t v17 = 0x3FA999999999999ALL;
    goto LABEL_13;
  }
  if ((v58 & 0xFF000000) == 0x5000000)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    long long v13 = 0;
    long long v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    char v22 = 1;
    goto LABEL_13;
  }
  uint64_t v10 = v9 | (v8 << 32);
  if ((v58 & 0xFE000000) == 0x6000000)
  {
    sub_24D2B7278(v1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
    uint64_t v21 = 0;
    char v22 = 1;
    uint64_t v11 = v45;
    uint64_t v17 = v46;
    uint64_t v12 = v47;
    long long v13 = v48;
    uint64_t v16 = v3;
    long long v14 = v49;
    uint64_t v15 = v50;
    uint64_t v18 = v51;
    uint64_t v19 = v6;
    uint64_t v20 = v7;
    goto LABEL_13;
  }
  if ((v58 & 0xFF0000) != 0x40000)
  {
    uint64_t v11 = v45;
    sub_24D2B6F80(v45, v47, v48, v49, v50, v3, v4, v5, v46, v51, v6, v7, v10, SBYTE2(v10));
    uint64_t v21 = 0;
    char v22 = 1;
    uint64_t v12 = v47;
    long long v13 = v48;
    long long v14 = v49;
    uint64_t v16 = v3;
    uint64_t v15 = v50;
    uint64_t v17 = v46;
    uint64_t v18 = v51;
    uint64_t v19 = v6;
    uint64_t v20 = v7;
    goto LABEL_13;
  }
  if (v56 == 1)
  {
    sub_24D2B6F80(v45, v47, v48, v49, v50, v3, v4, v5, v46, v51, v6, v7, v9, SBYTE2(v9));
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    long long v13 = 0;
    long long v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    char v22 = 0;
    uint64_t v21 = 0x3FF0000000000000;
    uint64_t v10 = 83886080;
    goto LABEL_13;
  }
  int v23 = v9;
  char v22 = 0;
  uint64_t v11 = 0;
  uint64_t v21 = 0x3FF0000000000000;
  uint64_t v10 = 83886080;
  if (v58)
  {
    uint64_t v12 = 0;
    long long v13 = 0;
    long long v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    goto LABEL_13;
  }
  uint64_t v24 = v3;
  uint64_t v25 = v4;
  uint64_t v26 = v5;
  uint64_t v12 = 0;
  long long v13 = 0;
  long long v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  if (v57 < 1)
  {
LABEL_13:
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v12;
    *(void *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = v14;
    *(void *)(a1 + 32) = v15;
    *(void *)(a1 + 40) = v16;
    *(void *)(a1 + 48) = v4;
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = v17;
    *(void *)(a1 + 72) = v18;
    *(void *)(a1 + 80) = v19;
    *(void *)(a1 + 88) = v20;
    *(_DWORD *)(a1 + 96) = v10;
    *(unsigned char *)(a1 + 100) = BYTE4(v10);
    *(void *)(a1 + 104) = v21;
    *(unsigned char *)(a1 + 112) = v22;
    return;
  }
  unint64_t v44 = v57 - 1;
  sub_24D2B6F80(v45, v47, v48, v49, v50, v24, v25, v26, v46, v51, v6, v7, v23, SBYTE2(v23));
  if (qword_269860330 != -1) {
    swift_once();
  }
  if (v44 < *((void *)off_269861F80 + 2))
  {
    long long v27 = (double *)((char *)off_269861F80 + 40 * v44);
    double v29 = v27[4];
    long long v28 = (char *)(v27 + 4);
    double v30 = v29;
    int v31 = v28[16];
    int v32 = v28[17];
    uint64_t v33 = *((void *)v28 + 3);
    char v34 = v28[32];
    uint64_t v16 = v31 ^ 1u;
    if (v31)
    {
      double v35 = 0.0;
      double v36 = 1.79769313e308;
    }
    else
    {
      double v36 = *((double *)v28 + 1);
      double v37 = (v30 + -1.0) / 9.0;
      double v38 = fmin(v37, 1.0);
      BOOL v39 = v37 < 0.0;
      double v40 = 0.0;
      if (!v39) {
        double v40 = v38;
      }
      double v35 = v40 * 45.0 + (1.0 - v40) * 20.0;
    }
    uint64_t v10 = 0x303040000;
    if (fabs(v36) <= v35) {
      uint64_t v41 = v16;
    }
    else {
      uint64_t v41 = 0;
    }
    BOOL v42 = v32 == 0;
    uint64_t v43 = 256;
    if (v42) {
      uint64_t v43 = 0;
    }
    uint64_t v5 = v43 | v41;
    uint64_t v11 = *(void *)&v30;
    uint64_t v15 = *(void *)&v36;
    uint64_t v4 = *(void *)&v35;
    sub_24D2B7278(v1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
    uint64_t v12 = 0;
    long long v13 = 0;
    long long v14 = 0;
    uint64_t v19 = 0;
    uint64_t v18 = 0x10000;
    uint64_t v17 = v11;
    uint64_t v20 = v44;
    char v22 = v34;
    uint64_t v21 = v33;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_24D31FB50()
{
  uint64_t v1 = sub_24D39C8A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24D2B7450(&qword_269861F88);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v44 - v9;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v46 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v63 = v14 & v12;
  uint64_t v48 = v0;
  uint64_t v56 = v0 + 16;
  uint64_t v49 = v2 + 16;
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v52 = v2;
  unsigned __int8 v54 = (void (**)(char *, uint64_t))(v2 + 8);
  int64_t v47 = (unint64_t)(v13 + 63) >> 6;
  int64_t v45 = v47 - 1;
  uint64_t v53 = v11;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v58 = 0;
  uint64_t v57 = v1;
  uint64_t v51 = v4;
  uint64_t v50 = v10;
  uint64_t v62 = v8;
  while (1)
  {
    if (v63)
    {
      unint64_t v20 = __clz(__rbit64(v63));
      v63 &= v63 - 1;
      unint64_t v21 = v20 | (v58 << 6);
LABEL_7:
      uint64_t v22 = v53;
      (*(void (**)(char *, unint64_t, uint64_t))(v52 + 16))(v8, *(void *)(v53 + 48) + *(void *)(v52 + 72) * v21, v1);
      uint64_t v23 = *(void *)(v22 + 56) + 104 * v21;
      uint64_t v24 = sub_24D2B7450(&qword_269861F90);
      uint64_t v25 = &v8[*(int *)(v24 + 48)];
      uint64_t v26 = *(void *)(v23 + 8);
      uint64_t v61 = *(void *)v23;
      long long v28 = *(void **)(v23 + 16);
      long long v27 = *(void **)(v23 + 24);
      uint64_t v30 = *(void *)(v23 + 32);
      uint64_t v60 = *(void *)(v23 + 40);
      uint64_t v29 = v60;
      uint64_t v32 = *(void *)(v23 + 48);
      uint64_t v59 = *(void *)(v23 + 56);
      uint64_t v31 = v59;
      uint64_t v34 = *(void *)(v23 + 64);
      uint64_t v33 = *(void *)(v23 + 72);
      uint64_t v35 = *(void *)(v23 + 80);
      uint64_t v36 = *(void *)(v23 + 88);
      char v37 = *(unsigned char *)(v23 + 100);
      LODWORD(v23) = *(_DWORD *)(v23 + 96);
      *(void *)uint64_t v25 = v61;
      *((void *)v25 + 1) = v26;
      *((void *)v25 + 2) = v28;
      *((void *)v25 + 3) = v27;
      *((void *)v25 + 4) = v30;
      *((void *)v25 + 5) = v29;
      *((void *)v25 + 6) = v32;
      *((void *)v25 + 7) = v31;
      *((void *)v25 + 8) = v34;
      *((void *)v25 + 9) = v33;
      *((void *)v25 + 10) = v35;
      *((void *)v25 + 11) = v36;
      *((_DWORD *)v25 + 24) = v23;
      v25[100] = v37;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v62, 0, 1, v24);
      uint64_t v38 = v30;
      uint64_t v8 = v62;
      sub_24D2B6F48(v61, v26, v28, v27, v38, v60, v32, v59, v34, v33, v35, v36, v23);
      uint64_t v4 = v51;
      uint64_t v10 = v50;
      goto LABEL_26;
    }
    int64_t v39 = v58 + 1;
    if (__OFADD__(v58, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v39 < v47)
    {
      unint64_t v40 = *(void *)(v46 + 8 * v39);
      if (v40) {
        goto LABEL_11;
      }
      int64_t v41 = v58 + 2;
      ++v58;
      if (v39 + 1 < v47)
      {
        unint64_t v40 = *(void *)(v46 + 8 * v41);
        if (v40) {
          goto LABEL_14;
        }
        int64_t v58 = v39 + 1;
        if (v39 + 2 < v47)
        {
          unint64_t v40 = *(void *)(v46 + 8 * (v39 + 2));
          if (v40)
          {
            v39 += 2;
            goto LABEL_11;
          }
          int64_t v41 = v39 + 3;
          int64_t v58 = v39 + 2;
          if (v39 + 3 < v47) {
            break;
          }
        }
      }
    }
LABEL_25:
    uint64_t v42 = sub_24D2B7450(&qword_269861F90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v8, 1, 1, v42);
    unint64_t v63 = 0;
LABEL_26:
    sub_24D2C05AC((uint64_t)v8, (uint64_t)v10, &qword_269861F88);
    uint64_t v43 = sub_24D2B7450(&qword_269861F90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v10, 1, v43) == 1) {
      return swift_release();
    }
    sub_24D2B6EA8((uint64_t)&v10[*(int *)(v43 + 48)], (uint64_t)v65);
    uint64_t v1 = v57;
    (*v55)(v4, v10, v57);
    if (MEMORY[0x253326120](v56))
    {
      uint64_t v16 = v48;
      uint64_t v17 = *(void *)(v48 + 24);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v64[3] = type metadata accessor for FMFindingMockLocalizer();
      v64[4] = &off_26FF88430;
      v64[0] = v16;
      uint64_t v19 = *(void (**)(void *, unsigned char *, char *, uint64_t, uint64_t))(v17 + 8);
      swift_retain();
      v19(v64, v65, v4, ObjectType, v17);
      swift_unknownObjectRelease();
      sub_24D2B7278((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
      (*v54)(v4, v1);
      uint64_t result = sub_24D2B6E58((uint64_t)v64);
    }
    else
    {
      (*v54)(v4, v1);
      uint64_t result = sub_24D2B7278((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
    }
  }
  unint64_t v40 = *(void *)(v46 + 8 * v41);
  if (v40)
  {
LABEL_14:
    int64_t v39 = v41;
LABEL_11:
    unint64_t v63 = (v40 - 1) & v40;
    unint64_t v21 = __clz(__rbit64(v40)) + (v39 << 6);
    int64_t v58 = v39;
    goto LABEL_7;
  }
  while (1)
  {
    int64_t v39 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v39 >= v47)
    {
      int64_t v58 = v45;
      goto LABEL_25;
    }
    unint64_t v40 = *(void *)(v46 + 8 * v39);
    ++v41;
    if (v40) {
      goto LABEL_11;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_24D320208(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24D39C8A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  swift_beginAccess();
  sub_24D2B7278(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = 0x8000000000000000;
  sub_24D2D60E4(a1, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + 40) = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_endAccess();
  return sub_24D31FB50();
}

uint64_t sub_24D320374(uint64_t a1)
{
  return sub_24D3203A4(a1, (void (*)(uint64_t *__return_ptr, __int16 *))sub_24D31ED6C);
}

uint64_t sub_24D32038C(uint64_t a1)
{
  return sub_24D3203A4(a1, (void (*)(uint64_t *__return_ptr, __int16 *))sub_24D31F400);
}

uint64_t sub_24D3203A4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, __int16 *))
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_24D39C8A0();
  uint64_t v58 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2 + 40;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v2 + 40);
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_24D3839F0(a1);
    if (v12)
    {
      sub_24D2B6EA8(*(void *)(v10 + 56) + 104 * v11, (uint64_t)v77);
      sub_24D2B7278((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
      swift_bridgeObjectRelease();
      v60[0] = *(_WORD *)(v4 + 32);
      a2(&v61, v60);
      uint64_t v14 = v61;
      uint64_t v13 = v62;
      uint64_t v40 = v62;
      uint64_t v41 = v61;
      uint64_t v15 = v63;
      uint64_t v57 = v6;
      uint64_t v16 = v64;
      uint64_t v53 = v65;
      unsigned __int8 v54 = v63;
      uint64_t v17 = v66;
      uint64_t v44 = v66;
      uint64_t v45 = a1;
      uint64_t v46 = v9;
      uint64_t v18 = v67;
      uint64_t v19 = v68;
      uint64_t v42 = v64;
      uint64_t v43 = v68;
      int64_t v39 = v8;
      uint64_t v20 = v71;
      uint64_t v51 = v72;
      uint64_t v52 = v70;
      uint64_t v37 = v74;
      uint64_t v38 = v73;
      uint64_t v55 = v69;
      unint64_t v56 = v73 | ((unint64_t)v74 << 32);
      uint64_t v50 = v75;
      int v49 = v76;
      sub_24D2B7278((uint64_t)v77, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
      uint64_t v61 = v14;
      uint64_t v62 = v13;
      unint64_t v63 = v15;
      int v64 = v16;
      uint64_t v22 = v52;
      uint64_t v21 = v53;
      uint64_t v65 = v53;
      uint64_t v66 = v17;
      uint64_t v47 = v20;
      uint64_t v48 = v18;
      uint64_t v67 = v18;
      uint64_t v68 = v19;
      uint64_t v23 = v55;
      uint64_t v69 = v55;
      uint64_t v70 = v52;
      uint64_t v24 = v51;
      uint64_t v71 = v20;
      uint64_t v72 = v51;
      unsigned __int8 v74 = v37;
      uint64_t v25 = (uint64_t)v39;
      unsigned int v73 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v39, v45, v57);
      swift_beginAccess();
      uint64_t v36 = v24;
      uint64_t v34 = v22;
      uint64_t v35 = v20;
      uint64_t v27 = v40;
      uint64_t v26 = v41;
      long long v28 = v42;
      uint64_t v29 = v21;
      uint64_t v30 = v43;
      uint64_t v31 = v44;
      sub_24D2B6F48(v41, v40, v54, v42, v29, v44, v18, v43, v23, v34, v35, v36, v56);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v59 = *(void *)(v4 + 40);
      *(void *)(v4 + 40) = 0x8000000000000000;
      sub_24D2D60E4((uint64_t)&v61, v25, isUniquelyReferenced_nonNull_native);
      *(void *)(v4 + 40) = v59;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v25, v57);
      swift_endAccess();
      sub_24D31FB50();
      sub_24D2B72E4(v26, v27, v54, v28, v53, v31, v48, v30, v55, v52, v47, v51, v56);
      return v50;
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_24D3206FC()
{
  sub_24D2C6E6C(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FMFindingMockLocalizer()
{
  return self;
}

void sub_24D320760(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(*(void *)v1 + 32);
}

void sub_24D320770(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = v3;
  unsigned __int8 v74 = a3;
  uint64_t v7 = sub_24D39C8A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v75 = (uint64_t)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24D2B7450(&qword_269861CE0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v55[1] = v4;
  uint64_t v16 = &v14[*(int *)(v11 + 48)];
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v56 = *(void *)(v12 + 72);
  unsigned int v73 = (void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  id v55[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v58 = v8;
  uint64_t v59 = v7;
  uint64_t v57 = v14;
  while (1)
  {
    uint64_t v60 = v15;
    sub_24D320F70(v17, (uint64_t)v14);
    uint64_t v18 = *v73;
    uint64_t v19 = v75;
    (*v73)(v75, v14, v7);
    uint64_t v20 = *((void *)v16 + 1);
    uint64_t v65 = *(void *)v16;
    uint64_t v66 = v20;
    uint64_t v21 = (void *)*((void *)v16 + 3);
    uint64_t v67 = (void *)*((void *)v16 + 2);
    uint64_t v68 = v21;
    uint64_t v22 = *((void *)v16 + 5);
    uint64_t v69 = *((void *)v16 + 4);
    uint64_t v70 = v22;
    uint64_t v23 = *((void *)v16 + 7);
    uint64_t v71 = *((void *)v16 + 6);
    uint64_t v72 = v23;
    uint64_t v24 = *((void *)v16 + 8);
    uint64_t v63 = *((void *)v16 + 9);
    uint64_t v64 = v24;
    uint64_t v25 = *((void *)v16 + 10);
    uint64_t v61 = *((void *)v16 + 11);
    uint64_t v62 = v25;
    uint64_t v26 = v16[100];
    uint64_t v27 = *((unsigned int *)v16 + 24);
    long long v28 = (void *)*v74;
    unint64_t v30 = sub_24D3839F0(v19);
    uint64_t v31 = v28[2];
    BOOL v32 = (v29 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_24D39D4F0();
      __break(1u);
      goto LABEL_20;
    }
    char v34 = v29;
    if (v28[3] < v33) {
      break;
    }
    if (a2)
    {
      uint64_t v37 = v27 | (v26 << 32);
      if (v29) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_24D2D27C0();
      uint64_t v37 = v27 | (v26 << 32);
      if (v34) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v38 = v75;
    int64_t v39 = (void *)*v74;
    *(void *)(*v74 + 8 * (v30 >> 6) + 64) |= 1 << v30;
    uint64_t v7 = v59;
    v18(v39[6] + *(void *)(v58 + 72) * v30, (char *)v38, v59);
    uint64_t v40 = v39[7] + 104 * v30;
    uint64_t v41 = v66;
    *(void *)uint64_t v40 = v65;
    *(void *)(v40 + 8) = v41;
    uint64_t v42 = v68;
    *(void *)(v40 + 16) = v67;
    *(void *)(v40 + 24) = v42;
    uint64_t v43 = v70;
    *(void *)(v40 + 32) = v69;
    *(void *)(v40 + 40) = v43;
    uint64_t v44 = v72;
    *(void *)(v40 + 48) = v71;
    *(void *)(v40 + 56) = v44;
    uint64_t v45 = v63;
    *(void *)(v40 + 64) = v64;
    *(void *)(v40 + 72) = v45;
    uint64_t v46 = v61;
    *(void *)(v40 + 80) = v62;
    *(void *)(v40 + 88) = v46;
    *(unsigned char *)(v40 + 100) = BYTE4(v37);
    *(_DWORD *)(v40 + 96) = v37;
    uint64_t v47 = v39[2];
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48) {
      goto LABEL_18;
    }
    _OWORD v39[2] = v49;
    v17 += v56;
    a2 = 1;
    uint64_t v15 = v60 - 1;
    uint64_t v14 = v57;
    if (v60 == 1)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_24D2D3F50(v33, a2 & 1);
  unint64_t v35 = sub_24D3839F0(v75);
  if ((v34 & 1) != (v36 & 1)) {
    goto LABEL_19;
  }
  unint64_t v30 = v35;
  uint64_t v37 = v27 | (v26 << 32);
  if ((v34 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v50 = (void *)swift_allocError();
  swift_willThrow();
  id v78 = v50;
  id v51 = v50;
  sub_24D2B7450((uint64_t *)&unk_269860F00);
  char v52 = swift_dynamicCast();
  uint64_t v54 = v58;
  uint64_t v53 = v59;
  if ((v52 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_24D2B72E4(v65, v66, v67, v68, v69, v70, v71, v72, v64, v63, v62, v61, v37);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v75, v53);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v76 = 0;
  unint64_t v77 = 0xE000000000000000;
  sub_24D39D1D0();
  sub_24D39CB70();
  sub_24D39D290();
  sub_24D39CB70();
  sub_24D39D2B0();
  __break(1u);
}

uint64_t sub_24D320CB4(uint64_t a1, _WORD *a2)
{
  uint64_t v5 = sub_24D2B7450(&qword_269861CE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOWORD(a2) = *a2;
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v21 = v2;
  *(_WORD *)(v2 + 32) = (_WORD)a2;
  int64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_24D3836D4(0, v9, 0);
    v20[1] = a1;
    uint64_t v10 = a1 + 32;
    uint64_t v11 = v25;
    do
    {
      sub_24D2B6CE8(v10, (uint64_t)v22);
      uint64_t v12 = &v8[*(int *)(v5 + 48)];
      uint64_t v14 = v23;
      uint64_t v13 = v24;
      sub_24D2B8A34(v22, v23);
      (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v14, v13);
      *((_OWORD *)v12 + 4) = 0u;
      *((_OWORD *)v12 + 5) = 0u;
      *((_OWORD *)v12 + 2) = 0u;
      *((_OWORD *)v12 + 3) = 0u;
      *(_OWORD *)uint64_t v12 = 0u;
      *((_OWORD *)v12 + 1) = 0u;
      v12[100] = 0;
      *((_DWORD *)v12 + 24) = 0x4000000;
      sub_24D2B6E58((uint64_t)v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24D3836D4(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v11 = v25;
      }
      unint64_t v16 = *(void *)(v11 + 16);
      unint64_t v15 = *(void *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_24D3836D4(v15 > 1, v16 + 1, 1);
        uint64_t v11 = v25;
      }
      *(void *)(v11 + 16) = v16 + 1;
      sub_24D2C05AC((uint64_t)v8, v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, &qword_269861CE0);
      v10 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    if (*(void *)(v11 + 16)) {
      goto LABEL_9;
    }
LABEL_11:
    uint64_t v17 = MEMORY[0x263F8EE80];
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(MEMORY[0x263F8EE78] + 16)) {
    goto LABEL_11;
  }
LABEL_9:
  sub_24D2B7450(&qword_2698610E8);
  uint64_t v17 = sub_24D39D300();
LABEL_12:
  v22[0] = v17;
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_24D320770(v18, 1, v22);
  swift_bridgeObjectRelease();
  uint64_t result = v21;
  *(void *)(v21 + 40) = v22[0];
  return result;
}

uint64_t sub_24D320F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269861CE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D320FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_24D320FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

void sub_24D321000(uint64_t a1, uint64_t a2)
{
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for FMR1DevicePoseProvider();
  objc_msgSendSuper2(&v15, sel_session_didUpdateFrame_, a1, a2);
  uint64_t v5 = MEMORY[0x253326120](&v2[OBJC_IVAR____TtC11FMFindingUI22FMR1DevicePoseProvider_frameDelegate]);
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = MEMORY[0x253326120](v5+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
    if (!v7)
    {
LABEL_5:
      swift_unknownObjectRelease();
      return;
    }
    uint64_t v8 = (void *)v7;
    uint64_t v9 = v6
       + OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate;
    if (MEMORY[0x253326120](v6+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_delegate))
    {
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t ObjectType = swift_getObjectType();
      void v14[3] = type metadata accessor for FMFindingLocalizer();
      v14[4] = &off_26FF86750;
      v14[0] = v8;
      uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32);
      id v13 = v8;
      v12(v14, a1, a2, ObjectType, v10);
      swift_unknownObjectRelease();

      sub_24D2B6E58((uint64_t)v14);
      goto LABEL_5;
    }
    swift_unknownObjectRelease();
  }
}

id sub_24D3212E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1DevicePoseProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMR1DevicePoseProvider()
{
  return self;
}

uint64_t sub_24D321348(void *a1)
{
  uint64_t v3 = type metadata accessor for FMFindingLocalizerError();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x253326120](v1 + OBJC_IVAR____TtC11FMFindingUI22FMR1DevicePoseProvider_frameDelegate);
  if (result)
  {
    uint64_t v7 = MEMORY[0x253326120](result+ OBJC_IVAR____TtCC11FMFindingUI18FMFindingLocalizerP33_22F1FFC3BC980B33F05B7EB45077AC7718DelegateTrampoline_owner);
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      *uint64_t v5 = a1;
      swift_storeEnumTagMultiPayload();
      id v9 = a1;
      sub_24D2CAC5C((uint64_t)v5, 0);

      sub_24D2D7064((uint64_t)v5);
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void destroy for FMFindingViewStyle(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for FMFindingViewStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  id v11 = v3;
  id v12 = v4;
  id v13 = v5;
  id v14 = v6;
  return a1;
}

uint64_t assignWithCopy for FMFindingViewStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  long long v7 = *(void **)(a2 + 8);
  long long v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  long long v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  id v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  return a1;
}

__n128 initializeWithTake for FMFindingViewStyle(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for FMFindingViewStyle(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  long long v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingViewStyle(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingViewStyle()
{
  return &type metadata for FMFindingViewStyle;
}

double sub_24D3217CC()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x263F835B8]);
  uint64_t v2 = sub_24D30DF70(2);

  id v3 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x263F835E0]);
  uint64_t v4 = sub_24D30DF70(2);

  id v5 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x263F83628]);
  uint64_t v6 = sub_24D30DF70(2);

  id v7 = objc_msgSend(v0, sel_preferredFontForTextStyle_, *MEMORY[0x263F83570]);
  uint64_t v8 = sub_24D30DF70(2);

  *(void *)&xmmword_26986A2C0 = v2;
  *((void *)&xmmword_26986A2C0 + 1) = v4;
  qword_26986A2D0 = v6;
  unk_26986A2D8 = v8;
  xmmword_26986A2E0 = xmmword_24D3A2430;
  unk_26986A2F0 = xmmword_24D3A2440;
  xmmword_26986A300 = xmmword_24D3A2450;
  unk_26986A310 = xmmword_24D3A2460;
  xmmword_26986A320 = xmmword_24D3A2470;
  unk_26986A330 = xmmword_24D3A2480;
  xmmword_26986A340 = xmmword_24D3A2490;
  unk_26986A350 = xmmword_24D3A24A0;
  double result = 65.0;
  xmmword_26986A360 = xmmword_24D3A24B0;
  qword_26986A370 = 0x4020000000000000;
  return result;
}

uint64_t sub_24D32194C(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id FMItemBTConnectionManager.__allocating_init(findables:connectionContext:)(uint64_t a1, char *a2)
{
  id v5 = objc_allocWithZone(v2);
  return FMItemBTConnectionManager.init(findables:connectionContext:)(a1, a2);
}

id FMItemBTConnectionManager.init(findables:connectionContext:)(uint64_t a1, char *a2)
{
  char v4 = *a2;
  id v5 = objc_allocWithZone(MEMORY[0x263F66168]);
  uint64_t v6 = v2;
  id v7 = objc_msgSend(v5, sel_init);
  type metadata accessor for FMIPConnectionManager();
  swift_allocObject();
  *(void *)&v6[OBJC_IVAR____TtC11FMFindingUI25FMItemBTConnectionManager_fmipConnectionManager] = sub_24D2C4378(v7);

  LOBYTE(v24) = v4;
  id v8 = sub_24D2B7AB0(a1, (unsigned __int8 *)&v24);
  long long v9 = self;
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_defaultCenter);
  objc_msgSend(v11, sel_addObserver_selector_name_object_, v10, sel_applicationDidEnterBackground, *MEMORY[0x263F83330], 0);

  id v12 = objc_msgSend(v9, sel_defaultCenter);
  objc_msgSend(v12, sel_addObserver_selector_name_object_, v10, sel_applicationWillEnterForeground, *MEMORY[0x263F833B8], 0);

  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_24D39C950();
  sub_24D2B508C(v13, (uint64_t)qword_269869FB8);
  id v14 = v10;
  id v15 = sub_24D39C930();
  os_log_type_t v16 = sub_24D39CDF0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v24 = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = MEMORY[0x253324C50](v19, MEMORY[0x263F8D310]);
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    sub_24D2B8328(v20, v22, &v24);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v15, v16, "FMItemBTConnectionManager: initialized for items: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v18, -1, -1);
    MEMORY[0x253326010](v17, -1, -1);
  }
  else
  {
  }
  return v14;
}

uint64_t sub_24D321CD0()
{
  return swift_release();
}

id FMItemBTConnectionManager.__deallocating_deinit()
{
  id v1 = self;
  id v2 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, *MEMORY[0x263F833B8], 0);

  id v3 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, *MEMORY[0x263F83330], 0);

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for FMItemBTConnectionManager();
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

uint64_t sub_24D321EA0()
{
  return sub_24D321F14("FMItemBTConnectionManager: requesting connection for items: %s", "FMItemsActionController: Connecting...", (void (*)(uint64_t, uint64_t, uint64_t))sub_24D2C59F0);
}

void sub_24D321EC8(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_24D321EEC()
{
  return sub_24D321F14("FMItemBTConnectionManager: requesting disconnection for items: %s", "FMItemsActionController: Disconnecting...", (void (*)(uint64_t, uint64_t, uint64_t))sub_24D2C6800);
}

uint64_t sub_24D321F14(char *a1, const char *a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24D39C950();
  sub_24D2B508C(v5, (uint64_t)qword_269869FB8);
  uint64_t v6 = v3;
  id v7 = sub_24D39C930();
  os_log_type_t v8 = sub_24D39CDF0();
  if (os_log_type_enabled(v7, v8))
  {
    format = a1;
    long long v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)long long v9 = 136315138;
    uint64_t v28 = v24;
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = MEMORY[0x253324C50](v10, MEMORY[0x263F8D310]);
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_24D2B8328(v11, v13, &v28);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v7, v8, format, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v24, -1, -1);
    MEMORY[0x253326010](v9, -1, -1);
  }
  else
  {
  }
  uint64_t result = *(void *)&v6[OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_identifiers];
  uint64_t v15 = *(void *)(result + 16);
  if (v15)
  {
    uint64_t v16 = OBJC_IVAR____TtC11FMFindingUI25FMItemBTConnectionManager_fmipConnectionManager;
    uint64_t v17 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v20 = *(v17 - 1);
      uint64_t v19 = *v17;
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_24D39C930();
      os_log_type_t v22 = sub_24D39CDF0();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_24D2B1000, v21, v22, a2, v23, 2u);
        MEMORY[0x253326010](v23, -1, -1);
      }
      v17 += 2;

      uint64_t v18 = *(void *)&v6[v16];
      swift_retain();
      a3(v20, v19, v18);
      swift_bridgeObjectRelease();
      swift_release();
      --v15;
    }
    while (v15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24D32222C(void *a1, uint64_t a2, const char *a3, void (*a4)(void))
{
  uint64_t v6 = qword_2698602A8;
  id v11 = a1;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_24D39C950();
  sub_24D2B508C(v7, (uint64_t)qword_269869FB8);
  os_log_type_t v8 = sub_24D39C930();
  os_log_type_t v9 = sub_24D39CDF0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_24D2B1000, v8, v9, a3, v10, 2u);
    MEMORY[0x253326010](v10, -1, -1);
  }

  a4();
}

uint64_t sub_24D322340()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  swift_beginAccess();
  return MEMORY[0x253326120](v1);
}

uint64_t sub_24D322390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_24D3223FC(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x253326120](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_24D30A7BC;
}

id FMItemR1ConnectionManager.__allocating_init(findables:connectionContext:)(uint64_t a1, char *a2)
{
  id v5 = objc_allocWithZone(v2);
  return FMItemR1ConnectionManager.init(findables:connectionContext:)(a1, a2);
}

id FMItemR1ConnectionManager.init(findables:connectionContext:)(uint64_t a1, char *a2)
{
  char v4 = *a2;
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_localizerSubscriptions] = MEMORY[0x263F8EE78];
  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v5 = qword_2698602C8;
  uint64_t v6 = v2;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_26986A028;
  *(void *)&v6[OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_proximityManager] = qword_26986A028;
  id v8 = v7;

  LOBYTE(v23) = v4;
  id v9 = sub_24D2B7AB0(a1, (unsigned __int8 *)&v23);
  uint64_t v10 = qword_2698602A8;
  id v11 = v9;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_24D39C950();
  sub_24D2B508C(v12, (uint64_t)qword_269869FB8);
  id v13 = v11;
  id v14 = sub_24D39C930();
  os_log_type_t v15 = sub_24D39CDF0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = MEMORY[0x253324C50](v18, MEMORY[0x263F8D310]);
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    sub_24D2B8328(v19, v21, &v23);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v14, v15, "FMItemR1ConnectionManager: initialized for items: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v17, -1, -1);
    MEMORY[0x253326010](v16, -1, -1);
  }
  else
  {
  }
  return v13;
}

uint64_t sub_24D322744()
{
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_24D39C950();
  sub_24D2B508C(v1, (uint64_t)qword_269869FB8);
  uint64_t v2 = v0;
  id v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v23 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = MEMORY[0x253324C50](v7, MEMORY[0x263F8D310]);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_24D2B8328(v8, v10, &v23);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v3, v4, "FMItemR1ConnectionManager: requesting connection for items: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v6, -1, -1);
    MEMORY[0x253326010](v5, -1, -1);
  }
  else
  {
  }
  uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI19FMConnectionManager_findables];
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = v11 + 32;
    v2;
    swift_bridgeObjectRetain();
    uint64_t v14 = type metadata accessor for FMR1ProximityManagerSubscription();
    do
    {
      MEMORY[0x270FA5388](v14);
      id v16 = v15;
      sub_24D39CEA0();

      MEMORY[0x253324C20](v17, v18, v19);
      if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24D39CC40();
      }
      sub_24D39CC60();
      uint64_t v14 = sub_24D39CC30();
      v13 += 40;
      --v12;
    }
    while (v12);
    uint64_t v20 = v23;
  }
  else
  {
    unint64_t v21 = v2;
    swift_bridgeObjectRetain();
    uint64_t v20 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();

  *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_localizerSubscriptions] = v20;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D322AA0()
{
  uint64_t v41 = sub_24D39C990();
  uint64_t v1 = *(char **)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v40 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_24D39C9D0();
  uint64_t v3 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v38 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24D39C950();
  sub_24D2B508C(v5, (uint64_t)qword_269869FB8);
  uint64_t v6 = v0;
  uint64_t v7 = sub_24D39C930();
  os_log_type_t v8 = sub_24D39CDF0();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    uint64_t v37 = v1;
    uint64_t v10 = aBlock[0];
    *(_DWORD *)unint64_t v9 = 136315138;
    char v36 = v9 + 4;
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = MEMORY[0x253324C50](v11, MEMORY[0x263F8D310]);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_24D2B8328(v12, v14, aBlock);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v7, v8, "FMItemR1ConnectionManager: requesting disconnection for items: %s", v9, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v10;
    uint64_t v1 = v37;
    MEMORY[0x253326010](v15, -1, -1);
    MEMORY[0x253326010](v9, -1, -1);
  }
  else
  {
  }
  id v16 = *(uint8_t **)&v6[OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_localizerSubscriptions];
  uint64_t v37 = v6;
  if (!((unint64_t)v16 >> 62))
  {
    uint64_t v17 = *(void *)(((unint64_t)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_8;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_24D39D2D0();
  uint64_t v17 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_8:
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    unint64_t v33 = (unint64_t)v16 & 0xC000000000000001;
    uint64_t v34 = OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_proximityManager;
    uint64_t v31 = (void (**)(char *, uint64_t))(v1 + 8);
    BOOL v32 = v44;
    unint64_t v30 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v35 = v17;
    char v36 = v16;
    uint64_t v20 = v38;
    unint64_t v21 = v40;
    uint64_t v22 = v41;
    do
    {
      if (v33) {
        id v23 = (id)MEMORY[0x253325220](v19, v16);
      }
      else {
        id v23 = *(id *)&v16[8 * v19 + 32];
      }
      uint64_t v24 = v23;
      ++v19;
      uint64_t v25 = *(void **)&v37[v34];
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      *(void *)(v26 + 24) = v24;
      v44[2] = sub_24D2F6130;
      v44[3] = v26;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      v44[0] = sub_24D32194C;
      v44[1] = &unk_26FF88588;
      uint64_t v27 = _Block_copy(aBlock);
      id v28 = v25;
      id v29 = v24;
      sub_24D39C9B0();
      uint64_t v42 = MEMORY[0x263F8EE78];
      sub_24D2C83E0();
      sub_24D2B7450((uint64_t *)&unk_2698610D0);
      sub_24D2C8438();
      sub_24D39D0E0();
      MEMORY[0x253324EE0](0, v20, v21, v27);
      _Block_release(v27);
      (*v31)(v21, v22);
      (*v30)(v20, v39);

      swift_release();
      id v16 = v36;
    }
    while (v35 != v19);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D322FC8()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  return sub_24D2C6E6C(v1);
}

id FMItemR1ConnectionManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemR1ConnectionManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_24D3230A8(char a1)
{
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_24D39C950();
  sub_24D2B508C(v3, (uint64_t)qword_269869FB8);
  uint64_t v4 = sub_24D39C930();
  os_log_type_t v5 = sub_24D39CDF0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    v16[0] = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    unint64_t v8 = 0xE700000000000000;
    uint64_t v9 = 0x6E776F6E6B6E75;
    switch(a1)
    {
      case 1:
        unint64_t v8 = 0xE900000000000079;
        uint64_t v9 = 0x6461657220746F6ELL;
        break;
      case 2:
        unint64_t v8 = 0xE500000000000000;
        uint64_t v9 = 0x7964616572;
        break;
      case 3:
        unint64_t v8 = 0xE500000000000000;
        uint64_t v9 = 0x726F727265;
        break;
      case 4:
        uint64_t v9 = 0x666F206574617473;
        unint64_t v8 = 0xE900000000000066;
        break;
      default:
        break;
    }
    sub_24D2B8328(v9, v8, v16);
    sub_24D39D070();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v4, v5, "FMItemR1ConnectionManager: item localizer: entered state: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v7, -1, -1);
    MEMORY[0x253326010](v6, -1, -1);
  }

  if (a1)
  {
    uint64_t v10 = v1 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
    swift_beginAccess();
    if (MEMORY[0x253326120](v10))
    {
      uint64_t v11 = *(void *)(v10 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, BOOL, void, uint64_t, uint64_t))(v11 + 8))(v1, a1 == 2, 0, ObjectType, v11);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    unint64_t v13 = sub_24D39C930();
    os_log_type_t v14 = sub_24D39CDF0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_24D2B1000, v13, v14, "FMItemR1ConnectionManager: ignoring unknown state, waiting for a decision to be made before forwarding.", v15, 2u);
      MEMORY[0x253326010](v15, -1, -1);
    }
  }
}

uint64_t sub_24D3233B8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x253326120](v3);
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, 0, a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FMItemBTConnectionManager()
{
  return self;
}

uint64_t sub_24D323478()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D3234B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D3234C8()
{
  return swift_release();
}

uint64_t type metadata accessor for FMItemR1ConnectionManager()
{
  return self;
}

uint64_t sub_24D3234F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x253326120](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_24D323550(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC11FMFindingUI25FMItemR1ConnectionManager_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for FMItemBTConnectionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMItemBTConnectionManager);
}

uint64_t dispatch thunk of FMItemBTConnectionManager.__allocating_init(findables:connectionContext:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of FMItemR1ConnectionManagerDelegate.itemConnectionManager(_:isAvailable:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for FMItemR1ConnectionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMItemR1ConnectionManager);
}

uint64_t dispatch thunk of FMItemR1ConnectionManager.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of FMItemR1ConnectionManager.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of FMItemR1ConnectionManager.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of FMItemR1ConnectionManager.__allocating_init(findables:connectionContext:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

void sub_24D3236BC(uint64_t a1, void *a2)
{
}

void sub_24D3236C8(uint64_t a1, void *a2)
{
}

void sub_24D3236D4(uint64_t a1, void *a2, const char *a3)
{
  if (qword_2698602A8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_24D39C950();
  sub_24D2B508C(v5, (uint64_t)qword_269869FB8);
  id v6 = a2;
  id v7 = a2;
  osos_log_t log = sub_24D39C930();
  os_log_type_t v8 = sub_24D39CDF0();
  if (os_log_type_enabled(oslog, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    id v11 = a2;
    sub_24D2B7450(&qword_269861E18);
    uint64_t v12 = sub_24D39CB20();
    sub_24D2B8328(v12, v13, &v15);
    sub_24D39D070();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_24D2B1000, oslog, v8, a3, v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v10, -1, -1);
    MEMORY[0x253326010](v9, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_24D3238D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    os_log_type_t v8 = (_OWORD *)(a1 + 24);
    uint64_t v9 = a2 + 3;
    uint64_t v10 = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      uint64_t v11 = a2[7];
      *(void *)(v4 + 48) = v10;
      *(void *)(v4 + 56) = v11;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(v4 + 24, (uint64_t)(a2 + 3), v10);
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 5);
      *os_log_type_t v8 = *v9;
      *(_OWORD *)(v4 + 40) = v13;
      *(void *)(v4 + 56) = a2[7];
    }
    *(void *)(v4 + 64) = a2[8];
    uint64_t v14 = *(int *)(a3 + 36);
    uint64_t v15 = v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_24D39C8A0();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
  }
  return v4;
}

uint64_t sub_24D323A44(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48)) {
    sub_24D2B6E58(a1 + 24);
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_24D39C8A0();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_24D323ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = (_OWORD *)(a1 + 24);
  uint64_t v8 = a2 + 24;
  uint64_t v9 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(a1 + 24, v8, v9);
  }
  else
  {
    long long v11 = *(_OWORD *)(v8 + 16);
    *uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 40) = v11;
    *(void *)(a1 + 56) = *(void *)(v8 + 32);
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_24D39C8A0();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  return a1;
}

uint64_t sub_24D323BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48))
  {
    if (v6)
    {
      *(void *)(a1 + 48) = v6;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 24, a2 + 24);
      goto LABEL_8;
    }
LABEL_7:
    long long v7 = *(_OWORD *)(a2 + 24);
    long long v8 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 40) = v8;
    goto LABEL_8;
  }
  if (!v6)
  {
    sub_24D2B6E58(a1 + 24);
    goto LABEL_7;
  }
  sub_24D323D50((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
LABEL_8:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_24D39C8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t *sub_24D323D50(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_24D323F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a2 + v5;
  uint64_t v7 = a1 + v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  uint64_t v8 = sub_24D39C8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, v6, v8);
  return a1;
}

uint64_t sub_24D32401C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48)) {
    sub_24D2B6E58(a1 + 24);
  }
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_24D39C8A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_24D3240F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24D324108);
}

uint64_t sub_24D324108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24D39C8A0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24D3241B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D3241CC);
}

uint64_t sub_24D3241CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24D39C8A0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FMFindingSessionState()
{
  uint64_t result = qword_269861FC0;
  if (!qword_269861FC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24D3242C0()
{
  uint64_t result = sub_24D39C8A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24D324374@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 8);
  if (*(void *)(v4 + 16)
    && (uint64_t v5 = type metadata accessor for FMFindingSessionState(),
        unint64_t v6 = sub_24D3839F0(v2 + *(int *)(v5 + 36)),
        (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(v4 + 56) + 40 * v6;
    return sub_24D2B6CE8(v8, a1);
  }
  else
  {
    uint64_t result = sub_24D39D2B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D324438(void *a1, void *a2)
{
  uint64_t v80 = a2;
  uint64_t v3 = sub_24D39C8A0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v69 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v68 = (char *)&v67 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v67 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v67 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v67 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v67 - v18;
  sub_24D2B6CE8((uint64_t)a1, (uint64_t)v74);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450((uint64_t *)&unk_269861150);
  if (swift_dynamicCast())
  {
    uint64_t v67 = v3;
    sub_24D2B6F04(v72, (uint64_t)v77);
    sub_24D2B6CE8((uint64_t)v80, (uint64_t)v72);
    if (swift_dynamicCast())
    {
      sub_24D2B6F04(v70, (uint64_t)v74);
      uint64_t v20 = v78;
      uint64_t v21 = v79;
      sub_24D2B8A34(v77, v78);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v21 + 32))(v72, v20, v21);
      uint64_t v22 = SLOBYTE(v72[0]);
      uint64_t v23 = v75;
      uint64_t v24 = v76;
      sub_24D2B8A34(v74, v75);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v24 + 32))(v70, v23, v24);
      float v25 = flt_24D3A25FC[v22];
      float v26 = flt_24D3A25FC[SLOBYTE(v70[0])];
      uint64_t v27 = v78;
      uint64_t v28 = v79;
      sub_24D2B8A34(v77, v78);
      id v29 = v68;
      (*(void (**)(uint64_t))(*(void *)(v28 + 8) + 16))(v27);
      uint64_t v30 = sub_24D39C850();
      uint64_t v32 = v31;
      unint64_t v33 = *(void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v34 = v67;
      v33(v29, v67);
      uint64_t v36 = v75;
      uint64_t v35 = v76;
      sub_24D2B8A34(v74, v75);
      uint64_t v37 = v69;
      (*(void (**)(uint64_t))(*(void *)(v35 + 8) + 16))(v36);
      uint64_t v38 = sub_24D39C850();
      uint64_t v40 = v39;
      v33(v37, v34);
      if (v30 == v38 && v32 == v40) {
        char v41 = 0;
      }
      else {
        char v41 = sub_24D39D4B0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v53 = (v25 < v26) & v41;
      sub_24D2B6E58((uint64_t)v74);
    }
    else
    {
      uint64_t v71 = 0;
      memset(v70, 0, sizeof(v70));
      sub_24D2BBFB4((uint64_t)v70, (uint64_t *)&unk_269861600);
      uint64_t v54 = a1[3];
      uint64_t v55 = a1[4];
      sub_24D2B8A34(a1, v54);
      (*(void (**)(uint64_t, uint64_t))(v55 + 16))(v54, v55);
      uint64_t v56 = sub_24D39C850();
      uint64_t v58 = v57;
      uint64_t v59 = *(void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v60 = v67;
      v59(v14, v67);
      uint64_t v61 = v80[3];
      uint64_t v62 = v80[4];
      sub_24D2B8A34(v80, v61);
      (*(void (**)(uint64_t, uint64_t))(v62 + 16))(v61, v62);
      uint64_t v63 = sub_24D39C850();
      uint64_t v65 = v64;
      v59(v11, v60);
      if (v56 == v63 && v58 == v65) {
        char v53 = 0;
      }
      else {
        char v53 = sub_24D39D4B0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24D2B6E58((uint64_t)v77);
  }
  else
  {
    uint64_t v73 = 0;
    memset(v72, 0, sizeof(v72));
    sub_24D2BBFB4((uint64_t)v72, (uint64_t *)&unk_269861600);
    uint64_t v42 = a1[3];
    uint64_t v43 = a1[4];
    sub_24D2B8A34(a1, v42);
    (*(void (**)(uint64_t, uint64_t))(v43 + 16))(v42, v43);
    uint64_t v44 = sub_24D39C850();
    uint64_t v46 = v45;
    uint64_t v47 = *(void (**)(char *, uint64_t))(v4 + 8);
    v47(v19, v3);
    uint64_t v48 = v80[3];
    uint64_t v49 = v80[4];
    sub_24D2B8A34(v80, v48);
    (*(void (**)(uint64_t, uint64_t))(v49 + 16))(v48, v49);
    uint64_t v50 = sub_24D39C850();
    uint64_t v52 = v51;
    v47(v17, v3);
    if (v44 == v50 && v46 == v52)
    {
      swift_bridgeObjectRelease_n();
      char v53 = 0;
    }
    else
    {
      char v53 = sub_24D39D4B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v53 & 1;
}

BOOL sub_24D324A74(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_24D39C8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_24D2B8A34(a1, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  if (*(void *)(v9 + 16) && (unint64_t v12 = sub_24D3839F0((uint64_t)v8), (v13 & 1) != 0))
  {
    uint64_t v36 = v2;
    uint64_t v14 = *(void *)(v9 + 56) + 104 * v12;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void **)(v14 + 16);
    uint64_t v17 = *(void **)(v14 + 24);
    uint64_t v18 = *(void *)(v14 + 32);
    uint64_t v19 = *(void *)(v14 + 40);
    uint64_t v20 = *(void *)(v14 + 48);
    uint64_t v21 = *(void *)(v14 + 56);
    uint64_t v22 = *(void *)(v14 + 64);
    uint64_t v23 = *(void *)(v14 + 72);
    uint64_t v24 = *(void *)(v14 + 80);
    uint64_t v25 = *(void *)(v14 + 88);
    int v26 = *(_DWORD *)(v14 + 96);
    uint64_t v34 = *(void *)(v14 + 8);
    uint64_t v35 = v15;
    uint64_t v32 = v17;
    unint64_t v33 = v16;
    uint64_t v30 = v19;
    uint64_t v31 = v18;
    uint64_t v28 = v21;
    uint64_t v29 = v20;
    sub_24D2B6F48(v15, v34, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_24D2B72E4(v35, v34, v33, v32, v31, v30, v29, v28, v22, v23, v24, v25, v26);
    return (v26 | 0x2000000u) >> 25 != 3;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
}

uint64_t sub_24D324C90()
{
  uint64_t v1 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24D2B7450(&qword_269861FD0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FMFindableGroupItem();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  char v13 = (uint64_t *)((char *)&v31 - v12);
  sub_24D324374((uint64_t)v34);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  int v14 = swift_dynamicCast();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (!v14)
  {
    v15(v6, 1, 1, v7);
    sub_24D2BBFB4((uint64_t)v6, &qword_269861FD0);
    sub_24D324374((uint64_t)v34);
    uint64_t v21 = v35;
    uint64_t v22 = v36;
    sub_24D2B8A34(v34, v35);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
    goto LABEL_18;
  }
  v15(v6, 0, 1, v7);
  sub_24D325800((uint64_t)v6, (uint64_t)v13);
  sub_24D305DD8(v0 + 24, (uint64_t)&v31);
  if (v32)
  {
    sub_24D2B6F04(&v31, (uint64_t)v34);
    uint64_t v16 = *(void *)(*(void *)(v0 + 8) + 16);
    sub_24D30A20C(v0, (uint64_t)v3);
    if (v16 == 1)
    {
      uint64_t v17 = *(void *)(*((void *)v3 + 2) + 16);
      sub_24D325864((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
      if (v17 == 1)
      {
        uint64_t v18 = (uint64_t *)((char *)v13 + *(int *)(v7 + 32));
        uint64_t v19 = *v18;
        uint64_t v20 = v18[1];
        sub_24D2B6CE8((uint64_t)v34, (uint64_t)&v31);
        if (!v20)
        {
          uint64_t v28 = v32;
          uint64_t v29 = v33;
          sub_24D2B8A34(&v31, v32);
          uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
        }
        swift_bridgeObjectRetain();
        sub_24D325864((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFindableGroupItem);
        sub_24D2B6E58((uint64_t)&v31);
        goto LABEL_18;
      }
    }
    else
    {
      sub_24D325864((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
    }
    uint64_t v24 = v35;
    uint64_t v25 = v36;
    sub_24D2B8A34(v34, v35);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
    sub_24D325864((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFindableGroupItem);
LABEL_18:
    sub_24D2B6E58((uint64_t)v34);
    return v19;
  }
  sub_24D2BBFB4((uint64_t)&v31, &qword_269860AA8);
  sub_24D305DD8(v0 + 24, (uint64_t)v34);
  uint64_t v23 = v35;
  sub_24D2BBFB4((uint64_t)v34, &qword_269860AA8);
  if (v23 || *(void *)(*(void *)(v0 + 16) + 16) < 2uLL)
  {
    int v26 = (uint64_t *)((char *)v13 + *(int *)(v7 + 32));
    uint64_t v19 = *v26;
    uint64_t v27 = v26[1];
    sub_24D325800((uint64_t)v13, (uint64_t)v11);
    if (!v27)
    {
      uint64_t v19 = *v11;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_24D325864((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFindableGroupItem);
  }
  else
  {
    uint64_t v19 = *v13;
    swift_bridgeObjectRetain();
    sub_24D325864((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FMFindableGroupItem);
  }
  return v19;
}

uint64_t sub_24D325100@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v68 = sub_24D39C8A0();
  uint64_t v12 = *(void *)(v68 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v68);
  uint64_t v67 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v58 - v15;
  int v63 = *a1;
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v18 = (void *)sub_24D312248(MEMORY[0x263F8EE78]);
  unint64_t v19 = sub_24D312448(v17);
  uint64_t v20 = a2;
  uint64_t v21 = (void *)v19;
  uint64_t v22 = *(void *)(v20 + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease();
LABEL_29:
    *(_WORD *)a6 = v63;
    *(void *)(a6 + 8) = v18;
    *(void *)(a6 + 64) = v21;
    sub_24D3258C4(a3, a6 + 24);
    uint64_t v56 = type metadata accessor for FMFindingSessionState();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(a6 + *(int *)(v56 + 36), a4, v68);
    *(void *)(a6 + 16) = a5;
    return result;
  }
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v61 = a6;
  uint64_t v62 = a5;
  v58[1] = v20;
  uint64_t v23 = v20 + 32;
  uint64_t v64 = v12 + 16;
  uint64_t v65 = v12;
  uint64_t v66 = (void (**)(char *, uint64_t))(v12 + 8);
  while (1)
  {
    sub_24D2B6CE8(v23, (uint64_t)v71);
    uint64_t v25 = v72;
    uint64_t v26 = v73;
    sub_24D2B8A34(v71, v72);
    (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
    sub_24D2B6CE8((uint64_t)v71, (uint64_t)v70);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v69 = v18;
    unint64_t v29 = sub_24D3839F0((uint64_t)v16);
    uint64_t v30 = v18[2];
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      break;
    }
    char v33 = v28;
    if (v18[3] >= v32)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v18 = v69;
        if (v28) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_24D2D31AC();
        uint64_t v18 = v69;
        if (v33) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_24D2D4E40(v32, isUniquelyReferenced_nonNull_native);
      unint64_t v34 = sub_24D3839F0((uint64_t)v16);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_34;
      }
      unint64_t v29 = v34;
      uint64_t v18 = v69;
      if (v33)
      {
LABEL_12:
        uint64_t v36 = v18[7] + 40 * v29;
        sub_24D2B6E58(v36);
        sub_24D2B6F04(v70, v36);
        goto LABEL_16;
      }
    }
    v18[(v29 >> 6) + 8] |= 1 << v29;
    (*(void (**)(unint64_t, char *, uint64_t))(v65 + 16))(v18[6] + *(void *)(v65 + 72) * v29, v16, v68);
    sub_24D2B6F04(v70, v18[7] + 40 * v29);
    uint64_t v37 = v18[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38) {
      goto LABEL_32;
    }
    v18[2] = v39;
    uint64_t v18 = v69;
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v40 = *v66;
    (*v66)(v16, v68);
    uint64_t v41 = v72;
    uint64_t v42 = v73;
    sub_24D2B8A34(v71, v72);
    uint64_t v43 = (uint64_t)v67;
    (*(void (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
    int v44 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v70[0] = v21;
    unint64_t v46 = sub_24D3839F0(v43);
    uint64_t v47 = v21[2];
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (__OFADD__(v47, v48)) {
      goto LABEL_31;
    }
    char v50 = v45;
    if (v21[3] >= v49)
    {
      if (v44)
      {
        uint64_t v21 = *(void **)&v70[0];
        if (v45) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_24D2D27C0();
        uint64_t v21 = *(void **)&v70[0];
        if (v50) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_24D2D3F50(v49, v44);
      unint64_t v51 = sub_24D3839F0((uint64_t)v67);
      if ((v50 & 1) != (v52 & 1)) {
        goto LABEL_34;
      }
      unint64_t v46 = v51;
      uint64_t v21 = *(void **)&v70[0];
      if (v50)
      {
LABEL_3:
        uint64_t v24 = v21[7] + 104 * v46;
        sub_24D2B72E4(*(void *)v24, *(void *)(v24 + 8), *(void **)(v24 + 16), *(void **)(v24 + 24), *(void *)(v24 + 32), *(void *)(v24 + 40), *(void *)(v24 + 48), *(void *)(v24 + 56), *(void *)(v24 + 64), *(void *)(v24 + 72), *(void *)(v24 + 80), *(void *)(v24 + 88), *(_DWORD *)(v24 + 96));
        *(_OWORD *)(v24 + 64) = 0u;
        *(_OWORD *)(v24 + 80) = 0u;
        *(_OWORD *)(v24 + 32) = 0u;
        *(_OWORD *)(v24 + 48) = 0u;
        *(_OWORD *)uint64_t v24 = 0u;
        *(_OWORD *)(v24 + 16) = 0u;
        *(unsigned char *)(v24 + 100) = 0;
        *(_DWORD *)(v24 + 96) = 0x4000000;
        goto LABEL_4;
      }
    }
    v21[(v46 >> 6) + 8] |= 1 << v46;
    (*(void (**)(unint64_t, char *, uint64_t))(v65 + 16))(v21[6] + *(void *)(v65 + 72) * v46, v67, v68);
    uint64_t v53 = v21[7] + 104 * v46;
    *(_OWORD *)uint64_t v53 = 0u;
    *(_OWORD *)(v53 + 16) = 0u;
    *(_OWORD *)(v53 + 32) = 0u;
    *(_OWORD *)(v53 + 48) = 0u;
    *(_OWORD *)(v53 + 64) = 0u;
    *(_OWORD *)(v53 + 80) = 0u;
    *(unsigned char *)(v53 + 100) = 0;
    *(_DWORD *)(v53 + 96) = 0x4000000;
    uint64_t v54 = v21[2];
    BOOL v38 = __OFADD__(v54, 1);
    uint64_t v55 = v54 + 1;
    if (v38) {
      goto LABEL_33;
    }
    void v21[2] = v55;
LABEL_4:
    swift_bridgeObjectRelease();
    v40(v67, v68);
    sub_24D2B6E58((uint64_t)v71);
    v23 += 40;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      a6 = v61;
      a5 = v62;
      a3 = v59;
      a4 = v60;
      uint64_t v12 = v65;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = sub_24D39D4F0();
  __break(1u);
  return result;
}

uint64_t sub_24D325664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24D39C8A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v4 + 64);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, a1, v8);
  swift_bridgeObjectRetain();
  sub_24D313AA4(a2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = v12;
  sub_24D2D60E4(a2, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
  uint64_t v15 = v21;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  LOWORD(v11) = *(_WORD *)v4;
  uint64_t v16 = *(void *)(v4 + 8);
  sub_24D305DD8(v4 + 24, a3 + 24);
  uint64_t v17 = type metadata accessor for FMFindingSessionState();
  v13((char *)(a3 + *(int *)(v17 + 36)), v4 + *(int *)(v17 + 36), v8);
  uint64_t v18 = *(void *)(v4 + 16);
  *(_WORD *)a3 = (_WORD)v11;
  *(void *)(a3 + 64) = v15;
  *(void *)(a3 + 8) = v16;
  *(void *)(a3 + 16) = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_24D325800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFindableGroupItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D325864(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24D3258C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269860AA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_24D32592C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24D39C8A0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    BOOL v38 = v13;
    v13(v9, v10, v11);
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    id v17 = *(id *)v16;
    uint64_t v18 = *((void *)v16 + 1);
    uint64_t v19 = *((void *)v16 + 2);
    char v20 = v16[24];
    sub_24D30CC58(*(id *)v16, v18, v19, v20);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    *((void *)v15 + 2) = v19;
    v15[24] = v20;
    uint64_t v21 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v22 = (void *)((char *)v4 + v21);
    uint64_t v23 = (void *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = a3[9];
    uint64_t v26 = (char *)v4 + v25;
    uint64_t v27 = (char *)a2 + v25;
    char v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v27, 1, v11))
    {
      uint64_t v29 = sub_24D2B7450((uint64_t *)&unk_269861100);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      v38(v26, v27, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
    }
    uint64_t v31 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    uint64_t v32 = (char *)v4 + v31;
    char v33 = (char *)a2 + v31;
    uint64_t v34 = *((void *)v33 + 1);
    if (v34)
    {
      *(void *)uint64_t v32 = *(void *)v33;
      *((void *)v32 + 1) = v34;
      uint64_t v35 = *((void *)v33 + 3);
      *((void *)v32 + 2) = *((void *)v33 + 2);
      *((void *)v32 + 3) = v35;
      v32[32] = v33[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v36 = *((_OWORD *)v33 + 1);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v36;
      v32[32] = v33[32];
    }
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  }
  return v4;
}

uint64_t sub_24D325BA8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_24D39C8A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  sub_24D2D78EC(*(void **)(a1 + a2[6]), *(void *)(a1 + a2[6] + 8), *(void *)(a1 + a2[6] + 16), *(unsigned char *)(a1 + a2[6] + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[9];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  uint64_t result = *(void *)(a1 + a2[11] + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_24D325CF8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24D39C8A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  long long v36 = v12;
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  id v16 = *(id *)v15;
  uint64_t v17 = *((void *)v15 + 1);
  uint64_t v18 = *((void *)v15 + 2);
  char v19 = v15[24];
  sub_24D30CC58(*(id *)v15, v17, v18, v19);
  *(void *)uint64_t v14 = v16;
  *((void *)v14 + 1) = v17;
  *((void *)v14 + 2) = v18;
  v14[24] = v19;
  uint64_t v20 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27(v26, 1, v10))
  {
    uint64_t v28 = sub_24D2B7450((uint64_t *)&unk_269861100);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v36(v25, v26, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
  }
  uint64_t v29 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *((void *)v31 + 1);
  if (v32)
  {
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = *((void *)v31 + 3);
    *((void *)v30 + 2) = *((void *)v31 + 2);
    *((void *)v30 + 3) = v33;
    v30[32] = v31[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *((_OWORD *)v31 + 1);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v34;
    v30[32] = v31[32];
  }
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

char *sub_24D325F24(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24D39C8A0();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  uint64_t v41 = *(void *)(v9 - 8);
  v40(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (char *)a2 + v10;
  id v13 = *(id *)v12;
  uint64_t v14 = *((void *)v12 + 1);
  uint64_t v15 = *((void *)v12 + 2);
  char v16 = v12[24];
  sub_24D30CC58(*(id *)v12, v14, v15, v16);
  uint64_t v17 = *(void **)v11;
  uint64_t v18 = *((void *)v11 + 1);
  uint64_t v19 = *((void *)v11 + 2);
  *(void *)uint64_t v11 = v13;
  *((void *)v11 + 1) = v14;
  *((void *)v11 + 2) = v15;
  char v20 = v11[24];
  v11[24] = v16;
  sub_24D2D78EC(v17, v18, v19, v20);
  *(void *)&a1[a3[7]] = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (void *)((char *)a2 + v21);
  *(void *)uint64_t v22 = *v23;
  *((void *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[9];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  LODWORD(v15) = v27(&a1[v24], 1, v9);
  int v28 = v27(v26, 1, v9);
  if (v15)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v25, v26, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v25, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v9);
LABEL_6:
    uint64_t v29 = sub_24D2B7450((uint64_t *)&unk_269861100);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  v40(v25, v26, v9);
LABEL_7:
  a1[a3[10]] = *((unsigned char *)a2 + a3[10]);
  uint64_t v30 = a3[11];
  uint64_t v31 = (uint64_t)&a1[v30];
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)&a1[v30 + 8];
  uint64_t v34 = *(void *)((char *)a2 + v30 + 8);
  if (v33)
  {
    if (v34)
    {
      *(void *)uint64_t v31 = *(void *)v32;
      *(void *)(v31 + 8) = *((void *)v32 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v31 + 16) = *((void *)v32 + 2);
      *(void *)(v31 + 24) = *((void *)v32 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v31 + 32) = v32[32];
    }
    else
    {
      sub_24D326278(v31);
      char v35 = v32[32];
      long long v36 = *((_OWORD *)v32 + 1);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      *(_OWORD *)(v31 + 16) = v36;
      *(unsigned char *)(v31 + 32) = v35;
    }
  }
  else if (v34)
  {
    *(void *)uint64_t v31 = *(void *)v32;
    *(void *)(v31 + 8) = *((void *)v32 + 1);
    *(void *)(v31 + 16) = *((void *)v32 + 2);
    *(void *)(v31 + 24) = *((void *)v32 + 3);
    *(unsigned char *)(v31 + 32) = v32[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v37 = *(_OWORD *)v32;
    long long v38 = *((_OWORD *)v32 + 1);
    *(unsigned char *)(v31 + 32) = v32[32];
    *(_OWORD *)uint64_t v31 = v37;
    *(_OWORD *)(v31 + 16) = v38;
  }
  a1[a3[12]] = *((unsigned char *)a2 + a3[12]);
  return a1;
}

uint64_t sub_24D326278(uint64_t a1)
{
  return a1;
}

_OWORD *sub_24D3262CC(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_24D39C8A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (_OWORD *)((char *)a1 + v12);
  uint64_t v15 = &a2[v12];
  *uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)(v15 + 9);
  *(void *)((char *)a1 + v13) = *(void *)&a2[v13];
  uint64_t v16 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)&a2[a3[8]];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = &a2[v16];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v16], 1, v9))
  {
    uint64_t v19 = sub_24D2B7450((uint64_t *)&unk_269861100);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v11(v17, v18, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  uint64_t v20 = a3[11];
  *((unsigned char *)a1 + a3[10]) = a2[a3[10]];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = &a2[v20];
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  v21[32] = v22[32];
  *((unsigned char *)a1 + a3[12]) = a2[a3[12]];
  return a1;
}

void *sub_24D326478(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24D39C8A0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v40(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = *((void *)v14 + 2);
  char v16 = v14[24];
  uint64_t v17 = *(void **)v13;
  uint64_t v18 = *((void *)v13 + 1);
  uint64_t v19 = *((void *)v13 + 2);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((void *)v13 + 2) = v15;
  char v20 = v13[24];
  unsigned char v13[24] = v16;
  sub_24D2D78EC(v17, v18, v19, v20);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  long long v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a2 + v26;
  int v28 = *(uint64_t (**)(void))(v11 + 48);
  uint64_t v41 = (char *)a1 + v26;
  int v29 = v28();
  int v30 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v27, 1, v10);
  if (v29)
  {
    if (v30)
    {
      size_t v31 = *(void *)(*(void *)(sub_24D2B7450((uint64_t *)&unk_269861100) - 8) + 64);
      uint64_t v32 = v41;
LABEL_6:
      memcpy(v32, v27, v31);
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v41, v27, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0, 1, v10);
  }
  else
  {
    if (v30)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v41, v10);
      size_t v31 = *(void *)(*(void *)(sub_24D2B7450((uint64_t *)&unk_269861100) - 8) + 64);
      uint64_t v32 = v41;
      goto LABEL_6;
    }
    v40(v41, v27, v10);
  }
LABEL_9:
  uint64_t v33 = a3[11];
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v34 = (char *)a1 + v33;
  char v35 = (char *)a2 + v33;
  if (!*(void *)((char *)a1 + v33 + 8))
  {
LABEL_13:
    long long v38 = *((_OWORD *)v35 + 1);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v38;
    goto LABEL_14;
  }
  uint64_t v36 = *((void *)v35 + 1);
  if (!v36)
  {
    sub_24D326278((uint64_t)a1 + v33);
    goto LABEL_13;
  }
  *(void *)uint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = *((void *)v35 + 3);
  *((void *)v34 + 2) = *((void *)v35 + 2);
  *((void *)v34 + 3) = v37;
  swift_bridgeObjectRelease();
LABEL_14:
  v34[32] = v35[32];
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  return a1;
}

uint64_t sub_24D326738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24D32674C);
}

uint64_t sub_24D32674C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24D39C8A0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24D2B7450((uint64_t *)&unk_269861100);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_24D32687C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D326890);
}

uint64_t sub_24D326890(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_24D39C8A0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_24D2B7450((uint64_t *)&unk_269861100);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for FMFindableGroupItem()
{
  uint64_t result = qword_269861FD8;
  if (!qword_269861FD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24D326A0C()
{
  sub_24D39C8A0();
  if (v0 <= 0x3F)
  {
    sub_24D326B1C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24D326B1C()
{
  if (!qword_269861FE8)
  {
    sub_24D39C8A0();
    unint64_t v0 = sub_24D39D040();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269861FE8);
    }
  }
}

uint64_t sub_24D326B74@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v6 = sub_24D2B7450((uint64_t *)&unk_269861100);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24D39C8A0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B6CE8((uint64_t)a1, (uint64_t)v59);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450((uint64_t *)&unk_269861150);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v63 = 0;
    memset(v62, 0, sizeof(v62));
  }
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_24D2B8A34(a1, v13);
  uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  uint64_t v47 = v15;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  sub_24D2B8A34(a1, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  sub_24D2BBF50((uint64_t)v62, (uint64_t)v59, (uint64_t *)&unk_269861600);
  uint64_t v18 = v60;
  if (v60)
  {
    uint64_t v19 = v61;
    sub_24D2B8A34(v59, v60);
    (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
    sub_24D2B6E58((uint64_t)v59);
  }
  else
  {
    sub_24D2F5850((uint64_t)v59);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  sub_24D2B8A34(a1, v20);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v21 + 24))(v57, v20, v21);
  uint64_t v46 = v57[0];
  uint64_t v45 = v57[1];
  uint64_t v44 = v57[2];
  int v43 = v58;
  sub_24D2BBF50((uint64_t)v62, (uint64_t)v59, (uint64_t *)&unk_269861600);
  uint64_t v22 = v60;
  if (v60)
  {
    uint64_t v23 = v61;
    sub_24D2B8A34(v59, v60);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 32))(v55, v22, v23);
    int v42 = LOBYTE(v55[0]);
    sub_24D2B6E58((uint64_t)v59);
  }
  else
  {
    sub_24D2F5850((uint64_t)v59);
    int v42 = 4;
  }
  uint64_t v49 = v12;
  uint64_t v50 = v10;
  uint64_t v51 = v9;
  char v52 = v8;
  sub_24D2BBF50((uint64_t)v62, (uint64_t)v59, (uint64_t *)&unk_269861600);
  uint64_t v24 = v60;
  if (v60)
  {
    uint64_t v25 = v61;
    sub_24D2B8A34(v59, v60);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v25 + 24))(v55, v24, v25);
    uint64_t v27 = v55[0];
    uint64_t v26 = v55[1];
    uint64_t v29 = v55[2];
    uint64_t v28 = v55[3];
    char v30 = v56;
    sub_24D2B6E58((uint64_t)v59);
  }
  else
  {
    sub_24D2F5850((uint64_t)v59);
    uint64_t v27 = 0;
    uint64_t v26 = 0;
    uint64_t v29 = 0;
    uint64_t v28 = 0;
    char v30 = 0;
  }
  uint64_t v31 = a1[3];
  uint64_t v32 = a1[4];
  sub_24D2B8A34(a1, v31);
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 32))(v31, v32);
  uint64_t v34 = (int *)type metadata accessor for FMFindableGroupItem();
  *((unsigned char *)a4 + v34[12]) = 0;
  uint64_t v35 = v47;
  *a4 = v48;
  a4[1] = v35;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))((char *)a4 + v34[5], v49, v51);
  sub_24D32728C((uint64_t)v52, (uint64_t)a4 + v34[9]);
  uint64_t v36 = (char *)a4 + v34[6];
  uint64_t v37 = v45;
  *(void *)uint64_t v36 = v46;
  *((void *)v36 + 1) = v37;
  *((void *)v36 + 2) = v44;
  v36[24] = v43;
  *((unsigned char *)a4 + v34[10]) = v42;
  long long v38 = (char *)a4 + v34[11];
  *(void *)long long v38 = v27;
  *((void *)v38 + 1) = v26;
  *((void *)v38 + 2) = v29;
  *((void *)v38 + 3) = v28;
  v38[32] = v30;
  uint64_t v39 = (uint64_t *)((char *)a4 + v34[8]);
  uint64_t v40 = v54;
  *uint64_t v39 = v53;
  v39[1] = v40;
  *(uint64_t *)((char *)a4 + v34[7]) = v33;
  sub_24D2F5850((uint64_t)v62);
  return sub_24D2B6E58((uint64_t)a1);
}

uint64_t sub_24D327078@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMFindableGroupItem();
  if (*(unsigned char *)(v1 + *(int *)(v3 + 24) + 24))
  {
    if (*(unsigned char *)(v1 + *(int *)(v3 + 48)) == 1)
    {
      if (qword_2698602F0 != -1) {
        swift_once();
      }
      unint64_t v4 = &xmmword_269861B08;
    }
    else
    {
      if (qword_2698602E8 != -1) {
        swift_once();
      }
      unint64_t v4 = &xmmword_269861A90;
    }
  }
  else
  {
    if (qword_2698602F8 != -1) {
      swift_once();
    }
    unint64_t v4 = &xmmword_269861B80;
  }
  uint64_t v5 = *((void *)v4 + 1);
  int v6 = *((_DWORD *)v4 + 4);
  int v7 = *((_DWORD *)v4 + 5);
  uint64_t v8 = *((void *)v4 + 3);
  uint64_t v9 = *((void *)v4 + 4);
  int v10 = *((_DWORD *)v4 + 10);
  int v11 = *((_DWORD *)v4 + 11);
  uint64_t v13 = *((void *)v4 + 6);
  uint64_t v12 = *((void *)v4 + 7);
  int v14 = *((_DWORD *)v4 + 16);
  int v15 = *((_DWORD *)v4 + 17);
  uint64_t v16 = *((void *)v4 + 9);
  uint64_t v17 = *((void *)v4 + 10);
  int v18 = *((_DWORD *)v4 + 22);
  int v19 = *((_DWORD *)v4 + 23);
  uint64_t v20 = *((void *)v4 + 12);
  uint64_t v21 = *((void *)v4 + 13);
  uint64_t v22 = *((void *)v4 + 14);
  *(void *)a1 = *(void *)v4;
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = v6;
  *(_DWORD *)(a1 + 20) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(_DWORD *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 44) = v11;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v12;
  *(_DWORD *)(a1 + 64) = v14;
  *(_DWORD *)(a1 + 68) = v15;
  *(void *)(a1 + 72) = v16;
  *(void *)(a1 + 80) = v17;
  *(_DWORD *)(a1 + 88) = v18;
  *(_DWORD *)(a1 + 92) = v19;
  *(void *)(a1 + 96) = v20;
  *(void *)(a1 + 104) = v21;
  *(void *)(a1 + 112) = v22;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24D3271D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D2BBF50(v2 + *(int *)(a1 + 36), a2, (uint64_t *)&unk_269861100);
}

uint64_t sub_24D327204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2 + *(int *)(a1 + 44);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(unsigned char *)(a2 + 32) = *(unsigned char *)(v3 + 32);
  return sub_24D327248(v4, v5);
}

uint64_t sub_24D327228@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 40));
  return result;
}

uint64_t sub_24D327238()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24D327248(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24D32728C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450((uint64_t *)&unk_269861100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for FMFindingMeasurement(uint64_t a1)
{
}

uint64_t initializeWithCopy for FMFindingMeasurement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  __int16 v16 = *(_WORD *)(a2 + 96);
  char v17 = *(unsigned char *)(a2 + 98);
  sub_24D2B6F80(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(_WORD *)(a1 + 96) = v16;
  *(unsigned char *)(a1 + 98) = v17;
  return a1;
}

uint64_t assignWithCopy for FMFindingMeasurement(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v26 = *(void *)(a2 + 72);
  uint64_t v27 = *(void *)(a2 + 80);
  uint64_t v28 = *(void *)(a2 + 88);
  __int16 v29 = *(_WORD *)(a2 + 96);
  char v30 = *(unsigned char *)(a2 + 98);
  sub_24D2B6F80(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void **)(a1 + 16);
  uint64_t v15 = *(void **)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 80);
  uint64_t v22 = *(void *)(a1 + 88);
  __int16 v23 = *(_WORD *)(a1 + 96);
  char v24 = *(unsigned char *)(a1 + 98);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v26;
  *(void *)(a1 + 80) = v27;
  *(void *)(a1 + 88) = v28;
  *(_WORD *)(a1 + 96) = v29;
  *(unsigned char *)(a1 + 98) = v30;
  sub_24D2B6DE8(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22, v23, v24);
  return a1;
}

__n128 initializeWithTake for FMFindingMeasurement(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_DWORD *)(a1 + 95) = *(_DWORD *)((char *)a2 + 95);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FMFindingMeasurement(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 96);
  char v4 = *(unsigned char *)(a2 + 98);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  long long v6 = *(void **)(a1 + 16);
  uint64_t v8 = *(void **)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 88);
  __int16 v16 = *(_WORD *)(a1 + 96);
  char v17 = *(unsigned char *)(a1 + 98);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  *(_WORD *)(a1 + 96) = v3;
  *(unsigned char *)(a1 + 98) = v4;
  sub_24D2B6DE8(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMFindingMeasurement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 99)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 98);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMFindingMeasurement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 98) = 0;
    *(_WORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 99) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 99) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 98) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24D3276A4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 98);
}

uint64_t sub_24D3276AC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 98) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingMeasurement()
{
  return &type metadata for FMFindingMeasurement;
}

ValueMetadata *type metadata accessor for FMFindingTrend()
{
  return &type metadata for FMFindingTrend;
}

double sub_24D3276DC@<D0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_name);
  uint64_t v4 = sub_24D39CAF0();
  uint64_t v6 = v5;

  BOOL v7 = v4 == 0x646E756F66 && v6 == 0xE500000000000000;
  if (v7 || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    int v8 = 196608;
  }
  else
  {
    BOOL v9 = v4 == 1701995880 && v6 == 0xE400000000000000;
    if (v9 || (sub_24D39D4B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      int v8 = 0x20000;
    }
    else
    {
      BOOL v10 = v4 == 1918985582 && v6 == 0xE400000000000000;
      if (v10 || (sub_24D39D4B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        int v8 = 0x10000;
      }
      else if (v4 == 7496038 && v6 == 0xE300000000000000)
      {
        swift_bridgeObjectRelease();
        int v8 = 0;
      }
      else
      {
        char v12 = sub_24D39D4B0();
        swift_bridgeObjectRelease();
        if (v12) {
          int v8 = 0;
        }
        else {
          int v8 = -65536;
        }
      }
    }
  }
  double result = 0.0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 98) = BYTE2(v8);
  return result;
}

uint64_t sub_24D3278AC(uint64_t a1)
{
  sub_24D2B74E8(v1, (uint64_t)v12);
  uint64_t result = 0;
  switch(v12[98])
  {
    case 1:
      sub_24D2E8758(a1, (uint64_t)v7);
      if (v8 == 255) {
        goto LABEL_9;
      }
      sub_24D2B74E8((uint64_t)v7, (uint64_t)v9);
      sub_24D2B74E8((uint64_t)v9, (uint64_t)v10);
      char v4 = v11;
      unint64_t v5 = 33686273;
      goto LABEL_11;
    case 2:
      sub_24D2E8758(a1, (uint64_t)v7);
      if (v8 == 255) {
        goto LABEL_9;
      }
      sub_24D2B74E8((uint64_t)v7, (uint64_t)v9);
      sub_24D2B74E8((uint64_t)v9, (uint64_t)v10);
      char v6 = 8 * v11;
      unint64_t v5 = 33751297;
      goto LABEL_12;
    case 3:
      sub_24D2E8758(a1, (uint64_t)v7);
      if (v8 == 255) {
        goto LABEL_9;
      }
      sub_24D2B74E8((uint64_t)v7, (uint64_t)v9);
      sub_24D2B74E8((uint64_t)v9, (uint64_t)v10);
      char v4 = v11;
      unint64_t v5 = 50397441;
LABEL_11:
      char v6 = 8 * v4;
LABEL_12:
      uint64_t result = v5 >> v6;
      break;
    case 4:
      return result;
    default:
      sub_24D2E8758(a1, (uint64_t)v7);
      if (v8 == 255)
      {
LABEL_9:
        uint64_t result = 1;
      }
      else
      {
        sub_24D2B74E8((uint64_t)v7, (uint64_t)v9);
        sub_24D2B74E8((uint64_t)v9, (uint64_t)v10);
        uint64_t result = 0x2020203uLL >> (8 * v11);
      }
      break;
  }
  return result;
}

uint64_t sub_24D327A3C()
{
  sub_24D2B74E8(v0, (uint64_t)v9);
  uint64_t v7 = v9[1];
  uint64_t v8 = v9[0];
  unint64_t v5 = (void *)v9[3];
  char v6 = (void *)v9[2];
  sub_24D2B74E8(v0, (uint64_t)&v10);
  unint64_t v1 = 0xE300000000000000;
  uint64_t v2 = 7496038;
  switch(v27)
  {
    case 1:
      unint64_t v1 = 0xE400000000000000;
      uint64_t v2 = 1918985582;
      break;
    case 2:
      unint64_t v1 = 0xE400000000000000;
      uint64_t v2 = 1701995880;
      break;
    case 3:
      unint64_t v1 = 0xE500000000000000;
      uint64_t v2 = 0x646E756F66;
      break;
    case 4:
      if (v12 != 1)
      {
        uint64_t v28 = v10;
        char v29 = v11 & 1;
        uint64_t v30 = v12;
        uint64_t v31 = v13;
        uint64_t v32 = v14;
        char v33 = v15 & 1;
        uint64_t v34 = v16;
        char v35 = v17 & 1;
        char v36 = v18 & 1;
        uint64_t v37 = v19;
        char v38 = v20 & 1;
        char v39 = v21 & 1;
        char v40 = v22 & 1;
        uint64_t v41 = v23;
        uint64_t v42 = v24;
        char v43 = v25 & 1;
        char v44 = v26 & 1;
        sub_24D2B6FAC(v8, v7, v6, v5);
        sub_24D2BE2F8();
      }
      sub_24D39CB70();
      sub_24D329584(v0, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6DE8);
      swift_bridgeObjectRelease();
      uint64_t v2 = 0x3A65736963657270;
      unint64_t v1 = 0xE900000000000020;
      break;
    default:
      break;
  }
  sub_24D2B7450((uint64_t *)&unk_269861860);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24D3A0050;
  *(void *)(v3 + 56) = MEMORY[0x263F8D310];
  *(void *)(v3 + 64) = sub_24D2B7494();
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  return sub_24D39CB00();
}

uint64_t sub_24D327CD8(void *a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v3 = sub_24D2B7450(&qword_269862090);
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v28 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24D2B7450(&qword_269862098);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v5);
  char v25 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24D2B7450(&qword_2698620A0);
  uint64_t v23 = *(void *)(v7 - 8);
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  BOOL v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24D2B7450(&qword_2698620A8);
  uint64_t v22 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24D2B7450(&qword_2698620B0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D32A538();
  sub_24D39D5F0();
  switch((char)v31)
  {
    case 1:
      char v33 = 1;
      sub_24D32A634();
      sub_24D39D3E0();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
      break;
    case 2:
      char v34 = 2;
      sub_24D32A5E0();
      char v17 = v25;
      sub_24D39D3E0();
      uint64_t v19 = v26;
      uint64_t v18 = v27;
      goto LABEL_5;
    case 3:
      char v35 = 3;
      sub_24D32A58C();
      char v17 = v28;
      sub_24D39D3E0();
      uint64_t v19 = v29;
      uint64_t v18 = v30;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      break;
    default:
      char v32 = 0;
      sub_24D32A688();
      sub_24D39D3E0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_24D328120()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6973616572636E69;
      break;
    case 2:
      uint64_t result = 0x6973616572636564;
      break;
    case 3:
      uint64_t result = 0x656C62617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D3281B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D3295F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D3281D8(uint64_t a1)
{
  unint64_t v2 = sub_24D32A538();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D328214(uint64_t a1)
{
  unint64_t v2 = sub_24D32A538();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D328250(uint64_t a1)
{
  unint64_t v2 = sub_24D32A5E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D32828C(uint64_t a1)
{
  unint64_t v2 = sub_24D32A5E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D3282C8(uint64_t a1)
{
  unint64_t v2 = sub_24D32A634();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D328304(uint64_t a1)
{
  unint64_t v2 = sub_24D32A634();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D328340(uint64_t a1)
{
  unint64_t v2 = sub_24D32A58C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D32837C(uint64_t a1)
{
  unint64_t v2 = sub_24D32A58C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D3283B8(uint64_t a1)
{
  unint64_t v2 = sub_24D32A688();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D3283F4(uint64_t a1)
{
  unint64_t v2 = sub_24D32A688();
  return MEMORY[0x270FA00B8](a1, v2);
}

char *sub_24D328430@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24D3297A0(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_24D32845C(void *a1)
{
  return sub_24D327CD8(a1, *v1);
}

unint64_t sub_24D32847C()
{
  unint64_t result = qword_269861FF0;
  if (!qword_269861FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861FF0);
  }
  return result;
}

uint64_t sub_24D3284D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24D37A9B8(*a1, *a2);
}

uint64_t sub_24D3284DC()
{
  return sub_24D39D5D0();
}

uint64_t sub_24D32857C()
{
  sub_24D39CB40();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D328608()
{
  return sub_24D39D5D0();
}

uint64_t sub_24D3286A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D329DD8();
  *a1 = result;
  return result;
}

void sub_24D3286D4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE800000000000000;
  unint64_t v5 = 0x65636E6174736964;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD00000000000001BLL;
    unint64_t v4 = 0x800000024D3A4D20;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701869940;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_24D328730()
{
  unint64_t v1 = 0x65636E6174736964;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_24D328788@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D329DD8();
  *a1 = result;
  return result;
}

uint64_t sub_24D3287B0(uint64_t a1)
{
  unint64_t v2 = sub_24D32A320();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D3287EC(uint64_t a1)
{
  unint64_t v2 = sub_24D32A320();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D328828(void *a1)
{
  uint64_t v2 = v1;
  sub_24D2B74E8(v2, (uint64_t)v54);
  uint64_t v36 = v54[1];
  uint64_t v37 = v54[0];
  char v34 = (void *)v54[3];
  char v35 = (void *)v54[2];
  uint64_t v32 = v54[5];
  uint64_t v33 = v54[4];
  uint64_t v30 = v54[7];
  uint64_t v31 = v54[6];
  uint64_t v28 = v54[9];
  uint64_t v29 = v54[8];
  uint64_t v26 = v54[11];
  uint64_t v27 = v54[10];
  uint64_t v4 = sub_24D2B7450(&qword_269862020);
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D32A320();
  sub_24D39D5F0();
  sub_24D2B74E8(v2, (uint64_t)v55);
  switch(v57)
  {
    case 1:
      uint64_t v8 = v55[0];
      LOBYTE(v41) = 0;
      uint64_t v9 = v39;
      sub_24D39D440();
      if (v9) {
        return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v6, v4);
      }
      uint64_t v41 = v8;
      char v40 = 2;
      goto LABEL_9;
    case 2:
      uint64_t v7 = v55[0];
      LOBYTE(v41) = 0;
      goto LABEL_7;
    case 3:
      uint64_t v7 = v55[0];
      LOBYTE(v41) = 0;
      goto LABEL_7;
    case 4:
      uint64_t v12 = v55[0];
      uint64_t v24 = v55[2];
      uint64_t v25 = v55[1];
      uint64_t v22 = v55[4];
      uint64_t v23 = v55[3];
      uint64_t v20 = v55[6];
      uint64_t v21 = v55[5];
      uint64_t v18 = v55[8];
      uint64_t v19 = v55[7];
      uint64_t v16 = v55[10];
      uint64_t v17 = v55[9];
      uint64_t v15 = v55[11];
      __int16 v13 = v56;
      LOBYTE(v41) = 0;
      sub_24D2B6FAC(v37, v36, v35, v34);
      uint64_t v14 = v39;
      sub_24D39D440();
      if (!v14)
      {
        uint64_t v41 = v12;
        uint64_t v42 = v25;
        uint64_t v43 = v24;
        uint64_t v44 = v23;
        uint64_t v45 = v22;
        uint64_t v46 = v21;
        uint64_t v47 = v20;
        uint64_t v48 = v19;
        uint64_t v49 = v18;
        uint64_t v50 = v17;
        uint64_t v51 = v16;
        uint64_t v52 = v15;
        __int16 v53 = v13;
        char v40 = 1;
        sub_24D2B7450(&qword_269860C50);
        sub_24D32A41C();
        sub_24D39D450();
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
      return sub_24D329584(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6DE8);
    default:
      uint64_t v7 = v55[0];
      LOBYTE(v41) = 0;
LABEL_7:
      uint64_t v10 = v39;
      sub_24D39D440();
      if (!v10)
      {
        uint64_t v41 = v7;
        char v40 = 2;
LABEL_9:
        sub_24D32A4E4();
        sub_24D39D450();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v6, v4);
  }
}

uint64_t sub_24D328C28()
{
  uint64_t v1 = v0;
  sub_24D2B74E8(v0, (uint64_t)v21);
  uint64_t v2 = v21[0];
  uint64_t v3 = v21[1];
  uint64_t v19 = (void *)v21[3];
  uint64_t v20 = (void *)v21[2];
  sub_24D2B74E8(v1, (uint64_t)&v22);
  switch(v35)
  {
    case 4:
      uint64_t v18 = v3;
      uint64_t v4 = v24;
      uint64_t v10 = v22;
      char v11 = v23;
      uint64_t v5 = v26;
      uint64_t v12 = v25;
      char v13 = v27;
      uint64_t v6 = v28;
      uint64_t v7 = v30;
      __int16 v14 = v29;
      int v15 = v31;
      uint64_t v8 = v32;
      uint64_t v16 = v33;
      __int16 v17 = v34;
      sub_24D39D5A0();
      if (v4 == 1)
      {
        sub_24D39D5B0();
      }
      else
      {
        uint64_t v36 = v10;
        char v37 = v11 & 1;
        uint64_t v38 = v4;
        uint64_t v39 = v12;
        uint64_t v40 = v5;
        char v41 = v13 & 1;
        uint64_t v42 = v6;
        __int16 v43 = v14 & 0x101;
        uint64_t v44 = v7;
        __int16 v45 = v15 & 0x101;
        char v46 = BYTE2(v15) & 1;
        uint64_t v47 = v8;
        uint64_t v48 = v16;
        __int16 v49 = v17 & 0x101;
        sub_24D39D5B0();
        sub_24D2B6FAC(v2, v18, v20, v19);
        sub_24D2BE918();
      }
      uint64_t result = sub_24D329584(v1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6DE8);
      break;
    default:
      sub_24D39D5A0();
      uint64_t result = sub_24D39D5C0();
      break;
  }
  return result;
}

uint64_t sub_24D328E8C(uint64_t a1, uint64_t a2)
{
  sub_24D2B74E8(a1, (uint64_t)v4);
  sub_24D2B74E8(a2, (uint64_t)v5);
  return sub_24D3290E4((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t sub_24D328ED8()
{
  sub_24D2B74E8(v0, (uint64_t)v2);
  sub_24D39D590();
  sub_24D328C28();
  return sub_24D39D5D0();
}

uint64_t sub_24D328F28()
{
  sub_24D2B74E8(v0, (uint64_t)v2);
  return sub_24D328C28();
}

uint64_t sub_24D328F68()
{
  sub_24D2B74E8(v0, (uint64_t)v2);
  sub_24D39D590();
  sub_24D328C28();
  return sub_24D39D5D0();
}

uint64_t sub_24D328FBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24D329E24(a1, (uint64_t)v5);
  if (!v2) {
    return sub_24D2B74E8((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_24D329004(void *a1)
{
  sub_24D2B74E8(v1, (uint64_t)v4);
  return sub_24D328828(a1);
}

uint64_t sub_24D329054()
{
  sub_24D2B74E8(v0, (uint64_t)v2);
  return sub_24D327A3C();
}

unint64_t sub_24D329090()
{
  unint64_t result = qword_269861FF8;
  if (!qword_269861FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269861FF8);
  }
  return result;
}

uint64_t sub_24D3290E4(uint64_t a1, uint64_t a2)
{
  sub_24D2B74E8(a2, (uint64_t)v81);
  uint64_t v49 = v81[1];
  uint64_t v51 = v81[0];
  char v46 = (void *)v81[3];
  uint64_t v47 = (void *)v81[2];
  uint64_t v53 = a1;
  sub_24D2B74E8(a1, (uint64_t)v96);
  switch(v98)
  {
    case 1:
      sub_24D2B74E8(a2, (uint64_t)&v54);
      char v4 = v67 == 1;
      return v4 & 1;
    case 2:
      sub_24D2B74E8(a2, (uint64_t)&v54);
      char v4 = v67 == 2;
      return v4 & 1;
    case 3:
      sub_24D2B74E8(a2, (uint64_t)&v54);
      char v4 = v67 == 3;
      return v4 & 1;
    case 4:
      uint64_t v34 = v96[0];
      uint64_t v35 = v96[1];
      uint64_t v36 = v96[3];
      uint64_t v37 = v96[4];
      uint64_t v38 = v96[5];
      uint64_t v39 = v96[6];
      uint64_t v40 = v96[7];
      uint64_t v41 = v96[8];
      uint64_t v42 = v96[9];
      uint64_t v43 = v96[10];
      uint64_t v44 = v96[11];
      uint64_t v45 = v96[2];
      __int16 v5 = v97;
      sub_24D2B74E8(a2, (uint64_t)&v82);
      if (v95 != 4) {
        goto LABEL_13;
      }
      __int16 v33 = v5;
      uint64_t v6 = v82;
      uint64_t v7 = v83;
      uint64_t v8 = v84;
      uint64_t v9 = v85;
      uint64_t v10 = v86;
      uint64_t v11 = v87;
      uint64_t v12 = v88;
      uint64_t v13 = v89;
      uint64_t v14 = v90;
      uint64_t v15 = v91;
      uint64_t v16 = v92;
      uint64_t v17 = v93;
      __int16 v18 = v94;
      uint64_t v19 = v45;
      if (v45 != 1)
      {
        if (v84 != 1)
        {
          uint64_t v99 = v34;
          char v100 = v35 & 1;
          uint64_t v101 = v45;
          uint64_t v102 = v36;
          uint64_t v103 = v37;
          char v104 = v38 & 1;
          uint64_t v105 = v39;
          __int16 v106 = v40 & 0x101;
          uint64_t v107 = v41;
          __int16 v108 = v42 & 0x101;
          char v109 = BYTE2(v42) & 1;
          uint64_t v110 = v43;
          uint64_t v111 = v44;
          __int16 v112 = v5 & 0x101;
          uint64_t v54 = v82;
          LOBYTE(v55) = v83 & 1;
          uint64_t v56 = v84;
          uint64_t v57 = v85;
          uint64_t v58 = v86;
          LOBYTE(v59) = v87 & 1;
          uint64_t v60 = v88;
          LOWORD(v61) = v89 & 0x101;
          uint64_t v62 = v90;
          LOWORD(v63) = v91 & 0x101;
          BYTE2(v63) = BYTE2(v91) & 1;
          uint64_t v64 = v92;
          uint64_t v65 = v93;
          __int16 v66 = v94 & 0x101;
          sub_24D329584(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6F80);
          sub_24D329584(v53, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6F80);
          char v4 = sub_24D2BEE6C((uint64_t)&v99, (uint64_t)&v54);
          sub_24D329584(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6DE8);
          sub_24D329584(v53, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6DE8);
          return v4 & 1;
        }
        uint64_t v20 = v51;
        uint64_t v52 = v85;
        uint64_t v22 = v47;
        uint64_t v21 = v49;
        uint64_t v48 = v82;
        uint64_t v50 = v83;
        uint64_t v23 = v93;
        uint64_t v24 = v92;
        uint64_t v25 = v91;
        uint64_t v26 = v90;
        uint64_t v27 = v89;
        uint64_t v28 = v88;
        __int16 v29 = v94;
        uint64_t v30 = v87;
        uint64_t v31 = v86;
        sub_24D2B6FAC(v20, v21, v22, v46);
        uint64_t v19 = v45;
        uint64_t v6 = v48;
        uint64_t v7 = v50;
        uint64_t v9 = v52;
        uint64_t v8 = 1;
        uint64_t v10 = v31;
        uint64_t v11 = v30;
        __int16 v18 = v29;
        uint64_t v12 = v28;
        uint64_t v13 = v27;
        uint64_t v14 = v26;
        uint64_t v15 = v25;
        uint64_t v16 = v24;
        uint64_t v17 = v23;
        goto LABEL_12;
      }
      if (v84 != 1)
      {
LABEL_12:
        uint64_t v54 = v34;
        uint64_t v55 = v35;
        uint64_t v56 = v19;
        uint64_t v57 = v36;
        uint64_t v58 = v37;
        uint64_t v59 = v38;
        uint64_t v60 = v39;
        uint64_t v61 = v40;
        uint64_t v62 = v41;
        uint64_t v63 = v42;
        uint64_t v64 = v43;
        uint64_t v65 = v44;
        __int16 v66 = v33;
        uint64_t v68 = v6;
        uint64_t v69 = v7;
        uint64_t v70 = v8;
        uint64_t v71 = v9;
        uint64_t v72 = v10;
        uint64_t v73 = v11;
        uint64_t v74 = v12;
        uint64_t v75 = v13;
        uint64_t v76 = v14;
        uint64_t v77 = v15;
        uint64_t v78 = v16;
        uint64_t v79 = v17;
        __int16 v80 = v18;
        sub_24D329584(a2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6F80);
        sub_24D329584(v53, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, int))sub_24D2B6F80);
        sub_24D2F8750((uint64_t)&v54);
LABEL_13:
        char v4 = 0;
        return v4 & 1;
      }
      char v4 = 1;
      return v4 & 1;
    default:
      sub_24D2B74E8(a2, (uint64_t)&v54);
      char v4 = v67 == 0;
      return v4 & 1;
  }
}

uint64_t sub_24D329584(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, int))
{
  BYTE2(v4) = *(unsigned char *)(a1 + 98);
  LOWORD(v4) = *(_WORD *)(a1 + 96);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v4);
  return a1;
}

uint64_t sub_24D3295F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973616572636E69 && a2 == 0xEA0000000000676ELL || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6973616572636564 && a2 == 0xEA0000000000676ELL || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C62617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24D39D4B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

char *sub_24D3297A0(void *a1)
{
  uint64_t v41 = sub_24D2B7450(&qword_269862040);
  uint64_t v45 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24D2B7450(&qword_269862048);
  uint64_t v42 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24D2B7450(&qword_269862050);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24D2B7450(&qword_269862058);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24D2B7450(&qword_269862060);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  char v46 = a1;
  sub_24D2B8A34(a1, v14);
  sub_24D32A538();
  uint64_t v15 = v47;
  sub_24D39D5E0();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v35 = v7;
  uint64_t v36 = v9;
  uint64_t v16 = v43;
  uint64_t v17 = v44;
  uint64_t v47 = 0;
  uint64_t v18 = v45;
  uint64_t v19 = v11;
  uint64_t v20 = v13;
  uint64_t v21 = sub_24D39D3D0();
  uint64_t v22 = (char *)v21;
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v25 = sub_24D39D220();
    swift_allocError();
    uint64_t v13 = v22;
    uint64_t v26 = v10;
    uint64_t v28 = v27;
    sub_24D2B7450(&qword_269860CA0);
    *uint64_t v28 = &type metadata for FMFindingTrend;
    sub_24D39D350();
    sub_24D39D210();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v26);
LABEL_7:
    uint64_t v29 = (uint64_t)v46;
    goto LABEL_8;
  }
  uint64_t v13 = (char *)*(unsigned __int8 *)(v21 + 32);
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      char v49 = 1;
      sub_24D32A634();
      uint64_t v31 = v47;
      sub_24D39D340();
      if (v31) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v39);
      goto LABEL_14;
    case 2:
      char v50 = 2;
      sub_24D32A5E0();
      uint64_t v32 = v47;
      sub_24D39D340();
      if (v32) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v40);
      goto LABEL_14;
    case 3:
      char v51 = 3;
      sub_24D32A58C();
      uint64_t v33 = v47;
      sub_24D39D340();
      if (v33) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
    default:
      char v48 = 0;
      sub_24D32A688();
      uint64_t v23 = v36;
      uint64_t v24 = v47;
      sub_24D39D340();
      if (v24)
      {
LABEL_12:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v35);
LABEL_14:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v10);
      uint64_t v29 = (uint64_t)v46;
      break;
  }
LABEL_8:
  sub_24D2B6E58(v29);
  return v13;
}

uint64_t sub_24D329DD8()
{
  unint64_t v0 = sub_24D39D330();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_24D329E24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24D2B7450(&qword_269862000);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D32A320();
  sub_24D39D5E0();
  if (v2) {
    return sub_24D2B6E58((uint64_t)a1);
  }
  LOBYTE(v39) = 0;
  uint64_t v9 = sub_24D39D3B0();
  char v56 = 2;
  sub_24D32A374();
  sub_24D39D3C0();
  uint64_t v11 = v39;
  switch(v9)
  {
    case 1:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v36 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      __int16 v16 = 0;
      int v31 = 0;
      uint64_t v17 = v11;
      break;
    case 2:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v36 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      __int16 v16 = 0;
      uint64_t v17 = v11;
      int v31 = 1;
      break;
    case 3:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v36 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      __int16 v16 = 0;
      uint64_t v17 = v11;
      int v31 = 2;
      break;
    case 4:
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v36 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      __int16 v16 = 0;
      uint64_t v17 = v11;
      int v31 = 3;
      break;
    case 5:
      char v56 = 1;
      sub_24D32A3C8();
      sub_24D39D3C0();
      uint64_t v30 = v39;
      uint64_t v38 = v40;
      uint64_t v34 = v41;
      uint64_t v35 = v43;
      uint64_t v32 = v44;
      uint64_t v36 = v45;
      uint64_t v37 = v42;
      uint64_t v29 = v48;
      uint64_t v14 = v52;
      uint64_t v15 = v53;
      if (v47) {
        uint64_t v18 = 256;
      }
      else {
        uint64_t v18 = 0;
      }
      uint64_t v33 = v18 | v46;
      if (v50) {
        uint64_t v19 = 256;
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t v20 = v19 | v49;
      uint64_t v21 = 0x10000;
      if (!v51) {
        uint64_t v21 = 0;
      }
      uint64_t v13 = v20 | v21;
      if (v55) {
        int v22 = 256;
      }
      else {
        int v22 = 0;
      }
      int v28 = v22 | v54;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      int v31 = 4;
      uint64_t v17 = v30;
      uint64_t v12 = v29;
      __int16 v16 = v28;
      break;
    default:
      sub_24D39D2B0();
      __break(1u);
      JUMPOUT(0x24D32A30CLL);
  }
  uint64_t result = sub_24D2B6E58((uint64_t)a1);
  uint64_t v23 = v38;
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = v23;
  uint64_t v24 = v37;
  *(void *)(a2 + 16) = v34;
  *(void *)(a2 + 24) = v24;
  uint64_t v25 = v32;
  *(void *)(a2 + 32) = v35;
  *(void *)(a2 + 40) = v25;
  uint64_t v26 = v33;
  *(void *)(a2 + 48) = v36;
  *(void *)(a2 + 56) = v26;
  *(void *)(a2 + 64) = v12;
  *(void *)(a2 + 72) = v13;
  *(void *)(a2 + 80) = v14;
  *(void *)(a2 + 88) = v15;
  *(_WORD *)(a2 + 96) = v16;
  *(unsigned char *)(a2 + 98) = v31;
  return result;
}

unint64_t sub_24D32A320()
{
  unint64_t result = qword_269862008;
  if (!qword_269862008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862008);
  }
  return result;
}

unint64_t sub_24D32A374()
{
  unint64_t result = qword_269862010;
  if (!qword_269862010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862010);
  }
  return result;
}

unint64_t sub_24D32A3C8()
{
  unint64_t result = qword_269862018;
  if (!qword_269862018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862018);
  }
  return result;
}

unint64_t sub_24D32A41C()
{
  unint64_t result = qword_269862028;
  if (!qword_269862028)
  {
    sub_24D2C067C(&qword_269860C50);
    sub_24D32A490();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862028);
  }
  return result;
}

unint64_t sub_24D32A490()
{
  unint64_t result = qword_269862030;
  if (!qword_269862030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862030);
  }
  return result;
}

unint64_t sub_24D32A4E4()
{
  unint64_t result = qword_269862038;
  if (!qword_269862038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862038);
  }
  return result;
}

unint64_t sub_24D32A538()
{
  unint64_t result = qword_269862068;
  if (!qword_269862068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862068);
  }
  return result;
}

unint64_t sub_24D32A58C()
{
  unint64_t result = qword_269862070;
  if (!qword_269862070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862070);
  }
  return result;
}

unint64_t sub_24D32A5E0()
{
  unint64_t result = qword_269862078;
  if (!qword_269862078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862078);
  }
  return result;
}

unint64_t sub_24D32A634()
{
  unint64_t result = qword_269862080;
  if (!qword_269862080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862080);
  }
  return result;
}

unint64_t sub_24D32A688()
{
  unint64_t result = qword_269862088;
  if (!qword_269862088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862088);
  }
  return result;
}

unsigned char *_s11FMFindingUI14FMFindingTrendOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D32A7A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingTrend.CodingKeys()
{
  return &type metadata for FMFindingTrend.CodingKeys;
}

ValueMetadata *type metadata accessor for FMFindingTrend.UnknownCodingKeys()
{
  return &type metadata for FMFindingTrend.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for FMFindingTrend.IncreasingCodingKeys()
{
  return &type metadata for FMFindingTrend.IncreasingCodingKeys;
}

ValueMetadata *type metadata accessor for FMFindingTrend.DecreasingCodingKeys()
{
  return &type metadata for FMFindingTrend.DecreasingCodingKeys;
}

ValueMetadata *type metadata accessor for FMFindingTrend.StableCodingKeys()
{
  return &type metadata for FMFindingTrend.StableCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FMFindingMeasurement.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D32A8ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingMeasurement.CodingKeys()
{
  return &type metadata for FMFindingMeasurement.CodingKeys;
}

unint64_t sub_24D32A928()
{
  unint64_t result = qword_2698620B8;
  if (!qword_2698620B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698620B8);
  }
  return result;
}

unint64_t sub_24D32A980()
{
  unint64_t result = qword_2698620C0;
  if (!qword_2698620C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698620C0);
  }
  return result;
}

unint64_t sub_24D32A9D8()
{
  unint64_t result = qword_2698620C8;
  if (!qword_2698620C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698620C8);
  }
  return result;
}

unint64_t sub_24D32AA30()
{
  unint64_t result = qword_2698620D0;
  if (!qword_2698620D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698620D0);
  }
  return result;
}

unint64_t sub_24D32AA88()
{
  unint64_t result = qword_2698620D8;
  if (!qword_2698620D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698620D8);
  }
  return result;
}

unint64_t sub_24D32AAE0()
{
  unint64_t result = qword_2698620E0;
  if (!qword_2698620E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698620E0);
  }
  return result;
}

unint64_t sub_24D32AB38()
{
  unint64_t result = qword_2698620E8;
  if (!qword_2698620E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698620E8);
  }
  return result;
}

unint64_t sub_24D32AB90()
{
  unint64_t result = qword_2698620F0;
  if (!qword_2698620F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698620F0);
  }
  return result;
}

unint64_t sub_24D32ABE8()
{
  unint64_t result = qword_2698620F8;
  if (!qword_2698620F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698620F8);
  }
  return result;
}

unint64_t sub_24D32AC40()
{
  unint64_t result = qword_269862100;
  if (!qword_269862100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862100);
  }
  return result;
}

unint64_t sub_24D32AC98()
{
  unint64_t result = qword_269862108;
  if (!qword_269862108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862108);
  }
  return result;
}

unint64_t sub_24D32ACF0()
{
  unint64_t result = qword_269862110;
  if (!qword_269862110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862110);
  }
  return result;
}

unint64_t sub_24D32AD48()
{
  unint64_t result = qword_269862118;
  if (!qword_269862118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862118);
  }
  return result;
}

unint64_t sub_24D32ADA0()
{
  unint64_t result = qword_269862120;
  if (!qword_269862120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862120);
  }
  return result;
}

double sub_24D32ADF4()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget + 8)) {
    double v1 = 1.79769313e308;
  }
  else {
    double v1 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget);
  }
  uint64_t v2 = v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  uint64_t v3 = v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o;
  double v4 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  if (*(double *)(v2 + 280) + v4 == 1.79769313e308)
  {
    sub_24D2D9DA8(v1);
    *(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    double v4 = *(double *)(v3 + 40);
  }
  double result = v1 - v4;
  *(double *)(v2 + 280) = result;
  *(double *)(v2 + 240) = result;
  *(void *)(v2 + 248) = 0;
  return result;
}

BOOL sub_24D32AEBC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s;
  swift_beginAccess();
  uint64_t v2 = (double *)(v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  double v3 = *(double *)(v0 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  if (*(double *)(v1 + 280) + v3 == 1.79769313e308) {
    return 1;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) == 1
    && sub_24D2D9BFC()
    && vabdd_f64(*v2, v3) <= v2[6])
  {
    return fabs(v2[1]) <= v2[7];
  }
  return 0;
}

void sub_24D32B004(double a1)
{
  sub_24D2D9DA8(a1);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
}

id sub_24D32B028()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPFFluidSpring();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMPFFluidSpring()
{
  return self;
}

void *sub_24D32B080(uint64_t a1, char a2, uint64_t a3, char a4)
{
  unsigned int v6 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v6[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  uint64_t v7 = &v6[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  uint64_t v8 = &v6[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  uint64_t v9 = &v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *uint64_t v9 = xmmword_24D3A2E10;
  v9[1] = xmmword_24D3A2E20;
  uint64_t v10 = &v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *uint64_t v10 = xmmword_24D3A2E10;
  v10[1] = xmmword_24D3A2E20;
  uint64_t v11 = &v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((void *)v11 + 4) = 0x3FF0000000000000;
  *((void *)v11 + 9) = 0;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  int64x2_t v12 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v11 + 7) = 0u;
  *((_OWORD *)v11 + 8) = 0u;
  *((int64x2_t *)v11 + 5) = v12;
  *((_OWORD *)v11 + 6) = 0u;
  *((void *)v11 + 18) = 0x3FF0000000000000;
  *((void *)v11 + 23) = 0;
  *(_OWORD *)(v11 + 168) = 0u;
  *(_OWORD *)(v11 + 152) = 0u;
  *((_OWORD *)v11 + 14) = 0u;
  *((_OWORD *)v11 + 15) = 0u;
  *((int64x2_t *)v11 + 12) = v12;
  *((_OWORD *)v11 + 13) = 0u;
  *((void *)v11 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v11 + 264) = 0u;
  *(_OWORD *)(v11 + 280) = 0u;
  *((void *)v11 + 37) = 0;
  *((int64x2_t *)v11 + 19) = v12;
  *((_OWORD *)v11 + 20) = 0u;
  *((_OWORD *)v11 + 21) = 0u;
  *((_OWORD *)v11 + 22) = 0u;
  uint64_t v13 = &v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  *((void *)v13 + 7) = 0;
  *((int64x2_t *)v13 + 4) = v12;
  *((_OWORD *)v13 + 5) = 0u;
  *((_OWORD *)v13 + 6) = 0u;
  *(void *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(void *)&v6[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v33.receiver = v6;
  v33.super_class = (Class)type metadata accessor for FLSpring();
  uint64_t v14 = objc_msgSendSuper2(&v33, sel_init);
  (*(void (**)(double))((*MEMORY[0x263F8EED0] & *v14) + 0x1B0))(0.0);
  uint64_t v15 = (char *)v14 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse;
  *(void *)uint64_t v15 = 0x3FF0000000000000;
  v15[8] = 0;
  __int16 v16 = (_OWORD *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v17 = *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v18 = *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  double v19 = *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  double v20 = *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *__int16 v16 = xmmword_24D3A2320;
  v16[1] = xmmword_24D3A2320;
  sub_24D2D9CBC(v17, v18, v19, v20);
  if (a2) {
    double v21 = 1.79769313e308;
  }
  else {
    double v21 = *(double *)&a1;
  }
  int v22 = (double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *int v22 = v21;
  uint64_t v23 = (double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  double v24 = *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  double v25 = v22[35] + v24;
  uint64_t v26 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v25, v21 + *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
    double v27 = v21 + *v23;
  }
  else {
    double v27 = v22[35] + v24;
  }
  if (v25 == 1.79769313e308)
  {
    sub_24D2D9DA8(v27);
    *((unsigned char *)v14 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    double v24 = v23[5];
  }
  double v28 = v27 - v24;
  v22[35] = v28;
  v22[30] = v28;
  v22[31] = 0.0;
  double v29 = *(double *)&a3;
  if (a4) {
    double v29 = 0.0;
  }
  *(double *)((char *)v14 + v26) = v29;
  v22[44] = v29;
  v23[6] = v29;
  *(void *)((char *)v14 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v22[45] = 0.01;
  v23[7] = 0.01;
  return v14;
}

void *sub_24D32B3C8(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v10 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  uint64_t v11 = &v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(void *)uint64_t v11 = 0;
  v11[8] = 1;
  int64x2_t v12 = &v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(void *)int64x2_t v12 = 0;
  v12[8] = 1;
  uint64_t v13 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *uint64_t v13 = xmmword_24D3A2E10;
  v13[1] = xmmword_24D3A2E20;
  uint64_t v14 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *uint64_t v14 = xmmword_24D3A2E10;
  v14[1] = xmmword_24D3A2E20;
  uint64_t v15 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((void *)v15 + 4) = 0x3FF0000000000000;
  *((void *)v15 + 9) = 0;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  int64x2_t v16 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v15 + 7) = 0u;
  *((_OWORD *)v15 + 8) = 0u;
  *((int64x2_t *)v15 + 5) = v16;
  *((_OWORD *)v15 + 6) = 0u;
  *((void *)v15 + 18) = 0x3FF0000000000000;
  *((void *)v15 + 23) = 0;
  *(_OWORD *)(v15 + 168) = 0u;
  *(_OWORD *)(v15 + 152) = 0u;
  *((_OWORD *)v15 + 14) = 0u;
  *((_OWORD *)v15 + 15) = 0u;
  *((int64x2_t *)v15 + 12) = v16;
  *((_OWORD *)v15 + 13) = 0u;
  *((void *)v15 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v15 + 264) = 0u;
  *(_OWORD *)(v15 + 280) = 0u;
  *((void *)v15 + 37) = 0;
  *((int64x2_t *)v15 + 19) = v16;
  *((_OWORD *)v15 + 20) = 0u;
  *((_OWORD *)v15 + 21) = 0u;
  *((_OWORD *)v15 + 22) = 0u;
  double v17 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(void *)double v17 = 0;
  *((void *)v17 + 1) = 0;
  *((void *)v17 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *((void *)v17 + 7) = 0;
  *((int64x2_t *)v17 + 4) = v16;
  *((_OWORD *)v17 + 5) = 0u;
  *((_OWORD *)v17 + 6) = 0u;
  *(void *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(void *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(void *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(void *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v38.receiver = v10;
  v38.super_class = (Class)type metadata accessor for FLSpring();
  double v18 = objc_msgSendSuper2(&v38, sel_init);
  (*(void (**)(double))((*MEMORY[0x263F8EED0] & *v18) + 0x1B0))(0.0);
  if (a6) {
    double v19 = 0.5;
  }
  else {
    double v19 = *(double *)&a5;
  }
  double v20 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse);
  *double v20 = v19;
  *((unsigned char *)v20 + 8) = 0;
  double v21 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v22 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v23 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  double v24 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  double v25 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *(_OWORD *)double v21 = xmmword_24D3A2320;
  void v21[2] = v19;
  void v21[3] = 0.0;
  sub_24D2D9CBC(v22, v23, v24, v25);
  if (a2) {
    double v26 = 1.79769313e308;
  }
  else {
    double v26 = *(double *)&a1;
  }
  double v27 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *double v27 = v26;
  double v28 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  double v29 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  double v30 = v27[35] + v29;
  uint64_t v31 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v30, v26 + *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
    double v32 = v26 + *v28;
  }
  else {
    double v32 = v27[35] + v29;
  }
  if (v30 == 1.79769313e308)
  {
    sub_24D2D9DA8(v32);
    *((unsigned char *)v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    double v29 = v28[5];
  }
  double v33 = v32 - v29;
  v27[35] = v33;
  v27[30] = v33;
  v27[31] = 0.0;
  double v34 = *(double *)&a3;
  if (a4) {
    double v34 = 0.0;
  }
  *(double *)((char *)v18 + v31) = v34;
  v27[44] = v34;
  _OWORD v28[6] = v34;
  *(void *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v27[45] = 0.01;
  v28[7] = 0.01;
  return v18;
}

void *sub_24D32B738(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v10 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  uint64_t v11 = &v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(void *)uint64_t v11 = 0;
  v11[8] = 1;
  int64x2_t v12 = &v10[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(void *)int64x2_t v12 = 0;
  v12[8] = 1;
  uint64_t v13 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *uint64_t v13 = xmmword_24D3A2E10;
  v13[1] = xmmword_24D3A2E20;
  uint64_t v14 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *uint64_t v14 = xmmword_24D3A2E10;
  v14[1] = xmmword_24D3A2E20;
  uint64_t v15 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((void *)v15 + 4) = 0x3FF0000000000000;
  *((void *)v15 + 9) = 0;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  int64x2_t v16 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v15 + 7) = 0u;
  *((_OWORD *)v15 + 8) = 0u;
  *((int64x2_t *)v15 + 5) = v16;
  *((_OWORD *)v15 + 6) = 0u;
  *((void *)v15 + 18) = 0x3FF0000000000000;
  *((void *)v15 + 23) = 0;
  *(_OWORD *)(v15 + 168) = 0u;
  *(_OWORD *)(v15 + 152) = 0u;
  *((_OWORD *)v15 + 14) = 0u;
  *((_OWORD *)v15 + 15) = 0u;
  *((int64x2_t *)v15 + 12) = v16;
  *((_OWORD *)v15 + 13) = 0u;
  *((void *)v15 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v15 + 264) = 0u;
  *(_OWORD *)(v15 + 280) = 0u;
  *((void *)v15 + 37) = 0;
  *((int64x2_t *)v15 + 19) = v16;
  *((_OWORD *)v15 + 20) = 0u;
  *((_OWORD *)v15 + 21) = 0u;
  *((_OWORD *)v15 + 22) = 0u;
  double v17 = &v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(void *)double v17 = 0;
  *((void *)v17 + 1) = 0;
  *((void *)v17 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *((void *)v17 + 7) = 0;
  *((int64x2_t *)v17 + 4) = v16;
  *((_OWORD *)v17 + 5) = 0u;
  *((_OWORD *)v17 + 6) = 0u;
  *(void *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(void *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(void *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(void *)&v10[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v40.receiver = v10;
  v40.super_class = (Class)type metadata accessor for FLSpring();
  double v18 = objc_msgSendSuper2(&v40, sel_init);
  (*(void (**)(double))((*MEMORY[0x263F8EED0] & *v18) + 0x1B0))(0.0);
  if (a4)
  {
    unint64_t v20 = sub_24D2B7918(0x20000000000001);
    double v19 = ((double)v20 * 1.11022302e-16 * 100.0 + 0.0) / 100.0;
    if (v20 == 0x20000000000000) {
      double v19 = 1.0;
    }
  }
  else
  {
    double v19 = *(double *)&a3;
  }
  double v21 = v19 + 1.0 - v19 + 1.0 - v19;
  double v22 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse);
  *double v22 = v21;
  *((unsigned char *)v22 + 8) = 0;
  double v23 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v24 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v25 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  double v26 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  double v27 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *(_OWORD *)double v23 = xmmword_24D3A2320;
  _OWORD v23[2] = v21;
  void v23[3] = 0.0;
  sub_24D2D9CBC(v24, v25, v26, v27);
  if (a2) {
    double v28 = 1.79769313e308;
  }
  else {
    double v28 = *(double *)&a1;
  }
  double v29 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *double v29 = v28;
  double v30 = (double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  double v31 = *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  double v32 = v29[35] + v31;
  uint64_t v33 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v32, v28 + *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
    double v34 = v28 + *v30;
  }
  else {
    double v34 = v29[35] + v31;
  }
  if (v32 == 1.79769313e308)
  {
    sub_24D2D9DA8(v34);
    *((unsigned char *)v18 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    double v31 = v30[5];
  }
  double v35 = v34 - v31;
  v29[35] = v35;
  v29[30] = v35;
  v29[31] = 0.0;
  double v36 = *(double *)&a5;
  if (a6) {
    double v36 = 0.0;
  }
  *(double *)((char *)v18 + v33) = v36;
  v29[44] = v36;
  void v30[6] = v36;
  *(void *)((char *)v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v29[45] = 0.01;
  v30[7] = 0.01;
  return v18;
}

void *sub_24D32BAF0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v7 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  uint64_t v8 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  uint64_t v9 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  uint64_t v10 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *uint64_t v10 = xmmword_24D3A2E10;
  v10[1] = xmmword_24D3A2E20;
  uint64_t v11 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *uint64_t v11 = xmmword_24D3A2E10;
  v11[1] = xmmword_24D3A2E20;
  int64x2_t v12 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)int64x2_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((void *)v12 + 4) = 0x3FF0000000000000;
  *((void *)v12 + 9) = 0;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  int64x2_t v13 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v12 + 7) = 0u;
  *((_OWORD *)v12 + 8) = 0u;
  *((int64x2_t *)v12 + 5) = v13;
  *((_OWORD *)v12 + 6) = 0u;
  *((void *)v12 + 18) = 0x3FF0000000000000;
  *((void *)v12 + 23) = 0;
  *(_OWORD *)(v12 + 168) = 0u;
  *(_OWORD *)(v12 + 152) = 0u;
  *((_OWORD *)v12 + 14) = 0u;
  *((_OWORD *)v12 + 15) = 0u;
  *((int64x2_t *)v12 + 12) = v13;
  *((_OWORD *)v12 + 13) = 0u;
  *((void *)v12 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v12 + 264) = 0u;
  *(_OWORD *)(v12 + 280) = 0u;
  *((void *)v12 + 37) = 0;
  *((int64x2_t *)v12 + 19) = v13;
  *((_OWORD *)v12 + 20) = 0u;
  *((_OWORD *)v12 + 21) = 0u;
  *((_OWORD *)v12 + 22) = 0u;
  uint64_t v14 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  *((void *)v14 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *((void *)v14 + 7) = 0;
  *((int64x2_t *)v14 + 4) = v13;
  *((_OWORD *)v14 + 5) = 0u;
  *((_OWORD *)v14 + 6) = 0u;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v33.receiver = v7;
  v33.super_class = (Class)type metadata accessor for FLSpring();
  uint64_t v15 = objc_msgSendSuper2(&v33, sel_init);
  (*(void (**)(double))((*MEMORY[0x263F8EED0] & *v15) + 0x1B0))(0.0);
  int64x2_t v16 = (char *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse;
  *(void *)int64x2_t v16 = 0x4000000000000000;
  v16[8] = 0;
  double v17 = (_OWORD *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v18 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v19 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  double v20 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  double v21 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *double v17 = xmmword_24D3A2320;
  v17[1] = xmmword_24D3A2E30;
  sub_24D2D9CBC(v18, v19, v20, v21);
  if (a2) {
    double v22 = 1.79769313e308;
  }
  else {
    double v22 = *(double *)&a1;
  }
  double v23 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *double v23 = v22;
  double v24 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  double v25 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  double v26 = v23[35] + v25;
  uint64_t v27 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v26, v22 + *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
    double v28 = v22 + *v24;
  }
  else {
    double v28 = v23[35] + v25;
  }
  if (v26 == 1.79769313e308)
  {
    sub_24D2D9DA8(v28);
    *((unsigned char *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    double v25 = v24[5];
  }
  double v29 = v28 - v25;
  v23[35] = v29;
  v23[30] = v29;
  v23[31] = 0.0;
  double v30 = *(double *)&a3;
  if (a4) {
    double v30 = 0.0;
  }
  *(double *)((char *)v15 + v27) = v30;
  v23[44] = v30;
  v24[6] = v30;
  *(void *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v23[45] = 0.01;
  v24[7] = 0.01;
  return v15;
}

void *sub_24D32BE44(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v7 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  uint64_t v8 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  uint64_t v9 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  uint64_t v10 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *uint64_t v10 = xmmword_24D3A2E10;
  v10[1] = xmmword_24D3A2E20;
  uint64_t v11 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *uint64_t v11 = xmmword_24D3A2E10;
  v11[1] = xmmword_24D3A2E20;
  int64x2_t v12 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)int64x2_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((void *)v12 + 4) = 0x3FF0000000000000;
  *((void *)v12 + 9) = 0;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  int64x2_t v13 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v12 + 7) = 0u;
  *((_OWORD *)v12 + 8) = 0u;
  *((int64x2_t *)v12 + 5) = v13;
  *((_OWORD *)v12 + 6) = 0u;
  *((void *)v12 + 18) = 0x3FF0000000000000;
  *((void *)v12 + 23) = 0;
  *(_OWORD *)(v12 + 168) = 0u;
  *(_OWORD *)(v12 + 152) = 0u;
  *((_OWORD *)v12 + 14) = 0u;
  *((_OWORD *)v12 + 15) = 0u;
  *((int64x2_t *)v12 + 12) = v13;
  *((_OWORD *)v12 + 13) = 0u;
  *((void *)v12 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v12 + 264) = 0u;
  *(_OWORD *)(v12 + 280) = 0u;
  *((void *)v12 + 37) = 0;
  *((int64x2_t *)v12 + 19) = v13;
  *((_OWORD *)v12 + 20) = 0u;
  *((_OWORD *)v12 + 21) = 0u;
  *((_OWORD *)v12 + 22) = 0u;
  uint64_t v14 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  *((void *)v14 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *((void *)v14 + 7) = 0;
  *((int64x2_t *)v14 + 4) = v13;
  *((_OWORD *)v14 + 5) = 0u;
  *((_OWORD *)v14 + 6) = 0u;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v33.receiver = v7;
  v33.super_class = (Class)type metadata accessor for FLSpring();
  uint64_t v15 = objc_msgSendSuper2(&v33, sel_init);
  (*(void (**)(double))((*MEMORY[0x263F8EED0] & *v15) + 0x1B0))(0.0);
  int64x2_t v16 = (char *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse;
  *(void *)int64x2_t v16 = 0x3FD0000000000000;
  v16[8] = 0;
  double v17 = (_OWORD *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v18 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v19 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  double v20 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  double v21 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *double v17 = xmmword_24D3A2320;
  v17[1] = xmmword_24D3A2E40;
  sub_24D2D9CBC(v18, v19, v20, v21);
  if (a2) {
    double v22 = 1.79769313e308;
  }
  else {
    double v22 = *(double *)&a1;
  }
  double v23 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *double v23 = v22;
  double v24 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  double v25 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  double v26 = v23[35] + v25;
  uint64_t v27 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v26, v22 + *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
    double v28 = v22 + *v24;
  }
  else {
    double v28 = v23[35] + v25;
  }
  if (v26 == 1.79769313e308)
  {
    sub_24D2D9DA8(v28);
    *((unsigned char *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    double v25 = v24[5];
  }
  double v29 = v28 - v25;
  v23[35] = v29;
  v23[30] = v29;
  v23[31] = 0.0;
  double v30 = *(double *)&a3;
  if (a4) {
    double v30 = 0.0;
  }
  *(double *)((char *)v15 + v27) = v30;
  v23[44] = v30;
  v24[6] = v30;
  *(void *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v23[45] = 0.01;
  v24[7] = 0.01;
  return v15;
}

void *sub_24D32C198(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v7 = objc_allocWithZone((Class)type metadata accessor for FMPFFluidSpring());
  v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready] = 0;
  uint64_t v8 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse];
  *(void *)uint64_t v8 = 0;
  v8[8] = 1;
  uint64_t v9 = &v7[OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ftarget];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  uint64_t v10 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_offsetParameters];
  *uint64_t v10 = xmmword_24D3A2E10;
  v10[1] = xmmword_24D3A2E20;
  uint64_t v11 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters];
  *uint64_t v11 = xmmword_24D3A2E10;
  v11[1] = xmmword_24D3A2E20;
  int64x2_t v12 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__s];
  *(_OWORD *)int64x2_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((void *)v12 + 4) = 0x3FF0000000000000;
  *((void *)v12 + 9) = 0;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  int64x2_t v13 = vdupq_n_s64(0x4341C37937E08000uLL);
  *((_OWORD *)v12 + 7) = 0u;
  *((_OWORD *)v12 + 8) = 0u;
  *((int64x2_t *)v12 + 5) = v13;
  *((_OWORD *)v12 + 6) = 0u;
  *((void *)v12 + 18) = 0x3FF0000000000000;
  *((void *)v12 + 23) = 0;
  *(_OWORD *)(v12 + 168) = 0u;
  *(_OWORD *)(v12 + 152) = 0u;
  *((_OWORD *)v12 + 14) = 0u;
  *((_OWORD *)v12 + 15) = 0u;
  *((int64x2_t *)v12 + 12) = v13;
  *((_OWORD *)v12 + 13) = 0u;
  *((void *)v12 + 32) = 0x3FF0000000000000;
  *(_OWORD *)(v12 + 264) = 0u;
  *(_OWORD *)(v12 + 280) = 0u;
  *((void *)v12 + 37) = 0;
  *((int64x2_t *)v12 + 19) = v13;
  *((_OWORD *)v12 + 20) = 0u;
  *((_OWORD *)v12 + 21) = 0u;
  *((_OWORD *)v12 + 22) = 0u;
  uint64_t v14 = &v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__o];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  *((void *)v14 + 2) = 0x3FF0000000000000;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *((void *)v14 + 7) = 0;
  *((int64x2_t *)v14 + 4) = v13;
  *((_OWORD *)v14 + 5) = 0u;
  *((_OWORD *)v14 + 6) = 0u;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__targetVelocity] = 0;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring__previousTarget] = 0;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold] = 0x3F50624DD2F1A9FCLL;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold] = 0x3F50624DD2F1A9FCLL;
  v33.receiver = v7;
  v33.super_class = (Class)type metadata accessor for FLSpring();
  uint64_t v15 = objc_msgSendSuper2(&v33, sel_init);
  (*(void (**)(double))((*MEMORY[0x263F8EED0] & *v15) + 0x1B0))(0.0);
  int64x2_t v16 = (char *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_initialResponse;
  *(void *)int64x2_t v16 = 0x3FE3333333333333;
  v16[8] = 0;
  double v17 = (_OWORD *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v18 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters);
  double v19 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 8);
  double v20 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 16);
  double v21 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_parameters + 24);
  *double v17 = xmmword_24D3A2320;
  v17[1] = xmmword_24D3A2E50;
  sub_24D2D9CBC(v18, v19, v20, v21);
  if (a2) {
    double v22 = 1.79769313e308;
  }
  else {
    double v22 = *(double *)&a1;
  }
  double v23 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
  swift_beginAccess();
  *double v23 = v22;
  double v24 = (double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
  double v25 = *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
  double v26 = v23[35] + v25;
  uint64_t v27 = OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold;
  if (vabdd_f64(v26, v22 + *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
    double v28 = v22 + *v24;
  }
  else {
    double v28 = v23[35] + v25;
  }
  if (v26 == 1.79769313e308)
  {
    sub_24D2D9DA8(v28);
    *((unsigned char *)v15 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    double v25 = v24[5];
  }
  double v29 = v28 - v25;
  v23[35] = v29;
  v23[30] = v29;
  v23[31] = 0.0;
  double v30 = *(double *)&a3;
  if (a4) {
    double v30 = 0.0;
  }
  *(double *)((char *)v15 + v27) = v30;
  v23[44] = v30;
  v24[6] = v30;
  *(void *)((char *)v15 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableVelocityThreshold) = 0x3F847AE147AE147BLL;
  v23[45] = 0.01;
  v24[7] = 0.01;
  return v15;
}

uint64_t destroy for FMR1DebugViewStyle(id *a1)
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FMR1DebugViewStyle(uint64_t a1, uint64_t a2)
{
  double v3 = *(void **)a2;
  double v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  id v6 = v3;
  id v7 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FMR1DebugViewStyle(uint64_t a1, uint64_t a2)
{
  double v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for FMR1DebugViewStyle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for FMR1DebugViewStyle(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMR1DebugViewStyle(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMR1DebugViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMR1DebugViewStyle()
{
  return &type metadata for FMR1DebugViewStyle;
}

double sub_24D32C7A8()
{
  uint64_t v0 = (void *)sub_24D39CAC0();
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_fontWithName_size_, v0, 14.0);

  uint64_t v3 = *MEMORY[0x263F835B8];
  if (!v2) {
    id v2 = objc_msgSend(v1, sel_preferredFontForTextStyle_, *MEMORY[0x263F835B8]);
  }
  id v4 = objc_msgSend(v1, sel_preferredFontForTextStyle_, v3);
  uint64_t v5 = sub_24D30DF70(2);

  qword_26986A378 = (uint64_t)v2;
  unk_26986A380 = v5;
  xmmword_26986A388 = xmmword_24D3A2E80;
  qword_26986A398 = 0x4020000000000000;
  qword_26986A3A0 = (uint64_t)&unk_26FF85120;
  qword_26986A3A8 = (uint64_t)&unk_26FF85170;
  double result = 0.75;
  *(_OWORD *)algn_26986A3B0 = xmmword_24D3A2E90;
  qword_26986A3C0 = 0x4010000000000000;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFindingConvergenceHint(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24D32C980);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for FMFindingConvergenceHint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x24D32CA68);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_24D32CA90(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_24D32CAAC(unsigned char *result, int a2)
{
  if (a2) {
    *double result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingConvergenceHint()
{
  return &type metadata for FMFindingConvergenceHint;
}

uint64_t sub_24D32CAD4(void *a1, unsigned __int8 a2)
{
  int v17 = a2;
  uint64_t v3 = sub_24D2B7450(&qword_269862178);
  uint64_t v15 = *(void *)(v3 - 8);
  uint64_t v16 = v3;
  MEMORY[0x270FA5388](v3);
  unsigned int v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24D2B7450(&qword_269862180);
  uint64_t v14 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  BOOL v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24D2B7450(&qword_269862188);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int64x2_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D32D7E8();
  sub_24D39D5F0();
  if (v17 == 2)
  {
    char v19 = 1;
    sub_24D32D83C();
    sub_24D39D3E0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
  }
  else
  {
    char v18 = 0;
    sub_24D32D890();
    sub_24D39D3E0();
    sub_24D39D410();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t sub_24D32CDC4()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_24D32CE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D32D258(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D32CE2C(uint64_t a1)
{
  unint64_t v2 = sub_24D32D7E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D32CE68(uint64_t a1)
{
  unint64_t v2 = sub_24D32D7E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D32CEA4(uint64_t a1)
{
  unint64_t v2 = sub_24D32D83C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D32CEE0(uint64_t a1)
{
  unint64_t v2 = sub_24D32D83C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D32CF1C()
{
  return 0x746E6F7A69726F68;
}

uint64_t sub_24D32CF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746E6F7A69726F68 && a2 == 0xEA00000000006C61)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24D39D4B0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24D32CFDC(uint64_t a1)
{
  unint64_t v2 = sub_24D32D890();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D32D018(uint64_t a1)
{
  unint64_t v2 = sub_24D32D890();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D32D054(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  char v3 = v2 == 2;
  int v4 = *a2;
  if (v4 != 2) {
    char v3 = 0;
  }
  if (v2 != 2 && v4 != 2) {
    char v3 = ((v2 & 1) == 0) ^ v4;
  }
  return v3 & 1;
}

uint64_t sub_24D32D08C()
{
  int v1 = *v0;
  sub_24D39D590();
  sub_24D39D5A0();
  if (v1 != 2) {
    sub_24D39D5B0();
  }
  return sub_24D39D5D0();
}

uint64_t sub_24D32D0FC()
{
  if (*v0 == 2) {
    return sub_24D39D5A0();
  }
  sub_24D39D5A0();
  return sub_24D39D5B0();
}

uint64_t sub_24D32D14C()
{
  int v1 = *v0;
  sub_24D39D590();
  sub_24D39D5A0();
  if (v1 != 2) {
    sub_24D39D5B0();
  }
  return sub_24D39D5D0();
}

uint64_t sub_24D32D1B8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24D32D344(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24D32D1E4(void *a1)
{
  return sub_24D32CAD4(a1, *v1);
}

unint64_t sub_24D32D204()
{
  unint64_t result = qword_269862140;
  if (!qword_269862140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862140);
  }
  return result;
}

uint64_t sub_24D32D258(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000024D3A4E00 || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024D3A8410)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24D39D4B0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D32D344(void *a1)
{
  uint64_t v23 = sub_24D2B7450(&qword_269862148);
  uint64_t v26 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  char v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24D2B7450(&qword_269862150);
  uint64_t v24 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24D2B7450(&qword_269862158);
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t)sub_24D2B8A34(a1, a1[3]);
  sub_24D32D7E8();
  uint64_t v11 = v27;
  sub_24D39D5E0();
  if (v11) {
    goto LABEL_7;
  }
  int64x2_t v12 = v3;
  uint64_t v27 = v4;
  uint64_t v13 = v26;
  uint64_t v14 = sub_24D39D3D0();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_24D39D220();
    swift_allocError();
    char v18 = v17;
    sub_24D2B7450(&qword_269860CA0);
    *char v18 = &type metadata for FMFindingConvergenceHint;
    uint64_t v10 = (uint64_t)v9;
    sub_24D39D350();
    sub_24D39D210();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
LABEL_7:
    sub_24D2B6E58((uint64_t)a1);
    return v10;
  }
  if (*(unsigned char *)(v14 + 32))
  {
    uint64_t v15 = (uint64_t)a1;
    char v29 = 1;
    sub_24D32D83C();
    sub_24D39D340();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
    uint64_t v10 = 2;
  }
  else
  {
    char v28 = 0;
    sub_24D32D890();
    sub_24D39D340();
    uint64_t v20 = v27;
    char v21 = sub_24D39D380();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
    uint64_t v10 = v21 & 1;
    uint64_t v15 = (uint64_t)a1;
  }
  sub_24D2B6E58(v15);
  return v10;
}

unint64_t sub_24D32D7E8()
{
  unint64_t result = qword_269862160;
  if (!qword_269862160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862160);
  }
  return result;
}

unint64_t sub_24D32D83C()
{
  unint64_t result = qword_269862168;
  if (!qword_269862168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862168);
  }
  return result;
}

unint64_t sub_24D32D890()
{
  unint64_t result = qword_269862170;
  if (!qword_269862170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862170);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFindingConvergenceHint.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D32D9B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingConvergenceHint.CodingKeys()
{
  return &type metadata for FMFindingConvergenceHint.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FMFindingConvergenceHint.InsufficientMovementCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24D32DA84);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingConvergenceHint.InsufficientMovementCodingKeys()
{
  return &type metadata for FMFindingConvergenceHint.InsufficientMovementCodingKeys;
}

ValueMetadata *type metadata accessor for FMFindingConvergenceHint.FindableIsMovingCodingKeys()
{
  return &type metadata for FMFindingConvergenceHint.FindableIsMovingCodingKeys;
}

unint64_t sub_24D32DAD0()
{
  unint64_t result = qword_269862190;
  if (!qword_269862190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862190);
  }
  return result;
}

unint64_t sub_24D32DB28()
{
  unint64_t result = qword_269862198;
  if (!qword_269862198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862198);
  }
  return result;
}

unint64_t sub_24D32DB80()
{
  unint64_t result = qword_2698621A0;
  if (!qword_2698621A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698621A0);
  }
  return result;
}

unint64_t sub_24D32DBD8()
{
  unint64_t result = qword_2698621A8;
  if (!qword_2698621A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698621A8);
  }
  return result;
}

unint64_t sub_24D32DC30()
{
  unint64_t result = qword_2698621B0;
  if (!qword_2698621B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698621B0);
  }
  return result;
}

unint64_t sub_24D32DC88()
{
  unint64_t result = qword_2698621B8;
  if (!qword_2698621B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698621B8);
  }
  return result;
}

unint64_t sub_24D32DCE0()
{
  unint64_t result = qword_2698621C0;
  if (!qword_2698621C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698621C0);
  }
  return result;
}

unint64_t sub_24D32DD38()
{
  unint64_t result = qword_2698621C8;
  if (!qword_2698621C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698621C8);
  }
  return result;
}

unint64_t sub_24D32DD8C(char a1)
{
  unint64_t result = 0x74617262696C6163;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D32DE2C(unsigned __int8 *a1, char *a2)
{
  return sub_24D37A4F4(*a1, *a2);
}

unint64_t sub_24D32DE38@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24D32DD8C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_24D32DE64()
{
  *(void *)&xmmword_26986A3C8 = *MEMORY[0x263F83618];
  *(long long *)((char *)&xmmword_26986A3C8 + 8) = (__int128)vdupq_n_s64(0x4040000000000000uLL);
  unk_26986A3E0 = xmmword_24D3A32B0;
  qword_26986A3F0 = 2;
  __asm { FMOV            V0.2D, #3.0 }
  xmmword_26986A3F8 = _Q0;
  xmmword_26986A408 = _Q0;
  return (id)xmmword_26986A3C8;
}

id sub_24D32DEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_stackView;
  id v6 = objc_allocWithZone(MEMORY[0x263F82BF8]);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = objc_msgSend(v6, sel_init);
  uint64_t v8 = (uint64_t)&v7[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_value];
  *(void *)(v8 + 32) = 0;
  *(_OWORD *)uint64_t v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  uint64_t v9 = &v7[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style];
  long long v11 = *(_OWORD *)(a2 + 16);
  long long v10 = *(_OWORD *)(a2 + 32);
  long long v12 = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v9 + 3) = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v9 + 4) = v12;
  *((_OWORD *)v9 + 1) = v11;
  *((_OWORD *)v9 + 2) = v10;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)a2;
  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_findables] = a1;
  if (*(void *)(a1 + 16))
  {
    sub_24D2B6CE8(a1 + 32, (uint64_t)v20);
  }
  else
  {
    uint64_t v21 = 0;
    memset(v20, 0, sizeof(v20));
  }
  swift_beginAccess();
  sub_24D3307AC((id *)a2);
  sub_24D2BB624((uint64_t)v20, v8);
  swift_endAccess();
  id v13 = objc_msgSend(self, sel_effectWithStyle_, *(void *)(a2 + 24));
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v13);

  *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_platterEffectView] = v14;
  v19.receiver = v7;
  v19.super_class = (Class)type metadata accessor for FMFindingSymbolBasedPartPickerView();
  id v15 = objc_msgSendSuper2(&v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_24D32E908(v16);
  sub_24D32EE90();
  sub_24D32EA78();
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82CB0]), sel_initWithTarget_action_, v15, sel_toggle);
  objc_msgSend(v15, sel_addGestureRecognizer_, v17);

  sub_24D3307D8((id *)a2);
  return v15;
}

uint64_t sub_24D32E158()
{
  uint64_t v1 = sub_24D39C8A0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned __int8 v44 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_24D2B7450(&qword_269860AC0);
  MEMORY[0x270FA5388](v53);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24D2B7450((uint64_t *)&unk_269861100);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v52 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v56 = (uint64_t)&v41 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v55 = (uint64_t)&v41 - v12;
  uint64_t v13 = *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_findables];
  uint64_t v14 = *(void *)(v13 + 16);
  id v15 = &qword_269862000;
  uint64_t v51 = v14;
  if (!v14)
  {
LABEL_18:
    uint64_t v38 = *(void *)(v13 + 16);
    if (v14 >= v38)
    {
      if (!v38)
      {
        uint64_t v60 = 0;
        long long v58 = 0u;
        long long v59 = 0u;
        goto LABEL_24;
      }
      uint64_t v39 = v13 + 32;
    }
    else
    {
      if (v14 < 0)
      {
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v39 = v13 + 40 * v14 + 32;
    }
    sub_24D2B6CE8(v39, (uint64_t)&v58);
LABEL_24:
    sub_24D2BBF50((uint64_t)&v58, (uint64_t)v57, &qword_269860AA8);
    uint64_t v40 = (uint64_t)&v0[v15[62]];
    swift_beginAccess();
    sub_24D2BB68C((uint64_t)v57, v40);
    swift_endAccess();
    sub_24D32EE90();
    sub_24D2BBFB4((uint64_t)v57, &qword_269860AA8);
    objc_msgSend(v0, sel_sendActionsForControlEvents_, 4096);
    return sub_24D2BBFB4((uint64_t)&v58, &qword_269860AA8);
  }
  double v16 = (void *)(v13 + 32);
  uint64_t v41 = v0;
  uint64_t v17 = (uint64_t)&v0[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_value];
  uint64_t v42 = v13;
  swift_bridgeObjectRetain();
  uint64_t v50 = v17;
  swift_beginAccess();
  uint64_t v18 = 0;
  unsigned __int8 v49 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v2 + 32);
  uint64_t v45 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v19 = v55;
  char v47 = v5;
  uint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  uint64_t v46 = v1;
  while (1)
  {
    uint64_t v21 = v16[3];
    uint64_t v20 = v16[4];
    sub_24D2B8A34(v16, v21);
    (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v21, v20);
    uint64_t v22 = v19;
    uint64_t v23 = *v49;
    (*v49)(v22, 0, 1, v1);
    sub_24D2BBF50(v50, (uint64_t)&v58, &qword_269860AA8);
    uint64_t v24 = *((void *)&v59 + 1);
    if (*((void *)&v59 + 1))
    {
      uint64_t v25 = v60;
      uint64_t v26 = sub_24D2B8A34(&v58, *((uint64_t *)&v59 + 1));
      unsigned __int8 v54 = (void **)&v41;
      uint64_t v27 = v56;
      uint64_t v28 = *(void *)(v24 - 8);
      MEMORY[0x270FA5388](v26);
      double v30 = (char *)&v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v28 + 16))(v30);
      sub_24D2BBFB4((uint64_t)&v58, &qword_269860AA8);
      (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v24);
      uint64_t v1 = v46;
      v23(v27, 0, 1, v46);
      uint64_t v5 = v47;
    }
    else
    {
      sub_24D2BBFB4((uint64_t)&v58, &qword_269860AA8);
      v23(v56, 1, 1, v1);
    }
    uint64_t v31 = (uint64_t)&v5[*(int *)(v53 + 48)];
    uint64_t v19 = v55;
    sub_24D2BBF50(v55, (uint64_t)v5, (uint64_t *)&unk_269861100);
    sub_24D2BBF50(v56, v31, (uint64_t *)&unk_269861100);
    double v32 = *v48;
    if ((*v48)(v5, 1, v1) == 1) {
      break;
    }
    sub_24D2BBF50((uint64_t)v5, v52, (uint64_t *)&unk_269861100);
    if (v32((char *)v31, 1, v1) == 1)
    {
      sub_24D2BBFB4(v56, (uint64_t *)&unk_269861100);
      sub_24D2BBFB4(v19, (uint64_t *)&unk_269861100);
      (*v45)(v52, v1);
      goto LABEL_4;
    }
    objc_super v33 = v44;
    (*v43)(v44, v31, v1);
    sub_24D3317FC();
    uint64_t v34 = v52;
    char v35 = sub_24D39CAB0();
    double v36 = *v45;
    uint64_t v37 = v33;
    uint64_t v19 = v55;
    (*v45)((uint64_t)v37, v1);
    sub_24D2BBFB4(v56, (uint64_t *)&unk_269861100);
    sub_24D2BBFB4(v19, (uint64_t *)&unk_269861100);
    v36(v34, v1);
    sub_24D2BBFB4((uint64_t)v5, (uint64_t *)&unk_269861100);
    if (v35) {
      goto LABEL_16;
    }
LABEL_5:
    ++v18;
    v16 += 5;
    if (v51 == v18)
    {
      uint64_t v13 = v42;
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v14 = 0;
      uint64_t v0 = v41;
      id v15 = &qword_269862000;
      goto LABEL_18;
    }
  }
  sub_24D2BBFB4(v56, (uint64_t *)&unk_269861100);
  sub_24D2BBFB4(v19, (uint64_t *)&unk_269861100);
  if (v32((char *)v31, 1, v1) != 1)
  {
LABEL_4:
    sub_24D2BBFB4((uint64_t)v5, &qword_269860AC0);
    goto LABEL_5;
  }
  sub_24D2BBFB4((uint64_t)v5, (uint64_t *)&unk_269861100);
LABEL_16:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v14 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    uint64_t v0 = v41;
    id v15 = &qword_269862000;
    uint64_t v13 = v42;
    goto LABEL_18;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_24D32E908(double a1)
{
  LODWORD(a1) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, a1);
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_platterEffectView];
  objc_msgSend(v1, sel_addSubview_, v2);
  id v3 = objc_msgSend(v2, sel_contentView);
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_stackView];
  objc_msgSend(v3, sel_addSubview_, v4);

  id v5 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v5, sel_setCornerCurve_, *MEMORY[0x263F15A20]);

  id v6 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v6, sel_setMasksToBounds_, 1);

  objc_msgSend(v1, sel_setOverrideUserInterfaceStyle_, 2);
  objc_msgSend(v4, sel_setDirectionalLayoutMargins_, *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + 48], *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + 56], *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + 64], *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + 72]);
  objc_msgSend(v4, sel_setLayoutMarginsRelativeArrangement_, 1);
  return objc_msgSend(v4, sel_setAxis_, 0);
}

void sub_24D32EA78()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_stackView];
  id v3 = *(id *)&v0[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_platterEffectView];
  id v4 = v2;
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  double v30 = self;
  sub_24D2B7450(&qword_269861330);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24D3A32C0;
  id v6 = objc_msgSend(v4, sel_leadingAnchor);
  id v7 = objc_msgSend(v3, (SEL)&off_265304238 + 2);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(void *)(v5 + 32) = v8;
  id v9 = objc_msgSend(v4, sel_trailingAnchor);
  id v10 = objc_msgSend(v3, sel_trailingAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(void *)(v5 + 40) = v11;
  id v12 = objc_msgSend(v4, sel_topAnchor);
  id v13 = objc_msgSend(v3, sel_topAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(void *)(v5 + 48) = v14;
  id v15 = objc_msgSend(v4, sel_bottomAnchor);
  id v16 = objc_msgSend(v3, sel_bottomAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(void *)(v5 + 56) = v17;
  id v18 = objc_msgSend(v1, sel_leadingAnchor);
  id v19 = objc_msgSend(v3, sel_leadingAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(void *)(v5 + 64) = v20;
  id v21 = objc_msgSend(v1, sel_trailingAnchor);
  id v22 = objc_msgSend(v3, sel_trailingAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(void *)(v5 + 72) = v23;
  id v24 = objc_msgSend(v1, sel_topAnchor);
  id v25 = objc_msgSend(v3, sel_topAnchor);
  id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(void *)(v5 + 80) = v26;
  id v27 = objc_msgSend(v1, sel_bottomAnchor);
  id v28 = objc_msgSend(v3, sel_bottomAnchor);
  id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(void *)(v5 + 88) = v29;
  sub_24D39CC30();
  sub_24D2BC100(0, (unint64_t *)&qword_269862780);
  id v31 = (id)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v30, sel_activateConstraints_, v31);
}

void sub_24D32EE90()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_stackView], sel_arrangedSubviews);
  sub_24D2BC100(0, &qword_269862760);
  unint64_t v3 = sub_24D39CC10();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_24D39D2D0();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_21;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x253325220](i, v3);
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    id v7 = v6;
    objc_msgSend(v6, sel_removeFromSuperview);
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  id v8 = self;
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style];
  id v10 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, *MEMORY[0x263F83470]);
  id v11 = objc_msgSend(v8, sel_preferredFontForTextStyle_compatibleWithTraitCollection_, v9, v10);

  id v12 = (void *)sub_24D30DF70(2);
  id v13 = objc_msgSend(self, sel_configurationWithFont_scale_, v12, 3);

  id v21 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_findables];
  swift_bridgeObjectRetain_n();
  uint64_t v1 = v1;
  sub_24D33160C(&v21, v1);
  swift_bridgeObjectRelease();

  id v14 = v21;
  MEMORY[0x270FA5388](v15);
  unint64_t v16 = sub_24D3316AC((uint64_t)v14, (void (*)(void, char *))sub_24D3316A4);
  swift_release();
  if (!(v16 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_12;
    }
LABEL_19:

    swift_bridgeObjectRelease_n();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_24D39D2D0();
  if (!v17) {
    goto LABEL_19;
  }
LABEL_12:
  if (v17 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      if ((v16 & 0xC000000000000001) != 0) {
        id v19 = (void *)MEMORY[0x253325220](v18, v16);
      }
      else {
        id v19 = *(id *)(v16 + 8 * v18 + 32);
      }
      id v20 = v19;
      ++v18;
      id v21 = v19;
      sub_24D32FF80((id *)&v21, (uint64_t)v1);
    }
    while (v17 != v18);
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);

  swift_release();
  __break(1u);
}

uint64_t sub_24D32F1E0(void *a1, void *a2, void *a3)
{
  uint64_t v63 = a2;
  uint64_t v5 = sub_24D39C8A0();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  id v11 = (char *)&v52 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  id v14 = (char *)&v52 - v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v52 - v15;
  sub_24D2B6CE8((uint64_t)a1, (uint64_t)v57);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450((uint64_t *)&unk_269861150);
  if (swift_dynamicCast())
  {
    sub_24D2B6F04(v55, (uint64_t)v60);
    sub_24D2B6CE8((uint64_t)v63, (uint64_t)v55);
    if ((swift_dynamicCast() & 1) == 0)
    {
      *(void *)((char *)&v54[4] + 2) = 0;
      memset((char *)v54 + 2, 0, 32);
      sub_24D2BBFB4((uint64_t)v54 + 2, (uint64_t *)&unk_269861600);
      uint64_t v35 = a1[3];
      uint64_t v36 = a1[4];
      sub_24D2B8A34(a1, v35);
      (*(void (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
      uint64_t v37 = sub_24D39C850();
      uint64_t v39 = v38;
      uint64_t v40 = *(void (**)(char *, uint64_t))(v53 + 8);
      v40(v11, v5);
      uint64_t v41 = v63[3];
      uint64_t v42 = v63[4];
      sub_24D2B8A34(v63, v41);
      (*(void (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
      uint64_t v43 = sub_24D39C850();
      uint64_t v45 = v44;
      v40(v8, v5);
      if (v37 == v43 && v39 == v45) {
        char v19 = 0;
      }
      else {
        char v19 = sub_24D39D4B0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    sub_24D2B6F04((long long *)((char *)v54 + 2), (uint64_t)v57);
    id v17 = objc_msgSend(a3, sel_traitCollection);
    id v18 = objc_msgSend(v17, sel_layoutDirection);

    char v19 = v18 == (id)1;
    uint64_t v20 = v61;
    uint64_t v21 = v62;
    sub_24D2B8A34(v60, v61);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v21 + 32))(v55, v20, v21);
    int v22 = LOBYTE(v55[0]);
    uint64_t v23 = v58;
    uint64_t v24 = v59;
    sub_24D2B8A34(v57, v58);
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v24 + 32))((char *)v54 + 2, v23, v24);
    if (v22 == 2)
    {
      if (BYTE2(v54[0]) == 3)
      {
        char v19 = v18 != (id)1;
LABEL_19:
        sub_24D2B6E58((uint64_t)v57);
LABEL_20:
        sub_24D2B6E58((uint64_t)v60);
        return v19 & 1;
      }
    }
    else if (v22 == 3 && BYTE2(v54[0]) == 2)
    {
      goto LABEL_19;
    }
    uint64_t v46 = v61;
    uint64_t v47 = v62;
    sub_24D2B8A34(v60, v61);
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v47 + 32))((char *)v54 + 1, v46, v47);
    uint64_t v48 = SBYTE1(v54[0]);
    uint64_t v49 = v58;
    uint64_t v50 = v59;
    sub_24D2B8A34(v57, v58);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v50 + 32))(v54, v49, v50);
    char v19 = flt_24D3A334C[v48] < flt_24D3A334C[SLOBYTE(v54[0])];
    goto LABEL_19;
  }
  uint64_t v56 = 0;
  memset(v55, 0, sizeof(v55));
  sub_24D2BBFB4((uint64_t)v55, (uint64_t *)&unk_269861600);
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  sub_24D2B8A34(a1, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  uint64_t v52 = sub_24D39C850();
  uint64_t v28 = v27;
  id v29 = *(void (**)(char *, uint64_t))(v53 + 8);
  v29(v16, v5);
  uint64_t v30 = v63[3];
  uint64_t v31 = v63[4];
  sub_24D2B8A34(v63, v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
  uint64_t v32 = sub_24D39C850();
  uint64_t v34 = v33;
  v29(v14, v5);
  if (v52 == v32 && v28 == v34)
  {
    swift_bridgeObjectRelease_n();
    char v19 = 0;
  }
  else
  {
    char v19 = sub_24D39D4B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v19 & 1;
}

uint64_t sub_24D32F7B4(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v67 = sub_24D39C8A0();
  uint64_t v65 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v59 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_24D2B7450(&qword_269860AC0);
  MEMORY[0x270FA5388](v62);
  uint64_t v66 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24D2B7450((uint64_t *)&unk_269861100);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v63 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v58 - v14;
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v58 - v16;
  id v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_init);
  uint64_t v61 = a2;
  sub_24D2B6CE8((uint64_t)a2, (uint64_t)v71);
  sub_24D2B7450((uint64_t *)&unk_2698615F0);
  sub_24D2B7450((uint64_t *)&unk_269861150);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v75 = 0;
    memset(v74, 0, sizeof(v74));
  }
  sub_24D2BBF50((uint64_t)v74, (uint64_t)v71, (uint64_t *)&unk_269861600);
  uint64_t v18 = v72;
  if (!v72)
  {
    uint64_t result = sub_24D2BBFB4((uint64_t)v71, (uint64_t *)&unk_269861600);
    goto LABEL_8;
  }
  uint64_t v19 = a4;
  uint64_t v20 = v15;
  uint64_t v21 = v17;
  uint64_t v22 = v73;
  sub_24D2B8A34(v71, v72);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v22 + 24))(&v68, v18, v22);
  uint64_t v23 = v69;
  if (!v69)
  {
    uint64_t result = sub_24D2B6E58((uint64_t)v71);
    id v17 = v21;
    uint64_t v15 = v20;
    a4 = v19;
    uint64_t v27 = a1 + 1;
    if (!__OFADD__(a1, 1)) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
  uint64_t v24 = v70;
  uint64_t v25 = v68;
  swift_bridgeObjectRetain();
  sub_24D2BBA3C(v25, v23);
  uint64_t result = sub_24D2B6E58((uint64_t)v71);
  id v17 = v21;
  uint64_t v15 = v20;
  a4 = v19;
  if (!v24)
  {
LABEL_8:
    uint64_t v27 = a1 + 1;
    if (!__OFADD__(a1, 1))
    {
LABEL_9:
      uint64_t v68 = v27;
      v71[0] = sub_24D39D490();
      v71[1] = v28;
      sub_24D39CB70();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
LABEL_23:
    __break(1u);
    return result;
  }
LABEL_10:
  id v29 = a3;
  uint64_t v30 = (void *)sub_24D39CAC0();
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v30, v29);

  id v32 = v64;
  id v60 = v31;
  objc_msgSend(v64, sel_setImage_, v31);
  objc_msgSend(v32, sel_setContentMode_, 4);
  uint64_t v33 = v61[3];
  uint64_t v34 = v61[4];
  sub_24D2B8A34(v61, v33);
  (*(void (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56);
  v35(v17, 0, 1, v67);
  uint64_t v36 = a4 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_value;
  swift_beginAccess();
  sub_24D2BBF50(v36, (uint64_t)v71, &qword_269860AA8);
  uint64_t v37 = v72;
  if (v72)
  {
    uint64_t v38 = v73;
    uint64_t v39 = sub_24D2B8A34(v71, v72);
    uint64_t v61 = &v58;
    uint64_t v40 = *(void *)(v37 - 8);
    MEMORY[0x270FA5388](v39);
    uint64_t v42 = (char *)&v58 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v40 + 16))(v42);
    sub_24D2BBFB4((uint64_t)v71, &qword_269860AA8);
    (*(void (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v37);
    v35(v15, 0, 1, v67);
  }
  else
  {
    sub_24D2BBFB4((uint64_t)v71, &qword_269860AA8);
    v35(v15, 1, 1, v67);
  }
  uint64_t v43 = v66;
  uint64_t v44 = v66 + *(int *)(v62 + 48);
  uint64_t v45 = (uint64_t *)&unk_269861100;
  sub_24D2BBF50((uint64_t)v17, v66, (uint64_t *)&unk_269861100);
  sub_24D2BBF50((uint64_t)v15, v44, (uint64_t *)&unk_269861100);
  uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  int v47 = v46(v43, 1, v67);
  uint64_t v48 = v63;
  if (v47 == 1)
  {
    sub_24D2BBFB4((uint64_t)v15, (uint64_t *)&unk_269861100);
    sub_24D2BBFB4((uint64_t)v17, (uint64_t *)&unk_269861100);
    if (v46(v44, 1, v67) == 1)
    {
      char v49 = -1;
    }
    else
    {
      uint64_t v45 = &qword_269860AC0;
      char v49 = 0;
    }
  }
  else
  {
    sub_24D2BBF50(v66, v63, (uint64_t *)&unk_269861100);
    if (v46(v44, 1, v67) == 1)
    {
      sub_24D2BBFB4((uint64_t)v15, (uint64_t *)&unk_269861100);
      sub_24D2BBFB4((uint64_t)v17, (uint64_t *)&unk_269861100);
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v48, v67);
      char v49 = 0;
      uint64_t v45 = &qword_269860AC0;
    }
    else
    {
      uint64_t v50 = (uint64_t)v15;
      uint64_t v51 = v65;
      uint64_t v52 = (uint64_t)v17;
      uint64_t v53 = v59;
      uint64_t v54 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v59, v44, v67);
      sub_24D3317FC();
      char v49 = sub_24D39CAB0();
      uint64_t v55 = *(void (**)(char *, uint64_t))(v51 + 8);
      v55(v53, v54);
      sub_24D2BBFB4(v50, (uint64_t *)&unk_269861100);
      sub_24D2BBFB4(v52, (uint64_t *)&unk_269861100);
      v55((char *)v48, v54);
    }
  }
  uint64_t v56 = v60;
  sub_24D2BBFB4(v66, v45);
  id v57 = v64;
  objc_msgSend(v64, sel_setHighlighted_, v49 & 1);

  sub_24D2BBFB4((uint64_t)v74, (uint64_t *)&unk_269861600);
  return (uint64_t)v57;
}

void sub_24D32FF80(id *a1, uint64_t a2)
{
  id v3 = *a1;
  objc_msgSend(*a1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  unsigned int v4 = objc_msgSend(v3, sel_isHighlighted);
  uint64_t v5 = 40;
  if (v4) {
    uint64_t v5 = 32;
  }
  uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + v5);
  id v24 = objc_msgSend(self, sel_effectWithStyle_, 6);
  id v7 = objc_msgSend(self, sel_effectForBlurEffect_style_, v24, v6);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v7);
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v9 = objc_msgSend(v8, sel_contentView);
  objc_msgSend(v9, sel_addSubview_, v3);

  id v23 = self;
  sub_24D2B7450(&qword_269861330);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24D3A0040;
  id v11 = objc_msgSend(v8, sel_widthAnchor);
  uint64_t v12 = a2 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style;
  id v13 = objc_msgSend(v11, sel_constraintEqualToConstant_, *(double *)(a2 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_style + 8));

  *(void *)(v10 + 32) = v13;
  id v14 = objc_msgSend(v8, sel_heightAnchor);
  id v15 = objc_msgSend(v14, sel_constraintEqualToConstant_, *(double *)(v12 + 16));

  *(void *)(v10 + 40) = v15;
  id v16 = objc_msgSend(v8, sel_centerXAnchor);
  id v17 = objc_msgSend(v3, sel_centerXAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(void *)(v10 + 48) = v18;
  id v19 = objc_msgSend(v8, sel_centerYAnchor);
  id v20 = objc_msgSend(v3, sel_centerYAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v10 + 56) = v21;
  sub_24D39CC30();
  sub_24D2BC100(0, (unint64_t *)&qword_269862780);
  uint64_t v22 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_activateConstraints_, v22);

  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_stackView), sel_addArrangedSubview_, v8);
}

id sub_24D330414()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingSymbolBasedPartPickerView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FMFindingSymbolBasedPartPickerView()
{
  return self;
}

void destroy for FMFindingSymbolBasedPartPickerViewStyle(id *a1)
{
}

uint64_t initializeWithCopy for FMFindingSymbolBasedPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for FMFindingSymbolBasedPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for FMFindingSymbolBasedPartPickerViewStyle(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for FMFindingSymbolBasedPartPickerViewStyle()
{
  return &type metadata for FMFindingSymbolBasedPartPickerViewStyle;
}

uint64_t sub_24D330630@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_value;
  swift_beginAccess();
  return sub_24D2BBF50(v3, a1, &qword_269860AA8);
}

uint64_t sub_24D33068C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11FMFindingUI34FMFindingSymbolBasedPartPickerView_value;
  swift_beginAccess();
  sub_24D2BB68C(a1, v3);
  swift_endAccess();
  sub_24D32EE90();
  return sub_24D2BBFB4(a1, &qword_269860AA8);
}

uint64_t sub_24D330704()
{
  return swift_bridgeObjectRetain();
}

id sub_24D330714(uint64_t a1)
{
  if (qword_269860348 != -1) {
    swift_once();
  }
  _OWORD v4[2] = unk_26986A3E8;
  v4[3] = xmmword_26986A3F8;
  v4[4] = xmmword_26986A408;
  v4[0] = xmmword_26986A3C8;
  v4[1] = unk_26986A3D8;
  id v2 = objc_allocWithZone((Class)type metadata accessor for FMFindingSymbolBasedPartPickerView());
  sub_24D3307AC((id *)v4);
  return sub_24D32DEA8(a1, (uint64_t)v4);
}

id *sub_24D3307AC(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_24D3307D8(id *a1)
{
  return a1;
}

uint64_t sub_24D330804(char *__src, char *a2, unint64_t a3, char *__dst, void *a5)
{
  id v6 = __dst;
  id v8 = a2;
  int64_t v10 = a2 - __src;
  int64_t v11 = (a2 - __src) / 40;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v42 = __src;
  uint64_t v41 = __dst;
  if (v11 >= v13)
  {
    if (v12 >= -39)
    {
      id v15 = a5;
      if (__dst != a2 || &a2[40 * v13] <= __dst) {
        memmove(__dst, a2, 40 * v13);
      }
      uint64_t v25 = &v6[40 * v13];
      uint64_t v40 = v25;
      uint64_t v42 = v8;
      if (__src >= v8 || v12 < 40) {
        goto LABEL_45;
      }
      unint64_t v26 = a3 - 40;
      while (1)
      {
        sub_24D2B6CE8((uint64_t)(v25 - 40), (uint64_t)v39);
        id v29 = v8 - 40;
        sub_24D2B6CE8((uint64_t)(v8 - 40), (uint64_t)v38);
        char v30 = sub_24D32F1E0(v39, v38, a5);
        if (v5) {
          goto LABEL_43;
        }
        char v31 = v30;
        id v32 = (char *)(v26 + 40);
        sub_24D2B6E58((uint64_t)v38);
        sub_24D2B6E58((uint64_t)v39);
        if (v31)
        {
          if (v32 != v8 || v26 >= (unint64_t)v8)
          {
            long long v27 = *(_OWORD *)v29;
            long long v28 = *(_OWORD *)(v8 - 24);
            *(void *)(v26 + 32) = *((void *)v8 - 1);
            *(_OWORD *)unint64_t v26 = v27;
            *(_OWORD *)(v26 + 16) = v28;
          }
          v42 -= 40;
          uint64_t v25 = v40;
          if (v40 <= v6) {
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v33 = v40;
          uint64_t v25 = v40 - 40;
          v40 -= 40;
          if (v32 < v33 || v26 >= (unint64_t)v33 || v32 != v33)
          {
            long long v34 = *(_OWORD *)v25;
            long long v35 = *(_OWORD *)(v33 - 24);
            *(void *)(v26 + 32) = *((void *)v33 - 1);
            *(_OWORD *)unint64_t v26 = v34;
            *(_OWORD *)(v26 + 16) = v35;
          }
          id v29 = v8;
          if (v25 <= v6) {
            goto LABEL_45;
          }
        }
        v26 -= 40;
        id v8 = v29;
        if (v29 <= __src) {
          goto LABEL_45;
        }
      }
    }
  }
  else if (v10 >= -39)
  {
    if (__dst != __src || &__src[40 * v11] <= __dst) {
      memmove(__dst, __src, 40 * v11);
    }
    unint64_t v14 = (unint64_t)&v6[40 * v11];
    uint64_t v40 = (char *)v14;
    if ((unint64_t)v8 >= a3)
    {
      id v15 = a5;
      goto LABEL_45;
    }
    id v15 = a5;
    if (v10 < 40)
    {
LABEL_45:
      sub_24D35B9D4((void **)&v42, (const void **)&v41, &v40);

      return 1;
    }
    while (1)
    {
      sub_24D2B6CE8((uint64_t)v8, (uint64_t)v39);
      sub_24D2B6CE8((uint64_t)v6, (uint64_t)v38);
      char v16 = sub_24D32F1E0(v39, v38, a5);
      if (v5) {
        break;
      }
      char v17 = v16;
      sub_24D2B6E58((uint64_t)v38);
      sub_24D2B6E58((uint64_t)v39);
      id v18 = v42;
      if (v17)
      {
        unint64_t v19 = (unint64_t)(v8 + 40);
        if (v42 >= v8 && (unint64_t)v42 < v19 && v42 == v8)
        {
          id v18 = v8;
        }
        else
        {
          long long v20 = *(_OWORD *)v8;
          long long v21 = *((_OWORD *)v8 + 1);
          *((void *)v42 + 4) = *((void *)v8 + 4);
          *id v18 = v20;
          v18[1] = v21;
        }
      }
      else
      {
        uint64_t v22 = v41 + 40;
        if (v42 != v41 || v42 >= v22)
        {
          long long v23 = *(_OWORD *)v41;
          long long v24 = *((_OWORD *)v41 + 1);
          *((void *)v42 + 4) = *((void *)v41 + 4);
          *id v18 = v23;
          v18[1] = v24;
        }
        uint64_t v41 = v22;
        unint64_t v19 = (unint64_t)v8;
      }
      uint64_t v42 = (char *)v18 + 40;
      id v6 = v41;
      if ((unint64_t)v41 < v14)
      {
        id v8 = (char *)v19;
        if (v19 < a3) {
          continue;
        }
      }
      goto LABEL_45;
    }
LABEL_43:
    sub_24D2B6E58((uint64_t)v38);
    sub_24D2B6E58((uint64_t)v39);
    goto LABEL_45;
  }

  uint64_t result = sub_24D39D310();
  __break(1u);
  return result;
}

uint64_t sub_24D330B90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  if (a3 != a2)
  {
    uint64_t v8 = a3;
    uint64_t v10 = 40 * a3 - 40;
    uint64_t v20 = result;
LABEL_4:
    uint64_t v11 = result;
    uint64_t v12 = v10;
    while (1)
    {
      uint64_t v13 = *a4 + v12;
      sub_24D2B6CE8(v13 + 40, (uint64_t)v19);
      sub_24D2B6CE8(v13, (uint64_t)v18);
      char v14 = sub_24D32F1E0(v19, v18, a5);
      sub_24D2B6E58((uint64_t)v18);
      uint64_t result = sub_24D2B6E58((uint64_t)v19);
      if (v5) {
        break;
      }
      if (v14)
      {
        uint64_t v15 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v16 = v15 + v12;
        sub_24D2B6F04((long long *)(v15 + v12 + 40), (uint64_t)v19);
        long long v17 = *(_OWORD *)(v16 + 16);
        *(_OWORD *)(v16 + 40) = *(_OWORD *)v16;
        *(_OWORD *)(v16 + 56) = v17;
        *(void *)(v16 + 72) = *(void *)(v16 + 32);
        sub_24D2B6F04(v19, v16);
        v12 -= 40;
        if (v8 != ++v11) {
          continue;
        }
      }
      ++v8;
      v10 += 40;
      uint64_t result = v20;
      if (v8 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }
  return result;
}

void sub_24D330CC4(uint64_t *a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = a1[1];
  unint64_t v5 = a2;
  uint64_t v6 = sub_24D39D470();
  if (v6 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_141;
    }
    if (v4)
    {
      id v10 = (id)v5;
      sub_24D330B90(0, v4, 1, v3, v10);
    }
    else
    {
    }
    goto LABEL_119;
  }
  if (v4 >= 0) {
    uint64_t v7 = v4;
  }
  else {
    uint64_t v7 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_150;
  }
  uint64_t v115 = (void *)v5;
  uint64_t v105 = v6;
  uint64_t v118 = v2;
  if (v4 < 2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v4 != 1)
    {
      unint64_t v5 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v13 = (char *)MEMORY[0x263F8EE78];
      if (v5 < 2) {
        goto LABEL_118;
      }
      goto LABEL_105;
    }
    uint64_t v106 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    sub_24D2B7450((uint64_t *)&unk_2698615F0);
    uint64_t v9 = sub_24D39CC50();
    *(void *)(v9 + 16) = v8;
    uint64_t v106 = v9;
    __dst = (char *)(v9 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v13 = (char *)MEMORY[0x263F8EE78];
  char v109 = v3;
  while (1)
  {
    uint64_t v14 = v12++;
    __int16 v112 = v13;
    if (v12 >= v4)
    {
      unint64_t v5 = (unint64_t)v115;
      uint64_t v28 = v118;
      goto LABEL_43;
    }
    unint64_t v5 = *v3;
    sub_24D2B6CE8(*v3 + 40 * v12, (uint64_t)v117);
    sub_24D2B6CE8(v5 + 40 * v14, (uint64_t)v116);
    uint64_t v15 = v118;
    int v16 = sub_24D32F1E0(v117, v116, v115);
    if (v15)
    {
      sub_24D2B6E58((uint64_t)v116);
      sub_24D2B6E58((uint64_t)v117);
LABEL_116:
      swift_bridgeObjectRelease();
      unint64_t v5 = (unint64_t)v115;
      *(void *)(v106 + 16) = 0;

      swift_bridgeObjectRelease();
      goto LABEL_119;
    }
    int v17 = v16;
    sub_24D2B6E58((uint64_t)v116);
    sub_24D2B6E58((uint64_t)v117);
    uint64_t v12 = v14 + 2;
    if (v14 + 2 < v4)
    {
      uint64_t v18 = v14;
      uint64_t v19 = v5 + 40 * v14 + 40;
      while (1)
      {
        sub_24D2B6CE8(v19 + 40, (uint64_t)v117);
        sub_24D2B6CE8(v19, (uint64_t)v116);
        int v20 = sub_24D32F1E0(v117, v116, v115);
        sub_24D2B6E58((uint64_t)v116);
        sub_24D2B6E58((uint64_t)v117);
        if ((v17 ^ v20)) {
          break;
        }
        ++v12;
        v19 += 40;
        if (v4 == v12)
        {
          uint64_t v12 = v4;
          break;
        }
      }
      uint64_t v13 = v112;
      uint64_t v14 = v18;
    }
    if ((v17 & 1) == 0) {
      goto LABEL_32;
    }
    if (v12 < v14) {
      goto LABEL_145;
    }
    if (v14 < v12)
    {
      uint64_t v21 = v12;
      uint64_t v22 = 40 * v12 - 40;
      uint64_t v23 = v14;
      uint64_t v24 = 40 * v14;
      uint64_t v107 = v21;
      uint64_t v118 = v14;
      do
      {
        if (v23 != --v21)
        {
          if (!v5) {
            goto LABEL_148;
          }
          unint64_t v25 = v5 + v24;
          sub_24D2B6F04((long long *)(v5 + v24), (uint64_t)v117);
          uint64_t v26 = *(void *)(v5 + v22 + 32);
          long long v27 = *(_OWORD *)(v5 + v22 + 16);
          *(_OWORD *)unint64_t v25 = *(_OWORD *)(v5 + v22);
          *(_OWORD *)(v25 + 16) = v27;
          *(void *)(v25 + 32) = v26;
          sub_24D2B6F04(v117, v5 + v22);
          uint64_t v13 = v112;
        }
        ++v23;
        v22 -= 40;
        v24 += 40;
      }
      while (v23 < v21);
      unint64_t v5 = (unint64_t)v115;
      uint64_t v28 = 0;
      uint64_t v12 = v107;
      uint64_t v3 = v109;
      uint64_t v14 = v118;
      if (v107 >= v4) {
        goto LABEL_43;
      }
    }
    else
    {
LABEL_32:
      unint64_t v5 = (unint64_t)v115;
      uint64_t v28 = 0;
      uint64_t v3 = v109;
      if (v12 >= v4) {
        goto LABEL_43;
      }
    }
    if (__OFSUB__(v12, v14)) {
      goto LABEL_142;
    }
    if (v12 - v14 >= v105) {
      goto LABEL_43;
    }
    if (__OFADD__(v14, v105)) {
      goto LABEL_143;
    }
    uint64_t v29 = v14 + v105 >= v4 ? v4 : v14 + v105;
    if (v29 < v14) {
      break;
    }
    if (v12 != v29)
    {
      uint64_t v118 = v14;
      uint64_t v85 = 40 * v12 - 40;
      do
      {
        uint64_t v86 = v118;
        uint64_t v87 = v85;
        do
        {
          uint64_t v88 = *v3 + v87;
          sub_24D2B6CE8(v88 + 40, (uint64_t)v117);
          sub_24D2B6CE8(v88, (uint64_t)v116);
          LOBYTE(v88) = sub_24D32F1E0(v117, v116, (void *)v5);
          sub_24D2B6E58((uint64_t)v116);
          sub_24D2B6E58((uint64_t)v117);
          if ((v88 & 1) == 0) {
            break;
          }
          uint64_t v89 = *v3;
          if (!*v3) {
            goto LABEL_147;
          }
          uint64_t v90 = v89 + v87;
          sub_24D2B6F04((long long *)(v89 + v87 + 40), (uint64_t)v117);
          long long v91 = *(_OWORD *)(v90 + 16);
          *(_OWORD *)(v90 + 40) = *(_OWORD *)v90;
          *(_OWORD *)(v90 + 56) = v91;
          *(void *)(v90 + 72) = *(void *)(v90 + 32);
          sub_24D2B6F04(v117, v90);
          v87 -= 40;
          ++v86;
        }
        while (v12 != v86);
        ++v12;
        v85 += 40;
      }
      while (v12 != v29);
      uint64_t v12 = v29;
      uint64_t v13 = v112;
      uint64_t v14 = v118;
      if (v29 < v118) {
        goto LABEL_140;
      }
      goto LABEL_44;
    }
LABEL_43:
    if (v12 < v14) {
      goto LABEL_140;
    }
LABEL_44:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v118 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v13 = sub_24D35B8D8(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v32 = *((void *)v13 + 2);
    unint64_t v31 = *((void *)v13 + 3);
    unint64_t v5 = v32 + 1;
    if (v32 >= v31 >> 1) {
      uint64_t v13 = sub_24D35B8D8((char *)(v31 > 1), v32 + 1, 1, v13);
    }
    *((void *)v13 + 2) = v5;
    uint64_t v33 = v13 + 32;
    long long v34 = &v13[16 * v32 + 32];
    *(void *)long long v34 = v14;
    *((void *)v34 + 1) = v12;
    if (v32)
    {
      uint64_t v108 = v12;
      while (1)
      {
        unint64_t v35 = v5 - 1;
        if (v5 >= 4)
        {
          uint64_t v40 = &v33[16 * v5];
          uint64_t v41 = *((void *)v40 - 8);
          uint64_t v42 = *((void *)v40 - 7);
          BOOL v46 = __OFSUB__(v42, v41);
          uint64_t v43 = v42 - v41;
          if (v46) {
            goto LABEL_125;
          }
          uint64_t v45 = *((void *)v40 - 6);
          uint64_t v44 = *((void *)v40 - 5);
          BOOL v46 = __OFSUB__(v44, v45);
          uint64_t v38 = v44 - v45;
          char v39 = v46;
          if (v46) {
            goto LABEL_126;
          }
          unint64_t v47 = v5 - 2;
          uint64_t v48 = &v33[16 * v5 - 32];
          uint64_t v50 = *(void *)v48;
          uint64_t v49 = *((void *)v48 + 1);
          BOOL v46 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          if (v46) {
            goto LABEL_128;
          }
          BOOL v46 = __OFADD__(v38, v51);
          uint64_t v52 = v38 + v51;
          if (v46) {
            goto LABEL_131;
          }
          if (v52 >= v43)
          {
            uint64_t v70 = &v33[16 * v35];
            uint64_t v72 = *(void *)v70;
            uint64_t v71 = *((void *)v70 + 1);
            BOOL v46 = __OFSUB__(v71, v72);
            uint64_t v73 = v71 - v72;
            if (v46) {
              goto LABEL_135;
            }
            BOOL v63 = v38 < v73;
            goto LABEL_81;
          }
        }
        else
        {
          if (v5 != 3)
          {
            uint64_t v64 = *((void *)v13 + 4);
            uint64_t v65 = *((void *)v13 + 5);
            BOOL v46 = __OFSUB__(v65, v64);
            uint64_t v57 = v65 - v64;
            char v58 = v46;
            goto LABEL_75;
          }
          uint64_t v37 = *((void *)v13 + 4);
          uint64_t v36 = *((void *)v13 + 5);
          BOOL v46 = __OFSUB__(v36, v37);
          uint64_t v38 = v36 - v37;
          char v39 = v46;
        }
        if (v39) {
          goto LABEL_127;
        }
        unint64_t v47 = v5 - 2;
        uint64_t v53 = &v33[16 * v5 - 32];
        uint64_t v55 = *(void *)v53;
        uint64_t v54 = *((void *)v53 + 1);
        BOOL v56 = __OFSUB__(v54, v55);
        uint64_t v57 = v54 - v55;
        char v58 = v56;
        if (v56) {
          goto LABEL_130;
        }
        uint64_t v59 = &v33[16 * v35];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v46 = __OFSUB__(v60, v61);
        uint64_t v62 = v60 - v61;
        if (v46) {
          goto LABEL_133;
        }
        if (__OFADD__(v57, v62)) {
          goto LABEL_134;
        }
        if (v57 + v62 >= v38)
        {
          BOOL v63 = v38 < v62;
LABEL_81:
          if (v63) {
            unint64_t v35 = v47;
          }
          goto LABEL_83;
        }
LABEL_75:
        if (v58) {
          goto LABEL_129;
        }
        uint64_t v66 = &v33[16 * v35];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v46 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v46) {
          goto LABEL_132;
        }
        if (v69 < v57) {
          goto LABEL_92;
        }
LABEL_83:
        unint64_t v74 = v35 - 1;
        if (v35 - 1 >= v5)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        uint64_t v75 = *v3;
        if (!*v3) {
          goto LABEL_146;
        }
        uint64_t v76 = (unint64_t *)&v33[16 * v74];
        unint64_t v5 = *v76;
        uint64_t v77 = v33;
        unint64_t v78 = v35;
        uint64_t v79 = &v33[16 * v35];
        int64_t v80 = *((void *)v79 + 1);
        uint64_t v111 = (char *)(v75 + 40 * *(void *)v79);
        uint64_t v113 = (char *)(v75 + 40 * *v76);
        unint64_t v81 = v75 + 40 * v80;
        id v82 = v115;
        uint64_t v83 = v118;
        sub_24D330804(v113, v111, v81, __dst, v82);
        if (v83) {
          goto LABEL_116;
        }
        if (v80 < (uint64_t)v5) {
          goto LABEL_122;
        }
        if (v78 > *((void *)v13 + 2)) {
          goto LABEL_123;
        }
        *uint64_t v76 = v5;
        *(void *)&v77[16 * v74 + 8] = v80;
        unint64_t v84 = *((void *)v13 + 2);
        if (v78 >= v84) {
          goto LABEL_124;
        }
        uint64_t v33 = v77;
        uint64_t v118 = 0;
        unint64_t v5 = v84 - 1;
        memmove(v79, v79 + 16, 16 * (v84 - 1 - v78));
        *((void *)v13 + 2) = v84 - 1;
        uint64_t v12 = v108;
        uint64_t v3 = v109;
        if (v84 <= 2) {
          goto LABEL_92;
        }
      }
    }
    unint64_t v5 = 1;
LABEL_92:
    uint64_t v4 = v3[1];
    if (v12 >= v4)
    {
      uint64_t v11 = v106;
      if (v5 < 2)
      {
LABEL_118:
        swift_bridgeObjectRelease();
        *(void *)(v11 + 16) = 0;
        unint64_t v5 = (unint64_t)v115;

        swift_bridgeObjectRelease();
LABEL_119:

        return;
      }
LABEL_105:
      uint64_t v92 = *v3;
      uint64_t v106 = v11;
      uint64_t v114 = *v3;
      while (1)
      {
        unint64_t v93 = v5 - 2;
        if (v5 < 2) {
          goto LABEL_136;
        }
        if (!v92) {
          goto LABEL_149;
        }
        uint64_t v94 = (uint64_t)v13;
        uint64_t v95 = *(void *)&v13[16 * v93 + 32];
        uint64_t v96 = *(void *)&v13[16 * v5 + 24];
        uint64_t v97 = *(void *)&v13[16 * v5 + 16];
        char v98 = (char *)(v92 + 40 * v95);
        uint64_t v99 = (char *)(v92 + 40 * v97);
        unint64_t v100 = v92 + 40 * v96;
        id v101 = v115;
        uint64_t v102 = v118;
        sub_24D330804(v98, v99, v100, __dst, v101);
        uint64_t v118 = v102;
        if (v102) {
          goto LABEL_116;
        }
        if (v96 < v95) {
          goto LABEL_137;
        }
        uint64_t v13 = (char *)v94;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_24D35BC18(v94);
        }
        if (v93 >= *((void *)v13 + 2)) {
          goto LABEL_138;
        }
        uint64_t v103 = &v13[16 * v93 + 32];
        *(void *)uint64_t v103 = v95;
        *((void *)v103 + 1) = v96;
        unint64_t v104 = *((void *)v13 + 2);
        if (v5 > v104) {
          goto LABEL_139;
        }
        memmove(&v13[16 * v5 + 16], &v13[16 * v5 + 32], 16 * (v104 - v5));
        *((void *)v13 + 2) = v104 - 1;
        unint64_t v5 = v104 - 1;
        BOOL v63 = v104 > 2;
        uint64_t v11 = v106;
        uint64_t v92 = v114;
        if (!v63) {
          goto LABEL_118;
        }
      }
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:

  __break(1u);
LABEL_147:

  __break(1u);
LABEL_148:

  __break(1u);
LABEL_149:

  __break(1u);
LABEL_150:

  sub_24D39D2A0();
  __break(1u);
}

void sub_24D33160C(void **a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_24D35C948(v3);
  }
  uint64_t v5 = v3[2];
  v7[0] = (uint64_t)(v3 + 4);
  v7[1] = v5;
  id v6 = v4;
  sub_24D330CC4(v7, v6);

  *a1 = v3;
}

uint64_t sub_24D3316A4(uint64_t a1, uint64_t *a2)
{
  return sub_24D32F7B4(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_24D3316AC(uint64_t a1, void (*a2)(void, char *))
{
  uint64_t v12 = MEMORY[0x263F8EE78];
  sub_24D39D260();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v8 = a1;
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = v8 + 32;
    do
    {
      sub_24D2B6CE8(v6, (uint64_t)v9);
      *(void *)&v10[0] = v5;
      sub_24D2B6F04(v9, (uint64_t)v10 + 8);
      v11[0] = v10[0];
      v11[1] = v10[1];
      _OWORD v11[2] = v10[2];
      a2(*(void *)&v10[0], (char *)v11 + 8);
      sub_24D2BBFB4((uint64_t)v11, &qword_2698621F8);
      sub_24D39D240();
      sub_24D39D270();
      sub_24D39D280();
      sub_24D39D250();
      v6 += 40;
      ++v5;
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_24D3317FC()
{
  unint64_t result = qword_2698613A0;
  if (!qword_2698613A0)
  {
    sub_24D39C8A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698613A0);
  }
  return result;
}

void destroy for FMPFSKLabelNodeStyle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for FMPFSKLabelNodeStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for FMPFSKLabelNodeStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

__n128 initializeWithTake for FMPFSKLabelNodeStyle(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMPFSKLabelNodeStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMPFSKLabelNodeStyle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPFSKLabelNodeStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPFSKLabelNodeStyle()
{
  return &type metadata for FMPFSKLabelNodeStyle;
}

double sub_24D331A94()
{
  id v0 = objc_msgSend(self, sel_whiteColor);
  qword_26986A418 = 0xD000000000000012;
  unk_26986A420 = 0x800000024D3A8560;
  qword_26986A428 = (uint64_t)v0;
  qword_26986A430 = 0x4046000000000000;
  *(void *)&double result = 2;
  xmmword_26986A438 = xmmword_24D3A3360;
  qword_26986A448 = 0;
  byte_26986A450 = 0;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingExperienceConfiguration()
{
  return &type metadata for FMFindingExperienceConfiguration;
}

unint64_t sub_24D331B18()
{
  unint64_t result = sub_24D312784(MEMORY[0x263F8EE78]);
  qword_26986A458 = result;
  return result;
}

uint64_t sub_24D331B40@<X0>(uint64_t a1@<X8>)
{
  long long v3 = self;
  id v4 = objc_msgSend(v3, sel_mainScreen);
  id v5 = (void *)sub_24D39CAC0();
  int v6 = MGGetSInt32Answer();

  id v7 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v7, sel_nativeScale);
  double v9 = v8;

  id v10 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v10, sel_bounds);
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;

  v41.origin.x = v12;
  v41.origin.y = v14;
  v41.size.width = v16;
  v41.size.height = v18;
  double Width = CGRectGetWidth(v41);
  id v20 = objc_msgSend(v3, sel_mainScreen);
  objc_msgSend(v20, sel_bounds);
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;

  v42.origin.x = v22;
  v42.origin.y = v24;
  v42.size.width = v26;
  v42.size.height = v28;
  double v29 = CGRectGetWidth(v42);
  uint64_t result = sub_24D2B6EA8(v1, (uint64_t)v39);
  _Q0 = 0uLL;
  float v32 = 0.0;
  double v33 = 0.0;
  if ((v40 | 0x2000000u) >> 25 == 3)
  {
    double v34 = 0.0;
  }
  else
  {
    double v34 = 0.0;
    switch(BYTE2(v40))
    {
      case 1:
        __asm { FMOV            V0.2D, #0.5; jumptable 000000024D331D58 case 1 }
        *(double *)&_Q0 = (32.0 / Width + (double)v6 * 1.252 / v9 / v29) * 0.5;
        double v33 = 0.5;
        float v32 = 0.5;
        goto LABEL_9;
      case 2:
        __asm { FMOV            V0.2D, #4.5; jumptable 000000024D331D58 case 2 }
        *(double *)&_Q0 = (double)v6 * 1.252 / v9 / v29;
        double v34 = 1.0;
        double v33 = INFINITY;
        float v32 = 0.8;
        break;
      case 3:
        __asm { FMOV            V0.2D, #4.5; jumptable 000000024D331D58 case 3 }
        *(double *)&_Q0 = (double)v6 * 1.252 / v9 / v29;
LABEL_9:
        double v34 = 1.0;
        break;
      case 4:
        break;
      default:
        *(double *)&_Q0 = 32.0 / Width;
        double v34 = 1.0;
        float v32 = 0.2;
        double v33 = 1.0;
        break;
    }
  }
  *(_OWORD *)a1 = _Q0;
  *(double *)(a1 + 16) = v34;
  *(float *)(a1 + 24) = v32;
  *(double *)(a1 + 32) = v33;
  return result;
}

uint64_t sub_24D331DD4(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269862230);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D3329E0();
  sub_24D39D5F0();
  v9[1] = a2;
  sub_24D2B7450(&qword_269862210);
  sub_24D332ADC(&qword_269862238, (void (*)(void))sub_24D332B64, (void (*)(void))sub_24D332BB8);
  sub_24D39D450();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24D331F68(void *a1)
{
  long long v3 = v1;
  uint64_t v5 = sub_24D2B7450(&qword_269862280);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  double v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D333434();
  sub_24D39D5F0();
  uint64_t v11 = *v3;
  HIBYTE(v10) = 0;
  sub_24D32A4E4();
  sub_24D39D450();
  if (!v2)
  {
    uint64_t v11 = v3[1];
    HIBYTE(v10) = 1;
    sub_24D39D450();
    uint64_t v11 = v3[2];
    HIBYTE(v10) = 2;
    sub_24D39D450();
    LOBYTE(v11) = 3;
    sub_24D39D430();
    LOBYTE(v11) = 4;
    sub_24D39D420();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24D332184()
{
  return 0x736574617473;
}

uint64_t sub_24D332198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736574617473 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24D39D4B0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24D332228(uint64_t a1)
{
  unint64_t v2 = sub_24D3329E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D332264(uint64_t a1)
{
  unint64_t v2 = sub_24D3329E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_24D3322A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_24D332824(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24D3322CC(void *a1)
{
  return sub_24D331DD4(a1, *v1);
}

uint64_t sub_24D3322E8(uint64_t *a1, uint64_t *a2)
{
  return sub_24D33250C(*a1, *a2);
}

uint64_t sub_24D3322F4()
{
  uint64_t result = 0x7463614665646F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74636146676E6972;
      break;
    case 2:
      uint64_t result = 0x6361704F676E6972;
      break;
    case 3:
      uint64_t result = 0x6F46636974706168;
      break;
    case 4:
      uint64_t result = 0x72655065736C7570;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D3323B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D332F2C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24D3323E0(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24D3323EC(uint64_t a1)
{
  unint64_t v2 = sub_24D333434();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D332428(uint64_t a1)
{
  unint64_t v2 = sub_24D333434();
  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_24D332464@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24D3331AC(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_24D3324AC(void *a1)
{
  return sub_24D331F68(a1);
}

BOOL sub_24D3324C4(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(double *)(a1 + 16) == *(double *)(a2 + 16)
      && *(float *)(a1 + 24) == *(float *)(a2 + 24)
      && *(double *)(a1 + 32) == *(double *)(a2 + 32);
}

uint64_t sub_24D33250C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) == *(void *)(a2 + 16))
  {
    int64_t v2 = 0;
    uint64_t v36 = result + 64;
    uint64_t v3 = 1 << *(unsigned char *)(result + 32);
    uint64_t v4 = -1;
    if (v3 < 64) {
      uint64_t v4 = ~(-1 << v3);
    }
    unint64_t v5 = v4 & *(void *)(result + 64);
    int64_t v37 = (unint64_t)(v3 + 63) >> 6;
    uint64_t v38 = result;
    if (!v5) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v40 = (v5 - 1) & v5;
    int64_t v41 = v2;
    for (unint64_t i = __clz(__rbit64(v5)) | (v2 << 6); ; unint64_t i = __clz(__rbit64(v8)) + (v9 << 6))
    {
      uint64_t v11 = *(void *)(result + 48) + 104 * i;
      uint64_t v13 = *(void *)(v11 + 8);
      CGFloat v14 = *(void **)(v11 + 16);
      double v15 = *(void **)(v11 + 24);
      uint64_t v16 = *(void *)(v11 + 32);
      uint64_t v17 = *(void *)(v11 + 40);
      uint64_t v43 = *(void *)(v11 + 48);
      uint64_t v44 = *(void *)(v11 + 56);
      uint64_t v18 = *(void *)(v11 + 64);
      uint64_t v19 = *(void *)(v11 + 72);
      uint64_t v20 = *(void *)(v11 + 80);
      uint64_t v21 = *(void *)(v11 + 88);
      char v22 = *(unsigned char *)(v11 + 100);
      int v42 = *(_DWORD *)(v11 + 96);
      uint64_t v23 = *(void *)(result + 56) + 40 * i;
      uint64_t v24 = *(void *)(v23 + 16);
      int v25 = *(_DWORD *)(v23 + 24);
      uint64_t v26 = *(void *)(v23 + 32);
      long long v27 = *(_OWORD *)v23;
      v45[0] = *(void *)v11;
      uint64_t v12 = v45[0];
      v45[1] = v13;
      v45[2] = v14;
      v45[3] = v15;
      v45[4] = v16;
      v45[5] = v17;
      v45[6] = v43;
      v45[7] = v44;
      v45[8] = v18;
      v45[9] = v19;
      v45[10] = v20;
      v45[11] = v21;
      char v47 = v22;
      int v46 = v42;
      long long v48 = v27;
      uint64_t v49 = v24;
      int v50 = v25;
      uint64_t v51 = v26;
      nullsub_1(v45);
      sub_24D332C0C((uint64_t)v45, (uint64_t)v52);
      sub_24D2B6EA8((uint64_t)v52, (uint64_t)v58);
      double v29 = v53;
      double v28 = v54;
      double v30 = v55;
      float v31 = v56;
      double v32 = v57;
      sub_24D2B6F48(v12, v13, v14, v15, v16, v17, v43, v44, v18, v19, v20, v21, v42);
      unint64_t v33 = sub_24D383754((uint64_t)v58);
      LOBYTE(v13) = v34;
      sub_24D332C74((uint64_t)v58);
      if ((v13 & 1) == 0) {
        return 0;
      }
      uint64_t v35 = *(void *)(a2 + 56) + 40 * v33;
      if (*(double *)v35 != v29
        || *(double *)(v35 + 8) != v28
        || *(double *)(v35 + 16) != v30
        || *(float *)(v35 + 24) != v31
        || *(double *)(v35 + 32) != v32)
      {
        return 0;
      }
      double result = v38;
      unint64_t v5 = v40;
      int64_t v2 = v41;
      if (v40) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v7 = v2 + 1;
      if (__OFADD__(v2, 1)) {
        break;
      }
      if (v7 >= v37) {
        return 1;
      }
      unint64_t v8 = *(void *)(v36 + 8 * v7);
      int64_t v9 = v2 + 1;
      if (!v8)
      {
        int64_t v9 = v2 + 2;
        if (v2 + 2 >= v37) {
          return 1;
        }
        unint64_t v8 = *(void *)(v36 + 8 * v9);
        if (!v8)
        {
          int64_t v9 = v2 + 3;
          if (v2 + 3 >= v37) {
            return 1;
          }
          unint64_t v8 = *(void *)(v36 + 8 * v9);
          if (!v8)
          {
            int64_t v9 = v2 + 4;
            if (v2 + 4 >= v37) {
              return 1;
            }
            unint64_t v8 = *(void *)(v36 + 8 * v9);
            if (!v8)
            {
              uint64_t v10 = v2 + 5;
              if (v2 + 5 >= v37) {
                return 1;
              }
              unint64_t v8 = *(void *)(v36 + 8 * v10);
              if (!v8)
              {
                while (1)
                {
                  int64_t v9 = v10 + 1;
                  if (__OFADD__(v10, 1)) {
                    goto LABEL_34;
                  }
                  if (v9 >= v37) {
                    return 1;
                  }
                  unint64_t v8 = *(void *)(v36 + 8 * v9);
                  ++v10;
                  if (v8) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v9 = v2 + 5;
            }
          }
        }
      }
LABEL_22:
      uint64_t v40 = (v8 - 1) & v8;
      int64_t v41 = v9;
    }
    __break(1u);
LABEL_34:
    __break(1u);
    return result;
  }
  return 0;
}

void *sub_24D332824(void *a1)
{
  uint64_t v3 = sub_24D2B7450(&qword_269862200);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = sub_24D2B8A34(a1, a1[3]);
  sub_24D3329E0();
  sub_24D39D5E0();
  if (v1)
  {
    sub_24D2B6E58((uint64_t)a1);
  }
  else
  {
    sub_24D2B7450(&qword_269862210);
    sub_24D332ADC(&qword_269862218, (void (*)(void))sub_24D332A34, (void (*)(void))sub_24D332A88);
    sub_24D39D3C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    int64_t v7 = (void *)v9[1];
    sub_24D2B6E58((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_24D3329E0()
{
  unint64_t result = qword_269862208;
  if (!qword_269862208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862208);
  }
  return result;
}

unint64_t sub_24D332A34()
{
  unint64_t result = qword_269862220;
  if (!qword_269862220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862220);
  }
  return result;
}

unint64_t sub_24D332A88()
{
  unint64_t result = qword_269862228;
  if (!qword_269862228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862228);
  }
  return result;
}

uint64_t sub_24D332ADC(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24D2C067C(&qword_269862210);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24D332B64()
{
  unint64_t result = qword_269862240;
  if (!qword_269862240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862240);
  }
  return result;
}

unint64_t sub_24D332BB8()
{
  unint64_t result = qword_269862248;
  if (!qword_269862248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862248);
  }
  return result;
}

uint64_t sub_24D332C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269862250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D332C74(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FMFindingExperienceConfiguration.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24D332D74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingExperienceConfiguration.CodingKeys()
{
  return &type metadata for FMFindingExperienceConfiguration.CodingKeys;
}

__n128 initializeWithCopy for FMFindingExperienceStateConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FMFindingExperienceStateConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FMFindingExperienceStateConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FMFindingExperienceStateConfiguration()
{
  return &type metadata for FMFindingExperienceStateConfiguration;
}

unint64_t sub_24D332E28()
{
  unint64_t result = qword_269862258;
  if (!qword_269862258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862258);
  }
  return result;
}

unint64_t sub_24D332E80()
{
  unint64_t result = qword_269862260;
  if (!qword_269862260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862260);
  }
  return result;
}

unint64_t sub_24D332ED8()
{
  unint64_t result = qword_269862268;
  if (!qword_269862268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862268);
  }
  return result;
}

uint64_t sub_24D332F2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463614665646F6ELL && a2 == 0xEA0000000000726FLL;
  if (v2 || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74636146676E6972 && a2 == 0xEA0000000000726FLL || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6361704F676E6972 && a2 == 0xEB00000000797469 || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F46636974706168 && a2 == 0xEB00000000656372 || (sub_24D39D4B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72655065736C7570 && a2 == 0xEB00000000646F69)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24D39D4B0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24D3331AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24D2B7450(&qword_269862270);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D2B8A34(a1, a1[3]);
  sub_24D333434();
  sub_24D39D5E0();
  if (v2) {
    return sub_24D2B6E58((uint64_t)a1);
  }
  HIBYTE(v17) = 0;
  sub_24D32A374();
  sub_24D39D3C0();
  uint64_t v9 = v18;
  HIBYTE(v17) = 1;
  sub_24D39D3C0();
  uint64_t v10 = v18;
  HIBYTE(v17) = 2;
  sub_24D39D3C0();
  uint64_t v11 = v18;
  LOBYTE(v18) = 3;
  sub_24D39D3A0();
  int v13 = v12;
  LOBYTE(v18) = 4;
  sub_24D39D390();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_24D2B6E58((uint64_t)a1);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v11;
  *(_DWORD *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = v15;
  return result;
}

unint64_t sub_24D333434()
{
  unint64_t result = qword_269862278;
  if (!qword_269862278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862278);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FMFindingExperienceStateConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D333554);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FMFindingExperienceStateConfiguration.CodingKeys()
{
  return &type metadata for FMFindingExperienceStateConfiguration.CodingKeys;
}

unint64_t sub_24D333590()
{
  unint64_t result = qword_269862288;
  if (!qword_269862288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862288);
  }
  return result;
}

unint64_t sub_24D3335E8()
{
  unint64_t result = qword_269862290;
  if (!qword_269862290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862290);
  }
  return result;
}

unint64_t sub_24D333640()
{
  unint64_t result = qword_269862298;
  if (!qword_269862298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862298);
  }
  return result;
}

uint64_t sub_24D333694(uint64_t a1)
{
  uint64_t v16 = sub_24D39C8A0();
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (v6)
  {
    uint64_t v15 = v1;
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_24D383654(0, v6, 0);
    uint64_t v7 = v17;
    unint64_t v8 = (void *)(a1 + 32);
    do
    {
      uint64_t v10 = v8[3];
      uint64_t v9 = v8[4];
      sub_24D2B8A34(v8, v10);
      (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v10, v9);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24D383654(0, *(void *)(v7 + 16) + 1, 1);
        uint64_t v7 = v17;
      }
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_24D383654(v12 > 1, v13 + 1, 1);
        uint64_t v7 = v17;
      }
      *(void *)(v7 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v13, v5, v16);
      uint64_t v17 = v7;
      v8 += 5;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_24D333874(uint64_t a1)
{
  return sub_24D333888(a1, (unint64_t *)&qword_2698616A0);
}

uint64_t sub_24D333888(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = sub_24D39D110();
    uint64_t v7 = v6;
    uint64_t v8 = sub_24D39D180();
    char v10 = MEMORY[0x253325160](v5, v7, v8, v9);
    swift_bridgeObjectRelease();
    if (v10)
    {
LABEL_3:
      sub_24D3449AC(v5, v7, v4 != 0);
      return 0;
    }
LABEL_7:
    sub_24D342E64(v5, v7, v4 != 0, a1, a2);
    uint64_t v11 = v15;
    sub_24D3449AC(v5, v7, v4 != 0);
    return v11;
  }
  uint64_t result = sub_24D3430D4(a1);
  if ((v14 & 1) == 0)
  {
    uint64_t v7 = v13;
    if (*(_DWORD *)(a1 + 36) == v13)
    {
      uint64_t v5 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24D3339C0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMFindingViewState();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = *(void *)((char *)v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration);
  *(void *)((char *)v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration) = a1;
  uint64_t v10 = swift_bridgeObjectRetain();
  char v11 = sub_24D33250C(v10, v9);
  swift_bridgeObjectRelease();
  if (v11)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    sub_24D34518C(v13, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    sub_24D34518C(v13, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    (*(void (**)(char *, char *))((*MEMORY[0x263F8EED0] & *v1) + 0x4B0))(v8, v6);
    sub_24D34512C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    sub_24D34512C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24D333B7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration);
  uint64_t v4 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for FMFindingViewState();
  sub_24D2B6EA8(v4 + *(int *)(v5 + 32), (uint64_t)v22);
  uint64_t v6 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_24D2B7278((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
  if (v6 && (unint64_t v7 = sub_24D383754((uint64_t)v22), (v8 & 1) != 0))
  {
    uint64_t v9 = (unsigned char *)(*(void *)(v3 + 56) + 40 * v7);
    uint64_t v10 = *((void *)v9 + 1);
    uint64_t v11 = *((void *)v9 + 2);
    int v12 = *((_DWORD *)v9 + 6);
    uint64_t v13 = (uint64_t *)(v9 + 32);
  }
  else
  {
    uint64_t v9 = v17;
    sub_24D331B40((uint64_t)v17);
    uint64_t v10 = v18;
    uint64_t v11 = v19;
    uint64_t v13 = &v21;
    int v12 = v20;
  }
  uint64_t v14 = *(void *)v9;
  uint64_t v15 = *v13;
  swift_bridgeObjectRelease();
  uint64_t result = sub_24D2B7278((uint64_t)v22, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
  *(void *)a1 = v14;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v11;
  *(_DWORD *)(a1 + 24) = v12;
  *(void *)(a1 + 32) = v15;
  return result;
}

uint64_t sub_24D333CC0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FMFindingViewState();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (unsigned __int16 *)&v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  char v8 = (unsigned __int16 *)&v12[-v7];
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  sub_24D34518C(v9, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  swift_beginAccess();
  sub_24D345540(a1, v9);
  swift_endAccess();
  sub_24D34518C(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  BOOL v10 = sub_24D396C54(v6, v8);
  sub_24D34512C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  if (!v10)
  {
    sub_24D34518C(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    (*(void (**)(unsigned __int16 *, unsigned __int16 *))((*MEMORY[0x263F8EED0] & *v1) + 0x4B0))(v8, v6);
    sub_24D34512C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  }
  sub_24D34512C(a1, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  return sub_24D34512C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
}

uint64_t FMFindingViewController.__allocating_init(session:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return FMFindingViewController.init(session:)(a1);
}

uint64_t FMFindingViewController.init(session:)(uint64_t a1)
{
  uint64_t v70 = type metadata accessor for FMFindingSessionState();
  uint64_t v3 = MEMORY[0x270FA5388](v70);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v68 - v6;
  uint64_t v8 = type metadata accessor for FMFindingViewState();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v69 = (_WORD *)((char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isInternalBuild;
  uint64_t v11 = self;
  int v12 = v1;
  id v13 = objc_msgSend(v11, sel_sharedInstance);
  unsigned __int8 v14 = objc_msgSend(v13, sel_isInternalBuild);

  *((unsigned char *)v1 + v10) = v14;
  uint64_t v15 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  if (qword_269860338 != -1) {
    swift_once();
  }
  v78[8] = xmmword_26986A340;
  v78[9] = unk_26986A350;
  v78[10] = xmmword_26986A360;
  uint64_t v79 = qword_26986A370;
  v78[4] = xmmword_26986A300;
  v78[5] = unk_26986A310;
  v78[6] = xmmword_26986A320;
  v78[7] = unk_26986A330;
  v78[0] = xmmword_26986A2C0;
  v78[1] = *(_OWORD *)&qword_26986A2D0;
  _OWORD v78[2] = xmmword_26986A2E0;
  v78[3] = unk_26986A2F0;
  memmove(v15, &xmmword_26986A2C0, 0xB8uLL);
  uint64_t v16 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_sleepPreventer;
  sub_24D3348AC((uint64_t)v78);
  type metadata accessor for FMFindingSleepPreventer();
  *(void *)&v12[v16] = swift_initStaticObject();
  uint64_t v17 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_snapshotContainer;
  *(void *)&v12[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  uint64_t v18 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_reducedMotion;
  v12[v18] = UIAccessibilityIsReduceMotionEnabled();
  uint64_t v19 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel;
  *(void *)&v12[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v20 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel;
  *(void *)&v12[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v21 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerView];
  *uint64_t v21 = 0;
  v21[1] = 0;
  uint64_t v22 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer;
  *(void *)&v12[v22] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v23 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView;
  *(void *)&v12[v23] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v24 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel;
  *(void *)&v12[v24] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v25 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel;
  *(void *)&v12[v25] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v26 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton;
  long long v27 = (objc_class *)type metadata accessor for FMR1GlyphButton();
  id v28 = objc_allocWithZone(v27);
  *(void *)&v12[v26] = sub_24D397C88(0, 0, 0, 0);
  uint64_t v29 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
  *(void *)&v12[v29] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMR1HapticsController()), sel_init);
  uint64_t v30 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton;
  id v31 = objc_allocWithZone(v27);
  *(void *)&v12[v30] = sub_24D397C88(0, 0, 0, 0);
  *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_showTorchButtonWorkItem] = 0;
  uint64_t v32 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton;
  id v33 = objc_allocWithZone(v27);
  *(void *)&v12[v32] = sub_24D397C88(0, 0, 0, 0);
  uint64_t v34 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView;
  id v35 = objc_allocWithZone((Class)type metadata accessor for FMR1DistanceView());
  v77[0] = 1;
  *(void *)&v12[v34] = sub_24D362FC8(0, 1, 0x100000000uLL);
  uint64_t v36 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerVideoInfo];
  *((void *)v36 + 14) = 0;
  *((_OWORD *)v36 + 5) = 0u;
  *((_OWORD *)v36 + 6) = 0u;
  *((_OWORD *)v36 + 3) = 0u;
  *((_OWORD *)v36 + 4) = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  *((_OWORD *)v36 + 2) = 0u;
  *(_OWORD *)uint64_t v36 = 0u;
  *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundItemWorkItem] = 0;
  int64_t v37 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_lastTimeFoundItemVideo];
  *((void *)v37 + 1) = 0;
  *((void *)v37 + 2) = 0;
  *(void *)int64_t v37 = 0;
  v37[24] = 1;
  *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_autoStopPlayingVideoWorkItem] = 0;
  uint64_t v38 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView;
  *(void *)&v12[v38] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMBTDistanceView()), sel_init);
  *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pulseTimer] = 0;
  uint64_t v39 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView;
  *(void *)&v12[v39] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMIncorrectOrientationView()), sel_init);
  v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_inBand] = 0;
  *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_insufficientFeaturesARTrackingErrorCount] = 0;
  *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_updateTorchPeriodicCount] = 0;
  v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_gotFirstARFrame] = 0;
  v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertIsShown] = 0;
  *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertCount] = 0;
  uint64_t v40 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration;
  if (qword_269860358 != -1) {
    swift_once();
  }
  *(void *)&v12[v40] = qword_26986A458;
  *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_FMR1MaxErrorAlertCount] = 3;
  v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying] = 2;
  int64_t v41 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler];
  *int64_t v41 = 0;
  v41[1] = 0;
  int v42 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler];
  *int v42 = 0;
  v42[1] = 0;
  uint64_t v43 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler];
  *uint64_t v43 = 0;
  v43[1] = 0;
  uint64_t v44 = &v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler];
  *uint64_t v44 = 0;
  v44[1] = 0;
  uint64_t v45 = OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology;
  LOWORD(v44) = *(_WORD *)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  int v46 = (__int16)v44;
  char v47 = (v44 & 1) == 0;
  if (v46 >= 0) {
    char v47 = 2;
  }
  uint64_t v48 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType;
  v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType] = v47;
  *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session] = a1;
  uint64_t v49 = a1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_24D34518C(v49, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
  swift_bridgeObjectRetain();
  swift_retain();
  int v50 = v69;
  sub_24D394358((uint64_t)v7, 10, v69);
  sub_24D345850((uint64_t)v50, (uint64_t)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state], (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  sub_24D34518C(v49, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
  type metadata accessor for FMFindingStateTransitionCoordinator();
  swift_allocObject();
  *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_stateTransitionCoordinator] = sub_24D376220((uint64_t)v7);
  sub_24D34518C(v49, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
  uint64_t v51 = *((void *)v5 + 1);
  if (*(void *)(v51 + 16) && (unint64_t v52 = sub_24D3839F0((uint64_t)&v5[*(int *)(v70 + 36)]), (v53 & 1) != 0))
  {
    sub_24D2B6CE8(*(void *)(v51 + 56) + 40 * v52, (uint64_t)v75);
    sub_24D2B6F04(v75, (uint64_t)v76);
    sub_24D34512C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
    double v54 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_arSession);
    unsigned __int8 v73 = v12[v48];
    v72[0] = *(_WORD *)(a1 + v45);
    sub_24D342124((uint64_t)v74);
    sub_24D342150((uint64_t)v74, (uint64_t)v77);
    objc_allocWithZone((Class)type metadata accessor for FMPFView());
    id v55 = v54;
    *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView] = sub_24D361BC4(&v73, v72, (uint64_t)v77, v54);
    sub_24D2B6CE8((uint64_t)v76, (uint64_t)v72);
    unsigned __int8 v73 = v12[v48];
    id v56 = objc_allocWithZone((Class)type metadata accessor for FMR1InstructionsController());
    double v57 = sub_24D36B604((uint64_t)v72, (char *)&v73);
    char v58 = 0;
    *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController] = v57;
    if (v12[v48] != 2)
    {
      id v59 = objc_allocWithZone((Class)type metadata accessor for FMAVPlayerView());
      char v58 = sub_24D315C14(0, 0.5);
    }
    *(void *)&v12[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerView] = v58;

    uint64_t v60 = (objc_class *)type metadata accessor for FMFindingViewController();
    v71.receiver = v12;
    v71.super_class = v60;
    uint64_t v61 = (char *)objc_msgSendSuper2(&v71, sel_initWithNibName_bundle_, 0, 0);
    uint64_t v62 = *(void *)&v61[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_stateTransitionCoordinator];
    *(void *)(*(void *)&v61[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
              + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_delegate
              + 8) = &off_26FF8B380;
    swift_unknownObjectWeakAssign();
    *(void *)(*(void *)&v61[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView]
              + OBJC_IVAR____TtC11FMFindingUI8FMPFView_fmpfdelegate
              + 8) = &off_26FF865B0;
    swift_unknownObjectWeakAssign();
    *(void *)(v62 + OBJC_IVAR____TtC11FMFindingUI35FMFindingStateTransitionCoordinator_delegate + 8) = &off_26FF88FA8;
    swift_unknownObjectWeakAssign();
    *(void *)(*(void *)&v61[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController]
              + OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_delegate
              + 8) = &off_26FF8B838;
    swift_unknownObjectWeakAssign();
    BOOL v63 = self;
    uint64_t v64 = v61;
    id v65 = objc_msgSend(v63, sel_defaultCenter);
    objc_msgSend(v65, sel_addObserver_selector_name_object_, v64, sel_applicationDidEnterBackground, *MEMORY[0x263F83330], 0);

    id v66 = objc_msgSend(v63, sel_defaultCenter);
    objc_msgSend(v66, sel_addObserver_selector_name_object_, v64, sel_applicationWillEnterForeground, *MEMORY[0x263F833B8], 0);

    swift_release();
    sub_24D2B6E58((uint64_t)v76);
    return (uint64_t)v64;
  }
  else
  {
    uint64_t result = sub_24D39D2B0();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D3348AC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  id v5 = *(id *)a1;
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  return a1;
}

id FMFindingViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FMFindingViewController.__deallocating_deinit()
{
  uint64_t v1 = v0;
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24D39C950();
  sub_24D2B508C(v2, (uint64_t)qword_269869FD0);
  id v3 = sub_24D39C930();
  os_log_type_t v4 = sub_24D39CDF0();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl(&dword_24D2B1000, v3, v4, "FMFindingViewController deinit", v5, 2u);
    MEMORY[0x253326010](v5, -1, -1);
  }

  id v6 = (char *)*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView];
  sub_24D361008();
  uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene;
  id v8 = *(void **)&v6[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v8)
  {
    uint64_t v9 = *(void **)&v6[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skSceneView];
    id v10 = v8;
    sub_24D349538(v9, 0);
  }
  uint64_t v11 = *(void **)&v6[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ringView];
  if (v11) {
    objc_msgSend(v11, sel_removeFromSuperview);
  }
  int v12 = *(void **)&v6[v7];
  *(void *)&v6[v7] = 0;

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for FMFindingViewController();
  return objc_msgSendSuper2(&v14, sel_dealloc);
}

void sub_24D334E1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24D39C990();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24D39C9D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
  uint64_t v11 = (uint64_t *)(*(void *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController]
                  + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
  uint64_t v12 = *v11;
  *uint64_t v11 = 0;
  v11[1] = 0;
  sub_24D2E44C8(v12);
  id v13 = *(id *)&v0[v10];
  sub_24D3044F0();

  id v14 = *(id *)&v1[v10];
  sub_24D2FD03C();

  int v15 = *(__int16 *)(*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
                   + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  if (v15 < 0)
  {
    if ((v15 & 0x7E00) == 0x200) {
      return;
    }
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v16 = (void *)sub_24D39CE90();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v1;
    uint64_t v26 = sub_24D3454E4;
    uint64_t v27 = v19;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v23 = 1107296256;
    uint64_t v18 = &unk_26FF89428;
  }
  else
  {
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v16 = (void *)sub_24D39CE90();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v1;
    uint64_t v26 = sub_24D3454A4;
    uint64_t v27 = v17;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v23 = 1107296256;
    uint64_t v18 = &unk_26FF893D8;
  }
  uint64_t v24 = sub_24D32194C;
  uint64_t v25 = v18;
  uint64_t v20 = _Block_copy(&aBlock);
  uint64_t v21 = v1;
  swift_release();
  sub_24D39C9B0();
  uint64_t aBlock = MEMORY[0x263F8EE78];
  sub_24D344A38((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
  sub_24D2B7450((uint64_t *)&unk_2698610D0);
  sub_24D2C8438();
  sub_24D39D0E0();
  MEMORY[0x253324EE0](0, v9, v5, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24D335234()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
  sub_24D2FB96C();

  uint64_t v4 = *(void *)(v1 + v2);
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = (void (**)(uint64_t, uint64_t))(v4
                                              + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
  uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
  *uint64_t v6 = sub_24D345488;
  v6[1] = (void (*)(uint64_t, uint64_t))v5;
  return sub_24D2E44C8(v7);
}

void sub_24D335320()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for FMFindingViewController();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  sub_24D33681C();
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v2 = v1;
  objc_msgSend(v1, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer]);

  sub_24D337800();
  unsigned int v3 = v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType];
  if (v3 < 2)
  {
    sub_24D337AA0();
    sub_24D38EC1C();
    goto LABEL_7;
  }
  if (v3 == 2)
  {
    id v4 = objc_msgSend(v0, sel_view);
    if (v4)
    {
      uint64_t v5 = v4;
      objc_msgSend(v4, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView]);

      goto LABEL_7;
    }
LABEL_11:
    __break(1u);
    return;
  }
LABEL_7:
  sub_24D337CBC();
  if (v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_reducedMotion] == 1) {
    sub_24D339954();
  }
}

uint64_t sub_24D335470(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24D39C990();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24D39C9D0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (objc_class *)type metadata accessor for FMFindingViewController();
  v19.receiver = v2;
  v19.super_class = v12;
  objc_msgSendSuper2(&v19, sel_viewWillAppear_, a1 & 1);
  sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
  id v13 = (void *)sub_24D39CE90();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v2;
  aBlock[4] = sub_24D344324;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_24D32194C;
  aBlock[3] = &unk_26FF88EE0;
  int v15 = _Block_copy(aBlock);
  id v16 = v2;
  swift_release();
  sub_24D39C9B0();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_24D344A38((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
  sub_24D2B7450((uint64_t *)&unk_2698610D0);
  sub_24D2C8438();
  sub_24D39D0E0();
  MEMORY[0x253324EE0](0, v11, v7, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id sub_24D335750(void *a1)
{
  uint64_t v2 = type metadata accessor for FMFindingViewState();
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v28[-v6];
  id result = objc_msgSend(a1, sel_view);
  if (result)
  {
    uint64_t v9 = result;
    objc_msgSend(result, sel_layoutSubviews);

    id v10 = *(id *)((char *)a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
    sub_24D3619E0();

    uint64_t v11 = *(void *)((char *)a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session);
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_24D39C950();
    sub_24D2B508C(v12, (uint64_t)qword_269869FD0);
    id v13 = sub_24D39C930();
    os_log_type_t v14 = sub_24D39CDF0();
    if (os_log_type_enabled(v13, v14))
    {
      int v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v15 = 0;
      _os_log_impl(&dword_24D2B1000, v13, v14, "ðŸ§­ FMFindingSession: Starting new session", v15, 2u);
      MEMORY[0x253326010](v15, -1, -1);
    }

    uint64_t v16 = *(void *)(v11 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer + 24);
    uint64_t v17 = *(void *)(v11 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer + 32);
    sub_24D2B8A34((void *)(v11 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer), v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 56))(v16, v17);
    uint64_t v18 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
    id v19 = *(id *)((char *)a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
    sub_24D2FB96C();

    uint64_t v20 = *(void *)((char *)a1 + v18);
    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v22 = (void (**)(uint64_t, uint64_t))(v20
                                                 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
    uint64_t v23 = *(void *)(v20 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
    *uint64_t v22 = sub_24D345488;
    v22[1] = (void (*)(uint64_t, uint64_t))v21;
    sub_24D2E44C8(v23);
    uint64_t v24 = (uint64_t)a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    sub_24D34518C(v24, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    sub_24D34518C(v24, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    (*(void (**)(unsigned char *, unsigned char *))((*MEMORY[0x263F8EED0] & *a1) + 0x4B0))(v7, v5);
    sub_24D34512C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    sub_24D34512C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    sub_24D30EC70();
    uint64_t v25 = (void (**)(uint64_t))((char *)a1
                                        + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler);
    id result = (id)swift_beginAccess();
    uint64_t v26 = *v25;
    if (*v25)
    {
      uint64_t v27 = swift_retain();
      v26(v27);
      return (id)sub_24D2E44C8((uint64_t)v26);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24D335AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x253326120](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_24D33F7E8(a1, a2);
  }
}

void sub_24D335B88(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for FMFindingViewController();
  objc_msgSendSuper2(&v7, sel_viewDidAppear_, a1 & 1);
  uint64_t v3 = *(char **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView];
  uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v4)
  {
    uint64_t v5 = v3;
    id v6 = v4;
    sub_24D349A48(0, 1.0);
  }
}

id sub_24D335CC0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler];
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t))v4;
  if (*(void *)v4)
  {
    uint64_t v6 = swift_retain();
    v5(v6);
    sub_24D2E44C8((uint64_t)v5);
  }
  uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
  uint64_t v8 = (uint64_t *)(*(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController]
                 + OBJC_IVAR____TtC11FMFindingUI21FMR1HapticsController_playedHapticPatternHandler);
  uint64_t v9 = *v8;
  *uint64_t v8 = 0;
  v8[1] = 0;
  sub_24D2E44C8(v9);
  id v10 = *(id *)&v2[v7];
  sub_24D3044F0();

  id v11 = *(id *)&v2[v7];
  sub_24D2FD03C();

  uint64_t v12 = (char *)*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView];
  sub_24D361008();
  uint64_t v13 = OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene;
  os_log_type_t v14 = *(void **)&v12[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v14)
  {
    int v15 = *(void **)&v12[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skSceneView];
    id v16 = v14;
    sub_24D349538(v15, 0);
  }
  uint64_t v17 = *(void **)&v12[OBJC_IVAR____TtC11FMFindingUI8FMPFView_ringView];
  if (v17) {
    objc_msgSend(v17, sel_removeFromSuperview);
  }
  uint64_t v18 = *(void **)&v12[v13];
  *(void *)&v12[v13] = 0;

  uint64_t v19 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session];
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_24D39C950();
  sub_24D2B508C(v20, (uint64_t)qword_269869FD0);
  uint64_t v21 = sub_24D39C930();
  os_log_type_t v22 = sub_24D39CDF0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_24D2B1000, v21, v22, "ðŸ§­ FMFindingSession: Stopping finding session", v23, 2u);
    MEMORY[0x253326010](v23, -1, -1);
  }

  uint64_t v24 = *(void *)(v19 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer + 24);
  uint64_t v25 = *(void *)(v19 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer + 32);
  sub_24D2B8A34((void *)(v19 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingLocalizer), v24);
  (*(void (**)(uint64_t, uint64_t))(v25 + 64))(v24, v25);
  uint64_t v26 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pulseTimer;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pulseTimer], sel_invalidate);
  uint64_t v27 = *(void **)&v2[v26];
  *(void *)&v2[v26] = 0;

  sub_24D308474(0, 1);
  v29.receiver = v2;
  v29.super_class = (Class)type metadata accessor for FMFindingViewController();
  return objc_msgSendSuper2(&v29, sel_viewWillDisappear_, a1 & 1);
}

uint64_t sub_24D336048()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  id v1 = objc_msgSend(v0, sel_userInterfaceIdiom);

  if (v1) {
    return 2;
  }
  else {
    return 26;
  }
}

void sub_24D3360AC(void *a1, double a2, double a3)
{
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_24D39C950();
  sub_24D2B508C(v7, (uint64_t)qword_269869FD0);
  uint64_t v8 = v3;
  uint64_t v9 = sub_24D39C930();
  os_log_type_t v10 = sub_24D39CDF0();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = a1;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t aBlock = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    id v14 = objc_msgSend(self, sel_sharedApplication);
    id v15 = objc_msgSend(v14, sel_connectedScenes);

    sub_24D2BC100(0, &qword_2698623D8);
    sub_24D344344();
    uint64_t v16 = sub_24D39CD20();

    uint64_t v17 = (void *)sub_24D333888(v16, &qword_2698623D8);
    swift_bridgeObjectRelease();
    if (v17)
    {
      self;
      uint64_t v18 = (void *)swift_dynamicCastObjCClass();
      if (v18) {
        objc_msgSend(v18, sel_interfaceOrientation);
      }
      a1 = v11;
    }
    else
    {
      a1 = v11;
    }
    type metadata accessor for UIInterfaceOrientation(0);
    uint64_t v19 = sub_24D39CB20();
    sub_24D2B8328(v19, v20, &aBlock);
    sub_24D39D070();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D2B1000, v9, v10, "FMFindingViewController: Interface orientation changed to: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253326010](v13, -1, -1);
    MEMORY[0x253326010](v12, -1, -1);
  }
  else
  {
  }
  id v21 = objc_msgSend(self, sel_sharedApplication);
  id v22 = objc_msgSend(v21, sel_connectedScenes);

  sub_24D2BC100(0, &qword_2698623D8);
  sub_24D344344();
  uint64_t v23 = sub_24D39CD20();

  uint64_t v24 = (void *)sub_24D333888(v23, &qword_2698623D8);
  swift_bridgeObjectRelease();
  if (v24)
  {
    self;
    uint64_t v25 = (void *)swift_dynamicCastObjCClass();
    if (v25) {
      id v26 = objc_msgSend(v25, sel_interfaceOrientation);
    }
    else {
      id v26 = 0;
    }
  }
  else
  {
    id v26 = 0;
  }
  uint64_t v27 = (objc_class *)type metadata accessor for FMFindingViewController();
  v41.receiver = v8;
  v41.super_class = v27;
  objc_msgSendSuper2(&v41, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  if ((~objc_msgSend(v8, sel_supportedInterfaceOrientations) & 0x18) != 0)
  {
    BOOL v28 = v26 == (id)1;
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView], sel_setHidden_, 0);
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView], sel_setHidden_, 0);
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer], sel_setHidden_, 0);
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView], sel_setHidden_, 0);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v8;
    *(unsigned char *)(v29 + 24) = v26 == (id)1;
    uint64_t v39 = sub_24D3443AC;
    uint64_t v40 = v29;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v36 = 1107296256;
    int64_t v37 = sub_24D3072D0;
    uint64_t v38 = &unk_26FF88F30;
    uint64_t v30 = _Block_copy(&aBlock);
    id v31 = v8;
    swift_release();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v31;
    *(unsigned char *)(v32 + 24) = v28;
    uint64_t v39 = sub_24D3443B8;
    uint64_t v40 = v32;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v36 = 1107296256;
    int64_t v37 = sub_24D3072D0;
    uint64_t v38 = &unk_26FF88F80;
    id v33 = _Block_copy(&aBlock);
    uint64_t v34 = v31;
    swift_release();
    objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v30, v33);
    _Block_release(v33);
    _Block_release(v30);
  }
  else
  {
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView], sel_setHidden_, 1);
  }
}

id sub_24D336648(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    double v4 = 0.0;
  }
  else {
    double v4 = 1.0;
  }
  if (a3) {
    double v5 = 1.0;
  }
  else {
    double v5 = 0.0;
  }
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView), sel_setAlpha_, v4);
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView), sel_setAlpha_, v5);
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer), sel_setAlpha_, v5);
  uint64_t v6 = *(void **)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView);
  return objc_msgSend(v6, sel_setAlpha_, v5);
}

id sub_24D3366F0(uint64_t a1, uint64_t a2, char a3)
{
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView), sel_setHidden_, a3 & 1);
  BOOL v5 = (a3 & 1) == 0;
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView), sel_setHidden_, v5);
  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer), sel_setHidden_, v5);
  uint64_t v6 = *(void **)(a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView);
  return objc_msgSend(v6, sel_setHidden_, v5);
}

void sub_24D33681C()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x270FA5388](v2 - 8);
  double v4 = (char *)&v107[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v6 = v5;
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_blackColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v8);

  id v9 = objc_msgSend(v1, sel_navigationController);
  if (v9)
  {
    os_log_type_t v10 = v9;
    sub_24D2C0E04();
  }
  id v11 = objc_msgSend(v1, sel_view);
  if (!v11) {
    goto LABEL_33;
  }
  uint64_t v12 = v11;
  objc_msgSend(v11, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView]);

  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView];
  id v14 = objc_msgSend(v7, sel_blackColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  objc_msgSend(v13, sel_setUserInteractionEnabled_, 1);
  id v15 = objc_msgSend(v1, sel_view);
  if (!v15)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v16 = v15;
  objc_msgSend(v15, sel_addSubview_, v13);

  sub_24D337404();
  uint64_t v17 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel;
  uint64_t v18 = (double *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel], sel_setFont_, *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style]);
  objc_msgSend(*(id *)&v1[v17], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v1[v17], sel_setNumberOfLines_, 0);
  objc_msgSend(*(id *)&v1[v17], sel_setTextAlignment_, 4);
  id v19 = *(id *)&v1[v17];
  id v20 = objc_msgSend(v7, sel_whiteColor);
  id v21 = objc_msgSend(v20, sel_colorWithAlphaComponent_, v18[4]);

  objc_msgSend(v19, sel_setTextColor_, v21);
  id v22 = *(id *)&v1[v17];
  sub_24D345D74(0x454C5449545F3152, 0xE800000000000000, 0, 0);
  uint64_t v23 = (void *)sub_24D39CAC0();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setText_, v23);

  id v24 = objc_msgSend(v1, (SEL)&selRef_setTextAlignment_);
  if (!v24)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v25 = v24;
  objc_msgSend(v24, sel_addSubview_, *(void *)&v1[v17]);

  uint64_t v26 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel], sel_setFont_, *((void *)v18 + 1));
  objc_msgSend(*(id *)&v1[v26], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v1[v26], sel_setNumberOfLines_, 0);
  objc_msgSend(*(id *)&v1[v26], sel_setTextAlignment_, 4);
  id v27 = *(id *)&v1[v26];
  id v28 = objc_msgSend(v7, sel_whiteColor);
  objc_msgSend(v27, sel_setTextColor_, v28);

  uint64_t v29 = *(void **)&v1[v26];
  uint64_t v106 = *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session];
  uint64_t v30 = v106 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_24D34518C(v30, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
  id v31 = v29;
  sub_24D324C90();
  sub_24D34512C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
  uint64_t v32 = (void *)sub_24D39CAC0();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setText_, v32);

  id v33 = objc_msgSend(v1, sel_view);
  if (!v33)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v34 = v33;
  objc_msgSend(v33, sel_addSubview_, *(void *)&v1[v26]);

  uint64_t v35 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton;
  uint64_t v36 = (char *)*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton];
  uint64_t v37 = sub_24D345D74(0xD000000000000016, 0x800000024D3A8E70, 0, 0);
  uint64_t v38 = (uint64_t *)&v36[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_legend];
  uint64_t *v38 = v37;
  v38[1] = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void **)&v36[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label];
  if (v38[1])
  {
    id v41 = v40;
    swift_bridgeObjectRetain();
    int v42 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v43 = v40;
    int v42 = 0;
  }
  objc_msgSend(v40, sel_setText_, v42);

  id v44 = *(id *)&v1[v35];
  id v45 = objc_msgSend(v7, sel_whiteColor);
  id v46 = objc_msgSend(v7, sel_whiteColor);
  id v47 = objc_msgSend(v46, sel_colorWithAlphaComponent_, 0.2);

  sub_24D3993B8(0x6B72616D78, 0xE500000000000000, v45, v47);
  id v48 = objc_msgSend(v1, sel_view);
  if (!v48) {
    goto LABEL_37;
  }
  uint64_t v49 = v48;
  objc_msgSend(v48, sel_addSubview_, *(void *)&v1[v35]);

  int v50 = *(void **)&v1[v35];
  uint64_t v51 = type metadata accessor for FMFindingViewController();
  uint64_t v108 = v51;
  v107[0] = v1;
  id v52 = v50;
  char v53 = v1;
  uint64_t v54 = sub_24D345D74(0xD000000000000016, 0x800000024D3A8E70, 0, 0);
  sub_24D398F08((uint64_t)v107, (uint64_t)sel_closeActionWithSender_, 64, v54, v55);
  swift_bridgeObjectRelease();

  sub_24D2BBFB4((uint64_t)v107, &qword_269861850);
  uint64_t v56 = OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology;
  unsigned int v57 = *(unsigned __int16 *)(v106 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  int v58 = (__int16)v57;
  int v59 = (v57 >> 8) & 0x7F;
  if (v58 >= 0) {
    int v59 = *(_WORD *)(v106 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  }
  uint64_t v60 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton;
  uint64_t v61 = *(void **)&v53[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton];
  if (v59 == 2)
  {
    uint64_t v108 = v51;
    v107[0] = v53;
    uint64_t v62 = v53;
    id v63 = v61;
    uint64_t v64 = sub_24D345C48();
    sub_24D398F08((uint64_t)v107, (uint64_t)sel_openMessagesActionWithSender_, 64, v64, v65);
    swift_bridgeObjectRelease();

    sub_24D2BBFB4((uint64_t)v107, &qword_269861850);
    id v66 = (char *)*(id *)&v53[v60];
    uint64_t v67 = sub_24D345C48();
    uint64_t v68 = (uint64_t *)&v66[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_legend];
    *uint64_t v68 = v67;
    v68[1] = v69;
    swift_bridgeObjectRelease();
    uint64_t v70 = *(void **)&v66[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label];
    if (v68[1])
    {
      id v71 = v70;
      swift_bridgeObjectRetain();
      uint64_t v72 = (void *)sub_24D39CAC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v84 = v70;
      uint64_t v72 = 0;
    }
    objc_msgSend(v70, sel_setText_, v72);

    id v85 = *(id *)&v53[v60];
    id v86 = objc_msgSend(v7, sel_whiteColor);
    id v87 = objc_msgSend(v7, sel_whiteColor);
    id v88 = objc_msgSend(v87, sel_colorWithAlphaComponent_, 0.2);

    uint64_t v89 = 0x2E6567617373656DLL;
    uint64_t v90 = 0xEC0000006C6C6966;
  }
  else
  {
    uint64_t v108 = v51;
    v107[0] = v53;
    unsigned __int8 v73 = v53;
    id v74 = v61;
    uint64_t v75 = sub_24D345D74(0xD00000000000001BLL, 0x800000024D3A8E90, 0, 0);
    sub_24D398F08((uint64_t)v107, (uint64_t)sel_playSoundActionWithSender_, 64, v75, v76);
    swift_bridgeObjectRelease();

    sub_24D2BBFB4((uint64_t)v107, &qword_269861850);
    uint64_t v77 = (char *)*(id *)&v53[v60];
    uint64_t v78 = sub_24D345D74(0xD00000000000001BLL, 0x800000024D3A8E90, 0, 0);
    uint64_t v79 = (uint64_t *)&v77[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_legend];
    *uint64_t v79 = v78;
    v79[1] = v80;
    swift_bridgeObjectRelease();
    unint64_t v81 = *(void **)&v77[OBJC_IVAR____TtC11FMFindingUI15FMR1GlyphButton_label];
    if (v79[1])
    {
      id v82 = v81;
      swift_bridgeObjectRetain();
      uint64_t v83 = (void *)sub_24D39CAC0();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v91 = v81;
      uint64_t v83 = 0;
    }
    objc_msgSend(v81, sel_setText_, v83);

    id v85 = *(id *)&v53[v60];
    id v86 = objc_msgSend(v7, sel_whiteColor);
    id v92 = objc_msgSend(v7, sel_whiteColor);
    id v88 = objc_msgSend(v92, sel_colorWithAlphaComponent_, 0.2);

    uint64_t v89 = 0x2E72656B61657073;
    uint64_t v90 = 0xEE006C6C69662E32;
  }
  sub_24D3993B8(v89, v90, v86, v88);

  unsigned int v93 = *(unsigned __int16 *)(v106 + v56);
  int v94 = (__int16)v93;
  int v95 = (v93 >> 8) & 0x7F;
  if (v94 >= 0) {
    int v95 = *(_WORD *)(v106 + v56);
  }
  if (v95 != 3)
  {
    id v96 = objc_msgSend(v53, sel_view);
    if (v96)
    {
      uint64_t v97 = v96;
      uint64_t v98 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton;
      objc_msgSend(v96, sel_addSubview_, *(void *)&v53[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton]);

      id v99 = *(id *)&v53[v98];
      objc_msgSend(v99, sel_setAlpha_, 1.0);
      objc_msgSend(v53, sel_accessibilityShowViewHandler);

      sub_24D309948(0);
      goto LABEL_28;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
LABEL_28:
  if ((sub_24D30A3E4() & 1) == 0) {
    return;
  }
  uint64_t v100 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton;
  id v101 = *(void **)&v53[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton];
  uint64_t v108 = v51;
  v107[0] = v53;
  uint64_t v102 = v53;
  id v103 = v101;
  sub_24D398F08((uint64_t)v107, (uint64_t)sel_torchActionWithSender_, 64, 0, 0);

  sub_24D2BBFB4((uint64_t)v107, &qword_269861850);
  id v104 = objc_msgSend(v102, sel_view);
  if (!v104)
  {
LABEL_39:
    __break(1u);
    return;
  }
  uint64_t v105 = v104;
  objc_msgSend(v104, sel_addSubview_, *(void *)&v53[v100]);

  sub_24D307D30();
  sub_24D308474(0, 0);
}

id sub_24D337404()
{
  id v1 = self;
  id v2 = objc_msgSend(v1, sel_sharedApplication);
  id v3 = objc_msgSend(v2, sel_connectedScenes);

  sub_24D2BC100(0, &qword_2698623D8);
  sub_24D344344();
  uint64_t v4 = sub_24D39CD20();

  uint64_t v5 = sub_24D333888(v4, &qword_2698623D8);
  swift_bridgeObjectRelease();
  if (v5)
  {
    self;
    uint64_t v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      id v7 = objc_msgSend(v6, sel_interfaceOrientation);

      uint64_t v5 = v7 == (id)1;
    }
    else
    {

      uint64_t v5 = 0;
    }
  }
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_24D39C950();
  sub_24D2B508C(v8, (uint64_t)qword_269869FD0);
  id v9 = v0;
  os_log_type_t v10 = sub_24D39C930();
  os_log_type_t v11 = sub_24D39CDF0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v27 = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    id v14 = objc_msgSend(v1, (SEL)&selRef_resolvedColorWithTraitCollection_ + 6);
    id v15 = objc_msgSend(v14, sel_connectedScenes);

    uint64_t v16 = sub_24D39CD20();
    uint64_t v17 = (void *)sub_24D333888(v16, &qword_2698623D8);
    swift_bridgeObjectRelease();
    if (v17)
    {
      self;
      uint64_t v18 = (void *)swift_dynamicCastObjCClass();
      if (v18) {
        objc_msgSend(v18, sel_interfaceOrientation);
      }
    }
    type metadata accessor for UIInterfaceOrientation(0);
    uint64_t v19 = sub_24D39CB20();
    HIDWORD(v26) = (unint64_t)sub_24D2B8328(v19, v20, &v27) >> 32;
    sub_24D39D070();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 1024;
    LODWORD(v26) = v5;
    sub_24D39D070();
    _os_log_impl(&dword_24D2B1000, v10, v11, "FMFindingViewController: Update orientation view. Current orientation: %s, isPortrait: %{BOOL}d", (uint8_t *)v12, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x253326010](v13, -1, -1);
    MEMORY[0x253326010](v12, -1, -1);
  }
  else
  {
  }
  unsigned int v21 = ~objc_msgSend(v9, sel_supportedInterfaceOrientations, v26);
  id v22 = *(void **)&v9[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView];
  if ((v21 & 0x18) != 0)
  {
    objc_msgSend(v22, sel_setHidden_, v5);
    uint64_t v24 = v5 ^ 1;
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView], sel_setHidden_, v24);
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer], sel_setHidden_, v24);
    id v22 = *(void **)&v9[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView];
    uint64_t v23 = v24;
  }
  else
  {
    uint64_t v23 = 1;
  }
  return objc_msgSend(v22, sel_setHidden_, v23);
}

void sub_24D337800()
{
  uint64_t v1 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel;
  id v2 = &v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel], sel_setFont_, *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style + 16]);
  objc_msgSend(*(id *)&v0[v1], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v0[v1], sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(*(id *)&v0[v1], sel_setNumberOfLines_, 0);
  id v3 = *(void **)&v0[v1];
  uint64_t v4 = self;
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_whiteColor);
  objc_msgSend(v5, sel_setTextColor_, v6);

  objc_msgSend(*(id *)&v0[v1], sel_setTextAlignment_, 1);
  objc_msgSend(*(id *)&v0[v1], sel_setAlpha_, 0.0);
  uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView], sel_addArrangedSubview_, *(void *)&v0[v1]);
  uint64_t v8 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel], sel_setFont_, *((void *)v2 + 3));
  objc_msgSend(*(id *)&v0[v8], sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(*(id *)&v0[v8], sel_setAdjustsFontSizeToFitWidth_, 1);
  objc_msgSend(*(id *)&v0[v8], sel_setNumberOfLines_, 0);
  id v9 = *(id *)&v0[v8];
  id v10 = objc_msgSend(v4, sel_whiteColor);
  objc_msgSend(v9, sel_setTextColor_, v10);

  objc_msgSend(*(id *)&v0[v8], sel_setTextAlignment_, 1);
  objc_msgSend(*(id *)&v0[v8], sel_setAlpha_, 0.0);
  objc_msgSend(*(id *)&v0[v7], sel_addArrangedSubview_, *(void *)&v0[v8]);
  objc_msgSend(*(id *)&v0[v7], sel_setAxis_, 1);
  objc_msgSend(*(id *)&v0[v7], sel_setAlignment_, 3);
  objc_msgSend(*(id *)&v0[v7], sel_setDistribution_, 0);
  objc_msgSend(*(id *)&v0[v7], sel_setSpacing_, *((double *)v2 + 13));
  id v11 = objc_msgSend(v0, sel_view);
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v11, sel_addSubview_, *(void *)&v0[v7]);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24D337AA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v0, sel_view);
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView];
    objc_msgSend(v5, sel_addSubview_, v7);

    uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
       + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
    swift_beginAccess();
    sub_24D34518C(v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
    uint64_t v9 = *((void *)v4 + 1);
    if (*(void *)(v9 + 16))
    {
      unint64_t v10 = sub_24D3839F0((uint64_t)&v4[*(int *)(v2 + 36)]);
      if (v11)
      {
        sub_24D2B6CE8(*(void *)(v9 + 56) + 40 * v10, (uint64_t)v19);
        sub_24D2B6F04(v19, (uint64_t)v20);
        sub_24D34512C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
        uint64_t v12 = v21;
        uint64_t v13 = v22;
        sub_24D2B8A34(v20, v21);
        uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
        id v15 = (uint64_t *)(v7 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_deviceName);
        *id v15 = v14;
        v15[1] = v16;
        swift_bridgeObjectRelease();
        return sub_24D2B6E58((uint64_t)v20);
      }
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = sub_24D39D2B0();
  __break(1u);
  return result;
}

void sub_24D337CBC()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v2, sel_bounds);
  double v4 = v3;

  id v251 = self;
  id v5 = objc_msgSend(v251, sel_currentDevice);
  id v252 = objc_msgSend(v5, sel_userInterfaceIdiom);

  uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_24D2B7450(&qword_269861330);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_24D3A0040;
  id v8 = objc_msgSend(*(id *)&v1[v6], sel_topAnchor);
  id v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
    __break(1u);
    goto LABEL_67;
  }
  unint64_t v10 = v9;
  id v11 = objc_msgSend(v9, sel_topAnchor);

  id v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);
  *(void *)(v7 + 32) = v12;
  id v13 = objc_msgSend(*(id *)&v1[v6], sel_bottomAnchor);
  id v14 = objc_msgSend(v1, sel_view);
  if (!v14)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  id v15 = v14;
  id v16 = objc_msgSend(v14, sel_bottomAnchor);

  id v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);
  *(void *)(v7 + 40) = v17;
  id v18 = objc_msgSend(*(id *)&v1[v6], sel_leadingAnchor);
  id v19 = objc_msgSend(v1, sel_view);
  if (!v19)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  unint64_t v20 = v19;
  id v21 = objc_msgSend(v19, sel_leadingAnchor);

  id v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);
  *(void *)(v7 + 48) = v22;
  id v23 = objc_msgSend(*(id *)&v1[v6], sel_trailingAnchor);
  id v24 = objc_msgSend(v1, sel_view);
  if (!v24)
  {
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v25 = v24;
  uint64_t v26 = self;
  id v27 = objc_msgSend(v25, sel_trailingAnchor);

  id v28 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v27);
  *(void *)(v7 + 56) = v28;
  sub_24D39CC30();
  sub_24D2BC100(0, (unint64_t *)&qword_269862780);
  uint64_t v29 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v29);

  uint64_t v30 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v31 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  uint64_t v32 = 64;
  if (v252 == (id)1) {
    uint64_t v32 = 72;
  }
  uint64_t v33 = 40;
  if (v252 == (id)1) {
    uint64_t v33 = 48;
  }
  double v34 = *(double *)&v31[v33];
  double v35 = *(double *)&v31[v32];
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_24D3A0EF0;
  id v37 = objc_msgSend(*(id *)&v1[v30], sel_topAnchor);
  id v38 = objc_msgSend(v1, sel_view);
  if (!v38) {
    goto LABEL_70;
  }
  uint64_t v39 = v38;
  id v40 = objc_msgSend(v38, sel_topAnchor);

  id v41 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v40, v34);
  *(void *)(v36 + 32) = v41;
  id v42 = objc_msgSend(*(id *)&v1[v30], sel_leadingAnchor);
  id v43 = objc_msgSend(v1, sel_view);
  if (!v43)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  id v44 = v43;
  id v45 = objc_msgSend(v43, sel_safeAreaLayoutGuide);

  id v46 = objc_msgSend(v45, sel_leadingAnchor);
  id v47 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v46, v35);

  *(void *)(v36 + 40) = v47;
  id v48 = objc_msgSend(*(id *)&v1[v30], sel_trailingAnchor);
  id v49 = objc_msgSend(v1, sel_view);
  if (!v49)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  int v50 = v49;
  id v51 = objc_msgSend(v49, sel_safeAreaLayoutGuide);

  id v52 = objc_msgSend(v51, sel_trailingAnchor);
  id v53 = objc_msgSend(v48, sel_constraintEqualToAnchor_constant_, v52, -v35);

  *(void *)(v36 + 48) = v53;
  sub_24D39CC30();
  uint64_t v54 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v54);

  uint64_t v55 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_24D3A0EF0;
  id v57 = objc_msgSend(*(id *)&v1[v55], sel_topAnchor);
  id v58 = objc_msgSend(*(id *)&v1[v30], sel_bottomAnchor);
  v253 = (double *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  id v59 = objc_msgSend(v57, sel_constraintEqualToAnchor_constant_, v58, *(double *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style + 56]);

  *(void *)(v56 + 32) = v59;
  id v60 = objc_msgSend(*(id *)&v1[v55], sel_leadingAnchor);
  id v61 = objc_msgSend(v1, sel_view);
  if (!v61)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  uint64_t v62 = v61;
  id v63 = objc_msgSend(v61, (SEL)&selRef_systemBlueColor + 3);

  id v64 = objc_msgSend(v63, sel_leadingAnchor);
  id v65 = objc_msgSend(v60, sel_constraintEqualToAnchor_constant_, v64, v35);

  *(void *)(v56 + 40) = v65;
  id v66 = objc_msgSend(*(id *)&v1[v55], sel_trailingAnchor);
  id v67 = objc_msgSend(v1, sel_view);
  if (!v67)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v68 = v67;
  id v69 = objc_msgSend(v67, sel_safeAreaLayoutGuide);

  id v70 = objc_msgSend(v69, sel_trailingAnchor);
  id v71 = objc_msgSend(v66, sel_constraintEqualToAnchor_constant_, v70, -v35);

  *(void *)(v56 + 48) = v71;
  sub_24D39CC30();
  uint64_t v72 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v72);

  unsigned __int8 v73 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer];
  objc_msgSend(v73, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_24D3A0EF0;
  id v75 = objc_msgSend(v73, sel_topAnchor);
  id v76 = objc_msgSend(*(id *)&v1[v55], sel_bottomAnchor);
  id v77 = objc_msgSend(v75, sel_constraintEqualToAnchor_constant_, v76, 6.0);

  *(void *)(v74 + 32) = v77;
  id v78 = objc_msgSend(v73, (SEL)&off_265304238 + 2);
  id v79 = objc_msgSend(v1, sel_view);
  if (!v79)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  uint64_t v80 = v79;
  id v81 = objc_msgSend(v79, sel_safeAreaLayoutGuide);

  id v82 = objc_msgSend(v81, (SEL)&off_265304238 + 2);
  double v83 = v253[8];
  id v84 = objc_msgSend(v78, sel_constraintEqualToAnchor_constant_, v82, v83 + -5.0);

  *(void *)(v74 + 40) = v84;
  id v85 = objc_msgSend(v73, sel_trailingAnchor);
  id v86 = objc_msgSend(v1, sel_view);
  if (!v86)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  id v87 = v86;
  id v88 = objc_msgSend(v86, sel_safeAreaLayoutGuide);

  id v89 = objc_msgSend(v88, sel_trailingAnchor);
  id v90 = objc_msgSend(v85, sel_constraintLessThanOrEqualToAnchor_constant_, v89, -v83);

  *(void *)(v74 + 48) = v90;
  sub_24D39CC30();
  id v91 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  id v92 = v26;
  objc_msgSend(v26, sel_activateConstraints_, v91);

  uint64_t v93 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_24D3A0040;
  id v95 = objc_msgSend(*(id *)&v1[v93], sel_centerYAnchor);
  id v96 = objc_msgSend(v1, sel_view);
  if (!v96)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  uint64_t v97 = v96;
  id v98 = objc_msgSend(v96, sel_centerYAnchor);

  id v99 = objc_msgSend(v95, sel_constraintEqualToAnchor_constant_, v98, v253[15]);
  *(void *)(v94 + 32) = v99;
  id v100 = objc_msgSend(*(id *)&v1[v93], sel_centerXAnchor);
  id v101 = objc_msgSend(v1, sel_view);
  if (!v101)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  uint64_t v102 = v101;
  id v103 = objc_msgSend(v101, sel_centerXAnchor);

  id v104 = objc_msgSend(v100, sel_constraintEqualToAnchor_, v103);
  *(void *)(v94 + 40) = v104;
  id v105 = objc_msgSend(*(id *)&v1[v93], sel_widthAnchor);
  double v106 = v253[14];
  id v107 = objc_msgSend(v105, sel_constraintEqualToConstant_, v106);

  *(void *)(v94 + 48) = v107;
  id v108 = objc_msgSend(*(id *)&v1[v93], sel_heightAnchor);
  id v109 = objc_msgSend(v108, sel_constraintLessThanOrEqualToConstant_, v106);

  *(void *)(v94 + 56) = v109;
  sub_24D39CC30();
  uint64_t v110 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v110);

  unsigned int v111 = v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType];
  __int16 v112 = (_OWORD *)&unk_24D3A0000;
  if (v111 < 2)
  {
    uint64_t v113 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView];
    objc_msgSend(v113, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v114 = 11;
    if (v4 >= 414.0) {
      uint64_t v114 = 10;
    }
    double v115 = v253[v114];
    uint64_t v116 = swift_allocObject();
    *(_OWORD *)(v116 + 16) = xmmword_24D3A0210;
    id v117 = objc_msgSend(v113, sel_bottomAnchor);
    id v118 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton], sel_topAnchor);
    id v119 = objc_msgSend(v117, sel_constraintEqualToAnchor_constant_, v118, -v115);

    *(void *)(v116 + 32) = v119;
    sub_24D39CC30();
    id v120 = (void *)sub_24D39CC00();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_activateConstraints_, v120);

    __int16 v112 = &unk_24D3A0000;
    uint64_t v121 = swift_allocObject();
    *(_OWORD *)(v121 + 16) = xmmword_24D3A0B10;
    id v122 = objc_msgSend(v113, sel_leadingAnchor);
    id v123 = objc_msgSend(v1, sel_view);
    if (v123)
    {
      id v124 = v123;
      id v125 = objc_msgSend(v123, sel_safeAreaLayoutGuide);

      id v126 = objc_msgSend(v125, sel_leadingAnchor);
      id v127 = objc_msgSend(v122, sel_constraintEqualToAnchor_constant_, v126, v83);

      *(void *)(v121 + 32) = v127;
      id v128 = objc_msgSend(v113, sel_trailingAnchor);
      id v129 = objc_msgSend(v1, sel_view);
      if (v129)
      {
        double v130 = v129;
        id v131 = objc_msgSend(v129, sel_safeAreaLayoutGuide);

        id v132 = objc_msgSend(v131, sel_trailingAnchor);
        id v133 = objc_msgSend(v128, sel_constraintEqualToAnchor_constant_, v132, -v83);

        *(void *)(v121 + 40) = v133;
        sub_24D39CC30();
        id v92 = v26;
        double v134 = &off_265304000;
        goto LABEL_38;
      }
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (v111 != 2) {
    goto LABEL_39;
  }
  double v135 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView];
  objc_msgSend(v135, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v136 = objc_msgSend(v251, sel_currentDevice);
  id v137 = objc_msgSend(v136, sel_userInterfaceIdiom);

  uint64_t v138 = swift_allocObject();
  *(_OWORD *)(v138 + 16) = xmmword_24D3A0EF0;
  if (v137 == (id)1)
  {
    id v139 = objc_msgSend(v135, sel_bottomAnchor);
    id v140 = objc_msgSend(v1, sel_view);
    if (!v140)
    {
LABEL_93:
      __break(1u);
      goto LABEL_94;
    }
    uint64_t v141 = v140;
    id v142 = objc_msgSend(v140, sel_safeAreaLayoutGuide);

    id v143 = objc_msgSend(v142, sel_bottomAnchor);
    double v144 = v253[9];
    id v145 = objc_msgSend(v139, sel_constraintEqualToAnchor_constant_, v143, -v144);

    *(void *)(v138 + 32) = v145;
    id v146 = objc_msgSend(v135, sel_leadingAnchor);
    id v147 = objc_msgSend(v1, (SEL)&selRef_setTextAlignment_);
    if (!v147)
    {
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    long long v148 = v147;
    id v149 = objc_msgSend(v147, sel_safeAreaLayoutGuide);

    id v150 = objc_msgSend(v149, sel_leadingAnchor);
    id v151 = objc_msgSend(v146, sel_constraintEqualToAnchor_constant_, v150, v144);

    *(void *)(v138 + 40) = v151;
    id v152 = objc_msgSend(v135, sel_trailingAnchor);
    id v153 = objc_msgSend(v1, (SEL)&selRef_setTextAlignment_);
    if (!v153)
    {
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    uint64_t v154 = v153;
    id v155 = objc_msgSend(v153, sel_safeAreaLayoutGuide);

    id v156 = objc_msgSend(v155, sel_trailingAnchor);
    id v157 = objc_msgSend(v152, (SEL)&selRef_commandBuffer + 7, v156, -v144);
  }
  else
  {
    id v158 = objc_msgSend(v135, sel_bottomAnchor);
    id v159 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton], sel_topAnchor);
    id v160 = objc_msgSend(v158, sel_constraintEqualToAnchor_constant_, v159, -8.0);

    *(void *)(v138 + 32) = v160;
    id v161 = objc_msgSend(v135, sel_leadingAnchor);
    id v162 = objc_msgSend(v1, (SEL)&selRef_setTextAlignment_);
    if (!v162)
    {
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    uint64_t v163 = v162;
    id v164 = objc_msgSend(v162, sel_safeAreaLayoutGuide);

    id v165 = objc_msgSend(v164, (SEL)&off_265304238 + 2);
    id v166 = objc_msgSend(v161, sel_constraintEqualToAnchor_constant_, v165, v83);

    *(void *)(v138 + 40) = v166;
    id v152 = objc_msgSend(v135, sel_trailingAnchor);
    id v167 = objc_msgSend(v1, (SEL)&selRef_setTextAlignment_);
    if (!v167)
    {
LABEL_97:
      __break(1u);
      return;
    }
    uint64_t v168 = v167;
    id v169 = objc_msgSend(v167, sel_safeAreaLayoutGuide);

    id v156 = objc_msgSend(v169, sel_trailingAnchor);
    id v157 = objc_msgSend(v152, sel_constraintEqualToAnchor_constant_, v156, -v83);
  }
  id v170 = v157;

  *(void *)(v138 + 48) = v170;
  sub_24D39CC30();
  int v171 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v26, sel_activateConstraints_, v171);

  uint64_t v172 = *(void **)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView];
  objc_msgSend(v172, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v173 = swift_allocObject();
  *(_OWORD *)(v173 + 16) = xmmword_24D3A0040;
  id v174 = objc_msgSend(v172, sel_topAnchor);
  id v175 = objc_msgSend(v1, (SEL)&selRef_setTextAlignment_);
  if (!v175) {
    goto LABEL_89;
  }
  uint64_t v176 = v175;
  id v177 = objc_msgSend(v175, sel_topAnchor);

  id v178 = objc_msgSend(v174, sel_constraintEqualToAnchor_, v177);
  *(void *)(v173 + 32) = v178;
  id v179 = objc_msgSend(v172, sel_bottomAnchor);
  id v180 = objc_msgSend(v1, (SEL)&selRef_setTextAlignment_);
  if (!v180)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  char v181 = v180;
  id v182 = objc_msgSend(v180, sel_bottomAnchor);

  id v183 = objc_msgSend(v179, sel_constraintEqualToAnchor_, v182);
  *(void *)(v173 + 40) = v183;
  id v184 = objc_msgSend(v172, sel_leadingAnchor);
  id v185 = objc_msgSend(v1, (SEL)&selRef_setTextAlignment_);
  if (!v185)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  id v186 = v185;
  id v187 = objc_msgSend(v185, sel_leadingAnchor);

  id v188 = objc_msgSend(v184, sel_constraintEqualToAnchor_, v187);
  *(void *)(v173 + 48) = v188;
  id v189 = objc_msgSend(v172, sel_trailingAnchor);
  id v190 = objc_msgSend(v1, (SEL)&selRef_setTextAlignment_);
  if (!v190)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t v191 = v190;
  id v192 = objc_msgSend(v190, sel_trailingAnchor);

  id v193 = objc_msgSend(v189, sel_constraintEqualToAnchor_, v192);
  *(void *)(v173 + 56) = v193;
  sub_24D39CC30();
  id v92 = v26;
  double v134 = &off_265304000;
  __int16 v112 = &unk_24D3A0000;
LABEL_38:
  uint64_t v194 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v92, (SEL)v134[427], v194);

LABEL_39:
  uint64_t v195 = 17;
  if (v4 >= 414.0) {
    uint64_t v195 = 16;
  }
  if (v252 == (id)1)
  {
    unsigned __int8 v196 = v253;
    unsigned __int8 v197 = v253 + 20;
    uint64_t v198 = &selRef_lightEstimate;
  }
  else
  {
    uint64_t v198 = &selRef_lightEstimate;
    unsigned __int8 v196 = v253;
    if (v4 < 414.0) {
      unsigned __int8 v197 = v253 + 19;
    }
    else {
      unsigned __int8 v197 = v253 + 18;
    }
  }
  double v199 = v196[v195];
  double v200 = *v197;
  uint64_t v201 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v202 = objc_msgSend(v251, sel_currentDevice);
  id v203 = objc_msgSend(v202, sel_userInterfaceIdiom);

  uint64_t v204 = swift_allocObject();
  *(_OWORD *)v254 = v112[177];
  *(_OWORD *)(v204 + 16) = *(_OWORD *)v254;
  id v205 = objc_msgSend(*(id *)&v1[v201], sel_topAnchor);
  id v206 = objc_msgSend(v1, sel_view);
  uint64_t v207 = v206;
  if (v203 == (id)1)
  {
    if (v206)
    {
      id v208 = objc_msgSend(v206, sel_topAnchor);

      id v209 = objc_msgSend(v205, v198[237], v208, v253[6]);
      *(void *)(v204 + 32) = v209;
      id v210 = objc_msgSend(*(id *)&v1[v201], sel_trailingAnchor);
      id v211 = objc_msgSend(v1, sel_view);
      if (v211)
      {
        uint64_t v212 = v211;
        id v213 = objc_msgSend(v211, sel_trailingAnchor);

        id v214 = objc_msgSend(v210, (SEL)v198 + 775, v213, -v253[9]);
        *(void *)(v204 + 40) = v214;
        sub_24D39CC30();
        goto LABEL_53;
      }
      goto LABEL_82;
    }
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (!v206)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  id v215 = objc_msgSend(v206, sel_bottomAnchor);

  id v216 = objc_msgSend(v205, v198[237], v215, -v200);
  *(void *)(v204 + 32) = v216;
  id v217 = objc_msgSend(*(id *)&v1[v201], sel_leadingAnchor);
  id v218 = objc_msgSend(v1, sel_view);
  if (!v218)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v219 = v218;
  id v220 = objc_msgSend(v218, sel_leadingAnchor);

  id v221 = objc_msgSend(v217, v198[237], v220, v199);
  *(void *)(v204 + 40) = v221;
  sub_24D39CC30();
LABEL_53:
  v222 = (void *)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v92, sel_activateConstraints_, v222);

  unsigned int v223 = *(unsigned __int16 *)(*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
                             + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  int v224 = (__int16)v223;
  int v225 = (v223 >> 8) & 0x7F;
  if (v224 >= 0) {
    int v225 = *(_WORD *)(*(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
  }
                                     + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  if (v225 != 3)
  {
    uint64_t v226 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v227 = swift_allocObject();
    *(_OWORD *)(v227 + 16) = *(_OWORD *)v254;
    id v228 = objc_msgSend(*(id *)&v1[v226], sel_topAnchor);
    id v229 = objc_msgSend(v1, sel_view);
    if (v229)
    {
      v230 = v229;
      id v231 = objc_msgSend(v229, sel_bottomAnchor);

      id v232 = objc_msgSend(v228, v198[237], v231, -v200);
      *(void *)(v227 + 32) = v232;
      id v233 = objc_msgSend(*(id *)&v1[v226], sel_trailingAnchor);
      id v234 = objc_msgSend(v1, sel_view);
      if (v234)
      {
        v235 = v234;
        id v236 = objc_msgSend(v234, sel_trailingAnchor);

        id v237 = objc_msgSend(v233, v198[237], v236, -v199);
        *(void *)(v227 + 40) = v237;
        sub_24D39CC30();
        v238 = (void *)sub_24D39CC00();
        swift_bridgeObjectRelease();
        objc_msgSend(v92, sel_activateConstraints_, v238);

        goto LABEL_59;
      }
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
LABEL_59:
  if ((sub_24D30A3E4() & 1) == 0) {
    return;
  }
  uint64_t v239 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton], sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v240 = swift_allocObject();
  *(_OWORD *)(v240 + 16) = *(_OWORD *)v254;
  id v241 = objc_msgSend(*(id *)&v1[v239], sel_topAnchor);
  id v242 = objc_msgSend(v1, sel_view);
  if (!v242) {
    goto LABEL_87;
  }
  v243 = v242;
  id v244 = objc_msgSend(v242, sel_bottomAnchor);

  id v245 = objc_msgSend(v241, v198[237], v244, -v200);
  *(void *)(v240 + 32) = v245;
  id v246 = objc_msgSend(*(id *)&v1[v239], sel_centerXAnchor);
  id v247 = objc_msgSend(v1, sel_view);
  if (!v247)
  {
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v248 = v247;
  id v249 = objc_msgSend(v247, sel_centerXAnchor);

  id v250 = objc_msgSend(v246, sel_constraintEqualToAnchor_, v249);
  *(void *)(v240 + 40) = v250;
  sub_24D39CC30();
  id v255 = (id)sub_24D39CC00();
  swift_bridgeObjectRelease();
  objc_msgSend(v92, sel_activateConstraints_, v255);
}

void sub_24D339954()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    id v2 = v1;
    double v3 = *(void **)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_snapshotContainer];
    uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView;
    objc_msgSend(v1, sel_insertSubview_aboveSubview_, v3, *(void *)&v0[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView]);

    objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = self;
    sub_24D2B7450(&qword_269861330);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_24D3A0040;
    id v7 = objc_msgSend(v3, sel_topAnchor);
    id v8 = objc_msgSend(*(id *)&v0[v4], sel_topAnchor);
    id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

    *(void *)(v6 + 32) = v9;
    id v10 = objc_msgSend(v3, sel_bottomAnchor);
    id v11 = objc_msgSend(*(id *)&v0[v4], sel_bottomAnchor);
    id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

    *(void *)(v6 + 40) = v12;
    id v13 = objc_msgSend(v3, sel_leadingAnchor);
    id v14 = objc_msgSend(*(id *)&v0[v4], sel_leadingAnchor);
    id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

    *(void *)(v6 + 48) = v15;
    id v16 = objc_msgSend(v3, sel_trailingAnchor);
    id v17 = objc_msgSend(*(id *)&v0[v4], sel_trailingAnchor);
    id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

    *(void *)(v6 + 56) = v18;
    sub_24D39CC30();
    sub_24D2BC100(0, (unint64_t *)&qword_269862780);
    id v19 = (id)sub_24D39CC00();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_activateConstraints_, v19);
  }
  else
  {
    __break(1u);
  }
}

id sub_24D339C10(void *a1, char a2)
{
  double v2 = 0.0;
  if (a2) {
    double v2 = 1.0;
  }
  return objc_msgSend(a1, sel_setAlpha_, v2);
}

void sub_24D339C2C(unsigned __int16 *a1, __int16 *a2)
{
  if (!sub_24D396C54((unsigned __int16 *)a2, a1))
  {
    if ((*a2 & 0x8100) == 0x100)
    {
      sub_24D33C7C0(1, (uint64_t)a2);
      sub_24D33D23C();
      sub_24D33BA18();
      sub_24D33A080((uint64_t)a1, (uint64_t)a2);
    }
    else
    {
      sub_24D339CE0((uint64_t)a1, a2);
    }
  }
}

id sub_24D339CE0(uint64_t a1, __int16 *a2)
{
  sub_24D33D23C();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  *(unsigned char *)(v5 + 24) = 1;
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_reducedMotion] == 1
    && v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType] == 2)
  {
    uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView];
    id v7 = v2;
    id v8 = objc_msgSend(v6, sel_snapshotViewAfterScreenUpdates_, 1);
    if (v8)
    {
      id v9 = v8;
      id v26 = self;
      id v10 = (void *)swift_allocObject();
      void v10[2] = v7;
      _OWORD v10[3] = v9;
      v10[4] = sub_24D345378;
      v10[5] = v5;
      id v31 = sub_24D3453CC;
      uint64_t v32 = v10;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v28 = 1107296256;
      uint64_t v29 = sub_24D32194C;
      uint64_t v30 = &unk_26FF89310;
      id v11 = _Block_copy(&aBlock);
      id v12 = v7;
      id v13 = v9;
      swift_retain();
      swift_release();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v13;
      id v31 = sub_24D345440;
      uint64_t v32 = (void *)v14;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v28 = 1107296256;
      uint64_t v29 = sub_24D31845C;
      uint64_t v30 = &unk_26FF89360;
      id v15 = _Block_copy(&aBlock);
      id v16 = v13;
      swift_release();
      objc_msgSend(v26, sel_animateWithDuration_delay_options_animations_completion_, 5242884, v11, v15, 0.5, 0.0);
      swift_release();

      _Block_release(v15);
      _Block_release(v11);
      goto LABEL_7;
    }
  }
  else
  {
    sub_24D33BF50((uint64_t)v2, 1);
  }
  swift_release();
LABEL_7:
  sub_24D33BA18();
  id v17 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel];
  id v18 = &v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state];
  swift_beginAccess();
  uint64_t v19 = type metadata accessor for FMFindingViewState();
  id v20 = v17;
  swift_bridgeObjectRetain();
  id v21 = (void *)sub_24D39CAC0();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setText_, v21);

  id v22 = &v18[*(int *)(v19 + 24)];
  uint64_t v23 = *((void *)v22 + 1);
  id v24 = (void *)(*(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView]
                 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_deviceName);
  *id v24 = *(void *)v22;
  v24[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_24D33D6BC();
  sub_24D33E3A4();
  sub_24D38F30C(a1, (uint64_t)a2);
  if (*(__int16 *)(*(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session]
                  + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology) < 0)
    sub_24D33EBA0(a1, a2);
  else {
    sub_24D33E570();
  }
  return objc_msgSend(v2, sel_accessibilityDistanceAndDirectionUpdated);
}

void sub_24D33A080(uint64_t a1, uint64_t a2)
{
  double v3 = v2;
  if ((~objc_msgSend(v3, sel_supportedInterfaceOrientations) & 0x18) != 0)
  {
    id v9 = objc_msgSend(self, sel_sharedApplication);
    id v10 = objc_msgSend(v9, sel_connectedScenes);

    sub_24D2BC100(0, &qword_2698623D8);
    sub_24D344344();
    uint64_t v11 = sub_24D39CD20();

    id v181 = (id)sub_24D333888(v11, &qword_2698623D8);
    swift_bridgeObjectRelease();
    if (!v181) {
      return;
    }
    self;
    id v12 = (void *)swift_dynamicCastObjCClass();
    if (!v12) {
      goto LABEL_14;
    }
    id v13 = objc_msgSend(v12, sel_interfaceOrientation);

    if (v13 != (id)1) {
      return;
    }
  }
  uint64_t v6 = *(int *)(type metadata accessor for FMFindingViewState() + 32);
  uint64_t v7 = a2 + v6;
  int v8 = *(_DWORD *)(a2 + v6 + 96);
  if ((v8 & 0xFF000000) == 0x4000000)
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_24D39C950();
    sub_24D2B508C(v14, (uint64_t)qword_269869FD0);
    id v15 = sub_24D39C930();
    os_log_type_t v16 = sub_24D39CDC0();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl(&dword_24D2B1000, v15, v16, "ðŸ§­ FMFindingViewCtrl: Requesting scatter haptic.", v17, 2u);
      MEMORY[0x253326010](v17, -1, -1);
    }

    id v181 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
    sub_24D301658();
    goto LABEL_14;
  }
  if ((v8 & 0xFF000000) == 0x5000000)
  {
    id v181 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
    sub_24D3044F0();
LABEL_14:

    return;
  }
  int v18 = *(_DWORD *)(a2 + v6 + 96);
  if ((v8 & 0xFE000000) == 0x6000000) {
    return;
  }
  uint64_t v20 = *(uint64_t *)v7;
  uint64_t v19 = *(void *)(v7 + 8);
  id v22 = *(void **)(v7 + 16);
  id v21 = *(void **)(v7 + 24);
  uint64_t v24 = *(void *)(v7 + 32);
  uint64_t v23 = *(void *)(v7 + 40);
  uint64_t v26 = *(void *)(v7 + 48);
  uint64_t v25 = *(void *)(v7 + 56);
  uint64_t v27 = *(void *)(v7 + 64);
  uint64_t v28 = *(void *)(v7 + 72);
  uint64_t v29 = *(void *)(v7 + 80);
  uint64_t v30 = *(void *)(v7 + 88);
  uint64_t v31 = a1 + v6;
  uint64_t v32 = *(void *)(v31 + 8);
  uint64_t v173 = *(uint64_t *)v31;
  id v160 = *(void **)(v31 + 16);
  id v159 = *(void **)(v31 + 24);
  uint64_t v167 = *(void *)(v31 + 32);
  uint64_t v172 = *(void *)(v31 + 40);
  uint64_t v170 = *(void *)(v31 + 48);
  uint64_t v168 = *(void *)(v31 + 56);
  uint64_t v166 = *(void *)(v31 + 64);
  uint64_t v158 = *(void *)(v31 + 72);
  uint64_t v33 = *(void *)(v31 + 88);
  uint64_t v157 = *(void *)(v31 + 80);
  int v34 = *(_DWORD *)(v31 + 96);
  double v208 = *(double *)v7;
  uint64_t v209 = v19;
  uint64_t v177 = v19;
  uint64_t v178 = v26;
  id v210 = v22;
  id v211 = v21;
  uint64_t v180 = v29;
  id v182 = (id)v24;
  uint64_t v212 = v24;
  uint64_t v213 = v23;
  uint64_t v175 = v23;
  uint64_t v176 = v25;
  uint64_t v214 = v26;
  uint64_t v215 = v25;
  uint64_t v174 = v27;
  uint64_t v216 = v27;
  uint64_t v217 = v28;
  uint64_t v218 = v29;
  uint64_t v219 = v30;
  uint64_t v179 = v30;
  char v221 = BYTE2(v8);
  __int16 v220 = v8;
  switch(BYTE2(v8))
  {
    case 1:
      unint64_t v35 = (v34 & 0xFF000000) - 0x4000000;
      uint64_t v163 = v28;
      id v164 = v21;
      int v155 = v8;
      id v156 = v22;
      uint64_t v161 = v20;
      uint64_t v149 = v32;
      uint64_t v151 = v33;
      if (((v35 >> 26) & 0x3FFF) == 0)
      {
        int v148 = v34;
        __int16 v36 = v8;
        sub_24D2B6F80(v20, v19, v22, v21, v24, v23, v26, v25, v27, v28, v29, v30, v8, 1);
        unint64_t v35 = (v34 & 0xFF000000) - 0x4000000;
        sub_24D2B6F80(v20, v177, v22, v21, (uint64_t)v182, v175, v178, v176, v174, v28, v180, v179, v36, 1);
        goto LABEL_61;
      }
      if (BYTE2(v34) != 1)
      {
        int v148 = v34;
        __int16 v85 = v8;
        sub_24D2B6F48(v20, v19, v22, v21, v24, v23, v26, v25, v27, v28, v29, v30, v8);
        sub_24D2B6F80(v20, v177, v22, v21, (uint64_t)v182, v175, v178, v176, v174, v28, v180, v179, v85, 1);
        if (!BYTE2(v34))
        {
          if ((v34 & 0xFF000000) != 0x4000000) {
            goto LABEL_62;
          }
          uint64_t v162 = v7;
          id v153 = v3;
LABEL_26:
          *(double *)&uint64_t v47 = 0.0;
          uint64_t v32 = 0;
          id v48 = 0;
          id v49 = 0;
          uint64_t v166 = 0;
          uint64_t v167 = 0;
          uint64_t v50 = 0;
          uint64_t v51 = 0;
          uint64_t v52 = 0;
          uint64_t v53 = 0;
          uint64_t v54 = 0;
          uint64_t v55 = 0;
          int v56 = 16711680;
          goto LABEL_70;
        }
LABEL_61:
        uint64_t v86 = (unsigned __int16)(v35 >> 24);
        if ((v86 - 1) < 3)
        {
LABEL_62:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v87 = sub_24D39C950();
          sub_24D2B508C(v87, (uint64_t)qword_269869FD0);
          id v88 = sub_24D39C930();
          os_log_type_t v89 = sub_24D39CDC0();
          if (os_log_type_enabled(v88, v89))
          {
            uint64_t v90 = v28;
            id v91 = v21;
            id v92 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v92 = 0;
            _os_log_impl(&dword_24D2B1000, v88, v89, "ðŸ§­ FMFindingViewCtrl: Haptics: Playing near haptic", v92, 2u);
            uint64_t v93 = v92;
            id v21 = v91;
            uint64_t v28 = v90;
            MEMORY[0x253326010](v93, -1, -1);
          }

          id v94 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
          sub_24D301658();
LABEL_76:

          goto LABEL_77;
        }
        uint64_t v162 = v7;
        id v153 = v3;
        uint64_t v32 = v149;
        uint64_t v33 = v151;
        int v34 = v148;
        if ((unsigned __int16)(v35 >> 24))
        {
LABEL_69:
          uint64_t v152 = v33;
          int v95 = v34;
          __int16 v146 = v34;
          uint64_t v54 = v157;
          uint64_t v53 = v158;
          char v147 = BYTE2(v34);
          uint64_t v50 = v172;
          uint64_t v47 = v173;
          id v49 = v159;
          id v48 = v160;
          uint64_t v52 = v168;
          uint64_t v51 = v170;
          sub_24D2B6F80(v173, v32, v160, v159, v167, v172, v170, v168, v166, v158, v157, v33, v146, v147);
          int v56 = v95;
          uint64_t v55 = v152;
        }
        else
        {
          int v56 = 16711680;
          uint64_t v47 = (unsigned __int16)(v35 >> 24);
          uint64_t v32 = v86;
          id v48 = (void *)v86;
          id v49 = (void *)v86;
          uint64_t v166 = v86;
          uint64_t v167 = v86;
          uint64_t v50 = v86;
          uint64_t v51 = v86;
          uint64_t v52 = v86;
          uint64_t v53 = v86;
          uint64_t v54 = v86;
          uint64_t v55 = v86;
        }
LABEL_70:
        uint64_t v171 = v51;
        uint64_t v169 = v52;
        double v183 = *(double *)&v47;
        uint64_t v184 = v32;
        id v185 = v48;
        id v186 = v49;
        uint64_t v187 = v167;
        uint64_t v188 = v50;
        uint64_t v189 = v51;
        uint64_t v190 = v52;
        uint64_t v191 = v166;
        uint64_t v192 = v53;
        uint64_t v193 = v54;
        uint64_t v194 = v55;
        __int16 v195 = v56;
        char v196 = BYTE2(v56);
        id v96 = v49;
        uint64_t v97 = v48;
        uint64_t v98 = v32;
        int v99 = v56;
        int v100 = sub_24D3278AC((uint64_t)&v183);
        sub_24D2D7AB4(v47, v98, v97, v96, v167, v50, v171, v169, v166, v53, v54, v55, v99, BYTE2(v99));
        uint64_t v28 = v163;
        id v21 = v164;
        id v22 = v156;
        double v3 = v153;
        uint64_t v7 = v162;
        if (v100 != 2) {
          goto LABEL_77;
        }
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v101 = sub_24D39C950();
        sub_24D2B508C(v101, (uint64_t)qword_269869FD0);
        uint64_t v102 = sub_24D39C930();
        os_log_type_t v103 = sub_24D39CDC0();
        if (os_log_type_enabled(v102, v103))
        {
          id v104 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v104 = 0;
          _os_log_impl(&dword_24D2B1000, v102, v103, "ðŸ§­ FMFindingViewCtrl: Haptics: Playing level decreased haptic", v104, 2u);
          id v105 = v104;
          id v21 = v164;
          uint64_t v28 = v163;
          MEMORY[0x253326010](v105, -1, -1);
        }

        id v94 = *(id *)&v153[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
        sub_24D303D68();
        goto LABEL_76;
      }
      int v57 = v8;
      id v154 = self;
      sub_24D2B6F48(v20, v177, v22, v21, (uint64_t)v182, v175, v178, v176, v174, v28, v180, v179, v57);
      sub_24D2B6F48(v173, v149, v160, v159, v167, v172, v170, v168, v166, v158, v157, v151, v34);
      sub_24D2B6F48(v20, v177, v22, v21, (uint64_t)v182, v175, v178, v176, v174, v28, v180, v179, v57);
      id v58 = objc_msgSend(v154, sel_currentDevice);
      id v59 = objc_msgSend(v58, sel_userInterfaceIdiom);

      if (v59 == (id)1) {
        double v60 = 0.3;
      }
      else {
        double v60 = 0.45;
      }
      double v61 = 1.0 - v60;
      uint64_t v62 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_inBand;
      if (v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_inBand])
      {
        id v21 = v164;
        if (v60 + v61 * 0.85 < *(double *)&v20)
        {
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v63 = sub_24D39C950();
          sub_24D2B508C(v63, (uint64_t)qword_269869FD0);
          id v64 = sub_24D39C930();
          os_log_type_t v65 = sub_24D39CDC0();
          if (os_log_type_enabled(v64, v65))
          {
            id v66 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)id v66 = 134217984;
            double v183 = v60 + v61 * 0.85;
            sub_24D39D070();
            _os_log_impl(&dword_24D2B1000, v64, v65, "ðŸ§­ FMFindingViewCtrl Haptics: exiting band, above %f ", v66, 0xCu);
            id v67 = v66;
            id v21 = v164;
            MEMORY[0x253326010](v67, -1, -1);
          }

          v3[v62] = 0;
        }
        if (v60 + v61 * 0.6 < *(double *)&v20 && v60 + v61 * 0.65 > *(double *)&v20)
        {
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v68 = sub_24D39C950();
          sub_24D2B508C(v68, (uint64_t)qword_269869FD0);
          id v69 = sub_24D39C930();
          os_log_type_t v70 = sub_24D39CDC0();
          if (os_log_type_enabled(v69, v70))
          {
            uint64_t v71 = swift_slowAlloc();
            *(_DWORD *)uint64_t v71 = 134218240;
            sub_24D39D070();
            *(_WORD *)(v71 + 12) = 2048;
            double v183 = v60 + v61 * 0.65;
            sub_24D39D070();
            _os_log_impl(&dword_24D2B1000, v69, v70, "ðŸ§­ FMFindingViewCtrl Haptics: exiting band, between %f and %f", (uint8_t *)v71, 0x16u);
            uint64_t v72 = v71;
            id v21 = v164;
            MEMORY[0x253326010](v72, -1, -1);
          }

          v3[v62] = 0;
        }
        double v73 = v60 + v61 * 0.15;
        if (v60 + v61 * 0.35 < *(double *)&v20)
        {
          double v74 = v60 + v61 * 0.4;
          if (v74 > *(double *)&v20)
          {
            if (qword_2698602B0 != -1) {
              swift_once();
            }
            uint64_t v75 = sub_24D39C950();
            sub_24D2B508C(v75, (uint64_t)qword_269869FD0);
            id v76 = sub_24D39C930();
            os_log_type_t v77 = sub_24D39CDC0();
            if (os_log_type_enabled(v76, v77))
            {
              uint64_t v78 = swift_slowAlloc();
              *(_DWORD *)uint64_t v78 = 134218240;
              sub_24D39D070();
              *(_WORD *)(v78 + 12) = 2048;
              double v183 = v74;
              sub_24D39D070();
              _os_log_impl(&dword_24D2B1000, v76, v77, "ðŸ§­ FMFindingViewCtrl Haptics: exiting band, between %f and %f", (uint8_t *)v78, 0x16u);
              uint64_t v79 = v78;
              id v21 = v164;
              MEMORY[0x253326010](v79, -1, -1);
            }

            v3[v62] = 0;
          }
        }
        if (v73 > *(double *)&v20)
        {
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v80 = sub_24D39C950();
          sub_24D2B508C(v80, (uint64_t)qword_269869FD0);
          id v81 = sub_24D39C930();
          os_log_type_t v82 = sub_24D39CDC0();
          if (os_log_type_enabled(v81, v82))
          {
            double v83 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)double v83 = 134217984;
            double v183 = v73;
            sub_24D39D070();
            _os_log_impl(&dword_24D2B1000, v81, v82, "ðŸ§­ FMFindingViewCtrl Haptics: exiting band, below %f", v83, 0xCu);
            id v84 = v83;
            id v21 = v164;
            MEMORY[0x253326010](v84, -1, -1);
          }

          v3[v62] = 0;
        }
        goto LABEL_77;
      }
      double v116 = v60 + v61 * 0.25;
      if (v116 < *(double *)&v20 && v116 >= *(double *)&v173 && *(double *)&v173 > 0.0)
      {
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v117 = sub_24D39C950();
        sub_24D2B508C(v117, (uint64_t)qword_269869FD0);
        id v118 = sub_24D39C930();
        os_log_type_t v119 = sub_24D39CDC0();
        if (os_log_type_enabled(v118, v119))
        {
          id v120 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v120 = 0;
          _os_log_impl(&dword_24D2B1000, v118, v119, "ðŸ§­ FMFindingViewCtrl Haptics: Playing level increased haptic for ring 1", v120, 2u);
          MEMORY[0x253326010](v120, -1, -1);
        }

        uint64_t v121 = sub_24D39C930();
        os_log_type_t v122 = sub_24D39CDC0();
        if (os_log_type_enabled(v121, v122))
        {
          uint64_t v123 = swift_slowAlloc();
          *(_DWORD *)uint64_t v123 = 134218496;
          sub_24D39D070();
          *(_WORD *)(v123 + 12) = 2048;
          sub_24D39D070();
          *(_WORD *)(v123 + 22) = 2048;
          double v183 = v60 + v61 * 0.25;
          sub_24D39D070();
          _os_log_impl(&dword_24D2B1000, v121, v122, "ðŸ§­ FMFindingViewCtrl Haptics: Playing: curr:%f, old:%f, scale: %f", (uint8_t *)v123, 0x20u);
          MEMORY[0x253326010](v123, -1, -1);
        }

        uint64_t v28 = v163;
        id v21 = v164;
        id v124 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
        sub_24D303CF8();

        v3[v62] = 1;
        goto LABEL_77;
      }
      double v125 = v60 + v61 * 0.5;
      id v21 = v164;
      if (v125 < *(double *)&v20 && v125 >= *(double *)&v173 && *(double *)&v173 > 0.0)
      {
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v126 = sub_24D39C950();
        sub_24D2B508C(v126, (uint64_t)qword_269869FD0);
        id v127 = sub_24D39C930();
        os_log_type_t v128 = sub_24D39CDC0();
        if (os_log_type_enabled(v127, v128))
        {
          id v129 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v129 = 0;
          _os_log_impl(&dword_24D2B1000, v127, v128, "ðŸ§­ FMFindingViewCtrl Haptics: Playing level increased haptic for ring 2", v129, 2u);
          MEMORY[0x253326010](v129, -1, -1);
        }

        double v130 = sub_24D39C930();
        os_log_type_t v131 = sub_24D39CDC0();
        if (os_log_type_enabled(v130, v131))
        {
          uint64_t v132 = swift_slowAlloc();
          *(_DWORD *)uint64_t v132 = 134218496;
          sub_24D39D070();
          *(_WORD *)(v132 + 12) = 2048;
          sub_24D39D070();
          *(_WORD *)(v132 + 22) = 2048;
          double v183 = v60 + v61 * 0.5;
          sub_24D39D070();
          _os_log_impl(&dword_24D2B1000, v130, v131, "ðŸ§­ FMFindingViewCtrl Haptics: Playing: curr:%f, old:%f, scale: %f", (uint8_t *)v132, 0x20u);
          MEMORY[0x253326010](v132, -1, -1);
        }

        id v133 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
        sub_24D303CF8();

        double v134 = sub_24D39C930();
        os_log_type_t v135 = sub_24D39CDC0();
        if (!os_log_type_enabled(v134, v135)) {
          goto LABEL_123;
        }
        id v136 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v136 = 134217984;
        double v183 = v60 + v61 * 0.5;
LABEL_122:
        sub_24D39D070();
        _os_log_impl(&dword_24D2B1000, v134, v135, "ðŸ§­ FMFindingViewCtrl Haptics: entering band %f ", v136, 0xCu);
        MEMORY[0x253326010](v136, -1, -1);
LABEL_123:

        v3[v62] = 1;
        uint64_t v28 = v163;
        id v21 = v164;
        goto LABEL_77;
      }
      double v137 = v60 + v61 * 0.75;
      if (v137 < *(double *)&v20 && v137 >= *(double *)&v173 && *(double *)&v173 > 0.0)
      {
        if (qword_2698602B0 != -1) {
          swift_once();
        }
        uint64_t v138 = sub_24D39C950();
        sub_24D2B508C(v138, (uint64_t)qword_269869FD0);
        id v139 = sub_24D39C930();
        os_log_type_t v140 = sub_24D39CDC0();
        if (os_log_type_enabled(v139, v140))
        {
          uint64_t v141 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v141 = 0;
          _os_log_impl(&dword_24D2B1000, v139, v140, "ðŸ§­ FMFindingViewCtrl Haptics: Playing level increased haptic for ring 3", v141, 2u);
          MEMORY[0x253326010](v141, -1, -1);
        }

        id v142 = sub_24D39C930();
        os_log_type_t v143 = sub_24D39CDC0();
        if (os_log_type_enabled(v142, v143))
        {
          uint64_t v144 = swift_slowAlloc();
          *(_DWORD *)uint64_t v144 = 134218496;
          sub_24D39D070();
          *(_WORD *)(v144 + 12) = 2048;
          sub_24D39D070();
          *(_WORD *)(v144 + 22) = 2048;
          double v183 = v137;
          sub_24D39D070();
          _os_log_impl(&dword_24D2B1000, v142, v143, "ðŸ§­ FMFindingViewCtrl Haptics: Playing: curr:%f, old:%f, scale: %f", (uint8_t *)v144, 0x20u);
          MEMORY[0x253326010](v144, -1, -1);
        }

        id v145 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
        sub_24D303CF8();

        double v134 = sub_24D39C930();
        os_log_type_t v135 = sub_24D39CDC0();
        if (!os_log_type_enabled(v134, v135)) {
          goto LABEL_123;
        }
        id v136 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v136 = 134217984;
        double v183 = v137;
        goto LABEL_122;
      }
LABEL_77:
      int v106 = *(_DWORD *)(v7 + 96);
      double v107 = 0.0;
      if ((v106 | 0x2000000u) >> 25 != 3 && ((v106 & 0xFFFF0000) >> 16) <= 3u)
      {
        double v107 = *(double *)v7;
        sub_24D2B6F80(*(void *)v7, *(void *)(v7 + 8), *(void **)(v7 + 16), *(void **)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(void *)(v7 + 72), *(void *)(v7 + 80), *(void *)(v7 + 88), v106, SBYTE2(v106));
      }
      sub_24D333B7C((uint64_t)v206);
      double v108 = v207;
      id v109 = *(void **)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
      v205[3] = MEMORY[0x263F8D538];
      *(double *)id v205 = v207;
      id v110 = v109;
      sub_24D302CC0((uint64_t)v205, fmin(v107 * v107 * 1.8, 0.7), v108);
      sub_24D2B72E4(v161, v177, v22, v21, (uint64_t)v182, v175, v178, v176, v174, v28, v180, v179, v155);

      sub_24D2BBFB4((uint64_t)v205, &qword_269861850);
      return;
    case 2:
      uint64_t v37 = v33;
      uint64_t v150 = v32;
      id v165 = v21;
      int v38 = v8;
      uint64_t v39 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
      id v40 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
      sub_24D3044F0();

      unint64_t v41 = (v34 & 0xFF000000) - 0x4000000;
      if (((v41 >> 26) & 0x3FFF) != 0)
      {
        if ((*(void *)&v34 & 0xFF0000) == 0x20000)
        {
          sub_24D2B6F48(v173, v150, v160, v159, v167, v172, v170, v168, v166, v158, v157, v37, v34);
          sub_24D2B72E4(v20, v177, v22, v165, (uint64_t)v182, v175, v178, v176, v174, v28, v180, v179, v38);
          sub_24D2B72E4(v20, v177, v22, v165, (uint64_t)v182, v175, v178, v176, v174, v28, v180, v179, v38);
        }
        else
        {
          sub_24D2B72E4(v20, v177, v22, v165, (uint64_t)v182, v175, v178, v176, v174, v28, v180, v179, v38);
          sub_24D2B72E4(v20, v177, v22, v165, (uint64_t)v182, v175, v178, v176, v174, v28, v180, v179, v38);
LABEL_83:
          if (qword_2698602B0 != -1) {
            swift_once();
          }
          uint64_t v111 = sub_24D39C950();
          sub_24D2B508C(v111, (uint64_t)qword_269869FD0);
          __int16 v112 = sub_24D39C930();
          os_log_type_t v113 = sub_24D39CDC0();
          if (os_log_type_enabled(v112, v113))
          {
            uint64_t v114 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v114 = 0;
            _os_log_impl(&dword_24D2B1000, v112, v113, "ðŸ§­ FMFindingViewCtrl: Playing here haptic", v114, 2u);
            MEMORY[0x253326010](v114, -1, -1);
          }

          id v115 = *(id *)&v3[v39];
          sub_24D303CF8();
        }
      }
      else
      {
        int v42 = (unsigned __int16)(v41 >> 24);
        double v183 = *(double *)&v20;
        uint64_t v184 = v177;
        id v185 = v22;
        id v186 = v165;
        uint64_t v187 = (uint64_t)v182;
        uint64_t v188 = v175;
        uint64_t v189 = v178;
        uint64_t v190 = v176;
        uint64_t v191 = v174;
        uint64_t v192 = v28;
        uint64_t v193 = v180;
        uint64_t v194 = v179;
        char v196 = 2;
        __int16 v195 = v38;
        long long v197 = 0u;
        long long v198 = 0u;
        long long v199 = 0u;
        long long v200 = 0u;
        long long v201 = 0u;
        long long v202 = 0u;
        char v204 = -1;
        __int16 v203 = 0;
        sub_24D2B6F80(v20, v177, v22, v165, (uint64_t)v182, v175, v178, v176, v174, v28, v180, v179, v38, 2);
        sub_24D345258((uint64_t)&v183);
        switch(v42)
        {
          case 0:
            return;
          default:
            goto LABEL_83;
        }
      }
      return;
    case 3:
      id v181 = *(id *)&v3[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController];
      sub_24D301EAC();
      goto LABEL_14;
    case 4:
      int v43 = v34;
      uint64_t v44 = v33;
      uint64_t v45 = v32;
      int v46 = v8;
      sub_24D2B6FAC(v20, v19, v22, v21);
      uint64_t v33 = v44;
      int v34 = v43;
      int v18 = v46;
      uint64_t v32 = v45;
      goto LABEL_25;
    default:
LABEL_25:
      uint64_t v162 = v7;
      uint64_t v163 = v28;
      id v153 = v3;
      int v155 = v18;
      id v164 = v21;
      id v156 = v22;
      uint64_t v161 = v20;
      if ((v34 | 0x2000000u) >> 25 == 3) {
        goto LABEL_26;
      }
      goto LABEL_69;
  }
}

void sub_24D33BA18()
{
  uint64_t v1 = type metadata accessor for FMFindingViewState();
  MEMORY[0x270FA5388](v1);
  double v3 = (_WORD *)((char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for FMFindingSessionState();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v7 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_experienceType);
  if (v7 >= 2)
  {
    if (v7 == 2)
    {
      uint64_t v28 = v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
      swift_beginAccess();
      sub_24D2B6EA8(v28 + *(int *)(v1 + 32), (uint64_t)&v47);
      uint64_t v29 = *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
          + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
      swift_beginAccess();
      sub_24D34518C(v29, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
      uint64_t v30 = *((void *)v6 + 1);
      if (*(void *)(v30 + 16))
      {
        uint64_t v31 = (uint64_t)&v6[*(int *)(v4 + 36)];
        sub_24D2B7278((uint64_t)&v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
        unint64_t v32 = sub_24D3839F0(v31);
        if (v33)
        {
          sub_24D2B6CE8(*(void *)(v30 + 56) + 40 * v32, (uint64_t)v45);
          sub_24D2B6F04(v45, (uint64_t)v46);
          sub_24D34512C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
          int v34 = (uint64_t *)(v28 + *(int *)(v1 + 60));
          uint64_t v35 = *v34;
          uint64_t v36 = v34[1];
          swift_bridgeObjectRetain();
          sub_24D2B61C4((uint64_t)&v47, (uint64_t)v46, v35, v36);
          swift_bridgeObjectRelease();
          sub_24D2B7278((uint64_t)&v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
          sub_24D2B6E58((uint64_t)v46);
          return;
        }
      }
      else
      {
        sub_24D2B7278((uint64_t)&v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
      }
      sub_24D39D2B0();
      __break(1u);
    }
  }
  else
  {
    uint64_t v8 = v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    sub_24D34518C(v8, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    id v9 = (char *)v3 + *(int *)(v1 + 32);
    int v10 = *((_DWORD *)v9 + 24);
    if ((v10 & 0xFC000000) == 0x4000000) {
      goto LABEL_8;
    }
    uint64_t v11 = *((void *)v9 + 2);
    if ((*(void *)&v10 & 0xFF0000) != 0x40000 || v11 == 1) {
      goto LABEL_8;
    }
    uint64_t v13 = *((void *)v9 + 11);
    uint64_t v14 = *((void *)v9 + 10);
    int v15 = *((_DWORD *)v9 + 18);
    uint64_t v16 = *((void *)v9 + 8);
    int v17 = *((_DWORD *)v9 + 14);
    uint64_t v18 = *((void *)v9 + 6);
    char v19 = v9[40];
    uint64_t v20 = *((void *)v9 + 4);
    uint64_t v21 = *((void *)v9 + 3);
    int v22 = *((_DWORD *)v9 + 2);
    uint64_t v47 = *(void *)v9;
    char v48 = v22 & 1;
    uint64_t v49 = v11;
    uint64_t v50 = v21;
    uint64_t v51 = v20;
    char v52 = v19 & 1;
    uint64_t v53 = v18;
    __int16 v54 = v17 & 0x101;
    uint64_t v55 = v16;
    __int16 v56 = v15 & 0x101;
    char v57 = BYTE2(v15) & 1;
    uint64_t v58 = v14;
    uint64_t v59 = v13;
    __int16 v60 = v10 & 0x101;
    uint64_t v23 = sub_24D2BE430();
    if ((v24 & 0xFF00000000) == 0x200000000)
    {
LABEL_8:
      sub_24D34512C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
      uint64_t v25 = *(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView);
      uint64_t v26 = v25 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distance;
      if ((*(_DWORD *)(v8 + *(int *)(v1 + 32) + 96) | 0x2000000u) >> 25 == 3)
      {
        *(void *)uint64_t v26 = 0;
        *(unsigned char *)(v26 + 8) = 1;
        uint64_t v27 = v25 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_guide;
        *(_DWORD *)uint64_t v27 = 0;
        *(unsigned char *)(v27 + 4) = 1;
      }
      else
      {
        *(void *)uint64_t v26 = 0;
        *(unsigned char *)(v26 + 8) = 1;
        uint64_t v37 = v25 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_guide;
        *(_DWORD *)uint64_t v37 = 0x2000;
        *(unsigned char *)(v37 + 4) = 0;
      }
      *(unsigned char *)(v25 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_threshold) = 2;
      uint64_t v38 = *(void *)(v25 + OBJC_IVAR____TtC11FMFindingUI16FMR1DistanceView_distanceSpring);
      sub_24D2D9DA8(1.79769313e308);
      *(unsigned char *)(v38 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 0;
    }
    else
    {
      uint64_t v39 = v23;
      char v40 = BYTE4(v24);
      int v41 = *v3 & 0x8001;
      uint64_t v42 = v24;
      sub_24D34512C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
      LOBYTE(v45[0]) = 0;
      if (v41 == 0x8000) {
        uint64_t v43 = 1;
      }
      else {
        uint64_t v43 = v42;
      }
      sub_24D3674C0(v39, 0, v43, 1, v40 & 1);
    }
  }
}

void sub_24D33BF50(uint64_t a1, int a2)
{
  int v107 = a2;
  uint64_t v3 = type metadata accessor for FMFindingViewState();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  id v104 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v106 = (uint64_t)&v103 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v105 = (uint64_t)&v103 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  id v12 = (_WORD *)((char *)&v103 - v11);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  int v15 = (char *)&v103 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v103 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v103 - v19;
  uint64_t v109 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView;
  uint64_t v21 = *(void **)(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
  uint64_t v22 = a1;
  uint64_t v23 = a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  sub_24D34518C(v23, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  uint64_t v108 = v3;
  int v24 = *(_DWORD *)&v20[*(int *)(v3 + 32) + 96];
  uint64_t v25 = v21;
  sub_24D34512C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  uint64_t v26 = *(void **)&v25[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v26)
  {
    if ((v24 & 0xFC000000) == 0x4000000) {
      double v27 = 0.0;
    }
    else {
      double v27 = 1.0;
    }
    uint64_t v28 = v26;
    sub_24D34B4EC(1, v27);

    uint64_t v25 = v28;
  }

  sub_24D34518C(v23, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  *(double *)&uint64_t v29 = COERCE_DOUBLE(sub_24D3945E4());
  char v31 = v30;
  sub_24D34512C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  char v32 = v107;
  if ((v31 & 1) == 0)
  {
    char v33 = *(char **)(a1 + v109);
    int v34 = *(void **)&v33[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v34)
    {
      double v35 = *(double *)&v29;
      uint64_t v36 = v33;
      id v37 = v34;
      sub_24D349A48(0, v35);
    }
  }
  sub_24D34518C(v23, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  *(double *)&uint64_t v38 = COERCE_DOUBLE(sub_24D394844());
  char v40 = v39;
  sub_24D34512C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  if ((v40 & 1) == 0)
  {
    double v41 = *(double *)&v38;
    uint64_t v42 = *(char **)(v22 + v109);
    uint64_t v43 = *(void **)&v42[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    uint64_t v44 = v42;
    if (v43)
    {
      id v45 = v43;
      sub_24D349C88(v32 & 1, v41);
    }
    v42[OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity] = v41 > 0.0;
    sub_24D3614B4(1);
  }
  sub_24D34518C(v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  if ((*v12 & 0x8001) == 0x8000
    || (int v46 = (char *)v12 + *(int *)(v108 + 32), v47 = *((_DWORD *)v46 + 24), (v47 & 0xFC000000) == 0x4000000)
    || ((*(void *)&v47 & 0xFF0000) == 0x40000 ? (BOOL v48 = *((void *)v46 + 2) == 1) : (BOOL v48 = 1),
        !v48 ? (BOOL v49 = (*((void *)v46 + 5) & 1) == 0) : (BOOL v49 = 1),
        v49))
  {
    sub_24D34512C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    uint64_t v53 = (uint64_t)v104;
  }
  else
  {
    uint64_t v50 = *((void *)v46 + 4);
    sub_24D34512C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    uint64_t v51 = *(char **)(v22 + v109);
    char v52 = *(void **)&v51[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    uint64_t v53 = (uint64_t)v104;
    if (v52)
    {
      __int16 v54 = v51;
      id v55 = v52;
      sub_24D349CB0(v50, 0, 1);
    }
  }
  uint64_t v56 = v105;
  sub_24D34518C(v23, v105, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  *(double *)&uint64_t v57 = COERCE_DOUBLE(sub_24D394AC4());
  char v59 = v58;
  sub_24D34512C(v56, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  __int16 v60 = *(char **)(v22 + v109);
  if ((v59 & 1) != 0 || (double v61 = *(void **)&v60[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene]) == 0)
  {
    char v65 = v32;
  }
  else
  {
    double v62 = *(double *)&v57;
    uint64_t v63 = v60;
    id v64 = v61;
    char v65 = v32;
    sub_24D349D68(v32 & 1, v62);

    __int16 v60 = *(char **)(v22 + v109);
  }
  uint64_t v66 = v106;
  sub_24D34518C(v23, v106, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  id v67 = v60;
  uint64_t v68 = sub_24D394FDC();
  int v70 = v69 & 1;
  sub_24D34512C(v66, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  uint64_t v71 = &v67[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedRadiusFactor];
  *(void *)uint64_t v71 = v68;
  v71[8] = v70;
  v67[OBJC_IVAR____TtC11FMFindingUI8FMPFView_lastAskedSprungRadiusFactor] = 1;
  uint64_t v72 = *(void **)&v67[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v72)
  {
    double v73 = v72;
    sub_24D34A3D4(v68, v70, 1);

    id v67 = v73;
  }

  sub_24D34518C(v23, v53, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  uint64_t v74 = v53 + *(int *)(v108 + 32);
  int v75 = *(_DWORD *)(v74 + 96);
  if ((v75 & 0xFC000000) == 0x4000000 || (*(void *)&v75 & 0xFF0000) != 0x40000 || *(void *)(v74 + 16) == 1)
  {
    sub_24D34512C(v53, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    uint64_t v81 = v109;
    os_log_type_t v82 = *(unsigned char **)(v22 + v109);
    v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown] = 0;
    id v88 = &v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSpringsIntensity];
    *(void *)id v88 = 0;
    v88[8] = 0;
    os_log_type_t v89 = *(void **)&v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v89)
    {
      uint64_t v86 = v82;
      id v90 = v89;
      sub_24D34ACAC(0);

      goto LABEL_47;
    }
  }
  else
  {
    uint64_t v76 = *(void *)(v74 + 56);
    double v77 = (*(double *)(v74 + 80) + -1.0) * 0.5;
    double v78 = 1.0 - v77;
    if (v77 >= 1.0) {
      double v78 = 0.0;
    }
    if (v77 < 0.0) {
      double v79 = 1.0;
    }
    else {
      double v79 = v78;
    }
    if ((v76 & 0x101) != 0) {
      double v80 = v79;
    }
    else {
      double v80 = 0.0;
    }
    sub_24D34512C(v53, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    uint64_t v81 = v109;
    os_log_type_t v82 = *(unsigned char **)(v22 + v109);
    v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown] = 1;
    double v83 = (double *)&v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSpringsIntensity];
    *double v83 = v80;
    *((unsigned char *)v83 + 8) = 0;
    id v84 = *(void **)&v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v84)
    {
      char v85 = v76 & 1;
      uint64_t v86 = v82;
      id v87 = v84;
      sub_24D34ACAC(v85);

      goto LABEL_47;
    }
  }
  uint64_t v86 = v82;
LABEL_47:
  sub_24D3614B4(v65 & 1);

  id v91 = (char *)*(id *)(v22 + v81);
  sub_24D333B7C((uint64_t)v110);
  id v92 = *(void **)&v91[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v92)
  {
    double v93 = v111;
    id v94 = v92;
    sub_24D34A964(v65 & 1, v93);

    id v91 = v94;
  }

  int v95 = (char *)*(id *)(v22 + v81);
  sub_24D333B7C((uint64_t)v112);
  id v96 = *(void **)&v95[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v96)
  {
    double v97 = v113;
    uint64_t v98 = v96;
    sub_24D34A810(v65 & 1, v97);

    int v95 = v98;
  }

  int v99 = (char *)*(id *)(v22 + v81);
  sub_24D333B7C((uint64_t)v114);
  int v100 = *(void **)&v99[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v100)
  {
    double v101 = v114[0];
    uint64_t v102 = v100;
    sub_24D34A6F0(v65 & 1, v101);

    int v99 = v102;
  }
}

void sub_24D33C7C0(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a2 + *(int *)(type metadata accessor for FMFindingViewState() + 32);
  sub_24D2B6EA8(v5, (uint64_t)v153);
  uint64_t v149 = *(void *)(v5 + 8);
  uint64_t v150 = *(void *)v5;
  char v147 = *(void **)(v5 + 24);
  int v148 = *(void **)(v5 + 16);
  uint64_t v145 = *(void *)(v5 + 40);
  uint64_t v146 = *(void *)(v5 + 32);
  uint64_t v143 = *(void *)(v5 + 56);
  uint64_t v144 = *(void *)(v5 + 48);
  uint64_t v141 = *(void *)(v5 + 72);
  uint64_t v142 = *(void *)(v5 + 64);
  uint64_t v140 = *(void *)(v5 + 80);
  int v138 = *(_DWORD *)(v5 + 96);
  uint64_t v139 = *(void *)(v5 + 88);
  sub_24D2F7DCC((uint64_t)&v151);
  uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView;
  uint64_t v7 = *(unsigned char **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
  v7[OBJC_IVAR____TtC11FMFindingUI8FMPFView_isConvergingBackdropShown] = 0;
  uint64_t v8 = &v7[OBJC_IVAR____TtC11FMFindingUI8FMPFView_backdropRGBAColorSpringsIntensity];
  *(void *)uint64_t v8 = 0;
  v8[8] = 0;
  uint64_t v9 = *(void **)&v7[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  uint64_t v10 = v7;
  if (v9)
  {
    id v11 = v9;
    sub_24D34ACAC(0);
  }
  sub_24D3614B4(a1 & 1);

  id v12 = self;
  id v13 = objc_msgSend(v12, sel_mainScreen);
  uint64_t v14 = (void *)sub_24D39CAC0();
  int v137 = MGGetSInt32Answer();

  id v15 = objc_msgSend(v12, sel_mainScreen);
  objc_msgSend(v15, sel_nativeScale);
  double v17 = v16;

  uint64_t v18 = self;
  id v19 = objc_msgSend(v18, sel_currentDevice);
  BOOL v136 = objc_msgSend(v19, sel_userInterfaceIdiom) == (id)1;

  id v20 = objc_msgSend(v12, sel_mainScreen);
  objc_msgSend(v20, sel_bounds);
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;

  v158.origin.x = v22;
  v158.origin.y = v24;
  v158.size.width = v26;
  v158.size.height = v28;
  double Width = CGRectGetWidth(v158);
  id v30 = objc_msgSend(v12, sel_mainScreen);
  objc_msgSend(v30, sel_bounds);
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;
  CGFloat v38 = v37;

  v159.origin.x = v32;
  v159.origin.y = v34;
  v159.size.width = v36;
  v159.size.height = v38;
  double v39 = CGRectGetWidth(v159);
  sub_24D2B6EA8((uint64_t)v153, (uint64_t)v156);
  double v40 = 0.0;
  if ((v157 & 0xFC000000 | 0x2000000) != 0x6000000 && (v157 & 0xFC0000) == 0)
  {
    double v40 = v156[0];
    sub_24D2B6F80(v150, v149, v148, v147, v146, v145, v144, v143, v142, v141, v140, v139, v138, SBYTE2(v138));
  }
  id v41 = objc_msgSend(v18, sel_currentDevice);
  id v42 = objc_msgSend(v41, sel_userInterfaceIdiom);

  if (v42 == (id)1) {
    double v43 = 0.75;
  }
  else {
    double v43 = 0.45;
  }
  id v44 = objc_msgSend(v18, sel_currentDevice);
  id v45 = objc_msgSend(v44, sel_userInterfaceIdiom);

  if (v45 == (id)1) {
    double v46 = 0.3;
  }
  else {
    double v46 = 0.135;
  }
  sub_24D2B6EA8((uint64_t)v153, (uint64_t)v154);
  char v47 = BYTE2(v155);
  if ((v155 & 0xFF000000) != 0x4000000)
  {
    if ((v155 & 0xFF000000) == 0x5000000)
    {
      BOOL v48 = *(char **)(v3 + v6);
      BOOL v49 = *(void **)&v48[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v49
        && (uint64_t v50 = v48,
            id v51 = v49,
            sub_24D34B4EC(1, 1.0),
            v50,
            v51,
            BOOL v48 = *(char **)(v3 + v6),
            (char v52 = *(void **)&v48[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene]) != 0))
      {
        uint64_t v53 = v48;
        id v54 = v52;
        sub_24D349C88(1, 0.0);
      }
      else
      {
        uint64_t v53 = v48;
      }
      v53[OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity] = 0;
      sub_24D3614B4(1);

      os_log_type_t v82 = *(char **)(v3 + v6);
      double v83 = *(void **)&v82[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v83)
      {
        id v84 = v82;
        id v85 = v83;
        sub_24D349D68(0, 0.0);

        uint64_t v86 = *(char **)(v3 + v6);
        id v87 = *(void **)&v86[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
        if (v87)
        {
          id v88 = v86;
          id v89 = v87;
          sub_24D34A964(a1 & 1, 0.0);

          id v90 = *(char **)(v3 + v6);
          id v91 = *(void **)&v90[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
          if (v91)
          {
            double v92 = v152;
            double v93 = v90;
            id v94 = v91;
            sub_24D34A810(0, v92);

            int v95 = *(char **)(v3 + v6);
            id v96 = *(void **)&v95[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
            if (v96)
            {
              double v97 = v151;
              double v78 = v95;
              id v79 = v96;
              double v80 = v97;
              char v81 = 0;
              goto LABEL_33;
            }
          }
        }
      }
      return;
    }
    if ((v155 & 0xFE000000) != 0x6000000)
    {
      double v98 = dbl_24D3A3760[v136] * (double)v137 / v17;
      int v99 = *(char **)(v3 + v6);
      int v100 = *(void **)&v99[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v100)
      {
        sub_24D2B7278((uint64_t)v153, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B6F48);
        double v101 = v99;
        id v102 = v100;
        sub_24D34B4EC(1, 1.0);
      }
      else
      {
        sub_24D2B6F80(v150, v149, v148, v147, v146, v145, v144, v143, v142, v141, v140, v139, v138, SBYTE2(v138));
      }
      double v103 = 32.0 / Width;
      id v104 = *(char **)(v3 + v6);
      uint64_t v105 = *(void **)&v104[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      double v106 = v98 / v39;
      int v107 = v104;
      if (v105)
      {
        id v108 = v105;
        sub_24D349C88(a1 & 1, 1.0);
      }
      v104[OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity] = 1;
      sub_24D3614B4(1);

      uint64_t v109 = *(char **)(v3 + v6);
      id v110 = *(void **)&v109[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v110)
      {
        double v111 = v109;
        id v112 = v110;
        sub_24D349D68(0, 1.0);

        double v113 = *(char **)(v3 + v6);
        uint64_t v114 = *(void **)&v113[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
        if (v114)
        {
          id v115 = v113;
          id v116 = v114;
          sub_24D34A964(a1 & 1, 1.0);
        }
      }
      switch(v47)
      {
        case 1:
          uint64_t v132 = *(char **)(v3 + v6);
          id v133 = *(void **)&v132[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
          if (!v133) {
            return;
          }
          double v134 = v132;
          id v135 = v133;
          sub_24D34A6F0(1, (v103 + v106) * 0.5);

          id v129 = *(char **)(v3 + v6);
          double v130 = *(void **)&v129[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
          if (!v130) {
            return;
          }
          double v131 = v46 + (v40 + -0.5 + v40 + -0.5) * (v43 - v46);
          break;
        case 2:
        case 3:
          uint64_t v117 = *(char **)(v3 + v6);
          id v118 = *(void **)&v117[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
          if (v118
            && (os_log_type_t v119 = v117,
                id v120 = v118,
                sub_24D34A6F0(1, v106),
                v119,
                v120,
                uint64_t v121 = *(char **)(v3 + v6),
                (os_log_type_t v122 = *(void **)&v121[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene]) != 0))
          {
            uint64_t v123 = v121;
            id v124 = v122;
            sub_24D34A810(1, v43);

            sub_24D2B7278((uint64_t)v153, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
          }
          else
          {
            sub_24D2B7278((uint64_t)v153, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_24D2B72E4);
          }
          return;
        case 4:
          sub_24D39D2B0();
          __break(1u);
          JUMPOUT(0x24D33D228);
        default:
          double v125 = *(char **)(v3 + v6);
          uint64_t v126 = *(void **)&v125[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
          if (!v126) {
            return;
          }
          id v127 = v125;
          id v128 = v126;
          sub_24D34A6F0(1, v103 + ((v103 + v106) * 0.5 - v103) * (v40 + v40));

          id v129 = *(char **)(v3 + v6);
          double v130 = *(void **)&v129[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
          if (!v130) {
            return;
          }
          double v131 = (v40 + v40) * v46 + 0.0;
          break;
      }
      double v78 = v129;
      id v79 = v130;
      sub_24D34A810(1, v131);
      goto LABEL_54;
    }
  }
  id v55 = *(char **)(v3 + v6);
  uint64_t v56 = *(void **)&v55[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v56
    && (uint64_t v57 = v55,
        id v58 = v56,
        sub_24D34B4EC(1, 0.0),
        v57,
        v58,
        id v55 = *(char **)(v3 + v6),
        (char v59 = *(void **)&v55[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene]) != 0))
  {
    __int16 v60 = v55;
    id v61 = v59;
    sub_24D349C88(1, 0.0);
  }
  else
  {
    __int16 v60 = v55;
  }
  v60[OBJC_IVAR____TtC11FMFindingUI8FMPFView_useGreenBackdropBlurAndOpacity] = 0;
  sub_24D3614B4(1);

  double v62 = *(char **)(v3 + v6);
  uint64_t v63 = *(void **)&v62[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
  if (v63)
  {
    id v64 = v62;
    id v65 = v63;
    sub_24D349D68(0, 0.0);

    uint64_t v66 = *(char **)(v3 + v6);
    id v67 = *(void **)&v66[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v67)
    {
      uint64_t v68 = v66;
      id v69 = v67;
      sub_24D34A964(a1 & 1, 0.0);

      int v70 = *(char **)(v3 + v6);
      uint64_t v71 = *(void **)&v70[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v71)
      {
        double v72 = v152;
        double v73 = v70;
        id v74 = v71;
        sub_24D34A810(1, v72);

        int v75 = *(char **)(v3 + v6);
        uint64_t v76 = *(void **)&v75[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
        if (v76)
        {
          double v77 = v151;
          double v78 = v75;
          id v79 = v76;
          double v80 = v77;
          char v81 = 1;
LABEL_33:
          sub_24D34A6F0(v81, v80);
LABEL_54:
        }
      }
    }
  }
}

void sub_24D33D23C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (__int16 *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state);
  swift_beginAccess();
  uint64_t v3 = type metadata accessor for FMFindingViewState();
  unint64_t v4 = *(unsigned int *)((char *)v2 + *(int *)(v3 + 32) + 96) | ((unint64_t)*((unsigned __int8 *)v2
                                                                                   + *(int *)(v3 + 32)
                                                                                   + 100) << 32);
  if ((*(_DWORD *)((unsigned char *)v2 + *(int *)(v3 + 32) + 96) & 0xFE000000) == 0x4000000)
  {
    uint64_t v5 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController;
    uint64_t v6 = *(unsigned char **)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController);
    uint64_t v7 = v6[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected];
    v6[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected] = 0;
    uint64_t v8 = v6;
    sub_24D36BBF8(v7);

    uint64_t v9 = *(unsigned char **)(v1 + v5);
    LOBYTE(v7) = v9[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isRanging];
    v9[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isRanging] = 0;
    uint64_t v10 = v9;
    sub_24D36C2EC(v7);

    id v11 = *(unsigned char **)(v1 + v5);
    uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState;
    char v13 = v11[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState];
    char v14 = 1;
LABEL_14:
    v11[v12] = v14;
    goto LABEL_15;
  }
  uint64_t v15 = v3;
  if ((*(_DWORD *)((unsigned char *)v2 + *(int *)(v3 + 32) + 96) & 0xFF000000) == 0x6000000)
  {
    if ((*v2 & 0x80000000) == 0) {
      return;
    }
    if (*((unsigned char *)v2 + *(int *)(v3 + 44)))
    {
      char v16 = sub_24D39D4B0();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0) {
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    id v11 = *(unsigned char **)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController);
    uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState;
    char v13 = v11[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState];
    char v14 = 2;
    goto LABEL_14;
  }
  if ((*(_DWORD *)((unsigned char *)v2 + *(int *)(v3 + 32) + 96) & 0xFF000000) == 0x7000000)
  {
    id v11 = *(unsigned char **)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController);
    uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState;
    char v13 = v11[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState];
    char v14 = 4;
    goto LABEL_14;
  }
  uint64_t v17 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController;
  uint64_t v18 = *(unsigned char **)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsController);
  uint64_t v19 = v18[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected];
  v18[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isBTConnected] = 1;
  id v20 = v18;
  sub_24D36BBF8(v19);

  char v21 = 0;
  switch(sub_24D394298())
  {
    case 1u:
    case 2u:
    case 3u:
      char v23 = sub_24D39D4B0();
      swift_bridgeObjectRelease();
      char v21 = 0;
      if (v23) {
        goto LABEL_19;
      }
      break;
    case 4u:
      break;
    default:
      swift_bridgeObjectRelease();
LABEL_19:
      int v24 = *((unsigned __int8 *)v2 + *(int *)(v15 + 36));
      if (v24 == 10)
      {
        char v21 = 0;
      }
      else if (sub_24D30E1A8(v24) == 0xD000000000000018 && v25 == 0x800000024D3A4B50)
      {
        swift_bridgeObjectRelease();
        char v21 = 1;
      }
      else
      {
        char v21 = sub_24D39D4B0();
        swift_bridgeObjectRelease();
      }
      break;
  }
  if (HIDWORD(v4) != 2)
  {
    if (HIDWORD(v4) == 3)
    {
      CGFloat v26 = *(unsigned char **)(v1 + v17);
      if (v21) {
        char v27 = 1;
      }
      else {
        char v27 = 10;
      }
      uint64_t v28 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState;
    }
    else
    {
      CGFloat v26 = *(unsigned char **)(v1 + v17);
      if ((v4 & 0x100000000) != 0) {
        char v27 = 8;
      }
      else {
        char v27 = 9;
      }
      if ((v21 & 1) == 0) {
        char v27 = 10;
      }
      uint64_t v28 = OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState;
    }
    char v30 = v26[v28];
    v26[v28] = v27;
    double v31 = v26;
    sub_24D36C520(v30);

    CGFloat v32 = *(unsigned char **)(v1 + v17);
    char v33 = v32[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isRanging];
    v32[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_isRanging] = (v21 & 1) == 0;
    CGFloat v22 = v32;
    sub_24D36C2EC(v33);
    goto LABEL_16;
  }
  id v11 = *(unsigned char **)(v1 + v17);
  if (v21) {
    char v29 = 2;
  }
  else {
    char v29 = 10;
  }
  char v13 = v11[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState];
  v11[OBJC_IVAR____TtC11FMFindingUI26FMR1InstructionsController_inState] = v29;
LABEL_15:
  CGFloat v22 = v11;
  sub_24D36C520(v13);
LABEL_16:
}

void sub_24D33D6BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24D39C8A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMFindingSessionState();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)v72 - v10;
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
      + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_state;
  swift_beginAccess();
  sub_24D34518C(v12, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
  uint64_t v13 = *((void *)v11 + 1);
  swift_bridgeObjectRetain_n();
  char v14 = sub_24D3591B0(v13);
  swift_bridgeObjectRelease();
  *(void *)&long long v86 = v14;
  sub_24D342008((void **)&v86);
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)v86;
  sub_24D34512C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
  char v16 = (void **)v15[2];
  if ((unint64_t)v16 > 1)
  {
    id v11 = (char *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state);
    swift_beginAccess();
    uint64_t v84 = type metadata accessor for FMFindingViewState();
    if (v11[*(int *)(v84 + 28)] == 1)
    {
      uint64_t v83 = sub_24D2BB880((uint64_t)v15);
      if (v83)
      {
        char v16 = (void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerView);
        uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerView);
        char v81 = v11;
        uint64_t v82 = v3;
        if (v18)
        {
          double v77 = v5;
          double v78 = v17;
          id v79 = (uint8_t *)v2;
          double v80 = (void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerView);
          uint64_t v19 = v16[1];
          uint64_t ObjectType = swift_getObjectType();
          char v21 = (uint64_t (*)(uint64_t, void *))v19[4];
          id v22 = v18;
          uint64_t v23 = v21(ObjectType, v19);
          uint64_t v24 = sub_24D333694(v23);
          swift_bridgeObjectRelease();
          uint64_t v25 = sub_24D333694((uint64_t)v15);
          char v26 = sub_24D33E184(v24, v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (ObjectType != v83) {
            goto LABEL_19;
          }
          if (v26)
          {
            objc_msgSend(v22, sel_removeFromSuperview);
            char v16 = v80;
            char v27 = *v80;
            void *v80 = 0;
            v16[1] = 0;

            if (qword_2698602B0 != -1) {
              swift_once();
            }
            uint64_t v28 = sub_24D39C950();
            sub_24D2B508C(v28, (uint64_t)qword_269869FD0);
            os_log_t v29 = (os_log_t)v22;
            char v30 = sub_24D39C930();
            os_log_type_t v31 = sub_24D39CDF0();
            int v32 = v31;
            BOOL v33 = os_log_type_enabled(v30, v31);
            id v11 = v81;
            uint64_t v3 = v82;
            uint64_t v5 = v77;
            if (v33)
            {
              uint64_t v34 = swift_slowAlloc();
              os_log_t v75 = v30;
              uint64_t v35 = v34;
              uint64_t v76 = swift_slowAlloc();
              *(void *)&long long v86 = v76;
              *(_DWORD *)uint64_t v35 = 136315394;
              v72[1] = v35 + 4;
              uint64_t v36 = sub_24D39D630();
              int v73 = v32;
              uint64_t v85 = sub_24D2B8328(v36, v37, (uint64_t *)&v86);
              sub_24D39D070();
              os_log_t v74 = v29;

              swift_bridgeObjectRelease();
              *(_WORD *)(v35 + 12) = 2080;
              uint64_t v38 = sub_24D39D630();
              uint64_t v85 = sub_24D2B8328(v38, v39, (uint64_t *)&v86);
              char v16 = v80;
              sub_24D39D070();
              swift_bridgeObjectRelease();
              os_log_t v29 = v75;
              _os_log_impl(&dword_24D2B1000, v75, (os_log_type_t)v73, "FMFindingViewCtrl: Replacing picker view, old: %s new: %s", (uint8_t *)v35, 0x16u);
              uint64_t v40 = v76;
              swift_arrayDestroy();
              MEMORY[0x253326010](v40, -1, -1);
              MEMORY[0x253326010](v35, -1, -1);
            }
            else
            {
            }
            uint64_t v2 = (uint64_t)v79;
          }
          else
          {
LABEL_19:

            uint64_t v2 = (uint64_t)v79;
            char v16 = v80;
            id v11 = v81;
            uint64_t v3 = v82;
            uint64_t v5 = v77;
          }
          uint64_t v17 = v78;
          if (*v16)
          {
            swift_release();
            goto LABEL_26;
          }
        }
        double v46 = v15;
        char v47 = v17;
        BOOL v48 = (void *)v17[5](v46);
        objc_msgSend(v48, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        objc_msgSend(v48, sel_addTarget_action_forControlEvents_, v1, sel_handlePartPickerWithSender_, 4096);
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer), sel_addArrangedSubview_, v48);
        BOOL v49 = *v16;
        *char v16 = v48;
        v16[1] = v47;
        uint64_t v15 = v48;

        if (qword_2698602B0 == -1)
        {
LABEL_23:
          uint64_t v50 = sub_24D39C950();
          sub_24D2B508C(v50, (uint64_t)qword_269869FD0);
          id v51 = sub_24D39C930();
          os_log_type_t v52 = sub_24D39CDF0();
          if (os_log_type_enabled(v51, v52))
          {
            uint64_t v53 = swift_slowAlloc();
            double v80 = (void **)v15;
            id v54 = (uint8_t *)v53;
            uint64_t v55 = swift_slowAlloc();
            *(void *)&long long v86 = v55;
            *(_DWORD *)id v54 = 136315138;
            id v79 = v54 + 4;
            uint64_t v56 = sub_24D39D630();
            uint64_t v85 = sub_24D2B8328(v56, v57, (uint64_t *)&v86);
            sub_24D39D070();
            id v11 = v81;
            uint64_t v3 = v82;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24D2B1000, v51, v52, "ðŸ§­ FMFindingViewCtrl: Installed new picker view: %s", v54, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x253326010](v55, -1, -1);
            MEMORY[0x253326010](v54, -1, -1);
          }
          else
          {
          }
LABEL_26:
          id v58 = *v16;
          if (*v16)
          {
            char v59 = (void (**)(_OWORD *, uint64_t, void *))v16[1];
            uint64_t v60 = *(void *)(v12 + 8);
            (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v11[*(int *)(v84 + 20)], v2);
            if (*(void *)(v60 + 16))
            {
              id v61 = v58;
              swift_bridgeObjectRetain();
              unint64_t v62 = sub_24D3839F0((uint64_t)v5);
              if (v63)
              {
                sub_24D2B6CE8(*(void *)(v60 + 56) + 40 * v62, (uint64_t)&v86);
              }
              else
              {
                uint64_t v88 = 0;
                long long v86 = 0u;
                long long v87 = 0u;
              }
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v88 = 0;
              long long v86 = 0u;
              long long v87 = 0u;
              id v64 = v58;
            }
            uint64_t v65 = swift_getObjectType();
            (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
            v59[2](&v86, v65, v59);
          }
          return;
        }
LABEL_47:
        swift_once();
        goto LABEL_23;
      }
    }
  }
  id v41 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer), sel_subviews);
  sub_24D2BC100(0, &qword_269862760);
  unint64_t v42 = sub_24D39CC10();

  if (v42 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_24D39D2D0();
    if (!v3) {
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_37;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_47;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v42 & 0xC000000000000001) != 0) {
      id v44 = (id)MEMORY[0x253325220](i, v42);
    }
    else {
      id v44 = *(id *)(v42 + 8 * i + 32);
    }
    id v45 = v44;
    objc_msgSend(v44, sel_removeFromSuperview);
  }
LABEL_37:
  swift_bridgeObjectRelease_n();
  sub_24D34518C(v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
  sub_24D2BBF50((uint64_t)(v9 + 24), (uint64_t)&v86, &qword_269860AA8);
  uint64_t v66 = *((void *)&v87 + 1);
  sub_24D2BBFB4((uint64_t)&v86, &qword_269860AA8);
  if (v66) {
    BOOL v67 = 0;
  }
  else {
    BOOL v67 = *(void *)(*((void *)v9 + 2) + 16) > 1uLL;
  }
  sub_24D34512C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFindingSessionState);
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v68 = sub_24D39C950();
  sub_24D2B508C(v68, (uint64_t)qword_269869FD0);
  swift_retain();
  id v69 = sub_24D39C930();
  os_log_type_t v70 = sub_24D39CDD0();
  if (os_log_type_enabled(v69, v70))
  {
    uint64_t v71 = swift_slowAlloc();
    *(_DWORD *)uint64_t v71 = 134218240;
    swift_release();
    *(void *)&long long v86 = v16;
    sub_24D39D070();
    swift_release();
    *(_WORD *)(v71 + 12) = 1024;
    LODWORD(v86) = v67;
    sub_24D39D070();
    _os_log_impl(&dword_24D2B1000, v69, v70, "FMFindingViewCtrl: Hiding picker view, findables count: %ld shouldShowPartPicker: %{BOOL}d", (uint8_t *)v71, 0x12u);
    MEMORY[0x253326010](v71, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_24D33E184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D39C8A0();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      os_log_type_t v31 = v7;
      int v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      char v30 = (void (**)(char *, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v9;
        id v20 = v9;
        char v21 = v32;
        v32(v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_24D344A38((unint64_t *)&qword_2698613A0, MEMORY[0x263F07508]);
        char v23 = sub_24D39CAB0();
        uint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24(v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

void sub_24D33E3A4()
{
  unsigned int v1 = *(unsigned __int16 *)(*(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
                           + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  int v2 = (__int16)v1;
  int v3 = (v1 >> 8) & 0x7F;
  if (v2 >= 0) {
    int v3 = *(_WORD *)(*(void *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
  }
                                   + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_findingTechnology);
  if (v3 == 2)
  {
    sub_24D309948(1);
  }
  else
  {
    uint64_t v4 = (unsigned char *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
    swift_beginAccess();
    if (*v4)
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_24D39C950();
      sub_24D2B508C(v8, (uint64_t)qword_269869FD0);
      uint64_t v9 = sub_24D39C930();
      os_log_type_t v10 = sub_24D39CDF0();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl(&dword_24D2B1000, v9, v10, "ðŸ§­ FMFindingViewCtrl: Ignoring play sound button state update since play sound action is in progress.", v11, 2u);
        MEMORY[0x253326010](v11, -1, -1);
      }
    }
    else
    {
      uint64_t v5 = v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
      swift_beginAccess();
      unsigned int v6 = *(_DWORD *)(v5 + *(int *)(type metadata accessor for FMFindingViewState() + 32) + 96) & 0xFE000000;
      if (v6 == 0x4000000)
      {
        char v7 = 0;
      }
      else
      {
        if (v6 == 100663296) {
          return;
        }
        char v7 = 1;
      }
      sub_24D309948(v7);
    }
  }
}

void sub_24D33E570()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FMFindingViewState();
  if (sub_24D39C870())
  {
    uint64_t v3 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
    swift_beginAccess();
    uint64_t v4 = v3 + *(int *)(v2 + 32);
    int v5 = *(_DWORD *)(v4 + 96);
    if ((v5 & 0xFF000000) == 0x4000000)
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_24D39C950();
      sub_24D2B508C(v10, (uint64_t)qword_269869FD0);
      uint64_t v11 = sub_24D39C930();
      os_log_type_t v12 = sub_24D39CDC0();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl(&dword_24D2B1000, v11, v12, "FMFindingViewCtrl: Requesting scatter haptic.", v13, 2u);
        MEMORY[0x253326010](v13, -1, -1);
      }

      id v6 = *(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
      sub_24D301658();
      goto LABEL_17;
    }
    if ((v5 & 0xFF000000) == 0x5000000)
    {
      id v6 = *(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
      sub_24D3044F0();
LABEL_17:

      return;
    }
    int v14 = *(_DWORD *)(v4 + 96);
    if ((v5 & 0xFE000000) != 0x6000000)
    {
      uint64_t v15 = *(void *)v4;
      uint64_t v16 = *(void *)(v4 + 8);
      uint64_t v18 = *(void **)(v4 + 16);
      uint64_t v17 = *(void **)(v4 + 24);
      uint64_t v19 = *(void *)(v4 + 32);
      uint64_t v20 = *(void *)(v4 + 40);
      uint64_t v22 = *(void *)(v4 + 48);
      uint64_t v21 = *(void *)(v4 + 56);
      uint64_t v23 = *(void *)(v4 + 64);
      uint64_t v24 = *(void *)(v4 + 72);
      uint64_t v25 = *(void *)(v4 + 80);
      uint64_t v26 = *(void *)(v4 + 88);
      uint64_t v54 = v24;
      oslogSCNMatrix4 a = (os_log_t)v23;
      uint64_t v52 = v26;
      uint64_t v53 = v25;
      if (((v5 & 0xFFFF0000) >> 16) == 3)
      {
        char v27 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
        uint64_t v28 = *(void *)v4;
        uint64_t v29 = *(void *)(v4 + 56);
        sub_24D2B6F48(v15, v16, v18, v17, v19, v20, v22, v21, v23, v24, v25, v26, v5);
        id v30 = v27;
        sub_24D301EAC();

        sub_24D2B72E4(v28, v16, v18, v17, v19, v20, v22, v29, (uint64_t)osloga, v54, v53, v52, v14);
        return;
      }
      uint64_t v50 = *(void *)(v4 + 8);
      uint64_t v51 = *(void *)v4;
      if (HIBYTE(v5) == 2)
      {
        id v45 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
        uint64_t v33 = *(void **)(v4 + 16);
        uint64_t v35 = *(void **)(v4 + 24);
        uint64_t v37 = *(void *)(v4 + 32);
        uint64_t v39 = *(void *)(v4 + 40);
        uint64_t v41 = *(void *)(v4 + 48);
        uint64_t v43 = *(void *)(v4 + 56);
        sub_24D2B6F48(v15, *(void *)(v4 + 8), v33, v35, v37, v39, v41, v21, v23, v24, v25, v26, v5);
        id v46 = v45;
        sub_24D303D68();
      }
      else
      {
        if (HIBYTE(v5) != 1)
        {
          uint64_t v33 = *(void **)(v4 + 16);
          uint64_t v35 = *(void **)(v4 + 24);
          uint64_t v37 = *(void *)(v4 + 32);
          uint64_t v39 = *(void *)(v4 + 40);
          uint64_t v41 = *(void *)(v4 + 48);
          uint64_t v43 = *(void *)(v4 + 56);
          sub_24D2B6F80(v15, *(void *)(v4 + 8), v33, v35, v37, v39, v41, v21, v23, v24, v25, v26, v5, SBYTE2(v5));
          goto LABEL_29;
        }
        if (BYTE2(v14) != 1)
        {
          os_log_type_t v31 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
          memset(v60, 0, sizeof(v60));
          uint64_t v32 = v16;
          uint64_t v33 = v18;
          uint64_t v34 = v18;
          uint64_t v35 = v17;
          uint64_t v36 = v17;
          uint64_t v37 = v19;
          uint64_t v38 = v19;
          uint64_t v39 = v20;
          uint64_t v40 = v20;
          uint64_t v41 = v22;
          uint64_t v42 = v22;
          uint64_t v43 = v21;
          sub_24D2B6F48(v15, v32, v34, v36, v38, v40, v42, v21, v23, v24, v25, v26, v14);
          id v44 = v31;
          sub_24D301EDC((uint64_t)v60);

          sub_24D2BBFB4((uint64_t)v60, &qword_269861850);
LABEL_29:
          id v48 = *(id *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
          sub_24D333B7C((uint64_t)v58);
          double v49 = v59;
          sub_24D333B7C((uint64_t)v60);
          memset(v57, 0, sizeof(v57));
          sub_24D302CC0((uint64_t)v57, v49, v61);

          sub_24D2B72E4(v51, v50, v33, v35, v37, v39, v41, v43, (uint64_t)osloga, v54, v53, v52, v14);
          sub_24D2BBFB4((uint64_t)v57, &qword_269861850);
          return;
        }
        char v47 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
        uint64_t v33 = *(void **)(v4 + 16);
        uint64_t v35 = *(void **)(v4 + 24);
        uint64_t v37 = *(void *)(v4 + 32);
        uint64_t v39 = *(void *)(v4 + 40);
        uint64_t v41 = *(void *)(v4 + 48);
        uint64_t v43 = *(void *)(v4 + 56);
        sub_24D2B6F48(v15, *(void *)(v4 + 8), v33, v35, v37, v39, v41, v21, v23, v24, v25, v26, v5);
        id v46 = v47;
        sub_24D303DD8();
      }

      goto LABEL_29;
    }
  }
  else
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_24D39C950();
    sub_24D2B508C(v7, (uint64_t)qword_269869FD0);
    osos_log_t log = sub_24D39C930();
    os_log_type_t v8 = sub_24D39CDC0();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_24D2B1000, oslog, v8, "FMFindingViewCtrl: Not playing haptics when switching between buds.", v9, 2u);
      MEMORY[0x253326010](v9, -1, -1);
    }
  }
}

void sub_24D33EBA0(uint64_t a1, __int16 *a2)
{
  uint64_t v3 = v2;
  id v6 = (int *)type metadata accessor for FMFindingViewState();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  os_log_type_t v12 = (char *)&v72 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v72 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v72 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v72 - v19;
  uint64_t v21 = v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state;
  swift_beginAccess();
  uint64_t v22 = v6[8];
  uint64_t v23 = *(_DWORD *)(v21 + v22 + 96) & 0xFF000000;
  if (v23 == 0x4000000)
  {
    id v24 = *(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
    sub_24D3044F0();
LABEL_3:

    return;
  }
  BOOL v25 = (*(_DWORD *)(v21 + v22 + 96) & 0xFD000000) == 0x5000000 || v23 == 100663296;
  if (!v25 && *a2 < 0)
  {
    uint64_t v26 = v6[11];
    char v27 = *((unsigned char *)a2 + v26);
    uint64_t v73 = a1;
    if (v27) {
      goto LABEL_11;
    }
    uint64_t v36 = (char *)a2 + v22;
    int v37 = *((_DWORD *)v36 + 24);
    if ((v37 & 0xFC000000) != 0x4000000 && (*(void *)&v37 & 0xFF0000) == 0x40000 && *((void *)v36 + 2) != 1)
    {
      uint64_t v39 = *((void *)v36 + 7);
      if (v36[40])
      {
        if ((v39 & 0x101) == 0)
        {
          switch(sub_24D394298())
          {
            case 2u:
              if (0x800000024D3A5F70 == 0x800000024D3A5F50) {
                goto LABEL_59;
              }
              goto LABEL_56;
            case 3u:
LABEL_59:
              swift_bridgeObjectRelease();
              goto LABEL_61;
            case 4u:
              goto LABEL_57;
            default:
LABEL_56:
              char v59 = sub_24D39D4B0();
              swift_bridgeObjectRelease();
              if (v59)
              {
LABEL_61:
                double v61 = *(void **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
                long long v74 = 0u;
                long long v75 = 0u;
                id v50 = v61;
                sub_24D302E68((uint64_t)&v74);
                goto LABEL_44;
              }
LABEL_57:
              switch(sub_24D394298())
              {
                case 1u:
                case 2u:
                case 3u:
                  char v62 = sub_24D39D4B0();
                  swift_bridgeObjectRelease();
                  if (v62) {
                    goto LABEL_67;
                  }
                  break;
                case 4u:
                  return;
                default:
LABEL_63:
                  swift_bridgeObjectRelease();
LABEL_67:
                  id v24 = *(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
                  sub_24D30162C();
                  goto LABEL_3;
              }
              break;
          }
          return;
        }
        if ((v39 & 0x100) != 0)
        {
LABEL_11:
          uint64_t v28 = v26;
          *(double *)&uint64_t v29 = COERCE_DOUBLE(sub_24D394FDC());
          if (v31) {
            return;
          }
          double v32 = *(double *)&v29;
          sub_24D395750(v30);
          if (v33) {
            return;
          }
          double v34 = v32;
          char v35 = 1;
          switch(sub_24D394298())
          {
            case 2u:
              if (0x800000024D3A5F70 != 0x800000024D3A5F50) {
                goto LABEL_45;
              }
              goto LABEL_34;
            case 3u:
LABEL_34:
              swift_bridgeObjectRelease();
              char v35 = 0;
              break;
            case 4u:
              break;
            default:
LABEL_45:
              char v52 = sub_24D39D4B0();
              swift_bridgeObjectRelease();
              char v35 = v52 ^ 1;
              break;
          }
          char v53 = *(unsigned char *)(v73 + v6[11]);
          sub_24D34518C(v73, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
          if (v53)
          {
            sub_24D34512C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
            int v54 = 0;
          }
          else
          {
            int v55 = v12[v6[14]];
            sub_24D34512C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
            int v54 = (v34 > 0.0) & ~v55;
          }
          char v56 = *((unsigned char *)a2 + v28);
          sub_24D34518C((uint64_t)a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
          if (v56)
          {
            sub_24D34512C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
            char v57 = 0;
            char v58 = 0;
            if (!v54) {
              goto LABEL_54;
            }
          }
          else
          {
            char v57 = v9[v6[14]] ^ 1;
            sub_24D34512C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
            char v58 = v57;
            if ((v54 & 1) == 0)
            {
LABEL_54:
              id v24 = *(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
              sub_24D304844(v35 & 1, v58 & 1, v57 & 1, v34);
              goto LABEL_3;
            }
          }
          char v58 = v57;
          char v57 = 0;
          goto LABEL_54;
        }
        switch(sub_24D394298())
        {
          case 2u:
            if (0x800000024D3A5F70 == 0x800000024D3A5F50) {
              goto LABEL_59;
            }
            goto LABEL_60;
          case 3u:
            goto LABEL_59;
          case 4u:
            goto LABEL_62;
          default:
LABEL_60:
            char v60 = sub_24D39D4B0();
            swift_bridgeObjectRelease();
            if (v60) {
              goto LABEL_61;
            }
LABEL_62:
            switch(sub_24D394298())
            {
              case 1u:
              case 2u:
              case 3u:
                char v63 = sub_24D39D4B0();
                swift_bridgeObjectRelease();
                if (v63) {
                  goto LABEL_67;
                }
                break;
              case 4u:
                break;
              default:
                goto LABEL_63;
            }
            sub_24D34518C(v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
            *(double *)&uint64_t v64 = COERCE_DOUBLE(sub_24D395338());
            double v66 = v65;
            char v68 = v67;
            sub_24D34512C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
            if (v68) {
              return;
            }
            double v69 = *(double *)&v64;
            os_log_type_t v70 = *(void **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
            *((void *)&v75 + 1) = v6;
            uint64_t v71 = sub_24D3451F4((uint64_t *)&v74);
            sub_24D34518C(v21, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
            id v50 = v70;
            sub_24D302CC0((uint64_t)&v74, v69, v66);
            break;
        }
LABEL_44:

        sub_24D2BBFB4((uint64_t)&v74, &qword_269861850);
        return;
      }
      if ((v39 & 0x100) != 0) {
        goto LABEL_11;
      }
    }
    switch(sub_24D394298())
    {
      case 2u:
        if (0x800000024D3A5F70 != 0x800000024D3A5F50) {
          goto LABEL_27;
        }
        goto LABEL_26;
      case 3u:
LABEL_26:
        swift_bridgeObjectRelease();
        goto LABEL_28;
      case 4u:
        goto LABEL_30;
      default:
LABEL_27:
        char v40 = sub_24D39D4B0();
        swift_bridgeObjectRelease();
        if (v40)
        {
LABEL_28:
          uint64_t v41 = *(void **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
          long long v74 = 0u;
          long long v75 = 0u;
          id v42 = v41;
          sub_24D302E68((uint64_t)&v74);

          sub_24D2BBFB4((uint64_t)&v74, &qword_269861850);
        }
        else
        {
LABEL_30:
          switch(sub_24D394298())
          {
            case 1u:
            case 2u:
            case 3u:
              char v44 = sub_24D39D4B0();
              swift_bridgeObjectRelease();
              uint64_t v43 = v73;
              sub_24D34518C(v73, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
              if ((v44 & 1) == 0) {
                goto LABEL_38;
              }
              goto LABEL_36;
            case 4u:
              sub_24D34518C(v73, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
LABEL_38:
              uint64_t v45 = v20[v6[8] + 99];
              sub_24D34512C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
              BOOL v25 = v45 << 24 == 83886080;
              uint64_t v43 = v73;
              if (v25) {
                goto LABEL_40;
              }
              id v51 = *(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
              sub_24D301658();

              break;
            default:
              swift_bridgeObjectRelease();
              uint64_t v43 = v73;
              sub_24D34518C(v73, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
LABEL_36:
              sub_24D34512C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
              goto LABEL_40;
          }
        }
        uint64_t v43 = v73;
LABEL_40:
        uint64_t v46 = v43;
        uint64_t v47 = *(unsigned __int8 *)(v43 + v6[8] + 99);
        sub_24D34518C(v46, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
        if (v47 << 24 == 0x4000000)
        {
          sub_24D34512C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
        }
        else
        {
          uint64_t v48 = v18[v6[8] + 99];
          sub_24D34512C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
          if (v48 << 24 != 83886080) {
            return;
          }
        }
        double v49 = *(void **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController);
        long long v74 = 0u;
        long long v75 = 0u;
        id v50 = v49;
        sub_24D301EDC((uint64_t)&v74);
        break;
    }
    goto LABEL_44;
  }
}

void sub_24D33F7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24D2B7450(&qword_269862408);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v30[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = type metadata accessor for FMFindingViewState();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v13 = (__int16 *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_state);
  swift_beginAccess();
  int v14 = *v13;
  if ((v14 & 0x80000000) == 0)
  {
    if (v14 & 0x100) == 0 && a1 && (*(unsigned char *)(a1 + OBJC_IVAR____TtC11FMFindingUI17FMR1HapticPattern_isTap))
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_24D39C950();
      sub_24D2B508C(v15, (uint64_t)qword_269869FD0);
      uint64_t v16 = sub_24D39C930();
      os_log_type_t v17 = sub_24D39CDC0();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_24D2B1000, v16, v17, "FMFindingViewCtrl: Pulsing BT node.", v18, 2u);
        MEMORY[0x253326010](v18, -1, -1);
      }

      uint64_t v19 = *(char **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
      uint64_t v20 = *(void **)&v19[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
      if (v20)
      {
        uint64_t v21 = v19;
        id v22 = v20;
        sub_24D34A100();
      }
    }
    return;
  }
  sub_24D2BBF50(a2, (uint64_t)v30, &qword_269861850);
  if (!v31)
  {
    sub_24D2BBFB4((uint64_t)v30, &qword_269861850);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_18;
  }
  int v23 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v8, v23 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_18:
    sub_24D2BBFB4((uint64_t)v8, &qword_269862408);
    return;
  }
  sub_24D345850((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  sub_24D395338();
  if ((v24 & 1) == 0)
  {
    BOOL v25 = *(char **)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView);
    uint64_t v26 = *(void **)&v25[OBJC_IVAR____TtC11FMFindingUI8FMPFView_skScene];
    if (v26)
    {
      char v27 = v25;
      id v28 = v26;
      sub_24D349E20(1, 0);
    }
  }
  sub_24D34512C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
}

void sub_24D33FB80(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_24D33FBE8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v132 = sub_24D39C8A0();
  uint64_t v4 = *(void *)(v132 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v132);
  id v129 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v124 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  os_log_type_t v12 = (char *)&v124 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  id v128 = (char *)&v124 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  id v135 = (char *)&v124 - v16;
  MEMORY[0x270FA5388](v15);
  double v131 = (char *)&v124 - v17;
  uint64_t v18 = type metadata accessor for FMFindingSession.Error(0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (id *)((char *)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v19);
  int v23 = (char *)&v124 - v22;
  if (qword_2698602B0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_24D39C950();
  uint64_t v25 = sub_24D2B508C(v24, (uint64_t)qword_269869FD0);
  uint64_t v134 = a1;
  sub_24D34518C(a1, (uint64_t)v23, type metadata accessor for FMFindingSession.Error);
  uint64_t v133 = v25;
  uint64_t v26 = sub_24D39C930();
  os_log_type_t v27 = sub_24D39CDF0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v126 = v4;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v30 = swift_slowAlloc();
    id v127 = v2;
    uint64_t v31 = v30;
    uint64_t v137 = v30;
    double v130 = v9;
    *(_DWORD *)uint64_t v29 = 136315138;
    double v125 = v12;
    sub_24D344A38(&qword_269862F40, (void (*)(uint64_t))type metadata accessor for FMFindingSession.Error);
    uint64_t v32 = sub_24D39D520();
    uint64_t v136 = sub_24D2B8328(v32, v33, &v137);
    os_log_type_t v12 = v125;
    uint64_t v9 = v130;
    sub_24D39D070();
    swift_bridgeObjectRelease();
    sub_24D34512C((uint64_t)v23, type metadata accessor for FMFindingSession.Error);
    _os_log_impl(&dword_24D2B1000, v26, v27, "ðŸ§­ FMFindingViewCtrl: Encountered error: %s.", v29, 0xCu);
    swift_arrayDestroy();
    uint64_t v34 = v31;
    uint64_t v2 = v127;
    MEMORY[0x253326010](v34, -1, -1);
    char v35 = v29;
    uint64_t v4 = v126;
    MEMORY[0x253326010](v35, -1, -1);
  }
  else
  {
    sub_24D34512C((uint64_t)v23, type metadata accessor for FMFindingSession.Error);
  }

  sub_24D34518C(v134, (uint64_t)v21, type metadata accessor for FMFindingSession.Error);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  int v37 = v135;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v38 = v131;
      uint64_t v39 = v21;
      uint64_t v40 = v132;
      (*(void (**)(char *, id *, uint64_t))(v4 + 32))(v131, v39, v132);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v37, v38, v40);
      uint64_t v41 = sub_24D39C930();
      os_log_type_t v42 = sub_24D39CDF0();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = v4;
        char v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        uint64_t v137 = v45;
        *(_DWORD *)char v44 = 136315138;
        sub_24D344A38((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
        uint64_t v46 = v132;
        uint64_t v47 = sub_24D39D490();
        uint64_t v136 = sub_24D2B8328(v47, v48, &v137);
        sub_24D39D070();
        swift_bridgeObjectRelease();
        double v49 = *(void (**)(char *, uint64_t))(v43 + 8);
        v49(v135, v46);
        _os_log_impl(&dword_24D2B1000, v41, v42, "ðŸ§­ FMFindingViewCtrl: Showing item in use alert for %s.", v44, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x253326010](v45, -1, -1);
        MEMORY[0x253326010](v44, -1, -1);
      }
      else
      {
        double v49 = *(void (**)(char *, uint64_t))(v4 + 8);
        v49(v37, v132);
      }

      uint64_t v113 = sub_24D345D74(0xD00000000000001BLL, 0x800000024D3A8BA0, 0, 0);
      uint64_t v115 = v114;
      uint64_t v116 = sub_24D345D74(0xD00000000000001DLL, 0x800000024D3A8BC0, 0, 0);
      uint64_t v118 = v117;
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = v2;
      id v120 = v2;
      sub_24D3435E8(v116, v118, v113, v115, 2, sub_24D344A80, v119);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v49(v131, v132);
      return;
    case 2:
      id v50 = v128;
      id v51 = v21;
      uint64_t v52 = v132;
      (*(void (**)(char *, id *, uint64_t))(v4 + 32))(v128, v51, v132);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v12, v50, v52);
      char v53 = sub_24D39C930();
      int v54 = v12;
      os_log_type_t v55 = sub_24D39CDF0();
      if (!os_log_type_enabled(v53, v55))
      {

        uint64_t v121 = *(void (**)(char *, uint64_t))(v4 + 8);
        uint64_t v122 = v132;
        v121(v12, v132);
        uint64_t v123 = v50;
        goto LABEL_32;
      }
      uint64_t v56 = v4;
      char v57 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v137 = v58;
      *(_DWORD *)char v57 = 136315138;
      id v135 = (char *)(v57 + 4);
      sub_24D344A38((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
      uint64_t v59 = v132;
      uint64_t v60 = sub_24D39D490();
      uint64_t v136 = sub_24D2B8328(v60, v61, &v137);
      sub_24D39D070();
      swift_bridgeObjectRelease();
      char v62 = *(void (**)(char *, uint64_t))(v56 + 8);
      v62(v54, v59);
      _os_log_impl(&dword_24D2B1000, v53, v55, "ðŸ§­ FMFindingViewCtrl: localizer state error for %s.", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x253326010](v58, -1, -1);
      MEMORY[0x253326010](v57, -1, -1);

      v62(v50, v59);
      return;
    case 3:
      char v63 = *(id *)((char *)v21 + *(int *)(sub_24D2B7450(&qword_2698623F8) + 48));
      uint64_t v64 = v21;
      uint64_t v65 = v132;
      (*(void (**)(char *, id *, uint64_t))(v4 + 32))(v9, v64, v132);
      double v66 = v129;
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v129, v9, v65);
      id v67 = v63;
      id v68 = v63;
      double v69 = sub_24D39C930();
      os_log_type_t v70 = sub_24D39CDF0();
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = v4;
        uint64_t v72 = swift_slowAlloc();
        uint64_t v73 = swift_slowAlloc();
        uint64_t v137 = v73;
        *(_DWORD *)uint64_t v72 = 136315394;
        double v130 = v9;
        sub_24D344A38((unint64_t *)&qword_2698610F0, MEMORY[0x263F07508]);
        uint64_t v74 = v132;
        uint64_t v75 = sub_24D39D490();
        uint64_t v136 = sub_24D2B8328(v75, v76, &v137);
        sub_24D39D070();
        swift_bridgeObjectRelease();
        id v135 = *(char **)(v71 + 8);
        ((void (*)(char *, uint64_t))v135)(v66, v74);
        *(_WORD *)(v72 + 12) = 2080;
        uint64_t v136 = (uint64_t)v63;
        id v77 = v63;
        sub_24D2B7450(&qword_269861E18);
        uint64_t v78 = sub_24D39CB20();
        uint64_t v136 = sub_24D2B8328(v78, v79, &v137);
        sub_24D39D070();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_24D2B1000, v69, v70, "ðŸ§­ FMFindingViewCtrl: precision finding config error for %s: %s.", (uint8_t *)v72, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253326010](v73, -1, -1);
        MEMORY[0x253326010](v72, -1, -1);

        ((void (*)(char *, uint64_t))v135)(v130, v74);
      }
      else
      {

        uint64_t v121 = *(void (**)(char *, uint64_t))(v4 + 8);
        uint64_t v122 = v132;
        v121(v66, v132);

        uint64_t v123 = v9;
LABEL_32:
        v121(v123, v122);
      }
      return;
    case 4:
      id v80 = *v21;
      id v81 = v80;
      id v82 = v80;
      uint64_t v83 = sub_24D39C930();
      os_log_type_t v84 = sub_24D39CDF0();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = (uint8_t *)swift_slowAlloc();
        uint64_t v86 = swift_slowAlloc();
        uint64_t v136 = (uint64_t)v80;
        uint64_t v137 = v86;
        *(_DWORD *)uint64_t v85 = 136315138;
        id v87 = v80;
        sub_24D2B7450(&qword_269861E18);
        uint64_t v88 = sub_24D39CB20();
        uint64_t v136 = sub_24D2B8328(v88, v89, &v137);
        sub_24D39D070();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_24D2B1000, v83, v84, "ðŸ§­ FMFindingViewCtrl: precision finding AR error: %s.", v85, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x253326010](v86, -1, -1);
        MEMORY[0x253326010](v85, -1, -1);
      }
      else
      {
      }
      return;
    case 5:
      return;
    case 6:
      id v90 = sub_24D39C930();
      os_log_type_t v91 = sub_24D39CDF0();
      if (os_log_type_enabled(v90, v91))
      {
        double v92 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v92 = 0;
        _os_log_impl(&dword_24D2B1000, v90, v91, "ðŸ§­ FMFindingViewCtrl: Showing low battery alert.", v92, 2u);
        MEMORY[0x253326010](v92, -1, -1);
      }

      uint64_t v93 = sub_24D345D74(0xD000000000000014, 0x800000024D3A8C40, 0, 0);
      uint64_t v95 = v94;
      uint64_t v96 = sub_24D345D74(0xD000000000000026, 0x800000024D3A8C60, 0, 0);
      uint64_t v98 = v97;
      uint64_t v99 = swift_allocObject();
      *(void *)(v99 + 16) = v2;
      v2;
      int v100 = sub_24D344B00;
      goto LABEL_26;
    case 7:
      double v101 = sub_24D39C930();
      os_log_type_t v102 = sub_24D39CDF0();
      if (os_log_type_enabled(v101, v102))
      {
        double v103 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v103 = 0;
        _os_log_impl(&dword_24D2B1000, v101, v102, "ðŸ§­ FMFindingViewCtrl: Showing switch to precise finding required error alert.", v103, 2u);
        MEMORY[0x253326010](v103, -1, -1);
      }

      uint64_t v93 = sub_24D345D74(0xD00000000000002ALL, 0x800000024D3A8BE0, 0, 0);
      uint64_t v95 = v104;
      uint64_t v96 = sub_24D345D74(0xD00000000000002CLL, 0x800000024D3A8C10, 0, 0);
      uint64_t v98 = v105;
      uint64_t v99 = swift_allocObject();
      *(void *)(v99 + 16) = v2;
      v2;
      int v100 = sub_24D344AC0;
      goto LABEL_26;
    case 8:
      double v106 = sub_24D39C930();
      os_log_type_t v107 = sub_24D39CDF0();
      if (os_log_type_enabled(v106, v107))
      {
        id v108 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v108 = 0;
        _os_log_impl(&dword_24D2B1000, v106, v107, "ðŸ§­ FMFindingViewCtrl: Showing person no longer friend.", v108, 2u);
        MEMORY[0x253326010](v108, -1, -1);
      }

      uint64_t v93 = sub_24D345C48();
      uint64_t v95 = v109;
      uint64_t v96 = sub_24D345C48();
      uint64_t v98 = v110;
      uint64_t v99 = swift_allocObject();
      *(void *)(v99 + 16) = v2;
      v2;
      int v100 = sub_24D3449F8;
      goto LABEL_26;
    case 9:
      uint64_t v93 = sub_24D345D74(0xD00000000000001ELL, 0x800000024D3A8B10, 0, 0);
      uint64_t v95 = v111;
      uint64_t v96 = sub_24D345D74(0xD000000000000020, 0x800000024D3A8B30, 0, 0);
      uint64_t v98 = v112;
      uint64_t v99 = swift_allocObject();
      *(void *)(v99 + 16) = v2;
      v2;
      int v100 = sub_24D3449B8;
LABEL_26:
      sub_24D3435E8(v96, v98, v93, v95, 2, v100, v99);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      break;
    default:

      break;
  }
}

void sub_24D340CD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  v10[4] = a3;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_24D32194C;
  _OWORD v10[3] = a4;
  uint64_t v8 = _Block_copy(v10);
  id v9 = a1;
  swift_release();
  objc_msgSend(v9, sel_dismissViewControllerAnimated_completion_, 1, v8);
  _Block_release(v8);
}

uint64_t sub_24D340DA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_sleepPreventer);
  if (*(void *)(v2 + 16))
  {
    swift_retain();
    sub_24D39CA30();
    swift_release();
  }
  *(void *)(v2 + 16) = 0;
  swift_release();
  id v3 = objc_msgSend(self, sel_sharedApplication);
  objc_msgSend(v3, sel_setIdleTimerDisabled_, 0);

  uint64_t v4 = (void (**)(uint64_t))(a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler);
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *v4;
  if (*v4)
  {
    uint64_t v7 = swift_retain();
    v6(v7);
    return sub_24D2E44C8((uint64_t)v6);
  }
  return result;
}

void sub_24D340E8C(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x253326120](v3);
  if (v4)
  {
    uint64_t v5 = (char *)v4;
    if (a1)
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v6 = sub_24D39C950();
      sub_24D2B508C(v6, (uint64_t)qword_269869FD0);
      uint64_t v7 = sub_24D39C930();
      os_log_type_t v8 = sub_24D39CDF0();
      if (os_log_type_enabled(v7, v8))
      {
        id v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v9 = 0;
        _os_log_impl(&dword_24D2B1000, v7, v8, "ðŸ§­ FMFindingViewCtrl: Playing ranging sound command sent", v9, 2u);
        MEMORY[0x253326010](v9, -1, -1);
      }

      id v10 = *(id *)&v5[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton];
      sub_24D399D14(0x4008000000000000, 0);
    }
    else
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_24D39C950();
      sub_24D2B508C(v11, (uint64_t)qword_269869FD0);
      os_log_type_t v12 = sub_24D39C930();
      os_log_type_t v13 = sub_24D39CDF0();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl(&dword_24D2B1000, v12, v13, "ðŸ§­ FMFindingViewCtrl: Playing ranging sound command failed", v14, 2u);
        MEMORY[0x253326010](v14, -1, -1);
      }

      sub_24D309948(1);
    }
  }
}

void sub_24D34107C(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  swift_beginAccess();
  int v4 = *v3;
  if (v4 != 2)
  {
    if ((v4 & 1) != 0 && (v2 & 1) == 0)
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_24D39C950();
      sub_24D2B508C(v5, (uint64_t)qword_269869FD0);
      uint64_t v6 = sub_24D39C930();
      os_log_type_t v7 = sub_24D39CDF0();
      if (os_log_type_enabled(v6, v7))
      {
        os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v8 = 0;
        _os_log_impl(&dword_24D2B1000, v6, v7, "ðŸ§­ FMFindingViewCtrl: Now playing ranging sound", v8, 2u);
        MEMORY[0x253326010](v8, -1, -1);
      }

      return;
    }
    if (v4) {
      return;
    }
  }
  if (v2 != 2 && (v2 & 1) != 0)
  {
    if (qword_2698602B0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_24D39C950();
    sub_24D2B508C(v9, (uint64_t)qword_269869FD0);
    id v10 = sub_24D39C930();
    os_log_type_t v11 = sub_24D39CDF0();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v12 = 0;
      _os_log_impl(&dword_24D2B1000, v10, v11, "ðŸ§­ FMFindingViewCtrl: Done playing ranging sound", v12, 2u);
      MEMORY[0x253326010](v12, -1, -1);
    }

    sub_24D309948(1);
  }
}

uint64_t sub_24D34126C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  swift_beginAccess();
  return *v1;
}

void sub_24D3412B4(unsigned __int8 a1)
{
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  swift_beginAccess();
  unsigned __int8 v4 = *v3;
  *uint64_t v3 = a1;
  sub_24D34107C(v4);
}

void (*sub_24D341310(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return sub_24D341390;
}

void sub_24D341390(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 40);
  unsigned __int8 v5 = *(unsigned char *)(v3 + v2);
  *(unsigned char *)(v3 + v2) = v4;
  sub_24D34107C(v5);
  free(v1);
}

uint64_t sub_24D3413D8@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t *a1, uint64_t *a2)@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    os_log_type_t v7 = sub_24D345680;
  }
  else
  {
    os_log_type_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(uint64_t *, uint64_t *))v6;
  return sub_24D2C6D74(v4);
}

uint64_t sub_24D341478(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t (*)(char a1), uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v5 = *((unsigned __int8 *)a1 + 8);
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  if (*a2)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v6;
    *(void *)(v8 + 24) = v7;
    uint64_t v9 = sub_24D345688;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  sub_24D2C6D74(v6);
  a3(v4, v5, v9, v8);
  return sub_24D2E44C8((uint64_t)v9);
}

uint64_t sub_24D34153C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24D345648;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_24D2C6D74(v3);
  return sub_24D2E44C8(v8);
}

uint64_t sub_24D341604(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, void *))
{
  uint64_t v12 = a1;
  char v13 = a2 & 1;
  if (a3)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a3;
    *(void *)(v8 + 24) = a4;
    uint64_t v9 = sub_24D345654;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  v11[0] = v9;
  v11[1] = v8;
  sub_24D2C6D74(a3);
  a5(&v12, v11);
  return sub_24D2E44C8((uint64_t)v9);
}

uint64_t sub_24D3416CC()
{
  return sub_24D341CF8(&OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler, (void (*)(void, void))sub_24D2C6D74);
}

uint64_t sub_24D3416EC(uint64_t a1, uint64_t a2)
{
  return sub_24D341D80(a1, a2, &OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler, (uint64_t (*)(uint64_t, uint64_t))sub_24D345B00);
}

uint64_t (*sub_24D34170C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_24D341768@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24D30C3C0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_24D2C6D74(v4);
}

uint64_t sub_24D341808(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24D345AFC;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_24D2C6D74(v3);
  return sub_24D2E44C8(v8);
}

uint64_t sub_24D3418D0()
{
  return sub_24D341CF8(&OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler, (void (*)(void, void))sub_24D2C6D74);
}

uint64_t sub_24D3418F0(uint64_t a1, uint64_t a2)
{
  return sub_24D341D80(a1, a2, &OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler, (uint64_t (*)(uint64_t, uint64_t))sub_24D2E44C8);
}

uint64_t (*sub_24D341910())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_24D34196C@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24D30C3C0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_24D2C6D74(v4);
}

uint64_t sub_24D341A0C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24D345AFC;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_24D2C6D74(v3);
  return sub_24D2E44C8(v8);
}

uint64_t sub_24D341AD4()
{
  return sub_24D341CF8(&OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler, (void (*)(void, void))sub_24D2C6D74);
}

uint64_t sub_24D341AF4(uint64_t a1, uint64_t a2)
{
  return sub_24D341D80(a1, a2, &OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler, (uint64_t (*)(uint64_t, uint64_t))sub_24D2E44C8);
}

uint64_t (*sub_24D341B14())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_24D341B70@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_24D2C83A0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_24D2C6D74(v4);
}

uint64_t sub_24D341C10(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24D345620;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_24D2C6D74(v3);
  return sub_24D2E44C8(v8);
}

uint64_t sub_24D341CD8()
{
  return sub_24D341CF8(&OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler, (void (*)(void, void))sub_24D2C6D74);
}

uint64_t sub_24D341CF8(void *a1, void (*a2)(void, void))
{
  uint64_t v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t sub_24D341D60(uint64_t a1, uint64_t a2)
{
  return sub_24D341D80(a1, a2, &OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler, (uint64_t (*)(uint64_t, uint64_t))sub_24D2E44C8);
}

uint64_t sub_24D341D80(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *uint64_t v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*sub_24D341DE4())()
{
  return j__swift_endAccess;
}

id FMFindingViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void FMFindingViewController.init(nibName:bundle:)()
{
}

uint64_t sub_24D341F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for FMFindingViewState();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D34518C(a2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
  return sub_24D333CC0((uint64_t)v5);
}

uint64_t sub_24D341FB8(uint64_t a1, uint64_t a2)
{
  return sub_24D343218(a2);
}

void sub_24D341FC0(uint64_t a1, uint64_t a2)
{
}

id sub_24D341FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_session)
                 + OBJC_IVAR____TtC11FMFindingUI16FMFindingSession_arSession);
  if (v5) {
    return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_findingView), sel_session_didUpdateFrame_, v5, a3);
  }
  return result;
}

uint64_t sub_24D342008(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_24D35C948(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_24D3421B8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_24D342074(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_24D34209C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  uint64_t v5 = *a1 + 8;
  uint64_t result = sub_24D39D070();
  *a1 = v5;
  return result;
}

uint64_t sub_24D3420F4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

double sub_24D342124(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 128) = 1;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 161) = 0u;
  return result;
}

uint64_t sub_24D342150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24D2B7450(&qword_269862930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D3421B8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_24D39D470();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_138;
    }
    if (v4) {
      return sub_24D3429D8(0, v4, 1, v3);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_147;
  }
  uint64_t v7 = result;
  if (v4 < 2)
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v108 = MEMORY[0x263F8EE78];
    if (v4 != 1)
    {
      unint64_t v34 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_101:
      if (v34 >= 2)
      {
        uint64_t v97 = *v3;
        do
        {
          unint64_t v98 = v34 - 2;
          if (v34 < 2) {
            goto LABEL_133;
          }
          if (!v97) {
            goto LABEL_146;
          }
          uint64_t v99 = v10;
          int v100 = v10 + 32;
          uint64_t v101 = *(void *)&v10[16 * v98 + 32];
          uint64_t v102 = *(void *)&v10[16 * v34 + 24];
          sub_24D342B00((char *)(v97 + 40 * v101), (char *)(v97 + 40 * *(void *)&v100[16 * v34 - 16]), v97 + 40 * v102, __dst);
          if (v2) {
            break;
          }
          if (v102 < v101) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v99 = sub_24D35BC18((uint64_t)v99);
          }
          if (v98 >= *((void *)v99 + 2)) {
            goto LABEL_135;
          }
          double v103 = v99;
          uint64_t v104 = v99 + 32;
          uint64_t v105 = &v99[16 * v98 + 32];
          *(void *)uint64_t v105 = v101;
          *((void *)v105 + 1) = v102;
          unint64_t v106 = *((void *)v99 + 2);
          if (v34 > v106) {
            goto LABEL_136;
          }
          uint64_t v10 = v103;
          memmove(&v104[16 * v34 - 16], &v104[16 * v34], 16 * (v106 - v34));
          *((void *)v10 + 2) = v106 - 1;
          unint64_t v34 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v6 >> 1;
    sub_24D2B7450((uint64_t *)&unk_2698615F0);
    uint64_t v9 = sub_24D39CC50();
    *(void *)(v9 + 16) = v8;
    uint64_t v108 = v9;
    __dst = (char *)(v9 + 32);
  }
  uint64_t v11 = 0;
  uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  uint64_t v107 = v7;
  while (1)
  {
    uint64_t v12 = v11;
    uint64_t v13 = v11 + 1;
    uint64_t v112 = v11;
    if (v11 + 1 < v4)
    {
      uint64_t v14 = *v3;
      sub_24D2B6CE8(*v3 + 40 * v13, (uint64_t)v115);
      uint64_t v111 = v14;
      sub_24D2B6CE8(v14 + 40 * v12, (uint64_t)v114);
      int v15 = sub_24D324438(v115, v114);
      if (v2)
      {
LABEL_115:
        sub_24D2B6E58((uint64_t)v114);
        sub_24D2B6E58((uint64_t)v115);
        goto LABEL_116;
      }
      int v16 = v15;
      sub_24D2B6E58((uint64_t)v114);
      sub_24D2B6E58((uint64_t)v115);
      uint64_t v13 = v12 + 2;
      if (v12 + 2 < v4)
      {
        uint64_t v17 = v12;
        uint64_t v18 = v10;
        uint64_t v19 = v111 + 40 * v17 + 40;
        while (1)
        {
          sub_24D2B6CE8(v19 + 40, (uint64_t)v115);
          sub_24D2B6CE8(v19, (uint64_t)v114);
          int v20 = sub_24D324438(v115, v114);
          sub_24D2B6E58((uint64_t)v114);
          sub_24D2B6E58((uint64_t)v115);
          if ((v16 ^ v20)) {
            break;
          }
          ++v13;
          v19 += 40;
          if (v4 == v13)
          {
            uint64_t v13 = v4;
            break;
          }
        }
        uint64_t v10 = v18;
        uint64_t v12 = v112;
      }
      if (v16)
      {
        if (v13 < v12) {
          goto LABEL_142;
        }
        if (v12 < v13)
        {
          uint64_t v116 = 0;
          uint64_t v21 = v3;
          uint64_t v22 = v10;
          uint64_t v23 = 40 * v13 - 40;
          uint64_t v24 = 40 * v12;
          uint64_t v109 = v13;
          uint64_t v25 = v12;
          uint64_t v26 = v13;
          uint64_t v27 = v25;
          do
          {
            if (v27 != --v26)
            {
              if (!v111) {
                goto LABEL_145;
              }
              uint64_t v28 = v111 + v24;
              sub_24D2B6F04((long long *)(v111 + v24), (uint64_t)v115);
              uint64_t v29 = *(void *)(v111 + v23 + 32);
              long long v30 = *(_OWORD *)(v111 + v23 + 16);
              *(_OWORD *)uint64_t v28 = *(_OWORD *)(v111 + v23);
              *(_OWORD *)(v28 + 16) = v30;
              *(void *)(v28 + 32) = v29;
              sub_24D2B6F04(v115, v111 + v23);
            }
            ++v27;
            v23 -= 40;
            v24 += 40;
          }
          while (v27 < v26);
          uint64_t v10 = v22;
          uint64_t v3 = v21;
          uint64_t v2 = v116;
          uint64_t v7 = v107;
          uint64_t v13 = v109;
          uint64_t v12 = v112;
        }
      }
    }
    if (v13 >= v4) {
      goto LABEL_40;
    }
    if (__OFSUB__(v13, v12)) {
      goto LABEL_139;
    }
    if (v13 - v12 >= v7) {
      goto LABEL_40;
    }
    if (__OFADD__(v12, v7)) {
      goto LABEL_140;
    }
    uint64_t v31 = v12 + v7 >= v4 ? v4 : v12 + v7;
    if (v31 < v12) {
      break;
    }
    if (v13 != v31)
    {
      uint64_t v116 = v10;
      uint64_t v86 = v13;
      uint64_t v87 = 40 * v13 - 40;
      do
      {
        uint64_t v88 = v31;
        uint64_t v89 = v112;
        uint64_t v90 = v87;
        do
        {
          uint64_t v91 = *v3 + v90;
          sub_24D2B6CE8(v91 + 40, (uint64_t)v115);
          sub_24D2B6CE8(v91, (uint64_t)v114);
          char v92 = sub_24D324438(v115, v114);
          if (v2) {
            goto LABEL_115;
          }
          char v93 = v92;
          sub_24D2B6E58((uint64_t)v114);
          sub_24D2B6E58((uint64_t)v115);
          if ((v93 & 1) == 0) {
            break;
          }
          uint64_t v94 = *v3;
          if (!*v3) {
            goto LABEL_144;
          }
          uint64_t v95 = v94 + v90;
          sub_24D2B6F04((long long *)(v94 + v90 + 40), (uint64_t)v115);
          long long v96 = *(_OWORD *)(v95 + 16);
          *(_OWORD *)(v95 + 40) = *(_OWORD *)v95;
          *(_OWORD *)(v95 + 56) = v96;
          *(void *)(v95 + 72) = *(void *)(v95 + 32);
          sub_24D2B6F04(v115, v95);
          v90 -= 40;
          ++v89;
        }
        while (v86 != v89);
        v87 += 40;
        ++v86;
        uint64_t v31 = v88;
      }
      while (v86 != v88);
      uint64_t v13 = v88;
      uint64_t v10 = v116;
      if (v88 < v112) {
        goto LABEL_137;
      }
      goto LABEL_41;
    }
LABEL_40:
    if (v13 < v12) {
      goto LABEL_137;
    }
LABEL_41:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_24D35B8D8(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v33 = *((void *)v10 + 2);
    unint64_t v32 = *((void *)v10 + 3);
    unint64_t v34 = v33 + 1;
    if (v33 >= v32 >> 1) {
      uint64_t v10 = sub_24D35B8D8((char *)(v32 > 1), v33 + 1, 1, v10);
    }
    uint64_t v116 = v2;
    *((void *)v10 + 2) = v34;
    char v35 = v10 + 32;
    uint64_t v36 = &v10[16 * v33 + 32];
    *(void *)uint64_t v36 = v112;
    *((void *)v36 + 1) = v13;
    uint64_t v110 = v13;
    if (v33)
    {
      while (1)
      {
        unint64_t v37 = v34 - 1;
        if (v34 >= 4)
        {
          os_log_type_t v42 = &v35[16 * v34];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_122;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_123;
          }
          unint64_t v49 = v34 - 2;
          id v50 = &v35[16 * v34 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_125;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_128;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_132;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_77;
          }
        }
        else
        {
          if (v34 != 3)
          {
            uint64_t v66 = *((void *)v10 + 4);
            uint64_t v67 = *((void *)v10 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_71;
          }
          uint64_t v39 = *((void *)v10 + 4);
          uint64_t v38 = *((void *)v10 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_124;
        }
        unint64_t v49 = v34 - 2;
        os_log_type_t v55 = &v35[16 * v34 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_127;
        }
        unint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_130;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_131;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_77:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_79;
        }
LABEL_71:
        if (v60) {
          goto LABEL_126;
        }
        id v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_129;
        }
        if (v71 < v59) {
          goto LABEL_88;
        }
LABEL_79:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v34)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v77 = *v3;
        if (!*v3) {
          goto LABEL_143;
        }
        uint64_t v78 = v10;
        unint64_t v79 = v3;
        id v80 = &v35[16 * v76];
        uint64_t v81 = *(void *)v80;
        id v82 = &v35[16 * v37];
        uint64_t v83 = *((void *)v82 + 1);
        os_log_type_t v84 = v116;
        sub_24D342B00((char *)(v77 + 40 * *(void *)v80), (char *)(v77 + 40 * *(void *)v82), v77 + 40 * v83, __dst);
        uint64_t v116 = v84;
        if (v84) {
          goto LABEL_116;
        }
        if (v83 < v81) {
          goto LABEL_119;
        }
        if (v37 > *((void *)v78 + 2)) {
          goto LABEL_120;
        }
        *(void *)id v80 = v81;
        *(void *)&v35[16 * v76 + 8] = v83;
        unint64_t v85 = *((void *)v78 + 2);
        if (v37 >= v85) {
          goto LABEL_121;
        }
        uint64_t v10 = v78;
        unint64_t v34 = v85 - 1;
        memmove(&v35[16 * v37], v82 + 16, 16 * (v85 - 1 - v37));
        *((void *)v78 + 2) = v85 - 1;
        uint64_t v3 = v79;
        if (v85 <= 2) {
          goto LABEL_88;
        }
      }
    }
    unint64_t v34 = 1;
LABEL_88:
    uint64_t v4 = v3[1];
    uint64_t v11 = v110;
    uint64_t v2 = v116;
    uint64_t v7 = v107;
    if (v110 >= v4) {
      goto LABEL_101;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  uint64_t result = sub_24D39D2A0();
  __break(1u);
  return result;
}

uint64_t sub_24D3429D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v8 = result;
    uint64_t v9 = 40 * a3 - 40;
LABEL_4:
    uint64_t v10 = v8;
    uint64_t v11 = v9;
    while (1)
    {
      uint64_t v12 = *a4 + v11;
      sub_24D2B6CE8(v12 + 40, (uint64_t)v18);
      sub_24D2B6CE8(v12, (uint64_t)v17);
      char v13 = sub_24D324438(v18, v17);
      sub_24D2B6E58((uint64_t)v17);
      uint64_t result = sub_24D2B6E58((uint64_t)v18);
      if (v4) {
        break;
      }
      if (v13)
      {
        uint64_t v14 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v15 = v14 + v11;
        sub_24D2B6F04((long long *)(v14 + v11 + 40), (uint64_t)v18);
        long long v16 = *(_OWORD *)(v15 + 16);
        *(_OWORD *)(v15 + 40) = *(_OWORD *)v15;
        *(_OWORD *)(v15 + 56) = v16;
        *(void *)(v15 + 72) = *(void *)(v15 + 32);
        uint64_t result = sub_24D2B6F04(v18, v15);
        v11 -= 40;
        if (v6 != ++v10) {
          continue;
        }
      }
      ++v6;
      v9 += 40;
      if (v6 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_24D342B00(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v5 = __dst;
  uint64_t v7 = a2;
  int64_t v9 = a2 - __src;
  int64_t v10 = (a2 - __src) / 40;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v39 = __src;
  uint64_t v38 = __dst;
  if (v10 >= v12)
  {
    if (v11 >= -39)
    {
      if (__dst != a2 || &a2[40 * v12] <= __dst) {
        memmove(__dst, a2, 40 * v12);
      }
      uint64_t v23 = &v5[40 * v12];
      unint64_t v37 = v23;
      uint64_t v39 = v7;
      if (__src >= v7 || v11 < 40) {
        goto LABEL_44;
      }
      unint64_t v24 = a3 - 40;
      while (1)
      {
        sub_24D2B6CE8((uint64_t)(v23 - 40), (uint64_t)v36);
        uint64_t v27 = v7 - 40;
        sub_24D2B6CE8((uint64_t)(v7 - 40), (uint64_t)v35);
        char v28 = sub_24D324438(v36, v35);
        if (v4) {
          goto LABEL_43;
        }
        char v29 = v28;
        long long v30 = (char *)(v24 + 40);
        sub_24D2B6E58((uint64_t)v35);
        sub_24D2B6E58((uint64_t)v36);
        if (v29)
        {
          if (v30 != v7 || v24 >= (unint64_t)v7)
          {
            long long v25 = *(_OWORD *)v27;
            long long v26 = *(_OWORD *)(v7 - 24);
            *(void *)(v24 + 32) = *((void *)v7 - 1);
            *(_OWORD *)unint64_t v24 = v25;
            *(_OWORD *)(v24 + 16) = v26;
          }
          v39 -= 40;
          uint64_t v23 = v37;
          if (v37 <= v5) {
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t v31 = v37;
          uint64_t v23 = v37 - 40;
          v37 -= 40;
          if (v30 < v31 || v24 >= (unint64_t)v31 || v30 != v31)
          {
            long long v32 = *(_OWORD *)v23;
            long long v33 = *(_OWORD *)(v31 - 24);
            *(void *)(v24 + 32) = *((void *)v31 - 1);
            *(_OWORD *)unint64_t v24 = v32;
            *(_OWORD *)(v24 + 16) = v33;
          }
          uint64_t v27 = v7;
          if (v23 <= v5) {
            goto LABEL_44;
          }
        }
        v24 -= 40;
        uint64_t v7 = v27;
        if (v27 <= __src) {
          goto LABEL_44;
        }
      }
    }
  }
  else if (v9 >= -39)
  {
    if (__dst != __src || &__src[40 * v10] <= __dst) {
      memmove(__dst, __src, 40 * v10);
    }
    unint64_t v13 = (unint64_t)&v5[40 * v10];
    unint64_t v37 = (char *)v13;
    if ((unint64_t)v7 >= a3 || v9 < 40) {
      goto LABEL_44;
    }
    while (1)
    {
      sub_24D2B6CE8((uint64_t)v7, (uint64_t)v36);
      sub_24D2B6CE8((uint64_t)v5, (uint64_t)v35);
      char v14 = sub_24D324438(v36, v35);
      if (v4) {
        break;
      }
      char v15 = v14;
      sub_24D2B6E58((uint64_t)v35);
      sub_24D2B6E58((uint64_t)v36);
      long long v16 = v39;
      if (v15)
      {
        unint64_t v17 = (unint64_t)(v7 + 40);
        if (v39 >= v7 && (unint64_t)v39 < v17 && v39 == v7)
        {
          long long v16 = v7;
        }
        else
        {
          long long v18 = *(_OWORD *)v7;
          long long v19 = *((_OWORD *)v7 + 1);
          *((void *)v39 + 4) = *((void *)v7 + 4);
          *long long v16 = v18;
          v16[1] = v19;
        }
      }
      else
      {
        int v20 = v38 + 40;
        if (v39 != v38 || v39 >= v20)
        {
          long long v21 = *(_OWORD *)v38;
          long long v22 = *((_OWORD *)v38 + 1);
          *((void *)v39 + 4) = *((void *)v38 + 4);
          *long long v16 = v21;
          v16[1] = v22;
        }
        uint64_t v38 = v20;
        unint64_t v17 = (unint64_t)v7;
      }
      uint64_t v39 = (char *)v16 + 40;
      uint64_t v5 = v38;
      if ((unint64_t)v38 < v13)
      {
        uint64_t v7 = (char *)v17;
        if (v17 < a3) {
          continue;
        }
      }
      goto LABEL_44;
    }
LABEL_43:
    sub_24D2B6E58((uint64_t)v35);
    sub_24D2B6E58((uint64_t)v36);
LABEL_44:
    sub_24D35B9D4((void **)&v39, (const void **)&v38, &v37);
    return 1;
  }
  uint64_t result = sub_24D39D310();
  __break(1u);
  return result;
}

void sub_24D342E64(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v8 = a4;
      }
      else {
        uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x253325190](a1, a2, v8);
      sub_24D2BC100(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_24D39D140() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_24D39D150();
  sub_24D2BC100(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v18;
  swift_unknownObjectRelease();
  uint64_t v9 = sub_24D39CFD0();
  uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v9 & ~v10;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v12 = sub_24D39CFE0();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v7 = (v7 + 1) & v13;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_26;
      }
      id v14 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v15 = sub_24D39CFE0();
    }
    while ((v15 & 1) == 0);
  }

LABEL_20:
  long long v16 = *(void **)(*(void *)(a4 + 48) + 8 * v7);
  id v17 = v16;
}

uint64_t sub_24D3430D4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_24D34315C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return MEMORY[0x270F9D8F0]();
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v4 = sub_24D39CB50();
  if (v5) {
    unint64_t v4 = 15;
  }
  if (4 * v3 < v4 >> 14) {
    goto LABEL_12;
  }
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_24D343218(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24D39C990();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24D39C9D0();
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMFindingViewState();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  if (objc_msgSend(self, sel_isMainThread))
  {
    sub_24D34518C(a1, (uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    return sub_24D333CC0((uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  }
  else
  {
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v22 = v8;
    uint64_t v21 = sub_24D39CE90();
    sub_24D34518C(a1, (uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v2;
    sub_24D345850((uint64_t)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(void))type metadata accessor for FMFindingViewState);
    aBlock[4] = sub_24D345A98;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_24D32194C;
    aBlock[3] = &unk_26FF896F8;
    id v17 = _Block_copy(aBlock);
    id v18 = v2;
    swift_release();
    sub_24D39C9B0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_24D344A38((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    long long v19 = (void *)v21;
    MEMORY[0x253324EE0](0, v10, v7, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v22);
  }
}

void sub_24D3435E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertCount];
  if (v10 > 2)
  {
    if (a6) {
      a6();
    }
  }
  else
  {
    *(void *)&v7[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertCount] = v10 + 1;
    if (!a4) {
      sub_24D345D74(0xD000000000000014, 0x800000024D3A8C40, a3, 0);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
    unint64_t v15 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v14, v15, 1);

    id v17 = &selRef_lightEstimate;
    if (a5)
    {
      sub_24D345D74(0xD00000000000001FLL, 0x800000024D3A8CD0, 0, 0);
      id v18 = (void *)swift_allocObject();
      long long v18[2] = v7;
      v18[3] = a1;
      v18[4] = a2;
      void v18[5] = a6;
      void v18[6] = a7;
      swift_bridgeObjectRetain();
      long long v19 = v7;
      sub_24D2C6D74((uint64_t)a6);
      uint64_t v20 = (void *)sub_24D39CAC0();
      swift_bridgeObjectRelease();
      long long v32 = sub_24D344C14;
      long long v33 = v18;
      id v17 = &selRef_lightEstimate;
      uint64_t v28 = MEMORY[0x263EF8330];
      uint64_t v29 = 1107296256;
      long long v30 = sub_24D33FB80;
      uint64_t v31 = &unk_26FF89248;
      uint64_t v21 = _Block_copy(&v28);
      swift_release();
      id v22 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v20, 2, v21);
      _Block_release(v21);

      objc_msgSend(v16, (SEL)&selRef_strokeWithBlendMode_alpha_ + 3, v22);
    }
    sub_24D345D74(0xD00000000000001ELL, 0x800000024D3A8C90, 0, 0);
    uint64_t v23 = (void *)swift_allocObject();
    _OWORD v23[2] = v7;
    void v23[3] = a6;
    v23[4] = a7;
    unint64_t v24 = v7;
    sub_24D2C6D74((uint64_t)a6);
    long long v25 = (void *)sub_24D39CAC0();
    swift_bridgeObjectRelease();
    long long v32 = sub_24D344B88;
    long long v33 = v23;
    uint64_t v28 = MEMORY[0x263EF8330];
    uint64_t v29 = 1107296256;
    long long v30 = sub_24D33FB80;
    uint64_t v31 = &unk_26FF891F8;
    long long v26 = _Block_copy(&v28);
    swift_release();
    id v27 = objc_msgSend(self, v17[226], v25, 0, v26);
    _Block_release(v26);

    objc_msgSend(v16, sel_addAction_, v27);
    v24[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertIsShown] = 1;
    objc_msgSend(v24, sel_presentViewController_animated_completion_, v16, 1, 0);
  }
}

void sub_24D3439F8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24D39C990();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24D39C9D0();
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FMFindingSession.Error(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11 - 8);
  if (objc_msgSend(self, sel_isMainThread))
  {
    sub_24D33FBE8(a1);
  }
  else
  {
    sub_24D2BC100(0, (unint64_t *)&qword_269860F20);
    uint64_t v21 = v8;
    uint64_t v20 = sub_24D39CE90();
    sub_24D34518C(a1, (uint64_t)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FMFindingSession.Error);
    unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v2;
    sub_24D345850((uint64_t)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for FMFindingSession.Error);
    aBlock[4] = sub_24D3458B8;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = sub_24D32194C;
    aBlock[3] = &unk_26FF896A8;
    id v16 = _Block_copy(aBlock);
    id v17 = v2;
    swift_release();
    sub_24D39C9B0();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_24D344A38((unint64_t *)&qword_269860EE0, MEMORY[0x263F8F030]);
    sub_24D2B7450((uint64_t *)&unk_2698610D0);
    sub_24D2C8438();
    sub_24D39D0E0();
    id v18 = (void *)v20;
    MEMORY[0x253324EE0](0, v10, v7, v16);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
  }
}

uint64_t type metadata accessor for FMFindingViewController()
{
  uint64_t result = qword_2698623E8;
  if (!qword_2698623E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void _s11FMFindingUI0A14ViewControllerC5coderACSgSo7NSCoderC_tcfc_0()
{
  unint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isInternalBuild;
  id v3 = objc_msgSend(self, sel_sharedInstance);
  unsigned __int8 v4 = objc_msgSend(v3, sel_isInternalBuild);

  v1[v2] = v4;
  uint64_t v5 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_style];
  if (qword_269860338 != -1) {
    swift_once();
  }
  v35[8] = xmmword_26986A340;
  v35[9] = unk_26986A350;
  v35[10] = xmmword_26986A360;
  uint64_t v36 = qword_26986A370;
  v35[4] = xmmword_26986A300;
  void v35[5] = unk_26986A310;
  v35[6] = xmmword_26986A320;
  v35[7] = unk_26986A330;
  v35[0] = xmmword_26986A2C0;
  v35[1] = *(_OWORD *)&qword_26986A2D0;
  _OWORD v35[2] = xmmword_26986A2E0;
  v35[3] = unk_26986A2F0;
  memmove(v5, &xmmword_26986A2C0, 0xB8uLL);
  uint64_t v6 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_sleepPreventer;
  sub_24D3348AC((uint64_t)v35);
  type metadata accessor for FMFindingSleepPreventer();
  *(void *)&v1[v6] = swift_initStaticObject();
  uint64_t v7 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_snapshotContainer;
  *(void *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_init);
  uint64_t v8 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_reducedMotion;
  v1[v8] = UIAccessibilityIsReduceMotionEnabled();
  uint64_t v9 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_titleLabel;
  *(void *)&v1[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_nameLabel;
  *(void *)&v1[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v11 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerView];
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pickerViewContainer;
  *(void *)&v1[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v13 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabelsStackView;
  *(void *)&v1[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BF8]), sel_init);
  uint64_t v14 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsTopLabel;
  *(void *)&v1[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v15 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_instructionsLabel;
  *(void *)&v1[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_init);
  uint64_t v16 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_closeButton;
  id v17 = (objc_class *)type metadata accessor for FMR1GlyphButton();
  id v18 = objc_allocWithZone(v17);
  *(void *)&v1[v16] = sub_24D397C88(0, 0, 0, 0);
  uint64_t v19 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_hapticsController;
  *(void *)&v1[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMR1HapticsController()), sel_init);
  uint64_t v20 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_torchButton;
  id v21 = objc_allocWithZone(v17);
  *(void *)&v1[v20] = sub_24D397C88(0, 0, 0, 0);
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_showTorchButtonWorkItem] = 0;
  uint64_t v22 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_rightActionButton;
  id v23 = objc_allocWithZone(v17);
  *(void *)&v1[v22] = sub_24D397C88(0, 0, 0, 0);
  uint64_t v24 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_r1DistanceView;
  id v25 = objc_allocWithZone((Class)type metadata accessor for FMR1DistanceView());
  *(void *)&v1[v24] = sub_24D362FC8(0, 1, 0x100000000uLL);
  long long v26 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundPlayerVideoInfo];
  *((void *)v26 + 14) = 0;
  *((_OWORD *)v26 + 5) = 0u;
  *((_OWORD *)v26 + 6) = 0u;
  *((_OWORD *)v26 + 3) = 0u;
  *((_OWORD *)v26 + 4) = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  *((_OWORD *)v26 + 2) = 0u;
  *(_OWORD *)long long v26 = 0u;
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_foundItemWorkItem] = 0;
  id v27 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_lastTimeFoundItemVideo];
  *((void *)v27 + 1) = 0;
  *((void *)v27 + 2) = 0;
  *(void *)id v27 = 0;
  v27[24] = 1;
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_autoStopPlayingVideoWorkItem] = 0;
  uint64_t v28 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_btDistanceView;
  *(void *)&v1[v28] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMBTDistanceView()), sel_init);
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_pulseTimer] = 0;
  uint64_t v29 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_incorrectOrientationView;
  *(void *)&v1[v29] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMIncorrectOrientationView()), sel_init);
  v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_inBand] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_insufficientFeaturesARTrackingErrorCount] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_updateTorchPeriodicCount] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_gotFirstARFrame] = 0;
  v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertIsShown] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertCount] = 0;
  uint64_t v30 = OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_configuration;
  if (qword_269860358 != -1) {
    swift_once();
  }
  *(void *)&v1[v30] = qword_26986A458;
  *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_FMR1MaxErrorAlertCount] = 3;
  v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying] = 2;
  uint64_t v31 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_playSoundHandler];
  void *v31 = 0;
  v31[1] = 0;
  long long v32 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willAppearHandler];
  void *v32 = 0;
  v32[1] = 0;
  long long v33 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_willDisappearHandler];
  void *v33 = 0;
  v33[1] = 0;
  unint64_t v34 = &v1[OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_dismissedHandler];
  void *v34 = 0;
  v34[1] = 0;
  swift_bridgeObjectRetain();

  sub_24D39D2B0();
  __break(1u);
}

uint64_t sub_24D3442EC()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_24D344324()
{
  return sub_24D335750(*(void **)(v0 + 16));
}

uint64_t sub_24D34432C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24D34433C()
{
  return swift_release();
}

unint64_t sub_24D344344()
{
  unint64_t result = qword_2698623E0;
  if (!qword_2698623E0)
  {
    sub_24D2BC100(255, &qword_2698623D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698623E0);
  }
  return result;
}

id sub_24D3443AC(uint64_t a1)
{
  return sub_24D336648(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

id sub_24D3443B8(uint64_t a1)
{
  return sub_24D3366F0(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_24D3443C4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_24D344418(unsigned __int8 *a1, void *a2)
{
  unsigned __int8 v2 = *a1;
  id v3 = (unsigned __int8 *)(*a2 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_isSoundPlaying);
  swift_beginAccess();
  unsigned __int8 v4 = *v3;
  *id v3 = v2;
  sub_24D34107C(v4);
}

uint64_t sub_24D344498()
{
  return type metadata accessor for FMFindingViewController();
}

uint64_t sub_24D3444A0()
{
  uint64_t result = type metadata accessor for FMFindingViewState();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for FMFindingViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FMFindingViewController);
}

uint64_t dispatch thunk of FMFindingViewController.__allocating_init(session:)()
{
  return (*(uint64_t (**)(void))(v0 + 1096))();
}

uint64_t dispatch thunk of FMFindingViewController.isSoundPlaying.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x550))();
}

uint64_t dispatch thunk of FMFindingViewController.isSoundPlaying.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x558))();
}

uint64_t dispatch thunk of FMFindingViewController.isSoundPlaying.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x560))();
}

uint64_t dispatch thunk of FMFindingViewController.playSoundHandler.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x568))();
}

uint64_t dispatch thunk of FMFindingViewController.playSoundHandler.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x570))();
}

uint64_t dispatch thunk of FMFindingViewController.playSoundHandler.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x578))();
}

uint64_t dispatch thunk of FMFindingViewController.willAppearHandler.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x580))();
}

uint64_t dispatch thunk of FMFindingViewController.willAppearHandler.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x588))();
}

uint64_t dispatch thunk of FMFindingViewController.willAppearHandler.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x590))();
}

uint64_t dispatch thunk of FMFindingViewController.willDisappearHandler.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x598))();
}

uint64_t dispatch thunk of FMFindingViewController.willDisappearHandler.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x5A0))();
}

uint64_t dispatch thunk of FMFindingViewController.willDisappearHandler.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x5A8))();
}

uint64_t dispatch thunk of FMFindingViewController.dismissedHandler.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x5B0))();
}

uint64_t dispatch thunk of FMFindingViewController.dismissedHandler.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x5B8))();
}

uint64_t dispatch thunk of FMFindingViewController.dismissedHandler.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x5C0))();
}

uint64_t sub_24D3449AC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_24D3449B8()
{
  sub_24D340CD4(*(void **)(v0 + 16), (uint64_t)&unk_26FF89280, (uint64_t)sub_24D345BBC, (uint64_t)&unk_26FF89298);
}

void sub_24D3449F8()
{
  sub_24D340CD4(*(void **)(v0 + 16), (uint64_t)&unk_26FF89190, (uint64_t)sub_24D345BBC, (uint64_t)&unk_26FF891A8);
}

uint64_t sub_24D344A38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24D344A80()
{
  sub_24D340CD4(*(void **)(v0 + 16), (uint64_t)&unk_26FF89140, (uint64_t)sub_24D345BBC, (uint64_t)&unk_26FF89158);
}

void sub_24D344AC0()
{
  sub_24D340CD4(*(void **)(v0 + 16), (uint64_t)&unk_26FF890F0, (uint64_t)sub_24D345BBC, (uint64_t)&unk_26FF89108);
}

void sub_24D344B00()
{
  sub_24D340CD4(*(void **)(v0 + 16), (uint64_t)&unk_26FF890A0, (uint64_t)sub_24D345BBC, (uint64_t)&unk_26FF890B8);
}

uint64_t sub_24D344B40()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24D344B88()
{
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertIsShown) = 0;
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_24D344BC4()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_24D344C14()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unsigned __int8 v2 = *(uint64_t (**)(uint64_t))(v0 + 40);
  uint64_t result = sub_24D344C60();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_errorAlertIsShown) = 0;
  if (v2) {
    return v2(result);
  }
  return result;
}

uint64_t sub_24D344C60()
{
  uint64_t v0 = sub_24D2B7450((uint64_t *)&unk_269861890);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  id v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v26 - v4;
  uint64_t v6 = sub_24D39C6B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[2] = 0xD0000000000000C5;
  v26[3] = 0x800000024D3A8CF0;
  v26[0] = 0xD000000000000027;
  v26[1] = 0x800000024D3A8DC0;
  sub_24D39CB70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24D39CB70();
  uint64_t v10 = v26[0];
  uint64_t v11 = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26[0] = v10;
  v26[1] = v11;
  sub_24D39C6A0();
  sub_24D3450D8();
  sub_24D39D090();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRelease();
  if (v13)
  {
    strcpy((char *)v26, "&Description=");
    HIWORD(v26[1]) = -4864;
    sub_24D39CB70();
    swift_bridgeObjectRelease();
    sub_24D39CB70();
    swift_bridgeObjectRelease();
  }
  sub_24D39C770();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_defaultWorkspace);
  if (v14)
  {
    uint64_t v15 = v14;
    sub_24D2BBF50((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_269861890);
    uint64_t v16 = sub_24D39C780();
    uint64_t v17 = *(void *)(v16 - 8);
    id v18 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v16) != 1)
    {
      id v18 = (void *)sub_24D39C740();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v16);
    }
    sub_24D312920(MEMORY[0x263F8EE78]);
    uint64_t v19 = (void *)sub_24D39CA70();
    swift_bridgeObjectRelease();
    unsigned __int8 v20 = objc_msgSend(v15, sel_openSensitiveURL_withOptions_, v18, v19);

    if ((v20 & 1) == 0)
    {
      if (qword_2698602B0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_24D39C950();
      sub_24D2B508C(v21, (uint64_t)qword_269869FD0);
      uint64_t v22 = sub_24D39C930();
      os_log_type_t v23 = sub_24D39CDF0();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_24D2B1000, v22, v23, "ðŸ§­ FMFindingViewCtrl: Failed sending request to Tap-To-Radar", v24, 2u);
        MEMORY[0x253326010](v24, -1, -1);
      }
    }
  }
  return sub_24D2BBFB4((uint64_t)v5, (uint64_t *)&unk_269861890);
}

unint64_t sub_24D3450D8()
{
  unint64_t result = qword_269862400;
  if (!qword_269862400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269862400);
  }
  return result;
}

uint64_t sub_24D34512C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24D34518C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_24D3451F4(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_24D345258(uint64_t a1)
{
  uint64_t v15 = *(void *)(a1 + 104);
  uint64_t v2 = *(void **)(a1 + 120);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v3 = *(void **)(a1 + 128);
  uint64_t v4 = *(void *)(a1 + 136);
  uint64_t v5 = *(void *)(a1 + 144);
  uint64_t v6 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 160);
  long long v13 = *(_OWORD *)(a1 + 168);
  int v8 = *(unsigned __int16 *)(a1 + 200) | (*(unsigned __int8 *)(a1 + 202) << 16);
  uint64_t v9 = *(void *)(a1 + 184);
  uint64_t v10 = *(void *)(a1 + 192);
  int v12 = *(unsigned __int16 *)(a1 + 96) | (*(unsigned __int8 *)(a1 + 98) << 16);
  sub_24D2D7AB4(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v12, BYTE2(v12));
  sub_24D2D7AB4(v15, v14, v2, v3, v4, v5, v6, v7, v13, *((uint64_t *)&v13 + 1), v9, v10, v8, BYTE2(v8));
  return a1;
}

uint64_t sub_24D345340()
{
  return MEMORY[0x270FA0238](v0, 25, 7);
}

void sub_24D345378()
{
  sub_24D33BF50(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_24D345384()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

id sub_24D3453CC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  (*(void (**)(id))(v0 + 32))(objc_msgSend(*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11FMFindingUI23FMFindingViewController_snapshotContainer), sel_insertSubview_atIndex_, v1, 0));
  return objc_msgSend(v1, sel_setAlpha_, 0.0);
}

id sub_24D345440()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
}

uint64_t sub_24D345450()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24D345488(uint64_t a1, uint64_t a2)
{
  sub_24D335AC4(a1, a2, v2);
}

void sub_24D3454A4()
{
  sub_24D340CD4(*(void **)(v0 + 16), (uint64_t)&unk_26FF894B0, (uint64_t)sub_24D345524, (uint64_t)&unk_26FF894C8);
}

void sub_24D3454E4()
{
  sub_24D340CD4(*(void **)(v0 + 16), (uint64_t)&unk_26FF89460, (uint64_t)sub_24D345BBC, (uint64_t)&unk_26FF89478);
}

uint64_t sub_24D345524()
{
  return sub_24D340DA0(*(void *)(v0 + 16));
}

uint64_t sub_24D345540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMFindingViewState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D3455A4(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);

  return a1;
}

uint64_t sub_24D3455E8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24D345620()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24D345648(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_24D341604(a1, a2 & 1, a3, a4, *(void (**)(uint64_t *, void *))(v4 + 16));
}

uint64_t sub_24D345654(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_24D345680(uint64_t *a1, uint64_t *a2)
{
  return sub_24D341478(a1, a2, *(void (**)(uint64_t, uint64_t, uint64_t (*)(char), uint64_t))(v2 + 16));
}

uint64_t sub_24D345688(char a1)
{
  uint64_t v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = a1;
  return v2(&v4);
}

uint64_t sub_24D3456C0()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMFindingSession.Error(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = (void **)(v0 + v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      uint64_t v7 = *v5;
      goto LABEL_5;
    case 1u:
    case 2u:
      uint64_t v6 = sub_24D39C8A0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      break;
    case 3u:
      uint64_t v8 = sub_24D39C8A0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
      uint64_t v7 = *(void **)((char *)v5 + *(int *)(sub_24D2B7450(&qword_2698623F8) + 48));
LABEL_5:

      break;
    default:
      break;
  }
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_24D345850(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_24D3458B8()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMFindingSession.Error(0) - 8);
  sub_24D33FBE8(v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_24D34591C()
{
  uint64_t v1 = type metadata accessor for FMFindingViewState();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  uint64_t v6 = sub_24D39C8A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 32);
  int v8 = *(_DWORD *)(v7 + 96);
  if ((v8 | 0x2000000u) >> 25 != 3) {
    sub_24D2B6DE8(*(void *)v7, *(void *)(v7 + 8), *(void **)(v7 + 16), *(void **)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(void *)(v7 + 72), *(void *)(v7 + 80), *(void *)(v7 + 88), v8, SBYTE2(v8));
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_24D345A98()
{
  uint64_t v1 = *(void *)(type metadata accessor for FMFindingViewState() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_24D341F1C(v2, v3);
}

uint64_t type metadata accessor for FMBTFindingManager()
{
  return self;
}

uint64_t sub_24D345C20(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_24D345C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_24D345C48()
{
  type metadata accessor for FMFindingUILocalizer();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24D39D1D0();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  uint64_t v2 = sub_24D39C6E0();

  swift_bridgeObjectRelease();
  return v2;
}

uint64_t type metadata accessor for FMFindingUILocalizer()
{
  return self;
}

uint64_t sub_24D345D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for FMFindingUILocalizer();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v8 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24D39D1D0();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  uint64_t v9 = sub_24D39C6E0();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  BOOL v12 = v9 == a1 && v11 == a2;
  if (v12 || (sub_24D39D4B0() & 1) != 0)
  {
    if (a4)
    {
      swift_bridgeObjectRelease();
      sub_24D39D1D0();
      swift_bridgeObjectRelease();
      sub_24D39CB70();
      uint64_t v9 = sub_24D39C6E0();
      swift_bridgeObjectRelease();
    }
  }

  return v9;
}

uint64_t sub_24D345F3C()
{
  type metadata accessor for FMFindingUILocalizer();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_24D39D1D0();
  swift_bridgeObjectRelease();
  sub_24D39CB70();
  uint64_t v2 = sub_24D39C6E0();

  swift_bridgeObjectRelease();
  return v2;
}

void sub_24D346048(double a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedRadiusFactor;
  *(double *)uint64_t v3 = a1;
  *(unsigned char *)(v3 + 8) = 0;
  uint64_t v4 = v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style;
  double v5 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_style + 72);
  double v6 = *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_pixelsPerInch);
  id v7 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  double v9 = v8;

  double v10 = (1.0 - a1) * *(double *)(v4 + 48) + *(double *)(v4 + 40) * a1;
  uint64_t v11 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode;
  BOOL v12 = *(void **)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interativeRadiusBeaconNode);
  if (v12) {
    objc_msgSend(v12, sel_setScale_, (1.0 - a1) * *(double *)(v4 + 80)+ v5 * v6 / v9 / *(double *)(v1 + OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotDiameter) * a1);
  }
  id v15 = objc_msgSend(*(id *)(v4 + 56), sel_colorWithAlphaComponent_, v10);
  long long v13 = *(void **)(v1 + v11);
  if (v13)
  {
    id v14 = v13;
    objc_msgSend(v14, sel_setColor_, v15);
  }
}

uint64_t sub_24D3461C0(double a1)
{
  uint64_t v2 = v1;
  if (v1[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDiskRadius] == 1)
  {
    uint64_t v4 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadiusSpring;
    uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskRadiusSpring];
    if (!sub_24D32AEBC())
    {
      sub_24D2D9F4C(a1);
      *(unsigned char *)(v5 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      uint64_t v6 = *(void *)&v2[v4];
      id v7 = (double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      double v8 = v7[35] + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      if (vabdd_f64(v8, *v7 + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
        double v8 = *v7 + *(double *)(v6 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      }
      double v9 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDiskRadius];
      *double v9 = v8;
      *((unsigned char *)v9 + 8) = 0;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_diskNode], sel_setPosition_, 0.0);
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyDotScale] == 1)
  {
    uint64_t v10 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring;
    uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotScaleSpring];
    if (!sub_24D32AEBC())
    {
      sub_24D2D9F4C(a1);
      *(unsigned char *)(v11 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      uint64_t v12 = *(void *)&v2[v10];
      long long v13 = (double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      double v14 = *v13 + *(double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      if (vabdd_f64(v13[35] + *(double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v14) <= *(double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
        double v14 = v13[35] + *(double *)(v12 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      }
      id v15 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedDotScale];
      *id v15 = v14;
      *((unsigned char *)v15 + 8) = 0;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode], sel_setScale_, v14 * *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_subScale]);
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyAngle] == 1)
  {
    uint64_t v16 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring;
    uint64_t v17 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_angleSpring];
    if (!sub_24D32AEBC() && v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_interactiveAngleFactor + 8] == 1)
    {
      sub_24D2D9F4C(a1);
      *(unsigned char *)(v17 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      uint64_t v18 = *(void *)&v2[v16];
      uint64_t v19 = (double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      double v20 = *v19 + *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      if (vabdd_f64(v19[35] + *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v20) <= *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
        double v20 = v19[35] + *(double *)(v18 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      }
      uint64_t v21 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAngle];
      *uint64_t v21 = v20;
      *((unsigned char *)v21 + 8) = 0;
      if (!*(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction]) {
        objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_gimbalNode], sel_setZRotation_);
      }
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOpacity] == 1)
  {
    uint64_t v22 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacitySpring;
    uint64_t v23 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_opacitySpring];
    if (!sub_24D32AEBC())
    {
      sub_24D2D9F4C(a1);
      *(unsigned char *)(v23 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      uint64_t v24 = *(void *)&v2[v22];
      id v25 = (double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      if (vabdd_f64(v25[35] + *(double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v25 + *(double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v24+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))double v26 = *v25 + *(double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o); {
      else
      }
        double v26 = v25[35] + *(double *)(v24 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      id v27 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOpacity];
      *id v27 = v26;
      *((unsigned char *)v27 + 8) = 0;
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotNode], sel_setAlpha_, v26);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode], sel_setAlpha_, v26);
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyBrightness] == 1)
  {
    uint64_t v28 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightnessSpring;
    uint64_t v29 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_brightnessSpring];
    if (!sub_24D32AEBC())
    {
      sub_24D2D9F4C(a1);
      *(unsigned char *)(v29 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      uint64_t v30 = *(void *)&v2[v28];
      uint64_t v31 = (double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      if (vabdd_f64(v31[35] + *(double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v31 + *(double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v30+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))double v32 = *v31 + *(double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o); {
      else
      }
        double v32 = v31[35] + *(double *)(v30 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      long long v33 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedBrightness];
      double *v33 = v32;
      *((unsigned char *)v33 + 8) = 0;
      unint64_t v34 = *(void **)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_renderingColor];
      id v35 = *(id *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_dotCGPathNode];
      id v36 = v34;
      sub_24D379D44(v36, v32);
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyOffset] == 1)
  {
    uint64_t v37 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_xOffsetSpring;
    uint64_t v38 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_xOffsetSpring];
    if (!sub_24D32AEBC() || !sub_24D32AEBC())
    {
      sub_24D2D9F4C(a1);
      *(unsigned char *)(v38 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      uint64_t v39 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring;
      uint64_t v40 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_yOffsetSpring];
      sub_24D2D9F4C(a1);
      *(unsigned char *)(v40 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      uint64_t v41 = *(void *)&v2[v37];
      os_log_type_t v42 = (double *)(v41 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      if (vabdd_f64(v42[35] + *(double *)(v41 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), *v42 + *(double *)(v41 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v41+ OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold))double v43 = *v42 + *(double *)(v41 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o); {
      else
      }
        double v43 = v42[35] + *(double *)(v41 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      uint64_t v44 = *(void *)&v2[v39];
      uint64_t v45 = (double *)(v44 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      double v46 = v45[35] + *(double *)(v44 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      if (vabdd_f64(v46, *v45 + *(double *)(v44 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o)) > *(double *)(v44 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
        double v46 = *v45 + *(double *)(v44 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      }
      uint64_t v47 = (double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedOffset];
      double *v47 = v43;
      v47[1] = v46;
      *((unsigned char *)v47 + 16) = 0;
      objc_msgSend(v2, sel_setPosition_, v43);
    }
  }
  if (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_shouldApplyRadiusFactor] == 1)
  {
    uint64_t v48 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactorSpring;
    uint64_t v49 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactorSpring];
    if (!sub_24D32AEBC() && (v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_radiusFactor + 8] & 1) == 0)
    {
      sub_24D2D9F4C(a1);
      *(unsigned char *)(v49 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      uint64_t v50 = *(void *)&v2[v48];
      uint64_t v51 = (double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
      swift_beginAccess();
      double v52 = *v51 + *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
      if (vabdd_f64(v51[35] + *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v52) <= *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
        double v52 = v51[35] + *(double *)(v50 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
      }
      sub_24D346048(v52);
    }
  }
  uint64_t v53 = OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_headingSpring;
  uint64_t v54 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_headingSpring];
  if (!sub_24D32AEBC()
    && *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_perimeterRotateOnceAction])
  {
    sub_24D2D9F4C(a1);
    *(unsigned char *)(v54 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
    uint64_t v55 = *(void *)&v2[v53];
    uint64_t v56 = (double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__s);
    swift_beginAccess();
    double v57 = *v56 + *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o);
    if (vabdd_f64(v56[35] + *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40), v57) <= *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring_stableValueThreshold)) {
      double v57 = v56[35] + *(double *)(v55 + OBJC_IVAR____TtC11FMFindingUI8FLSpring__o + 40);
    }
    *(double *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_presentedAbsoluteHeading] = v57;
    objc_msgSend(v2, sel_setZRotation_, v57 / 180.0 * 3.14159265);
  }
  uint64_t v58 = *(void *)&v2[OBJC_IVAR____TtC11FMFindingUI23FMPFSKPeripheralDotNode_btRangingNode];
  uint64_t v59 = *(void *)(v58 + OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_rangeDiskNode);
  uint64_t v60 = *(void *)(v59 + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_sizeSpring);
  sub_24D2D9F4C(a1);
  *(unsigned char *)(v60 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  uint64_t v61 = *(void *)(v59 + OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTRangeDiskNode_opacitySpring);
  sub_24D2D9F4C(a1);
  *(unsigned char *)(v61 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
  sub_24D34C0AC();
  sub_24D374A60(a1);
  unint64_t v62 = *(void *)(*(void *)(v58 + OBJC_IVAR____TtC11FMFindingUI19FMPFSKBTRangingNode_levelRingsNode)
                  + OBJC_IVAR____TtC11FMFindingUI18FMPFSKBTLevelsNode_ringNodes);
  if (!(v62 >> 62))
  {
    uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v63) {
      goto LABEL_52;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_24D39D2D0();
  uint64_t v63 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_52:
  if (v63 >= 1)
  {
    uint64_t v65 = 0;
    do
    {
      if ((v62 & 0xC000000000000001) != 0) {
        uint64_t v66 = (char *)MEMORY[0x253325220](v65, v62);
      }
      else {
        uint64_t v66 = (char *)*(id *)(v62 + 8 * v65 + 32);
      }
      uint64_t v67 = v66;
      ++v65;
      uint64_t v68 = *(void *)&v66[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_visibilitySpring];
      sub_24D2D9F4C(a1);
      *(unsigned char *)(v68 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      uint64_t v69 = *(void *)&v67[OBJC_IVAR____TtC11FMFindingUI21FMPFSKBTLevelRingNode_collapseSpring];
      sub_24D2D9F4C(a1);
      *(unsigned char *)(v69 + OBJC_IVAR____TtC11FMFindingUI15FMPFFluidSpring_ready) = 1;
      sub_24D38C914();
    }
    while (v63 != v65);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}