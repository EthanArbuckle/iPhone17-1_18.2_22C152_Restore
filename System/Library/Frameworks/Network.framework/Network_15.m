uint64_t nw_proxy_config_publish(void *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  BOOL v4;
  uint64_t v5;
  id v6;
  BOOL v7;
  NWConcrete_nw_agent *v8;
  void *v9;
  void *v10;
  void *v11;
  BOOL v12;
  void *v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  char *backtrace_string;
  os_log_type_t v18;
  BOOL v19;
  os_log_type_t v20;
  char v22;
  os_log_type_t type;
  uint8_t buf[4];
  const char *v25;
  __int16 v26;
  char *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E4F143B8];
  v1 = a1;
  v2 = (uint64_t)v1;
  if (!v1)
  {
    v13 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v25 = "nw_proxy_config_publish";
    v14 = (char *)_os_log_send_and_compose_impl();

    type = OS_LOG_TYPE_ERROR;
    v22 = 0;
    if (__nwlog_fault(v14, &type, &v22))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        v15 = __nwlog_obj();
        v16 = type;
        if (os_log_type_enabled(v15, type))
        {
          *(_DWORD *)buf = 136446210;
          v25 = "nw_proxy_config_publish";
          _os_log_impl(&dword_1830D4000, v15, v16, "%{public}s called with null config", buf, 0xCu);
        }
      }
      else if (v22)
      {
        backtrace_string = (char *)__nw_create_backtrace_string();
        v15 = __nwlog_obj();
        v18 = type;
        v19 = os_log_type_enabled(v15, type);
        if (backtrace_string)
        {
          if (v19)
          {
            *(_DWORD *)buf = 136446466;
            v25 = "nw_proxy_config_publish";
            v26 = 2082;
            v27 = backtrace_string;
            _os_log_impl(&dword_1830D4000, v15, v18, "%{public}s called with null config, dumping backtrace:%{public}s", buf, 0x16u);
          }

          free(backtrace_string);
          goto LABEL_24;
        }
        if (v19)
        {
          *(_DWORD *)buf = 136446210;
          v25 = "nw_proxy_config_publish";
          _os_log_impl(&dword_1830D4000, v15, v18, "%{public}s called with null config, no backtrace", buf, 0xCu);
        }
      }
      else
      {
        v15 = __nwlog_obj();
        v20 = type;
        if (os_log_type_enabled(v15, type))
        {
          *(_DWORD *)buf = 136446210;
          v25 = "nw_proxy_config_publish";
          _os_log_impl(&dword_1830D4000, v15, v20, "%{public}s called with null config, backtrace limit exceeded", buf, 0xCu);
        }
      }
    }
LABEL_24:
    if (v14) {
      free(v14);
    }
    goto LABEL_26;
  }
  v3 = (void *)v1[12];
  if (!v3)
  {
    if (nw_context_copy_implicit_context::onceToken != -1) {
      dispatch_once(&nw_context_copy_implicit_context::onceToken, &__block_literal_global_18);
    }
    v6 = (id)nw_context_copy_implicit_context::implicit_context;
    v7 = nw_context_copy_workloop(v6);
    v8 = nw_agent_create("Network", "Proxy", "Proxy", (void *)v7);
    v9 = *(void **)(v2 + 96);
    *(void *)(v2 + 96) = v8;

    v10 = *(void **)(v2 + 96);
    if (v10)
    {
      nw_agent_set_uuid(v10, (_OWORD *)(v2 + 56));
      nw_agent_set_error_handler(*(void **)(v2 + 96), &__block_literal_global_39914);
      nw_agent_set_assert_handlers(*(void **)(v2 + 96), &__block_literal_global_156, &__block_literal_global_159);
      v11 = *(void **)(v2 + 96);
      v12 = nw_proxy_config_copy_agent_data(v2);
      v5 = 1;
      nw_agent_change_state(v11, 1, 0, (void *)v12);

      goto LABEL_27;
    }
LABEL_26:
    v5 = 0;
    goto LABEL_27;
  }
  v4 = nw_proxy_config_copy_agent_data((uint64_t)v1);
  v5 = 1;
  nw_agent_change_state(v3, 1, 0, (void *)v4);

LABEL_27:
  return v5;
}

void sub_18395CB1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void __nw_proxy_config_publish_block_invoke(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  v4 = (id)gLogObj;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136446466;
    v6 = "nw_proxy_config_publish_block_invoke";
    __int16 v7 = 1024;
    int v8 = a3;
    _os_log_impl(&dword_1830D4000, v4, OS_LOG_TYPE_DEFAULT, "%{public}s Proxy config received error %d", (uint8_t *)&v5, 0x12u);
  }
}

void nw_proxy_config_unpublish(void *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  v2 = v1;
  if (v1)
  {
    nw_agent_change_state(*((void **)v1 + 12), 0, 0, 0);
    v3 = (void *)v2[12];
    v2[12] = 0;

    goto LABEL_3;
  }
  v4 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  v15 = "nw_proxy_config_unpublish";
  int v5 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v12 = 0;
  if (__nwlog_fault(v5, &type, &v12))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      v6 = __nwlog_obj();
      os_log_type_t v7 = type;
      if (os_log_type_enabled(v6, type))
      {
        *(_DWORD *)buf = 136446210;
        v15 = "nw_proxy_config_unpublish";
        _os_log_impl(&dword_1830D4000, v6, v7, "%{public}s called with null config", buf, 0xCu);
      }
    }
    else if (v12)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      v6 = __nwlog_obj();
      os_log_type_t v9 = type;
      BOOL v10 = os_log_type_enabled(v6, type);
      if (backtrace_string)
      {
        if (v10)
        {
          *(_DWORD *)buf = 136446466;
          v15 = "nw_proxy_config_unpublish";
          __int16 v16 = 2082;
          v17 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v6, v9, "%{public}s called with null config, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(backtrace_string);
        goto LABEL_20;
      }
      if (v10)
      {
        *(_DWORD *)buf = 136446210;
        v15 = "nw_proxy_config_unpublish";
        _os_log_impl(&dword_1830D4000, v6, v9, "%{public}s called with null config, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      v6 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (os_log_type_enabled(v6, type))
      {
        *(_DWORD *)buf = 136446210;
        v15 = "nw_proxy_config_unpublish";
        _os_log_impl(&dword_1830D4000, v6, v11, "%{public}s called with null config, backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_20:
  if (v5) {
    free(v5);
  }
LABEL_3:
}

uint64_t nw_proxy_config_get_generation(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  v2 = v1;
  if (v1)
  {
    uint64_t v3 = v1[41];
    goto LABEL_3;
  }
  int v5 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  __int16 v16 = "nw_proxy_config_get_generation";
  v6 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v13 = 0;
  if (__nwlog_fault(v6, &type, &v13))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_get_generation";
        _os_log_impl(&dword_1830D4000, v7, v8, "%{public}s called with null config", buf, 0xCu);
      }
    }
    else if (v13)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v10 = type;
      BOOL v11 = os_log_type_enabled(v7, type);
      if (backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v16 = "nw_proxy_config_get_generation";
          __int16 v17 = 2082;
          uint64_t v18 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v7, v10, "%{public}s called with null config, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(backtrace_string);
        goto LABEL_20;
      }
      if (v11)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_get_generation";
        _os_log_impl(&dword_1830D4000, v7, v10, "%{public}s called with null config, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_get_generation";
        _os_log_impl(&dword_1830D4000, v7, v12, "%{public}s called with null config, backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_20:
  if (v6) {
    free(v6);
  }
  uint64_t v3 = 0;
LABEL_3:

  return v3;
}

void nw_proxy_config_set_generation(void *a1, int a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  v4 = v3;
  if (v3)
  {
    *((_DWORD *)v3 + 41) = a2;
    goto LABEL_3;
  }
  int v5 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  __int16 v16 = "nw_proxy_config_set_generation";
  v6 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v13 = 0;
  if (__nwlog_fault(v6, &type, &v13))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_set_generation";
        _os_log_impl(&dword_1830D4000, v7, v8, "%{public}s called with null config", buf, 0xCu);
      }
    }
    else if (v13)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v10 = type;
      BOOL v11 = os_log_type_enabled(v7, type);
      if (backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v16 = "nw_proxy_config_set_generation";
          __int16 v17 = 2082;
          uint64_t v18 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v7, v10, "%{public}s called with null config, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(backtrace_string);
        goto LABEL_20;
      }
      if (v11)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_set_generation";
        _os_log_impl(&dword_1830D4000, v7, v10, "%{public}s called with null config, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_set_generation";
        _os_log_impl(&dword_1830D4000, v7, v12, "%{public}s called with null config, backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_20:
  if (v6) {
    free(v6);
  }
LABEL_3:
}

uint64_t nw_proxy_config_get_epoch(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  v2 = v1;
  if (v1)
  {
    uint64_t v3 = v1[84];
    goto LABEL_3;
  }
  int v5 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  __int16 v16 = "nw_proxy_config_get_epoch";
  v6 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v13 = 0;
  if (__nwlog_fault(v6, &type, &v13))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_get_epoch";
        _os_log_impl(&dword_1830D4000, v7, v8, "%{public}s called with null config", buf, 0xCu);
      }
    }
    else if (v13)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v10 = type;
      BOOL v11 = os_log_type_enabled(v7, type);
      if (backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v16 = "nw_proxy_config_get_epoch";
          __int16 v17 = 2082;
          uint64_t v18 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v7, v10, "%{public}s called with null config, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(backtrace_string);
        goto LABEL_20;
      }
      if (v11)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_get_epoch";
        _os_log_impl(&dword_1830D4000, v7, v10, "%{public}s called with null config, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_get_epoch";
        _os_log_impl(&dword_1830D4000, v7, v12, "%{public}s called with null config, backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_20:
  if (v6) {
    free(v6);
  }
  uint64_t v3 = 0;
LABEL_3:

  return v3;
}

void nw_proxy_config_set_epoch(void *a1, __int16 a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  v4 = v3;
  if (v3)
  {
    *((_WORD *)v3 + 84) = a2;
    goto LABEL_3;
  }
  int v5 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  __int16 v16 = "nw_proxy_config_set_epoch";
  v6 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v13 = 0;
  if (__nwlog_fault(v6, &type, &v13))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_set_epoch";
        _os_log_impl(&dword_1830D4000, v7, v8, "%{public}s called with null config", buf, 0xCu);
      }
    }
    else if (v13)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v10 = type;
      BOOL v11 = os_log_type_enabled(v7, type);
      if (backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v16 = "nw_proxy_config_set_epoch";
          __int16 v17 = 2082;
          uint64_t v18 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v7, v10, "%{public}s called with null config, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(backtrace_string);
        goto LABEL_20;
      }
      if (v11)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_set_epoch";
        _os_log_impl(&dword_1830D4000, v7, v10, "%{public}s called with null config, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      os_log_type_t v7 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v16 = "nw_proxy_config_set_epoch";
        _os_log_impl(&dword_1830D4000, v7, v12, "%{public}s called with null config, backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_20:
  if (v6) {
    free(v6);
  }
LABEL_3:
}

nw_relay_hop_t nw_relay_hop_create(nw_endpoint_t http3_relay_endpoint, nw_endpoint_t http2_relay_endpoint, nw_protocol_options_t relay_tls_options)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  unint64_t v5 = http3_relay_endpoint;
  unint64_t v6 = http2_relay_endpoint;
  os_log_type_t v7 = relay_tls_options;
  if (v5 | v6)
  {
    if (v5)
    {
      masque = nw_proxy_hop_create_masque((void *)v5);
      nw_proxy_hop_set_masque_version(masque, 2);
      if (!v6) {
        goto LABEL_10;
      }
      masque = masque;
      os_log_type_t v9 = (id)v6;
      if (masque)
      {
        objc_storeStrong((id *)&masque->fallback_endpoint, http2_relay_endpoint);
LABEL_6:

LABEL_9:
LABEL_10:
        os_log_type_t v12 = masque;
        char v13 = v7;
        if (v12)
        {
          objc_storeStrong((id *)&v12[6].isa, relay_tls_options);
LABEL_12:

          goto LABEL_13;
        }
        uint64_t v19 = __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        v50 = "nw_proxy_hop_set_tls_options";
        v20 = (char *)_os_log_send_and_compose_impl();

        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v47 = 0;
        if (__nwlog_fault(v20, &type, &v47))
        {
          if (type == OS_LOG_TYPE_FAULT)
          {
            v21 = __nwlog_obj();
            os_log_type_t v22 = type;
            if (os_log_type_enabled(v21, type))
            {
              *(_DWORD *)buf = 136446210;
              v50 = "nw_proxy_hop_set_tls_options";
              _os_log_impl(&dword_1830D4000, v21, v22, "%{public}s called with null hop", buf, 0xCu);
            }
          }
          else if (v47)
          {
            backtrace_string = (char *)__nw_create_backtrace_string();
            v21 = __nwlog_obj();
            os_log_type_t v27 = type;
            BOOL v28 = os_log_type_enabled(v21, type);
            if (backtrace_string)
            {
              if (v28)
              {
                *(_DWORD *)buf = 136446466;
                v50 = "nw_proxy_hop_set_tls_options";
                __int16 v51 = 2082;
                v52 = backtrace_string;
                _os_log_impl(&dword_1830D4000, v21, v27, "%{public}s called with null hop, dumping backtrace:%{public}s", buf, 0x16u);
              }

              free(backtrace_string);
              goto LABEL_69;
            }
            if (v28)
            {
              *(_DWORD *)buf = 136446210;
              v50 = "nw_proxy_hop_set_tls_options";
              _os_log_impl(&dword_1830D4000, v21, v27, "%{public}s called with null hop, no backtrace", buf, 0xCu);
            }
          }
          else
          {
            v21 = __nwlog_obj();
            os_log_type_t v41 = type;
            if (os_log_type_enabled(v21, type))
            {
              *(_DWORD *)buf = 136446210;
              v50 = "nw_proxy_hop_set_tls_options";
              _os_log_impl(&dword_1830D4000, v21, v41, "%{public}s called with null hop, backtrace limit exceeded", buf, 0xCu);
            }
          }
        }
LABEL_69:
        if (v20) {
          free(v20);
        }
        goto LABEL_12;
      }
      v29 = __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      v50 = "nw_proxy_hop_set_fallback_endpoint";
      v30 = (char *)_os_log_send_and_compose_impl();

      os_log_type_t type = OS_LOG_TYPE_ERROR;
      char v47 = 0;
      if (__nwlog_fault(v30, &type, &v47))
      {
        if (type == OS_LOG_TYPE_FAULT)
        {
          v31 = __nwlog_obj();
          os_log_type_t v32 = type;
          if (os_log_type_enabled(v31, type))
          {
            *(_DWORD *)buf = 136446210;
            v50 = "nw_proxy_hop_set_fallback_endpoint";
            _os_log_impl(&dword_1830D4000, v31, v32, "%{public}s called with null hop", buf, 0xCu);
          }
        }
        else if (v47)
        {
          v37 = (char *)__nw_create_backtrace_string();
          v31 = __nwlog_obj();
          os_log_type_t v38 = type;
          BOOL v39 = os_log_type_enabled(v31, type);
          if (v37)
          {
            if (v39)
            {
              *(_DWORD *)buf = 136446466;
              v50 = "nw_proxy_hop_set_fallback_endpoint";
              __int16 v51 = 2082;
              v52 = v37;
              _os_log_impl(&dword_1830D4000, v31, v38, "%{public}s called with null hop, dumping backtrace:%{public}s", buf, 0x16u);
            }

            free(v37);
            goto LABEL_80;
          }
          if (v39)
          {
            *(_DWORD *)buf = 136446210;
            v50 = "nw_proxy_hop_set_fallback_endpoint";
            _os_log_impl(&dword_1830D4000, v31, v38, "%{public}s called with null hop, no backtrace", buf, 0xCu);
          }
        }
        else
        {
          v31 = __nwlog_obj();
          os_log_type_t v45 = type;
          if (os_log_type_enabled(v31, type))
          {
            *(_DWORD *)buf = 136446210;
            v50 = "nw_proxy_hop_set_fallback_endpoint";
            _os_log_impl(&dword_1830D4000, v31, v45, "%{public}s called with null hop, backtrace limit exceeded", buf, 0xCu);
          }
        }
      }
LABEL_80:
      if (v30) {
        free(v30);
      }
      goto LABEL_6;
    }
    os_log_type_t v10 = nw_proxy_hop_create_masque((void *)v6);
    nw_proxy_hop_set_masque_version(v10, 2);
    BOOL v11 = v10;
    masque = v11;
    if (v11)
    {
      *((unsigned char *)v11 + 80) |= 0x20u;
      goto LABEL_9;
    }
    v33 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v50 = "nw_proxy_hop_set_fallback_only";
    v34 = (char *)_os_log_send_and_compose_impl();

    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v47 = 0;
    if (__nwlog_fault(v34, &type, &v47))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        v35 = __nwlog_obj();
        os_log_type_t v36 = type;
        if (os_log_type_enabled(v35, type))
        {
          *(_DWORD *)buf = 136446210;
          v50 = "nw_proxy_hop_set_fallback_only";
          _os_log_impl(&dword_1830D4000, v35, v36, "%{public}s called with null hop", buf, 0xCu);
        }
      }
      else if (v47)
      {
        v42 = (char *)__nw_create_backtrace_string();
        v35 = __nwlog_obj();
        os_log_type_t v43 = type;
        BOOL v44 = os_log_type_enabled(v35, type);
        if (v42)
        {
          if (v44)
          {
            *(_DWORD *)buf = 136446466;
            v50 = "nw_proxy_hop_set_fallback_only";
            __int16 v51 = 2082;
            v52 = v42;
            _os_log_impl(&dword_1830D4000, v35, v43, "%{public}s called with null hop, dumping backtrace:%{public}s", buf, 0x16u);
          }

          free(v42);
          goto LABEL_85;
        }
        if (v44)
        {
          *(_DWORD *)buf = 136446210;
          v50 = "nw_proxy_hop_set_fallback_only";
          _os_log_impl(&dword_1830D4000, v35, v43, "%{public}s called with null hop, no backtrace", buf, 0xCu);
        }
      }
      else
      {
        v35 = __nwlog_obj();
        os_log_type_t v46 = type;
        if (os_log_type_enabled(v35, type))
        {
          *(_DWORD *)buf = 136446210;
          v50 = "nw_proxy_hop_set_fallback_only";
          _os_log_impl(&dword_1830D4000, v35, v46, "%{public}s called with null hop, backtrace limit exceeded", buf, 0xCu);
        }
      }
    }
LABEL_85:
    if (v34) {
      free(v34);
    }
    goto LABEL_9;
  }
  v15 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  v50 = "nw_relay_hop_create";
  __int16 v16 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v47 = 0;
  if (__nwlog_fault(v16, &type, &v47))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      __int16 v17 = __nwlog_obj();
      os_log_type_t v18 = type;
      if (os_log_type_enabled(v17, type))
      {
        *(_DWORD *)buf = 136446210;
        v50 = "nw_relay_hop_create";
        _os_log_impl(&dword_1830D4000, v17, v18, "%{public}s called with null (http3_relay_endpoint || http2_relay_endpoint)", buf, 0xCu);
      }
    }
    else if (v47)
    {
      v23 = (char *)__nw_create_backtrace_string();
      __int16 v17 = __nwlog_obj();
      os_log_type_t v24 = type;
      BOOL v25 = os_log_type_enabled(v17, type);
      if (v23)
      {
        if (v25)
        {
          *(_DWORD *)buf = 136446466;
          v50 = "nw_relay_hop_create";
          __int16 v51 = 2082;
          v52 = v23;
          _os_log_impl(&dword_1830D4000, v17, v24, "%{public}s called with null (http3_relay_endpoint || http2_relay_endpoint), dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(v23);
        goto LABEL_63;
      }
      if (v25)
      {
        *(_DWORD *)buf = 136446210;
        v50 = "nw_relay_hop_create";
        _os_log_impl(&dword_1830D4000, v17, v24, "%{public}s called with null (http3_relay_endpoint || http2_relay_endpoint), no backtrace", buf, 0xCu);
      }
    }
    else
    {
      __int16 v17 = __nwlog_obj();
      os_log_type_t v40 = type;
      if (os_log_type_enabled(v17, type))
      {
        *(_DWORD *)buf = 136446210;
        v50 = "nw_relay_hop_create";
        _os_log_impl(&dword_1830D4000, v17, v40, "%{public}s called with null (http3_relay_endpoint || http2_relay_endpoint), backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_63:
  if (v16) {
    free(v16);
  }
  os_log_type_t v12 = 0;
LABEL_13:

  return v12;
}

void sub_18395E2B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void nw_relay_hop_add_additional_http_header_field(nw_relay_hop_t relay_hop, const char *field_name, const char *field_value)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  unint64_t v5 = relay_hop;
  unint64_t v6 = v5;
  if (v5)
  {
    nw_proxy_hop_add_extra_header(v5, (uint64_t)field_name, (uint64_t)field_value);
    goto LABEL_3;
  }
  os_log_type_t v7 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  os_log_type_t v18 = "nw_relay_hop_add_additional_http_header_field";
  os_log_type_t v8 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v15 = 0;
  if (__nwlog_fault(v8, &type, &v15))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (os_log_type_enabled(v9, type))
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v18 = "nw_relay_hop_add_additional_http_header_field";
        _os_log_impl(&dword_1830D4000, v9, v10, "%{public}s called with null proxy_hop", buf, 0xCu);
      }
    }
    else if (v15)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v9 = __nwlog_obj();
      os_log_type_t v12 = type;
      BOOL v13 = os_log_type_enabled(v9, type);
      if (backtrace_string)
      {
        if (v13)
        {
          *(_DWORD *)buf = 136446466;
          os_log_type_t v18 = "nw_relay_hop_add_additional_http_header_field";
          __int16 v19 = 2082;
          v20 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v9, v12, "%{public}s called with null proxy_hop, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(backtrace_string);
        goto LABEL_20;
      }
      if (v13)
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v18 = "nw_relay_hop_add_additional_http_header_field";
        _os_log_impl(&dword_1830D4000, v9, v12, "%{public}s called with null proxy_hop, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      os_log_type_t v9 = __nwlog_obj();
      os_log_type_t v14 = type;
      if (os_log_type_enabled(v9, type))
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v18 = "nw_relay_hop_add_additional_http_header_field";
        _os_log_impl(&dword_1830D4000, v9, v14, "%{public}s called with null proxy_hop, backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_20:
  if (v8) {
    free(v8);
  }
LABEL_3:
}

nw_proxy_config_t nw_proxy_config_create_relay(nw_relay_hop_t first_hop, nw_relay_hop_t second_hop)
{
  uint64_t v39 = *MEMORY[0x1E4F143B8];
  id v3 = first_hop;
  v4 = second_hop;
  if (v3)
  {
    unint64_t v5 = v3;
    char isa = (char)v5[10].isa;

    BOOL v7 = nw_array_create();
    nw_array_append(v7, v5);
    if ((isa & 0x20) == 0)
    {
      if (!v4) {
        goto LABEL_6;
      }
      os_log_type_t v8 = v4;
      char v9 = (char)v8[10].isa;

      if ((v9 & 0x20) == 0)
      {
        nw_array_append(v7, v8);
LABEL_6:
        id v10 = (id)v7;
        BOOL v11 = networkd_settings_get_BOOL((const char *)nw_setting_disable_swift_tls_privacy_proxy);
        privacy_proxy_internal = nw_proxy_config_create_privacy_proxy_internal(v10, !v11);

        nw_proxy_config_set_is_privacy_proxy(privacy_proxy_internal, 0, 0);
        *((unsigned char *)privacy_proxy_internal + 170) |= 0xCu;
        *((unsigned char *)privacy_proxy_internal + 171) |= 0x80u;
        BOOL v13 = v5;
        id v14 = v13[4];

        if (v14)
        {
          if (v4)
          {
            char v15 = v4;
            id v16 = v15[4];

            if (!v16) {
              goto LABEL_20;
            }
          }
          else
          {
          }
          fallback_privacy_proxy = nw_proxy_config_create_fallback_privacy_proxy(v10);
          nw_proxy_config_set_is_privacy_proxy(fallback_privacy_proxy, 0, 0);
          *((unsigned char *)fallback_privacy_proxy + 170) |= 0xCu;
          *((unsigned char *)fallback_privacy_proxy + 171) |= 0x80u;
          privacy_proxy_internal = privacy_proxy_internal;
          v23 = fallback_privacy_proxy;
          objc_storeStrong((id *)&privacy_proxy_internal->fallback_config, fallback_privacy_proxy);
        }
LABEL_20:

        goto LABEL_21;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v21 = (id)gLogObj;
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v36 = "nw_proxy_config_create_relay";
        _os_log_impl(&dword_1830D4000, v21, OS_LOG_TYPE_ERROR, "%{public}s Second hop proxy does not support HTTP/3", buf, 0xCu);
      }
LABEL_17:

      privacy_proxy_internal = 0;
      goto LABEL_20;
    }
    if (v4)
    {
      __int16 v17 = v4;
      char v18 = (char)v17[10].isa;

      if ((v18 & 0x20) == 0)
      {
        __int16 v19 = v17;
        id v20 = v19[4];

        if (!v20)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v21 = (id)gLogObj;
          if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 136446210;
            os_log_type_t v36 = "nw_proxy_config_create_relay";
            _os_log_impl(&dword_1830D4000, v21, OS_LOG_TYPE_ERROR, "%{public}s Second hop proxy does not support HTTP/2 fallback", buf, 0xCu);
          }
          goto LABEL_17;
        }
      }
      nw_array_append(v7, v17);
    }
    privacy_proxy_internal = nw_proxy_config_create_fallback_privacy_proxy((void *)v7);
    nw_proxy_config_set_is_privacy_proxy(privacy_proxy_internal, 0, 0);
    *((unsigned char *)privacy_proxy_internal + 170) |= 0xCu;
    *((unsigned char *)privacy_proxy_internal + 171) |= 0x80u;
    goto LABEL_20;
  }
  BOOL v25 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  os_log_type_t v36 = "nw_proxy_config_create_relay";
  v26 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v33 = 0;
  if (__nwlog_fault(v26, &type, &v33))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v27 = __nwlog_obj();
      os_log_type_t v28 = type;
      if (os_log_type_enabled(v27, type))
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v36 = "nw_proxy_config_create_relay";
        _os_log_impl(&dword_1830D4000, v27, v28, "%{public}s called with null first_hop", buf, 0xCu);
      }
    }
    else if (v33)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v27 = __nwlog_obj();
      os_log_type_t v30 = type;
      BOOL v31 = os_log_type_enabled(v27, type);
      if (backtrace_string)
      {
        if (v31)
        {
          *(_DWORD *)buf = 136446466;
          os_log_type_t v36 = "nw_proxy_config_create_relay";
          __int16 v37 = 2082;
          os_log_type_t v38 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v27, v30, "%{public}s called with null first_hop, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(backtrace_string);
        goto LABEL_41;
      }
      if (v31)
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v36 = "nw_proxy_config_create_relay";
        _os_log_impl(&dword_1830D4000, v27, v30, "%{public}s called with null first_hop, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      os_log_type_t v27 = __nwlog_obj();
      os_log_type_t v32 = type;
      if (os_log_type_enabled(v27, type))
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v36 = "nw_proxy_config_create_relay";
        _os_log_impl(&dword_1830D4000, v27, v32, "%{public}s called with null first_hop, backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_41:
  if (v26) {
    free(v26);
  }
  privacy_proxy_internal = 0;
LABEL_21:

  return &privacy_proxy_internal->super;
}

void sub_18395EAD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

nw_proxy_config_t nw_proxy_config_create_oblivious_http(nw_relay_hop_t relay, const char *relay_resource_path, const uint8_t *gateway_key_config, size_t gateway_key_config_length)
{
  uint64_t v59 = *MEMORY[0x1E4F143B8];
  BOOL v7 = relay;
  if (!v7)
  {
    uint64_t v21 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v56 = "nw_proxy_config_create_oblivious_http";
    os_log_type_t v22 = (char *)_os_log_send_and_compose_impl();

    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v53 = 0;
    if (!__nwlog_fault(v22, &type, &v53)) {
      goto LABEL_91;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      v23 = __nwlog_obj();
      os_log_type_t v24 = type;
      if (os_log_type_enabled(v23, type))
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v24, "%{public}s called with null relay", buf, 0xCu);
      }
      goto LABEL_90;
    }
    if (!v53)
    {
      v23 = __nwlog_obj();
      os_log_type_t v48 = type;
      if (os_log_type_enabled(v23, type))
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v48, "%{public}s called with null relay, backtrace limit exceeded", buf, 0xCu);
      }
      goto LABEL_90;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    v23 = __nwlog_obj();
    os_log_type_t v36 = type;
    BOOL v37 = os_log_type_enabled(v23, type);
    if (!backtrace_string)
    {
      if (v37)
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v36, "%{public}s called with null relay, no backtrace", buf, 0xCu);
      }
      goto LABEL_90;
    }
    if (v37)
    {
      *(_DWORD *)buf = 136446466;
      v56 = "nw_proxy_config_create_oblivious_http";
      __int16 v57 = 2082;
      v58 = backtrace_string;
      _os_log_impl(&dword_1830D4000, v23, v36, "%{public}s called with null relay, dumping backtrace:%{public}s", buf, 0x16u);
    }
    goto LABEL_52;
  }
  if (!relay_resource_path)
  {
    BOOL v25 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v56 = "nw_proxy_config_create_oblivious_http";
    os_log_type_t v22 = (char *)_os_log_send_and_compose_impl();

    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v53 = 0;
    if (!__nwlog_fault(v22, &type, &v53)) {
      goto LABEL_91;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      v23 = __nwlog_obj();
      os_log_type_t v26 = type;
      if (os_log_type_enabled(v23, type))
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v26, "%{public}s called with null relay_resource_path", buf, 0xCu);
      }
      goto LABEL_90;
    }
    if (!v53)
    {
      v23 = __nwlog_obj();
      os_log_type_t v49 = type;
      if (os_log_type_enabled(v23, type))
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v49, "%{public}s called with null relay_resource_path, backtrace limit exceeded", buf, 0xCu);
      }
      goto LABEL_90;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    v23 = __nwlog_obj();
    os_log_type_t v38 = type;
    BOOL v39 = os_log_type_enabled(v23, type);
    if (!backtrace_string)
    {
      if (v39)
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v38, "%{public}s called with null relay_resource_path, no backtrace", buf, 0xCu);
      }
      goto LABEL_90;
    }
    if (v39)
    {
      *(_DWORD *)buf = 136446466;
      v56 = "nw_proxy_config_create_oblivious_http";
      __int16 v57 = 2082;
      v58 = backtrace_string;
      _os_log_impl(&dword_1830D4000, v23, v38, "%{public}s called with null relay_resource_path, dumping backtrace:%{public}s", buf, 0x16u);
    }
    goto LABEL_52;
  }
  if (!gateway_key_config)
  {
    os_log_type_t v27 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v56 = "nw_proxy_config_create_oblivious_http";
    os_log_type_t v22 = (char *)_os_log_send_and_compose_impl();

    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v53 = 0;
    if (!__nwlog_fault(v22, &type, &v53)) {
      goto LABEL_91;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      v23 = __nwlog_obj();
      os_log_type_t v28 = type;
      if (os_log_type_enabled(v23, type))
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v28, "%{public}s called with null gateway_key_config", buf, 0xCu);
      }
      goto LABEL_90;
    }
    if (!v53)
    {
      v23 = __nwlog_obj();
      os_log_type_t v50 = type;
      if (os_log_type_enabled(v23, type))
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v50, "%{public}s called with null gateway_key_config, backtrace limit exceeded", buf, 0xCu);
      }
      goto LABEL_90;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    v23 = __nwlog_obj();
    os_log_type_t v40 = type;
    BOOL v41 = os_log_type_enabled(v23, type);
    if (!backtrace_string)
    {
      if (v41)
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v40, "%{public}s called with null gateway_key_config, no backtrace", buf, 0xCu);
      }
      goto LABEL_90;
    }
    if (v41)
    {
      *(_DWORD *)buf = 136446466;
      v56 = "nw_proxy_config_create_oblivious_http";
      __int16 v57 = 2082;
      v58 = backtrace_string;
      _os_log_impl(&dword_1830D4000, v23, v40, "%{public}s called with null gateway_key_config, dumping backtrace:%{public}s", buf, 0x16u);
    }
LABEL_52:

    free(backtrace_string);
    if (!v22) {
      goto LABEL_93;
    }
    goto LABEL_92;
  }
  if (!gateway_key_config_length)
  {
    v29 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v56 = "nw_proxy_config_create_oblivious_http";
    os_log_type_t v22 = (char *)_os_log_send_and_compose_impl();

    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v53 = 0;
    if (!__nwlog_fault(v22, &type, &v53)) {
      goto LABEL_91;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      v23 = __nwlog_obj();
      os_log_type_t v30 = type;
      if (os_log_type_enabled(v23, type))
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v30, "%{public}s called with null gateway_key_config_length", buf, 0xCu);
      }
    }
    else if (v53)
    {
      v42 = (char *)__nw_create_backtrace_string();
      v23 = __nwlog_obj();
      os_log_type_t v43 = type;
      BOOL v44 = os_log_type_enabled(v23, type);
      if (v42)
      {
        if (v44)
        {
          *(_DWORD *)buf = 136446466;
          v56 = "nw_proxy_config_create_oblivious_http";
          __int16 v57 = 2082;
          v58 = v42;
          _os_log_impl(&dword_1830D4000, v23, v43, "%{public}s called with null gateway_key_config_length, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(v42);
LABEL_91:
        if (!v22)
        {
LABEL_93:
          fallback_privacy_proxy = 0;
          goto LABEL_12;
        }
LABEL_92:
        free(v22);
        goto LABEL_93;
      }
      if (v44)
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v43, "%{public}s called with null gateway_key_config_length, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      v23 = __nwlog_obj();
      os_log_type_t v51 = type;
      if (os_log_type_enabled(v23, type))
      {
        *(_DWORD *)buf = 136446210;
        v56 = "nw_proxy_config_create_oblivious_http";
        _os_log_impl(&dword_1830D4000, v23, v51, "%{public}s called with null gateway_key_config_length, backtrace limit exceeded", buf, 0xCu);
      }
    }
LABEL_90:

    goto LABEL_91;
  }
  oblivious_http = nw_proxy_hop_create_oblivious_http((uint64_t)gateway_key_config, gateway_key_config_length, (uint64_t)relay_resource_path);
  if (!oblivious_http)
  {
    BOOL v31 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v56 = "nw_proxy_config_create_oblivious_http";
    os_log_type_t v32 = (char *)_os_log_send_and_compose_impl();

    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v53 = 0;
    if (__nwlog_fault(v32, &type, &v53))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        char v33 = __nwlog_obj();
        os_log_type_t v34 = type;
        if (os_log_type_enabled(v33, type))
        {
          *(_DWORD *)buf = 136446210;
          v56 = "nw_proxy_config_create_oblivious_http";
          _os_log_impl(&dword_1830D4000, v33, v34, "%{public}s called with null oblivious_hop", buf, 0xCu);
        }
      }
      else if (v53)
      {
        os_log_type_t v45 = (char *)__nw_create_backtrace_string();
        char v33 = __nwlog_obj();
        os_log_type_t v46 = type;
        BOOL v47 = os_log_type_enabled(v33, type);
        if (v45)
        {
          if (v47)
          {
            *(_DWORD *)buf = 136446466;
            v56 = "nw_proxy_config_create_oblivious_http";
            __int16 v57 = 2082;
            v58 = v45;
            _os_log_impl(&dword_1830D4000, v33, v46, "%{public}s called with null oblivious_hop, dumping backtrace:%{public}s", buf, 0x16u);
          }

          free(v45);
          goto LABEL_97;
        }
        if (v47)
        {
          *(_DWORD *)buf = 136446210;
          v56 = "nw_proxy_config_create_oblivious_http";
          _os_log_impl(&dword_1830D4000, v33, v46, "%{public}s called with null oblivious_hop, no backtrace", buf, 0xCu);
        }
      }
      else
      {
        char v33 = __nwlog_obj();
        os_log_type_t v52 = type;
        if (os_log_type_enabled(v33, type))
        {
          *(_DWORD *)buf = 136446210;
          v56 = "nw_proxy_config_create_oblivious_http";
          _os_log_impl(&dword_1830D4000, v33, v52, "%{public}s called with null oblivious_hop, backtrace limit exceeded", buf, 0xCu);
        }
      }
    }
LABEL_97:
    if (v32) {
      free(v32);
    }
    fallback_privacy_proxy = 0;
    goto LABEL_11;
  }
  char v9 = v7;
  char isa = (char)v9[10].isa;

  BOOL v11 = nw_array_create();
  nw_array_append(v11, v9);
  nw_array_append(v11, oblivious_http);
  if ((isa & 0x20) != 0)
  {
    fallback_privacy_proxy = nw_proxy_config_create_fallback_privacy_proxy((void *)v11);
    nw_proxy_config_set_is_privacy_proxy(fallback_privacy_proxy, 0, 0);
    *((unsigned char *)fallback_privacy_proxy + 170) |= 0xCu;
    *((unsigned char *)fallback_privacy_proxy + 171) |= 0x80u;
    *((unsigned char *)fallback_privacy_proxy + 172) |= 1u;
  }
  else
  {
    id v12 = (id)v11;
    BOOL v13 = networkd_settings_get_BOOL((const char *)nw_setting_disable_swift_tls_privacy_proxy);
    fallback_privacy_proxy = nw_proxy_config_create_privacy_proxy_internal(v12, !v13);

    nw_proxy_config_set_is_privacy_proxy(fallback_privacy_proxy, 0, 0);
    *((unsigned char *)fallback_privacy_proxy + 170) |= 0xCu;
    *((unsigned char *)fallback_privacy_proxy + 171) |= 0x80u;
    *((unsigned char *)fallback_privacy_proxy + 172) |= 1u;
    char v15 = v9;
    id v16 = v15[4];

    if (v16)
    {
      __int16 v17 = nw_proxy_config_create_fallback_privacy_proxy(v12);
      nw_proxy_config_set_is_privacy_proxy(v17, 0, 0);
      *((unsigned char *)v17 + 170) |= 0xCu;
      *((unsigned char *)v17 + 171) |= 0x80u;
      *((unsigned char *)v17 + 172) |= 1u;
      char v18 = fallback_privacy_proxy;
      __int16 v19 = v17;
      objc_storeStrong(v18 + 11, v17);
    }
  }
LABEL_11:

LABEL_12:
  return &fallback_privacy_proxy->super;
}

void sub_18395F718(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

nw_proxy_config_t nw_proxy_config_create_http_connect(nw_endpoint_t proxy_endpoint, nw_protocol_options_t proxy_tls_options)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  id v3 = proxy_endpoint;
  v4 = proxy_tls_options;
  if (v3)
  {
    unint64_t v5 = objc_alloc_init(NWConcrete_nw_protocol_stack);
    if (nw_proxy_copy_http_connect_definition::onceToken != -1) {
      dispatch_once(&nw_proxy_copy_http_connect_definition::onceToken, &__block_literal_global_102_35650);
    }
    id v6 = (id)nw_proxy_copy_http_connect_definition::proxy_definition;
    options = nw_proxy_create_options(v6);

    nw_protocol_options_set_proxy_endpoint(options, v3, 0);
    nw_protocol_stack_append_application_protocol(v5, options);
    if (v4 && nw_protocol_options_is_tls(v4))
    {
      nw_protocol_stack_append_application_protocol(v5, v4);
      int v8 = 4002;
    }
    else
    {
      int v8 = 3004;
    }
    char v9 = nw_proxy_config_create_with_stack(v3, v5);
    id v10 = v9;
    if (v9)
    {
      v9->os_log_type_t type = v8;
      *((unsigned char *)v9 + 170) |= 8u;
      if (nw_path_is_endpoint_localhost(v3)) {
        char v11 = 0;
      }
      else {
        char v11 = 0x80;
      }
      *((unsigned char *)v10 + 171) = v11 & 0x80 | *((unsigned char *)v10 + 171) & 0x7F;
      id v12 = v10;
LABEL_13:

      goto LABEL_14;
    }
    char v18 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    char v33 = "nw_proxy_config_create_http_connect";
    __int16 v19 = (char *)_os_log_send_and_compose_impl();

    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v30 = 0;
    if (__nwlog_fault(v19, &type, &v30))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        id v20 = __nwlog_obj();
        os_log_type_t v21 = type;
        if (os_log_type_enabled(v20, type))
        {
          *(_DWORD *)buf = 136446210;
          char v33 = "nw_proxy_config_create_http_connect";
          _os_log_impl(&dword_1830D4000, v20, v21, "%{public}s called with null config", buf, 0xCu);
        }
      }
      else if (v30)
      {
        backtrace_string = (char *)__nw_create_backtrace_string();
        id v20 = __nwlog_obj();
        os_log_type_t v26 = type;
        BOOL v27 = os_log_type_enabled(v20, type);
        if (backtrace_string)
        {
          if (v27)
          {
            *(_DWORD *)buf = 136446466;
            char v33 = "nw_proxy_config_create_http_connect";
            __int16 v34 = 2082;
            v35 = backtrace_string;
            _os_log_impl(&dword_1830D4000, v20, v26, "%{public}s called with null config, dumping backtrace:%{public}s", buf, 0x16u);
          }

          free(backtrace_string);
          goto LABEL_50;
        }
        if (v27)
        {
          *(_DWORD *)buf = 136446210;
          char v33 = "nw_proxy_config_create_http_connect";
          _os_log_impl(&dword_1830D4000, v20, v26, "%{public}s called with null config, no backtrace", buf, 0xCu);
        }
      }
      else
      {
        id v20 = __nwlog_obj();
        os_log_type_t v29 = type;
        if (os_log_type_enabled(v20, type))
        {
          *(_DWORD *)buf = 136446210;
          char v33 = "nw_proxy_config_create_http_connect";
          _os_log_impl(&dword_1830D4000, v20, v29, "%{public}s called with null config, backtrace limit exceeded", buf, 0xCu);
        }
      }
    }
LABEL_50:
    if (v19) {
      free(v19);
    }
    goto LABEL_13;
  }
  id v14 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  char v33 = "nw_proxy_config_create_http_connect";
  char v15 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v30 = 0;
  if (__nwlog_fault(v15, &type, &v30))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      id v16 = __nwlog_obj();
      os_log_type_t v17 = type;
      if (os_log_type_enabled(v16, type))
      {
        *(_DWORD *)buf = 136446210;
        char v33 = "nw_proxy_config_create_http_connect";
        _os_log_impl(&dword_1830D4000, v16, v17, "%{public}s called with null proxy_endpoint", buf, 0xCu);
      }
    }
    else if (v30)
    {
      os_log_type_t v22 = (char *)__nw_create_backtrace_string();
      id v16 = __nwlog_obj();
      os_log_type_t v23 = type;
      BOOL v24 = os_log_type_enabled(v16, type);
      if (v22)
      {
        if (v24)
        {
          *(_DWORD *)buf = 136446466;
          char v33 = "nw_proxy_config_create_http_connect";
          __int16 v34 = 2082;
          v35 = v22;
          _os_log_impl(&dword_1830D4000, v16, v23, "%{public}s called with null proxy_endpoint, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(v22);
        goto LABEL_44;
      }
      if (v24)
      {
        *(_DWORD *)buf = 136446210;
        char v33 = "nw_proxy_config_create_http_connect";
        _os_log_impl(&dword_1830D4000, v16, v23, "%{public}s called with null proxy_endpoint, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      id v16 = __nwlog_obj();
      os_log_type_t v28 = type;
      if (os_log_type_enabled(v16, type))
      {
        *(_DWORD *)buf = 136446210;
        char v33 = "nw_proxy_config_create_http_connect";
        _os_log_impl(&dword_1830D4000, v16, v28, "%{public}s called with null proxy_endpoint, backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_44:
  if (v15) {
    free(v15);
  }
  id v10 = 0;
LABEL_14:

  return &v10->super;
}

void sub_18395FCF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_18395FD3C()
{
}

void nw_proxy_config_set_failover_allowed(nw_proxy_config_t proxy_config, BOOL failover_allowed)
{
  BOOL v2 = failover_allowed;
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  nw_proxy_config_t v3 = proxy_config;
  nw_proxy_config_t v4 = v3;
  if (v3)
  {
    if (v2) {
      char v5 = 0;
    }
    else {
      char v5 = 8;
    }
    BYTE2(v3[21].isa) = BYTE2(v3[21].isa) & 0xF7 | v5;
    char isa = v3[11].isa;
    if (isa) {
      nw_proxy_config_set_failover_allowed(isa, v2);
    }
    goto LABEL_7;
  }
  BOOL v7 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  char v18 = "nw_proxy_config_set_failover_allowed";
  int v8 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v15 = 0;
  if (__nwlog_fault(v8, &type, &v15))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      char v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (os_log_type_enabled(v9, type))
      {
        *(_DWORD *)buf = 136446210;
        char v18 = "nw_proxy_config_set_failover_allowed";
        _os_log_impl(&dword_1830D4000, v9, v10, "%{public}s called with null proxy_config", buf, 0xCu);
      }
    }
    else if (v15)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      char v9 = __nwlog_obj();
      os_log_type_t v12 = type;
      BOOL v13 = os_log_type_enabled(v9, type);
      if (backtrace_string)
      {
        if (v13)
        {
          *(_DWORD *)buf = 136446466;
          char v18 = "nw_proxy_config_set_failover_allowed";
          __int16 v19 = 2082;
          id v20 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v9, v12, "%{public}s called with null proxy_config, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(backtrace_string);
        goto LABEL_24;
      }
      if (v13)
      {
        *(_DWORD *)buf = 136446210;
        char v18 = "nw_proxy_config_set_failover_allowed";
        _os_log_impl(&dword_1830D4000, v9, v12, "%{public}s called with null proxy_config, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      char v9 = __nwlog_obj();
      os_log_type_t v14 = type;
      if (os_log_type_enabled(v9, type))
      {
        *(_DWORD *)buf = 136446210;
        char v18 = "nw_proxy_config_set_failover_allowed";
        _os_log_impl(&dword_1830D4000, v9, v14, "%{public}s called with null proxy_config, backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_24:
  if (v8) {
    free(v8);
  }
LABEL_7:
}

void sub_183960000(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL nw_proxy_config_get_failover_allowed(nw_proxy_config_t proxy_config)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  nw_proxy_config_t v1 = proxy_config;
  nw_proxy_config_t v2 = v1;
  if (v1)
  {
    BOOL v3 = (BYTE2(v1[21].isa) & 8) == 0;
    goto LABEL_3;
  }
  char v5 = __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  id v16 = "nw_proxy_config_get_failover_allowed";
  id v6 = (char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v13 = 0;
  if (__nwlog_fault(v6, &type, &v13))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        id v16 = "nw_proxy_config_get_failover_allowed";
        _os_log_impl(&dword_1830D4000, v7, v8, "%{public}s called with null proxy_config", buf, 0xCu);
      }
    }
    else if (v13)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      BOOL v7 = __nwlog_obj();
      os_log_type_t v10 = type;
      BOOL v11 = os_log_type_enabled(v7, type);
      if (backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446466;
          id v16 = "nw_proxy_config_get_failover_allowed";
          __int16 v17 = 2082;
          char v18 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v7, v10, "%{public}s called with null proxy_config, dumping backtrace:%{public}s", buf, 0x16u);
        }

        free(backtrace_string);
        goto LABEL_20;
      }
      if (v11)
      {
        *(_DWORD *)buf = 136446210;
        id v16 = "nw_proxy_config_get_failover_allowed";
        _os_log_impl(&dword_1830D4000, v7, v10, "%{public}s called with null proxy_config, no backtrace", buf, 0xCu);
      }
    }
    else
    {
      BOOL v7 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        id v16 = "nw_proxy_config_get_failover_allowed";
        _os_log_impl(&dword_1830D4000, v7, v12, "%{public}s called with null proxy_config, backtrace limit exceeded", buf, 0xCu);
      }
    }
  }
LABEL_20:
  if (v6) {
    free(v6);
  }
  BOOL v3 = 0;
LABEL_3:

  return v3;
}

BOOL nw_protocol_http1_create(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
    char v33 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v45 = 0;
    if (!__nwlog_fault(v33, &type, &v45)) {
      goto LABEL_75;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      __int16 v34 = __nwlog_obj();
      os_log_type_t v35 = type;
      if (!os_log_type_enabled(v34, type)) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
      uint64_t v36 = "%{public}s called with null identifier";
LABEL_74:
      _os_log_impl(&dword_1830D4000, v34, v35, v36, buf, 0xCu);
      goto LABEL_75;
    }
    if (!v45)
    {
      __int16 v34 = __nwlog_obj();
      os_log_type_t v35 = type;
      if (os_log_type_enabled(v34, type))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
        uint64_t v36 = "%{public}s called with null identifier, backtrace limit exceeded";
        goto LABEL_74;
      }
      goto LABEL_75;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    __int16 v34 = __nwlog_obj();
    os_log_type_t v35 = type;
    BOOL v40 = os_log_type_enabled(v34, type);
    if (!backtrace_string)
    {
      if (v40)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
        uint64_t v36 = "%{public}s called with null identifier, no backtrace";
        goto LABEL_74;
      }
      goto LABEL_75;
    }
    if (!v40) {
      goto LABEL_61;
    }
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
    *(_WORD *)&buf[12] = 2082;
    *(void *)&buf[14] = backtrace_string;
    BOOL v41 = "%{public}s called with null identifier, dumping backtrace:%{public}s";
LABEL_60:
    _os_log_impl(&dword_1830D4000, v34, v35, v41, buf, 0x16u);
    goto LABEL_61;
  }
  if (!a3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
    char v33 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v45 = 0;
    if (!__nwlog_fault(v33, &type, &v45)) {
      goto LABEL_75;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      __int16 v34 = __nwlog_obj();
      os_log_type_t v35 = type;
      if (!os_log_type_enabled(v34, type)) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
      uint64_t v36 = "%{public}s called with null endpoint";
      goto LABEL_74;
    }
    if (!v45)
    {
      __int16 v34 = __nwlog_obj();
      os_log_type_t v35 = type;
      if (os_log_type_enabled(v34, type))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
        uint64_t v36 = "%{public}s called with null endpoint, backtrace limit exceeded";
        goto LABEL_74;
      }
      goto LABEL_75;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    __int16 v34 = __nwlog_obj();
    os_log_type_t v35 = type;
    BOOL v42 = os_log_type_enabled(v34, type);
    if (!backtrace_string)
    {
      if (v42)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
        uint64_t v36 = "%{public}s called with null endpoint, no backtrace";
        goto LABEL_74;
      }
      goto LABEL_75;
    }
    if (!v42) {
      goto LABEL_61;
    }
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
    *(_WORD *)&buf[12] = 2082;
    *(void *)&buf[14] = backtrace_string;
    BOOL v41 = "%{public}s called with null endpoint, dumping backtrace:%{public}s";
    goto LABEL_60;
  }
  if (!a4)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
    char v33 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v45 = 0;
    if (!__nwlog_fault(v33, &type, &v45)) {
      goto LABEL_75;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      __int16 v34 = __nwlog_obj();
      os_log_type_t v35 = type;
      if (os_log_type_enabled(v34, type))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
        uint64_t v36 = "%{public}s called with null parameters";
        goto LABEL_74;
      }
LABEL_75:
      if (v33) {
        free(v33);
      }
      return 0;
    }
    if (!v45)
    {
      __int16 v34 = __nwlog_obj();
      os_log_type_t v35 = type;
      if (os_log_type_enabled(v34, type))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
        uint64_t v36 = "%{public}s called with null parameters, backtrace limit exceeded";
        goto LABEL_74;
      }
      goto LABEL_75;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    __int16 v34 = __nwlog_obj();
    os_log_type_t v35 = type;
    BOOL v43 = os_log_type_enabled(v34, type);
    if (!backtrace_string)
    {
      if (v43)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
        uint64_t v36 = "%{public}s called with null parameters, no backtrace";
        goto LABEL_74;
      }
      goto LABEL_75;
    }
    if (v43)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
      *(_WORD *)&buf[12] = 2082;
      *(void *)&buf[14] = backtrace_string;
      BOOL v41 = "%{public}s called with null parameters, dumping backtrace:%{public}s";
      goto LABEL_60;
    }
LABEL_61:
    free(backtrace_string);
    goto LABEL_75;
  }
  BOOL v7 = (char *)malloc_type_calloc(1uLL, 0x180uLL, 0xEAFB8F1AuLL);
  if (v7)
  {
LABEL_5:
    *((_OWORD *)v7 + 22) = 0u;
    *((_OWORD *)v7 + 23) = 0u;
    *((_OWORD *)v7 + 20) = 0u;
    *((_OWORD *)v7 + 21) = 0u;
    *((_OWORD *)v7 + 18) = 0u;
    *((_OWORD *)v7 + 19) = 0u;
    *((_OWORD *)v7 + 16) = 0u;
    *((_OWORD *)v7 + 17) = 0u;
    *((_OWORD *)v7 + 14) = 0u;
    *((_OWORD *)v7 + 15) = 0u;
    *((_OWORD *)v7 + 12) = 0u;
    *((_OWORD *)v7 + 13) = 0u;
    *((_OWORD *)v7 + 10) = 0u;
    *((_OWORD *)v7 + 11) = 0u;
    *((_OWORD *)v7 + 8) = 0u;
    *((_OWORD *)v7 + 9) = 0u;
    *((_OWORD *)v7 + 6) = 0u;
    *((_OWORD *)v7 + 7) = 0u;
    *((_OWORD *)v7 + 4) = 0u;
    *((_OWORD *)v7 + 5) = 0u;
    *((_OWORD *)v7 + 2) = 0u;
    *((_OWORD *)v7 + 3) = 0u;
    *(_OWORD *)BOOL v7 = 0u;
    *((_OWORD *)v7 + 1) = 0u;
    *((void *)v7 + 2) = a1;
    if (nw_protocol_http1_get_callbacks(void)::onceToken != -1) {
      dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
    }
    *((void *)v7 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
    *((_DWORD *)v7 + 46) = 1;
    *((void *)v7 + 20) = v7;
    *((void *)v7 + 5) = v7 + 160;
    *(void *)buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&buf[16] = 0x2000000000;
    uint64_t v48 = (uint64_t)v7;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 0x40000000;
    aBlock[2] = __nw_protocol_http1_create_block_invoke;
    aBlock[3] = &unk_1E5240FA0;
    aBlock[4] = buf;
    *((void *)v7 + 25) = _Block_copy(aBlock);
    _Block_object_dispose(buf, 8);
    os_log_type_t v8 = os_retain(a3);
    char v9 = v7[288];
    if (v9)
    {
      os_log_type_t v10 = (void *)*((void *)v7 + 35);
      if (v10)
      {
        os_release(v10);
        char v9 = v7[288];
      }
    }
    *((void *)v7 + 35) = v8;
    v7[288] = v9 | 1;
    BOOL v11 = os_retain(a3);
    char v12 = v7[304];
    if (v12)
    {
      char v13 = (void *)*((void *)v7 + 37);
      if (v13)
      {
        os_release(v13);
        char v12 = v7[304];
      }
    }
    *((void *)v7 + 37) = v11;
    v7[304] = v12 | 1;
    os_log_type_t v14 = a4;
    id v15 = v14[23];

    if (v15)
    {
      BOOL v16 = nw_endpoint_copy_proxy_original_endpoint(a3);
      if (v16)
      {
        BOOL v17 = v16;
        char v18 = v7[304];
        if (v18)
        {
          uint64_t v19 = (void *)*((void *)v7 + 37);
          if (v19)
          {
            os_release(v19);
            char v18 = v7[304];
          }
        }
        *((void *)v7 + 37) = v17;
        v7[304] = v18 | 1;
      }
      id v20 = v15;
      if (v20[38] == 1)
      {
        int v21 = v20[39];

        char v22 = 4 * (v21 == 2001);
      }
      else
      {

        char v22 = 0;
      }
      v7[376] = v7[376] & 0xFB | v22;
    }
    metadata = nw_http_connection_create_metadata(0, 0, 0);
    char v24 = v7[320];
    if (v24)
    {
      BOOL v25 = (void *)*((void *)v7 + 39);
      if (v25)
      {
        os_release(v25);
        char v24 = v7[320];
      }
    }
    *((void *)v7 + 39) = metadata;
    v7[320] = v24 | 1;
    os_log_type_t v26 = v14;
    id v27 = v26[12];

    v7[376] = v7[376] & 0xFE | (((unsigned __int16)v27 & 0x8000) != 0);
    if ((v7[158] & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      os_log_type_t v28 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
      {
        int v29 = *((_DWORD *)v7 + 93);
        char v30 = "server";
        BOOL v31 = (v7[376] & 1) == 0;
        *(_DWORD *)buf = 136447234;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_create";
        if (v31) {
          char v30 = "client";
        }
        *(_WORD *)&buf[12] = 2082;
        *(void *)&buf[14] = v7 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v48 = (uint64_t)" ";
        __int16 v49 = 1024;
        int v50 = v29;
        __int16 v51 = 2082;
        os_log_type_t v52 = v30;
        _os_log_impl(&dword_1830D4000, v28, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> http1 is in %{public}s mode", buf, 0x30u);
      }
    }
    *((void *)v7 + 26) = 0;
    *((_DWORD *)v7 + 88) = 0;
    *((void *)v7 + 27) = v7 + 208;
    *((void *)v7 + 29) = 0;
    *((void *)v7 + 30) = v7 + 232;
    *((void *)v7 + 31) = 0;
    *((void *)v7 + 32) = v7 + 248;
    *((void *)v7 + 42) = 0;
    *((void *)v7 + 43) = 0;
    *(void *)(v7 + 364) = 6;
    *((void *)v7 + 24) = 29000;
    if (v15) {
      os_release(v15);
    }
    return (BOOL)v7;
  }
  BOOL v37 = __nwlog_obj();
  os_log_type_enabled(v37, OS_LOG_TYPE_ERROR);
  *(_DWORD *)buf = 136446722;
  *(void *)&uint8_t buf[4] = "strict_calloc";
  *(_WORD *)&buf[12] = 2048;
  *(void *)&buf[14] = 1;
  *(_WORD *)&buf[22] = 2048;
  uint64_t v48 = 384;
  os_log_type_t v38 = (void *)_os_log_send_and_compose_impl();
  BOOL result = __nwlog_abort((uint64_t)v38);
  if (!result)
  {
    free(v38);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t __nw_protocol_http1_create_block_invoke(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
  }
  return *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

void ___ZL31nw_protocol_http1_get_callbacksv_block_invoke()
{
  qword_1E8F699A0 = (uint64_t)nw_protocol_default_input_flush;
  qword_1E8F69900 = (uint64_t)nw_protocol_default_link_state;
  qword_1E8F69918 = (uint64_t)nw_protocol_default_get_local;
  qword_1E8F69910 = (uint64_t)nw_protocol_default_get_path;
  qword_1E8F69960 = (uint64_t)nw_protocol_default_get_output_local;
  qword_1E8F69968 = (uint64_t)nw_protocol_default_get_output_interface;
  qword_1E8F69948 = (uint64_t)nw_protocol_default_supports_external_data;
  qword_1E8F69970 = (uint64_t)nw_protocol_default_waiting_for_output;
  qword_1E8F69928 = (uint64_t)nw_protocol_default_register_notification;
  qword_1E8F69930 = (uint64_t)nw_protocol_default_unregister_notification;
  qword_1E8F698B0 = (uint64_t)nw_protocol_http1_connect;
  qword_1E8F698C0 = (uint64_t)nw_protocol_http1_connected;
  qword_1E8F698B8 = (uint64_t)nw_protocol_http1_disconnect;
  qword_1E8F698C8 = (uint64_t)nw_protocol_http1_disconnected;
  nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks = (uint64_t)nw_protocol_http1_add_input_handler;
  qword_1E8F698A0 = (uint64_t)nw_protocol_http1_remove_input_handler;
  qword_1E8F698A8 = (uint64_t)nw_protocol_http1_replace_input_handler;
  qword_1E8F69998 = (uint64_t)nw_protocol_http1_reset;
  qword_1E8F698D8 = (uint64_t)nw_protocol_http1_input_available;
  qword_1E8F698E0 = (uint64_t)nw_protocol_http1_output_available;
  qword_1E8F69950 = (uint64_t)nw_protocol_http1_input_finished;
  qword_1E8F69958 = (uint64_t)nw_protocol_http1_output_finished;
  qword_1E8F698E8 = (uint64_t)nw_protocol_http1_get_input_frames;
  qword_1E8F698F0 = (uint64_t)nw_protocol_http1_get_output_frames;
  qword_1E8F698F8 = (uint64_t)nw_protocol_http1_finalize_output_frames;
  qword_1E8F69980 = (uint64_t)nw_protocol_http1_add_listen_handler;
  qword_1E8F69988 = (uint64_t)nw_protocol_http1_remove_listen_handler;
  qword_1E8F69908 = (uint64_t)nw_protocol_http1_get_parameters;
  qword_1E8F69920 = (uint64_t)nw_protocol_http1_get_remote_endpoint;
  qword_1E8F69990 = (uint64_t)nw_protocol_http1_stream_get_message_properties;
  qword_1E8F698D0 = (uint64_t)nw_protocol_http1_error;
  qword_1E8F69938 = (uint64_t)nw_protocol_http1_notify;
  qword_1E8F69978 = (uint64_t)nw_protocol_http1_copy_info;
  qword_1E8F69940 = (uint64_t)nw_protocol_http1_updated_path;
}

uint64_t ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 32);
  BOOL v3 = *(void **)(a2 + 40);
  if (v2)
  {
    *(void *)(v2 + 40) = v3;
    BOOL v3 = *(void **)(a2 + 40);
  }
  else
  {
    *(void *)(*(void *)(a1 + 32) + 8) = v3;
  }
  void *v3 = v2;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  nw_frame_finalize(a2);
  return 1;
}

uint64_t nw_http1_on_header_value_complete(uint64_t a1)
{
  uint64_t v60 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v41 = "nw_http1_on_header_value_complete";
    os_log_type_t v28 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v38 = 0;
    if (!__nwlog_fault(v28, &type, &v38)) {
      goto LABEL_90;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v38)
      {
        int v29 = __nwlog_obj();
        os_log_type_t v30 = type;
        if (os_log_type_enabled(v29, type))
        {
          *(_DWORD *)buf = 136446210;
          BOOL v41 = "nw_http1_on_header_value_complete";
          BOOL v31 = "%{public}s called with null parser, backtrace limit exceeded";
          goto LABEL_89;
        }
        goto LABEL_90;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v29 = __nwlog_obj();
      os_log_type_t v30 = type;
      BOOL v33 = os_log_type_enabled(v29, type);
      if (!backtrace_string)
      {
        if (v33)
        {
          *(_DWORD *)buf = 136446210;
          BOOL v41 = "nw_http1_on_header_value_complete";
          BOOL v31 = "%{public}s called with null parser, no backtrace";
          goto LABEL_89;
        }
        goto LABEL_90;
      }
      if (!v33) {
        goto LABEL_72;
      }
      *(_DWORD *)buf = 136446466;
      BOOL v41 = "nw_http1_on_header_value_complete";
      __int16 v42 = 2082;
      BOOL v43 = backtrace_string;
      __int16 v34 = "%{public}s called with null parser, dumping backtrace:%{public}s";
      goto LABEL_71;
    }
    int v29 = __nwlog_obj();
    os_log_type_t v30 = type;
    if (!os_log_type_enabled(v29, type)) {
      goto LABEL_90;
    }
    *(_DWORD *)buf = 136446210;
    BOOL v41 = "nw_http1_on_header_value_complete";
    BOOL v31 = "%{public}s called with null parser";
LABEL_89:
    _os_log_impl(&dword_1830D4000, v29, v30, v31, buf, 0xCu);
    goto LABEL_90;
  }
  uint64_t v1 = *(void *)(a1 + 48);
  if (!v1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v41 = "nw_http1_on_header_value_complete";
    os_log_type_t v28 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v38 = 0;
    if (!__nwlog_fault(v28, &type, &v38)) {
      goto LABEL_90;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v38)
      {
        int v29 = __nwlog_obj();
        os_log_type_t v30 = type;
        if (os_log_type_enabled(v29, type))
        {
          *(_DWORD *)buf = 136446210;
          BOOL v41 = "nw_http1_on_header_value_complete";
          BOOL v31 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          goto LABEL_89;
        }
        goto LABEL_90;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v29 = __nwlog_obj();
      os_log_type_t v30 = type;
      BOOL v35 = os_log_type_enabled(v29, type);
      if (!backtrace_string)
      {
        if (v35)
        {
          *(_DWORD *)buf = 136446210;
          BOOL v41 = "nw_http1_on_header_value_complete";
          BOOL v31 = "%{public}s called with null http1_connection, no backtrace";
          goto LABEL_89;
        }
        goto LABEL_90;
      }
      if (!v35) {
        goto LABEL_72;
      }
      *(_DWORD *)buf = 136446466;
      BOOL v41 = "nw_http1_on_header_value_complete";
      __int16 v42 = 2082;
      BOOL v43 = backtrace_string;
      __int16 v34 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_71;
    }
    int v29 = __nwlog_obj();
    os_log_type_t v30 = type;
    if (!os_log_type_enabled(v29, type)) {
      goto LABEL_90;
    }
    *(_DWORD *)buf = 136446210;
    BOOL v41 = "nw_http1_on_header_value_complete";
    BOOL v31 = "%{public}s called with null http1_connection";
    goto LABEL_89;
  }
  uint64_t v2 = *(void *)(v1 + 488);
  if (!v2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v41 = "nw_http1_on_header_value_complete";
    os_log_type_t v28 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v38 = 0;
    if (!__nwlog_fault(v28, &type, &v38)) {
      goto LABEL_90;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v29 = __nwlog_obj();
      os_log_type_t v30 = type;
      if (!os_log_type_enabled(v29, type)) {
        goto LABEL_90;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v41 = "nw_http1_on_header_value_complete";
      BOOL v31 = "%{public}s called with null http1_stream";
      goto LABEL_89;
    }
    if (!v38)
    {
      int v29 = __nwlog_obj();
      os_log_type_t v30 = type;
      if (os_log_type_enabled(v29, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v41 = "nw_http1_on_header_value_complete";
        BOOL v31 = "%{public}s called with null http1_stream, backtrace limit exceeded";
        goto LABEL_89;
      }
      goto LABEL_90;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v29 = __nwlog_obj();
    os_log_type_t v30 = type;
    BOOL v36 = os_log_type_enabled(v29, type);
    if (!backtrace_string)
    {
      if (v36)
      {
        *(_DWORD *)buf = 136446210;
        BOOL v41 = "nw_http1_on_header_value_complete";
        BOOL v31 = "%{public}s called with null http1_stream, no backtrace";
        goto LABEL_89;
      }
      goto LABEL_90;
    }
    if (!v36) {
      goto LABEL_72;
    }
    *(_DWORD *)buf = 136446466;
    BOOL v41 = "nw_http1_on_header_value_complete";
    __int16 v42 = 2082;
    BOOL v43 = backtrace_string;
    __int16 v34 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
LABEL_71:
    _os_log_impl(&dword_1830D4000, v29, v30, v34, buf, 0x16u);
    goto LABEL_72;
  }
  BOOL v3 = *(void **)(v2 + 400);
  if (!v3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v41 = "nw_http1_on_header_value_complete";
    os_log_type_t v28 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v38 = 0;
    if (!__nwlog_fault(v28, &type, &v38)) {
      goto LABEL_90;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v29 = __nwlog_obj();
      os_log_type_t v30 = type;
      if (os_log_type_enabled(v29, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v41 = "nw_http1_on_header_value_complete";
        BOOL v31 = "%{public}s called with null parsed_fields";
        goto LABEL_89;
      }
LABEL_90:
      if (v28) {
        free(v28);
      }
      return 0xFFFFFFFFLL;
    }
    if (!v38)
    {
      int v29 = __nwlog_obj();
      os_log_type_t v30 = type;
      if (os_log_type_enabled(v29, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v41 = "nw_http1_on_header_value_complete";
        BOOL v31 = "%{public}s called with null parsed_fields, backtrace limit exceeded";
        goto LABEL_89;
      }
      goto LABEL_90;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v29 = __nwlog_obj();
    os_log_type_t v30 = type;
    BOOL v37 = os_log_type_enabled(v29, type);
    if (!backtrace_string)
    {
      if (v37)
      {
        *(_DWORD *)buf = 136446210;
        BOOL v41 = "nw_http1_on_header_value_complete";
        BOOL v31 = "%{public}s called with null parsed_fields, no backtrace";
        goto LABEL_89;
      }
      goto LABEL_90;
    }
    if (v37)
    {
      *(_DWORD *)buf = 136446466;
      BOOL v41 = "nw_http1_on_header_value_complete";
      __int16 v42 = 2082;
      BOOL v43 = backtrace_string;
      __int16 v34 = "%{public}s called with null parsed_fields, dumping backtrace:%{public}s";
      goto LABEL_71;
    }
LABEL_72:
    free(backtrace_string);
    goto LABEL_90;
  }
  nw_proxy_config_t v4 = *(const char **)(v1 + 808);
  uint64_t v5 = *(unsigned int *)(v1 + 844);
  if (v5)
  {
    id v6 = &v4[v5];
    while (1)
    {
      int v7 = *(unsigned __int8 *)v4;
      if (v7 != 32 && v7 != 9) {
        break;
      }
      ++v4;
      LODWORD(v5) = v5 - 1;
      if (!v5)
      {
        int64_t v9 = 0;
        nw_proxy_config_t v4 = v6;
        goto LABEL_21;
      }
    }
    while (1)
    {
      uint64_t v10 = (v5 - 1);
      int v11 = v4[v10];
      if (v11 != 32 && v11 != 9) {
        break;
      }
      LODWORD(v5) = v5 - 1;
      if (!v10) {
        goto LABEL_20;
      }
    }
    int64_t v9 = v5;
  }
  else
  {
LABEL_20:
    int64_t v9 = 0;
  }
LABEL_21:
  size_t v13 = *(unsigned int *)(v1 + 840);
  if ((*(unsigned char *)(*(void *)(v1 + 480) + 376) & 1) != 0
    && v13 == 4
    && !strncasecmp(*(const char **)(v1 + 800), "Host", v13))
  {
    os_log_type_t v14 = ":authority";
    id v15 = v3;
    uint64_t v16 = -1;
  }
  else
  {
    os_log_type_t v14 = *(const char **)(v1 + 800);
    id v15 = v3;
    uint64_t v16 = v13;
  }
  if (!nw_http_parsed_fields_add(v15, (unint64_t)v14, v16, v4, v9, 0))
  {
    if (*(_DWORD *)(v1 + 840))
    {
      if (*(_DWORD *)(v1 + 844))
      {
        if ((*(unsigned char *)(v1 + 158) & 1) == 0)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          BOOL v17 = gLogObj;
          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
          {
            uint64_t v18 = *(void *)(v1 + 488);
            int v19 = *(_DWORD *)(*(void *)(v1 + 480) + 372);
            int v20 = *(_DWORD *)(v1 + 860);
            if (v18) {
              LODWORD(v18) = *(_DWORD *)(v18 + 424);
            }
            int v21 = *(_DWORD *)(v1 + 840);
            uint64_t v22 = *(void *)(v1 + 800);
            int v23 = *(_DWORD *)(v1 + 844);
            uint64_t v24 = *(void *)(v1 + 808);
            *(_DWORD *)buf = 136448515;
            BOOL v41 = "nw_http1_on_header_value_complete";
            __int16 v42 = 2082;
            BOOL v43 = (char *)(v1 + 74);
            __int16 v44 = 2080;
            char v45 = " ";
            __int16 v46 = 1024;
            int v47 = v19;
            __int16 v48 = 1024;
            int v49 = v20;
            __int16 v50 = 1024;
            int v51 = v18;
            __int16 v52 = 1040;
            int v53 = v21;
            __int16 v54 = 2085;
            uint64_t v55 = v22;
            __int16 v56 = 1040;
            int v57 = v23;
            __int16 v58 = 2085;
            uint64_t v59 = v24;
            _os_log_impl(&dword_1830D4000, v17, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> discarded invalid header %{sensitive}.*s with value %{sensitive}.*s", buf, 0x52u);
          }
        }
      }
    }
  }
  BOOL v25 = *(void **)(v1 + 800);
  if (v25)
  {
    free(v25);
    *(void *)(v1 + 800) = 0;
  }
  *(_DWORD *)(v1 + 840) = 0;
  os_log_type_t v26 = *(void **)(v1 + 808);
  if (v26)
  {
    free(v26);
    *(void *)(v1 + 808) = 0;
  }
  uint64_t result = 0;
  *(_DWORD *)(v1 + 844) = 0;
  return result;
}

uint64_t nw_http1_on_message_complete(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v2 = *(void *)(a1 + 48);
    if (v2)
    {
      if ((*(unsigned char *)(v2 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          os_log_type_t v14 = __nwlog_obj();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v15 = *(void *)(v2 + 488);
            int v16 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
            int v17 = *(_DWORD *)(v2 + 860);
            if (v15) {
              LODWORD(v15) = *(_DWORD *)(v15 + 424);
            }
            *(_DWORD *)buf = 136447490;
            os_log_type_t v30 = "nw_http1_on_message_complete";
            __int16 v31 = 2082;
            os_log_type_t v32 = (char *)(v2 + 74);
            __int16 v33 = 2080;
            __int16 v34 = " ";
            __int16 v35 = 1024;
            int v36 = v16;
            __int16 v37 = 1024;
            int v38 = v17;
            __int16 v39 = 1024;
            int v40 = v15;
            _os_log_impl(&dword_1830D4000, v14, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> message is complete", buf, 0x32u);
          }
        }
      }
      BOOL v3 = nw_http_parsed_fields_copy_trailer_fields(*(void **)(*(void *)(v2 + 488) + 400));
      if (nw_http_fields_get_count((void *)v3))
      {
        if ((*(unsigned char *)(v2 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            uint64_t v18 = __nwlog_obj();
            if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v19 = *(void *)(v2 + 488);
              int v20 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
              int v21 = *(_DWORD *)(v2 + 860);
              if (v19) {
                LODWORD(v19) = *(_DWORD *)(v19 + 424);
              }
              *(_DWORD *)buf = 136447490;
              os_log_type_t v30 = "nw_http1_on_message_complete";
              __int16 v31 = 2082;
              os_log_type_t v32 = (char *)(v2 + 74);
              __int16 v33 = 2080;
              __int16 v34 = " ";
              __int16 v35 = 1024;
              int v36 = v20;
              __int16 v37 = 1024;
              int v38 = v21;
              __int16 v39 = 1024;
              int v40 = v19;
              _os_log_impl(&dword_1830D4000, v18, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> received trailer fields", buf, 0x32u);
            }
          }
        }
        nw_http_metadata_set_trailer_fields(*(void **)(*(void *)(v2 + 488) + 368), (void *)v3);
      }
      nw_proxy_config_t v4 = (_WORD *)(v2 + 872);
      *(_WORD *)(v2 + 872) |= 4u;
      if (*(unsigned char *)(a1 + 74) && *(unsigned char *)(a1 + 75))
      {
        __int16 v5 = *(_WORD *)(a1 + 82);
        if ((v5 & 2) != 0) {
          goto LABEL_14;
        }
      }
      else
      {
        __int16 v5 = *(_WORD *)(a1 + 82);
        if ((v5 & 1) == 0) {
          goto LABEL_14;
        }
      }
      if (*(unsigned char *)(a1 + 72) == 1
        || (int v7 = *(unsigned __int16 *)(a1 + 84), (v7 - 100) < 0x64)
        || v7 == 204
        || v7 == 304
        || (v5 & 0x40) != 0)
      {
        if (gLogDatapath) {
          goto LABEL_60;
        }
        goto LABEL_26;
      }
      if ((v5 & 0x208) != 0x200)
      {
        if ((v5 & 0x28) != 0)
        {
          if (gLogDatapath)
          {
LABEL_60:
            os_log_type_t v26 = __nwlog_obj();
            if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 136446210;
              os_log_type_t v30 = "nw_http1_on_message_complete";
              _os_log_impl(&dword_1830D4000, v26, OS_LOG_TYPE_DEBUG, "%{public}s http should keep alive", buf, 0xCu);
            }
          }
LABEL_26:
          int v6 = (unsigned __int16)*v4 | (*(unsigned __int8 *)(v2 + 874) << 16) | 8;
          goto LABEL_27;
        }
        if (gLogDatapath) {
          goto LABEL_32;
        }
        goto LABEL_15;
      }
LABEL_14:
      if (gLogDatapath)
      {
LABEL_32:
        int64_t v9 = __nwlog_obj();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 136446210;
          os_log_type_t v30 = "nw_http1_on_message_complete";
          _os_log_impl(&dword_1830D4000, v9, OS_LOG_TYPE_DEBUG, "%{public}s http should not keep alive", buf, 0xCu);
        }
      }
LABEL_15:
      int v6 = *v4 & 0xFFF7 | (*(unsigned __int8 *)(v2 + 874) << 16);
LABEL_27:
      _WORD *v4 = v6;
      *(unsigned char *)(v2 + 874) = BYTE2(v6);
      nw_http_transaction_metadata_mark_inbound_message_end(*(void **)(*(void *)(v2 + 488) + 352));
      if (v3) {
        os_release((void *)v3);
      }
      return 0;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v30 = "nw_http1_on_message_complete";
    uint64_t v10 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v27 = 0;
    if (!__nwlog_fault(v10, &type, &v27)) {
      goto LABEL_71;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (os_log_type_enabled(v11, type))
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v30 = "nw_http1_on_message_complete";
        size_t v13 = "%{public}s called with null http1_connection";
        goto LABEL_70;
      }
      goto LABEL_71;
    }
    if (!v27)
    {
      int v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (os_log_type_enabled(v11, type))
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v30 = "nw_http1_on_message_complete";
        size_t v13 = "%{public}s called with null http1_connection, backtrace limit exceeded";
        goto LABEL_70;
      }
      goto LABEL_71;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v11 = __nwlog_obj();
    os_log_type_t v12 = type;
    BOOL v25 = os_log_type_enabled(v11, type);
    if (!backtrace_string)
    {
      if (v25)
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v30 = "nw_http1_on_message_complete";
        size_t v13 = "%{public}s called with null http1_connection, no backtrace";
        goto LABEL_70;
      }
      goto LABEL_71;
    }
    if (v25)
    {
      *(_DWORD *)buf = 136446466;
      os_log_type_t v30 = "nw_http1_on_message_complete";
      __int16 v31 = 2082;
      os_log_type_t v32 = backtrace_string;
      uint64_t v24 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_58;
    }
    goto LABEL_59;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  os_log_type_t v30 = "nw_http1_on_message_complete";
  uint64_t v10 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v27 = 0;
  if (!__nwlog_fault(v10, &type, &v27)) {
    goto LABEL_71;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v27)
    {
      int v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (os_log_type_enabled(v11, type))
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v30 = "nw_http1_on_message_complete";
        size_t v13 = "%{public}s called with null parser, backtrace limit exceeded";
        goto LABEL_70;
      }
      goto LABEL_71;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v11 = __nwlog_obj();
    os_log_type_t v12 = type;
    BOOL v23 = os_log_type_enabled(v11, type);
    if (!backtrace_string)
    {
      if (v23)
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v30 = "nw_http1_on_message_complete";
        size_t v13 = "%{public}s called with null parser, no backtrace";
        goto LABEL_70;
      }
      goto LABEL_71;
    }
    if (v23)
    {
      *(_DWORD *)buf = 136446466;
      os_log_type_t v30 = "nw_http1_on_message_complete";
      __int16 v31 = 2082;
      os_log_type_t v32 = backtrace_string;
      uint64_t v24 = "%{public}s called with null parser, dumping backtrace:%{public}s";
LABEL_58:
      _os_log_impl(&dword_1830D4000, v11, v12, v24, buf, 0x16u);
    }
LABEL_59:
    free(backtrace_string);
    goto LABEL_71;
  }
  int v11 = __nwlog_obj();
  os_log_type_t v12 = type;
  if (os_log_type_enabled(v11, type))
  {
    *(_DWORD *)buf = 136446210;
    os_log_type_t v30 = "nw_http1_on_message_complete";
    size_t v13 = "%{public}s called with null parser";
LABEL_70:
    _os_log_impl(&dword_1830D4000, v11, v12, v13, buf, 0xCu);
  }
LABEL_71:
  if (v10) {
    free(v10);
  }
  return 0xFFFFFFFFLL;
}

uint64_t ___ZL29nw_http1_tear_down_connectionP17nw_protocol_http1P19nw_http1_connection_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[4];
  BOOL v3 = (void *)a2[5];
  if (v2)
  {
    *(void *)(v2 + 40) = v3;
    BOOL v3 = (void *)a2[5];
  }
  else
  {
    *(void *)(*(void *)(a1 + 32) + 656) = v3;
  }
  void *v3 = v2;
  a2[4] = 0;
  a2[5] = 0;
  a2[10] = 0;
  a2[11] = 0;
  nw_frame_cache_return_frame(*(void *)(a1 + 32) + 696, (uint64_t)a2);
  return 1;
}

uint64_t ___ZL39nw_protocol_finalize_master_frame_arrayP16nw_frame_array_sb_block_invoke_40196(uint64_t a1, uint64_t a2)
{
  return 1;
}

void nw_http1_connection::~nw_http1_connection(nw_http1_connection *this)
{
  if (*((unsigned char *)this + 776))
  {
    uint64_t v2 = (void *)*((void *)this + 96);
    if (v2) {
      os_release(v2);
    }
  }
  *((void *)this + 96) = 0;
  if (*((unsigned char *)this + 760))
  {
    BOOL v3 = (void *)*((void *)this + 94);
    if (v3) {
      os_release(v3);
    }
  }
  *((void *)this + 94) = 0;
  if (*((unsigned char *)this + 744))
  {
    nw_proxy_config_t v4 = (void *)*((void *)this + 92);
    if (v4) {
      os_release(v4);
    }
  }
  *((void *)this + 92) = 0;
  if (*((unsigned char *)this + 584))
  {
    __int16 v5 = (void *)*((void *)this + 72);
    if (v5) {
      os_release(v5);
    }
  }
  *((void *)this + 72) = 0;
  if (*((unsigned char *)this + 568))
  {
    int v6 = (void *)*((void *)this + 70);
    if (v6) {
      os_release(v6);
    }
  }
  *((void *)this + 70) = 0;
  if (*((unsigned char *)this + 552))
  {
    int v7 = (void *)*((void *)this + 68);
    if (v7) {
      os_release(v7);
    }
  }
  *((void *)this + 68) = 0;
  if (*((unsigned char *)this + 536))
  {
    os_log_type_t v8 = (void *)*((void *)this + 66);
    if (v8) {
      os_release(v8);
    }
  }
  *((void *)this + 66) = 0;
  if (*((unsigned char *)this + 520))
  {
    int64_t v9 = (void *)*((void *)this + 64);
    if (v9) {
      os_release(v9);
    }
  }
  *((void *)this + 64) = 0;
  if (*((unsigned char *)this + 504))
  {
    uint64_t v10 = (void *)*((void *)this + 62);
    if (v10) {
      os_release(v10);
    }
  }
  *((void *)this + 62) = 0;
}

void nw_protocol_http1_destroy(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  if (*(_DWORD *)(a2 + 344) || *(_DWORD *)(a2 + 336))
  {
    if ((*(unsigned char *)(a2 + 158) & 1) == 0 && gLogDatapath)
    {
      BOOL v3 = __nwlog_obj();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
      {
        int v4 = *(_DWORD *)(a2 + 372);
        int v5 = *(_DWORD *)(a2 + 344);
        int v6 = *(_DWORD *)(a2 + 336);
        int v20 = 136447746;
        int v21 = "nw_protocol_http1_destroy";
        __int16 v22 = 2082;
        uint64_t v23 = a2 + 74;
        __int16 v24 = 2080;
        BOOL v25 = " ";
        __int16 v26 = 1024;
        int v27 = v4;
        __int16 v28 = 2048;
        uint64_t v29 = a2;
        __int16 v30 = 1024;
        int v31 = v5;
        __int16 v32 = 1024;
        int v33 = v6;
        _os_log_impl(&dword_1830D4000, v3, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> not destroying http1 %p, still have %u input handlers and %u output handlers", (uint8_t *)&v20, 0x3Cu);
      }
    }
  }
  else
  {
    if ((*(unsigned char *)(a2 + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      os_log_type_t v8 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
      {
        int v9 = *(_DWORD *)(a2 + 372);
        int v20 = 136446978;
        int v21 = "nw_protocol_http1_destroy";
        __int16 v22 = 2082;
        uint64_t v23 = a2 + 74;
        __int16 v24 = 2080;
        BOOL v25 = " ";
        __int16 v26 = 1024;
        int v27 = v9;
        _os_log_impl(&dword_1830D4000, v8, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u> no more input handlers or output handlers, destroying", (uint8_t *)&v20, 0x26u);
      }
    }
    uint64_t v10 = *(void *)(a2 + 328);
    if (v10) {
      (*(void (**)(uint64_t, uint64_t, void))(*(void *)v10 + 8))(v10, a2, 0);
    }
    nw_protocol_remove_instance(a1);
    char v11 = *(unsigned char *)(a2 + 288);
    if (v11)
    {
      os_log_type_t v12 = *(void **)(a2 + 280);
      if (v12)
      {
        os_release(v12);
        char v11 = *(unsigned char *)(a2 + 288);
      }
    }
    *(void *)(a2 + 280) = 0;
    *(unsigned char *)(a2 + 288) = v11 | 1;
    char v13 = *(unsigned char *)(a2 + 272);
    if (v13)
    {
      os_log_type_t v14 = *(void **)(a2 + 264);
      if (v14)
      {
        os_release(v14);
        char v13 = *(unsigned char *)(a2 + 272);
      }
    }
    *(void *)(a2 + 264) = 0;
    *(unsigned char *)(a2 + 272) = v13 | 1;
    *(void *)(a2 + 40) = 0;
    (*(void (**)(void))(*(void *)(a2 + 200) + 16))();
    uint64_t v15 = *(const void **)(a2 + 200);
    if (v15)
    {
      _Block_release(v15);
      *(void *)(a2 + 200) = 0;
    }
    if (*(unsigned char *)(a2 + 320))
    {
      int v16 = *(void **)(a2 + 312);
      if (v16) {
        os_release(v16);
      }
    }
    *(void *)(a2 + 312) = 0;
    if (*(unsigned char *)(a2 + 304))
    {
      int v17 = *(void **)(a2 + 296);
      if (v17) {
        os_release(v17);
      }
    }
    *(void *)(a2 + 296) = 0;
    if (*(unsigned char *)(a2 + 288))
    {
      uint64_t v18 = *(void **)(a2 + 280);
      if (v18) {
        os_release(v18);
      }
    }
    *(void *)(a2 + 280) = 0;
    if (*(unsigned char *)(a2 + 272))
    {
      uint64_t v19 = *(void **)(a2 + 264);
      if (v19) {
        os_release(v19);
      }
    }
    free((void *)a2);
  }
}

void ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke(uint64_t a1, void *a2, int a3)
{
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  switch(a3)
  {
    case 0:
      id outbound_message = nw_http_transaction_metadata_get_outbound_message(a2);
      id v6 = nw_http_metadata_copy_request(outbound_message);
      id v7 = nw_http_metadata_copy_response(outbound_message);
      if (v6)
      {
        v63[0] = MEMORY[0x1E4F143A8];
        v63[1] = 0x40000000;
        v63[2] = ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke_2;
        v63[3] = &__block_descriptor_tmp_48_40622;
        v63[4] = *(void *)(a1 + 32);
        id v8 = v6;
        int v9 = v63;
        _nw_http_request_access_method((uint64_t)v8, v9);
      }
      if (!v7) {
        goto LABEL_31;
      }
      id v10 = v7;
      int status_code = _nw_http_response_get_status_code();

      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        goto LABEL_30;
      }
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      os_log_type_t v12 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        goto LABEL_30;
      }
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = v13 + 74;
      uint64_t v15 = *(void *)(v13 + 256);
      int v16 = *(_DWORD *)(*(void *)(v13 + 248) + 372);
      if (v15) {
        LODWORD(v15) = *(_DWORD *)(v15 + 860);
      }
      int v17 = *(_DWORD *)(v13 + 424);
      *(_DWORD *)buf = 136447746;
      v65 = "nw_http1_match_idle_connection_with_pending_stream_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v14;
      __int16 v68 = 2080;
      v69 = " ";
      __int16 v70 = 1024;
      int v71 = v16;
      __int16 v72 = 1024;
      int v73 = v15;
      __int16 v74 = 1024;
      int v75 = v17;
      __int16 v76 = 1024;
      LODWORD(v77) = status_code;
      uint64_t v18 = "%{public}s %{public}s%s<i%u:c%u:s%u> sending response header {status=%hu}";
      goto LABEL_29;
    case 1:
      uint64_t outbound_body_size = nw_http_transaction_metadata_get_outbound_body_size(a2);
      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        return;
      }
      uint64_t v20 = outbound_body_size;
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      int v21 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        return;
      }
      uint64_t v22 = *(void *)(a1 + 32);
      uint64_t v23 = v22 + 74;
      uint64_t v24 = *(void *)(v22 + 256);
      int v25 = *(_DWORD *)(*(void *)(v22 + 248) + 372);
      if (v24) {
        LODWORD(v24) = *(_DWORD *)(v24 + 860);
      }
      int v26 = *(_DWORD *)(v22 + 424);
      *(_DWORD *)buf = 136447746;
      v65 = "nw_http1_match_idle_connection_with_pending_stream_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v23;
      __int16 v68 = 2080;
      v69 = " ";
      __int16 v70 = 1024;
      int v71 = v25;
      __int16 v72 = 1024;
      int v73 = v24;
      __int16 v74 = 1024;
      int v75 = v26;
      __int16 v76 = 2048;
      uint64_t v77 = v20;
      int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> finished sending {body_bytes=%llu}";
      goto LABEL_42;
    case 2:
      id outbound_message = nw_http_transaction_metadata_get_inbound_message(a2);
      id v6 = nw_http_metadata_copy_request(outbound_message);
      id v28 = nw_http_metadata_copy_response(outbound_message);
      if (v6)
      {
        v62[0] = MEMORY[0x1E4F143A8];
        v62[1] = 0x40000000;
        v62[2] = ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke_49;
        v62[3] = &__block_descriptor_tmp_50_40625;
        v62[4] = *(void *)(a1 + 32);
        id v29 = v6;
        __int16 v30 = v62;
        _nw_http_request_access_method((uint64_t)v29, v30);
      }
      if (v28)
      {
        id v10 = v28;
        int v31 = _nw_http_response_get_status_code();

        if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
        {
          if (__nwlog_http_log::onceToken != -1) {
            dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
          }
          os_log_type_t v12 = ghttpLogObj;
          if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
          {
            uint64_t v32 = *(void *)(a1 + 32);
            uint64_t v33 = v32 + 74;
            uint64_t v34 = *(void *)(v32 + 256);
            int v35 = *(_DWORD *)(*(void *)(v32 + 248) + 372);
            if (v34) {
              LODWORD(v34) = *(_DWORD *)(v34 + 860);
            }
            int v36 = *(_DWORD *)(v32 + 424);
            *(_DWORD *)buf = 136447746;
            v65 = "nw_http1_match_idle_connection_with_pending_stream_block_invoke";
            __int16 v66 = 2082;
            uint64_t v67 = v33;
            __int16 v68 = 2080;
            v69 = " ";
            __int16 v70 = 1024;
            int v71 = v35;
            __int16 v72 = 1024;
            int v73 = v34;
            __int16 v74 = 1024;
            int v75 = v36;
            __int16 v76 = 1024;
            LODWORD(v77) = v31;
            uint64_t v18 = "%{public}s %{public}s%s<i%u:c%u:s%u> receiving response header {status=%hu}";
LABEL_29:
            _os_log_impl(&dword_1830D4000, v12, OS_LOG_TYPE_INFO, v18, buf, 0x38u);
          }
        }
LABEL_30:
        os_release(v10);
      }
LABEL_31:
      if (v6) {
        os_release(v6);
      }
      if (!outbound_message) {
        return;
      }
      __int16 v37 = outbound_message;
      goto LABEL_64;
    case 3:
      uint64_t inbound_body_size = nw_http_transaction_metadata_get_inbound_body_size(a2);
      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        return;
      }
      uint64_t v39 = inbound_body_size;
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      int v21 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        return;
      }
      uint64_t v40 = *(void *)(a1 + 32);
      uint64_t v41 = v40 + 74;
      uint64_t v42 = *(void *)(v40 + 256);
      int v43 = *(_DWORD *)(*(void *)(v40 + 248) + 372);
      if (v42) {
        LODWORD(v42) = *(_DWORD *)(v42 + 860);
      }
      int v44 = *(_DWORD *)(v40 + 424);
      *(_DWORD *)buf = 136447746;
      v65 = "nw_http1_match_idle_connection_with_pending_stream_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v41;
      __int16 v68 = 2080;
      v69 = " ";
      __int16 v70 = 1024;
      int v71 = v43;
      __int16 v72 = 1024;
      int v73 = v42;
      __int16 v74 = 1024;
      int v75 = v44;
      __int16 v76 = 2048;
      uint64_t v77 = v39;
      int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> finished receiving {body_bytes=%llu}";
LABEL_42:
      _os_log_impl(&dword_1830D4000, v21, OS_LOG_TYPE_INFO, v27, buf, 0x3Cu);
      return;
    case 4:
      v57[0] = MEMORY[0x1E4F143A8];
      v57[1] = 0x40000000;
      __int16 v58 = ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke_51;
      uint64_t v59 = &__block_descriptor_tmp_52_40628;
      uint64_t v45 = *(void *)(a1 + 32);
      uint64_t v60 = a2;
      uint64_t v61 = v45;
      id v46 = nw_http_transaction_metadata_get_outbound_message(a2);
      int v47 = v46;
      if (v46)
      {
        id v48 = nw_http_metadata_copy_request(v46);
        id v49 = nw_http_metadata_copy_response(v47);
        id inbound_message = nw_http_transaction_metadata_get_inbound_message(a2);
        if (!inbound_message) {
          goto LABEL_52;
        }
        if (v48)
        {
          if (v49) {
            goto LABEL_53;
          }
          goto LABEL_51;
        }
      }
      else
      {
        id v51 = nw_http_transaction_metadata_get_inbound_message(a2);
        id v49 = 0;
        if (!v51)
        {
          uint64_t v52 = 0;
          id inbound_message = 0;
          goto LABEL_67;
        }
        id inbound_message = v51;
      }
      id v48 = nw_http_metadata_copy_request(inbound_message);
      if (v49) {
        goto LABEL_53;
      }
LABEL_51:
      id v49 = nw_http_metadata_copy_response(inbound_message);
LABEL_52:
      if (!v49)
      {
        uint64_t v52 = 0;
        if (!v48) {
          goto LABEL_67;
        }
LABEL_56:
        v55[0] = MEMORY[0x1E4F143A8];
        v55[1] = 0x40000000;
        v55[2] = ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke_53;
        v55[3] = &unk_1E5241250;
        v55[4] = v57;
        __int16 v56 = v52;
        id v53 = v48;
        __int16 v54 = v55;
        _nw_http_request_access_method((uint64_t)v53, v54);

        if (!inbound_message) {
          goto LABEL_58;
        }
        goto LABEL_57;
      }
LABEL_53:
      id v49 = v49;
      uint64_t v52 = _nw_http_response_get_status_code();

      if (v48) {
        goto LABEL_56;
      }
LABEL_67:
      v58((uint64_t)v57, (uint64_t)"", v52);
      id v53 = 0;
      if (inbound_message) {
LABEL_57:
      }
        os_release(inbound_message);
LABEL_58:
      if (v47) {
        os_release(v47);
      }
      if (v49) {
        os_release(v49);
      }
      if (v53)
      {
        __int16 v37 = v53;
LABEL_64:
        os_release(v37);
      }
      return;
    default:
      return;
  }
}

uint64_t ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke_2(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
  }
  return *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

uint64_t __Block_byref_object_copy__40335(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(result + 48) = *(unsigned char *)(result + 48) & 0xFE | *(unsigned char *)(a2 + 48) & 1;
  *(void *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 48) &= ~1u;
  return result;
}

void __Block_byref_object_dispose__40336(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v2 = *(void **)(a1 + 40);
    if (v2) {
      os_release(v2);
    }
  }
  *(void *)(a1 + 40) = 0;
}

uint64_t ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_2(int8x16_t *a1, nw_parameters_t parameters)
{
  nw_parameters_t v2 = parameters;
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  int v4 = nw_parameters_copy_default_protocol_stack(parameters);
  int v5 = nw_protocol_stack_copy_transport_protocol(v4);
  BOOL is_quic = nw_protocol_options_is_quic(v5);
  if (v5) {
    os_release(v5);
  }
  if (is_quic)
  {
    uint64_t v7 = 1;
    if (!v4) {
      return v7;
    }
    goto LABEL_19;
  }
  uint64_t v8 = *(void *)(a1[2].i64[0] + 8);
  char v9 = *(unsigned char *)(v8 + 48);
  if (v9)
  {
    id v10 = *(void **)(v8 + 40);
    if (v10)
    {
      os_release(v10);
      char v9 = *(unsigned char *)(v8 + 48);
    }
  }
  *(void *)(v8 + 40) = 0;
  *(unsigned char *)(v8 + 48) = v9 | 1;
  *(unsigned char *)(*(void *)(a1[2].i64[1] + 8) + 24) = 0;
  iterate_block[0] = MEMORY[0x1E4F143A8];
  iterate_block[1] = 0x40000000;
  iterate_block[2] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_3;
  iterate_block[3] = &unk_1E5241340;
  int8x16_t v25 = vextq_s8(a1[2], a1[2], 8uLL);
  uint64_t v26 = a1[3].i64[0];
  nw_protocol_stack_iterate_application_protocols(v4, iterate_block);
  int v11 = *(void *)(*(void *)(a1[2].i64[0] + 8) + 40) != 0;
  int v12 = (*(unsigned char *)(a1[3].i64[1] + 376) & 2) == 0;
  int v13 = v11 ^ v12;
  if (v11 != v12)
  {
    if ((*(unsigned char *)(a1[3].i64[0] + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v18 = __nwlog_obj();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v19 = a1[3].i64[0];
          uint64_t v20 = v19 + 74;
          uint64_t v21 = *(void *)(v19 + 256);
          int v22 = *(_DWORD *)(*(void *)(v19 + 248) + 372);
          if (v21) {
            LODWORD(v21) = *(_DWORD *)(v21 + 860);
          }
          int v23 = *(_DWORD *)(v19 + 424);
          *(_DWORD *)buf = 136447746;
          id v28 = "nw_http1_establish_new_connection_for_stream_block_invoke_2";
          __int16 v29 = 2082;
          uint64_t v30 = v20;
          __int16 v31 = 2080;
          uint64_t v32 = " ";
          __int16 v33 = 1024;
          int v34 = v22;
          __int16 v35 = 1024;
          int v36 = v21;
          __int16 v37 = 1024;
          int v38 = v23;
          __int16 v39 = 2112;
          nw_parameters_t v40 = v2;
          _os_log_impl(&dword_1830D4000, v18, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> saving transformed parameters %@", buf, 0x3Cu);
        }
      }
    }
    if (v2) {
      nw_parameters_t v2 = (nw_parameters_t)os_retain(v2);
    }
    uint64_t v14 = a1[3].i64[0];
    char v15 = *(unsigned char *)(v14 + 328);
    if (v15)
    {
      int v16 = *(void **)(v14 + 320);
      if (v16)
      {
        os_release(v16);
        char v15 = *(unsigned char *)(v14 + 328);
      }
    }
    *(void *)(v14 + 320) = v2;
    *(unsigned char *)(v14 + 328) = v15 | 1;
  }
  uint64_t v7 = v13 ^ 1u;
  if (v4) {
LABEL_19:
  }
    os_release(v4);
  return v7;
}

BOOL ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_77(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  int v3 = *(unsigned __int8 *)(v2 + 24);
  if (!*(unsigned char *)(v2 + 24))
  {
    nw_parameters_add_protocol_stack_member(*(void **)(*(void *)(a1 + 40) + 320), 5, 0xFFFFFFFF, a2);
    if (nw_protocol_options_get_protocol_handle(a2) == *(void *)(a1 + 40)) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    }
  }
  return v3 == 0;
}

void ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_80(uint64_t a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  if (v1)
  {
    uint64_t v2 = v1;
    if ((*(unsigned char *)(v1 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        int v3 = __nwlog_obj();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v4 = *(void *)(v2 + 256);
          int v5 = *(_DWORD *)(*(void *)(v2 + 248) + 372);
          if (v4) {
            LODWORD(v4) = *(_DWORD *)(v4 + 860);
          }
          int v6 = *(_DWORD *)(v2 + 424);
          int v7 = 136447490;
          uint64_t v8 = "nw_http1_establish_new_connection_for_stream_block_invoke";
          __int16 v9 = 2082;
          uint64_t v10 = v2 + 74;
          __int16 v11 = 2080;
          int v12 = " ";
          __int16 v13 = 1024;
          int v14 = v5;
          __int16 v15 = 1024;
          int v16 = v4;
          __int16 v17 = 1024;
          int v18 = v6;
          _os_log_impl(&dword_1830D4000, v3, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> requesting new output handler from rebuild_stack", (uint8_t *)&v7, 0x32u);
        }
      }
    }
    nw_protocol_notify(*(void **)(v2 + 48), v2, 19);
  }
}

void ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_3(void *a1, void *a2)
{
  uint64_t v2 = a2;
  if (*(unsigned char *)(*(void *)(a1[4] + 8) + 24))
  {
    if (!*(void *)(*(void *)(a1[5] + 8) + 40) && nw_protocol_options_is_tls(a2))
    {
      if (v2) {
        uint64_t v2 = os_retain(v2);
      }
      uint64_t v4 = *(void *)(a1[5] + 8);
      char v5 = *(unsigned char *)(v4 + 48);
      if (v5)
      {
        int v6 = *(void **)(v4 + 40);
        if (v6)
        {
          os_release(v6);
          char v5 = *(unsigned char *)(v4 + 48);
        }
      }
      *(void *)(v4 + 40) = v2;
      *(unsigned char *)(v4 + 48) = v5 | 1;
    }
  }
  else if (nw_protocol_options_get_protocol_handle(a2) == a1[6])
  {
    *(unsigned char *)(*(void *)(a1[4] + 8) + 24) = 1;
  }
}

uint64_t nw_http1_on_chunk_complete(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v15 = "nw_http1_on_chunk_complete";
    uint64_t v2 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v12 = 0;
    if (!__nwlog_fault(v2, &type, &v12)) {
      goto LABEL_39;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      if (os_log_type_enabled(v3, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_http1_on_chunk_complete";
        char v5 = "%{public}s called with null parser";
LABEL_38:
        _os_log_impl(&dword_1830D4000, v3, v4, v5, buf, 0xCu);
      }
LABEL_39:
      if (v2) {
        free(v2);
      }
      return 0xFFFFFFFFLL;
    }
    if (!v12)
    {
      int v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      if (os_log_type_enabled(v3, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_http1_on_chunk_complete";
        char v5 = "%{public}s called with null parser, backtrace limit exceeded";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v3 = __nwlog_obj();
    os_log_type_t v4 = type;
    BOOL v7 = os_log_type_enabled(v3, type);
    if (!backtrace_string)
    {
      if (v7)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_http1_on_chunk_complete";
        char v5 = "%{public}s called with null parser, no backtrace";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    if (v7)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v15 = "nw_http1_on_chunk_complete";
      __int16 v16 = 2082;
      __int16 v17 = backtrace_string;
      uint64_t v8 = "%{public}s called with null parser, dumping backtrace:%{public}s";
LABEL_28:
      _os_log_impl(&dword_1830D4000, v3, v4, v8, buf, 0x16u);
    }
LABEL_29:
    free(backtrace_string);
    goto LABEL_39;
  }
  if (!*(void *)(a1 + 48))
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v15 = "nw_http1_on_chunk_complete";
    uint64_t v2 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v12 = 0;
    if (!__nwlog_fault(v2, &type, &v12)) {
      goto LABEL_39;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      if (os_log_type_enabled(v3, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_http1_on_chunk_complete";
        char v5 = "%{public}s called with null http1_connection";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    if (!v12)
    {
      int v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      if (os_log_type_enabled(v3, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_http1_on_chunk_complete";
        char v5 = "%{public}s called with null http1_connection, backtrace limit exceeded";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v3 = __nwlog_obj();
    os_log_type_t v4 = type;
    BOOL v11 = os_log_type_enabled(v3, type);
    if (!backtrace_string)
    {
      if (v11)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_http1_on_chunk_complete";
        char v5 = "%{public}s called with null http1_connection, no backtrace";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    if (v11)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v15 = "nw_http1_on_chunk_complete";
      __int16 v16 = 2082;
      __int16 v17 = backtrace_string;
      uint64_t v8 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_28;
    }
    goto LABEL_29;
  }
  if (*(void *)(a1 + 64)) {
    BOOL v1 = 1;
  }
  else {
    BOOL v1 = gLogDatapath == 0;
  }
  if (v1) {
    return 0;
  }
  __int16 v9 = __nwlog_obj();
  uint64_t result = os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG);
  if (result)
  {
    *(_DWORD *)buf = 136446210;
    __int16 v15 = "nw_http1_on_chunk_complete";
    _os_log_impl(&dword_1830D4000, v9, OS_LOG_TYPE_DEBUG, "%{public}s this is the final chunk of the body", buf, 0xCu);
    return 0;
  }
  return result;
}

uint64_t nw_http1_on_chunk_header(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v13 = "nw_http1_on_chunk_header";
    uint64_t v2 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v10 = 0;
    if (!__nwlog_fault(v2, &type, &v10)) {
      goto LABEL_32;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      if (!os_log_type_enabled(v3, type)) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v13 = "nw_http1_on_chunk_header";
      char v5 = "%{public}s called with null parser";
    }
    else
    {
      if (!v10)
      {
        int v3 = __nwlog_obj();
        os_log_type_t v4 = type;
        if (!os_log_type_enabled(v3, type)) {
          goto LABEL_32;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v13 = "nw_http1_on_chunk_header";
        char v5 = "%{public}s called with null parser, backtrace limit exceeded";
        goto LABEL_31;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      BOOL v7 = os_log_type_enabled(v3, type);
      if (backtrace_string)
      {
        if (v7)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v13 = "nw_http1_on_chunk_header";
          __int16 v14 = 2082;
          __int16 v15 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v3, v4, "%{public}s called with null parser, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        if (!v2) {
          return 0xFFFFFFFFLL;
        }
        goto LABEL_33;
      }
      if (!v7) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v13 = "nw_http1_on_chunk_header";
      char v5 = "%{public}s called with null parser, no backtrace";
    }
LABEL_31:
    _os_log_impl(&dword_1830D4000, v3, v4, v5, buf, 0xCu);
    goto LABEL_32;
  }
  if (*(void *)(a1 + 48)) {
    return 0;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  __int16 v13 = "nw_http1_on_chunk_header";
  uint64_t v2 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v10 = 0;
  if (__nwlog_fault(v2, &type, &v10))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      if (!os_log_type_enabled(v3, type)) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v13 = "nw_http1_on_chunk_header";
      char v5 = "%{public}s called with null http1_connection";
      goto LABEL_31;
    }
    if (!v10)
    {
      int v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      if (!os_log_type_enabled(v3, type)) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v13 = "nw_http1_on_chunk_header";
      char v5 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      goto LABEL_31;
    }
    uint64_t v8 = (char *)__nw_create_backtrace_string();
    int v3 = __nwlog_obj();
    os_log_type_t v4 = type;
    BOOL v9 = os_log_type_enabled(v3, type);
    if (!v8)
    {
      if (!v9) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v13 = "nw_http1_on_chunk_header";
      char v5 = "%{public}s called with null http1_connection, no backtrace";
      goto LABEL_31;
    }
    if (v9)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v13 = "nw_http1_on_chunk_header";
      __int16 v14 = 2082;
      __int16 v15 = v8;
      _os_log_impl(&dword_1830D4000, v3, v4, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v8);
  }
LABEL_32:
  if (v2) {
LABEL_33:
  }
    free(v2);
  return 0xFFFFFFFFLL;
}

uint64_t nw_http1_on_body(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v29 = "nw_http1_on_body";
    uint64_t v8 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v26 = 0;
    if (!__nwlog_fault(v8, &type, &v26)) {
      goto LABEL_20;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (!os_log_type_enabled(v9, type)) {
        goto LABEL_20;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v29 = "nw_http1_on_body";
      BOOL v11 = "%{public}s called with null parser";
      goto LABEL_18;
    }
    if (!v26)
    {
      BOOL v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (!os_log_type_enabled(v9, type)) {
        goto LABEL_20;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v29 = "nw_http1_on_body";
      BOOL v11 = "%{public}s called with null parser, backtrace limit exceeded";
      goto LABEL_18;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    BOOL v9 = __nwlog_obj();
    os_log_type_t v10 = type;
    BOOL v23 = os_log_type_enabled(v9, type);
    if (!backtrace_string)
    {
      if (!v23) {
        goto LABEL_20;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v29 = "nw_http1_on_body";
      BOOL v11 = "%{public}s called with null parser, no backtrace";
      goto LABEL_18;
    }
    if (v23)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v29 = "nw_http1_on_body";
      __int16 v30 = 2082;
      __int16 v31 = backtrace_string;
      uint64_t v24 = "%{public}s called with null parser, dumping backtrace:%{public}s";
LABEL_46:
      _os_log_impl(&dword_1830D4000, v9, v10, v24, buf, 0x16u);
    }
LABEL_47:
    free(backtrace_string);
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if (!v3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v29 = "nw_http1_on_body";
    uint64_t v8 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v26 = 0;
    if (!__nwlog_fault(v8, &type, &v26)) {
      goto LABEL_20;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (!os_log_type_enabled(v9, type)) {
        goto LABEL_20;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v29 = "nw_http1_on_body";
      BOOL v11 = "%{public}s called with null http1_connection";
      goto LABEL_18;
    }
    if (!v26)
    {
      BOOL v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (!os_log_type_enabled(v9, type)) {
        goto LABEL_20;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v29 = "nw_http1_on_body";
      BOOL v11 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      goto LABEL_18;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    BOOL v9 = __nwlog_obj();
    os_log_type_t v10 = type;
    BOOL v25 = os_log_type_enabled(v9, type);
    if (!backtrace_string)
    {
      if (!v25) {
        goto LABEL_20;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v29 = "nw_http1_on_body";
      BOOL v11 = "%{public}s called with null http1_connection, no backtrace";
      goto LABEL_18;
    }
    if (v25)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v29 = "nw_http1_on_body";
      __int16 v30 = 2082;
      __int16 v31 = backtrace_string;
      uint64_t v24 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_46;
    }
    goto LABEL_47;
  }
  if ((*(unsigned char *)(v3 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      uint64_t v18 = __nwlog_obj();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v19 = *(void *)(v3 + 488);
        int v20 = *(_DWORD *)(*(void *)(v3 + 480) + 372);
        int v21 = *(_DWORD *)(v3 + 860);
        if (v19) {
          LODWORD(v19) = *(_DWORD *)(v19 + 424);
        }
        *(_DWORD *)buf = 136448002;
        __int16 v29 = "nw_http1_on_body";
        __int16 v30 = 2082;
        __int16 v31 = (char *)(v3 + 74);
        __int16 v32 = 2080;
        __int16 v33 = " ";
        __int16 v34 = 1024;
        int v35 = v20;
        __int16 v36 = 1024;
        int v37 = v21;
        __int16 v38 = 1024;
        int v39 = v19;
        __int16 v40 = 2048;
        uint64_t v41 = a2;
        __int16 v42 = 1024;
        int v43 = a3;
        _os_log_impl(&dword_1830D4000, v18, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> body segment found at (%p, %u bytes)", buf, 0x42u);
      }
    }
  }
  uint64_t v6 = *(void *)(v3 + 792);
  if (v6)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v6, a2, a3);
    return 0;
  }
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  *(_DWORD *)buf = 136446210;
  __int16 v29 = "nw_http1_on_body";
  uint64_t v8 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v26 = 0;
  if (__nwlog_fault(v8, &type, &v26))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      BOOL v9 = gLogObj;
      os_log_type_t v10 = type;
      if (os_log_type_enabled((os_log_t)gLogObj, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v29 = "nw_http1_on_body";
        BOOL v11 = "%{public}s no body block found";
LABEL_18:
        uint64_t v16 = v9;
        os_log_type_t v17 = v10;
LABEL_19:
        _os_log_impl(&dword_1830D4000, v16, v17, v11, buf, 0xCu);
      }
    }
    else if (v26)
    {
      char v12 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      __int16 v13 = gLogObj;
      os_log_type_t v14 = type;
      BOOL v15 = os_log_type_enabled((os_log_t)gLogObj, type);
      if (v12)
      {
        if (v15)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v29 = "nw_http1_on_body";
          __int16 v30 = 2082;
          __int16 v31 = v12;
          _os_log_impl(&dword_1830D4000, v13, v14, "%{public}s no body block found, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v12);
        goto LABEL_20;
      }
      if (v15)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v29 = "nw_http1_on_body";
        BOOL v11 = "%{public}s no body block found, no backtrace";
        uint64_t v16 = v13;
        os_log_type_t v17 = v14;
        goto LABEL_19;
      }
    }
    else
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      BOOL v9 = gLogObj;
      os_log_type_t v10 = type;
      if (os_log_type_enabled((os_log_t)gLogObj, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v29 = "nw_http1_on_body";
        BOOL v11 = "%{public}s no body block found, backtrace limit exceeded";
        goto LABEL_18;
      }
    }
  }
LABEL_20:
  if (v8) {
    free(v8);
  }
  return 0xFFFFFFFFLL;
}

uint64_t nw_http1_on_header_value(uint64_t a1, const char *a2, size_t a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_header_value";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v16 = 0;
    if (!__nwlog_fault(v6, &type, &v16)) {
      goto LABEL_58;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v16)
      {
        BOOL v7 = __nwlog_obj();
        os_log_type_t v8 = type;
        if (os_log_type_enabled(v7, type))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v19 = "nw_http1_on_header_value";
          BOOL v9 = "%{public}s called with null parser, backtrace limit exceeded";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      BOOL v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v11 = os_log_type_enabled(v7, type);
      if (!backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v19 = "nw_http1_on_header_value";
          BOOL v9 = "%{public}s called with null parser, no backtrace";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      if (!v11) {
        goto LABEL_40;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v19 = "nw_http1_on_header_value";
      __int16 v20 = 2082;
      int v21 = backtrace_string;
      char v12 = "%{public}s called with null parser, dumping backtrace:%{public}s";
      goto LABEL_39;
    }
    BOOL v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    if (!os_log_type_enabled(v7, type)) {
      goto LABEL_58;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_header_value";
    BOOL v9 = "%{public}s called with null parser";
LABEL_57:
    _os_log_impl(&dword_1830D4000, v7, v8, v9, buf, 0xCu);
    goto LABEL_58;
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if (!v3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_header_value";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v16 = 0;
    if (!__nwlog_fault(v6, &type, &v16)) {
      goto LABEL_58;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v16)
      {
        BOOL v7 = __nwlog_obj();
        os_log_type_t v8 = type;
        if (os_log_type_enabled(v7, type))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v19 = "nw_http1_on_header_value";
          BOOL v9 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      BOOL v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v13 = os_log_type_enabled(v7, type);
      if (!backtrace_string)
      {
        if (v13)
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v19 = "nw_http1_on_header_value";
          BOOL v9 = "%{public}s called with null http1_connection, no backtrace";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      if (!v13) {
        goto LABEL_40;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v19 = "nw_http1_on_header_value";
      __int16 v20 = 2082;
      int v21 = backtrace_string;
      char v12 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_39;
    }
    BOOL v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    if (!os_log_type_enabled(v7, type)) {
      goto LABEL_58;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_header_value";
    BOOL v9 = "%{public}s called with null http1_connection";
    goto LABEL_57;
  }
  uint64_t v4 = *(void *)(v3 + 488);
  if (!v4)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_header_value";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v16 = 0;
    if (!__nwlog_fault(v6, &type, &v16)) {
      goto LABEL_58;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_58;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v19 = "nw_http1_on_header_value";
      BOOL v9 = "%{public}s called with null http1_stream";
      goto LABEL_57;
    }
    if (!v16)
    {
      BOOL v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = "nw_http1_on_header_value";
        BOOL v9 = "%{public}s called with null http1_stream, backtrace limit exceeded";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    BOOL v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    BOOL v14 = os_log_type_enabled(v7, type);
    if (!backtrace_string)
    {
      if (v14)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = "nw_http1_on_header_value";
        BOOL v9 = "%{public}s called with null http1_stream, no backtrace";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    if (!v14) {
      goto LABEL_40;
    }
    *(_DWORD *)buf = 136446466;
    uint64_t v19 = "nw_http1_on_header_value";
    __int16 v20 = 2082;
    int v21 = backtrace_string;
    char v12 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
LABEL_39:
    _os_log_impl(&dword_1830D4000, v7, v8, v12, buf, 0x16u);
    goto LABEL_40;
  }
  if (*(void *)(v4 + 400))
  {
    nw_http1_append_bytes((char **)(v3 + 808), (unsigned int *)(v3 + 844), a2, a3);
    return 0;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  uint64_t v19 = "nw_http1_on_header_value";
  uint64_t v6 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v16 = 0;
  if (!__nwlog_fault(v6, &type, &v16)) {
    goto LABEL_58;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v16)
    {
      BOOL v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = "nw_http1_on_header_value";
        BOOL v9 = "%{public}s called with null parsed_fields, backtrace limit exceeded";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    BOOL v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    BOOL v15 = os_log_type_enabled(v7, type);
    if (!backtrace_string)
    {
      if (v15)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = "nw_http1_on_header_value";
        BOOL v9 = "%{public}s called with null parsed_fields, no backtrace";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    if (v15)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v19 = "nw_http1_on_header_value";
      __int16 v20 = 2082;
      int v21 = backtrace_string;
      char v12 = "%{public}s called with null parsed_fields, dumping backtrace:%{public}s";
      goto LABEL_39;
    }
LABEL_40:
    free(backtrace_string);
    goto LABEL_58;
  }
  BOOL v7 = __nwlog_obj();
  os_log_type_t v8 = type;
  if (os_log_type_enabled(v7, type))
  {
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_header_value";
    BOOL v9 = "%{public}s called with null parsed_fields";
    goto LABEL_57;
  }
LABEL_58:
  if (v6) {
    free(v6);
  }
  return 0xFFFFFFFFLL;
}

void nw_http1_append_bytes(char **a1, unsigned int *a2, const char *a3, size_t a4)
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v38 = "nw_http1_append_bytes";
    BOOL v23 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v35 = 0;
    if (!__nwlog_fault(v23, &type, &v35)) {
      goto LABEL_72;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v24 = __nwlog_obj();
      os_log_type_t v25 = type;
      if (!os_log_type_enabled(v24, type)) {
        goto LABEL_72;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v38 = "nw_http1_append_bytes";
      char v26 = "%{public}s called with null value";
    }
    else if (v35)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v24 = __nwlog_obj();
      os_log_type_t v25 = type;
      BOOL v28 = os_log_type_enabled(v24, type);
      if (backtrace_string)
      {
        if (v28)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v38 = "nw_http1_append_bytes";
          __int16 v39 = 2082;
          __int16 v40 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v24, v25, "%{public}s called with null value, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_72:
        if (!v23) {
          return;
        }
        goto LABEL_73;
      }
      if (!v28) {
        goto LABEL_72;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v38 = "nw_http1_append_bytes";
      char v26 = "%{public}s called with null value, no backtrace";
    }
    else
    {
      uint64_t v24 = __nwlog_obj();
      os_log_type_t v25 = type;
      if (!os_log_type_enabled(v24, type)) {
        goto LABEL_72;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v38 = "nw_http1_append_bytes";
      char v26 = "%{public}s called with null value, backtrace limit exceeded";
    }
    goto LABEL_71;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v38 = "nw_http1_append_bytes";
    BOOL v23 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v35 = 0;
    if (!__nwlog_fault(v23, &type, &v35)) {
      goto LABEL_72;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v35)
      {
        uint64_t v24 = __nwlog_obj();
        os_log_type_t v25 = type;
        if (!os_log_type_enabled(v24, type)) {
          goto LABEL_72;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v38 = "nw_http1_append_bytes";
        char v26 = "%{public}s called with null value_length, backtrace limit exceeded";
        goto LABEL_71;
      }
      __int16 v29 = (char *)__nw_create_backtrace_string();
      uint64_t v24 = __nwlog_obj();
      os_log_type_t v25 = type;
      BOOL v30 = os_log_type_enabled(v24, type);
      if (!v29)
      {
        if (!v30) {
          goto LABEL_72;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v38 = "nw_http1_append_bytes";
        char v26 = "%{public}s called with null value_length, no backtrace";
        goto LABEL_71;
      }
      if (v30)
      {
        *(_DWORD *)buf = 136446466;
        __int16 v38 = "nw_http1_append_bytes";
        __int16 v39 = 2082;
        __int16 v40 = v29;
        __int16 v31 = "%{public}s called with null value_length, dumping backtrace:%{public}s";
LABEL_54:
        _os_log_impl(&dword_1830D4000, v24, v25, v31, buf, 0x16u);
      }
LABEL_55:
      free(v29);
      if (!v23) {
        return;
      }
LABEL_73:
      free(v23);
      return;
    }
    uint64_t v24 = __nwlog_obj();
    os_log_type_t v25 = type;
    if (!os_log_type_enabled(v24, type)) {
      goto LABEL_72;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v38 = "nw_http1_append_bytes";
    char v26 = "%{public}s called with null value_length";
LABEL_71:
    _os_log_impl(&dword_1830D4000, v24, v25, v26, buf, 0xCu);
    goto LABEL_72;
  }
  if (!a3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v38 = "nw_http1_append_bytes";
    BOOL v23 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v35 = 0;
    if (!__nwlog_fault(v23, &type, &v35)) {
      goto LABEL_72;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v24 = __nwlog_obj();
      os_log_type_t v25 = type;
      if (!os_log_type_enabled(v24, type)) {
        goto LABEL_72;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v38 = "nw_http1_append_bytes";
      char v26 = "%{public}s called with null at";
      goto LABEL_71;
    }
    if (!v35)
    {
      uint64_t v24 = __nwlog_obj();
      os_log_type_t v25 = type;
      if (!os_log_type_enabled(v24, type)) {
        goto LABEL_72;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v38 = "nw_http1_append_bytes";
      char v26 = "%{public}s called with null at, backtrace limit exceeded";
      goto LABEL_71;
    }
    __int16 v29 = (char *)__nw_create_backtrace_string();
    uint64_t v24 = __nwlog_obj();
    os_log_type_t v25 = type;
    BOOL v32 = os_log_type_enabled(v24, type);
    if (!v29)
    {
      if (!v32) {
        goto LABEL_72;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v38 = "nw_http1_append_bytes";
      char v26 = "%{public}s called with null at, no backtrace";
      goto LABEL_71;
    }
    if (v32)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v38 = "nw_http1_append_bytes";
      __int16 v39 = 2082;
      __int16 v40 = v29;
      __int16 v31 = "%{public}s called with null at, dumping backtrace:%{public}s";
      goto LABEL_54;
    }
    goto LABEL_55;
  }
  if (a4)
  {
    uint64_t v8 = *a2;
    size_t v9 = v8 + a4;
    *a2 = v8 + a4;
    if (!__CFADD__(v8, a4) && !HIDWORD(v9))
    {
LABEL_27:
      BOOL v22 = nw_reallocf_type<char *>(*a1, v9);
      *a1 = (char *)v22;
      memcpy((void *)(v22 + v8), a3, a4);
      return;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v10 = *a2;
    *(_DWORD *)buf = 136446978;
    __int16 v38 = "nw_http1_append_bytes";
    __int16 v39 = 2082;
    __int16 v40 = "*value_length";
    __int16 v41 = 2048;
    size_t v42 = a4;
    __int16 v43 = 2048;
    uint64_t v44 = v10;
    BOOL v11 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v35 = 0;
    if (__nwlog_fault(v11, &type, &v35))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        char v12 = gLogObj;
        os_log_type_t v13 = type;
        if (os_log_type_enabled((os_log_t)gLogObj, type))
        {
          uint64_t v14 = *a2;
          *(_DWORD *)buf = 136446978;
          __int16 v38 = "nw_http1_append_bytes";
          __int16 v39 = 2082;
          __int16 v40 = "*value_length";
          __int16 v41 = 2048;
          size_t v42 = a4;
          __int16 v43 = 2048;
          uint64_t v44 = v14;
          BOOL v15 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_23:
          _os_log_impl(&dword_1830D4000, v12, v13, v15, buf, 0x2Au);
        }
      }
      else if (v35)
      {
        os_log_type_t v17 = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        char v12 = gLogObj;
        os_log_type_t v13 = type;
        BOOL v18 = os_log_type_enabled((os_log_t)gLogObj, type);
        if (v17)
        {
          if (v18)
          {
            uint64_t v19 = *a2;
            *(_DWORD *)buf = 136447234;
            __int16 v38 = "nw_http1_append_bytes";
            __int16 v39 = 2082;
            __int16 v40 = "*value_length";
            __int16 v41 = 2048;
            size_t v42 = a4;
            __int16 v43 = 2048;
            uint64_t v44 = v19;
            __int16 v45 = 2082;
            id v46 = v17;
            _os_log_impl(&dword_1830D4000, v12, v13, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v17);
          goto LABEL_24;
        }
        if (v18)
        {
          uint64_t v21 = *a2;
          *(_DWORD *)buf = 136446978;
          __int16 v38 = "nw_http1_append_bytes";
          __int16 v39 = 2082;
          __int16 v40 = "*value_length";
          __int16 v41 = 2048;
          size_t v42 = a4;
          __int16 v43 = 2048;
          uint64_t v44 = v21;
          BOOL v15 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
          goto LABEL_23;
        }
      }
      else
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        char v12 = gLogObj;
        os_log_type_t v13 = type;
        if (os_log_type_enabled((os_log_t)gLogObj, type))
        {
          uint64_t v20 = *a2;
          *(_DWORD *)buf = 136446978;
          __int16 v38 = "nw_http1_append_bytes";
          __int16 v39 = 2082;
          __int16 v40 = "*value_length";
          __int16 v41 = 2048;
          size_t v42 = a4;
          __int16 v43 = 2048;
          uint64_t v44 = v20;
          BOOL v15 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
          goto LABEL_23;
        }
      }
    }
LABEL_24:
    if (v11) {
      free(v11);
    }
    size_t v9 = 0xFFFFFFFFLL;
    *a2 = -1;
    goto LABEL_27;
  }
  if (!*a1)
  {
    char v16 = strdup("");
    if (!v16)
    {
      __int16 v33 = __nwlog_obj();
      os_log_type_enabled(v33, OS_LOG_TYPE_ERROR);
      *(_DWORD *)buf = 136446210;
      __int16 v38 = "strict_strdup";
      __int16 v34 = (void *)_os_log_send_and_compose_impl();
      if (__nwlog_abort((uint64_t)v34))
      {
        __break(1u);
        return;
      }
      free(v34);
    }
    *a1 = v16;
  }
}

BOOL nw_reallocf_type<char *>(void *__ptr, size_t __size)
{
  if (!__size)
  {
    uint64_t v6 = __nwlog_obj();
    os_log_type_enabled(v6, OS_LOG_TYPE_ERROR);
    BOOL v7 = (void *)_os_log_send_and_compose_impl();
    BOOL result = __nwlog_abort((uint64_t)v7);
    if (result) {
      goto LABEL_8;
    }
    free(v7);
  }
  uint64_t v4 = reallocf(__ptr, __size);
  if (v4) {
    return (BOOL)v4;
  }
  uint64_t v8 = __nwlog_obj();
  os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
  size_t v9 = (void *)_os_log_send_and_compose_impl();
  BOOL result = __nwlog_abort((uint64_t)v9);
  if (!result)
  {
    free(v9);
    return (BOOL)v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t nw_http1_on_header_field_complete(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v1 = *(void *)(a1 + 48);
    if (v1)
    {
      uint64_t result = 0;
      *(_WORD *)(v1 + 872) |= 2u;
      return result;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v14 = "nw_http1_on_header_field_complete";
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v11 = 0;
    if (!__nwlog_fault(v3, &type, &v11)) {
      goto LABEL_32;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (os_log_type_enabled(v4, type))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_http1_on_header_field_complete";
        uint64_t v6 = "%{public}s called with null http1_connection";
        goto LABEL_31;
      }
      goto LABEL_32;
    }
    if (!v11)
    {
      uint64_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (os_log_type_enabled(v4, type))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_http1_on_header_field_complete";
        uint64_t v6 = "%{public}s called with null http1_connection, backtrace limit exceeded";
        goto LABEL_31;
      }
      goto LABEL_32;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v4 = __nwlog_obj();
    os_log_type_t v5 = type;
    BOOL v10 = os_log_type_enabled(v4, type);
    if (!backtrace_string)
    {
      if (v10)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_http1_on_header_field_complete";
        uint64_t v6 = "%{public}s called with null http1_connection, no backtrace";
        goto LABEL_31;
      }
      goto LABEL_32;
    }
    if (v10)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v14 = "nw_http1_on_header_field_complete";
      __int16 v15 = 2082;
      char v16 = backtrace_string;
      size_t v9 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_21;
    }
    goto LABEL_22;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  uint64_t v14 = "nw_http1_on_header_field_complete";
  uint64_t v3 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v11 = 0;
  if (!__nwlog_fault(v3, &type, &v11)) {
    goto LABEL_32;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v11)
    {
      uint64_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (os_log_type_enabled(v4, type))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_http1_on_header_field_complete";
        uint64_t v6 = "%{public}s called with null parser, backtrace limit exceeded";
        goto LABEL_31;
      }
      goto LABEL_32;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v4 = __nwlog_obj();
    os_log_type_t v5 = type;
    BOOL v8 = os_log_type_enabled(v4, type);
    if (!backtrace_string)
    {
      if (v8)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_http1_on_header_field_complete";
        uint64_t v6 = "%{public}s called with null parser, no backtrace";
        goto LABEL_31;
      }
      goto LABEL_32;
    }
    if (v8)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v14 = "nw_http1_on_header_field_complete";
      __int16 v15 = 2082;
      char v16 = backtrace_string;
      size_t v9 = "%{public}s called with null parser, dumping backtrace:%{public}s";
LABEL_21:
      _os_log_impl(&dword_1830D4000, v4, v5, v9, buf, 0x16u);
    }
LABEL_22:
    free(backtrace_string);
    goto LABEL_32;
  }
  uint64_t v4 = __nwlog_obj();
  os_log_type_t v5 = type;
  if (os_log_type_enabled(v4, type))
  {
    *(_DWORD *)buf = 136446210;
    uint64_t v14 = "nw_http1_on_header_field_complete";
    uint64_t v6 = "%{public}s called with null parser";
LABEL_31:
    _os_log_impl(&dword_1830D4000, v4, v5, v6, buf, 0xCu);
  }
LABEL_32:
  if (v3) {
    free(v3);
  }
  return 0xFFFFFFFFLL;
}

uint64_t nw_http1_on_header_field(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v3 = *(void *)(a1 + 48);
    if (v3)
    {
      int v4 = *(unsigned __int16 *)(v3 + 872);
      unsigned int v5 = v4 & 0xFFFFFFFD | (*(unsigned __int8 *)(v3 + 874) << 16);
      *(_WORD *)(v3 + 872) = v4 & 0xFFFD;
      *(unsigned char *)(v3 + 874) = BYTE2(v5);
      nw_http1_append_bytes((char **)(v3 + 800), (unsigned int *)(v3 + 840), a2, a3);
      return 0;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v18 = "nw_http1_on_header_field";
    BOOL v7 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v15 = 0;
    if (!__nwlog_fault(v7, &type, &v15)) {
      goto LABEL_32;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v8 = __nwlog_obj();
      os_log_type_t v9 = type;
      if (os_log_type_enabled(v8, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v18 = "nw_http1_on_header_field";
        BOOL v10 = "%{public}s called with null http1_connection";
        goto LABEL_31;
      }
      goto LABEL_32;
    }
    if (!v15)
    {
      BOOL v8 = __nwlog_obj();
      os_log_type_t v9 = type;
      if (os_log_type_enabled(v8, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v18 = "nw_http1_on_header_field";
        BOOL v10 = "%{public}s called with null http1_connection, backtrace limit exceeded";
        goto LABEL_31;
      }
      goto LABEL_32;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    BOOL v8 = __nwlog_obj();
    os_log_type_t v9 = type;
    BOOL v14 = os_log_type_enabled(v8, type);
    if (!backtrace_string)
    {
      if (v14)
      {
        *(_DWORD *)buf = 136446210;
        BOOL v18 = "nw_http1_on_header_field";
        BOOL v10 = "%{public}s called with null http1_connection, no backtrace";
        goto LABEL_31;
      }
      goto LABEL_32;
    }
    if (v14)
    {
      *(_DWORD *)buf = 136446466;
      BOOL v18 = "nw_http1_on_header_field";
      __int16 v19 = 2082;
      uint64_t v20 = backtrace_string;
      os_log_type_t v13 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_21;
    }
    goto LABEL_22;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  BOOL v18 = "nw_http1_on_header_field";
  BOOL v7 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v15 = 0;
  if (!__nwlog_fault(v7, &type, &v15)) {
    goto LABEL_32;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v15)
    {
      BOOL v8 = __nwlog_obj();
      os_log_type_t v9 = type;
      if (os_log_type_enabled(v8, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v18 = "nw_http1_on_header_field";
        BOOL v10 = "%{public}s called with null parser, backtrace limit exceeded";
        goto LABEL_31;
      }
      goto LABEL_32;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    BOOL v8 = __nwlog_obj();
    os_log_type_t v9 = type;
    BOOL v12 = os_log_type_enabled(v8, type);
    if (!backtrace_string)
    {
      if (v12)
      {
        *(_DWORD *)buf = 136446210;
        BOOL v18 = "nw_http1_on_header_field";
        BOOL v10 = "%{public}s called with null parser, no backtrace";
        goto LABEL_31;
      }
      goto LABEL_32;
    }
    if (v12)
    {
      *(_DWORD *)buf = 136446466;
      BOOL v18 = "nw_http1_on_header_field";
      __int16 v19 = 2082;
      uint64_t v20 = backtrace_string;
      os_log_type_t v13 = "%{public}s called with null parser, dumping backtrace:%{public}s";
LABEL_21:
      _os_log_impl(&dword_1830D4000, v8, v9, v13, buf, 0x16u);
    }
LABEL_22:
    free(backtrace_string);
    goto LABEL_32;
  }
  BOOL v8 = __nwlog_obj();
  os_log_type_t v9 = type;
  if (os_log_type_enabled(v8, type))
  {
    *(_DWORD *)buf = 136446210;
    BOOL v18 = "nw_http1_on_header_field";
    BOOL v10 = "%{public}s called with null parser";
LABEL_31:
    _os_log_impl(&dword_1830D4000, v8, v9, v10, buf, 0xCu);
  }
LABEL_32:
  if (v7) {
    free(v7);
  }
  return 0xFFFFFFFFLL;
}

uint64_t nw_http1_on_status_complete(uint64_t a1)
{
  uint64_t v40 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)__str = 136446210;
    __int16 v29 = "nw_http1_on_status_complete";
    BOOL v14 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v26 = 0;
    if (!__nwlog_fault(v14, &type, &v26)) {
      goto LABEL_76;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      char v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (!os_log_type_enabled(v15, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null parser";
      goto LABEL_75;
    }
    if (!v26)
    {
      char v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (!os_log_type_enabled(v15, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null parser, backtrace limit exceeded";
      goto LABEL_75;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    char v15 = __nwlog_obj();
    os_log_type_t v16 = type;
    BOOL v19 = os_log_type_enabled(v15, type);
    if (!backtrace_string)
    {
      if (!v19) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null parser, no backtrace";
      goto LABEL_75;
    }
    if (!v19) {
      goto LABEL_56;
    }
    *(_DWORD *)__str = 136446466;
    __int16 v29 = "nw_http1_on_status_complete";
    __int16 v30 = 2082;
    __int16 v31 = backtrace_string;
    uint64_t v20 = "%{public}s called with null parser, dumping backtrace:%{public}s";
LABEL_55:
    _os_log_impl(&dword_1830D4000, v15, v16, v20, (uint8_t *)__str, 0x16u);
    goto LABEL_56;
  }
  uint64_t v1 = *(void *)(a1 + 48);
  if (!v1)
  {
    __nwlog_obj();
    *(_DWORD *)__str = 136446210;
    __int16 v29 = "nw_http1_on_status_complete";
    BOOL v14 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v26 = 0;
    if (!__nwlog_fault(v14, &type, &v26)) {
      goto LABEL_76;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      char v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (!os_log_type_enabled(v15, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null http1_connection";
      goto LABEL_75;
    }
    if (!v26)
    {
      char v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (!os_log_type_enabled(v15, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      goto LABEL_75;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    char v15 = __nwlog_obj();
    os_log_type_t v16 = type;
    BOOL v21 = os_log_type_enabled(v15, type);
    if (!backtrace_string)
    {
      if (!v21) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null http1_connection, no backtrace";
      goto LABEL_75;
    }
    if (!v21) {
      goto LABEL_56;
    }
    *(_DWORD *)__str = 136446466;
    __int16 v29 = "nw_http1_on_status_complete";
    __int16 v30 = 2082;
    __int16 v31 = backtrace_string;
    uint64_t v20 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
    goto LABEL_55;
  }
  uint64_t v2 = *(void *)(v1 + 488);
  if (!v2)
  {
    __nwlog_obj();
    *(_DWORD *)__str = 136446210;
    __int16 v29 = "nw_http1_on_status_complete";
    BOOL v14 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v26 = 0;
    if (!__nwlog_fault(v14, &type, &v26)) {
      goto LABEL_76;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      char v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (!os_log_type_enabled(v15, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null http1_stream";
      goto LABEL_75;
    }
    if (!v26)
    {
      char v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (!os_log_type_enabled(v15, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null http1_stream, backtrace limit exceeded";
      goto LABEL_75;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    char v15 = __nwlog_obj();
    os_log_type_t v16 = type;
    BOOL v22 = os_log_type_enabled(v15, type);
    if (!backtrace_string)
    {
      if (!v22) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null http1_stream, no backtrace";
      goto LABEL_75;
    }
    if (!v22) {
      goto LABEL_56;
    }
    *(_DWORD *)__str = 136446466;
    __int16 v29 = "nw_http1_on_status_complete";
    __int16 v30 = 2082;
    __int16 v31 = backtrace_string;
    uint64_t v20 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
    goto LABEL_55;
  }
  uint64_t v3 = *(void **)(v2 + 400);
  if (!v3)
  {
    __nwlog_obj();
    *(_DWORD *)__str = 136446210;
    __int16 v29 = "nw_http1_on_status_complete";
    BOOL v14 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v26 = 0;
    if (!__nwlog_fault(v14, &type, &v26)) {
      goto LABEL_76;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      char v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (!os_log_type_enabled(v15, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null parsed_fields";
      goto LABEL_75;
    }
    if (!v26)
    {
      char v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (!os_log_type_enabled(v15, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)__str = 136446210;
      __int16 v29 = "nw_http1_on_status_complete";
      uint64_t v17 = "%{public}s called with null parsed_fields, backtrace limit exceeded";
      goto LABEL_75;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    char v15 = __nwlog_obj();
    os_log_type_t v16 = type;
    BOOL v23 = os_log_type_enabled(v15, type);
    if (backtrace_string)
    {
      if (v23)
      {
        *(_DWORD *)__str = 136446466;
        __int16 v29 = "nw_http1_on_status_complete";
        __int16 v30 = 2082;
        __int16 v31 = backtrace_string;
        uint64_t v20 = "%{public}s called with null parsed_fields, dumping backtrace:%{public}s";
        goto LABEL_55;
      }
LABEL_56:
      free(backtrace_string);
      goto LABEL_76;
    }
    if (!v23) {
      goto LABEL_76;
    }
    *(_DWORD *)__str = 136446210;
    __int16 v29 = "nw_http1_on_status_complete";
    uint64_t v17 = "%{public}s called with null parsed_fields, no backtrace";
LABEL_75:
    _os_log_impl(&dword_1830D4000, v15, v16, v17, (uint8_t *)__str, 0xCu);
LABEL_76:
    if (v14) {
      free(v14);
    }
    return 0xFFFFFFFFLL;
  }
  if (*(unsigned __int16 *)(a1 + 84) > 0x3E7u)
  {
    if ((*(unsigned char *)(v1 + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      BOOL v10 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
      {
        uint64_t v11 = *(void *)(v1 + 488);
        int v12 = *(_DWORD *)(*(void *)(v1 + 480) + 372);
        int v13 = *(_DWORD *)(v1 + 860);
        if (v11) {
          LODWORD(v11) = *(_DWORD *)(v11 + 424);
        }
        *(_DWORD *)__str = 136447490;
        __int16 v29 = "nw_http1_on_status_complete";
        __int16 v30 = 2082;
        __int16 v31 = (char *)(v1 + 74);
        __int16 v32 = 2080;
        __int16 v33 = " ";
        __int16 v34 = 1024;
        int v35 = v12;
        __int16 v36 = 1024;
        int v37 = v13;
        __int16 v38 = 1024;
        int v39 = v11;
        _os_log_impl(&dword_1830D4000, v10, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> invalid status code", (uint8_t *)__str, 0x32u);
      }
    }
    return 0xFFFFFFFFLL;
  }
  snprintf(__str, 4uLL, "%03d", *(unsigned __int16 *)(a1 + 84));
  id v4 = v3;
  _nw_http_parsed_fields_add((uint64_t)v4, (unint64_t)":status", -1, __str, 3, 1);

  unsigned int v5 = *(const char **)(v1 + 832);
  if (!v5)
  {
LABEL_15:
    uint64_t result = 0;
    *(_WORD *)(v1 + 872) |= 1u;
    return result;
  }
  uint64_t v6 = strndup(v5, *(unsigned int *)(v1 + 856));
  if (v6)
  {
LABEL_8:
    BOOL v7 = *(char **)(v2 + 416);
    if (v7 != v6)
    {
      if (v7) {
        free(v7);
      }
      *(void *)(v2 + 416) = v6;
    }
    BOOL v8 = *(void **)(v1 + 832);
    if (v8)
    {
      free(v8);
      *(void *)(v1 + 832) = 0;
    }
    *(_DWORD *)(v1 + 856) = 0;
    goto LABEL_15;
  }
  uint64_t v24 = __nwlog_obj();
  os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);
  *(_DWORD *)__str = 136446210;
  __int16 v29 = "strict_strndup";
  os_log_type_t v25 = (void *)_os_log_send_and_compose_impl();
  uint64_t result = __nwlog_abort((uint64_t)v25);
  if (!result)
  {
    free(v25);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t nw_http1_on_status(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v3 = *(void *)(a1 + 48);
    if (v3)
    {
      if (a3)
      {
        if ((*(unsigned char *)(v3 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            uint64_t v11 = __nwlog_obj();
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v12 = *(void *)(v3 + 488);
              int v13 = *(_DWORD *)(*(void *)(v3 + 480) + 372);
              int v14 = *(_DWORD *)(v3 + 860);
              if (v12) {
                LODWORD(v12) = *(_DWORD *)(v12 + 424);
              }
              *(_DWORD *)buf = 136448002;
              BOOL v22 = "nw_http1_on_status";
              __int16 v23 = 2082;
              uint64_t v24 = (char *)(v3 + 74);
              __int16 v25 = 2080;
              char v26 = " ";
              __int16 v27 = 1024;
              int v28 = v13;
              __int16 v29 = 1024;
              int v30 = v14;
              __int16 v31 = 1024;
              int v32 = v12;
              __int16 v33 = 1040;
              int v34 = a3;
              __int16 v35 = 2080;
              __int16 v36 = a2;
              _os_log_impl(&dword_1830D4000, v11, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> status: %.*s", buf, 0x42u);
            }
          }
        }
      }
      nw_http1_append_bytes((char **)(v3 + 832), (unsigned int *)(v3 + 856), a2, a3);
      return 0;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v22 = "nw_http1_on_status";
    BOOL v7 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v19 = 0;
    if (!__nwlog_fault(v7, &type, &v19)) {
      goto LABEL_39;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v8 = __nwlog_obj();
      os_log_type_t v9 = type;
      if (os_log_type_enabled(v8, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v22 = "nw_http1_on_status";
        BOOL v10 = "%{public}s called with null http1_connection";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    if (!v19)
    {
      BOOL v8 = __nwlog_obj();
      os_log_type_t v9 = type;
      if (os_log_type_enabled(v8, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v22 = "nw_http1_on_status";
        BOOL v10 = "%{public}s called with null http1_connection, backtrace limit exceeded";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    BOOL v8 = __nwlog_obj();
    os_log_type_t v9 = type;
    BOOL v18 = os_log_type_enabled(v8, type);
    if (!backtrace_string)
    {
      if (v18)
      {
        *(_DWORD *)buf = 136446210;
        BOOL v22 = "nw_http1_on_status";
        BOOL v10 = "%{public}s called with null http1_connection, no backtrace";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    if (v18)
    {
      *(_DWORD *)buf = 136446466;
      BOOL v22 = "nw_http1_on_status";
      __int16 v23 = 2082;
      uint64_t v24 = backtrace_string;
      uint64_t v17 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_28;
    }
    goto LABEL_29;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  BOOL v22 = "nw_http1_on_status";
  BOOL v7 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v19 = 0;
  if (!__nwlog_fault(v7, &type, &v19)) {
    goto LABEL_39;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v19)
    {
      BOOL v8 = __nwlog_obj();
      os_log_type_t v9 = type;
      if (os_log_type_enabled(v8, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v22 = "nw_http1_on_status";
        BOOL v10 = "%{public}s called with null parser, backtrace limit exceeded";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    BOOL v8 = __nwlog_obj();
    os_log_type_t v9 = type;
    BOOL v16 = os_log_type_enabled(v8, type);
    if (!backtrace_string)
    {
      if (v16)
      {
        *(_DWORD *)buf = 136446210;
        BOOL v22 = "nw_http1_on_status";
        BOOL v10 = "%{public}s called with null parser, no backtrace";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
    if (v16)
    {
      *(_DWORD *)buf = 136446466;
      BOOL v22 = "nw_http1_on_status";
      __int16 v23 = 2082;
      uint64_t v24 = backtrace_string;
      uint64_t v17 = "%{public}s called with null parser, dumping backtrace:%{public}s";
LABEL_28:
      _os_log_impl(&dword_1830D4000, v8, v9, v17, buf, 0x16u);
    }
LABEL_29:
    free(backtrace_string);
    goto LABEL_39;
  }
  BOOL v8 = __nwlog_obj();
  os_log_type_t v9 = type;
  if (os_log_type_enabled(v8, type))
  {
    *(_DWORD *)buf = 136446210;
    BOOL v22 = "nw_http1_on_status";
    BOOL v10 = "%{public}s called with null parser";
LABEL_38:
    _os_log_impl(&dword_1830D4000, v8, v9, v10, buf, 0xCu);
  }
LABEL_39:
  if (v7) {
    free(v7);
  }
  return 0xFFFFFFFFLL;
}

uint64_t nw_http1_on_url_complete(uint64_t a1)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v29 = "nw_http1_on_url_complete";
    BOOL v10 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v26 = 0;
    if (!__nwlog_fault(v10, &type, &v26)) {
      goto LABEL_68;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v26)
      {
        uint64_t v11 = __nwlog_obj();
        os_log_type_t v12 = type;
        if (os_log_type_enabled(v11, type))
        {
          *(_DWORD *)buf = 136446210;
          __int16 v29 = "nw_http1_on_url_complete";
          int v13 = "%{public}s called with null parser, backtrace limit exceeded";
          goto LABEL_67;
        }
        goto LABEL_68;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      BOOL v21 = os_log_type_enabled(v11, type);
      if (!backtrace_string)
      {
        if (v21)
        {
          *(_DWORD *)buf = 136446210;
          __int16 v29 = "nw_http1_on_url_complete";
          int v13 = "%{public}s called with null parser, no backtrace";
          goto LABEL_67;
        }
        goto LABEL_68;
      }
      if (!v21) {
        goto LABEL_50;
      }
      *(_DWORD *)buf = 136446466;
      __int16 v29 = "nw_http1_on_url_complete";
      __int16 v30 = 2082;
      __int16 v31 = backtrace_string;
      BOOL v22 = "%{public}s called with null parser, dumping backtrace:%{public}s";
      goto LABEL_49;
    }
    uint64_t v11 = __nwlog_obj();
    os_log_type_t v12 = type;
    if (!os_log_type_enabled(v11, type)) {
      goto LABEL_68;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v29 = "nw_http1_on_url_complete";
    int v13 = "%{public}s called with null parser";
LABEL_67:
    _os_log_impl(&dword_1830D4000, v11, v12, v13, buf, 0xCu);
    goto LABEL_68;
  }
  uint64_t v1 = *(void *)(a1 + 48);
  if (!v1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v29 = "nw_http1_on_url_complete";
    BOOL v10 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v26 = 0;
    if (!__nwlog_fault(v10, &type, &v26)) {
      goto LABEL_68;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v26)
      {
        uint64_t v11 = __nwlog_obj();
        os_log_type_t v12 = type;
        if (os_log_type_enabled(v11, type))
        {
          *(_DWORD *)buf = 136446210;
          __int16 v29 = "nw_http1_on_url_complete";
          int v13 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          goto LABEL_67;
        }
        goto LABEL_68;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      BOOL v23 = os_log_type_enabled(v11, type);
      if (!backtrace_string)
      {
        if (v23)
        {
          *(_DWORD *)buf = 136446210;
          __int16 v29 = "nw_http1_on_url_complete";
          int v13 = "%{public}s called with null http1_connection, no backtrace";
          goto LABEL_67;
        }
        goto LABEL_68;
      }
      if (!v23) {
        goto LABEL_50;
      }
      *(_DWORD *)buf = 136446466;
      __int16 v29 = "nw_http1_on_url_complete";
      __int16 v30 = 2082;
      __int16 v31 = backtrace_string;
      BOOL v22 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_49;
    }
    uint64_t v11 = __nwlog_obj();
    os_log_type_t v12 = type;
    if (!os_log_type_enabled(v11, type)) {
      goto LABEL_68;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v29 = "nw_http1_on_url_complete";
    int v13 = "%{public}s called with null http1_connection";
    goto LABEL_67;
  }
  uint64_t v2 = *(void *)(v1 + 488);
  if (!v2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v29 = "nw_http1_on_url_complete";
    BOOL v10 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v26 = 0;
    if (!__nwlog_fault(v10, &type, &v26)) {
      goto LABEL_68;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (!os_log_type_enabled(v11, type)) {
        goto LABEL_68;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v29 = "nw_http1_on_url_complete";
      int v13 = "%{public}s called with null http1_stream";
      goto LABEL_67;
    }
    if (!v26)
    {
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (os_log_type_enabled(v11, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v29 = "nw_http1_on_url_complete";
        int v13 = "%{public}s called with null http1_stream, backtrace limit exceeded";
        goto LABEL_67;
      }
      goto LABEL_68;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v11 = __nwlog_obj();
    os_log_type_t v12 = type;
    BOOL v24 = os_log_type_enabled(v11, type);
    if (!backtrace_string)
    {
      if (v24)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v29 = "nw_http1_on_url_complete";
        int v13 = "%{public}s called with null http1_stream, no backtrace";
        goto LABEL_67;
      }
      goto LABEL_68;
    }
    if (!v24) {
      goto LABEL_50;
    }
    *(_DWORD *)buf = 136446466;
    __int16 v29 = "nw_http1_on_url_complete";
    __int16 v30 = 2082;
    __int16 v31 = backtrace_string;
    BOOL v22 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
LABEL_49:
    _os_log_impl(&dword_1830D4000, v11, v12, v22, buf, 0x16u);
    goto LABEL_50;
  }
  uint64_t v3 = *(void **)(v2 + 400);
  if (v3)
  {
    if (*(_DWORD *)(v1 + 852))
    {
      if ((*(unsigned char *)(v1 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          int v14 = __nwlog_obj();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v15 = *(void *)(v1 + 488);
            int v16 = *(_DWORD *)(*(void *)(v1 + 480) + 372);
            int v17 = *(_DWORD *)(v1 + 860);
            if (v15) {
              LODWORD(v15) = *(_DWORD *)(v15 + 424);
            }
            int v18 = *(_DWORD *)(v1 + 852);
            uint64_t v19 = *(void *)(v1 + 824);
            *(_DWORD *)buf = 136448002;
            __int16 v29 = "nw_http1_on_url_complete";
            __int16 v30 = 2082;
            __int16 v31 = (char *)(v1 + 74);
            __int16 v32 = 2080;
            __int16 v33 = " ";
            __int16 v34 = 1024;
            int v35 = v16;
            __int16 v36 = 1024;
            int v37 = v17;
            __int16 v38 = 1024;
            int v39 = v15;
            __int16 v40 = 1040;
            int v41 = v18;
            __int16 v42 = 2080;
            uint64_t v43 = v19;
            _os_log_impl(&dword_1830D4000, v14, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> url complete:  %.*s", buf, 0x42u);
          }
        }
      }
    }
    id v4 = *(const char **)(v1 + 824);
    if (v4)
    {
      int64_t v5 = *(unsigned int *)(v1 + 852);
      id v6 = v3;
      int v7 = _nw_http_parsed_fields_add((uint64_t)v6, (unint64_t)":path", -1, v4, v5, 1);

      id v4 = (const char *)(v7 - 1);
      BOOL v8 = *(void **)(v1 + 824);
      if (v8)
      {
        free(v8);
        *(void *)(v1 + 824) = 0;
      }
    }
    *(_DWORD *)(v1 + 852) = 0;
    *(_WORD *)(v1 + 872) |= 1u;
    return (uint64_t)v4;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  __int16 v29 = "nw_http1_on_url_complete";
  BOOL v10 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v26 = 0;
  if (!__nwlog_fault(v10, &type, &v26)) {
    goto LABEL_68;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v26)
    {
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (os_log_type_enabled(v11, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v29 = "nw_http1_on_url_complete";
        int v13 = "%{public}s called with null parsed_fields, backtrace limit exceeded";
        goto LABEL_67;
      }
      goto LABEL_68;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v11 = __nwlog_obj();
    os_log_type_t v12 = type;
    BOOL v25 = os_log_type_enabled(v11, type);
    if (!backtrace_string)
    {
      if (v25)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v29 = "nw_http1_on_url_complete";
        int v13 = "%{public}s called with null parsed_fields, no backtrace";
        goto LABEL_67;
      }
      goto LABEL_68;
    }
    if (v25)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v29 = "nw_http1_on_url_complete";
      __int16 v30 = 2082;
      __int16 v31 = backtrace_string;
      BOOL v22 = "%{public}s called with null parsed_fields, dumping backtrace:%{public}s";
      goto LABEL_49;
    }
LABEL_50:
    free(backtrace_string);
    goto LABEL_68;
  }
  uint64_t v11 = __nwlog_obj();
  os_log_type_t v12 = type;
  if (os_log_type_enabled(v11, type))
  {
    *(_DWORD *)buf = 136446210;
    __int16 v29 = "nw_http1_on_url_complete";
    int v13 = "%{public}s called with null parsed_fields";
    goto LABEL_67;
  }
LABEL_68:
  if (v10) {
    free(v10);
  }
  return 0xFFFFFFFFLL;
}

uint64_t nw_http1_on_url(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_url";
    id v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v16 = 0;
    if (!__nwlog_fault(v6, &type, &v16)) {
      goto LABEL_58;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v16)
      {
        int v7 = __nwlog_obj();
        os_log_type_t v8 = type;
        if (os_log_type_enabled(v7, type))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v19 = "nw_http1_on_url";
          os_log_type_t v9 = "%{public}s called with null parser, backtrace limit exceeded";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v11 = os_log_type_enabled(v7, type);
      if (!backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v19 = "nw_http1_on_url";
          os_log_type_t v9 = "%{public}s called with null parser, no backtrace";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      if (!v11) {
        goto LABEL_40;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v19 = "nw_http1_on_url";
      __int16 v20 = 2082;
      BOOL v21 = backtrace_string;
      os_log_type_t v12 = "%{public}s called with null parser, dumping backtrace:%{public}s";
      goto LABEL_39;
    }
    int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    if (!os_log_type_enabled(v7, type)) {
      goto LABEL_58;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_url";
    os_log_type_t v9 = "%{public}s called with null parser";
LABEL_57:
    _os_log_impl(&dword_1830D4000, v7, v8, v9, buf, 0xCu);
    goto LABEL_58;
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if (!v3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_url";
    id v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v16 = 0;
    if (!__nwlog_fault(v6, &type, &v16)) {
      goto LABEL_58;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v16)
      {
        int v7 = __nwlog_obj();
        os_log_type_t v8 = type;
        if (os_log_type_enabled(v7, type))
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v19 = "nw_http1_on_url";
          os_log_type_t v9 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v13 = os_log_type_enabled(v7, type);
      if (!backtrace_string)
      {
        if (v13)
        {
          *(_DWORD *)buf = 136446210;
          uint64_t v19 = "nw_http1_on_url";
          os_log_type_t v9 = "%{public}s called with null http1_connection, no backtrace";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      if (!v13) {
        goto LABEL_40;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v19 = "nw_http1_on_url";
      __int16 v20 = 2082;
      BOOL v21 = backtrace_string;
      os_log_type_t v12 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_39;
    }
    int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    if (!os_log_type_enabled(v7, type)) {
      goto LABEL_58;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_url";
    os_log_type_t v9 = "%{public}s called with null http1_connection";
    goto LABEL_57;
  }
  uint64_t v4 = *(void *)(v3 + 488);
  if (!v4)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_url";
    id v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v16 = 0;
    if (!__nwlog_fault(v6, &type, &v16)) {
      goto LABEL_58;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_58;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v19 = "nw_http1_on_url";
      os_log_type_t v9 = "%{public}s called with null http1_stream";
      goto LABEL_57;
    }
    if (!v16)
    {
      int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = "nw_http1_on_url";
        os_log_type_t v9 = "%{public}s called with null http1_stream, backtrace limit exceeded";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    BOOL v14 = os_log_type_enabled(v7, type);
    if (!backtrace_string)
    {
      if (v14)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = "nw_http1_on_url";
        os_log_type_t v9 = "%{public}s called with null http1_stream, no backtrace";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    if (!v14) {
      goto LABEL_40;
    }
    *(_DWORD *)buf = 136446466;
    uint64_t v19 = "nw_http1_on_url";
    __int16 v20 = 2082;
    BOOL v21 = backtrace_string;
    os_log_type_t v12 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
LABEL_39:
    _os_log_impl(&dword_1830D4000, v7, v8, v12, buf, 0x16u);
    goto LABEL_40;
  }
  if (*(void *)(v4 + 400))
  {
    nw_http1_append_bytes((char **)(v3 + 824), (unsigned int *)(v3 + 852), a2, a3);
    return 0;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  uint64_t v19 = "nw_http1_on_url";
  id v6 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v16 = 0;
  if (!__nwlog_fault(v6, &type, &v16)) {
    goto LABEL_58;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v16)
    {
      int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = "nw_http1_on_url";
        os_log_type_t v9 = "%{public}s called with null parsed_fields, backtrace limit exceeded";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    BOOL v15 = os_log_type_enabled(v7, type);
    if (!backtrace_string)
    {
      if (v15)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v19 = "nw_http1_on_url";
        os_log_type_t v9 = "%{public}s called with null parsed_fields, no backtrace";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    if (v15)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v19 = "nw_http1_on_url";
      __int16 v20 = 2082;
      BOOL v21 = backtrace_string;
      os_log_type_t v12 = "%{public}s called with null parsed_fields, dumping backtrace:%{public}s";
      goto LABEL_39;
    }
LABEL_40:
    free(backtrace_string);
    goto LABEL_58;
  }
  int v7 = __nwlog_obj();
  os_log_type_t v8 = type;
  if (os_log_type_enabled(v7, type))
  {
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "nw_http1_on_url";
    os_log_type_t v9 = "%{public}s called with null parsed_fields";
    goto LABEL_57;
  }
LABEL_58:
  if (v6) {
    free(v6);
  }
  return 0xFFFFFFFFLL;
}

uint64_t nw_http1_on_method_complete(uint64_t a1)
{
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v33 = "nw_http1_on_method_complete";
    BOOL v13 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v30 = 0;
    if (!__nwlog_fault(v13, &type, &v30)) {
      goto LABEL_75;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v14 = __nwlog_obj();
      os_log_type_t v15 = type;
      if (!os_log_type_enabled(v14, type)) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v33 = "nw_http1_on_method_complete";
      char v16 = "%{public}s called with null parser";
    }
    else if (v30)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      BOOL v14 = __nwlog_obj();
      os_log_type_t v15 = type;
      BOOL v24 = os_log_type_enabled(v14, type);
      if (backtrace_string)
      {
        if (v24)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v33 = "nw_http1_on_method_complete";
          __int16 v34 = 2082;
          int v35 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v14, v15, "%{public}s called with null parser, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_75:
        if (!v13) {
          return 0xFFFFFFFFLL;
        }
LABEL_76:
        free(v13);
        return 0xFFFFFFFFLL;
      }
      if (!v24) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v33 = "nw_http1_on_method_complete";
      char v16 = "%{public}s called with null parser, no backtrace";
    }
    else
    {
      BOOL v14 = __nwlog_obj();
      os_log_type_t v15 = type;
      if (!os_log_type_enabled(v14, type)) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v33 = "nw_http1_on_method_complete";
      char v16 = "%{public}s called with null parser, backtrace limit exceeded";
    }
    goto LABEL_74;
  }
  uint64_t v1 = *(void *)(a1 + 48);
  if (!v1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v33 = "nw_http1_on_method_complete";
    BOOL v13 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v30 = 0;
    if (!__nwlog_fault(v13, &type, &v30)) {
      goto LABEL_75;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v30)
      {
        BOOL v14 = __nwlog_obj();
        os_log_type_t v15 = type;
        if (!os_log_type_enabled(v14, type)) {
          goto LABEL_75;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v33 = "nw_http1_on_method_complete";
        char v16 = "%{public}s called with null http1_connection, backtrace limit exceeded";
        goto LABEL_74;
      }
      BOOL v25 = (char *)__nw_create_backtrace_string();
      BOOL v14 = __nwlog_obj();
      os_log_type_t v15 = type;
      BOOL v26 = os_log_type_enabled(v14, type);
      if (!v25)
      {
        if (!v26) {
          goto LABEL_75;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v33 = "nw_http1_on_method_complete";
        char v16 = "%{public}s called with null http1_connection, no backtrace";
        goto LABEL_74;
      }
      if (!v26) {
        goto LABEL_56;
      }
      *(_DWORD *)buf = 136446466;
      __int16 v33 = "nw_http1_on_method_complete";
      __int16 v34 = 2082;
      int v35 = v25;
      __int16 v27 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_55;
    }
    BOOL v14 = __nwlog_obj();
    os_log_type_t v15 = type;
    if (!os_log_type_enabled(v14, type)) {
      goto LABEL_75;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v33 = "nw_http1_on_method_complete";
    char v16 = "%{public}s called with null http1_connection";
LABEL_74:
    _os_log_impl(&dword_1830D4000, v14, v15, v16, buf, 0xCu);
    goto LABEL_75;
  }
  uint64_t v2 = *(void *)(v1 + 488);
  if (!v2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v33 = "nw_http1_on_method_complete";
    BOOL v13 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v30 = 0;
    if (!__nwlog_fault(v13, &type, &v30)) {
      goto LABEL_75;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v14 = __nwlog_obj();
      os_log_type_t v15 = type;
      if (!os_log_type_enabled(v14, type)) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v33 = "nw_http1_on_method_complete";
      char v16 = "%{public}s called with null http1_stream";
      goto LABEL_74;
    }
    if (!v30)
    {
      BOOL v14 = __nwlog_obj();
      os_log_type_t v15 = type;
      if (!os_log_type_enabled(v14, type)) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v33 = "nw_http1_on_method_complete";
      char v16 = "%{public}s called with null http1_stream, backtrace limit exceeded";
      goto LABEL_74;
    }
    BOOL v25 = (char *)__nw_create_backtrace_string();
    BOOL v14 = __nwlog_obj();
    os_log_type_t v15 = type;
    BOOL v28 = os_log_type_enabled(v14, type);
    if (!v25)
    {
      if (!v28) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v33 = "nw_http1_on_method_complete";
      char v16 = "%{public}s called with null http1_stream, no backtrace";
      goto LABEL_74;
    }
    if (!v28) {
      goto LABEL_56;
    }
    *(_DWORD *)buf = 136446466;
    __int16 v33 = "nw_http1_on_method_complete";
    __int16 v34 = 2082;
    int v35 = v25;
    __int16 v27 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
LABEL_55:
    _os_log_impl(&dword_1830D4000, v14, v15, v27, buf, 0x16u);
    goto LABEL_56;
  }
  uint64_t v3 = *(void **)(v2 + 400);
  if (!v3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v33 = "nw_http1_on_method_complete";
    BOOL v13 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v30 = 0;
    if (!__nwlog_fault(v13, &type, &v30)) {
      goto LABEL_75;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v14 = __nwlog_obj();
      os_log_type_t v15 = type;
      if (!os_log_type_enabled(v14, type)) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v33 = "nw_http1_on_method_complete";
      char v16 = "%{public}s called with null parsed_fields";
      goto LABEL_74;
    }
    if (!v30)
    {
      BOOL v14 = __nwlog_obj();
      os_log_type_t v15 = type;
      if (!os_log_type_enabled(v14, type)) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v33 = "nw_http1_on_method_complete";
      char v16 = "%{public}s called with null parsed_fields, backtrace limit exceeded";
      goto LABEL_74;
    }
    BOOL v25 = (char *)__nw_create_backtrace_string();
    BOOL v14 = __nwlog_obj();
    os_log_type_t v15 = type;
    BOOL v29 = os_log_type_enabled(v14, type);
    if (!v25)
    {
      if (!v29) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v33 = "nw_http1_on_method_complete";
      char v16 = "%{public}s called with null parsed_fields, no backtrace";
      goto LABEL_74;
    }
    if (v29)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v33 = "nw_http1_on_method_complete";
      __int16 v34 = 2082;
      int v35 = v25;
      __int16 v27 = "%{public}s called with null parsed_fields, dumping backtrace:%{public}s";
      goto LABEL_55;
    }
LABEL_56:
    free(v25);
    if (!v13) {
      return 0xFFFFFFFFLL;
    }
    goto LABEL_76;
  }
  if (*(_DWORD *)(v1 + 852))
  {
    if ((*(unsigned char *)(v1 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        int v17 = __nwlog_obj();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v18 = *(void *)(v1 + 488);
          int v19 = *(_DWORD *)(*(void *)(v1 + 480) + 372);
          int v20 = *(_DWORD *)(v1 + 860);
          if (v18) {
            LODWORD(v18) = *(_DWORD *)(v18 + 424);
          }
          int v21 = *(_DWORD *)(v1 + 852);
          uint64_t v22 = *(void *)(v1 + 824);
          *(_DWORD *)buf = 136448002;
          __int16 v33 = "nw_http1_on_method_complete";
          __int16 v34 = 2082;
          int v35 = (char *)(v1 + 74);
          __int16 v36 = 2080;
          int v37 = " ";
          __int16 v38 = 1024;
          int v39 = v19;
          __int16 v40 = 1024;
          int v41 = v20;
          __int16 v42 = 1024;
          int v43 = v18;
          __int16 v44 = 1040;
          int v45 = v21;
          __int16 v46 = 2080;
          uint64_t v47 = v22;
          _os_log_impl(&dword_1830D4000, v17, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> url complete:  %.*s", buf, 0x42u);
        }
      }
    }
  }
  uint64_t v4 = *(const char **)(v1 + 816);
  if (!v4)
  {
    *(_DWORD *)(v1 + 848) = 0;
    goto LABEL_14;
  }
  int64_t v5 = *(unsigned int *)(v1 + 848);
  id v6 = v3;
  int v7 = _nw_http_parsed_fields_add((uint64_t)v6, (unint64_t)":method", -1, v4, v5, 1);

  os_log_type_t v8 = *(void **)(v1 + 816);
  if (!v8)
  {
    *(_DWORD *)(v1 + 848) = 0;
    if (v7) {
      goto LABEL_14;
    }
    return 0xFFFFFFFFLL;
  }
  free(v8);
  *(void *)(v1 + 816) = 0;
  *(_DWORD *)(v1 + 848) = 0;
  if ((v7 & 1) == 0) {
    return 0xFFFFFFFFLL;
  }
LABEL_14:
  if ((*(unsigned char *)(*(void *)(v1 + 480) + 376) & 2) != 0) {
    os_log_type_t v9 = "https";
  }
  else {
    os_log_type_t v9 = "http";
  }
  id v10 = v3;
  int v11 = _nw_http_parsed_fields_add((uint64_t)v10, (unint64_t)":scheme", -1, v9, -1, 1);

  return (v11 - 1);
}

uint64_t nw_http1_on_method(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v19 = "nw_http1_on_method";
    id v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v16 = 0;
    if (!__nwlog_fault(v6, &type, &v16)) {
      goto LABEL_58;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v16)
      {
        int v7 = __nwlog_obj();
        os_log_type_t v8 = type;
        if (os_log_type_enabled(v7, type))
        {
          *(_DWORD *)buf = 136446210;
          int v19 = "nw_http1_on_method";
          os_log_type_t v9 = "%{public}s called with null parser, backtrace limit exceeded";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v11 = os_log_type_enabled(v7, type);
      if (!backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446210;
          int v19 = "nw_http1_on_method";
          os_log_type_t v9 = "%{public}s called with null parser, no backtrace";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      if (!v11) {
        goto LABEL_40;
      }
      *(_DWORD *)buf = 136446466;
      int v19 = "nw_http1_on_method";
      __int16 v20 = 2082;
      int v21 = backtrace_string;
      os_log_type_t v12 = "%{public}s called with null parser, dumping backtrace:%{public}s";
      goto LABEL_39;
    }
    int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    if (!os_log_type_enabled(v7, type)) {
      goto LABEL_58;
    }
    *(_DWORD *)buf = 136446210;
    int v19 = "nw_http1_on_method";
    os_log_type_t v9 = "%{public}s called with null parser";
LABEL_57:
    _os_log_impl(&dword_1830D4000, v7, v8, v9, buf, 0xCu);
    goto LABEL_58;
  }
  uint64_t v3 = *(void *)(a1 + 48);
  if (!v3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v19 = "nw_http1_on_method";
    id v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v16 = 0;
    if (!__nwlog_fault(v6, &type, &v16)) {
      goto LABEL_58;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v16)
      {
        int v7 = __nwlog_obj();
        os_log_type_t v8 = type;
        if (os_log_type_enabled(v7, type))
        {
          *(_DWORD *)buf = 136446210;
          int v19 = "nw_http1_on_method";
          os_log_type_t v9 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v13 = os_log_type_enabled(v7, type);
      if (!backtrace_string)
      {
        if (v13)
        {
          *(_DWORD *)buf = 136446210;
          int v19 = "nw_http1_on_method";
          os_log_type_t v9 = "%{public}s called with null http1_connection, no backtrace";
          goto LABEL_57;
        }
        goto LABEL_58;
      }
      if (!v13) {
        goto LABEL_40;
      }
      *(_DWORD *)buf = 136446466;
      int v19 = "nw_http1_on_method";
      __int16 v20 = 2082;
      int v21 = backtrace_string;
      os_log_type_t v12 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_39;
    }
    int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    if (!os_log_type_enabled(v7, type)) {
      goto LABEL_58;
    }
    *(_DWORD *)buf = 136446210;
    int v19 = "nw_http1_on_method";
    os_log_type_t v9 = "%{public}s called with null http1_connection";
    goto LABEL_57;
  }
  uint64_t v4 = *(void *)(v3 + 488);
  if (!v4)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v19 = "nw_http1_on_method";
    id v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v16 = 0;
    if (!__nwlog_fault(v6, &type, &v16)) {
      goto LABEL_58;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_58;
      }
      *(_DWORD *)buf = 136446210;
      int v19 = "nw_http1_on_method";
      os_log_type_t v9 = "%{public}s called with null http1_stream";
      goto LABEL_57;
    }
    if (!v16)
    {
      int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        int v19 = "nw_http1_on_method";
        os_log_type_t v9 = "%{public}s called with null http1_stream, backtrace limit exceeded";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    BOOL v14 = os_log_type_enabled(v7, type);
    if (!backtrace_string)
    {
      if (v14)
      {
        *(_DWORD *)buf = 136446210;
        int v19 = "nw_http1_on_method";
        os_log_type_t v9 = "%{public}s called with null http1_stream, no backtrace";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    if (!v14) {
      goto LABEL_40;
    }
    *(_DWORD *)buf = 136446466;
    int v19 = "nw_http1_on_method";
    __int16 v20 = 2082;
    int v21 = backtrace_string;
    os_log_type_t v12 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
LABEL_39:
    _os_log_impl(&dword_1830D4000, v7, v8, v12, buf, 0x16u);
    goto LABEL_40;
  }
  if (*(void *)(v4 + 400))
  {
    nw_http1_append_bytes((char **)(v3 + 816), (unsigned int *)(v3 + 848), a2, a3);
    return 0;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  int v19 = "nw_http1_on_method";
  id v6 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v16 = 0;
  if (!__nwlog_fault(v6, &type, &v16)) {
    goto LABEL_58;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v16)
    {
      int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (os_log_type_enabled(v7, type))
      {
        *(_DWORD *)buf = 136446210;
        int v19 = "nw_http1_on_method";
        os_log_type_t v9 = "%{public}s called with null parsed_fields, backtrace limit exceeded";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    BOOL v15 = os_log_type_enabled(v7, type);
    if (!backtrace_string)
    {
      if (v15)
      {
        *(_DWORD *)buf = 136446210;
        int v19 = "nw_http1_on_method";
        os_log_type_t v9 = "%{public}s called with null parsed_fields, no backtrace";
        goto LABEL_57;
      }
      goto LABEL_58;
    }
    if (v15)
    {
      *(_DWORD *)buf = 136446466;
      int v19 = "nw_http1_on_method";
      __int16 v20 = 2082;
      int v21 = backtrace_string;
      os_log_type_t v12 = "%{public}s called with null parsed_fields, dumping backtrace:%{public}s";
      goto LABEL_39;
    }
LABEL_40:
    free(backtrace_string);
    goto LABEL_58;
  }
  int v7 = __nwlog_obj();
  os_log_type_t v8 = type;
  if (os_log_type_enabled(v7, type))
  {
    *(_DWORD *)buf = 136446210;
    int v19 = "nw_http1_on_method";
    os_log_type_t v9 = "%{public}s called with null parsed_fields";
    goto LABEL_57;
  }
LABEL_58:
  if (v6) {
    free(v6);
  }
  return 0xFFFFFFFFLL;
}

uint64_t nw_http1_on_reset(uint64_t a1)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v1 = *(void *)(a1 + 48);
    if (v1)
    {
      if ((*(unsigned char *)(v1 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          os_log_type_t v12 = __nwlog_obj();
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v13 = *(void *)(v1 + 488);
            int v14 = *(_DWORD *)(*(void *)(v1 + 480) + 372);
            int v15 = *(_DWORD *)(v1 + 860);
            if (v13) {
              LODWORD(v13) = *(_DWORD *)(v13 + 424);
            }
            *(_DWORD *)buf = 136447490;
            BOOL v23 = "nw_http1_on_reset";
            __int16 v24 = 2082;
            BOOL v25 = (char *)(v1 + 74);
            __int16 v26 = 2080;
            __int16 v27 = " ";
            __int16 v28 = 1024;
            int v29 = v14;
            __int16 v30 = 1024;
            int v31 = v15;
            __int16 v32 = 1024;
            int v33 = v13;
            _os_log_impl(&dword_1830D4000, v12, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> parser sees more data after message_complete, pausing", buf, 0x32u);
          }
        }
      }
      if (*(unsigned char *)(*(void *)(v1 + 480) + 376))
      {
        int v6 = *(unsigned __int16 *)(v1 + 872) | (*(unsigned __int8 *)(v1 + 874) << 16);
      }
      else
      {
        if ((*(unsigned char *)(v1 + 158) & 1) == 0)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v2 = gLogObj;
          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
          {
            uint64_t v3 = *(void *)(v1 + 488);
            int v4 = *(_DWORD *)(*(void *)(v1 + 480) + 372);
            int v5 = *(_DWORD *)(v1 + 860);
            if (v3) {
              LODWORD(v3) = *(_DWORD *)(v3 + 424);
            }
            *(_DWORD *)buf = 136447490;
            BOOL v23 = "nw_http1_on_reset";
            __int16 v24 = 2082;
            BOOL v25 = (char *)(v1 + 74);
            __int16 v26 = 2080;
            __int16 v27 = " ";
            __int16 v28 = 1024;
            int v29 = v4;
            __int16 v30 = 1024;
            int v31 = v5;
            __int16 v32 = 1024;
            int v33 = v3;
            _os_log_impl(&dword_1830D4000, v2, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> extra bytes after a complete response, not allowing reuse", buf, 0x32u);
          }
        }
        int v6 = *(_WORD *)(v1 + 872) & 0xFFF7 | (*(unsigned __int8 *)(v1 + 874) << 16);
      }
      *(unsigned char *)(v1 + 874) = BYTE2(v6);
      *(_WORD *)(v1 + 872) = v6 | 0x10;
      return 21;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v23 = "nw_http1_on_reset";
    os_log_type_t v8 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v20 = 0;
    if (!__nwlog_fault(v8, &type, &v20)) {
      goto LABEL_46;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (os_log_type_enabled(v9, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v23 = "nw_http1_on_reset";
        BOOL v11 = "%{public}s called with null http1_connection";
        goto LABEL_45;
      }
      goto LABEL_46;
    }
    if (!v20)
    {
      os_log_type_t v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (os_log_type_enabled(v9, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v23 = "nw_http1_on_reset";
        BOOL v11 = "%{public}s called with null http1_connection, backtrace limit exceeded";
        goto LABEL_45;
      }
      goto LABEL_46;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    os_log_type_t v9 = __nwlog_obj();
    os_log_type_t v10 = type;
    BOOL v19 = os_log_type_enabled(v9, type);
    if (!backtrace_string)
    {
      if (v19)
      {
        *(_DWORD *)buf = 136446210;
        BOOL v23 = "nw_http1_on_reset";
        BOOL v11 = "%{public}s called with null http1_connection, no backtrace";
        goto LABEL_45;
      }
      goto LABEL_46;
    }
    if (v19)
    {
      *(_DWORD *)buf = 136446466;
      BOOL v23 = "nw_http1_on_reset";
      __int16 v24 = 2082;
      BOOL v25 = backtrace_string;
      uint64_t v18 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_35;
    }
    goto LABEL_36;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  BOOL v23 = "nw_http1_on_reset";
  os_log_type_t v8 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v20 = 0;
  if (!__nwlog_fault(v8, &type, &v20)) {
    goto LABEL_46;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v20)
    {
      os_log_type_t v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (os_log_type_enabled(v9, type))
      {
        *(_DWORD *)buf = 136446210;
        BOOL v23 = "nw_http1_on_reset";
        BOOL v11 = "%{public}s called with null parser, backtrace limit exceeded";
        goto LABEL_45;
      }
      goto LABEL_46;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    os_log_type_t v9 = __nwlog_obj();
    os_log_type_t v10 = type;
    BOOL v17 = os_log_type_enabled(v9, type);
    if (!backtrace_string)
    {
      if (v17)
      {
        *(_DWORD *)buf = 136446210;
        BOOL v23 = "nw_http1_on_reset";
        BOOL v11 = "%{public}s called with null parser, no backtrace";
        goto LABEL_45;
      }
      goto LABEL_46;
    }
    if (v17)
    {
      *(_DWORD *)buf = 136446466;
      BOOL v23 = "nw_http1_on_reset";
      __int16 v24 = 2082;
      BOOL v25 = backtrace_string;
      uint64_t v18 = "%{public}s called with null parser, dumping backtrace:%{public}s";
LABEL_35:
      _os_log_impl(&dword_1830D4000, v9, v10, v18, buf, 0x16u);
    }
LABEL_36:
    free(backtrace_string);
    goto LABEL_46;
  }
  os_log_type_t v9 = __nwlog_obj();
  os_log_type_t v10 = type;
  if (os_log_type_enabled(v9, type))
  {
    *(_DWORD *)buf = 136446210;
    BOOL v23 = "nw_http1_on_reset";
    BOOL v11 = "%{public}s called with null parser";
LABEL_45:
    _os_log_impl(&dword_1830D4000, v9, v10, v11, buf, 0xCu);
  }
LABEL_46:
  if (v8) {
    free(v8);
  }
  return 0xFFFFFFFFLL;
}

uint64_t nw_http1_on_message_begin(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v13 = "nw_http1_on_message_begin";
    uint64_t v2 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v10 = 0;
    if (!__nwlog_fault(v2, &type, &v10)) {
      goto LABEL_32;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      if (!os_log_type_enabled(v3, type)) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v13 = "nw_http1_on_message_begin";
      int v5 = "%{public}s called with null parser";
    }
    else
    {
      if (!v10)
      {
        uint64_t v3 = __nwlog_obj();
        os_log_type_t v4 = type;
        if (!os_log_type_enabled(v3, type)) {
          goto LABEL_32;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v13 = "nw_http1_on_message_begin";
        int v5 = "%{public}s called with null parser, backtrace limit exceeded";
        goto LABEL_31;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      BOOL v7 = os_log_type_enabled(v3, type);
      if (backtrace_string)
      {
        if (v7)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v13 = "nw_http1_on_message_begin";
          __int16 v14 = 2082;
          int v15 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v3, v4, "%{public}s called with null parser, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        if (!v2) {
          return 0xFFFFFFFFLL;
        }
        goto LABEL_33;
      }
      if (!v7) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v13 = "nw_http1_on_message_begin";
      int v5 = "%{public}s called with null parser, no backtrace";
    }
LABEL_31:
    _os_log_impl(&dword_1830D4000, v3, v4, v5, buf, 0xCu);
    goto LABEL_32;
  }
  if (*(void *)(a1 + 48)) {
    return 0;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  uint64_t v13 = "nw_http1_on_message_begin";
  uint64_t v2 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v10 = 0;
  if (__nwlog_fault(v2, &type, &v10))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      if (!os_log_type_enabled(v3, type)) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v13 = "nw_http1_on_message_begin";
      int v5 = "%{public}s called with null http1_connection";
      goto LABEL_31;
    }
    if (!v10)
    {
      uint64_t v3 = __nwlog_obj();
      os_log_type_t v4 = type;
      if (!os_log_type_enabled(v3, type)) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v13 = "nw_http1_on_message_begin";
      int v5 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      goto LABEL_31;
    }
    os_log_type_t v8 = (char *)__nw_create_backtrace_string();
    uint64_t v3 = __nwlog_obj();
    os_log_type_t v4 = type;
    BOOL v9 = os_log_type_enabled(v3, type);
    if (!v8)
    {
      if (!v9) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v13 = "nw_http1_on_message_begin";
      int v5 = "%{public}s called with null http1_connection, no backtrace";
      goto LABEL_31;
    }
    if (v9)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v13 = "nw_http1_on_message_begin";
      __int16 v14 = 2082;
      int v15 = v8;
      _os_log_impl(&dword_1830D4000, v3, v4, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v8);
  }
LABEL_32:
  if (v2) {
LABEL_33:
  }
    free(v2);
  return 0xFFFFFFFFLL;
}

double __nw_protocol_http1_identifier_block_invoke()
{
  strcpy((char *)&nw_protocol_http1_identifier::http1_protocol_identifier, "http1");
  *(void *)&double result = 0x200000004;
  qword_1E8F6B688 = 0x200000004;
  return result;
}

void ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    os_log_type_t v4 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = v5 + 74;
      uint64_t v7 = *(void *)(v5 + 256);
      int v8 = *(_DWORD *)(*(void *)(v5 + 248) + 372);
      if (v7) {
        LODWORD(v7) = *(_DWORD *)(v7 + 860);
      }
      int v9 = *(_DWORD *)(v5 + 424);
      int v10 = 136447746;
      BOOL v11 = "nw_http1_match_idle_connection_with_pending_stream_block_invoke_2";
      __int16 v12 = 2082;
      uint64_t v13 = v6;
      __int16 v14 = 2080;
      int v15 = " ";
      __int16 v16 = 1024;
      int v17 = v8;
      __int16 v18 = 1024;
      int v19 = v7;
      __int16 v20 = 1024;
      int v21 = v9;
      __int16 v22 = 2082;
      uint64_t v23 = a2;
      _os_log_impl(&dword_1830D4000, v4, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> sending request header {method=\"%{public}s\"}", (uint8_t *)&v10, 0x3Cu);
    }
  }
}

void ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke_49(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    os_log_type_t v4 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = v5 + 74;
      uint64_t v7 = *(void *)(v5 + 256);
      int v8 = *(_DWORD *)(*(void *)(v5 + 248) + 372);
      if (v7) {
        LODWORD(v7) = *(_DWORD *)(v7 + 860);
      }
      int v9 = *(_DWORD *)(v5 + 424);
      int v10 = 136447746;
      BOOL v11 = "nw_http1_match_idle_connection_with_pending_stream_block_invoke";
      __int16 v12 = 2082;
      uint64_t v13 = v6;
      __int16 v14 = 2080;
      int v15 = " ";
      __int16 v16 = 1024;
      int v17 = v8;
      __int16 v18 = 1024;
      int v19 = v7;
      __int16 v20 = 1024;
      int v21 = v9;
      __int16 v22 = 2082;
      uint64_t v23 = a2;
      _os_log_impl(&dword_1830D4000, v4, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> receiving request header {method=\"%{public}s\"}", (uint8_t *)&v10, 0x3Cu);
    }
  }
}

void ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke_51(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v75 = *MEMORY[0x1E4F143B8];
  int start_reason = nw_http_transaction_metadata_get_start_reason(*(void **)(a1 + 32));
  uint64_t start_time = nw_http_transaction_metadata_get_start_time(*(void **)(a1 + 32));
  uint64_t end_time = nw_http_transaction_metadata_get_end_time(*(void **)(a1 + 32));
  outbound_message_uint64_t start_time = nw_http_transaction_metadata_get_outbound_message_start_time(*(void **)(a1 + 32));
  outbound_message_uint64_t end_time = nw_http_transaction_metadata_get_outbound_message_end_time(*(void **)(a1 + 32));
  inbound_message_uint64_t start_time = nw_http_transaction_metadata_get_inbound_message_start_time(*(void **)(a1 + 32));
  inbound_message_uint64_t end_time = nw_http_transaction_metadata_get_inbound_message_end_time(*(void **)(a1 + 32));
  uint64_t outbound_body_size = nw_http_transaction_metadata_get_outbound_body_size(*(void **)(a1 + 32));
  uint64_t inbound_body_size = nw_http_transaction_metadata_get_inbound_body_size(*(void **)(a1 + 32));
  if ((*(unsigned char *)(*(void *)(a1 + 40) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    __int16 v12 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_DEFAULT))
    {
      int v39 = a3;
      uint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = *(void *)(v13 + 256);
      if (v14) {
        int v34 = *(_DWORD *)(v14 + 860);
      }
      else {
        int v34 = 0;
      }
      uint64_t v15 = inbound_message_end_time;
      if ((start_reason - 1) > 2) {
        __int16 v16 = "initial";
      }
      else {
        __int16 v16 = off_1E52492C0[start_reason - 1];
      }
      int v35 = v16;
      int v37 = *(_DWORD *)(*(void *)(v13 + 248) + 372);
      int v17 = *(_DWORD *)(v13 + 424);
      int v18 = -1;
      if (start_time && end_time)
      {
        unint64_t v19 = nw_delta_nanos(start_time, end_time);
        uint64_t v15 = inbound_message_end_time;
        if (v19 > 0xF423FFFFFFFFFLL) {
          int v18 = -1;
        }
        else {
          int v18 = v19 / 0xF4240;
        }
      }
      LODWORD(v20) = -1;
      int v38 = v17;
      if (start_time)
      {
        if (outbound_message_start_time)
        {
          unint64_t v21 = nw_delta_nanos(start_time, outbound_message_start_time);
          uint64_t v15 = inbound_message_end_time;
          unint64_t v20 = v21 / 0xF4240;
          if (v21 > 0xF423FFFFFFFFFLL) {
            LODWORD(v20) = -1;
          }
        }
      }
      int v22 = -1;
      int v36 = v20;
      if (outbound_message_start_time && outbound_message_end_time)
      {
        unint64_t v23 = nw_delta_nanos(outbound_message_start_time, outbound_message_end_time);
        uint64_t v15 = inbound_message_end_time;
        if (v23 > 0xF423FFFFFFFFFLL) {
          int v22 = -1;
        }
        else {
          int v22 = v23 / 0xF4240;
        }
      }
      int v24 = v18;
      uint64_t v25 = v13 + 74;
      int v26 = -1;
      if (start_time)
      {
        uint64_t v28 = outbound_body_size;
        uint64_t v27 = inbound_body_size;
        if (inbound_message_start_time)
        {
          unint64_t v29 = nw_delta_nanos(start_time, inbound_message_start_time);
          uint64_t v15 = inbound_message_end_time;
          if (v29 > 0xF423FFFFFFFFFLL) {
            int v26 = -1;
          }
          else {
            int v26 = v29 / 0xF4240;
          }
        }
        LODWORD(v30) = -1;
        if (inbound_message_start_time) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v28 = outbound_body_size;
        uint64_t v27 = inbound_body_size;
        LODWORD(v30) = -1;
        if (inbound_message_start_time)
        {
LABEL_31:
          uint64_t v31 = a2;
          int v32 = v34;
          if (v15)
          {
            unint64_t v33 = nw_delta_nanos(inbound_message_start_time, v15);
            unint64_t v30 = v33 / 0xF4240;
            if (v33 > 0xF423FFFFFFFFFLL) {
              LODWORD(v30) = -1;
            }
          }
          goto LABEL_36;
        }
      }
      uint64_t v31 = a2;
      int v32 = v34;
LABEL_36:
      *(_DWORD *)buf = 136450050;
      __int16 v44 = "nw_http1_match_idle_connection_with_pending_stream_block_invoke";
      __int16 v45 = 2082;
      uint64_t v46 = v25;
      __int16 v47 = 2080;
      uint64_t v48 = " ";
      __int16 v49 = 1024;
      int v50 = v37;
      __int16 v51 = 1024;
      int v52 = v32;
      __int16 v53 = 1024;
      int v54 = v38;
      __int16 v55 = 2080;
      __int16 v56 = v35;
      __int16 v57 = 1024;
      int v58 = v24;
      __int16 v59 = 2082;
      uint64_t v60 = v31;
      __int16 v61 = 1024;
      int v62 = v39;
      __int16 v63 = 1024;
      int v64 = v36;
      __int16 v65 = 1024;
      int v66 = v22;
      __int16 v67 = 1024;
      int v68 = v26;
      __int16 v69 = 1024;
      int v70 = v30;
      __int16 v71 = 2048;
      uint64_t v72 = v28;
      __int16 v73 = 2048;
      uint64_t v74 = v27;
      _os_log_impl(&dword_1830D4000, v12, OS_LOG_TYPE_DEFAULT, "%{public}s %{public}s%s<i%u:c%u:s%u> transaction summary {start_reason=\"%s\", duration_ms=%d, request_method=\"%{public}s\", response_status=%hu, outbound_start_ms=%d, outbound_duration_ms=%d, inbound_start_ms=%d, inbound_duration_ms=%d, outbound_body_bytes=%llu, inbound_body_bytes=%llu}", buf, 0x7Eu);
    }
  }
}

uint64_t ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke_53(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2, *(unsigned __int16 *)(a1 + 40));
}

void nw_protocol_http1_stream_get_message_properties(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v32 = "nw_http1_get_http1_protocol";
    int v8 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v29 = 0;
    if (!__nwlog_fault(v8, &type, &v29)) {
      goto LABEL_66;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (!os_log_type_enabled(v9, type)) {
        goto LABEL_66;
      }
      *(_DWORD *)buf = 136446210;
      int v32 = "nw_http1_get_http1_protocol";
      BOOL v11 = "%{public}s called with null protocol";
    }
    else if (v29)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      BOOL v13 = os_log_type_enabled(v9, type);
      if (backtrace_string)
      {
        if (v13)
        {
          *(_DWORD *)buf = 136446466;
          int v32 = "nw_http1_get_http1_protocol";
          __int16 v33 = 2082;
          int v34 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v9, v10, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_66:
        if (!v8) {
          goto LABEL_68;
        }
        goto LABEL_67;
      }
      if (!v13) {
        goto LABEL_66;
      }
      *(_DWORD *)buf = 136446210;
      int v32 = "nw_http1_get_http1_protocol";
      BOOL v11 = "%{public}s called with null protocol, no backtrace";
    }
    else
    {
      int v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (!os_log_type_enabled(v9, type)) {
        goto LABEL_66;
      }
      *(_DWORD *)buf = 136446210;
      int v32 = "nw_http1_get_http1_protocol";
      BOOL v11 = "%{public}s called with null protocol, backtrace limit exceeded";
    }
    goto LABEL_65;
  }
  uint64_t v3 = *(void *)(a1 + 40);
  if (!v3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v32 = "nw_http1_get_http1_protocol";
    int v8 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v29 = 0;
    if (!__nwlog_fault(v8, &type, &v29)) {
      goto LABEL_66;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v29)
      {
        int v9 = __nwlog_obj();
        os_log_type_t v10 = type;
        if (!os_log_type_enabled(v9, type)) {
          goto LABEL_66;
        }
        *(_DWORD *)buf = 136446210;
        int v32 = "nw_http1_get_http1_protocol";
        BOOL v11 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_65;
      }
      uint64_t v14 = (char *)__nw_create_backtrace_string();
      int v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      BOOL v15 = os_log_type_enabled(v9, type);
      if (!v14)
      {
        if (!v15) {
          goto LABEL_66;
        }
        *(_DWORD *)buf = 136446210;
        int v32 = "nw_http1_get_http1_protocol";
        BOOL v11 = "%{public}s called with null handle, no backtrace";
        goto LABEL_65;
      }
      if (v15)
      {
        *(_DWORD *)buf = 136446466;
        int v32 = "nw_http1_get_http1_protocol";
        __int16 v33 = 2082;
        int v34 = v14;
        __int16 v16 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_50:
        _os_log_impl(&dword_1830D4000, v9, v10, v16, buf, 0x16u);
      }
LABEL_51:
      free(v14);
      if (!v8) {
        goto LABEL_68;
      }
LABEL_67:
      free(v8);
      goto LABEL_68;
    }
    int v9 = __nwlog_obj();
    os_log_type_t v10 = type;
    if (!os_log_type_enabled(v9, type)) {
      goto LABEL_66;
    }
    *(_DWORD *)buf = 136446210;
    int v32 = "nw_http1_get_http1_protocol";
    BOOL v11 = "%{public}s called with null handle";
LABEL_65:
    _os_log_impl(&dword_1830D4000, v9, v10, v11, buf, 0xCu);
    goto LABEL_66;
  }
  int v4 = *(_DWORD *)(v3 + 24);
  if (v4 == 1) {
    goto LABEL_10;
  }
  if (v4 != 2)
  {
    if (v4 != 3) {
      goto LABEL_68;
    }
    uint64_t v5 = *(void *)(v3 + 16);
    if (v5)
    {
      uint64_t v3 = v5 + 480;
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v32 = "nw_http1_get_http1_protocol";
    int v8 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v29 = 0;
    if (!__nwlog_fault(v8, &type, &v29)) {
      goto LABEL_66;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (!os_log_type_enabled(v9, type)) {
        goto LABEL_66;
      }
      *(_DWORD *)buf = 136446210;
      int v32 = "nw_http1_get_http1_protocol";
      BOOL v11 = "%{public}s called with null handle->http1_connection";
      goto LABEL_65;
    }
    if (!v29)
    {
      int v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (!os_log_type_enabled(v9, type)) {
        goto LABEL_66;
      }
      *(_DWORD *)buf = 136446210;
      int v32 = "nw_http1_get_http1_protocol";
      BOOL v11 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
      goto LABEL_65;
    }
    uint64_t v14 = (char *)__nw_create_backtrace_string();
    int v9 = __nwlog_obj();
    os_log_type_t v10 = type;
    BOOL v17 = os_log_type_enabled(v9, type);
    if (!v14)
    {
      if (!v17) {
        goto LABEL_66;
      }
      *(_DWORD *)buf = 136446210;
      int v32 = "nw_http1_get_http1_protocol";
      BOOL v11 = "%{public}s called with null handle->http1_connection, no backtrace";
      goto LABEL_65;
    }
    if (v17)
    {
      *(_DWORD *)buf = 136446466;
      int v32 = "nw_http1_get_http1_protocol";
      __int16 v33 = 2082;
      int v34 = v14;
      __int16 v16 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
      goto LABEL_50;
    }
    goto LABEL_51;
  }
  uint64_t v6 = *(void *)(v3 + 8);
  if (!v6)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v32 = "nw_http1_get_http1_protocol";
    int v8 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v29 = 0;
    if (!__nwlog_fault(v8, &type, &v29)) {
      goto LABEL_66;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (!os_log_type_enabled(v9, type)) {
        goto LABEL_66;
      }
      *(_DWORD *)buf = 136446210;
      int v32 = "nw_http1_get_http1_protocol";
      BOOL v11 = "%{public}s called with null handle->http1_stream";
      goto LABEL_65;
    }
    if (!v29)
    {
      int v9 = __nwlog_obj();
      os_log_type_t v10 = type;
      if (!os_log_type_enabled(v9, type)) {
        goto LABEL_66;
      }
      *(_DWORD *)buf = 136446210;
      int v32 = "nw_http1_get_http1_protocol";
      BOOL v11 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_65;
    }
    uint64_t v14 = (char *)__nw_create_backtrace_string();
    int v9 = __nwlog_obj();
    os_log_type_t v10 = type;
    BOOL v18 = os_log_type_enabled(v9, type);
    if (!v14)
    {
      if (!v18) {
        goto LABEL_66;
      }
      *(_DWORD *)buf = 136446210;
      int v32 = "nw_http1_get_http1_protocol";
      BOOL v11 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_65;
    }
    if (v18)
    {
      *(_DWORD *)buf = 136446466;
      int v32 = "nw_http1_get_http1_protocol";
      __int16 v33 = 2082;
      int v34 = v14;
      __int16 v16 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_50;
    }
    goto LABEL_51;
  }
  uint64_t v3 = v6 + 248;
LABEL_10:
  if (*(void *)v3)
  {
    if (a3)
    {
      unsigned int v7 = a3[1] & 0xFFFFFFF8;
      *a3 = -1;
      a3[1] = v7;
    }
    return;
  }
LABEL_68:
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  *(_DWORD *)buf = 136446210;
  int v32 = "nw_protocol_http1_stream_get_message_properties";
  unint64_t v19 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v29 = 0;
  if (!__nwlog_fault(v19, &type, &v29)) {
    goto LABEL_81;
  }
  if (type == OS_LOG_TYPE_FAULT)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v20 = gLogObj;
    os_log_type_t v21 = type;
    if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
      goto LABEL_81;
    }
    *(_DWORD *)buf = 136446210;
    int v32 = "nw_protocol_http1_stream_get_message_properties";
    int v22 = "%{public}s called with null http1";
LABEL_79:
    uint64_t v27 = v20;
    os_log_type_t v28 = v21;
LABEL_80:
    _os_log_impl(&dword_1830D4000, v27, v28, v22, buf, 0xCu);
    goto LABEL_81;
  }
  if (!v29)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v20 = gLogObj;
    os_log_type_t v21 = type;
    if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
      goto LABEL_81;
    }
    *(_DWORD *)buf = 136446210;
    int v32 = "nw_protocol_http1_stream_get_message_properties";
    int v22 = "%{public}s called with null http1, backtrace limit exceeded";
    goto LABEL_79;
  }
  unint64_t v23 = (char *)__nw_create_backtrace_string();
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  int v24 = gLogObj;
  os_log_type_t v25 = type;
  BOOL v26 = os_log_type_enabled((os_log_t)gLogObj, type);
  if (v23)
  {
    if (v26)
    {
      *(_DWORD *)buf = 136446466;
      int v32 = "nw_protocol_http1_stream_get_message_properties";
      __int16 v33 = 2082;
      int v34 = v23;
      _os_log_impl(&dword_1830D4000, v24, v25, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v23);
    goto LABEL_81;
  }
  if (v26)
  {
    *(_DWORD *)buf = 136446210;
    int v32 = "nw_protocol_http1_stream_get_message_properties";
    int v22 = "%{public}s called with null http1, no backtrace";
    uint64_t v27 = v24;
    os_log_type_t v28 = v25;
    goto LABEL_80;
  }
LABEL_81:
  if (v19) {
    free(v19);
  }
}

void nw_protocol_http1_get_remote_endpoint(nw_protocol *a1)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_http1_protocol";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (!__nwlog_fault(v6, &type, &v46)) {
      goto LABEL_81;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null protocol";
    }
    else if (v46)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v11 = os_log_type_enabled(v7, type);
      if (backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v49 = "nw_http1_get_http1_protocol";
          __int16 v50 = 2082;
          __int16 v51 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v7, v8, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_81:
        if (!v6) {
          goto LABEL_83;
        }
        goto LABEL_82;
      }
      if (!v11) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null protocol, no backtrace";
    }
    else
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null protocol, backtrace limit exceeded";
    }
    goto LABEL_80;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_http1_protocol";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (!__nwlog_fault(v6, &type, &v46)) {
      goto LABEL_81;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v46)
      {
        unsigned int v7 = __nwlog_obj();
        os_log_type_t v8 = type;
        if (!os_log_type_enabled(v7, type)) {
          goto LABEL_81;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_http1_protocol";
        int v9 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_80;
      }
      __int16 v12 = (char *)__nw_create_backtrace_string();
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v13 = os_log_type_enabled(v7, type);
      if (!v12)
      {
        if (!v13) {
          goto LABEL_81;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_http1_protocol";
        int v9 = "%{public}s called with null handle, no backtrace";
        goto LABEL_80;
      }
      if (!v13) {
        goto LABEL_35;
      }
      *(_DWORD *)buf = 136446466;
      __int16 v49 = "nw_http1_get_http1_protocol";
      __int16 v50 = 2082;
      __int16 v51 = v12;
      uint64_t v14 = "%{public}s called with null handle, dumping backtrace:%{public}s";
      goto LABEL_34;
    }
    unsigned int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    if (!os_log_type_enabled(v7, type)) {
      goto LABEL_81;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_http1_protocol";
    int v9 = "%{public}s called with null handle";
LABEL_80:
    _os_log_impl(&dword_1830D4000, v7, v8, v9, buf, 0xCu);
    goto LABEL_81;
  }
  int v2 = handle[6];
  uint64_t v3 = a1->handle;
  if (v2 == 1) {
    goto LABEL_10;
  }
  if (v2 != 2)
  {
    if (v2 != 3) {
      goto LABEL_83;
    }
    uint64_t v4 = *((void *)handle + 2);
    if (v4)
    {
      uint64_t v3 = (void *)(v4 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_http1_protocol";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (!__nwlog_fault(v6, &type, &v46)) {
      goto LABEL_81;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_connection";
      goto LABEL_80;
    }
    if (!v46)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
      goto LABEL_80;
    }
    __int16 v12 = (char *)__nw_create_backtrace_string();
    unsigned int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    BOOL v20 = os_log_type_enabled(v7, type);
    if (!v12)
    {
      if (!v20) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_connection, no backtrace";
      goto LABEL_80;
    }
    if (v20)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v49 = "nw_http1_get_http1_protocol";
      __int16 v50 = 2082;
      __int16 v51 = v12;
      uint64_t v14 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
      goto LABEL_34;
    }
LABEL_35:
    free(v12);
    if (!v6) {
      goto LABEL_83;
    }
LABEL_82:
    free(v6);
    goto LABEL_83;
  }
  uint64_t v5 = *((void *)handle + 1);
  if (!v5)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_http1_protocol";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (!__nwlog_fault(v6, &type, &v46)) {
      goto LABEL_81;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_stream";
      goto LABEL_80;
    }
    if (!v46)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_80;
    }
    __int16 v12 = (char *)__nw_create_backtrace_string();
    unsigned int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    BOOL v19 = os_log_type_enabled(v7, type);
    if (!v12)
    {
      if (!v19) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_80;
    }
    if (!v19) {
      goto LABEL_35;
    }
    *(_DWORD *)buf = 136446466;
    __int16 v49 = "nw_http1_get_http1_protocol";
    __int16 v50 = 2082;
    __int16 v51 = v12;
    uint64_t v14 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
LABEL_34:
    _os_log_impl(&dword_1830D4000, v7, v8, v14, buf, 0x16u);
    goto LABEL_35;
  }
  uint64_t v3 = (void *)(v5 + 248);
LABEL_10:
  if (*v3)
  {
    if (v2 == 2) {
      goto LABEL_14;
    }
    if (v2 != 3) {
      return;
    }
    if (*((void *)handle + 2))
    {
LABEL_14:
      if (v2 != 2) {
        return;
      }
      goto LABEL_108;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_stream_for_protocol";
    BOOL v15 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (__nwlog_fault(v15, &type, &v46))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        __int16 v16 = __nwlog_obj();
        os_log_type_t v17 = type;
        if (!os_log_type_enabled(v16, type)) {
          goto LABEL_104;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_stream_for_protocol";
        BOOL v18 = "%{public}s called with null handle->http1_connection";
LABEL_103:
        _os_log_impl(&dword_1830D4000, v16, v17, v18, buf, 0xCu);
        goto LABEL_104;
      }
      if (!v46)
      {
        __int16 v16 = __nwlog_obj();
        os_log_type_t v17 = type;
        if (!os_log_type_enabled(v16, type)) {
          goto LABEL_104;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_stream_for_protocol";
        BOOL v18 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_103;
      }
      os_log_type_t v21 = (char *)__nw_create_backtrace_string();
      __int16 v16 = __nwlog_obj();
      os_log_type_t v17 = type;
      BOOL v22 = os_log_type_enabled(v16, type);
      if (!v21)
      {
        if (!v22) {
          goto LABEL_104;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_stream_for_protocol";
        BOOL v18 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_103;
      }
      if (v22)
      {
        *(_DWORD *)buf = 136446466;
        __int16 v49 = "nw_http1_get_stream_for_protocol";
        __int16 v50 = 2082;
        __int16 v51 = v21;
        _os_log_impl(&dword_1830D4000, v16, v17, "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v21);
    }
LABEL_104:
    if (v15) {
      free(v15);
    }
    handle = a1->handle;
    if (handle)
    {
      int v33 = handle[6];
      if (v33 != 2) {
        return;
      }
LABEL_108:
      if (*((void *)handle + 1)) {
        return;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_connection_for_protocol";
      int v34 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t type = OS_LOG_TYPE_ERROR;
      char v46 = 0;
      if (!__nwlog_fault(v34, &type, &v46)) {
        goto LABEL_123;
      }
      if (type == OS_LOG_TYPE_FAULT)
      {
        uint64_t v35 = __nwlog_obj();
        os_log_type_t v36 = type;
        if (!os_log_type_enabled(v35, type)) {
          goto LABEL_123;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_connection_for_protocol";
        int v37 = "%{public}s called with null handle->http1_stream";
      }
      else if (v46)
      {
        int v38 = (char *)__nw_create_backtrace_string();
        uint64_t v35 = __nwlog_obj();
        os_log_type_t v36 = type;
        BOOL v39 = os_log_type_enabled(v35, type);
        if (v38)
        {
          if (v39)
          {
            *(_DWORD *)buf = 136446466;
            __int16 v49 = "nw_http1_get_connection_for_protocol";
            __int16 v50 = 2082;
            __int16 v51 = v38;
            _os_log_impl(&dword_1830D4000, v35, v36, "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v38);
          goto LABEL_123;
        }
        if (!v39)
        {
LABEL_123:
          if (v34) {
            free(v34);
          }
          return;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_connection_for_protocol";
        int v37 = "%{public}s called with null handle->http1_stream, no backtrace";
      }
      else
      {
        uint64_t v35 = __nwlog_obj();
        os_log_type_t v36 = type;
        if (!os_log_type_enabled(v35, type)) {
          goto LABEL_123;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_connection_for_protocol";
        int v37 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      }
      _os_log_impl(&dword_1830D4000, v35, v36, v37, buf, 0xCu);
      goto LABEL_123;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_connection_for_protocol";
    __int16 v40 = (const char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    __nwlog_fault(v40, &type, &v46);
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v41 = __nwlog_obj();
      os_log_type_t v42 = type;
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_connection_for_protocol";
      int v43 = "%{public}s called with null handle";
    }
    else
    {
      if (v46)
      {
        __int16 v44 = __nw_create_backtrace_string();
        int v41 = __nwlog_obj();
        os_log_type_t v42 = type;
        if (!v44)
        {
          *(_DWORD *)buf = 136446210;
          __int16 v49 = "nw_http1_get_connection_for_protocol";
          int v43 = "%{public}s called with null handle, no backtrace";
          goto LABEL_133;
        }
        *(_DWORD *)buf = 136446466;
        __int16 v49 = "nw_http1_get_connection_for_protocol";
        __int16 v50 = 2082;
        __int16 v51 = (void *)v44;
        _os_log_impl(&dword_1830D4000, v41, type, "%{public}s called with null handle, dumping backtrace:%{public}s", buf, 0x16u);
        __break(1u);
      }
      int v41 = __nwlog_obj();
      os_log_type_t v42 = type;
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_connection_for_protocol";
      int v43 = "%{public}s called with null handle, backtrace limit exceeded";
    }
LABEL_133:
    _os_log_impl(&dword_1830D4000, v41, v42, v43, buf, 0xCu);
    __break(1u);
    return;
  }
LABEL_83:
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  *(_DWORD *)buf = 136446210;
  __int16 v49 = "nw_protocol_http1_get_remote_endpoint";
  unint64_t v23 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v46 = 0;
  if (!__nwlog_fault(v23, &type, &v46)) {
    goto LABEL_96;
  }
  if (type == OS_LOG_TYPE_FAULT)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v24 = gLogObj;
    os_log_type_t v25 = type;
    if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
      goto LABEL_96;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_protocol_http1_get_remote_endpoint";
    BOOL v26 = "%{public}s called with null http1";
LABEL_94:
    uint64_t v31 = v24;
    os_log_type_t v32 = v25;
LABEL_95:
    _os_log_impl(&dword_1830D4000, v31, v32, v26, buf, 0xCu);
    goto LABEL_96;
  }
  if (!v46)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v24 = gLogObj;
    os_log_type_t v25 = type;
    if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
      goto LABEL_96;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_protocol_http1_get_remote_endpoint";
    BOOL v26 = "%{public}s called with null http1, backtrace limit exceeded";
    goto LABEL_94;
  }
  uint64_t v27 = (char *)__nw_create_backtrace_string();
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  os_log_type_t v28 = gLogObj;
  os_log_type_t v29 = type;
  BOOL v30 = os_log_type_enabled((os_log_t)gLogObj, type);
  if (v27)
  {
    if (v30)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v49 = "nw_protocol_http1_get_remote_endpoint";
      __int16 v50 = 2082;
      __int16 v51 = v27;
      _os_log_impl(&dword_1830D4000, v28, v29, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v27);
    goto LABEL_96;
  }
  if (v30)
  {
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_protocol_http1_get_remote_endpoint";
    BOOL v26 = "%{public}s called with null http1, no backtrace";
    uint64_t v31 = v28;
    os_log_type_t v32 = v29;
    goto LABEL_95;
  }
LABEL_96:
  if (v23) {
    free(v23);
  }
}

void nw_protocol_http1_get_parameters(nw_protocol *a1)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_http1_protocol";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (!__nwlog_fault(v6, &type, &v46)) {
      goto LABEL_81;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null protocol";
    }
    else if (v46)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v11 = os_log_type_enabled(v7, type);
      if (backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v49 = "nw_http1_get_http1_protocol";
          __int16 v50 = 2082;
          __int16 v51 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v7, v8, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_81:
        if (!v6) {
          goto LABEL_83;
        }
        goto LABEL_82;
      }
      if (!v11) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null protocol, no backtrace";
    }
    else
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null protocol, backtrace limit exceeded";
    }
    goto LABEL_80;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_http1_protocol";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (!__nwlog_fault(v6, &type, &v46)) {
      goto LABEL_81;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v46)
      {
        unsigned int v7 = __nwlog_obj();
        os_log_type_t v8 = type;
        if (!os_log_type_enabled(v7, type)) {
          goto LABEL_81;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_http1_protocol";
        int v9 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_80;
      }
      __int16 v12 = (char *)__nw_create_backtrace_string();
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v13 = os_log_type_enabled(v7, type);
      if (!v12)
      {
        if (!v13) {
          goto LABEL_81;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_http1_protocol";
        int v9 = "%{public}s called with null handle, no backtrace";
        goto LABEL_80;
      }
      if (!v13) {
        goto LABEL_35;
      }
      *(_DWORD *)buf = 136446466;
      __int16 v49 = "nw_http1_get_http1_protocol";
      __int16 v50 = 2082;
      __int16 v51 = v12;
      uint64_t v14 = "%{public}s called with null handle, dumping backtrace:%{public}s";
      goto LABEL_34;
    }
    unsigned int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    if (!os_log_type_enabled(v7, type)) {
      goto LABEL_81;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_http1_protocol";
    int v9 = "%{public}s called with null handle";
LABEL_80:
    _os_log_impl(&dword_1830D4000, v7, v8, v9, buf, 0xCu);
    goto LABEL_81;
  }
  int v2 = handle[6];
  uint64_t v3 = a1->handle;
  if (v2 == 1) {
    goto LABEL_10;
  }
  if (v2 != 2)
  {
    if (v2 != 3) {
      goto LABEL_83;
    }
    uint64_t v4 = *((void *)handle + 2);
    if (v4)
    {
      uint64_t v3 = (void *)(v4 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_http1_protocol";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (!__nwlog_fault(v6, &type, &v46)) {
      goto LABEL_81;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_connection";
      goto LABEL_80;
    }
    if (!v46)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
      goto LABEL_80;
    }
    __int16 v12 = (char *)__nw_create_backtrace_string();
    unsigned int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    BOOL v20 = os_log_type_enabled(v7, type);
    if (!v12)
    {
      if (!v20) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_connection, no backtrace";
      goto LABEL_80;
    }
    if (v20)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v49 = "nw_http1_get_http1_protocol";
      __int16 v50 = 2082;
      __int16 v51 = v12;
      uint64_t v14 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
      goto LABEL_34;
    }
LABEL_35:
    free(v12);
    if (!v6) {
      goto LABEL_83;
    }
LABEL_82:
    free(v6);
    goto LABEL_83;
  }
  uint64_t v5 = *((void *)handle + 1);
  if (!v5)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_http1_protocol";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (!__nwlog_fault(v6, &type, &v46)) {
      goto LABEL_81;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_stream";
      goto LABEL_80;
    }
    if (!v46)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_80;
    }
    __int16 v12 = (char *)__nw_create_backtrace_string();
    unsigned int v7 = __nwlog_obj();
    os_log_type_t v8 = type;
    BOOL v19 = os_log_type_enabled(v7, type);
    if (!v12)
    {
      if (!v19) {
        goto LABEL_81;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_http1_protocol";
      int v9 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_80;
    }
    if (!v19) {
      goto LABEL_35;
    }
    *(_DWORD *)buf = 136446466;
    __int16 v49 = "nw_http1_get_http1_protocol";
    __int16 v50 = 2082;
    __int16 v51 = v12;
    uint64_t v14 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
LABEL_34:
    _os_log_impl(&dword_1830D4000, v7, v8, v14, buf, 0x16u);
    goto LABEL_35;
  }
  uint64_t v3 = (void *)(v5 + 248);
LABEL_10:
  if (*v3)
  {
    if (v2 == 2) {
      goto LABEL_14;
    }
    if (v2 != 3) {
      return;
    }
    if (*((void *)handle + 2))
    {
LABEL_14:
      if (v2 != 2) {
        return;
      }
      goto LABEL_108;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_stream_for_protocol";
    BOOL v15 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (__nwlog_fault(v15, &type, &v46))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        __int16 v16 = __nwlog_obj();
        os_log_type_t v17 = type;
        if (!os_log_type_enabled(v16, type)) {
          goto LABEL_104;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_stream_for_protocol";
        BOOL v18 = "%{public}s called with null handle->http1_connection";
LABEL_103:
        _os_log_impl(&dword_1830D4000, v16, v17, v18, buf, 0xCu);
        goto LABEL_104;
      }
      if (!v46)
      {
        __int16 v16 = __nwlog_obj();
        os_log_type_t v17 = type;
        if (!os_log_type_enabled(v16, type)) {
          goto LABEL_104;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_stream_for_protocol";
        BOOL v18 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_103;
      }
      os_log_type_t v21 = (char *)__nw_create_backtrace_string();
      __int16 v16 = __nwlog_obj();
      os_log_type_t v17 = type;
      BOOL v22 = os_log_type_enabled(v16, type);
      if (!v21)
      {
        if (!v22) {
          goto LABEL_104;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_stream_for_protocol";
        BOOL v18 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_103;
      }
      if (v22)
      {
        *(_DWORD *)buf = 136446466;
        __int16 v49 = "nw_http1_get_stream_for_protocol";
        __int16 v50 = 2082;
        __int16 v51 = v21;
        _os_log_impl(&dword_1830D4000, v16, v17, "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v21);
    }
LABEL_104:
    if (v15) {
      free(v15);
    }
    handle = a1->handle;
    if (handle)
    {
      int v33 = handle[6];
      if (v33 != 2) {
        return;
      }
LABEL_108:
      if (*((void *)handle + 1)) {
        return;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_connection_for_protocol";
      int v34 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t type = OS_LOG_TYPE_ERROR;
      char v46 = 0;
      if (!__nwlog_fault(v34, &type, &v46)) {
        goto LABEL_123;
      }
      if (type == OS_LOG_TYPE_FAULT)
      {
        uint64_t v35 = __nwlog_obj();
        os_log_type_t v36 = type;
        if (!os_log_type_enabled(v35, type)) {
          goto LABEL_123;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_connection_for_protocol";
        int v37 = "%{public}s called with null handle->http1_stream";
      }
      else if (v46)
      {
        int v38 = (char *)__nw_create_backtrace_string();
        uint64_t v35 = __nwlog_obj();
        os_log_type_t v36 = type;
        BOOL v39 = os_log_type_enabled(v35, type);
        if (v38)
        {
          if (v39)
          {
            *(_DWORD *)buf = 136446466;
            __int16 v49 = "nw_http1_get_connection_for_protocol";
            __int16 v50 = 2082;
            __int16 v51 = v38;
            _os_log_impl(&dword_1830D4000, v35, v36, "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v38);
          goto LABEL_123;
        }
        if (!v39)
        {
LABEL_123:
          if (v34) {
            free(v34);
          }
          return;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_connection_for_protocol";
        int v37 = "%{public}s called with null handle->http1_stream, no backtrace";
      }
      else
      {
        uint64_t v35 = __nwlog_obj();
        os_log_type_t v36 = type;
        if (!os_log_type_enabled(v35, type)) {
          goto LABEL_123;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v49 = "nw_http1_get_connection_for_protocol";
        int v37 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      }
      _os_log_impl(&dword_1830D4000, v35, v36, v37, buf, 0xCu);
      goto LABEL_123;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_http1_get_connection_for_protocol";
    __int16 v40 = (const char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    __nwlog_fault(v40, &type, &v46);
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v41 = __nwlog_obj();
      os_log_type_t v42 = type;
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_connection_for_protocol";
      int v43 = "%{public}s called with null handle";
    }
    else
    {
      if (v46)
      {
        __int16 v44 = __nw_create_backtrace_string();
        int v41 = __nwlog_obj();
        os_log_type_t v42 = type;
        if (!v44)
        {
          *(_DWORD *)buf = 136446210;
          __int16 v49 = "nw_http1_get_connection_for_protocol";
          int v43 = "%{public}s called with null handle, no backtrace";
          goto LABEL_133;
        }
        *(_DWORD *)buf = 136446466;
        __int16 v49 = "nw_http1_get_connection_for_protocol";
        __int16 v50 = 2082;
        __int16 v51 = (void *)v44;
        _os_log_impl(&dword_1830D4000, v41, type, "%{public}s called with null handle, dumping backtrace:%{public}s", buf, 0x16u);
        __break(1u);
      }
      int v41 = __nwlog_obj();
      os_log_type_t v42 = type;
      *(_DWORD *)buf = 136446210;
      __int16 v49 = "nw_http1_get_connection_for_protocol";
      int v43 = "%{public}s called with null handle, backtrace limit exceeded";
    }
LABEL_133:
    _os_log_impl(&dword_1830D4000, v41, v42, v43, buf, 0xCu);
    __break(1u);
    return;
  }
LABEL_83:
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  *(_DWORD *)buf = 136446210;
  __int16 v49 = "nw_protocol_http1_get_parameters";
  unint64_t v23 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v46 = 0;
  if (!__nwlog_fault(v23, &type, &v46)) {
    goto LABEL_96;
  }
  if (type == OS_LOG_TYPE_FAULT)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v24 = gLogObj;
    os_log_type_t v25 = type;
    if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
      goto LABEL_96;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_protocol_http1_get_parameters";
    BOOL v26 = "%{public}s called with null http1";
LABEL_94:
    uint64_t v31 = v24;
    os_log_type_t v32 = v25;
LABEL_95:
    _os_log_impl(&dword_1830D4000, v31, v32, v26, buf, 0xCu);
    goto LABEL_96;
  }
  if (!v46)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v24 = gLogObj;
    os_log_type_t v25 = type;
    if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
      goto LABEL_96;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_protocol_http1_get_parameters";
    BOOL v26 = "%{public}s called with null http1, backtrace limit exceeded";
    goto LABEL_94;
  }
  uint64_t v27 = (char *)__nw_create_backtrace_string();
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  os_log_type_t v28 = gLogObj;
  os_log_type_t v29 = type;
  BOOL v30 = os_log_type_enabled((os_log_t)gLogObj, type);
  if (v27)
  {
    if (v30)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v49 = "nw_protocol_http1_get_parameters";
      __int16 v50 = 2082;
      __int16 v51 = v27;
      _os_log_impl(&dword_1830D4000, v28, v29, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v27);
    goto LABEL_96;
  }
  if (v30)
  {
    *(_DWORD *)buf = 136446210;
    __int16 v49 = "nw_protocol_http1_get_parameters";
    BOOL v26 = "%{public}s called with null http1, no backtrace";
    uint64_t v31 = v28;
    os_log_type_t v32 = v29;
    goto LABEL_95;
  }
LABEL_96:
  if (v23) {
    free(v23);
  }
}

uint64_t nw_protocol_http1_remove_listen_handler(nw_protocol *a1, nw_listen_protocol *a2)
{
  v52[2] = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v44 = "nw_http1_get_http1_protocol";
    __int16 v16 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v41 = 0;
    if (!__nwlog_fault(v16, &type, &v41)) {
      goto LABEL_91;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v17 = __nwlog_obj();
      os_log_type_t v18 = type;
      if (!os_log_type_enabled(v17, type)) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v44 = "nw_http1_get_http1_protocol";
      BOOL v19 = "%{public}s called with null protocol";
    }
    else if (v41)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v17 = __nwlog_obj();
      os_log_type_t v18 = type;
      BOOL v25 = os_log_type_enabled(v17, type);
      if (backtrace_string)
      {
        if (v25)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v44 = "nw_http1_get_http1_protocol";
          __int16 v45 = 2082;
          char v46 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v17, v18, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_91:
        if (!v16) {
          goto LABEL_93;
        }
        goto LABEL_92;
      }
      if (!v25) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v44 = "nw_http1_get_http1_protocol";
      BOOL v19 = "%{public}s called with null protocol, no backtrace";
    }
    else
    {
      os_log_type_t v17 = __nwlog_obj();
      os_log_type_t v18 = type;
      if (!os_log_type_enabled(v17, type)) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v44 = "nw_http1_get_http1_protocol";
      BOOL v19 = "%{public}s called with null protocol, backtrace limit exceeded";
    }
    goto LABEL_90;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v44 = "nw_http1_get_http1_protocol";
    __int16 v16 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v41 = 0;
    if (!__nwlog_fault(v16, &type, &v41)) {
      goto LABEL_91;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v41)
      {
        os_log_type_t v17 = __nwlog_obj();
        os_log_type_t v18 = type;
        if (!os_log_type_enabled(v17, type)) {
          goto LABEL_91;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v44 = "nw_http1_get_http1_protocol";
        BOOL v19 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_90;
      }
      BOOL v26 = (char *)__nw_create_backtrace_string();
      os_log_type_t v17 = __nwlog_obj();
      os_log_type_t v18 = type;
      BOOL v27 = os_log_type_enabled(v17, type);
      if (!v26)
      {
        if (!v27) {
          goto LABEL_91;
        }
        *(_DWORD *)buf = 136446210;
        __int16 v44 = "nw_http1_get_http1_protocol";
        BOOL v19 = "%{public}s called with null handle, no backtrace";
        goto LABEL_90;
      }
      if (v27)
      {
        *(_DWORD *)buf = 136446466;
        __int16 v44 = "nw_http1_get_http1_protocol";
        __int16 v45 = 2082;
        char v46 = v26;
        os_log_type_t v28 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_75:
        _os_log_impl(&dword_1830D4000, v17, v18, v28, buf, 0x16u);
      }
LABEL_76:
      free(v26);
      if (!v16) {
        goto LABEL_93;
      }
LABEL_92:
      free(v16);
      goto LABEL_93;
    }
    os_log_type_t v17 = __nwlog_obj();
    os_log_type_t v18 = type;
    if (!os_log_type_enabled(v17, type)) {
      goto LABEL_91;
    }
    *(_DWORD *)buf = 136446210;
    __int16 v44 = "nw_http1_get_http1_protocol";
    BOOL v19 = "%{public}s called with null handle";
LABEL_90:
    _os_log_impl(&dword_1830D4000, v17, v18, v19, buf, 0xCu);
    goto LABEL_91;
  }
  int v4 = handle[6];
  if (v4 == 1) {
    goto LABEL_10;
  }
  if (v4 != 2)
  {
    if (v4 != 3) {
      goto LABEL_93;
    }
    uint64_t v5 = *((void *)handle + 2);
    if (v5)
    {
      handle = (_DWORD *)(v5 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v44 = "nw_http1_get_http1_protocol";
    __int16 v16 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v41 = 0;
    if (!__nwlog_fault(v16, &type, &v41)) {
      goto LABEL_91;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v17 = __nwlog_obj();
      os_log_type_t v18 = type;
      if (!os_log_type_enabled(v17, type)) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v44 = "nw_http1_get_http1_protocol";
      BOOL v19 = "%{public}s called with null handle->http1_connection";
      goto LABEL_90;
    }
    if (!v41)
    {
      os_log_type_t v17 = __nwlog_obj();
      os_log_type_t v18 = type;
      if (!os_log_type_enabled(v17, type)) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v44 = "nw_http1_get_http1_protocol";
      BOOL v19 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
      goto LABEL_90;
    }
    BOOL v26 = (char *)__nw_create_backtrace_string();
    os_log_type_t v17 = __nwlog_obj();
    os_log_type_t v18 = type;
    BOOL v29 = os_log_type_enabled(v17, type);
    if (!v26)
    {
      if (!v29) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v44 = "nw_http1_get_http1_protocol";
      BOOL v19 = "%{public}s called with null handle->http1_connection, no backtrace";
      goto LABEL_90;
    }
    if (v29)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v44 = "nw_http1_get_http1_protocol";
      __int16 v45 = 2082;
      char v46 = v26;
      os_log_type_t v28 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
      goto LABEL_75;
    }
    goto LABEL_76;
  }
  uint64_t v6 = *((void *)handle + 1);
  if (!v6)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v44 = "nw_http1_get_http1_protocol";
    __int16 v16 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v41 = 0;
    if (!__nwlog_fault(v16, &type, &v41)) {
      goto LABEL_91;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v17 = __nwlog_obj();
      os_log_type_t v18 = type;
      if (!os_log_type_enabled(v17, type)) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v44 = "nw_http1_get_http1_protocol";
      BOOL v19 = "%{public}s called with null handle->http1_stream";
      goto LABEL_90;
    }
    if (!v41)
    {
      os_log_type_t v17 = __nwlog_obj();
      os_log_type_t v18 = type;
      if (!os_log_type_enabled(v17, type)) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v44 = "nw_http1_get_http1_protocol";
      BOOL v19 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_90;
    }
    BOOL v26 = (char *)__nw_create_backtrace_string();
    os_log_type_t v17 = __nwlog_obj();
    os_log_type_t v18 = type;
    BOOL v30 = os_log_type_enabled(v17, type);
    if (!v26)
    {
      if (!v30) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446210;
      __int16 v44 = "nw_http1_get_http1_protocol";
      BOOL v19 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_90;
    }
    if (v30)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v44 = "nw_http1_get_http1_protocol";
      __int16 v45 = 2082;
      char v46 = v26;
      os_log_type_t v28 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_75;
    }
    goto LABEL_76;
  }
  handle = (_DWORD *)(v6 + 248);
LABEL_10:
  uint64_t v7 = *(void *)handle;
  if (*(void *)handle)
  {
    if ((*(unsigned char *)(v7 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        BOOL v20 = __nwlog_obj();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
        {
          int v21 = *(_DWORD *)(v7 + 372);
          *(_DWORD *)buf = 136447234;
          __int16 v44 = "nw_protocol_http1_remove_listen_handler";
          __int16 v45 = 2082;
          char v46 = (char *)(v7 + 74);
          __int16 v47 = 2080;
          uint64_t v48 = " ";
          __int16 v49 = 1024;
          int v50 = v21;
          __int16 v51 = 2048;
          v52[0] = a2;
          _os_log_impl(&dword_1830D4000, v20, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called with listen_protocol %p", buf, 0x30u);
        }
      }
    }
    if (*(nw_listen_protocol **)(v7 + 328) == a2)
    {
      *(void *)(v7 + 328) = 0;
      a2->protocol_handler = 0;
      if (*(unsigned char *)(v7 + 158)) {
        goto LABEL_18;
      }
    }
    else if (*(unsigned char *)(v7 + 158))
    {
LABEL_18:
      if ((*(unsigned char *)(v7 + 376) & 1) == 0)
      {
        *(unsigned char *)(v7 + 376) |= 8u;
        uint64_t v8 = *(void *)(v7 + 208);
        while (v8)
        {
          uint64_t v9 = v8;
          uint64_t v8 = *(void *)(v8 + 592);
          uint64_t v10 = *(void *)(v9 + 784);
          if (v10)
          {
            if (*(void *)v10)
            {
              dispatch_source_set_timer(*(dispatch_source_t *)v10, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
            }
            else
            {
              *(_OWORD *)(v10 + 32) = xmmword_183D5CD50;
              if (*(unsigned char *)(v10 + 48))
              {
                if (*(unsigned char *)(v10 + 49)) {
                  nw_queue_source_run_timer(v10);
                }
              }
            }
          }
          else if ((*(unsigned char *)(v9 + 158) & 1) == 0)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            BOOL v11 = gLogObj;
            if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
            {
              uint64_t v12 = *(void *)(v9 + 488);
              if (v12) {
                LODWORD(v12) = *(_DWORD *)(v12 + 424);
              }
              int v13 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
              int v14 = *(_DWORD *)(v9 + 860);
              *(_DWORD *)buf = 136447490;
              __int16 v44 = "nw_protocol_http1_remove_listen_handler";
              __int16 v45 = 2082;
              char v46 = (char *)(v9 + 74);
              __int16 v47 = 2080;
              uint64_t v48 = " ";
              __int16 v49 = 1024;
              int v50 = v13;
              __int16 v51 = 1024;
              LODWORD(v52[0]) = v14;
              WORD2(v52[0]) = 1024;
              *(_DWORD *)((char *)v52 + 6) = v12;
              _os_log_impl(&dword_1830D4000, v11, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> no destroy timer on idle http1 connection when listen handler removed", buf, 0x32u);
            }
          }
        }
      }
      return 1;
    }
    if (gLogDatapath)
    {
      BOOL v22 = __nwlog_obj();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      {
        int v23 = *(_DWORD *)(v7 + 372);
        *(_DWORD *)buf = 136446978;
        __int16 v44 = "nw_protocol_http1_remove_listen_handler";
        __int16 v45 = 2082;
        char v46 = (char *)(v7 + 74);
        __int16 v47 = 2080;
        uint64_t v48 = " ";
        __int16 v49 = 1024;
        int v50 = v23;
        _os_log_impl(&dword_1830D4000, v22, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> removed protocol listen handler", buf, 0x26u);
      }
    }
    goto LABEL_18;
  }
LABEL_93:
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  *(_DWORD *)buf = 136446210;
  __int16 v44 = "nw_protocol_http1_remove_listen_handler";
  uint64_t v31 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v41 = 0;
  if (__nwlog_fault(v31, &type, &v41))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v32 = gLogObj;
      os_log_type_t v33 = type;
      if (os_log_type_enabled((os_log_t)gLogObj, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v44 = "nw_protocol_http1_remove_listen_handler";
        int v34 = "%{public}s called with null http1";
LABEL_104:
        BOOL v39 = v32;
        os_log_type_t v40 = v33;
LABEL_105:
        _os_log_impl(&dword_1830D4000, v39, v40, v34, buf, 0xCu);
      }
    }
    else if (v41)
    {
      uint64_t v35 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      os_log_type_t v36 = gLogObj;
      os_log_type_t v37 = type;
      BOOL v38 = os_log_type_enabled((os_log_t)gLogObj, type);
      if (v35)
      {
        if (v38)
        {
          *(_DWORD *)buf = 136446466;
          __int16 v44 = "nw_protocol_http1_remove_listen_handler";
          __int16 v45 = 2082;
          char v46 = v35;
          _os_log_impl(&dword_1830D4000, v36, v37, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v35);
        goto LABEL_106;
      }
      if (v38)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v44 = "nw_protocol_http1_remove_listen_handler";
        int v34 = "%{public}s called with null http1, no backtrace";
        BOOL v39 = v36;
        os_log_type_t v40 = v37;
        goto LABEL_105;
      }
    }
    else
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v32 = gLogObj;
      os_log_type_t v33 = type;
      if (os_log_type_enabled((os_log_t)gLogObj, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v44 = "nw_protocol_http1_remove_listen_handler";
        int v34 = "%{public}s called with null http1, backtrace limit exceeded";
        goto LABEL_104;
      }
    }
  }
LABEL_106:
  if (v31) {
    free(v31);
  }
  return 0;
}

BOOL nw_protocol_http1_add_listen_handler(nw_protocol *a1, nw_listen_protocol *a2, char a3)
{
  uint64_t v47 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v40 = "nw_http1_get_http1_protocol";
    int v14 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v37 = 0;
    if (!__nwlog_fault(v14, &type, &v37)) {
      goto LABEL_75;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v37)
      {
        BOOL v15 = __nwlog_obj();
        os_log_type_t v16 = type;
        if (!os_log_type_enabled(v15, type)) {
          goto LABEL_75;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v40 = "nw_http1_get_http1_protocol";
        os_log_type_t v17 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_74;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      BOOL v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      BOOL v19 = os_log_type_enabled(v15, type);
      if (!backtrace_string)
      {
        if (!v19) {
          goto LABEL_75;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v40 = "nw_http1_get_http1_protocol";
        os_log_type_t v17 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_74;
      }
      if (v19)
      {
        *(_DWORD *)buf = 136446466;
        os_log_type_t v40 = "nw_http1_get_http1_protocol";
        __int16 v41 = 2082;
        os_log_type_t v42 = backtrace_string;
        _os_log_impl(&dword_1830D4000, v15, v16, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_75;
    }
    BOOL v15 = __nwlog_obj();
    os_log_type_t v16 = type;
    if (!os_log_type_enabled(v15, type)) {
      goto LABEL_75;
    }
    *(_DWORD *)buf = 136446210;
    os_log_type_t v40 = "nw_http1_get_http1_protocol";
    os_log_type_t v17 = "%{public}s called with null protocol";
LABEL_74:
    _os_log_impl(&dword_1830D4000, v15, v16, v17, buf, 0xCu);
    goto LABEL_75;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v40 = "nw_http1_get_http1_protocol";
    int v14 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v37 = 0;
    if (!__nwlog_fault(v14, &type, &v37)) {
      goto LABEL_75;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v37)
      {
        BOOL v15 = __nwlog_obj();
        os_log_type_t v16 = type;
        if (!os_log_type_enabled(v15, type)) {
          goto LABEL_75;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v40 = "nw_http1_get_http1_protocol";
        os_log_type_t v17 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_74;
      }
      BOOL v20 = (char *)__nw_create_backtrace_string();
      BOOL v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      BOOL v21 = os_log_type_enabled(v15, type);
      if (!v20)
      {
        if (!v21) {
          goto LABEL_75;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v40 = "nw_http1_get_http1_protocol";
        os_log_type_t v17 = "%{public}s called with null handle, no backtrace";
        goto LABEL_74;
      }
      if (v21)
      {
        *(_DWORD *)buf = 136446466;
        os_log_type_t v40 = "nw_http1_get_http1_protocol";
        __int16 v41 = 2082;
        os_log_type_t v42 = v20;
        BOOL v22 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_59:
        _os_log_impl(&dword_1830D4000, v15, v16, v22, buf, 0x16u);
      }
LABEL_60:
      free(v20);
      if (!v14)
      {
LABEL_77:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        os_log_type_t v40 = "nw_protocol_http1_add_listen_handler";
        BOOL v27 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v37 = 0;
        if (!__nwlog_fault(v27, &type, &v37)) {
          goto LABEL_90;
        }
        if (type == OS_LOG_TYPE_FAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v28 = gLogObj;
          os_log_type_t v29 = type;
          if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
            goto LABEL_90;
          }
          *(_DWORD *)buf = 136446210;
          os_log_type_t v40 = "nw_protocol_http1_add_listen_handler";
          BOOL v30 = "%{public}s called with null http1";
        }
        else
        {
          if (v37)
          {
            uint64_t v31 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v32 = gLogObj;
            os_log_type_t v33 = type;
            BOOL v34 = os_log_type_enabled((os_log_t)gLogObj, type);
            if (v31)
            {
              if (v34)
              {
                *(_DWORD *)buf = 136446466;
                os_log_type_t v40 = "nw_protocol_http1_add_listen_handler";
                __int16 v41 = 2082;
                os_log_type_t v42 = v31;
                _os_log_impl(&dword_1830D4000, v32, v33, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v31);
              goto LABEL_90;
            }
            if (!v34)
            {
LABEL_90:
              if (v27) {
                free(v27);
              }
              return 0;
            }
            *(_DWORD *)buf = 136446210;
            os_log_type_t v40 = "nw_protocol_http1_add_listen_handler";
            BOOL v30 = "%{public}s called with null http1, no backtrace";
            uint64_t v35 = v32;
            os_log_type_t v36 = v33;
LABEL_89:
            _os_log_impl(&dword_1830D4000, v35, v36, v30, buf, 0xCu);
            goto LABEL_90;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v28 = gLogObj;
          os_log_type_t v29 = type;
          if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
            goto LABEL_90;
          }
          *(_DWORD *)buf = 136446210;
          os_log_type_t v40 = "nw_protocol_http1_add_listen_handler";
          BOOL v30 = "%{public}s called with null http1, backtrace limit exceeded";
        }
        uint64_t v35 = v28;
        os_log_type_t v36 = v29;
        goto LABEL_89;
      }
LABEL_76:
      free(v14);
      goto LABEL_77;
    }
    BOOL v15 = __nwlog_obj();
    os_log_type_t v16 = type;
    if (!os_log_type_enabled(v15, type)) {
      goto LABEL_75;
    }
    *(_DWORD *)buf = 136446210;
    os_log_type_t v40 = "nw_http1_get_http1_protocol";
    os_log_type_t v17 = "%{public}s called with null handle";
    goto LABEL_74;
  }
  int v7 = handle[6];
  if (v7 == 1) {
    goto LABEL_10;
  }
  if (v7 != 2)
  {
    if (v7 != 3) {
      goto LABEL_77;
    }
    uint64_t v8 = *((void *)handle + 2);
    if (v8)
    {
      handle = (_DWORD *)(v8 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v40 = "nw_http1_get_http1_protocol";
    int v14 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v37 = 0;
    if (__nwlog_fault(v14, &type, &v37))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        BOOL v15 = __nwlog_obj();
        os_log_type_t v16 = type;
        if (!os_log_type_enabled(v15, type)) {
          goto LABEL_75;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v40 = "nw_http1_get_http1_protocol";
        os_log_type_t v17 = "%{public}s called with null handle->http1_connection";
        goto LABEL_74;
      }
      if (!v37)
      {
        BOOL v15 = __nwlog_obj();
        os_log_type_t v16 = type;
        if (!os_log_type_enabled(v15, type)) {
          goto LABEL_75;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v40 = "nw_http1_get_http1_protocol";
        os_log_type_t v17 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_74;
      }
      BOOL v20 = (char *)__nw_create_backtrace_string();
      BOOL v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      BOOL v25 = os_log_type_enabled(v15, type);
      if (!v20)
      {
        if (!v25) {
          goto LABEL_75;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v40 = "nw_http1_get_http1_protocol";
        os_log_type_t v17 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_74;
      }
      if (v25)
      {
        *(_DWORD *)buf = 136446466;
        os_log_type_t v40 = "nw_http1_get_http1_protocol";
        __int16 v41 = 2082;
        os_log_type_t v42 = v20;
        BOOL v22 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
        goto LABEL_59;
      }
      goto LABEL_60;
    }
LABEL_75:
    if (!v14) {
      goto LABEL_77;
    }
    goto LABEL_76;
  }
  uint64_t v9 = *((void *)handle + 1);
  if (!v9)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v40 = "nw_http1_get_http1_protocol";
    int v14 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v37 = 0;
    if (!__nwlog_fault(v14, &type, &v37)) {
      goto LABEL_75;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (!os_log_type_enabled(v15, type)) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v40 = "nw_http1_get_http1_protocol";
      os_log_type_t v17 = "%{public}s called with null handle->http1_stream";
      goto LABEL_74;
    }
    if (!v37)
    {
      BOOL v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (!os_log_type_enabled(v15, type)) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v40 = "nw_http1_get_http1_protocol";
      os_log_type_t v17 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_74;
    }
    BOOL v20 = (char *)__nw_create_backtrace_string();
    BOOL v15 = __nwlog_obj();
    os_log_type_t v16 = type;
    BOOL v26 = os_log_type_enabled(v15, type);
    if (!v20)
    {
      if (!v26) {
        goto LABEL_75;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v40 = "nw_http1_get_http1_protocol";
      os_log_type_t v17 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_74;
    }
    if (v26)
    {
      *(_DWORD *)buf = 136446466;
      os_log_type_t v40 = "nw_http1_get_http1_protocol";
      __int16 v41 = 2082;
      os_log_type_t v42 = v20;
      BOOL v22 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_59;
    }
    goto LABEL_60;
  }
  handle = (_DWORD *)(v9 + 248);
LABEL_10:
  uint64_t v10 = *(void *)handle;
  if (!*(void *)handle) {
    goto LABEL_77;
  }
  if (*(void *)(v10 + 328))
  {
    if ((*(unsigned char *)(v10 + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      BOOL v11 = gLogObj;
      BOOL result = os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR);
      if (!result) {
        return result;
      }
      int v13 = *(_DWORD *)(v10 + 372);
      *(_DWORD *)buf = 136446978;
      os_log_type_t v40 = "nw_protocol_http1_add_listen_handler";
      __int16 v41 = 2082;
      os_log_type_t v42 = (char *)(v10 + 74);
      __int16 v43 = 2080;
      __int16 v44 = " ";
      __int16 v45 = 1024;
      int v46 = v13;
      _os_log_impl(&dword_1830D4000, v11, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> already have a listen handler, ignoring add", buf, 0x26u);
    }
    return 0;
  }
  if ((*(unsigned char *)(v10 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      int v23 = __nwlog_obj();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
      {
        int v24 = *(_DWORD *)(v10 + 372);
        *(_DWORD *)buf = 136446978;
        os_log_type_t v40 = "nw_protocol_http1_add_listen_handler";
        __int16 v41 = 2082;
        os_log_type_t v42 = (char *)(v10 + 74);
        __int16 v43 = 2080;
        __int16 v44 = " ";
        __int16 v45 = 1024;
        int v46 = v24;
        _os_log_impl(&dword_1830D4000, v23, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> added protocol listen handler", buf, 0x26u);
      }
    }
  }
  *(void *)(v10 + 328) = a2;
  a2->protocol_handler = (nw_protocol *)v10;
  if (a3) {
    nw_protocol_remove_instance((uint64_t)a1);
  }
  return 1;
}

uint64_t nw_protocol_http1_finalize_output_frames(nw_protocol *a1, nw_frame_array_s *a2)
{
  uint64_t v101 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v90 = "nw_http1_get_http1_protocol";
    BOOL v34 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(v79) = 0;
    if (!__nwlog_fault(v34, type, &v79)) {
      goto LABEL_163;
    }
    if (type[0] != OS_LOG_TYPE_FAULT)
    {
      if (!(_BYTE)v79)
      {
        uint64_t v35 = __nwlog_obj();
        os_log_type_t v36 = type[0];
        if (!os_log_type_enabled(v35, type[0])) {
          goto LABEL_163;
        }
        *(_DWORD *)buf = 136446210;
        v90 = "nw_http1_get_http1_protocol";
        char v37 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_162;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v35 = __nwlog_obj();
      os_log_type_t v36 = type[0];
      BOOL v43 = os_log_type_enabled(v35, type[0]);
      if (!backtrace_string)
      {
        if (!v43) {
          goto LABEL_163;
        }
        *(_DWORD *)buf = 136446210;
        v90 = "nw_http1_get_http1_protocol";
        char v37 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_162;
      }
      if (v43)
      {
        *(_DWORD *)buf = 136446466;
        v90 = "nw_http1_get_http1_protocol";
        __int16 v91 = 2082;
        v92 = backtrace_string;
        _os_log_impl(&dword_1830D4000, v35, v36, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_163;
    }
    uint64_t v35 = __nwlog_obj();
    os_log_type_t v36 = type[0];
    if (!os_log_type_enabled(v35, type[0])) {
      goto LABEL_163;
    }
    *(_DWORD *)buf = 136446210;
    v90 = "nw_http1_get_http1_protocol";
    char v37 = "%{public}s called with null protocol";
LABEL_162:
    _os_log_impl(&dword_1830D4000, v35, v36, v37, buf, 0xCu);
    goto LABEL_163;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v90 = "nw_http1_get_http1_protocol";
    BOOL v34 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(v79) = 0;
    if (!__nwlog_fault(v34, type, &v79)) {
      goto LABEL_163;
    }
    if (type[0] != OS_LOG_TYPE_FAULT)
    {
      if (!(_BYTE)v79)
      {
        uint64_t v35 = __nwlog_obj();
        os_log_type_t v36 = type[0];
        if (!os_log_type_enabled(v35, type[0])) {
          goto LABEL_163;
        }
        *(_DWORD *)buf = 136446210;
        v90 = "nw_http1_get_http1_protocol";
        char v37 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_162;
      }
      __int16 v44 = (char *)__nw_create_backtrace_string();
      uint64_t v35 = __nwlog_obj();
      os_log_type_t v36 = type[0];
      BOOL v45 = os_log_type_enabled(v35, type[0]);
      if (!v44)
      {
        if (!v45) {
          goto LABEL_163;
        }
        *(_DWORD *)buf = 136446210;
        v90 = "nw_http1_get_http1_protocol";
        char v37 = "%{public}s called with null handle, no backtrace";
        goto LABEL_162;
      }
      if (v45)
      {
        *(_DWORD *)buf = 136446466;
        v90 = "nw_http1_get_http1_protocol";
        __int16 v91 = 2082;
        v92 = v44;
        int v46 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_125:
        _os_log_impl(&dword_1830D4000, v35, v36, v46, buf, 0x16u);
      }
LABEL_126:
      free(v44);
      if (!v34)
      {
LABEL_165:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        v90 = "nw_protocol_http1_finalize_output_frames";
        BOOL v38 = (char *)_os_log_send_and_compose_impl();
        type[0] = OS_LOG_TYPE_ERROR;
        LOBYTE(v79) = 0;
        if (__nwlog_fault(v38, type, &v79))
        {
          if (type[0] == OS_LOG_TYPE_FAULT)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            BOOL v39 = gLogObj;
            os_log_type_t v40 = type[0];
            if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
            {
              *(_DWORD *)buf = 136446210;
              v90 = "nw_protocol_http1_finalize_output_frames";
              __int16 v41 = "%{public}s called with null http1";
              goto LABEL_176;
            }
          }
          else if ((_BYTE)v79)
          {
            __int16 v65 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            int v66 = gLogObj;
            os_log_type_t v67 = type[0];
            BOOL v68 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
            if (v65)
            {
              if (v68)
              {
                *(_DWORD *)buf = 136446466;
                v90 = "nw_protocol_http1_finalize_output_frames";
                __int16 v91 = 2082;
                v92 = v65;
                _os_log_impl(&dword_1830D4000, v66, v67, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v65);
              goto LABEL_178;
            }
            if (v68)
            {
              *(_DWORD *)buf = 136446210;
              v90 = "nw_protocol_http1_finalize_output_frames";
              __int16 v41 = "%{public}s called with null http1, no backtrace";
              __int16 v69 = v66;
              os_log_type_t v70 = v67;
              goto LABEL_177;
            }
          }
          else
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            BOOL v39 = gLogObj;
            os_log_type_t v40 = type[0];
            if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
            {
              *(_DWORD *)buf = 136446210;
              v90 = "nw_protocol_http1_finalize_output_frames";
              __int16 v41 = "%{public}s called with null http1, backtrace limit exceeded";
              goto LABEL_176;
            }
          }
        }
        goto LABEL_178;
      }
LABEL_164:
      free(v34);
      goto LABEL_165;
    }
    uint64_t v35 = __nwlog_obj();
    os_log_type_t v36 = type[0];
    if (!os_log_type_enabled(v35, type[0])) {
      goto LABEL_163;
    }
    *(_DWORD *)buf = 136446210;
    v90 = "nw_http1_get_http1_protocol";
    char v37 = "%{public}s called with null handle";
    goto LABEL_162;
  }
  int v4 = handle[6];
  if (v4 == 1) {
    goto LABEL_10;
  }
  if (v4 != 2)
  {
    if (v4 != 3) {
      goto LABEL_165;
    }
    uint64_t v5 = *((void *)handle + 2);
    if (v5)
    {
      handle = (_DWORD *)(v5 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v90 = "nw_http1_get_http1_protocol";
    BOOL v34 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(v79) = 0;
    if (__nwlog_fault(v34, type, &v79))
    {
      if (type[0] == OS_LOG_TYPE_FAULT)
      {
        uint64_t v35 = __nwlog_obj();
        os_log_type_t v36 = type[0];
        if (!os_log_type_enabled(v35, type[0])) {
          goto LABEL_163;
        }
        *(_DWORD *)buf = 136446210;
        v90 = "nw_http1_get_http1_protocol";
        char v37 = "%{public}s called with null handle->http1_connection";
        goto LABEL_162;
      }
      if (!(_BYTE)v79)
      {
        uint64_t v35 = __nwlog_obj();
        os_log_type_t v36 = type[0];
        if (!os_log_type_enabled(v35, type[0])) {
          goto LABEL_163;
        }
        *(_DWORD *)buf = 136446210;
        v90 = "nw_http1_get_http1_protocol";
        char v37 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_162;
      }
      __int16 v44 = (char *)__nw_create_backtrace_string();
      uint64_t v35 = __nwlog_obj();
      os_log_type_t v36 = type[0];
      BOOL v63 = os_log_type_enabled(v35, type[0]);
      if (!v44)
      {
        if (!v63) {
          goto LABEL_163;
        }
        *(_DWORD *)buf = 136446210;
        v90 = "nw_http1_get_http1_protocol";
        char v37 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_162;
      }
      if (v63)
      {
        *(_DWORD *)buf = 136446466;
        v90 = "nw_http1_get_http1_protocol";
        __int16 v91 = 2082;
        v92 = v44;
        int v46 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
        goto LABEL_125;
      }
      goto LABEL_126;
    }
LABEL_163:
    if (!v34) {
      goto LABEL_165;
    }
    goto LABEL_164;
  }
  uint64_t v6 = *((void *)handle + 1);
  if (!v6)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v90 = "nw_http1_get_http1_protocol";
    BOOL v34 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(v79) = 0;
    if (!__nwlog_fault(v34, type, &v79)) {
      goto LABEL_163;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      uint64_t v35 = __nwlog_obj();
      os_log_type_t v36 = type[0];
      if (!os_log_type_enabled(v35, type[0])) {
        goto LABEL_163;
      }
      *(_DWORD *)buf = 136446210;
      v90 = "nw_http1_get_http1_protocol";
      char v37 = "%{public}s called with null handle->http1_stream";
      goto LABEL_162;
    }
    if (!(_BYTE)v79)
    {
      uint64_t v35 = __nwlog_obj();
      os_log_type_t v36 = type[0];
      if (!os_log_type_enabled(v35, type[0])) {
        goto LABEL_163;
      }
      *(_DWORD *)buf = 136446210;
      v90 = "nw_http1_get_http1_protocol";
      char v37 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_162;
    }
    __int16 v44 = (char *)__nw_create_backtrace_string();
    uint64_t v35 = __nwlog_obj();
    os_log_type_t v36 = type[0];
    BOOL v64 = os_log_type_enabled(v35, type[0]);
    if (!v44)
    {
      if (!v64) {
        goto LABEL_163;
      }
      *(_DWORD *)buf = 136446210;
      v90 = "nw_http1_get_http1_protocol";
      char v37 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_162;
    }
    if (v64)
    {
      *(_DWORD *)buf = 136446466;
      v90 = "nw_http1_get_http1_protocol";
      __int16 v91 = 2082;
      v92 = v44;
      int v46 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_125;
    }
    goto LABEL_126;
  }
  handle = (_DWORD *)(v6 + 248);
LABEL_10:
  uint64_t v7 = *(void *)handle;
  if (!v7) {
    goto LABEL_165;
  }
  if (a2)
  {
    *(void *)os_log_type_t type = 0;
    v84 = type;
    uint64_t v85 = 0x2000000000;
    uint64_t v86 = 0;
    uint64_t v79 = 0;
    v80 = &v79;
    uint64_t v81 = 0x2000000000;
    uint64_t v82 = 0;
    v72[0] = MEMORY[0x1E4F143A8];
    v72[1] = 0x40000000;
    __int16 v73 = (uint64_t (*)(void *))___ZL40nw_protocol_http1_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke;
    uint64_t v74 = &unk_1E5241660;
    uint64_t v77 = v7;
    uint64_t v78 = a2;
    uint64_t v75 = type;
    __int16 v76 = &v79;
    tqh_first = a2->tqh_first;
    do
    {
      if (!tqh_first) {
        break;
      }
      uint64_t v9 = (nw_frame *)*((void *)tqh_first + 4);
      char v10 = v73(v72);
      tqh_first = v9;
    }
    while ((v10 & 1) != 0);
    if (!a2->tqh_first) {
      goto LABEL_46;
    }
    if (*((void *)v84 + 3))
    {
      uint64_t v11 = v80[3];
      if (v11)
      {
        if ((*(_WORD *)(v11 + 428) & 2) != 0)
        {
          if ((*(unsigned char *)(v11 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              os_log_type_t v16 = __nwlog_obj();
              if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v17 = v80[3];
                os_log_type_t v18 = (char *)(v17 + 74);
                uint64_t v19 = *(void *)(v17 + 256);
                int v20 = *(_DWORD *)(*(void *)(v17 + 248) + 372);
                if (v19) {
                  LODWORD(v19) = *(_DWORD *)(v19 + 860);
                }
                int v21 = *(_DWORD *)(v17 + 424);
                *(_DWORD *)buf = 136447490;
                v90 = "nw_protocol_http1_finalize_output_frames";
                __int16 v91 = 2082;
                v92 = v18;
                __int16 v93 = 2080;
                v94 = " ";
                __int16 v95 = 1024;
                int v96 = v20;
                __int16 v97 = 1024;
                int v98 = v19;
                __int16 v99 = 1024;
                int v100 = v21;
                _os_log_impl(&dword_1830D4000, v16, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> passing through frames", buf, 0x32u);
              }
            }
          }
LABEL_40:
          uint64_t v28 = a2->tqh_first;
          do
          {
            if (!v28) {
              break;
            }
            os_log_type_t v29 = (nw_frame *)*((void *)v28 + 4);
            char v30 = ___ZL40nw_protocol_http1_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke_139((uint64_t)&__block_literal_global_142, (uint64_t)v28);
            uint64_t v28 = v29;
          }
          while ((v30 & 1) != 0);
          uint64_t v31 = *((void *)v84 + 3);
          if (v31)
          {
            uint64_t v32 = *(void *)(v31 + 32);
LABEL_45:
            nw_protocol_finalize_output_frames(v32, (uint64_t)a2);
LABEL_46:
            uint64_t v33 = 1;
LABEL_47:
            _Block_object_dispose(&v79, 8);
            _Block_object_dispose(type, 8);
            return v33;
          }
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          v90 = "nw_http1_get_output_handler";
          __int16 v51 = (char *)_os_log_send_and_compose_impl();
          os_log_type_t v88 = OS_LOG_TYPE_ERROR;
          char v87 = 0;
          if (__nwlog_fault(v51, &v88, &v87))
          {
            if (v88 == OS_LOG_TYPE_FAULT)
            {
              uint64_t v52 = __nwlog_obj();
              os_log_type_t v53 = v88;
              if (os_log_type_enabled(v52, v88))
              {
                *(_DWORD *)buf = 136446210;
                v90 = "nw_http1_get_output_handler";
                int v54 = "%{public}s called with null connection";
LABEL_150:
                _os_log_impl(&dword_1830D4000, v52, v53, v54, buf, 0xCu);
              }
            }
            else if (v87)
            {
              __int16 v61 = (char *)__nw_create_backtrace_string();
              uint64_t v52 = __nwlog_obj();
              os_log_type_t v53 = v88;
              BOOL v62 = os_log_type_enabled(v52, v88);
              if (v61)
              {
                if (v62)
                {
                  *(_DWORD *)buf = 136446466;
                  v90 = "nw_http1_get_output_handler";
                  __int16 v91 = 2082;
                  v92 = v61;
                  _os_log_impl(&dword_1830D4000, v52, v53, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v61);
                goto LABEL_151;
              }
              if (v62)
              {
                *(_DWORD *)buf = 136446210;
                v90 = "nw_http1_get_output_handler";
                int v54 = "%{public}s called with null connection, no backtrace";
                goto LABEL_150;
              }
            }
            else
            {
              uint64_t v52 = __nwlog_obj();
              os_log_type_t v53 = v88;
              if (os_log_type_enabled(v52, v88))
              {
                *(_DWORD *)buf = 136446210;
                v90 = "nw_http1_get_output_handler";
                int v54 = "%{public}s called with null connection, backtrace limit exceeded";
                goto LABEL_150;
              }
            }
          }
LABEL_151:
          if (v51) {
            free(v51);
          }
          uint64_t v32 = 0;
          goto LABEL_45;
        }
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        v90 = "nw_protocol_http1_finalize_output_frames";
        uint64_t v12 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t v88 = OS_LOG_TYPE_ERROR;
        char v87 = 0;
        if (__nwlog_fault(v12, &v88, &v87))
        {
          if (v88 == OS_LOG_TYPE_FAULT)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v13 = gLogObj;
            os_log_type_t v14 = v88;
            if (!os_log_type_enabled((os_log_t)gLogObj, v88)) {
              goto LABEL_38;
            }
            *(_DWORD *)buf = 136446210;
            v90 = "nw_protocol_http1_finalize_output_frames";
            BOOL v15 = "%{public}s haven't sent headers, but we have someone else's frames to finalize";
LABEL_36:
            BOOL v26 = v13;
            os_log_type_t v27 = v14;
LABEL_37:
            _os_log_impl(&dword_1830D4000, v26, v27, v15, buf, 0xCu);
            goto LABEL_38;
          }
          if (!v87)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v13 = gLogObj;
            os_log_type_t v14 = v88;
            if (!os_log_type_enabled((os_log_t)gLogObj, v88)) {
              goto LABEL_38;
            }
            *(_DWORD *)buf = 136446210;
            v90 = "nw_protocol_http1_finalize_output_frames";
            BOOL v15 = "%{public}s haven't sent headers, but we have someone else's frames to finalize, backtrace limit exceeded";
            goto LABEL_36;
          }
          BOOL v22 = (char *)__nw_create_backtrace_string();
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v23 = gLogObj;
          os_log_type_t v24 = v88;
          BOOL v25 = os_log_type_enabled((os_log_t)gLogObj, v88);
          if (v22)
          {
            if (v25)
            {
              *(_DWORD *)buf = 136446466;
              v90 = "nw_protocol_http1_finalize_output_frames";
              __int16 v91 = 2082;
              v92 = v22;
              _os_log_impl(&dword_1830D4000, v23, v24, "%{public}s haven't sent headers, but we have someone else's frames to finalize, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v22);
            goto LABEL_38;
          }
          if (v25)
          {
            *(_DWORD *)buf = 136446210;
            v90 = "nw_protocol_http1_finalize_output_frames";
            BOOL v15 = "%{public}s haven't sent headers, but we have someone else's frames to finalize, no backtrace";
            BOOL v26 = v23;
            os_log_type_t v27 = v24;
            goto LABEL_37;
          }
        }
LABEL_38:
        if (v12) {
          free(v12);
        }
        goto LABEL_40;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      v90 = "nw_protocol_http1_finalize_output_frames";
      uint64_t v47 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t v88 = OS_LOG_TYPE_ERROR;
      char v87 = 0;
      if (!__nwlog_fault(v47, &v88, &v87)) {
        goto LABEL_145;
      }
      if (v88 == OS_LOG_TYPE_FAULT)
      {
        uint64_t v48 = __nwlog_obj();
        os_log_type_t v49 = v88;
        if (os_log_type_enabled(v48, v88))
        {
          *(_DWORD *)buf = 136446210;
          v90 = "nw_protocol_http1_finalize_output_frames";
          int v50 = "%{public}s called with null http1_stream";
          goto LABEL_144;
        }
        goto LABEL_145;
      }
      if (!v87)
      {
        uint64_t v48 = __nwlog_obj();
        os_log_type_t v49 = v88;
        if (os_log_type_enabled(v48, v88))
        {
          *(_DWORD *)buf = 136446210;
          v90 = "nw_protocol_http1_finalize_output_frames";
          int v50 = "%{public}s called with null http1_stream, backtrace limit exceeded";
          goto LABEL_144;
        }
        goto LABEL_145;
      }
      __int16 v57 = (char *)__nw_create_backtrace_string();
      uint64_t v48 = __nwlog_obj();
      os_log_type_t v49 = v88;
      BOOL v60 = os_log_type_enabled(v48, v88);
      if (!v57)
      {
        if (v60)
        {
          *(_DWORD *)buf = 136446210;
          v90 = "nw_protocol_http1_finalize_output_frames";
          int v50 = "%{public}s called with null http1_stream, no backtrace";
          goto LABEL_144;
        }
        goto LABEL_145;
      }
      if (v60)
      {
        *(_DWORD *)buf = 136446466;
        v90 = "nw_protocol_http1_finalize_output_frames";
        __int16 v91 = 2082;
        v92 = v57;
        __int16 v59 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
        goto LABEL_104;
      }
    }
    else
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      v90 = "nw_protocol_http1_finalize_output_frames";
      uint64_t v47 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t v88 = OS_LOG_TYPE_ERROR;
      char v87 = 0;
      if (!__nwlog_fault(v47, &v88, &v87)) {
        goto LABEL_145;
      }
      if (v88 == OS_LOG_TYPE_FAULT)
      {
        uint64_t v48 = __nwlog_obj();
        os_log_type_t v49 = v88;
        if (os_log_type_enabled(v48, v88))
        {
          *(_DWORD *)buf = 136446210;
          v90 = "nw_protocol_http1_finalize_output_frames";
          int v50 = "%{public}s called with null http1_connection";
LABEL_144:
          _os_log_impl(&dword_1830D4000, v48, v49, v50, buf, 0xCu);
        }
LABEL_145:
        if (v47) {
          free(v47);
        }
        uint64_t v33 = 0;
        goto LABEL_47;
      }
      if (!v87)
      {
        uint64_t v48 = __nwlog_obj();
        os_log_type_t v49 = v88;
        if (os_log_type_enabled(v48, v88))
        {
          *(_DWORD *)buf = 136446210;
          v90 = "nw_protocol_http1_finalize_output_frames";
          int v50 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          goto LABEL_144;
        }
        goto LABEL_145;
      }
      __int16 v57 = (char *)__nw_create_backtrace_string();
      uint64_t v48 = __nwlog_obj();
      os_log_type_t v49 = v88;
      BOOL v58 = os_log_type_enabled(v48, v88);
      if (!v57)
      {
        if (v58)
        {
          *(_DWORD *)buf = 136446210;
          v90 = "nw_protocol_http1_finalize_output_frames";
          int v50 = "%{public}s called with null http1_connection, no backtrace";
          goto LABEL_144;
        }
        goto LABEL_145;
      }
      if (v58)
      {
        *(_DWORD *)buf = 136446466;
        v90 = "nw_protocol_http1_finalize_output_frames";
        __int16 v91 = 2082;
        v92 = v57;
        __int16 v59 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
LABEL_104:
        _os_log_impl(&dword_1830D4000, v48, v49, v59, buf, 0x16u);
      }
    }
    free(v57);
    goto LABEL_145;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  v90 = "nw_protocol_http1_finalize_output_frames";
  BOOL v38 = (char *)_os_log_send_and_compose_impl();
  type[0] = OS_LOG_TYPE_ERROR;
  LOBYTE(v79) = 0;
  if (__nwlog_fault(v38, type, &v79))
  {
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      BOOL v39 = __nwlog_obj();
      os_log_type_t v40 = type[0];
      if (os_log_type_enabled(v39, type[0]))
      {
        *(_DWORD *)buf = 136446210;
        v90 = "nw_protocol_http1_finalize_output_frames";
        __int16 v41 = "%{public}s called with null frames";
LABEL_176:
        __int16 v69 = v39;
        os_log_type_t v70 = v40;
LABEL_177:
        _os_log_impl(&dword_1830D4000, v69, v70, v41, buf, 0xCu);
      }
    }
    else if ((_BYTE)v79)
    {
      __int16 v55 = (char *)__nw_create_backtrace_string();
      BOOL v39 = __nwlog_obj();
      os_log_type_t v40 = type[0];
      BOOL v56 = os_log_type_enabled(v39, type[0]);
      if (v55)
      {
        if (v56)
        {
          *(_DWORD *)buf = 136446466;
          v90 = "nw_protocol_http1_finalize_output_frames";
          __int16 v91 = 2082;
          v92 = v55;
          _os_log_impl(&dword_1830D4000, v39, v40, "%{public}s called with null frames, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v55);
        goto LABEL_178;
      }
      if (v56)
      {
        *(_DWORD *)buf = 136446210;
        v90 = "nw_protocol_http1_finalize_output_frames";
        __int16 v41 = "%{public}s called with null frames, no backtrace";
        goto LABEL_176;
      }
    }
    else
    {
      BOOL v39 = __nwlog_obj();
      os_log_type_t v40 = type[0];
      if (os_log_type_enabled(v39, type[0]))
      {
        *(_DWORD *)buf = 136446210;
        v90 = "nw_protocol_http1_finalize_output_frames";
        __int16 v41 = "%{public}s called with null frames, backtrace limit exceeded";
        goto LABEL_176;
      }
    }
  }
LABEL_178:
  if (v38) {
    free(v38);
  }
  return 0;
}

uint64_t ___ZL40nw_protocol_http1_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke(void *a1, uint64_t a2)
{
  uint64_t v151 = *MEMORY[0x1E4F143B8];
  if (nw_frame_get_finalizer_context(a2) == a1[6])
  {
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(void **)(a2 + 40);
    if (v8)
    {
      *(void *)(v8 + 40) = v9;
      uint64_t v9 = *(void **)(a2 + 40);
    }
    else
    {
      *(void *)(a1[7] + 8) = v9;
    }
    *uint64_t v9 = v8;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 40) = 0;
    uint64_t v14 = 1;
    nw_frame_finalize(a2);
    return v14;
  }
  finalizer_context = (void *)nw_frame_get_finalizer_context(a2);
  if (!finalizer_context)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    *(_DWORD *)buf = 136446466;
    v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
    __int16 v141 = 2048;
    v142 = (const char *)a2;
    char v10 = (const char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    os_log_type_t v138 = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v10, type, &v138)) {
      goto LABEL_90;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v11 = gLogObj;
      os_log_type_t v12 = type[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
        goto LABEL_90;
      }
      *(_DWORD *)buf = 136446466;
      v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
      __int16 v141 = 2048;
      v142 = (const char *)a2;
      uint64_t v13 = "%{public}s frame %p has no context";
      goto LABEL_89;
    }
    if (v138 == OS_LOG_TYPE_DEFAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v11 = gLogObj;
      os_log_type_t v12 = type[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
        goto LABEL_90;
      }
      *(_DWORD *)buf = 136446466;
      v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
      __int16 v141 = 2048;
      v142 = (const char *)a2;
      uint64_t v13 = "%{public}s frame %p has no context, backtrace limit exceeded";
      goto LABEL_89;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v11 = gLogObj;
    os_log_type_t v12 = type[0];
    BOOL v16 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
    if (!backtrace_string)
    {
      if (!v16) {
        goto LABEL_90;
      }
      *(_DWORD *)buf = 136446466;
      v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
      __int16 v141 = 2048;
      v142 = (const char *)a2;
      uint64_t v13 = "%{public}s frame %p has no context, no backtrace";
      goto LABEL_89;
    }
    if (v16)
    {
      *(_DWORD *)buf = 136446722;
      v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
      __int16 v141 = 2048;
      v142 = (const char *)a2;
      __int16 v143 = 2082;
      v144 = backtrace_string;
      _os_log_impl(&dword_1830D4000, v11, v12, "%{public}s frame %p has no context, dumping backtrace:%{public}s", buf, 0x20u);
    }
    free(backtrace_string);
LABEL_90:
    if (!v10)
    {
LABEL_93:
      nw_frame_finalize(a2);
      return 1;
    }
    goto LABEL_91;
  }
  *(void *)(*(void *)(a1[4] + 8) + 24) = finalizer_context[1];
  *(void *)(*(void *)(a1[5] + 8) + 24) = *finalizer_context;
  void *finalizer_context = 0;
  finalizer_context[1] = 0;
  if (a2)
  {
    *(_OWORD *)(a2 + 80) = *((_OWORD *)finalizer_context + 1);
LABEL_5:
    free(finalizer_context);
    goto LABEL_6;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  v140 = "nw_http1_frame_unwrap_context";
  uint64_t v85 = (const char *)_os_log_send_and_compose_impl();
  type[0] = OS_LOG_TYPE_ERROR;
  os_log_type_t v138 = OS_LOG_TYPE_DEFAULT;
  if (__nwlog_fault(v85, type, &v138))
  {
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      uint64_t v86 = __nwlog_obj();
      os_log_type_t v87 = type[0];
      if (!os_log_type_enabled(v86, type[0])) {
        goto LABEL_212;
      }
      *(_DWORD *)buf = 136446210;
      v140 = "nw_http1_frame_unwrap_context";
      os_log_type_t v88 = "%{public}s called with null frame";
LABEL_211:
      _os_log_impl(&dword_1830D4000, v86, v87, v88, buf, 0xCu);
      goto LABEL_212;
    }
    if (v138 == OS_LOG_TYPE_DEFAULT)
    {
      uint64_t v86 = __nwlog_obj();
      os_log_type_t v87 = type[0];
      if (!os_log_type_enabled(v86, type[0])) {
        goto LABEL_212;
      }
      *(_DWORD *)buf = 136446210;
      v140 = "nw_http1_frame_unwrap_context";
      os_log_type_t v88 = "%{public}s called with null frame, backtrace limit exceeded";
      goto LABEL_211;
    }
    v89 = (char *)__nw_create_backtrace_string();
    uint64_t v86 = __nwlog_obj();
    os_log_type_t v87 = type[0];
    BOOL v90 = os_log_type_enabled(v86, type[0]);
    if (!v89)
    {
      if (!v90) {
        goto LABEL_212;
      }
      *(_DWORD *)buf = 136446210;
      v140 = "nw_http1_frame_unwrap_context";
      os_log_type_t v88 = "%{public}s called with null frame, no backtrace";
      goto LABEL_211;
    }
    if (v90)
    {
      *(_DWORD *)buf = 136446466;
      v140 = "nw_http1_frame_unwrap_context";
      __int16 v141 = 2082;
      v142 = v89;
      _os_log_impl(&dword_1830D4000, v86, v87, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v89);
  }
LABEL_212:
  if (v85)
  {
    finalizer_context = v85;
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v5 = *(void *)(*(void *)(a1[4] + 8) + 24);
  if (!v5)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    *(_DWORD *)buf = 136446466;
    v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
    __int16 v141 = 2048;
    v142 = (const char *)a2;
    char v10 = (const char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    os_log_type_t v138 = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v10, type, &v138)) {
      goto LABEL_90;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v11 = gLogObj;
      os_log_type_t v12 = type[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
        goto LABEL_90;
      }
      *(_DWORD *)buf = 136446466;
      v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
      __int16 v141 = 2048;
      v142 = (const char *)a2;
      uint64_t v13 = "%{public}s frame %p has no connection in its context";
      goto LABEL_89;
    }
    if (v138 == OS_LOG_TYPE_DEFAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v11 = gLogObj;
      os_log_type_t v12 = type[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
        goto LABEL_90;
      }
      *(_DWORD *)buf = 136446466;
      v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
      __int16 v141 = 2048;
      v142 = (const char *)a2;
      uint64_t v13 = "%{public}s frame %p has no connection in its context, backtrace limit exceeded";
      goto LABEL_89;
    }
    int v23 = (char *)__nw_create_backtrace_string();
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v11 = gLogObj;
    os_log_type_t v12 = type[0];
    BOOL v24 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
    if (v23)
    {
      if (v24)
      {
        *(_DWORD *)buf = 136446722;
        v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
        __int16 v141 = 2048;
        v142 = (const char *)a2;
        __int16 v143 = 2082;
        v144 = v23;
        _os_log_impl(&dword_1830D4000, v11, v12, "%{public}s frame %p has no connection in its context, dumping backtrace:%{public}s", buf, 0x20u);
      }
      free(v23);
      if (!v10) {
        goto LABEL_93;
      }
LABEL_91:
      BOOL v58 = (char *)v10;
LABEL_92:
      free(v58);
      goto LABEL_93;
    }
    if (v24)
    {
      *(_DWORD *)buf = 136446466;
      v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
      __int16 v141 = 2048;
      v142 = (const char *)a2;
      uint64_t v13 = "%{public}s frame %p has no connection in its context, no backtrace";
LABEL_89:
      _os_log_impl(&dword_1830D4000, v11, v12, v13, buf, 0x16u);
      goto LABEL_90;
    }
    goto LABEL_90;
  }
  uint64_t v6 = *(void *)(a1[5] + 8);
  uint64_t v7 = *(void *)(v6 + 24);
  if (v7)
  {
    if ((*(_WORD *)(v7 + 428) & 0x100) == 0) {
      goto LABEL_110;
    }
LABEL_29:
    unsigned int v18 = nw_frame_unclaimed_length((_DWORD *)a2);
    *(_DWORD *)os_log_type_t type = 0;
    nw_frame_get_buffer(a2, type);
    if (*(void *)(*(void *)(a1[4] + 8) + 24))
    {
      unsigned int v20 = *(_DWORD *)type;
      if (*(_DWORD *)type)
      {
        int v21 = 0;
        do
        {
          ++v21;
          BOOL v22 = v20 > 0xF;
          v20 >>= 4;
        }
        while (v22);
      }
      else
      {
        int v21 = 0;
      }
      unsigned int v25 = v21 + 2;
      unsigned int v26 = 7;
      goto LABEL_44;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v140 = "nw_http1_connection_get_chunked_extra_size";
    __int16 v91 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v138 = OS_LOG_TYPE_ERROR;
    char v137 = 0;
    if (__nwlog_fault(v91, &v138, &v137))
    {
      if (v138 == OS_LOG_TYPE_FAULT)
      {
        v92 = __nwlog_obj();
        os_log_type_t v93 = v138;
        if (os_log_type_enabled(v92, v138))
        {
          *(_DWORD *)buf = 136446210;
          v140 = "nw_http1_connection_get_chunked_extra_size";
          v94 = "%{public}s called with null http1_connection";
LABEL_251:
          _os_log_impl(&dword_1830D4000, v92, v93, v94, buf, 0xCu);
        }
      }
      else if (v137)
      {
        v110 = (char *)__nw_create_backtrace_string();
        v92 = __nwlog_obj();
        os_log_type_t v93 = v138;
        BOOL v111 = os_log_type_enabled(v92, v138);
        if (v110)
        {
          if (v111)
          {
            *(_DWORD *)buf = 136446466;
            v140 = "nw_http1_connection_get_chunked_extra_size";
            __int16 v141 = 2082;
            v142 = v110;
            _os_log_impl(&dword_1830D4000, v92, v93, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v110);
          goto LABEL_252;
        }
        if (v111)
        {
          *(_DWORD *)buf = 136446210;
          v140 = "nw_http1_connection_get_chunked_extra_size";
          v94 = "%{public}s called with null http1_connection, no backtrace";
          goto LABEL_251;
        }
      }
      else
      {
        v92 = __nwlog_obj();
        os_log_type_t v93 = v138;
        if (os_log_type_enabled(v92, v138))
        {
          *(_DWORD *)buf = 136446210;
          v140 = "nw_http1_connection_get_chunked_extra_size";
          v94 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          goto LABEL_251;
        }
      }
    }
LABEL_252:
    if (v91) {
      free(v91);
    }
    unsigned int v25 = 0;
    unsigned int v26 = 0;
LABEL_44:
    nw_frame_unclaim(a2, v19, v25, v26);
    uint64_t v27 = nw_frame_unclaimed_bytes(a2, 0);
    int is_metadata_complete = nw_frame_is_metadata_complete(a2);
    int v30 = is_metadata_complete;
    if (*(void *)(*(void *)(a1[4] + 8) + 24))
    {
      int v31 = 0;
      if (v18)
      {
        unsigned int v32 = v18;
        do
        {
          ++v31;
          BOOL v22 = v32 > 0xF;
          v32 >>= 4;
        }
        while (v22);
      }
      unsigned int v33 = v31 + 2;
      if (is_metadata_complete) {
        int v34 = 7;
      }
      else {
        int v34 = 2;
      }
      int v135 = v34;
      int log = v33;
      goto LABEL_52;
    }
    unsigned int v95 = v18;
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v140 = "nw_http1_connection_get_chunked_extra_size";
    int v96 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v138 = OS_LOG_TYPE_ERROR;
    char v137 = 0;
    if (__nwlog_fault(v96, &v138, &v137))
    {
      if (v138 == OS_LOG_TYPE_FAULT)
      {
        __int16 v97 = __nwlog_obj();
        os_log_type_t v98 = v138;
        if (!os_log_type_enabled(v97, v138)) {
          goto LABEL_220;
        }
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_get_chunked_extra_size";
        __int16 v99 = "%{public}s called with null http1_connection";
LABEL_218:
        v127 = v97;
LABEL_219:
        _os_log_impl(&dword_1830D4000, v127, v98, v99, buf, 0xCu);
        goto LABEL_220;
      }
      if (!v137)
      {
        __int16 v97 = __nwlog_obj();
        os_log_type_t v98 = v138;
        if (!os_log_type_enabled(v97, v138)) {
          goto LABEL_220;
        }
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_get_chunked_extra_size";
        __int16 v99 = "%{public}s called with null http1_connection, backtrace limit exceeded";
        goto LABEL_218;
      }
      v112 = (char *)__nw_create_backtrace_string();
      v113 = __nwlog_obj();
      os_log_type_t v98 = v138;
      loga = v113;
      BOOL v114 = os_log_type_enabled(v113, v138);
      if (v112)
      {
        if (v114)
        {
          *(_DWORD *)buf = 136446466;
          v140 = "nw_http1_connection_get_chunked_extra_size";
          __int16 v141 = 2082;
          v142 = v112;
          _os_log_impl(&dword_1830D4000, loga, v98, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v112);
      }
      else if (v114)
      {
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_get_chunked_extra_size";
        __int16 v99 = "%{public}s called with null http1_connection, no backtrace";
        v127 = loga;
        goto LABEL_219;
      }
    }
LABEL_220:
    if (v96) {
      free(v96);
    }
    unsigned int v33 = 0;
    int v135 = 0;
    unsigned int v18 = v95;
    int log = 0;
    if (!*(void *)(*(void *)(a1[4] + 8) + 24))
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      v140 = "nw_http1_connection_write_chunk_header";
      int v100 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t v138 = OS_LOG_TYPE_ERROR;
      char v137 = 0;
      if (!__nwlog_fault(v100, &v138, &v137)) {
        goto LABEL_246;
      }
      if (v138 == OS_LOG_TYPE_FAULT)
      {
        uint64_t v101 = __nwlog_obj();
        os_log_type_t v102 = v138;
        if (!os_log_type_enabled(v101, v138)) {
          goto LABEL_246;
        }
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_write_chunk_header";
        v103 = "%{public}s called with null http1_connection";
        goto LABEL_244;
      }
      if (!v137)
      {
        uint64_t v101 = __nwlog_obj();
        os_log_type_t v102 = v138;
        if (!os_log_type_enabled(v101, v138)) {
          goto LABEL_246;
        }
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_write_chunk_header";
        v103 = "%{public}s called with null http1_connection, backtrace limit exceeded";
        goto LABEL_244;
      }
      v128 = (char *)__nw_create_backtrace_string();
      v129 = __nwlog_obj();
      os_log_type_t v102 = v138;
      v132 = v129;
      BOOL v130 = os_log_type_enabled(v129, v138);
      if (v128)
      {
        if (v130)
        {
          *(_DWORD *)buf = 136446466;
          v140 = "nw_http1_connection_write_chunk_header";
          __int16 v141 = 2082;
          v142 = v128;
          _os_log_impl(&dword_1830D4000, v132, v102, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v128);
      }
      else if (v130)
      {
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_write_chunk_header";
        v103 = "%{public}s called with null http1_connection, no backtrace";
        goto LABEL_273;
      }
      goto LABEL_246;
    }
LABEL_52:
    if (v18)
    {
      if (v27)
      {
        if (v33)
        {
          uint64_t v35 = v27 + v33 - 1;
          *(_WORD *)(v35 - 1) = 2573;
          os_log_type_t v36 = (unsigned char *)(v35 - 2);
          unsigned int v37 = v18;
          do
          {
            if ((v37 & 0xF) >= 0xA) {
              char v38 = (v37 & 0xF) + 55;
            }
            else {
              char v38 = v37 & 0xF | 0x30;
            }
            *v36-- = v38;
            BOOL v22 = v37 > 0xF;
            v37 >>= 4;
          }
          while (v22);
LABEL_60:
          uint64_t v39 = v33;
          unsigned int v40 = v25 - v33;
          if (v25 != v33) {
            memmove((void *)(v27 + v33), (const void *)(v27 + v25), v18);
          }
          unsigned int v41 = v135;
          if (*(void *)(*(void *)(a1[4] + 8) + 24))
          {
            if (v27)
            {
              uint64_t v42 = v27 + v39 + v18;
              *(_WORD *)uint64_t v42 = 2573;
              if (v30)
              {
                *(unsigned char *)(v42 + 6) = 10;
                *(_DWORD *)(v42 + 2) = 218762544;
              }
              goto LABEL_66;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            v140 = "nw_http1_connection_write_chunk_trailer";
            v104 = (char *)_os_log_send_and_compose_impl();
            os_log_type_t v138 = OS_LOG_TYPE_ERROR;
            char v137 = 0;
            if (!__nwlog_fault(v104, &v138, &v137)) {
              goto LABEL_268;
            }
            if (v138 == OS_LOG_TYPE_FAULT)
            {
              v105 = __nwlog_obj();
              os_log_type_t v106 = v138;
              if (os_log_type_enabled(v105, v138))
              {
                *(_DWORD *)buf = 136446210;
                v140 = "nw_http1_connection_write_chunk_trailer";
                v107 = "%{public}s called with null buffer";
                goto LABEL_267;
              }
              goto LABEL_268;
            }
            if (!v137)
            {
              v105 = __nwlog_obj();
              os_log_type_t v106 = v138;
              if (os_log_type_enabled(v105, v138))
              {
                *(_DWORD *)buf = 136446210;
                v140 = "nw_http1_connection_write_chunk_trailer";
                v107 = "%{public}s called with null buffer, backtrace limit exceeded";
                goto LABEL_267;
              }
              goto LABEL_268;
            }
            v123 = (char *)__nw_create_backtrace_string();
            v105 = __nwlog_obj();
            os_log_type_t v106 = v138;
            BOOL v126 = os_log_type_enabled(v105, v138);
            if (!v123)
            {
              if (v126)
              {
                *(_DWORD *)buf = 136446210;
                v140 = "nw_http1_connection_write_chunk_trailer";
                v107 = "%{public}s called with null buffer, no backtrace";
                goto LABEL_267;
              }
              goto LABEL_268;
            }
            if (v126)
            {
              *(_DWORD *)buf = 136446466;
              v140 = "nw_http1_connection_write_chunk_trailer";
              __int16 v141 = 2082;
              v142 = v123;
              v125 = "%{public}s called with null buffer, dumping backtrace:%{public}s";
              goto LABEL_207;
            }
          }
          else
          {
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            v140 = "nw_http1_connection_write_chunk_trailer";
            v104 = (char *)_os_log_send_and_compose_impl();
            os_log_type_t v138 = OS_LOG_TYPE_ERROR;
            char v137 = 0;
            if (!__nwlog_fault(v104, &v138, &v137)) {
              goto LABEL_268;
            }
            if (v138 == OS_LOG_TYPE_FAULT)
            {
              v105 = __nwlog_obj();
              os_log_type_t v106 = v138;
              if (os_log_type_enabled(v105, v138))
              {
                *(_DWORD *)buf = 136446210;
                v140 = "nw_http1_connection_write_chunk_trailer";
                v107 = "%{public}s called with null http1_connection";
LABEL_267:
                _os_log_impl(&dword_1830D4000, v105, v106, v107, buf, 0xCu);
              }
LABEL_268:
              if (v104) {
                free(v104);
              }
              unsigned int v41 = v135;
LABEL_66:
              uint64_t v43 = v40 + v26 - v41;
              if (!__CFADD__(v40, v26 - v41))
              {
                int v49 = log;
                if (!v43) {
                  goto LABEL_109;
                }
                goto LABEL_108;
              }
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              *(_DWORD *)buf = 136446978;
              v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
              unint64_t v44 = v26 - (unint64_t)v41;
              __int16 v141 = 2082;
              v142 = "unused_bytes";
              __int16 v143 = 2048;
              v144 = (const char *)v44;
              __int16 v145 = 2048;
              *(void *)v146 = v43;
              BOOL v45 = (char *)_os_log_send_and_compose_impl();
              os_log_type_t v138 = OS_LOG_TYPE_ERROR;
              char v137 = 0;
              if (__nwlog_fault(v45, &v138, &v137))
              {
                if (v138 == OS_LOG_TYPE_FAULT)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  int v46 = gLogObj;
                  os_log_type_t v47 = v138;
                  if (!os_log_type_enabled((os_log_t)gLogObj, v138)) {
                    goto LABEL_106;
                  }
                  *(_DWORD *)buf = 136446978;
                  v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
                  __int16 v141 = 2082;
                  v142 = "unused_bytes";
                  __int16 v143 = 2048;
                  v144 = (const char *)v44;
                  __int16 v145 = 2048;
                  *(void *)v146 = v43;
                  uint64_t v48 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
                  goto LABEL_105;
                }
                if (!v137)
                {
                  int v46 = __nwlog_obj();
                  os_log_type_t v47 = v138;
                  if (!os_log_type_enabled(v46, v138)) {
                    goto LABEL_106;
                  }
                  *(_DWORD *)buf = 136446978;
                  v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
                  __int16 v141 = 2082;
                  v142 = "unused_bytes";
                  __int16 v143 = 2048;
                  v144 = (const char *)v44;
                  __int16 v145 = 2048;
                  *(void *)v146 = v43;
                  uint64_t v48 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                  goto LABEL_105;
                }
                BOOL v56 = (char *)__nw_create_backtrace_string();
                int v46 = __nwlog_obj();
                os_log_type_t v47 = v138;
                BOOL v57 = os_log_type_enabled(v46, v138);
                if (v56)
                {
                  if (v57)
                  {
                    *(_DWORD *)buf = 136447234;
                    v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
                    __int16 v141 = 2082;
                    v142 = "unused_bytes";
                    __int16 v143 = 2048;
                    v144 = (const char *)v44;
                    __int16 v145 = 2048;
                    *(void *)v146 = v43;
                    *(_WORD *)&v146[8] = 2082;
                    v147 = v56;
                    _os_log_impl(&dword_1830D4000, v46, v47, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                  }
                  free(v56);
                  unsigned int v41 = v135;
                  goto LABEL_106;
                }
                unsigned int v41 = v135;
                if (v57)
                {
                  *(_DWORD *)buf = 136446978;
                  v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
                  __int16 v141 = 2082;
                  v142 = "unused_bytes";
                  __int16 v143 = 2048;
                  v144 = (const char *)v44;
                  __int16 v145 = 2048;
                  *(void *)v146 = v43;
                  uint64_t v48 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
LABEL_105:
                  _os_log_impl(&dword_1830D4000, v46, v47, v48, buf, 0x2Au);
                }
              }
LABEL_106:
              int v49 = log;
              if (v45) {
                free(v45);
              }
LABEL_108:
              nw_frame_claim(a2, v29, v49 + v18 + v41, 0);
              nw_frame_collapse(a2);
              nw_frame_unclaim(a2, v63, v49 + v18 + v41, 0);
LABEL_109:
              uint64_t v7 = *(void *)(*(void *)(a1[5] + 8) + 24);
              goto LABEL_110;
            }
            if (!v137)
            {
              v105 = __nwlog_obj();
              os_log_type_t v106 = v138;
              if (os_log_type_enabled(v105, v138))
              {
                *(_DWORD *)buf = 136446210;
                v140 = "nw_http1_connection_write_chunk_trailer";
                v107 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                goto LABEL_267;
              }
              goto LABEL_268;
            }
            v123 = (char *)__nw_create_backtrace_string();
            v105 = __nwlog_obj();
            os_log_type_t v106 = v138;
            BOOL v124 = os_log_type_enabled(v105, v138);
            if (!v123)
            {
              if (v124)
              {
                *(_DWORD *)buf = 136446210;
                v140 = "nw_http1_connection_write_chunk_trailer";
                v107 = "%{public}s called with null http1_connection, no backtrace";
                goto LABEL_267;
              }
              goto LABEL_268;
            }
            if (v124)
            {
              *(_DWORD *)buf = 136446466;
              v140 = "nw_http1_connection_write_chunk_trailer";
              __int16 v141 = 2082;
              v142 = v123;
              v125 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
LABEL_207:
              _os_log_impl(&dword_1830D4000, v105, v106, v125, buf, 0x16u);
            }
          }
          free(v123);
          goto LABEL_268;
        }
        unsigned int v95 = v18;
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_write_chunk_header";
        int v100 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t v138 = OS_LOG_TYPE_ERROR;
        char v137 = 0;
        if (__nwlog_fault(v100, &v138, &v137))
        {
          if (v138 == OS_LOG_TYPE_FAULT)
          {
            uint64_t v101 = __nwlog_obj();
            os_log_type_t v102 = v138;
            if (!os_log_type_enabled(v101, v138)) {
              goto LABEL_246;
            }
            *(_DWORD *)buf = 136446210;
            v140 = "nw_http1_connection_write_chunk_header";
            v103 = "%{public}s called with null usable_size";
            goto LABEL_244;
          }
          if (!v137)
          {
            uint64_t v101 = __nwlog_obj();
            os_log_type_t v102 = v138;
            if (!os_log_type_enabled(v101, v138)) {
              goto LABEL_246;
            }
            *(_DWORD *)buf = 136446210;
            v140 = "nw_http1_connection_write_chunk_header";
            v103 = "%{public}s called with null usable_size, backtrace limit exceeded";
            goto LABEL_244;
          }
          v115 = (char *)__nw_create_backtrace_string();
          v121 = __nwlog_obj();
          os_log_type_t v102 = v138;
          v132 = v121;
          BOOL v122 = os_log_type_enabled(v121, v138);
          if (v115)
          {
            if (!v122) {
              goto LABEL_197;
            }
            *(_DWORD *)buf = 136446466;
            v140 = "nw_http1_connection_write_chunk_header";
            __int16 v141 = 2082;
            v142 = v115;
            v118 = "%{public}s called with null usable_size, dumping backtrace:%{public}s";
LABEL_196:
            _os_log_impl(&dword_1830D4000, v132, v102, v118, buf, 0x16u);
LABEL_197:
            free(v115);
            if (!v100) {
              goto LABEL_248;
            }
            goto LABEL_247;
          }
          if (v122)
          {
            *(_DWORD *)buf = 136446210;
            v140 = "nw_http1_connection_write_chunk_header";
            v103 = "%{public}s called with null usable_size, no backtrace";
            goto LABEL_273;
          }
        }
LABEL_246:
        if (!v100)
        {
LABEL_248:
          unsigned int v18 = v95;
          unsigned int v33 = log;
          goto LABEL_60;
        }
LABEL_247:
        free(v100);
        goto LABEL_248;
      }
      unsigned int v95 = v18;
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      v140 = "nw_http1_connection_write_chunk_header";
      int v100 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t v138 = OS_LOG_TYPE_ERROR;
      char v137 = 0;
      if (!__nwlog_fault(v100, &v138, &v137)) {
        goto LABEL_246;
      }
      if (v138 == OS_LOG_TYPE_FAULT)
      {
        uint64_t v101 = __nwlog_obj();
        os_log_type_t v102 = v138;
        if (!os_log_type_enabled(v101, v138)) {
          goto LABEL_246;
        }
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_write_chunk_header";
        v103 = "%{public}s called with null buffer";
        goto LABEL_244;
      }
      if (!v137)
      {
        uint64_t v101 = __nwlog_obj();
        os_log_type_t v102 = v138;
        if (!os_log_type_enabled(v101, v138)) {
          goto LABEL_246;
        }
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_write_chunk_header";
        v103 = "%{public}s called with null buffer, backtrace limit exceeded";
        goto LABEL_244;
      }
      v115 = (char *)__nw_create_backtrace_string();
      v119 = __nwlog_obj();
      os_log_type_t v102 = v138;
      v132 = v119;
      BOOL v120 = os_log_type_enabled(v119, v138);
      if (v115)
      {
        if (!v120) {
          goto LABEL_197;
        }
        *(_DWORD *)buf = 136446466;
        v140 = "nw_http1_connection_write_chunk_header";
        __int16 v141 = 2082;
        v142 = v115;
        v118 = "%{public}s called with null buffer, dumping backtrace:%{public}s";
        goto LABEL_196;
      }
      if (!v120) {
        goto LABEL_246;
      }
      *(_DWORD *)buf = 136446210;
      v140 = "nw_http1_connection_write_chunk_header";
      v103 = "%{public}s called with null buffer, no backtrace";
    }
    else
    {
      unsigned int v95 = 0;
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      v140 = "nw_http1_connection_write_chunk_header";
      int v100 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t v138 = OS_LOG_TYPE_ERROR;
      char v137 = 0;
      if (!__nwlog_fault(v100, &v138, &v137)) {
        goto LABEL_246;
      }
      if (v138 == OS_LOG_TYPE_FAULT)
      {
        uint64_t v101 = __nwlog_obj();
        os_log_type_t v102 = v138;
        if (!os_log_type_enabled(v101, v138)) {
          goto LABEL_246;
        }
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_write_chunk_header";
        v103 = "%{public}s called with null size";
LABEL_244:
        v131 = v101;
LABEL_245:
        _os_log_impl(&dword_1830D4000, v131, v102, v103, buf, 0xCu);
        goto LABEL_246;
      }
      if (!v137)
      {
        uint64_t v101 = __nwlog_obj();
        os_log_type_t v102 = v138;
        if (!os_log_type_enabled(v101, v138)) {
          goto LABEL_246;
        }
        *(_DWORD *)buf = 136446210;
        v140 = "nw_http1_connection_write_chunk_header";
        v103 = "%{public}s called with null size, backtrace limit exceeded";
        goto LABEL_244;
      }
      v115 = (char *)__nw_create_backtrace_string();
      v116 = __nwlog_obj();
      os_log_type_t v102 = v138;
      v132 = v116;
      BOOL v117 = os_log_type_enabled(v116, v138);
      if (v115)
      {
        if (!v117) {
          goto LABEL_197;
        }
        *(_DWORD *)buf = 136446466;
        v140 = "nw_http1_connection_write_chunk_header";
        __int16 v141 = 2082;
        v142 = v115;
        v118 = "%{public}s called with null size, dumping backtrace:%{public}s";
        goto LABEL_196;
      }
      if (!v117) {
        goto LABEL_246;
      }
      *(_DWORD *)buf = 136446210;
      v140 = "nw_http1_connection_write_chunk_header";
      v103 = "%{public}s called with null size, no backtrace";
    }
LABEL_273:
    v131 = v132;
    goto LABEL_245;
  }
  uint64_t v17 = *(void *)(v5 + 488);
  if (!v17)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v50 = *(const char **)(*(void *)(a1[4] + 8) + 24);
    *(_DWORD *)buf = 136446466;
    v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
    __int16 v141 = 2048;
    v142 = v50;
    __int16 v51 = (const char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    os_log_type_t v138 = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v51, type, &v138))
    {
      if (type[0] == OS_LOG_TYPE_FAULT)
      {
        uint64_t v52 = __nwlog_obj();
        os_log_type_t v53 = type[0];
        if (os_log_type_enabled(v52, type[0]))
        {
          int v54 = *(const char **)(*(void *)(a1[4] + 8) + 24);
          *(_DWORD *)buf = 136446466;
          v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
          __int16 v141 = 2048;
          v142 = v54;
          __int16 v55 = "%{public}s stream not found for connection %p";
LABEL_130:
          _os_log_impl(&dword_1830D4000, v52, v53, v55, buf, 0x16u);
        }
      }
      else if (v138)
      {
        __int16 v59 = (char *)__nw_create_backtrace_string();
        uint64_t v52 = __nwlog_obj();
        os_log_type_t v53 = type[0];
        BOOL v60 = os_log_type_enabled(v52, type[0]);
        if (v59)
        {
          if (v60)
          {
            __int16 v61 = *(const char **)(*(void *)(a1[4] + 8) + 24);
            *(_DWORD *)buf = 136446722;
            v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
            __int16 v141 = 2048;
            v142 = v61;
            __int16 v143 = 2082;
            v144 = v59;
            _os_log_impl(&dword_1830D4000, v52, v53, "%{public}s stream not found for connection %p, dumping backtrace:%{public}s", buf, 0x20u);
          }
          free(v59);
          goto LABEL_131;
        }
        if (v60)
        {
          v84 = *(const char **)(*(void *)(a1[4] + 8) + 24);
          *(_DWORD *)buf = 136446466;
          v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
          __int16 v141 = 2048;
          v142 = v84;
          __int16 v55 = "%{public}s stream not found for connection %p, no backtrace";
          goto LABEL_130;
        }
      }
      else
      {
        uint64_t v52 = __nwlog_obj();
        os_log_type_t v53 = type[0];
        if (os_log_type_enabled(v52, type[0]))
        {
          BOOL v62 = *(const char **)(*(void *)(a1[4] + 8) + 24);
          *(_DWORD *)buf = 136446466;
          v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
          __int16 v141 = 2048;
          v142 = v62;
          __int16 v55 = "%{public}s stream not found for connection %p, backtrace limit exceeded";
          goto LABEL_130;
        }
      }
    }
LABEL_131:
    if (!v51) {
      goto LABEL_93;
    }
    BOOL v58 = (char *)v51;
    goto LABEL_92;
  }
  *(void *)(v6 + 24) = v17;
  uint64_t v7 = *(void *)(*(void *)(a1[5] + 8) + 24);
  if ((*(_WORD *)(v7 + 428) & 0x100) != 0) {
    goto LABEL_29;
  }
LABEL_110:
  BOOL v64 = *(void **)(v7 + 352);
  unsigned int v65 = nw_frame_unclaimed_length((_DWORD *)a2);
  nw_http_transaction_metadata_increment_outbound_body_transfer_size(v64, v65);
  uint64_t v66 = *(void *)(*(void *)(a1[5] + 8) + 24);
  os_log_type_t v67 = (const char *)nw_frame_unclaimed_length((_DWORD *)a2);
  uint64_t v68 = *(void *)(v66 + 176);
  *(void *)(v66 + 176) = &v67[v68];
  if (__CFADD__(v68, v67))
  {
    if (gLogDatapath)
    {
      v108 = __nwlog_obj();
      if (os_log_type_enabled(v108, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v109 = *(void *)(v66 + 176);
        *(_DWORD *)buf = 136446978;
        v140 = "increment_outbound_body_size";
        __int16 v141 = 2082;
        v142 = "outbound_body_size";
        __int16 v143 = 2048;
        v144 = v67;
        __int16 v145 = 2048;
        *(void *)v146 = v109;
        _os_log_impl(&dword_1830D4000, v108, OS_LOG_TYPE_DEBUG, "%{public}s Overflow: %{public}s, increment %llu, result %llu", buf, 0x2Au);
      }
    }
    *(void *)(v66 + 176) = -1;
  }
  if (!nw_frame_is_metadata_complete(a2)) {
    return 1;
  }
  uint64_t v69 = *(void *)(*(void *)(a1[5] + 8) + 24);
  *(_WORD *)(v69 + 428) |= 0x400u;
  uint64_t v70 = *(void *)(*(void *)(*(void *)(a1[5] + 8) + 24) + 256);
  *(_WORD *)(v70 + 872) |= 0x20u;
  nw_http_transaction_metadata_mark_outbound_message_end(*(void **)(*(void *)(*(void *)(a1[5] + 8) + 24) + 352));
  uint64_t v71 = a1[5];
  uint64_t v72 = *(void *)(*(void *)(v71 + 8) + 24);
  if (!*(unsigned char *)(v72 + 168) || *(void *)(v72 + 160) == *(void *)(v72 + 176)) {
    return 1;
  }
  if ((*(unsigned char *)(v72 + 158) & 1) == 0)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v74 = gLogObj;
    BOOL v75 = os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR);
    uint64_t v71 = a1[5];
    if (v75)
    {
      uint64_t v76 = *(void *)(*(void *)(v71 + 8) + 24);
      uint64_t v77 = (const char *)(v76 + 74);
      uint64_t v78 = *(void *)(v76 + 256);
      if (v78) {
        LODWORD(v78) = *(_DWORD *)(v78 + 860);
      }
      int v79 = *(_DWORD *)(*(void *)(v76 + 248) + 372);
      int v80 = *(_DWORD *)(v76 + 424);
      if (*(unsigned char *)(v76 + 168)) {
        uint64_t v81 = *(void *)(v76 + 160);
      }
      else {
        uint64_t v81 = -1;
      }
      uint64_t v82 = *(void *)(v76 + 176);
      *(_DWORD *)buf = 136448002;
      v140 = "nw_protocol_http1_finalize_output_frames_block_invoke";
      __int16 v141 = 2082;
      v142 = v77;
      __int16 v143 = 2080;
      v144 = " ";
      __int16 v145 = 1024;
      *(_DWORD *)v146 = v79;
      *(_WORD *)&v146[4] = 1024;
      *(_DWORD *)&v146[6] = v78;
      LOWORD(v147) = 1024;
      *(_DWORD *)((char *)&v147 + 2) = v80;
      HIWORD(v147) = 2048;
      uint64_t v148 = v81;
      __int16 v149 = 2048;
      uint64_t v150 = v82;
      _os_log_impl(&dword_1830D4000, v74, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> Content length header %llu does not equal body size %llu", buf, 0x46u);
      uint64_t v71 = a1[5];
    }
  }
  nw_protocol_error(*(void **)(*(void *)(*(void *)(v71 + 8) + 24) + 48), *(void *)(*(void *)(v71 + 8) + 24));
  uint64_t v83 = *(void *)(*(void *)(a1[5] + 8) + 24);
  nw_protocol_disconnected(*(void **)(v83 + 48), v83);
  return 0;
}

uint64_t ___ZL40nw_protocol_http1_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke_139(uint64_t a1, uint64_t a2)
{
  int v3 = *(_WORD *)(a2 + 204) & 0xFFC7 | (*(unsigned __int8 *)(a2 + 206) << 16);
  *(_WORD *)(a2 + 204) &= 0xFFC7u;
  *(unsigned char *)(a2 + 206) = BYTE2(v3);
  uint64_t v5 = a2 + 64;
  int v4 = *(void **)(a2 + 64);
  if (v4)
  {
    uint64_t v6 = (void *)(a2 + 120);
    do
    {
      uint64_t v7 = (void *)*v4;
      uint64_t v8 = (void *)v4[6];
      uint64_t v9 = (void *)*v4;
      if (v8)
      {
        os_release(v8);
        v4[6] = 0;
        uint64_t v9 = (void *)*v4;
      }
      char v10 = (void *)v4[1];
      if (v9)
      {
        v9[1] = v10;
        char v10 = (void *)v4[1];
      }
      else
      {
        *(void *)(a2 + 72) = v10;
      }
      *char v10 = v9;
      if (v4 != v6) {
        free(v4);
      }
      int v4 = v7;
    }
    while (v7);
  }
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = v5;
  uint64_t v11 = *(void **)(a2 + 168);
  if (v11) {
    os_release(v11);
  }
  *(void *)(a2 + 184) = 0;
  *(_OWORD *)(a2 + 168) = 0u;
  *(_OWORD *)(a2 + 152) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(_OWORD *)(a2 + 120) = 0u;
  return 1;
}

uint64_t nw_protocol_http1_get_output_frames(nw_protocol *a1, nw_protocol *a2, uint64_t a3, uint64_t a4, uint64_t a5, nw_frame_array_s *a6)
{
  uint64_t v193 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v182 = "nw_http1_get_http1_protocol";
    BOOL v114 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    if (!__nwlog_fault(v114, &v180, &v179)) {
      goto LABEL_301;
    }
    if (v180 == OS_LOG_TYPE_FAULT)
    {
      v115 = __nwlog_obj();
      os_log_type_t v116 = v180;
      if (!os_log_type_enabled(v115, v180)) {
        goto LABEL_301;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_http1_get_http1_protocol";
      BOOL v117 = "%{public}s called with null protocol";
    }
    else if (v179)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      v115 = __nwlog_obj();
      os_log_type_t v116 = v180;
      BOOL v119 = os_log_type_enabled(v115, v180);
      if (backtrace_string)
      {
        if (v119)
        {
          *(_DWORD *)buf = 136446466;
          v182 = "nw_http1_get_http1_protocol";
          __int16 v183 = 2082;
          *(void *)v184 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v115, v116, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_301:
        if (!v114) {
          goto LABEL_303;
        }
LABEL_302:
        free(v114);
        goto LABEL_303;
      }
      if (!v119) {
        goto LABEL_301;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_http1_get_http1_protocol";
      BOOL v117 = "%{public}s called with null protocol, no backtrace";
    }
    else
    {
      v115 = __nwlog_obj();
      os_log_type_t v116 = v180;
      if (!os_log_type_enabled(v115, v180)) {
        goto LABEL_301;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_http1_get_http1_protocol";
      BOOL v117 = "%{public}s called with null protocol, backtrace limit exceeded";
    }
    goto LABEL_300;
  }
  handle = (char *)a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v182 = "nw_http1_get_http1_protocol";
    BOOL v114 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    if (!__nwlog_fault(v114, &v180, &v179)) {
      goto LABEL_301;
    }
    if (v180 != OS_LOG_TYPE_FAULT)
    {
      if (!v179)
      {
        v115 = __nwlog_obj();
        os_log_type_t v116 = v180;
        if (!os_log_type_enabled(v115, v180)) {
          goto LABEL_301;
        }
        *(_DWORD *)buf = 136446210;
        v182 = "nw_http1_get_http1_protocol";
        BOOL v117 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_300;
      }
      BOOL v120 = (char *)__nw_create_backtrace_string();
      v115 = __nwlog_obj();
      os_log_type_t v116 = v180;
      BOOL v121 = os_log_type_enabled(v115, v180);
      if (!v120)
      {
        if (!v121) {
          goto LABEL_301;
        }
        *(_DWORD *)buf = 136446210;
        v182 = "nw_http1_get_http1_protocol";
        BOOL v117 = "%{public}s called with null handle, no backtrace";
        goto LABEL_300;
      }
      if (v121)
      {
        *(_DWORD *)buf = 136446466;
        v182 = "nw_http1_get_http1_protocol";
        __int16 v183 = 2082;
        *(void *)v184 = v120;
        BOOL v122 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_262:
        _os_log_impl(&dword_1830D4000, v115, v116, v122, buf, 0x16u);
      }
LABEL_263:
      free(v120);
      if (!v114) {
        goto LABEL_303;
      }
      goto LABEL_302;
    }
    v115 = __nwlog_obj();
    os_log_type_t v116 = v180;
    if (!os_log_type_enabled(v115, v180)) {
      goto LABEL_301;
    }
    *(_DWORD *)buf = 136446210;
    v182 = "nw_http1_get_http1_protocol";
    BOOL v117 = "%{public}s called with null handle";
LABEL_300:
    _os_log_impl(&dword_1830D4000, v115, v116, v117, buf, 0xCu);
    goto LABEL_301;
  }
  int v12 = *((_DWORD *)handle + 6);
  uint64_t v13 = (uint64_t *)a1->handle;
  if (v12 == 1) {
    goto LABEL_10;
  }
  if (v12 != 2)
  {
    if (v12 != 3)
    {
LABEL_303:
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      __int16 v61 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t v180 = OS_LOG_TYPE_ERROR;
      char v179 = 0;
      if (!__nwlog_fault(v61, &v180, &v179)) {
        goto LABEL_335;
      }
      if (v180 == OS_LOG_TYPE_FAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v62 = gLogObj;
        os_log_type_t v63 = v180;
        if (!os_log_type_enabled((os_log_t)gLogObj, v180)) {
          goto LABEL_335;
        }
        *(_DWORD *)buf = 136446210;
        v182 = "nw_protocol_http1_get_output_frames";
        BOOL v64 = "%{public}s called with null http1";
        goto LABEL_332;
      }
      if (!v179)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v62 = gLogObj;
        os_log_type_t v63 = v180;
        if (!os_log_type_enabled((os_log_t)gLogObj, v180)) {
          goto LABEL_335;
        }
        *(_DWORD *)buf = 136446210;
        v182 = "nw_protocol_http1_get_output_frames";
        BOOL v64 = "%{public}s called with null http1, backtrace limit exceeded";
        goto LABEL_332;
      }
      v142 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      __int16 v143 = gLogObj;
      os_log_type_t v144 = v180;
      BOOL v145 = os_log_type_enabled((os_log_t)gLogObj, v180);
      if (v142)
      {
        if (v145)
        {
          *(_DWORD *)buf = 136446466;
          v182 = "nw_protocol_http1_get_output_frames";
          __int16 v183 = 2082;
          *(void *)v184 = v142;
          v146 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_328:
          _os_log_impl(&dword_1830D4000, v143, v144, v146, buf, 0x16u);
        }
LABEL_329:
        free(v142);
        goto LABEL_335;
      }
      if (!v145) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s called with null http1, no backtrace";
LABEL_341:
      __int16 v91 = v143;
      os_log_type_t v92 = v144;
      goto LABEL_333;
    }
    uint64_t v14 = *((void *)handle + 2);
    if (v14)
    {
      uint64_t v13 = (uint64_t *)(v14 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v182 = "nw_http1_get_http1_protocol";
    BOOL v114 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    if (!__nwlog_fault(v114, &v180, &v179)) {
      goto LABEL_301;
    }
    if (v180 == OS_LOG_TYPE_FAULT)
    {
      v115 = __nwlog_obj();
      os_log_type_t v116 = v180;
      if (!os_log_type_enabled(v115, v180)) {
        goto LABEL_301;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_http1_get_http1_protocol";
      BOOL v117 = "%{public}s called with null handle->http1_connection";
      goto LABEL_300;
    }
    if (!v179)
    {
      v115 = __nwlog_obj();
      os_log_type_t v116 = v180;
      if (!os_log_type_enabled(v115, v180)) {
        goto LABEL_301;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_http1_get_http1_protocol";
      BOOL v117 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
      goto LABEL_300;
    }
    BOOL v120 = (char *)__nw_create_backtrace_string();
    v115 = __nwlog_obj();
    os_log_type_t v116 = v180;
    BOOL v133 = os_log_type_enabled(v115, v180);
    if (!v120)
    {
      if (!v133) {
        goto LABEL_301;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_http1_get_http1_protocol";
      BOOL v117 = "%{public}s called with null handle->http1_connection, no backtrace";
      goto LABEL_300;
    }
    if (v133)
    {
      *(_DWORD *)buf = 136446466;
      v182 = "nw_http1_get_http1_protocol";
      __int16 v183 = 2082;
      *(void *)v184 = v120;
      BOOL v122 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
      goto LABEL_262;
    }
    goto LABEL_263;
  }
  uint64_t v15 = *((void *)handle + 1);
  if (!v15)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v182 = "nw_http1_get_http1_protocol";
    BOOL v114 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    if (!__nwlog_fault(v114, &v180, &v179)) {
      goto LABEL_301;
    }
    if (v180 == OS_LOG_TYPE_FAULT)
    {
      v115 = __nwlog_obj();
      os_log_type_t v116 = v180;
      if (!os_log_type_enabled(v115, v180)) {
        goto LABEL_301;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_http1_get_http1_protocol";
      BOOL v117 = "%{public}s called with null handle->http1_stream";
      goto LABEL_300;
    }
    if (!v179)
    {
      v115 = __nwlog_obj();
      os_log_type_t v116 = v180;
      if (!os_log_type_enabled(v115, v180)) {
        goto LABEL_301;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_http1_get_http1_protocol";
      BOOL v117 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_300;
    }
    BOOL v120 = (char *)__nw_create_backtrace_string();
    v115 = __nwlog_obj();
    os_log_type_t v116 = v180;
    BOOL v134 = os_log_type_enabled(v115, v180);
    if (!v120)
    {
      if (!v134) {
        goto LABEL_301;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_http1_get_http1_protocol";
      BOOL v117 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_300;
    }
    if (v134)
    {
      *(_DWORD *)buf = 136446466;
      v182 = "nw_http1_get_http1_protocol";
      __int16 v183 = 2082;
      *(void *)v184 = v120;
      BOOL v122 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_262;
    }
    goto LABEL_263;
  }
  uint64_t v13 = (uint64_t *)(v15 + 248);
LABEL_10:
  uint64_t v16 = *v13;
  if (!*v13) {
    goto LABEL_303;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v182 = "nw_protocol_http1_get_output_frames";
    __int16 v61 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    if (!__nwlog_fault(v61, &v180, &v179)) {
      goto LABEL_335;
    }
    if (v180 == OS_LOG_TYPE_FAULT)
    {
      BOOL v62 = __nwlog_obj();
      os_log_type_t v63 = v180;
      if (!os_log_type_enabled(v62, v180)) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s called with null input_protocol";
      goto LABEL_332;
    }
    if (!v179)
    {
      BOOL v62 = __nwlog_obj();
      os_log_type_t v63 = v180;
      if (!os_log_type_enabled(v62, v180)) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s called with null input_protocol, backtrace limit exceeded";
      goto LABEL_332;
    }
    uint64_t v69 = (char *)__nw_create_backtrace_string();
    BOOL v62 = __nwlog_obj();
    os_log_type_t v63 = v180;
    BOOL v127 = os_log_type_enabled(v62, v180);
    if (!v69)
    {
      if (!v127) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s called with null input_protocol, no backtrace";
      goto LABEL_332;
    }
    if (v127)
    {
      *(_DWORD *)buf = 136446466;
      v182 = "nw_protocol_http1_get_output_frames";
      __int16 v183 = 2082;
      *(void *)v184 = v69;
      uint64_t v71 = "%{public}s called with null input_protocol, dumping backtrace:%{public}s";
      goto LABEL_96;
    }
LABEL_97:
    free(v69);
    goto LABEL_335;
  }
  if (!a6)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v182 = "nw_protocol_http1_get_output_frames";
    __int16 v61 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    if (!__nwlog_fault(v61, &v180, &v179)) {
      goto LABEL_335;
    }
    if (v180 == OS_LOG_TYPE_FAULT)
    {
      BOOL v62 = __nwlog_obj();
      os_log_type_t v63 = v180;
      if (!os_log_type_enabled(v62, v180)) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s called with null return_array";
      goto LABEL_332;
    }
    if (!v179)
    {
      BOOL v62 = __nwlog_obj();
      os_log_type_t v63 = v180;
      if (!os_log_type_enabled(v62, v180)) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s called with null return_array, backtrace limit exceeded";
      goto LABEL_332;
    }
    uint64_t v69 = (char *)__nw_create_backtrace_string();
    BOOL v62 = __nwlog_obj();
    os_log_type_t v63 = v180;
    BOOL v128 = os_log_type_enabled(v62, v180);
    if (!v69)
    {
      if (!v128) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s called with null return_array, no backtrace";
      goto LABEL_332;
    }
    if (v128)
    {
      *(_DWORD *)buf = 136446466;
      v182 = "nw_protocol_http1_get_output_frames";
      __int16 v183 = 2082;
      *(void *)v184 = v69;
      uint64_t v71 = "%{public}s called with null return_array, dumping backtrace:%{public}s";
      goto LABEL_96;
    }
    goto LABEL_97;
  }
  if (v12 != 2)
  {
    if (v12 != 3)
    {
LABEL_320:
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      __int16 v61 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t v180 = OS_LOG_TYPE_ERROR;
      char v179 = 0;
      if (!__nwlog_fault(v61, &v180, &v179)) {
        goto LABEL_335;
      }
      if (v180 == OS_LOG_TYPE_FAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v62 = gLogObj;
        os_log_type_t v63 = v180;
        if (!os_log_type_enabled((os_log_t)gLogObj, v180)) {
          goto LABEL_335;
        }
        *(_DWORD *)buf = 136446210;
        v182 = "nw_protocol_http1_get_output_frames";
        BOOL v64 = "%{public}s called with null http1_stream";
        goto LABEL_332;
      }
      if (!v179)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v62 = gLogObj;
        os_log_type_t v63 = v180;
        if (!os_log_type_enabled((os_log_t)gLogObj, v180)) {
          goto LABEL_335;
        }
        *(_DWORD *)buf = 136446210;
        v182 = "nw_protocol_http1_get_output_frames";
        BOOL v64 = "%{public}s called with null http1_stream, backtrace limit exceeded";
        goto LABEL_332;
      }
      v142 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      __int16 v143 = gLogObj;
      os_log_type_t v144 = v180;
      BOOL v147 = os_log_type_enabled((os_log_t)gLogObj, v180);
      if (v142)
      {
        if (v147)
        {
          *(_DWORD *)buf = 136446466;
          v182 = "nw_protocol_http1_get_output_frames";
          __int16 v183 = 2082;
          *(void *)v184 = v142;
          v146 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
          goto LABEL_328;
        }
        goto LABEL_329;
      }
      if (!v147) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s called with null http1_stream, no backtrace";
      goto LABEL_341;
    }
    uint64_t v17 = *((void *)handle + 2);
    if (v17)
    {
      unsigned int v18 = (uint64_t *)(v17 + 488);
      goto LABEL_18;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v182 = "nw_http1_get_stream_for_protocol";
    v129 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    if (__nwlog_fault(v129, &v180, &v179))
    {
      if (v180 == OS_LOG_TYPE_FAULT)
      {
        BOOL v130 = __nwlog_obj();
        os_log_type_t v131 = v180;
        if (!os_log_type_enabled(v130, v180)) {
          goto LABEL_318;
        }
        *(_DWORD *)buf = 136446210;
        v182 = "nw_http1_get_stream_for_protocol";
        v132 = "%{public}s called with null handle->http1_connection";
        goto LABEL_317;
      }
      if (!v179)
      {
        BOOL v130 = __nwlog_obj();
        os_log_type_t v131 = v180;
        if (!os_log_type_enabled(v130, v180)) {
          goto LABEL_318;
        }
        *(_DWORD *)buf = 136446210;
        v182 = "nw_http1_get_stream_for_protocol";
        v132 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_317;
      }
      int v135 = (char *)__nw_create_backtrace_string();
      BOOL v130 = __nwlog_obj();
      os_log_type_t v131 = v180;
      BOOL v136 = os_log_type_enabled(v130, v180);
      if (v135)
      {
        if (v136)
        {
          *(_DWORD *)buf = 136446466;
          v182 = "nw_http1_get_stream_for_protocol";
          __int16 v183 = 2082;
          *(void *)v184 = v135;
          _os_log_impl(&dword_1830D4000, v130, v131, "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v135);
        goto LABEL_318;
      }
      if (v136)
      {
        *(_DWORD *)buf = 136446210;
        v182 = "nw_http1_get_stream_for_protocol";
        v132 = "%{public}s called with null handle->http1_connection, no backtrace";
LABEL_317:
        _os_log_impl(&dword_1830D4000, v130, v131, v132, buf, 0xCu);
      }
    }
LABEL_318:
    if (v129) {
      free(v129);
    }
    goto LABEL_320;
  }
  unsigned int v18 = (uint64_t *)(handle + 8);
LABEL_18:
  uint64_t v19 = *v18;
  if (!*v18) {
    goto LABEL_320;
  }
  if ((*(unsigned char *)(v19 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      v123 = __nwlog_obj();
      if (os_log_type_enabled(v123, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v124 = *(void *)(v19 + 256);
        int v125 = *(_DWORD *)(*(void *)(v19 + 248) + 372);
        if (v124) {
          LODWORD(v124) = *(_DWORD *)(v124 + 860);
        }
        int v126 = *(_DWORD *)(v19 + 424);
        *(_DWORD *)buf = 136448258;
        v182 = "nw_protocol_http1_get_output_frames";
        __int16 v183 = 2082;
        *(void *)v184 = v19 + 74;
        *(_WORD *)&v184[8] = 2080;
        *(void *)&v184[10] = " ";
        __int16 v185 = 1024;
        *(_DWORD *)v186 = v125;
        *(_WORD *)&v186[4] = 1024;
        *(_DWORD *)&v186[6] = v124;
        LOWORD(v187) = 1024;
        *(_DWORD *)((char *)&v187 + 2) = v126;
        HIWORD(v187) = 1024;
        int v188 = a3;
        __int16 v189 = 1024;
        int v190 = a4;
        __int16 v191 = 1024;
        int v192 = a5;
        _os_log_impl(&dword_1830D4000, v123, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called with min bytes %u, max bytes %u, max frames %u", buf, 0x44u);
      }
    }
  }
  unsigned int v20 = *(uint64_t **)(v19 + 256);
  if (!v20)
  {
    if (*(unsigned char *)(v19 + 158)) {
      return 0;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v21 = gLogObj;
    if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG)) {
      return 0;
    }
    uint64_t v26 = *(void *)(v19 + 256);
    int v27 = *(_DWORD *)(*(void *)(v19 + 248) + 372);
    if (v26) {
      LODWORD(v26) = *(_DWORD *)(v26 + 860);
    }
    int v28 = *(_DWORD *)(v19 + 424);
    *(_DWORD *)buf = 136447490;
    v182 = "nw_protocol_http1_get_output_frames";
    __int16 v183 = 2082;
    *(void *)v184 = v19 + 74;
    *(_WORD *)&v184[8] = 2080;
    *(void *)&v184[10] = " ";
    __int16 v185 = 1024;
    *(_DWORD *)v186 = v27;
    *(_WORD *)&v186[4] = 1024;
    *(_DWORD *)&v186[6] = v26;
    LOWORD(v187) = 1024;
    *(_DWORD *)((char *)&v187 + 2) = v28;
    unsigned int v25 = "%{public}s %{public}s%s<i%u:c%u:s%u> no connection, returning 0 frames";
    goto LABEL_33;
  }
  if (v20[81])
  {
    if (*(unsigned char *)(v19 + 158)) {
      return 0;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v21 = gLogObj;
    if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG)) {
      return 0;
    }
    uint64_t v22 = *(void *)(v19 + 256);
    int v23 = *(_DWORD *)(*(void *)(v19 + 248) + 372);
    if (v22) {
      LODWORD(v22) = *(_DWORD *)(v22 + 860);
    }
    int v24 = *(_DWORD *)(v19 + 424);
    *(_DWORD *)buf = 136447490;
    v182 = "nw_protocol_http1_get_output_frames";
    __int16 v183 = 2082;
    *(void *)v184 = v19 + 74;
    *(_WORD *)&v184[8] = 2080;
    *(void *)&v184[10] = " ";
    __int16 v185 = 1024;
    *(_DWORD *)v186 = v23;
    *(_WORD *)&v186[4] = 1024;
    *(_DWORD *)&v186[6] = v22;
    LOWORD(v187) = 1024;
    *(_DWORD *)((char *)&v187 + 2) = v24;
    unsigned int v25 = "%{public}s %{public}s%s<i%u:c%u:s%u> still sending the initial frame, returning 0 frames";
LABEL_33:
    _os_log_impl(&dword_1830D4000, v21, OS_LOG_TYPE_DEBUG, v25, buf, 0x32u);
    return 0;
  }
  __int16 v29 = *(_WORD *)(v19 + 428);
  if ((v29 & 2) == 0)
  {
    if ((v29 & 0x80) != 0)
    {
      if (*(unsigned char *)(v19 + 158) & 1 | (gLogDatapath == 0)) {
        return 0;
      }
      int v21 = __nwlog_obj();
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG)) {
        return 0;
      }
      uint64_t v41 = *(void *)(v19 + 256);
      int v42 = *(_DWORD *)(*(void *)(v19 + 248) + 372);
      if (v41) {
        LODWORD(v41) = *(_DWORD *)(v41 + 860);
      }
      int v43 = *(_DWORD *)(v19 + 424);
      *(_DWORD *)buf = 136447490;
      v182 = "nw_protocol_http1_get_output_frames";
      __int16 v183 = 2082;
      *(void *)v184 = v19 + 74;
      *(_WORD *)&v184[8] = 2080;
      *(void *)&v184[10] = " ";
      __int16 v185 = 1024;
      *(_DWORD *)v186 = v42;
      *(_WORD *)&v186[4] = 1024;
      *(_DWORD *)&v186[6] = v41;
      LOWORD(v187) = 1024;
      *(_DWORD *)((char *)&v187 + 2) = v43;
      unsigned int v25 = "%{public}s %{public}s%s<i%u:c%u:s%u> already vended initial outbound frame, cannot send more";
      goto LABEL_33;
    }
    if (!(*(unsigned char *)(v19 + 158) & 1 | (gLogDatapath == 0)))
    {
      os_log_type_t v138 = __nwlog_obj();
      if (os_log_type_enabled(v138, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v139 = *(void *)(v19 + 256);
        int v140 = *(_DWORD *)(*(void *)(v19 + 248) + 372);
        if (v139) {
          LODWORD(v139) = *(_DWORD *)(v139 + 860);
        }
        int v141 = *(_DWORD *)(v19 + 424);
        *(_DWORD *)buf = 136447490;
        v182 = "nw_protocol_http1_get_output_frames";
        __int16 v183 = 2082;
        *(void *)v184 = v19 + 74;
        *(_WORD *)&v184[8] = 2080;
        *(void *)&v184[10] = " ";
        __int16 v185 = 1024;
        *(_DWORD *)v186 = v140;
        *(_WORD *)&v186[4] = 1024;
        *(_DWORD *)&v186[6] = v139;
        LOWORD(v187) = 1024;
        *(_DWORD *)((char *)&v187 + 2) = v141;
        _os_log_impl(&dword_1830D4000, v138, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> outbound headers not yet complete, creating frame", buf, 0x32u);
      }
    }
    a6->tqh_first = 0;
    a6->tqh_last = &a6->tqh_first;
    if (a4 >= 0x20000) {
      int v30 = 0x20000;
    }
    else {
      int v30 = a4;
    }
    if (a4 > 0x20000 && (*(unsigned char *)(v16 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        v157 = __nwlog_obj();
        if (os_log_type_enabled(v157, OS_LOG_TYPE_DEBUG))
        {
          int v158 = *(_DWORD *)(v16 + 372);
          *(_DWORD *)buf = 136447490;
          v182 = "nw_protocol_http1_get_output_frames";
          __int16 v183 = 2082;
          *(void *)v184 = v16 + 74;
          *(_WORD *)&v184[8] = 2080;
          *(void *)&v184[10] = " ";
          __int16 v185 = 1024;
          *(_DWORD *)v186 = v158;
          *(_WORD *)&v186[4] = 1024;
          *(_DWORD *)&v186[6] = v30;
          LOWORD(v187) = 1024;
          *(_DWORD *)((char *)&v187 + 2) = a4;
          _os_log_impl(&dword_1830D4000, v157, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> capping output frame size to %u, original request was %u", buf, 0x32u);
        }
      }
    }
    if (v30)
    {
      size_t v31 = (v30 + 17);
      int v32 = 7;
      int v174 = 10;
      if ((*(unsigned char *)(v16 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          unsigned int v33 = __nwlog_obj();
          int v174 = 10;
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG))
          {
            int v34 = *(_DWORD *)(v16 + 372);
            *(_DWORD *)buf = 136447746;
            v182 = "nw_protocol_http1_get_output_frames";
            __int16 v183 = 2082;
            *(void *)v184 = v16 + 74;
            *(_WORD *)&v184[8] = 2080;
            *(void *)&v184[10] = " ";
            __int16 v185 = 1024;
            *(_DWORD *)v186 = v34;
            *(_WORD *)&v186[4] = 1024;
            *(_DWORD *)&v186[6] = v30 + 17;
            uint64_t v187 = 0x4000000000A0400;
            int v188 = 7;
            _os_log_impl(&dword_1830D4000, v33, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> adjusted output frame size is %u (start: %u, end: %u)", buf, 0x38u);
          }
        }
      }
    }
    else
    {
      int v174 = 0;
      int v32 = 0;
      size_t v31 = 0;
    }
    uint64_t frame = nw_frame_cache_create_frame(v20 + 87, v31);
    if (frame)
    {
      uint64_t v56 = frame;
      if ((*(_WORD *)(frame + 204) & 4) != 0)
      {
        char v68 = *(unsigned char *)(frame + 216);
        *(void *)(frame + 208) = v20;
        *(unsigned char *)(frame + 216) = v68 & 0xFC;
LABEL_138:
        if (v31)
        {
          nw_frame_claim(v56, v55, v174, v32);
          if ((*(unsigned char *)(v16 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              v159 = __nwlog_obj();
              if (os_log_type_enabled(v159, OS_LOG_TYPE_DEBUG))
              {
                int v160 = *(_DWORD *)(v16 + 372);
                *(_DWORD *)buf = 136447746;
                v182 = "nw_protocol_http1_get_output_frames";
                __int16 v183 = 2082;
                *(void *)v184 = v16 + 74;
                *(_WORD *)&v184[8] = 2080;
                *(void *)&v184[10] = " ";
                __int16 v185 = 1024;
                *(_DWORD *)v186 = v160;
                *(_WORD *)&v186[4] = 1024;
                *(_DWORD *)&v186[6] = v174;
                LOWORD(v187) = 1024;
                *(_DWORD *)((char *)&v187 + 2) = v32;
                HIWORD(v187) = 1024;
                int v188 = v31;
                _os_log_impl(&dword_1830D4000, v159, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> claiming chunked encoding size (start: %u, end: %u) from frame of %u bytes", buf, 0x38u);
              }
            }
          }
        }
        *(void *)(v56 + 16) = 0;
        v89 = (uint64_t *)v20[86];
        *(void *)(v56 + 24) = v89;
        uint64_t *v89 = v56;
        v20[86] = v56 + 16;
        *(void *)(v56 + 80) = nw_http1_connection_output_frame_finalizer;
        *(void *)(v56 + 88) = v16;
        if ((*(unsigned char *)(v19 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            v153 = __nwlog_obj();
            if (os_log_type_enabled(v153, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v154 = *(void *)(v19 + 256);
              int v155 = *(_DWORD *)(*(void *)(v19 + 248) + 372);
              if (v154) {
                LODWORD(v154) = *(_DWORD *)(v154 + 860);
              }
              int v156 = *(_DWORD *)(v19 + 424);
              *(_DWORD *)buf = 136447746;
              v182 = "nw_protocol_http1_get_output_frames";
              __int16 v183 = 2082;
              *(void *)v184 = v19 + 74;
              *(_WORD *)&v184[8] = 2080;
              *(void *)&v184[10] = " ";
              __int16 v185 = 1024;
              *(_DWORD *)v186 = v155;
              *(_WORD *)&v186[4] = 1024;
              *(_DWORD *)&v186[6] = v154;
              LOWORD(v187) = 1024;
              *(_DWORD *)((char *)&v187 + 2) = v156;
              HIWORD(v187) = 1024;
              int v188 = v31;
              _os_log_impl(&dword_1830D4000, v153, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> returning 1 frame of %u bytes", buf, 0x38u);
            }
          }
        }
        *(void *)(v56 + 32) = 0;
        tqh_last = a6->tqh_last;
        *(void *)(v56 + 40) = tqh_last;
        *tqh_last = (nw_frame *)v56;
        a6->tqh_last = (nw_frame **)(v56 + 32);
        *(_WORD *)(v19 + 428) |= 0x80u;
        return 1;
      }
      int v168 = v32;
      int loga = v31;
      __nwlog_obj();
      *(_DWORD *)buf = 136446466;
      v182 = "nw_http1_frame_metadata_reset";
      __int16 v183 = 2048;
      *(void *)v184 = v56;
      BOOL v57 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t v180 = OS_LOG_TYPE_ERROR;
      char v179 = 0;
      if (__nwlog_fault(v57, &v180, &v179))
      {
        if (v180 == OS_LOG_TYPE_FAULT)
        {
          BOOL v58 = __nwlog_obj();
          os_log_type_t v59 = v180;
          if (os_log_type_enabled(v58, v180))
          {
            *(_DWORD *)buf = 136446466;
            v182 = "nw_http1_frame_metadata_reset";
            __int16 v183 = 2048;
            *(void *)v184 = v56;
            BOOL v60 = "%{public}s frame %p has no metadata";
LABEL_133:
            os_log_type_t v87 = v58;
            os_log_type_t v88 = v59;
LABEL_134:
            _os_log_impl(&dword_1830D4000, v87, v88, v60, buf, 0x16u);
          }
        }
        else if (v179)
        {
          uint64_t v78 = (char *)__nw_create_backtrace_string();
          int v79 = __nwlog_obj();
          os_log_type_t type = v180;
          BOOL v80 = os_log_type_enabled(v79, v180);
          if (v78)
          {
            if (v80)
            {
              *(_DWORD *)buf = 136446722;
              v182 = "nw_http1_frame_metadata_reset";
              __int16 v183 = 2048;
              *(void *)v184 = v56;
              *(_WORD *)&v184[8] = 2082;
              *(void *)&v184[10] = v78;
              _os_log_impl(&dword_1830D4000, v79, type, "%{public}s frame %p has no metadata, dumping backtrace:%{public}s", buf, 0x20u);
            }
            free(v78);
            goto LABEL_135;
          }
          if (v80)
          {
            *(_DWORD *)buf = 136446466;
            v182 = "nw_http1_frame_metadata_reset";
            __int16 v183 = 2048;
            *(void *)v184 = v56;
            BOOL v60 = "%{public}s frame %p has no metadata, no backtrace";
            os_log_type_t v87 = v79;
            os_log_type_t v88 = type;
            goto LABEL_134;
          }
        }
        else
        {
          BOOL v58 = __nwlog_obj();
          os_log_type_t v59 = v180;
          if (os_log_type_enabled(v58, v180))
          {
            *(_DWORD *)buf = 136446466;
            v182 = "nw_http1_frame_metadata_reset";
            __int16 v183 = 2048;
            *(void *)v184 = v56;
            BOOL v60 = "%{public}s frame %p has no metadata, backtrace limit exceeded";
            goto LABEL_133;
          }
        }
      }
LABEL_135:
      LODWORD(v31) = loga;
      if (v57) {
        free(v57);
      }
      int v32 = v168;
      goto LABEL_138;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446466;
    v182 = "nw_protocol_http1_get_output_frames";
    __int16 v183 = 1024;
    *(_DWORD *)v184 = v31;
    __int16 v61 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    if (__nwlog_fault(v61, &v180, &v179))
    {
      if (v180 == OS_LOG_TYPE_FAULT)
      {
        unsigned int v65 = __nwlog_obj();
        os_log_type_t v66 = v180;
        if (!os_log_type_enabled(v65, v180)) {
          goto LABEL_335;
        }
        *(_DWORD *)buf = 136446466;
        v182 = "nw_protocol_http1_get_output_frames";
        __int16 v183 = 1024;
        *(_DWORD *)v184 = v31;
        BOOL v64 = "%{public}s failed to create/reuse output frame of length %u";
        goto LABEL_148;
      }
      if (!v179)
      {
        unsigned int v65 = __nwlog_obj();
        os_log_type_t v66 = v180;
        if (!os_log_type_enabled(v65, v180)) {
          goto LABEL_335;
        }
        *(_DWORD *)buf = 136446466;
        v182 = "nw_protocol_http1_get_output_frames";
        __int16 v183 = 1024;
        *(_DWORD *)v184 = v31;
        BOOL v64 = "%{public}s failed to create/reuse output frame of length %u, backtrace limit exceeded";
        goto LABEL_148;
      }
      int v72 = v31;
      __int16 v73 = (char *)__nw_create_backtrace_string();
      unsigned int v65 = __nwlog_obj();
      os_log_type_t v66 = v180;
      BOOL v74 = os_log_type_enabled(v65, v180);
      if (v73)
      {
        if (v74)
        {
          *(_DWORD *)buf = 136446722;
          v182 = "nw_protocol_http1_get_output_frames";
          __int16 v183 = 1024;
          *(_DWORD *)v184 = v72;
          *(_WORD *)&v184[4] = 2082;
          *(void *)&v184[6] = v73;
          _os_log_impl(&dword_1830D4000, v65, v66, "%{public}s failed to create/reuse output frame of length %u, dumping backtrace:%{public}s", buf, 0x1Cu);
        }
        free(v73);
        goto LABEL_335;
      }
      if (v74)
      {
        *(_DWORD *)buf = 136446466;
        v182 = "nw_protocol_http1_get_output_frames";
        __int16 v183 = 1024;
        *(_DWORD *)v184 = v72;
        BOOL v64 = "%{public}s failed to create/reuse output frame of length %u, no backtrace";
LABEL_148:
        __int16 v91 = v65;
        os_log_type_t v92 = v66;
        uint32_t v93 = 18;
LABEL_334:
        _os_log_impl(&dword_1830D4000, v91, v92, v64, buf, v93);
      }
    }
LABEL_335:
    if (v61) {
      free(v61);
    }
    return 0;
  }
  if (!(a4 | a3) && (*(_WORD *)(v19 + 428) & 0x100) != 0)
  {
    uint64_t v35 = nw_frame_cache_create_frame(v20 + 87, 0);
    if (v35)
    {
      uint64_t v36 = v35;
      if ((*(_WORD *)(v35 + 204) & 4) != 0)
      {
        char v67 = *(unsigned char *)(v35 + 216);
        *(void *)(v35 + 208) = v20;
        *(unsigned char *)(v35 + 216) = v67 & 0xFC | 2;
LABEL_128:
        *(void *)(v36 + 16) = 0;
        v84 = (void *)v20[86];
        *(void *)(v36 + 24) = v84;
        void *v84 = v36;
        v20[86] = v36 + 16;
        *(void *)(v36 + 80) = nw_http1_connection_output_frame_finalizer;
        *(void *)(v36 + 88) = v16;
        if ((*(unsigned char *)(v19 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            __int16 v149 = __nwlog_obj();
            if (os_log_type_enabled(v149, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v150 = *(void *)(v19 + 256);
              int v151 = *(_DWORD *)(*(void *)(v19 + 248) + 372);
              if (v150) {
                LODWORD(v150) = *(_DWORD *)(v150 + 860);
              }
              int v152 = *(_DWORD *)(v19 + 424);
              *(_DWORD *)buf = 136447490;
              v182 = "nw_protocol_http1_get_output_frames";
              __int16 v183 = 2082;
              *(void *)v184 = v19 + 74;
              *(_WORD *)&v184[8] = 2080;
              *(void *)&v184[10] = " ";
              __int16 v185 = 1024;
              *(_DWORD *)v186 = v151;
              *(_WORD *)&v186[4] = 1024;
              *(_DWORD *)&v186[6] = v150;
              LOWORD(v187) = 1024;
              *(_DWORD *)((char *)&v187 + 2) = v152;
              _os_log_impl(&dword_1830D4000, v149, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> returning 1 frame of 0 bytes for potential complete context", buf, 0x32u);
            }
          }
        }
        *(void *)(v36 + 32) = 0;
        uint64_t v85 = a6->tqh_last;
        *(void *)(v36 + 40) = v85;
        *uint64_t v85 = (nw_frame *)v36;
        a6->tqh_last = (nw_frame **)(v36 + 32);
        return 1;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446466;
      v182 = "nw_http1_frame_metadata_reset";
      __int16 v183 = 2048;
      *(void *)v184 = v36;
      unsigned int v37 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t v180 = OS_LOG_TYPE_ERROR;
      char v179 = 0;
      if (__nwlog_fault(v37, &v180, &v179))
      {
        if (v180 == OS_LOG_TYPE_FAULT)
        {
          char v38 = __nwlog_obj();
          os_log_type_t v39 = v180;
          if (!os_log_type_enabled(v38, v180)) {
            goto LABEL_126;
          }
          *(_DWORD *)buf = 136446466;
          v182 = "nw_http1_frame_metadata_reset";
          __int16 v183 = 2048;
          *(void *)v184 = v36;
          unsigned int v40 = "%{public}s frame %p has no metadata";
LABEL_124:
          uint64_t v83 = v38;
LABEL_125:
          _os_log_impl(&dword_1830D4000, v83, v39, v40, buf, 0x16u);
          goto LABEL_126;
        }
        if (!v179)
        {
          char v38 = __nwlog_obj();
          os_log_type_t v39 = v180;
          if (!os_log_type_enabled(v38, v180)) {
            goto LABEL_126;
          }
          *(_DWORD *)buf = 136446466;
          v182 = "nw_http1_frame_metadata_reset";
          __int16 v183 = 2048;
          *(void *)v184 = v36;
          unsigned int v40 = "%{public}s frame %p has no metadata, backtrace limit exceeded";
          goto LABEL_124;
        }
        BOOL v75 = (char *)__nw_create_backtrace_string();
        uint64_t v76 = __nwlog_obj();
        os_log_type_t v39 = v180;
        logb = v76;
        BOOL v77 = os_log_type_enabled(v76, v180);
        if (v75)
        {
          if (v77)
          {
            *(_DWORD *)buf = 136446722;
            v182 = "nw_http1_frame_metadata_reset";
            __int16 v183 = 2048;
            *(void *)v184 = v36;
            *(_WORD *)&v184[8] = 2082;
            *(void *)&v184[10] = v75;
            _os_log_impl(&dword_1830D4000, logb, v39, "%{public}s frame %p has no metadata, dumping backtrace:%{public}s", buf, 0x20u);
          }
          free(v75);
          goto LABEL_126;
        }
        if (v77)
        {
          *(_DWORD *)buf = 136446466;
          v182 = "nw_http1_frame_metadata_reset";
          __int16 v183 = 2048;
          *(void *)v184 = v36;
          unsigned int v40 = "%{public}s frame %p has no metadata, no backtrace";
          uint64_t v83 = logb;
          goto LABEL_125;
        }
      }
LABEL_126:
      if (v37) {
        free(v37);
      }
      goto LABEL_128;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v182 = "nw_protocol_http1_get_output_frames";
    __int16 v61 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    if (!__nwlog_fault(v61, &v180, &v179)) {
      goto LABEL_335;
    }
    if (v180 == OS_LOG_TYPE_FAULT)
    {
      BOOL v62 = __nwlog_obj();
      os_log_type_t v63 = v180;
      if (!os_log_type_enabled(v62, v180)) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s failed to create/reuse potential final output frame of length 0";
LABEL_332:
      __int16 v91 = v62;
      os_log_type_t v92 = v63;
LABEL_333:
      uint32_t v93 = 12;
      goto LABEL_334;
    }
    if (!v179)
    {
      BOOL v62 = __nwlog_obj();
      os_log_type_t v63 = v180;
      if (!os_log_type_enabled(v62, v180)) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s failed to create/reuse potential final output frame of length 0, backtrace limit exceeded";
      goto LABEL_332;
    }
    uint64_t v69 = (char *)__nw_create_backtrace_string();
    BOOL v62 = __nwlog_obj();
    os_log_type_t v63 = v180;
    BOOL v70 = os_log_type_enabled(v62, v180);
    if (!v69)
    {
      if (!v70) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s failed to create/reuse potential final output frame of length 0, no backtrace";
      goto LABEL_332;
    }
    if (v70)
    {
      *(_DWORD *)buf = 136446466;
      v182 = "nw_protocol_http1_get_output_frames";
      __int16 v183 = 2082;
      *(void *)v184 = v69;
      uint64_t v71 = "%{public}s failed to create/reuse potential final output frame of length 0, dumping backtrace:%{public}s";
LABEL_96:
      _os_log_impl(&dword_1830D4000, v62, v63, v71, buf, 0x16u);
      goto LABEL_97;
    }
    goto LABEL_97;
  }
  uint64_t v44 = v20[4];
  if (!v44 || (uint64_t v45 = *(void *)(v44 + 24)) == 0 || !*(void *)(v45 + 88))
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    v182 = "nw_protocol_http1_get_output_frames";
    __int16 v61 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    if (!__nwlog_fault(v61, &v180, &v179)) {
      goto LABEL_335;
    }
    if (v180 == OS_LOG_TYPE_FAULT)
    {
      BOOL v62 = __nwlog_obj();
      os_log_type_t v63 = v180;
      if (!os_log_type_enabled(v62, v180)) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s cannot get output frames, output handler missing callback";
      goto LABEL_332;
    }
    if (!v179)
    {
      BOOL v62 = __nwlog_obj();
      os_log_type_t v63 = v180;
      if (!os_log_type_enabled(v62, v180)) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s cannot get output frames, output handler missing callback, backtrace limit exceeded";
      goto LABEL_332;
    }
    uint64_t v69 = (char *)__nw_create_backtrace_string();
    BOOL v62 = __nwlog_obj();
    os_log_type_t v63 = v180;
    BOOL v137 = os_log_type_enabled(v62, v180);
    if (!v69)
    {
      if (!v137) {
        goto LABEL_335;
      }
      *(_DWORD *)buf = 136446210;
      v182 = "nw_protocol_http1_get_output_frames";
      BOOL v64 = "%{public}s cannot get output frames, output handler missing callback, no backtrace";
      goto LABEL_332;
    }
    if (v137)
    {
      *(_DWORD *)buf = 136446466;
      v182 = "nw_protocol_http1_get_output_frames";
      __int16 v183 = 2082;
      *(void *)v184 = v69;
      uint64_t v71 = "%{public}s cannot get output frames, output handler missing callback, dumping backtrace:%{public}s";
      goto LABEL_96;
    }
    goto LABEL_97;
  }
  if ((*(_WORD *)(v19 + 428) & 0x100) != 0)
  {
    if (!a3) {
      goto LABEL_160;
    }
    int v46 = 0;
    if (a4)
    {
      unsigned int v47 = a4;
      do
      {
        ++v46;
        BOOL v48 = v47 > 0xF;
        v47 >>= 4;
      }
      while (v48);
    }
    BOOL v49 = __CFADD__(a3, v46 + 9);
    a3 = (a3 + v46 + 9);
    if (!v49)
    {
LABEL_160:
      if (!a4) {
        goto LABEL_181;
      }
      int v97 = -1;
      unsigned int v98 = a4;
      do
      {
        ++v97;
        BOOL v48 = v98 > 0xF;
        v98 >>= 4;
      }
      while (v48);
      uint64_t v99 = (v97 + 10);
      BOOL v49 = __CFADD__(a4, v99);
      a4 = (a4 + v99);
      if (!v49) {
        goto LABEL_181;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446978;
      v182 = "nw_protocol_http1_get_output_frames";
      __int16 v183 = 2082;
      *(void *)v184 = "maximum_bytes";
      *(_WORD *)&v184[8] = 2048;
      *(void *)&v184[10] = v99;
      __int16 v185 = 2048;
      *(void *)v186 = a4;
      int v100 = (const char *)_os_log_send_and_compose_impl();
      os_log_type_t v180 = OS_LOG_TYPE_ERROR;
      char v179 = 0;
      v176 = (char *)v100;
      if (__nwlog_fault(v100, &v180, &v179))
      {
        if (v180 == OS_LOG_TYPE_FAULT)
        {
          v169 = __nwlog_obj();
          os_log_type_t v166 = v180;
          if (os_log_type_enabled(v169, v180))
          {
            *(_DWORD *)buf = 136446978;
            v182 = "nw_protocol_http1_get_output_frames";
            __int16 v183 = 2082;
            *(void *)v184 = "maximum_bytes";
            *(_WORD *)&v184[8] = 2048;
            *(void *)&v184[10] = v99;
            __int16 v185 = 2048;
            *(void *)v186 = a4;
            uint64_t v101 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_176:
            v104 = v169;
            os_log_type_t v105 = v166;
LABEL_177:
            _os_log_impl(&dword_1830D4000, v104, v105, v101, buf, 0x2Au);
          }
        }
        else if (v179)
        {
          v170 = __nw_create_backtrace_string();
          v167 = __nwlog_obj();
          os_log_type_t typeb = v180;
          BOOL v102 = os_log_type_enabled(v167, v180);
          v103 = (char *)v170;
          if (v170)
          {
            if (v102)
            {
              *(_DWORD *)buf = 136447234;
              v182 = "nw_protocol_http1_get_output_frames";
              __int16 v183 = 2082;
              *(void *)v184 = "maximum_bytes";
              *(_WORD *)&v184[8] = 2048;
              *(void *)&v184[10] = v99;
              __int16 v185 = 2048;
              *(void *)v186 = a4;
              *(_WORD *)&v186[8] = 2082;
              uint64_t v187 = (uint64_t)v170;
              _os_log_impl(&dword_1830D4000, v167, typeb, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
              v103 = (char *)v170;
            }
            free(v103);
            goto LABEL_178;
          }
          if (v102)
          {
            *(_DWORD *)buf = 136446978;
            v182 = "nw_protocol_http1_get_output_frames";
            __int16 v183 = 2082;
            *(void *)v184 = "maximum_bytes";
            *(_WORD *)&v184[8] = 2048;
            *(void *)&v184[10] = v99;
            __int16 v185 = 2048;
            *(void *)v186 = a4;
            uint64_t v101 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
            v104 = v167;
            os_log_type_t v105 = typeb;
            goto LABEL_177;
          }
        }
        else
        {
          v169 = __nwlog_obj();
          os_log_type_t v166 = v180;
          if (os_log_type_enabled(v169, v180))
          {
            *(_DWORD *)buf = 136446978;
            v182 = "nw_protocol_http1_get_output_frames";
            __int16 v183 = 2082;
            *(void *)v184 = "maximum_bytes";
            *(_WORD *)&v184[8] = 2048;
            *(void *)&v184[10] = v99;
            __int16 v185 = 2048;
            *(void *)v186 = a4;
            uint64_t v101 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
            goto LABEL_176;
          }
        }
      }
LABEL_178:
      if (v176) {
        free(v176);
      }
      a4 = 0xFFFFFFFFLL;
      goto LABEL_181;
    }
    uint64_t v50 = (v46 + 2);
    __nwlog_obj();
    *(_DWORD *)buf = 136446978;
    v182 = "nw_protocol_http1_get_output_frames";
    __int16 v183 = 2082;
    *(void *)v184 = "minimum_bytes";
    *(_WORD *)&v184[8] = 2048;
    uint64_t log = v50 + 7;
    *(void *)&v184[10] = v50 + 7;
    __int16 v185 = 2048;
    *(void *)v186 = a3;
    os_log_type_t v180 = OS_LOG_TYPE_ERROR;
    char v179 = 0;
    v175 = (char *)_os_log_send_and_compose_impl();
    if (__nwlog_fault(v175, &v180, &v179))
    {
      if (v180 == OS_LOG_TYPE_FAULT)
      {
        __int16 v51 = __nwlog_obj();
        os_log_type_t v52 = v180;
        v164 = v51;
        if (os_log_type_enabled(v51, v180))
        {
          *(_DWORD *)buf = 136446978;
          v182 = "nw_protocol_http1_get_output_frames";
          __int16 v183 = 2082;
          *(void *)v184 = "minimum_bytes";
          *(_WORD *)&v184[8] = 2048;
          *(void *)&v184[10] = log;
          __int16 v185 = 2048;
          *(void *)v186 = a3;
          os_log_type_t v53 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_155:
          unsigned int v95 = v164;
          os_log_type_t v96 = v52;
LABEL_156:
          _os_log_impl(&dword_1830D4000, v95, v96, v53, buf, 0x2Au);
        }
      }
      else if (v179)
      {
        uint64_t v81 = (char *)__nw_create_backtrace_string();
        v165 = __nwlog_obj();
        os_log_type_t typea = v180;
        BOOL v82 = os_log_type_enabled(v165, v180);
        if (v81)
        {
          if (v82)
          {
            *(_DWORD *)buf = 136447234;
            v182 = "nw_protocol_http1_get_output_frames";
            __int16 v183 = 2082;
            *(void *)v184 = "minimum_bytes";
            *(_WORD *)&v184[8] = 2048;
            *(void *)&v184[10] = log;
            __int16 v185 = 2048;
            *(void *)v186 = a3;
            *(_WORD *)&v186[8] = 2082;
            uint64_t v187 = (uint64_t)v81;
            _os_log_impl(&dword_1830D4000, v165, typea, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v81);
          goto LABEL_157;
        }
        if (v82)
        {
          *(_DWORD *)buf = 136446978;
          v182 = "nw_protocol_http1_get_output_frames";
          __int16 v183 = 2082;
          *(void *)v184 = "minimum_bytes";
          *(_WORD *)&v184[8] = 2048;
          *(void *)&v184[10] = log;
          __int16 v185 = 2048;
          *(void *)v186 = a3;
          os_log_type_t v53 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
          unsigned int v95 = v165;
          os_log_type_t v96 = typea;
          goto LABEL_156;
        }
      }
      else
      {
        v94 = __nwlog_obj();
        os_log_type_t v52 = v180;
        v164 = v94;
        if (os_log_type_enabled(v94, v180))
        {
          *(_DWORD *)buf = 136446978;
          v182 = "nw_protocol_http1_get_output_frames";
          __int16 v183 = 2082;
          *(void *)v184 = "minimum_bytes";
          *(_WORD *)&v184[8] = 2048;
          *(void *)&v184[10] = log;
          __int16 v185 = 2048;
          *(void *)v186 = a3;
          os_log_type_t v53 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
          goto LABEL_155;
        }
      }
    }
LABEL_157:
    if (v175) {
      free(v175);
    }
    a3 = 0xFFFFFFFFLL;
    goto LABEL_160;
  }
LABEL_181:
  uint64_t output_frames = nw_protocol_get_output_frames(v20[4], (uint64_t)a2, a3, a4, a5, (uint64_t)a6);
  if ((*(_WORD *)(v19 + 428) & 0x100) != 0)
  {
    os_log_type_t v106 = v178;
    v178[0] = MEMORY[0x1E4F143A8];
    v178[1] = 0x40000000;
    v178[2] = ___ZL35nw_protocol_http1_get_output_framesP11nw_protocolS0_jjjP16nw_frame_array_s_block_invoke;
    v178[3] = &__block_descriptor_tmp_123;
    v178[4] = v19;
    v178[5] = v20;
    v178[6] = a6;
    v178[7] = v16;
  }
  else
  {
    os_log_type_t v106 = v177;
    v177[0] = MEMORY[0x1E4F143A8];
    v177[1] = 0x40000000;
    v177[2] = ___ZL35nw_protocol_http1_get_output_framesP11nw_protocolS0_jjjP16nw_frame_array_s_block_invoke_124;
    v177[3] = &__block_descriptor_tmp_125;
    v177[4] = v19;
    v177[5] = v20;
  }
  tqh_first = a6->tqh_first;
  do
  {
    if (!tqh_first) {
      break;
    }
    v108 = (nw_frame *)*((void *)tqh_first + 4);
    char v109 = ((uint64_t (*)(void *))v106[2])(v106);
    tqh_first = v108;
  }
  while ((v109 & 1) != 0);
  if ((*(unsigned char *)(v19 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      v110 = __nwlog_obj();
      if (os_log_type_enabled(v110, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v111 = *(void *)(v19 + 256);
        int v112 = *(_DWORD *)(*(void *)(v19 + 248) + 372);
        if (v111) {
          LODWORD(v111) = *(_DWORD *)(v111 + 860);
        }
        int v113 = *(_DWORD *)(v19 + 424);
        *(_DWORD *)buf = 136447746;
        v182 = "nw_protocol_http1_get_output_frames";
        __int16 v183 = 2082;
        *(void *)v184 = v19 + 74;
        *(_WORD *)&v184[8] = 2080;
        *(void *)&v184[10] = " ";
        __int16 v185 = 1024;
        *(_DWORD *)v186 = v112;
        *(_WORD *)&v186[4] = 1024;
        *(_DWORD *)&v186[6] = v111;
        LOWORD(v187) = 1024;
        *(_DWORD *)((char *)&v187 + 2) = v113;
        HIWORD(v187) = 1024;
        int v188 = output_frames;
        _os_log_impl(&dword_1830D4000, v110, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> outbound headers complete, returning %u frames from below", buf, 0x38u);
      }
    }
  }
  return output_frames;
}

BOOL ___ZL35nw_protocol_http1_get_output_framesP11nw_protocolS0_jjjP16nw_frame_array_s_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = *MEMORY[0x1E4F143B8];
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
    uint64_t v35 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v50 = 0;
    if (!__nwlog_fault(v35, &type, &v50)) {
      goto LABEL_68;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v36 = __nwlog_obj();
      os_log_type_t v37 = type;
      if (!os_log_type_enabled(v36, type)) {
        goto LABEL_68;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
      char v38 = "%{public}s called with null frame";
    }
    else if (v50)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v36 = __nwlog_obj();
      os_log_type_t v37 = type;
      BOOL v46 = os_log_type_enabled(v36, type);
      if (backtrace_string)
      {
        if (v46)
        {
          *(_DWORD *)buf = 136446466;
          os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
          __int16 v54 = 2082;
          uint64_t v55 = (uint64_t)backtrace_string;
          _os_log_impl(&dword_1830D4000, v36, v37, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        goto LABEL_68;
      }
      if (!v46)
      {
LABEL_68:
        if (v35) {
          free(v35);
        }
        return a2 != 0;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
      char v38 = "%{public}s called with null frame, no backtrace";
    }
    else
    {
      uint64_t v36 = __nwlog_obj();
      os_log_type_t v37 = type;
      if (!os_log_type_enabled(v36, type)) {
        goto LABEL_68;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
      char v38 = "%{public}s called with null frame, backtrace limit exceeded";
    }
    _os_log_impl(&dword_1830D4000, v36, v37, v38, buf, 0xCu);
    goto LABEL_68;
  }
  long long v49 = *(_OWORD *)(a1 + 32);
  uint64_t v5 = malloc_type_calloc(1uLL, 0x20uLL, 0xEAFB8F1AuLL);
  if (v5) {
    goto LABEL_3;
  }
  os_log_type_t v39 = __nwlog_obj();
  os_log_type_enabled(v39, OS_LOG_TYPE_ERROR);
  *(_DWORD *)buf = 136446722;
  os_log_type_t v53 = "strict_calloc";
  __int16 v54 = 2048;
  uint64_t v55 = 1;
  __int16 v56 = 2048;
  uint64_t v57 = 32;
  unsigned int v40 = (void *)_os_log_send_and_compose_impl();
  BOOL result = __nwlog_abort((uint64_t)v40);
  if (!result)
  {
    free(v40);
LABEL_3:
    long long v6 = *(_OWORD *)(a2 + 80);
    *uint64_t v5 = v49;
    v5[1] = v6;
    *(void *)(a2 + 80) = nw_http1_wrapped_frame_finalizer;
    *(void *)(a2 + 88) = v5;
    if ((*(_WORD *)(a2 + 204) & 0x100) != 0
      && g_channel_check_validity
      && !g_channel_check_validity(a2, v5))
    {
      return a2 != 0;
    }
    unsigned int v7 = *(_DWORD *)(a2 + 48);
    if (!v7) {
      return a2 != 0;
    }
    if (*(void *)(a1 + 40))
    {
      int v8 = -1;
      unsigned int v9 = *(_DWORD *)(a2 + 48);
      do
      {
        ++v8;
        BOOL v10 = v9 > 0xF;
        v9 >>= 4;
      }
      while (v10);
      int v11 = v8 + 3;
      int v12 = 7;
      goto LABEL_11;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v53 = "nw_http1_connection_get_chunked_extra_size";
    uint64_t v41 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v50 = 0;
    if (__nwlog_fault(v41, &type, &v50))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        int v42 = __nwlog_obj();
        os_log_type_t v43 = type;
        if (os_log_type_enabled(v42, type))
        {
          *(_DWORD *)buf = 136446210;
          os_log_type_t v53 = "nw_http1_connection_get_chunked_extra_size";
          uint64_t v44 = "%{public}s called with null http1_connection";
LABEL_74:
          _os_log_impl(&dword_1830D4000, v42, v43, v44, buf, 0xCu);
        }
      }
      else if (v50)
      {
        unsigned int v47 = (char *)__nw_create_backtrace_string();
        int v42 = __nwlog_obj();
        os_log_type_t v43 = type;
        BOOL v48 = os_log_type_enabled(v42, type);
        if (v47)
        {
          if (v48)
          {
            *(_DWORD *)buf = 136446466;
            os_log_type_t v53 = "nw_http1_connection_get_chunked_extra_size";
            __int16 v54 = 2082;
            uint64_t v55 = (uint64_t)v47;
            _os_log_impl(&dword_1830D4000, v42, v43, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v47);
          goto LABEL_75;
        }
        if (v48)
        {
          *(_DWORD *)buf = 136446210;
          os_log_type_t v53 = "nw_http1_connection_get_chunked_extra_size";
          uint64_t v44 = "%{public}s called with null http1_connection, no backtrace";
          goto LABEL_74;
        }
      }
      else
      {
        int v42 = __nwlog_obj();
        os_log_type_t v43 = type;
        if (os_log_type_enabled(v42, type))
        {
          *(_DWORD *)buf = 136446210;
          os_log_type_t v53 = "nw_http1_connection_get_chunked_extra_size";
          uint64_t v44 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          goto LABEL_74;
        }
      }
    }
LABEL_75:
    if (v41) {
      free(v41);
    }
    int v11 = 0;
    int v12 = 0;
LABEL_11:
    if (v7 >= v12 + v11)
    {
      nw_frame_claim(a2, v4, v11, v12);
      if ((*(unsigned char *)(*(void *)(a1 + 56) + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          int v23 = __nwlog_obj();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v24 = *(void *)(a1 + 56);
            uint64_t v25 = v24 + 74;
            LODWORD(v24) = *(_DWORD *)(v24 + 372);
            *(_DWORD *)buf = 136447746;
            os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
            __int16 v54 = 2082;
            uint64_t v55 = v25;
            __int16 v56 = 2080;
            uint64_t v57 = (uint64_t)" ";
            __int16 v58 = 1024;
            int v59 = v24;
            __int16 v60 = 2048;
            *(void *)__int16 v61 = a2;
            *(_WORD *)&v61[8] = 1024;
            *(_DWORD *)BOOL v62 = v11;
            *(_WORD *)&v62[4] = 1024;
            *(_DWORD *)&v62[6] = v12;
            _os_log_impl(&dword_1830D4000, v23, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> claimed chunk header from frame %p (start: %u, end: %u)", buf, 0x3Cu);
          }
        }
      }
      return a2 != 0;
    }
    if ((*(unsigned char *)(*(void *)(a1 + 40) + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v13 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
      {
        uint64_t v14 = *(void *)(a1 + 40);
        uint64_t v15 = v14 + 74;
        uint64_t v16 = *(void *)(v14 + 488);
        int v17 = *(_DWORD *)(*(void *)(v14 + 480) + 372);
        int v18 = *(_DWORD *)(v14 + 860);
        if (v16) {
          LODWORD(v16) = *(_DWORD *)(v16 + 424);
        }
        *(_DWORD *)buf = 136448514;
        os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
        __int16 v54 = 2082;
        uint64_t v55 = v15;
        __int16 v56 = 2080;
        uint64_t v57 = (uint64_t)" ";
        __int16 v58 = 1024;
        int v59 = v17;
        __int16 v60 = 1024;
        *(_DWORD *)__int16 v61 = v18;
        *(_WORD *)&v61[4] = 1024;
        *(_DWORD *)&v61[6] = v16;
        *(_WORD *)BOOL v62 = 2048;
        *(void *)&v62[2] = a2;
        __int16 v63 = 1024;
        unsigned int v64 = v7;
        __int16 v65 = 1024;
        int v66 = v11;
        __int16 v67 = 1024;
        int v68 = v12;
        _os_log_impl(&dword_1830D4000, v13, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> frame is too small to fit chunk header: %p, raw length: %u, start space: %u, end space: %u", buf, 0x4Eu);
      }
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
    uint64_t v19 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v50 = 0;
    if (!__nwlog_fault(v19, &type, &v50)) {
      goto LABEL_34;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v20 = gLogObj;
      os_log_type_t v21 = type;
      if (os_log_type_enabled((os_log_t)gLogObj, type))
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
        uint64_t v22 = "%{public}s frame is too small to fit chunk header";
LABEL_32:
        int v30 = v20;
        os_log_type_t v31 = v21;
LABEL_33:
        _os_log_impl(&dword_1830D4000, v30, v31, v22, buf, 0xCu);
      }
    }
    else if (v50)
    {
      uint64_t v26 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v27 = gLogObj;
      os_log_type_t v28 = type;
      BOOL v29 = os_log_type_enabled((os_log_t)gLogObj, type);
      if (v26)
      {
        if (v29)
        {
          *(_DWORD *)buf = 136446466;
          os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
          __int16 v54 = 2082;
          uint64_t v55 = (uint64_t)v26;
          _os_log_impl(&dword_1830D4000, v27, v28, "%{public}s frame is too small to fit chunk header, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v26);
        goto LABEL_34;
      }
      if (v29)
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
        uint64_t v22 = "%{public}s frame is too small to fit chunk header, no backtrace";
        int v30 = v27;
        os_log_type_t v31 = v28;
        goto LABEL_33;
      }
    }
    else
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v20 = gLogObj;
      os_log_type_t v21 = type;
      if (os_log_type_enabled((os_log_t)gLogObj, type))
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v53 = "nw_protocol_http1_get_output_frames_block_invoke";
        uint64_t v22 = "%{public}s frame is too small to fit chunk header, backtrace limit exceeded";
        goto LABEL_32;
      }
    }
LABEL_34:
    if (v19) {
      free(v19);
    }
    uint64_t v32 = *(void *)(a2 + 32);
    unsigned int v33 = *(void **)(a2 + 40);
    if (v32)
    {
      *(void *)(v32 + 40) = v33;
      unsigned int v33 = *(void **)(a2 + 40);
    }
    else
    {
      *(void *)(*(void *)(a1 + 48) + 8) = v33;
    }
    void *v33 = v32;
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 40) = 0;
    nw_frame_finalize(a2);
    return a2 != 0;
  }
  __break(1u);
  return result;
}

BOOL ___ZL35nw_protocol_http1_get_output_framesP11nw_protocolS0_jjjP16nw_frame_array_s_block_invoke_124(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v18 = "nw_protocol_http1_get_output_frames_block_invoke";
    long long v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v15 = 0;
    if (!__nwlog_fault(v6, &type, &v15)) {
      goto LABEL_21;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_21;
      }
      *(_DWORD *)buf = 136446210;
      int v18 = "nw_protocol_http1_get_output_frames_block_invoke";
      unsigned int v9 = "%{public}s called with null frame";
    }
    else if (v15)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      BOOL v13 = os_log_type_enabled(v7, type);
      if (backtrace_string)
      {
        if (v13)
        {
          *(_DWORD *)buf = 136446466;
          int v18 = "nw_protocol_http1_get_output_frames_block_invoke";
          __int16 v19 = 2082;
          uint64_t v20 = (uint64_t)backtrace_string;
          _os_log_impl(&dword_1830D4000, v7, v8, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        goto LABEL_21;
      }
      if (!v13)
      {
LABEL_21:
        if (v6) {
          free(v6);
        }
        return a2 != 0;
      }
      *(_DWORD *)buf = 136446210;
      int v18 = "nw_protocol_http1_get_output_frames_block_invoke";
      unsigned int v9 = "%{public}s called with null frame, no backtrace";
    }
    else
    {
      unsigned int v7 = __nwlog_obj();
      os_log_type_t v8 = type;
      if (!os_log_type_enabled(v7, type)) {
        goto LABEL_21;
      }
      *(_DWORD *)buf = 136446210;
      int v18 = "nw_protocol_http1_get_output_frames_block_invoke";
      unsigned int v9 = "%{public}s called with null frame, backtrace limit exceeded";
    }
    _os_log_impl(&dword_1830D4000, v7, v8, v9, buf, 0xCu);
    goto LABEL_21;
  }
  long long v14 = *(_OWORD *)(a1 + 32);
  int v3 = malloc_type_calloc(1uLL, 0x20uLL, 0xEAFB8F1AuLL);
  if (v3)
  {
LABEL_3:
    long long v4 = *(_OWORD *)(a2 + 80);
    _OWORD *v3 = v14;
    v3[1] = v4;
    *(void *)(a2 + 80) = nw_http1_wrapped_frame_finalizer;
    *(void *)(a2 + 88) = v3;
    return a2 != 0;
  }
  BOOL v10 = __nwlog_obj();
  os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);
  *(_DWORD *)buf = 136446722;
  int v18 = "strict_calloc";
  __int16 v19 = 2048;
  uint64_t v20 = 1;
  __int16 v21 = 2048;
  uint64_t v22 = 32;
  int v11 = (void *)_os_log_send_and_compose_impl();
  BOOL result = __nwlog_abort((uint64_t)v11);
  if (!result)
  {
    free(v11);
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

void nw_http1_wrapped_frame_finalizer(nw_frame *a1, BOOL a2, _OWORD *a3)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    char v15 = "nw_http1_wrapped_frame_finalizer";
    long long v4 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v12 = 0;
    if (!__nwlog_fault(v4, &type, &v12)) {
      goto LABEL_34;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v5 = __nwlog_obj();
      os_log_type_t v6 = type;
      if (!os_log_type_enabled(v5, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      char v15 = "nw_http1_wrapped_frame_finalizer";
      unsigned int v7 = "%{public}s called with null frame";
    }
    else if (v12)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v5 = __nwlog_obj();
      os_log_type_t v6 = type;
      BOOL v9 = os_log_type_enabled(v5, type);
      if (backtrace_string)
      {
        if (v9)
        {
          *(_DWORD *)buf = 136446466;
          char v15 = "nw_http1_wrapped_frame_finalizer";
          __int16 v16 = 2082;
          int v17 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v5, v6, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_34:
        if (!v4) {
          return;
        }
        goto LABEL_35;
      }
      if (!v9) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      char v15 = "nw_http1_wrapped_frame_finalizer";
      unsigned int v7 = "%{public}s called with null frame, no backtrace";
    }
    else
    {
      uint64_t v5 = __nwlog_obj();
      os_log_type_t v6 = type;
      if (!os_log_type_enabled(v5, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      char v15 = "nw_http1_wrapped_frame_finalizer";
      unsigned int v7 = "%{public}s called with null frame, backtrace limit exceeded";
    }
LABEL_33:
    _os_log_impl(&dword_1830D4000, v5, v6, v7, buf, 0xCu);
    goto LABEL_34;
  }
  if (a3)
  {
    *((_OWORD *)a1 + 5) = a3[1];
    free(a3);
    nw_frame_finalize((uint64_t)a1);
    return;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  char v15 = "nw_http1_wrapped_frame_finalizer";
  long long v4 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v12 = 0;
  if (!__nwlog_fault(v4, &type, &v12)) {
    goto LABEL_34;
  }
  if (type == OS_LOG_TYPE_FAULT)
  {
    uint64_t v5 = __nwlog_obj();
    os_log_type_t v6 = type;
    if (!os_log_type_enabled(v5, type)) {
      goto LABEL_34;
    }
    *(_DWORD *)buf = 136446210;
    char v15 = "nw_http1_wrapped_frame_finalizer";
    unsigned int v7 = "%{public}s called with null context";
    goto LABEL_33;
  }
  if (!v12)
  {
    uint64_t v5 = __nwlog_obj();
    os_log_type_t v6 = type;
    if (!os_log_type_enabled(v5, type)) {
      goto LABEL_34;
    }
    *(_DWORD *)buf = 136446210;
    char v15 = "nw_http1_wrapped_frame_finalizer";
    unsigned int v7 = "%{public}s called with null context, backtrace limit exceeded";
    goto LABEL_33;
  }
  BOOL v10 = (char *)__nw_create_backtrace_string();
  uint64_t v5 = __nwlog_obj();
  os_log_type_t v6 = type;
  BOOL v11 = os_log_type_enabled(v5, type);
  if (!v10)
  {
    if (!v11) {
      goto LABEL_34;
    }
    *(_DWORD *)buf = 136446210;
    char v15 = "nw_http1_wrapped_frame_finalizer";
    unsigned int v7 = "%{public}s called with null context, no backtrace";
    goto LABEL_33;
  }
  if (v11)
  {
    *(_DWORD *)buf = 136446466;
    char v15 = "nw_http1_wrapped_frame_finalizer";
    __int16 v16 = 2082;
    int v17 = v10;
    _os_log_impl(&dword_1830D4000, v5, v6, "%{public}s called with null context, dumping backtrace:%{public}s", buf, 0x16u);
  }
  free(v10);
  if (v4) {
LABEL_35:
  }
    free(v4);
}

void nw_http1_connection_output_frame_finalizer(nw_frame *a1, uint64_t a2, void *a3)
{
  uint64_t v643 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
    v159 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(v636) = 16;
    LOBYTE(v640) = 0;
    if (!__nwlog_fault(v159, &v636, &v640)) {
      goto LABEL_903;
    }
    if (v636 == 17)
    {
      int v160 = __nwlog_obj();
      os_log_type_t v161 = v636;
      if (!os_log_type_enabled(v160, (os_log_type_t)v636)) {
        goto LABEL_903;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      v162 = "%{public}s called with null frame";
    }
    else if ((_BYTE)v640)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v160 = __nwlog_obj();
      os_log_type_t v161 = v636;
      BOOL v185 = os_log_type_enabled(v160, (os_log_type_t)v636);
      if (backtrace_string)
      {
        if (v185)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
          __int16 v631 = 2082;
          *(void *)v632 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v160, v161, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_903:
        if (!v159) {
          return;
        }
        goto LABEL_904;
      }
      if (!v185) {
        goto LABEL_903;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      v162 = "%{public}s called with null frame, no backtrace";
    }
    else
    {
      int v160 = __nwlog_obj();
      os_log_type_t v161 = v636;
      if (!os_log_type_enabled(v160, (os_log_type_t)v636)) {
        goto LABEL_903;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      v162 = "%{public}s called with null frame, backtrace limit exceeded";
    }
    goto LABEL_902;
  }
  if (!a3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
    v159 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(v636) = 16;
    LOBYTE(v640) = 0;
    if (!__nwlog_fault(v159, &v636, &v640)) {
      goto LABEL_903;
    }
    if (v636 != 17)
    {
      if (!(_BYTE)v640)
      {
        int v160 = __nwlog_obj();
        os_log_type_t v161 = v636;
        if (!os_log_type_enabled(v160, (os_log_type_t)v636)) {
          goto LABEL_903;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
        v162 = "%{public}s called with null context, backtrace limit exceeded";
        goto LABEL_902;
      }
      v186 = (char *)__nw_create_backtrace_string();
      int v160 = __nwlog_obj();
      os_log_type_t v161 = v636;
      BOOL v187 = os_log_type_enabled(v160, (os_log_type_t)v636);
      if (!v186)
      {
        if (!v187) {
          goto LABEL_903;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
        v162 = "%{public}s called with null context, no backtrace";
        goto LABEL_902;
      }
      if (!v187) {
        goto LABEL_850;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      __int16 v631 = 2082;
      *(void *)v632 = v186;
      int v188 = "%{public}s called with null context, dumping backtrace:%{public}s";
      goto LABEL_849;
    }
    int v160 = __nwlog_obj();
    os_log_type_t v161 = v636;
    if (!os_log_type_enabled(v160, (os_log_type_t)v636)) {
      goto LABEL_903;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
    v162 = "%{public}s called with null context";
LABEL_902:
    _os_log_impl(&dword_1830D4000, v160, v161, v162, buf, 0xCu);
    goto LABEL_903;
  }
  __int16 v4 = *((_WORD *)a1 + 102);
  if ((v4 & 4) != 0) {
    uint64_t v5 = (char *)a1 + 208;
  }
  else {
    uint64_t v5 = 0;
  }
  if ((v4 & 4) == 0)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
    v159 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(v636) = 16;
    LOBYTE(v640) = 0;
    if (!__nwlog_fault(v159, &v636, &v640)) {
      goto LABEL_903;
    }
    if (v636 != 17)
    {
      if (!(_BYTE)v640)
      {
        int v160 = __nwlog_obj();
        os_log_type_t v161 = v636;
        if (!os_log_type_enabled(v160, (os_log_type_t)v636)) {
          goto LABEL_903;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
        v162 = "%{public}s called with null metadata, backtrace limit exceeded";
        goto LABEL_902;
      }
      v186 = (char *)__nw_create_backtrace_string();
      int v160 = __nwlog_obj();
      os_log_type_t v161 = v636;
      BOOL v189 = os_log_type_enabled(v160, (os_log_type_t)v636);
      if (!v186)
      {
        if (!v189) {
          goto LABEL_903;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
        v162 = "%{public}s called with null metadata, no backtrace";
        goto LABEL_902;
      }
      if (!v189) {
        goto LABEL_850;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      __int16 v631 = 2082;
      *(void *)v632 = v186;
      int v188 = "%{public}s called with null metadata, dumping backtrace:%{public}s";
      goto LABEL_849;
    }
    int v160 = __nwlog_obj();
    os_log_type_t v161 = v636;
    if (!os_log_type_enabled(v160, (os_log_type_t)v636)) {
      goto LABEL_903;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
    v162 = "%{public}s called with null metadata";
    goto LABEL_902;
  }
  uint64_t v6 = *(void *)v5;
  if (!*(void *)v5)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
    v159 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(v636) = 16;
    LOBYTE(v640) = 0;
    if (!__nwlog_fault(v159, &v636, &v640)) {
      goto LABEL_903;
    }
    if (v636 == 17)
    {
      int v160 = __nwlog_obj();
      os_log_type_t v161 = v636;
      if (!os_log_type_enabled(v160, (os_log_type_t)v636)) {
        goto LABEL_903;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      v162 = "%{public}s called with null http1_connection";
      goto LABEL_902;
    }
    if (!(_BYTE)v640)
    {
      int v160 = __nwlog_obj();
      os_log_type_t v161 = v636;
      if (!os_log_type_enabled(v160, (os_log_type_t)v636)) {
        goto LABEL_903;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      v162 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      goto LABEL_902;
    }
    v186 = (char *)__nw_create_backtrace_string();
    int v160 = __nwlog_obj();
    os_log_type_t v161 = v636;
    BOOL v190 = os_log_type_enabled(v160, (os_log_type_t)v636);
    if (!v186)
    {
      if (!v190) {
        goto LABEL_903;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      v162 = "%{public}s called with null http1_connection, no backtrace";
      goto LABEL_902;
    }
    if (!v190) {
      goto LABEL_850;
    }
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
    __int16 v631 = 2082;
    *(void *)v632 = v186;
    int v188 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
LABEL_849:
    _os_log_impl(&dword_1830D4000, v160, v161, v188, buf, 0x16u);
    goto LABEL_850;
  }
  int v7 = a2;
  p_cache = NWConcrete_nw_resolution_report.cache;
  if ((*(unsigned char *)(v6 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      v163 = __nwlog_obj();
      if (os_log_type_enabled(v163, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v164 = *(void *)(v6 + 488);
        int v165 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
        int v166 = *(_DWORD *)(v6 + 860);
        if (v164) {
          LODWORD(v164) = *(_DWORD *)(v164 + 424);
        }
        *(_DWORD *)buf = 136448002;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
        __int16 v631 = 2082;
        *(void *)v632 = v6 + 74;
        if (v7) {
          v167 = "true";
        }
        else {
          v167 = "false";
        }
        *(_WORD *)&v632[8] = 2080;
        *(void *)&v632[10] = " ";
        *(_WORD *)&v632[18] = 1024;
        *(_DWORD *)v633 = v165;
        *(_WORD *)&v633[4] = 1024;
        *(_DWORD *)&v633[6] = v166;
        *(_WORD *)v634 = 1024;
        *(_DWORD *)&v634[2] = v164;
        *(_WORD *)&v634[6] = 2048;
        *(void *)&v634[8] = a1;
        *(_WORD *)&v634[16] = 2080;
        size_t v635 = (size_t)v167;
        _os_log_impl(&dword_1830D4000, v163, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing output frame %p, success: %s", buf, 0x46u);
      }
    }
  }
  uint64_t v9 = *((void *)a1 + 2);
  BOOL v10 = (void *)*((void *)a1 + 3);
  if (v9)
  {
    *(void *)(v9 + 24) = v10;
    BOOL v10 = (void *)*((void *)a1 + 3);
  }
  else
  {
    *(void *)(v6 + 688) = v10;
  }
  *BOOL v10 = v9;
  *((void *)a1 + 2) = 0;
  *((void *)a1 + 3) = 0;
  uint64_t v11 = *(void *)(v6 + 488);
  uint64_t v623 = v6;
  if (!v11)
  {
LABEL_16:
    if (v7) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
  if ((*(_WORD *)(v11 + 428) & 0x80) == 0)
  {
    LODWORD(v11) = 0;
    goto LABEL_16;
  }
  if ((*(unsigned char *)(v6 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      v195 = __nwlog_obj();
      BOOL v196 = os_log_type_enabled(v195, OS_LOG_TYPE_DEBUG);
      uint64_t v11 = *(void *)(v6 + 488);
      if (v196)
      {
        int v197 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
        int v198 = *(_DWORD *)(v6 + 860);
        if (v11) {
          LODWORD(v11) = *(_DWORD *)(v11 + 424);
        }
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
        __int16 v631 = 2082;
        *(void *)v632 = v6 + 74;
        *(_WORD *)&v632[8] = 2080;
        *(void *)&v632[10] = " ";
        *(_WORD *)&v632[18] = 1024;
        *(_DWORD *)v633 = v197;
        *(_WORD *)&v633[4] = 1024;
        *(_DWORD *)&v633[6] = v198;
        *(_WORD *)v634 = 1024;
        *(_DWORD *)&v634[2] = v11;
        *(_WORD *)&v634[6] = 1024;
        *(_DWORD *)&v634[8] = v7;
        _os_log_impl(&dword_1830D4000, v195, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> initial outbound frame finalized, success %u", buf, 0x38u);
        uint64_t v11 = *(void *)(v6 + 488);
      }
    }
  }
  *(_WORD *)(v11 + 428) &= ~0x80u;
  LODWORD(v11) = 1;
  if (v7)
  {
LABEL_17:
    uint64_t v12 = *(void *)(v6 + 488);
    if (v12)
    {
      int v609 = v11;
      __int16 v13 = *(_WORD *)(v12 + 428);
      if ((v5[8] & 2) != 0 && (v13 & 2) != 0)
      {
        int v14 = *((_DWORD *)a1 + 13);
        if (!v14 || v14 == *((_DWORD *)a1 + 14) + *((_DWORD *)a1 + 15))
        {
          uint64_t v15 = *((void *)a1 + 8);
          if (v15)
          {
            if ((*(unsigned char *)(v15 + 66) & 0x40) != 0) {
              nw_protocol_output_finished((void *)v12, *(void *)(v12 + 48));
            }
          }
        }
        *((void *)a1 + 10) = 0;
        *((void *)a1 + 11) = 0;
        nw_frame_cache_return_frame(v6 + 696, (uint64_t)a1);
        return;
      }
      if ((v13 & 2) != 0)
      {
        if (!(*(unsigned char *)(v6 + 158) & 1 | (gLogDatapath == 0)))
        {
          uint64_t v23 = __nwlog_obj();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v24 = *(void *)(v6 + 488);
            int v25 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
            int v26 = *(_DWORD *)(v6 + 860);
            if (v24) {
              LODWORD(v24) = *(_DWORD *)(v24 + 424);
            }
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
            __int16 v631 = 2082;
            *(void *)v632 = v6 + 74;
            *(_WORD *)&v632[8] = 2080;
            *(void *)&v632[10] = " ";
            *(_WORD *)&v632[18] = 1024;
            *(_DWORD *)v633 = v25;
            *(_WORD *)&v633[4] = 1024;
            *(_DWORD *)&v633[6] = v26;
            *(_WORD *)v634 = 1024;
            *(_DWORD *)&v634[2] = v24;
            *(_WORD *)&v634[6] = 2048;
            *(void *)&v634[8] = a1;
            _os_log_impl(&dword_1830D4000, v23, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> outbound headers are already complete, sending contents of frame %p", buf, 0x3Cu);
          }
        }
        goto LABEL_402;
      }
      if (!(*(unsigned char *)(v6 + 158) & 1 | (gLogDatapath == 0)))
      {
        v501 = __nwlog_obj();
        BOOL v502 = os_log_type_enabled(v501, OS_LOG_TYPE_DEBUG);
        uint64_t v12 = *(void *)(v6 + 488);
        if (v502)
        {
          int v503 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
          int v504 = *(_DWORD *)(v6 + 860);
          if (v12) {
            int v505 = *(_DWORD *)(v12 + 424);
          }
          else {
            int v505 = 0;
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
          __int16 v631 = 2082;
          *(void *)v632 = v6 + 74;
          *(_WORD *)&v632[8] = 2080;
          *(void *)&v632[10] = " ";
          *(_WORD *)&v632[18] = 1024;
          *(_DWORD *)v633 = v503;
          *(_WORD *)&v633[4] = 1024;
          *(_DWORD *)&v633[6] = v504;
          *(_WORD *)v634 = 1024;
          *(_DWORD *)&v634[2] = v505;
          _os_log_impl(&dword_1830D4000, v501, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> sending outbound message", buf, 0x32u);
          uint64_t v12 = *(void *)(v6 + 488);
        }
        if (!v12)
        {
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
          v530 = (char *)_os_log_send_and_compose_impl();
          LOBYTE(v636) = 16;
          LOBYTE(v640) = 0;
          if (__nwlog_fault(v530, &v636, &v640))
          {
            if (v636 == 17)
            {
              v531 = __nwlog_obj();
              os_log_type_t v532 = v636;
              if (os_log_type_enabled(v531, (os_log_type_t)v636))
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                v533 = "%{public}s called with null http1_stream";
LABEL_943:
                v538 = v531;
                os_log_type_t v539 = v532;
LABEL_944:
                _os_log_impl(&dword_1830D4000, v538, v539, v533, buf, 0xCu);
              }
            }
            else if ((_BYTE)v640)
            {
              v534 = (char *)__nw_create_backtrace_string();
              v535 = __nwlog_obj();
              os_log_type_t v536 = v636;
              BOOL v537 = os_log_type_enabled(v535, (os_log_type_t)v636);
              if (v534)
              {
                if (v537)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                  __int16 v631 = 2082;
                  *(void *)v632 = v534;
                  _os_log_impl(&dword_1830D4000, v535, v536, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v534);
                goto LABEL_945;
              }
              if (v537)
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                v533 = "%{public}s called with null http1_stream, no backtrace";
                v538 = v535;
                os_log_type_t v539 = v536;
                goto LABEL_944;
              }
            }
            else
            {
              v531 = __nwlog_obj();
              os_log_type_t v532 = v636;
              if (os_log_type_enabled(v531, (os_log_type_t)v636))
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                v533 = "%{public}s called with null http1_stream, backtrace limit exceeded";
                goto LABEL_943;
              }
            }
          }
LABEL_945:
          if (v530) {
            free(v530);
          }
          uint64_t v6 = v623;
          goto LABEL_948;
        }
      }
      if (nw_protocol_copy_http_definition_onceToken != -1) {
        dispatch_once(&nw_protocol_copy_http_definition_onceToken, &__block_literal_global_15_74223);
      }
      id v17 = (id)nw_protocol_copy_http_definition_http_definition;
      uint64_t v18 = (void **)(v12 + 384);
      uint64_t v19 = *(void *)(v12 + 384);
      uint64_t v20 = nw_frame_copy_metadata_for_protocol((uint64_t)a1, (uint64_t)v17);
      __int16 v21 = v20;
      if (v19)
      {
        long long v636 = 0uLL;
        nw_protocol_metadata_copy_identifier(v20, &v636);
        long long v640 = 0uLL;
        nw_protocol_metadata_copy_identifier(*v18, &v640);
        if (v640 == v636)
        {
          if (v21) {
            os_release(v21);
          }
          char v22 = 1;
          uint64_t v6 = v623;
          goto LABEL_181;
        }
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136447234;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
        __int16 v631 = 1040;
        *(_DWORD *)v632 = 16;
        *(_WORD *)&v632[4] = 2096;
        *(void *)&v632[6] = &v640;
        *(_WORD *)&v632[14] = 1040;
        *(_DWORD *)&v632[16] = 16;
        *(_WORD *)v633 = 2096;
        *(void *)&v633[2] = &v636;
        os_log_type_t v31 = (char *)_os_log_send_and_compose_impl();
        type[0] = OS_LOG_TYPE_ERROR;
        LOBYTE(v626) = 0;
        if (__nwlog_fault(v31, type, &v626))
        {
          if (type[0] == OS_LOG_TYPE_FAULT)
          {
            uint64_t v32 = __nwlog_obj();
            os_log_type_t v33 = type[0];
            if (!os_log_type_enabled(v32, type[0])) {
              goto LABEL_89;
            }
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
            __int16 v631 = 1040;
            *(_DWORD *)v632 = 16;
            *(_WORD *)&v632[4] = 2096;
            *(void *)&v632[6] = &v640;
            *(_WORD *)&v632[14] = 1040;
            *(_DWORD *)&v632[16] = 16;
            *(_WORD *)v633 = 2096;
            *(void *)&v633[2] = &v636;
            int v34 = "%{public}s existing metadata identifier does not match new metadata identifier (existing %{uuid_t}.16P"
                  " != new %{uuid_t}.16P)";
LABEL_87:
            __int16 v51 = v32;
            os_log_type_t v52 = v33;
LABEL_88:
            _os_log_impl(&dword_1830D4000, v51, v52, v34, buf, 0x2Cu);
            goto LABEL_89;
          }
          if (!(_BYTE)v626)
          {
            uint64_t v32 = __nwlog_obj();
            os_log_type_t v33 = type[0];
            if (!os_log_type_enabled(v32, type[0])) {
              goto LABEL_89;
            }
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
            __int16 v631 = 1040;
            *(_DWORD *)v632 = 16;
            *(_WORD *)&v632[4] = 2096;
            *(void *)&v632[6] = &v640;
            *(_WORD *)&v632[14] = 1040;
            *(_DWORD *)&v632[16] = 16;
            *(_WORD *)v633 = 2096;
            *(void *)&v633[2] = &v636;
            int v34 = "%{public}s existing metadata identifier does not match new metadata identifier (existing %{uuid_t}.16P"
                  " != new %{uuid_t}.16P), backtrace limit exceeded";
            goto LABEL_87;
          }
          uint64_t v35 = (char *)__nw_create_backtrace_string();
          uint64_t v36 = __nwlog_obj();
          os_log_type_t v37 = type[0];
          BOOL v38 = os_log_type_enabled(v36, type[0]);
          if (v35)
          {
            if (v38)
            {
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
              __int16 v631 = 1040;
              *(_DWORD *)v632 = 16;
              *(_WORD *)&v632[4] = 2096;
              *(void *)&v632[6] = &v640;
              *(_WORD *)&v632[14] = 1040;
              *(_DWORD *)&v632[16] = 16;
              *(_WORD *)v633 = 2096;
              *(void *)&v633[2] = &v636;
              *(_WORD *)v634 = 2082;
              *(void *)&v634[2] = v35;
              _os_log_impl(&dword_1830D4000, v36, v37, "%{public}s existing metadata identifier does not match new metadata identifier (existing %{uuid_t}.16P != new %{uuid_t}.16P), dumping backtrace:%{public}s", buf, 0x36u);
            }
            free(v35);
          }
          else if (v38)
          {
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
            __int16 v631 = 1040;
            *(_DWORD *)v632 = 16;
            *(_WORD *)&v632[4] = 2096;
            *(void *)&v632[6] = &v640;
            *(_WORD *)&v632[14] = 1040;
            *(_DWORD *)&v632[16] = 16;
            *(_WORD *)v633 = 2096;
            *(void *)&v633[2] = &v636;
            int v34 = "%{public}s existing metadata identifier does not match new metadata identifier (existing %{uuid_t}.16P"
                  " != new %{uuid_t}.16P), no backtrace";
            __int16 v51 = v36;
            os_log_type_t v52 = v37;
            goto LABEL_88;
          }
        }
LABEL_89:
        uint64_t v6 = v623;
        if (v31) {
          free(v31);
        }
        p_cache = NWConcrete_nw_resolution_report.cache;
        if (!v21) {
          goto LABEL_180;
        }
        goto LABEL_179;
      }
      if (v20)
      {
        if (nw_protocol_metadata_is_http(v20))
        {
          if (*(unsigned char *)(*(void *)(v12 + 248) + 376))
          {
            id v43 = nw_http_metadata_copy_response(v21);
            if (v43)
            {
              os_log_type_t v28 = v43;
              BOOL v29 = nw_http_response_copy(v43);
              metadata_for_response = nw_http_create_metadata_for_response((void *)v29);
LABEL_72:
              *(void *)buf = metadata_for_response;
              nw::retained_ptr<nw_endpoint *>::operator=(v12 + 384, buf);
              if (v29) {
                os_release((void *)v29);
              }
              os_release(v28);
              if ((*(unsigned char *)(v12 + 158) & 1) == 0)
              {
                if (gLogDatapath)
                {
                  v552 = __nwlog_obj();
                  if (os_log_type_enabled(v552, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v553 = *(void *)(v12 + 256);
                    int v554 = *(_DWORD *)(*(void *)(v12 + 248) + 372);
                    if (v553) {
                      LODWORD(v553) = *(_DWORD *)(v553 + 860);
                    }
                    int v555 = *(_DWORD *)(v12 + 424);
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                    __int16 v631 = 2082;
                    *(void *)v632 = v12 + 74;
                    *(_WORD *)&v632[8] = 2080;
                    *(void *)&v632[10] = " ";
                    *(_WORD *)&v632[18] = 1024;
                    *(_DWORD *)v633 = v554;
                    *(_WORD *)&v633[4] = 1024;
                    *(_DWORD *)&v633[6] = v553;
                    *(_WORD *)v634 = 1024;
                    *(_DWORD *)&v634[2] = v555;
                    _os_log_impl(&dword_1830D4000, v552, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> saved outbound message", buf, 0x32u);
                  }
                }
              }
              int v44 = *((_DWORD *)a1 + 13);
              if ((!v44 || v44 == *((_DWORD *)a1 + 14) + *((_DWORD *)a1 + 15)) && (uint64_t v45 = *((void *)a1 + 8)) != 0) {
                int v46 = (*(unsigned __int8 *)(v45 + 66) >> 6) & 1;
              }
              else {
                int v46 = 0;
              }
              os_log_type_t v53 = *v18;
              if (*v18)
              {
                if (*(unsigned char *)(*(void *)(v12 + 248) + 376))
                {
                  id v55 = nw_http_metadata_copy_response(v53);
                  int status_code = nw_http_response_get_status_code(v55);
                  LODWORD(v58) = status_code == 101;
                  if ((status_code - 200) < 0xFFFFFF9C || status_code == 101) {
                    __int16 v60 = 0;
                  }
                  else {
                    __int16 v60 = 2048;
                  }
                  *(_WORD *)(v12 + 428) = v60 | *(_WORD *)(v12 + 428) & 0xF7FF;
                  BOOL v61 = status_code == 101 || (status_code - 200) > 0xFFFFFF9B;
                  BOOL v56 = v61;
                  if (!v55) {
                    goto LABEL_137;
                  }
                  goto LABEL_136;
                }
                id v54 = nw_http_metadata_copy_request(v53);
                if (!v54)
                {
                  BOOL v56 = 0;
                  LODWORD(v58) = 0;
                  goto LABEL_137;
                }
                id v55 = v54;
                BOOL v56 = nw_http_request_has_method(v54, (uint64_t)"GET")
                   || nw_http_request_has_method(v55, (uint64_t)"HEAD");
                if ((*(unsigned char *)(*(void *)(v12 + 248) + 376) & 4) != 0)
                {
                  int v68 = nw_parameters_copy_url_endpoint(*(void **)(v12 + 320));
                  __int16 v58 = v68;
                  if (!v68)
                  {
LABEL_136:
                    os_release(v55);
LABEL_137:
                    id v70 = nw_http_metadata_copy_header_fields(*v18);
                    if (!nw_http_fields_have_field_with_name(v70, (unint64_t)"Connection")
                      && (*(_WORD *)(v12 + 428) & 0x800) == 0)
                    {
                      nw_http_fields_append(v70, (uint64_t)"Connection", (uint64_t)"keep-alive");
                    }
                    if (((v46 ^ 1 | v56) & 1) == 0
                      && !nw_http_fields_have_field_with_name(v70, (unint64_t)"Content-Length"))
                    {
                      nw_http_fields_append(v70, (uint64_t)"Content-Length", (uint64_t)"0");
                    }
                    if ((v46 & 1) == 0)
                    {
                      if (v58 | nw_http_fields_have_field_with_name(v70, (unint64_t)"Content-Length"))__int16 v71 = 0; {
                      else
                      }
                        __int16 v71 = 256;
                      *(_WORD *)(v12 + 428) = *(_WORD *)(v12 + 428) & 0xFEFF | v71;
                      if ((*(unsigned char *)(v12 + 158) & 1) == 0)
                      {
                        if (gLogDatapath)
                        {
                          v578 = __nwlog_obj();
                          if (os_log_type_enabled(v578, OS_LOG_TYPE_DEBUG))
                          {
                            uint64_t v579 = *(void *)(v12 + 256);
                            int v580 = *(_DWORD *)(*(void *)(v12 + 248) + 372);
                            if (v579) {
                              LODWORD(v579) = *(_DWORD *)(v579 + 860);
                            }
                            int v581 = *(_DWORD *)(v12 + 424);
                            v582 = "uses";
                            if ((*(_WORD *)(v12 + 428) & 0x100) == 0) {
                              v582 = "does not use";
                            }
                            *(_DWORD *)buf = 136447746;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_process_outbound_message";
                            __int16 v631 = 2082;
                            *(void *)v632 = v12 + 74;
                            *(_WORD *)&v632[8] = 2080;
                            *(void *)&v632[10] = " ";
                            *(_WORD *)&v632[18] = 1024;
                            *(_DWORD *)v633 = v580;
                            *(_WORD *)&v633[4] = 1024;
                            *(_DWORD *)&v633[6] = v579;
                            *(_WORD *)v634 = 1024;
                            *(_DWORD *)&v634[2] = v581;
                            *(_WORD *)&v634[6] = 2080;
                            *(void *)&v634[8] = v582;
                            _os_log_impl(&dword_1830D4000, v578, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> outbound data %s chunked encoding", buf, 0x3Cu);
                          }
                        }
                      }
                      if ((*(_WORD *)(v12 + 428) & 0x100) != 0) {
                        nw_http_fields_set_value_by_name(v70, (uint64_t)"Transfer-Encoding", (uint64_t)"chunked");
                      }
                    }
                    uint64_t v72 = *(void *)(v12 + 256);
                    if (v58) {
                      __int16 v73 = 512;
                    }
                    else {
                      __int16 v73 = 0;
                    }
                    int v74 = *(_WORD *)(v72 + 872) & 0xFDFF | (*(unsigned __int8 *)(v72 + 874) << 16);
                    *(_WORD *)(v72 + 872) = *(_WORD *)(v72 + 872) & 0xFDFF | v73;
                    *(unsigned char *)(v72 + 874) = BYTE2(v74);
                    if (v70) {
                      os_release(v70);
                    }
LABEL_156:
                    nw_http_transaction_metadata_set_outbound_message(*(void **)(v12 + 352), *(void **)(v12 + 384));
                    nw::http::content_length_manager::set_outbound_message((nw::http::content_length_manager *)(v12 + 160), *(nw_protocol_metadata **)(v12 + 384));
                    os_release(v21);
                    char v22 = 1;
                    uint64_t v6 = v623;
                    p_cache = NWConcrete_nw_resolution_report.cache;
                    goto LABEL_181;
                  }
                  url = nw_endpoint_get_url(v68);
                  nw_http_request_set_path(v55, (uint64_t)url);
                  os_release(v58);
                }
                LODWORD(v58) = 0;
                goto LABEL_136;
              }
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_process_outbound_message";
              v548 = (char *)_os_log_send_and_compose_impl();
              LOBYTE(v636) = 16;
              LOBYTE(v640) = 0;
              if (__nwlog_fault(v548, &v636, &v640))
              {
                if (v636 == 17)
                {
                  v549 = __nwlog_obj();
                  os_log_type_t v550 = v636;
                  if (!os_log_type_enabled(v549, (os_log_type_t)v636)) {
                    goto LABEL_1064;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_process_outbound_message";
                  v551 = "%{public}s called with null http1_stream->outbound_message";
LABEL_1062:
                  v593 = v549;
                  os_log_type_t v594 = v550;
LABEL_1063:
                  _os_log_impl(&dword_1830D4000, v593, v594, v551, buf, 0xCu);
                  goto LABEL_1064;
                }
                if (!(_BYTE)v640)
                {
                  v549 = __nwlog_obj();
                  os_log_type_t v550 = v636;
                  if (!os_log_type_enabled(v549, (os_log_type_t)v636)) {
                    goto LABEL_1064;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_process_outbound_message";
                  v551 = "%{public}s called with null http1_stream->outbound_message, backtrace limit exceeded";
                  goto LABEL_1062;
                }
                v574 = (char *)__nw_create_backtrace_string();
                v575 = __nwlog_obj();
                os_log_type_t v576 = v636;
                BOOL v577 = os_log_type_enabled(v575, (os_log_type_t)v636);
                if (v574)
                {
                  if (v577)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_process_outbound_message";
                    __int16 v631 = 2082;
                    *(void *)v632 = v574;
                    _os_log_impl(&dword_1830D4000, v575, v576, "%{public}s called with null http1_stream->outbound_message, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v574);
                  goto LABEL_1064;
                }
                if (v577)
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_process_outbound_message";
                  v551 = "%{public}s called with null http1_stream->outbound_message, no backtrace";
                  v593 = v575;
                  os_log_type_t v594 = v576;
                  goto LABEL_1063;
                }
              }
LABEL_1064:
              if (v548) {
                free(v548);
              }
              goto LABEL_156;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
            BOOL v62 = (char *)_os_log_send_and_compose_impl();
            LOBYTE(v636) = 16;
            LOBYTE(v640) = 0;
            if (__nwlog_fault(v62, &v636, &v640))
            {
              if (v636 == 17)
              {
                __int16 v63 = __nwlog_obj();
                os_log_type_t v64 = v636;
                if (!os_log_type_enabled(v63, (os_log_type_t)v636)) {
                  goto LABEL_176;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                __int16 v65 = "%{public}s did not find response on frame";
                goto LABEL_174;
              }
              if (!(_BYTE)v640)
              {
                __int16 v63 = __nwlog_obj();
                os_log_type_t v64 = v636;
                if (!os_log_type_enabled(v63, (os_log_type_t)v636)) {
                  goto LABEL_176;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                __int16 v65 = "%{public}s did not find response on frame, backtrace limit exceeded";
                goto LABEL_174;
              }
              BOOL v75 = (char *)__nw_create_backtrace_string();
              uint64_t v76 = __nwlog_obj();
              os_log_type_t v77 = v636;
              BOOL v80 = os_log_type_enabled(v76, (os_log_type_t)v636);
              if (v75)
              {
                if (!v80) {
                  goto LABEL_166;
                }
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                __int16 v631 = 2082;
                *(void *)v632 = v75;
                int v79 = "%{public}s did not find response on frame, dumping backtrace:%{public}s";
LABEL_165:
                _os_log_impl(&dword_1830D4000, v76, v77, v79, buf, 0x16u);
LABEL_166:
                free(v75);
                if (!v62) {
                  goto LABEL_178;
                }
                goto LABEL_177;
              }
              if (v80)
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                __int16 v65 = "%{public}s did not find response on frame, no backtrace";
                goto LABEL_310;
              }
            }
          }
          else
          {
            id v27 = nw_http_metadata_copy_request(v21);
            if (v27)
            {
              os_log_type_t v28 = v27;
              BOOL v29 = nw_http_request_copy(v27);
              metadata_for_response = nw_http_create_metadata_for_request((void *)v29);
              goto LABEL_72;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
            BOOL v62 = (char *)_os_log_send_and_compose_impl();
            LOBYTE(v636) = 16;
            LOBYTE(v640) = 0;
            if (__nwlog_fault(v62, &v636, &v640))
            {
              if (v636 == 17)
              {
                __int16 v63 = __nwlog_obj();
                os_log_type_t v64 = v636;
                if (!os_log_type_enabled(v63, (os_log_type_t)v636)) {
                  goto LABEL_176;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                __int16 v65 = "%{public}s did not find request on frame";
                goto LABEL_174;
              }
              if (!(_BYTE)v640)
              {
                __int16 v63 = __nwlog_obj();
                os_log_type_t v64 = v636;
                if (!os_log_type_enabled(v63, (os_log_type_t)v636)) {
                  goto LABEL_176;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                __int16 v65 = "%{public}s did not find request on frame, backtrace limit exceeded";
                goto LABEL_174;
              }
              BOOL v75 = (char *)__nw_create_backtrace_string();
              uint64_t v76 = __nwlog_obj();
              os_log_type_t v77 = v636;
              BOOL v78 = os_log_type_enabled(v76, (os_log_type_t)v636);
              if (v75)
              {
                if (!v78) {
                  goto LABEL_166;
                }
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                __int16 v631 = 2082;
                *(void *)v632 = v75;
                int v79 = "%{public}s did not find request on frame, dumping backtrace:%{public}s";
                goto LABEL_165;
              }
              if (v78)
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                __int16 v65 = "%{public}s did not find request on frame, no backtrace";
LABEL_310:
                uint64_t v81 = v76;
                os_log_type_t v82 = v77;
                goto LABEL_175;
              }
            }
          }
LABEL_176:
          if (!v62)
          {
LABEL_178:
            uint64_t v6 = v623;
            p_cache = NWConcrete_nw_resolution_report.cache;
LABEL_179:
            os_release(v21);
LABEL_180:
            char v22 = 0;
            goto LABEL_181;
          }
LABEL_177:
          free(v62);
          goto LABEL_178;
        }
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
        BOOL v62 = (char *)_os_log_send_and_compose_impl();
        LOBYTE(v636) = 16;
        LOBYTE(v640) = 0;
        if (!__nwlog_fault(v62, &v636, &v640)) {
          goto LABEL_176;
        }
        if (v636 == 17)
        {
          __int16 v63 = __nwlog_obj();
          os_log_type_t v64 = v636;
          if (!os_log_type_enabled(v63, (os_log_type_t)v636)) {
            goto LABEL_176;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
          __int16 v65 = "%{public}s metadata must be http";
        }
        else
        {
          if ((_BYTE)v640)
          {
            v562 = (char *)__nw_create_backtrace_string();
            uint64_t v76 = __nwlog_obj();
            os_log_type_t v77 = v636;
            BOOL v563 = os_log_type_enabled(v76, (os_log_type_t)v636);
            if (v562)
            {
              if (v563)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
                __int16 v631 = 2082;
                *(void *)v632 = v562;
                _os_log_impl(&dword_1830D4000, v76, v77, "%{public}s metadata must be http, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v562);
            }
            else if (v563)
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
              __int16 v65 = "%{public}s metadata must be http, no backtrace";
              goto LABEL_310;
            }
            goto LABEL_176;
          }
          __int16 v63 = __nwlog_obj();
          os_log_type_t v64 = v636;
          if (!os_log_type_enabled(v63, (os_log_type_t)v636)) {
            goto LABEL_176;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
          __int16 v65 = "%{public}s metadata must be http, backtrace limit exceeded";
        }
LABEL_174:
        uint64_t v81 = v63;
        os_log_type_t v82 = v64;
LABEL_175:
        _os_log_impl(&dword_1830D4000, v81, v82, v65, buf, 0xCu);
        goto LABEL_176;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
      os_log_type_t v39 = (char *)_os_log_send_and_compose_impl();
      LOBYTE(v636) = 16;
      LOBYTE(v640) = 0;
      if (__nwlog_fault(v39, &v636, &v640))
      {
        if (v636 == 17)
        {
          unsigned int v40 = __nwlog_obj();
          os_log_type_t v41 = v636;
          if (os_log_type_enabled(v40, (os_log_type_t)v636))
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
            int v42 = "%{public}s did not find outbound message on frame, dropping";
LABEL_126:
            int v66 = v40;
            os_log_type_t v67 = v41;
LABEL_127:
            _os_log_impl(&dword_1830D4000, v66, v67, v42, buf, 0xCu);
          }
        }
        else if ((_BYTE)v640)
        {
          unsigned int v47 = (char *)__nw_create_backtrace_string();
          BOOL v48 = __nwlog_obj();
          os_log_type_t v49 = v636;
          BOOL v50 = os_log_type_enabled(v48, (os_log_type_t)v636);
          if (v47)
          {
            if (v50)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
              __int16 v631 = 2082;
              *(void *)v632 = v47;
              _os_log_impl(&dword_1830D4000, v48, v49, "%{public}s did not find outbound message on frame, dropping, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v47);
            goto LABEL_128;
          }
          if (v50)
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
            int v42 = "%{public}s did not find outbound message on frame, dropping, no backtrace";
            int v66 = v48;
            os_log_type_t v67 = v49;
            goto LABEL_127;
          }
        }
        else
        {
          unsigned int v40 = __nwlog_obj();
          os_log_type_t v41 = v636;
          if (os_log_type_enabled(v40, (os_log_type_t)v636))
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_save_outbound_message";
            int v42 = "%{public}s did not find outbound message on frame, dropping, backtrace limit exceeded";
            goto LABEL_126;
          }
        }
      }
LABEL_128:
      if (v39) {
        free(v39);
      }
      char v22 = 0;
      uint64_t v6 = v623;
LABEL_181:
      if (v17) {
        os_release(v17);
      }
      if ((v22 & 1) == 0)
      {
LABEL_948:
        if ((*(unsigned char *)(v6 + 158) & 1) == 0)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          v540 = gLogObj;
          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
          {
            uint64_t v541 = *(void *)(v6 + 488);
            int v542 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
            int v543 = *(_DWORD *)(v6 + 860);
            if (v541) {
              LODWORD(v541) = *(_DWORD *)(v541 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
            __int16 v631 = 2082;
            *(void *)v632 = v6 + 74;
            *(_WORD *)&v632[8] = 2080;
            *(void *)&v632[10] = " ";
            *(_WORD *)&v632[18] = 1024;
            *(_DWORD *)v633 = v542;
            *(_WORD *)&v633[4] = 1024;
            *(_DWORD *)&v633[6] = v543;
            *(_WORD *)v634 = 1024;
            *(_DWORD *)&v634[2] = v541;
            _os_log_impl(&dword_1830D4000, v540, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> invalid message supplied to http1_connection, dropping", buf, 0x32u);
          }
        }
        if ((*((_WORD *)a1 + 102) & 0x100) == 0
          || !g_channel_check_validity
          || g_channel_check_validity(a1, *((void *)a1 + 11)))
        {
          v544 = (void *)*((void *)a1 + 14);
          if (v544) {
            free(v544);
          }
        }
        nw_frame_reset((uint64_t)a1, 0, 0, 0, 0);
        os_release(a1);
        uint64_t v545 = *(void *)(v6 + 488);
        if (v545) {
          v546 = *(void **)(v545 + 48);
        }
        else {
          v546 = 0;
        }
        nw_protocol_error(v546, v545);
        uint64_t v547 = *(void *)(v6 + 488);
        if (v547) {
          nw_protocol_disconnected(*(void **)(v547 + 48), v547);
        }
        else {
          nw_protocol_disconnected(0, 0);
        }
        return;
      }
      *(_WORD *)(*(void *)(v6 + 488) + 428) |= 0x2000u;
      int v83 = *((_DWORD *)a1 + 13);
      if ((!v83 || v83 == *((_DWORD *)a1 + 14) + *((_DWORD *)a1 + 15))
        && (uint64_t v84 = *((void *)a1 + 8)) != 0
        && (*(unsigned char *)(v84 + 66) & 0x40) != 0)
      {
        int v618 = 1;
        if ((*(unsigned char *)(v6 + 158) & 1) == 0 && gLogDatapath)
        {
          v564 = __nwlog_obj();
          if (os_log_type_enabled(v564, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v565 = *(void *)(v623 + 488);
            int v566 = *(_DWORD *)(*(void *)(v623 + 480) + 372);
            int v567 = *(_DWORD *)(v623 + 860);
            if (v565) {
              LODWORD(v565) = *(_DWORD *)(v565 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
            __int16 v631 = 2082;
            *(void *)v632 = v623 + 74;
            *(_WORD *)&v632[8] = 2080;
            *(void *)&v632[10] = " ";
            *(_WORD *)&v632[18] = 1024;
            *(_DWORD *)v633 = v566;
            *(_WORD *)&v633[4] = 1024;
            *(_DWORD *)&v633[6] = v567;
            *(_WORD *)v634 = 1024;
            *(_DWORD *)&v634[2] = v565;
            _os_log_impl(&dword_1830D4000, v564, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> outbound message is headers only, setting complete for headers", buf, 0x32u);
          }
          int v618 = 1;
          uint64_t v6 = v623;
          uint64_t v85 = *(void *)(v623 + 488);
          if (!v85) {
            goto LABEL_189;
          }
        }
        else
        {
          uint64_t v85 = *(void *)(v6 + 488);
          if (!v85) {
            goto LABEL_189;
          }
        }
      }
      else
      {
        int v618 = 0;
        uint64_t v85 = *(void *)(v6 + 488);
        if (!v85)
        {
LABEL_189:
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
          uint64_t v86 = (char *)_os_log_send_and_compose_impl();
          LOBYTE(v636) = 16;
          LOBYTE(v640) = 0;
          if (!__nwlog_fault(v86, &v636, &v640)) {
            goto LABEL_1012;
          }
          if (v636 == 17)
          {
            os_log_type_t v87 = __nwlog_obj();
            os_log_type_t v88 = v636;
            if (os_log_type_enabled(v87, (os_log_type_t)v636))
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
              v89 = "%{public}s called with null http1_stream";
LABEL_1010:
              v572 = v87;
              os_log_type_t v573 = v88;
LABEL_1011:
              _os_log_impl(&dword_1830D4000, v572, v573, v89, buf, 0xCu);
              goto LABEL_1012;
            }
            goto LABEL_1012;
          }
          if (!(_BYTE)v640)
          {
            os_log_type_t v87 = __nwlog_obj();
            os_log_type_t v88 = v636;
            if (os_log_type_enabled(v87, (os_log_type_t)v636))
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
              v89 = "%{public}s called with null http1_stream, backtrace limit exceeded";
              goto LABEL_1010;
            }
            goto LABEL_1012;
          }
          v524 = (char *)__nw_create_backtrace_string();
          v525 = __nwlog_obj();
          os_log_type_t v526 = v636;
          BOOL v527 = os_log_type_enabled(v525, (os_log_type_t)v636);
          if (v524)
          {
            if (v527)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
              __int16 v631 = 2082;
              *(void *)v632 = v524;
              v528 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
LABEL_923:
              _os_log_impl(&dword_1830D4000, v525, v526, v528, buf, 0x16u);
              goto LABEL_924;
            }
            goto LABEL_924;
          }
          if (!v527) {
            goto LABEL_1012;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
          v89 = "%{public}s called with null http1_stream, no backtrace";
          goto LABEL_1039;
        }
      }
      if (!*(void *)(v85 + 248))
      {
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
        uint64_t v86 = (char *)_os_log_send_and_compose_impl();
        LOBYTE(v636) = 16;
        LOBYTE(v640) = 0;
        if (!__nwlog_fault(v86, &v636, &v640)) {
          goto LABEL_1012;
        }
        if (v636 == 17)
        {
          os_log_type_t v87 = __nwlog_obj();
          os_log_type_t v88 = v636;
          if (os_log_type_enabled(v87, (os_log_type_t)v636))
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
            v89 = "%{public}s called with null http1_stream->protocol_http1";
            goto LABEL_1010;
          }
LABEL_1012:
          if (v86) {
            free(v86);
          }
          uint64_t v6 = v623;
          goto LABEL_401;
        }
        if (!(_BYTE)v640)
        {
          os_log_type_t v87 = __nwlog_obj();
          os_log_type_t v88 = v636;
          if (os_log_type_enabled(v87, (os_log_type_t)v636))
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
            v89 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
            goto LABEL_1010;
          }
          goto LABEL_1012;
        }
        v524 = (char *)__nw_create_backtrace_string();
        v525 = __nwlog_obj();
        os_log_type_t v526 = v636;
        BOOL v529 = os_log_type_enabled(v525, (os_log_type_t)v636);
        if (v524)
        {
          if (v529)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
            __int16 v631 = 2082;
            *(void *)v632 = v524;
            v528 = "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s";
            goto LABEL_923;
          }
LABEL_924:
          free(v524);
          goto LABEL_1012;
        }
        if (!v529) {
          goto LABEL_1012;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
        v89 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
LABEL_1039:
        v572 = v525;
        os_log_type_t v573 = v526;
        goto LABEL_1011;
      }
      if (*(void *)(v85 + 256))
      {
        if ((*(_WORD *)(v85 + 428) & 2) != 0)
        {
          if ((*(unsigned char *)(v85 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              uint64_t v139 = __nwlog_obj();
              if (os_log_type_enabled(v139, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v140 = *(void *)(v85 + 256);
                int v141 = *(_DWORD *)(*(void *)(v85 + 248) + 372);
                if (v140) {
                  LODWORD(v140) = *(_DWORD *)(v140 + 860);
                }
                int v142 = *(_DWORD *)(v85 + 424);
                *(_DWORD *)buf = 136447490;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
                __int16 v631 = 2082;
                *(void *)v632 = v85 + 74;
                *(_WORD *)&v632[8] = 2080;
                *(void *)&v632[10] = " ";
                *(_WORD *)&v632[18] = 1024;
                *(_DWORD *)v633 = v141;
                *(_WORD *)&v633[4] = 1024;
                *(_DWORD *)&v633[6] = v140;
                *(_WORD *)v634 = 1024;
                *(_DWORD *)&v634[2] = v142;
                _os_log_impl(&dword_1830D4000, v139, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> already sent, skipping", buf, 0x32u);
                uint64_t v6 = v623;
              }
            }
          }
          goto LABEL_401;
        }
        BOOL v90 = *(void **)(v85 + 384);
        if (v90)
        {
          size_t __len = 0;
          uint64_t v91 = nw_http_metadata_legacy_serialize(v90, (uint64_t)&__len);
          if ((*(unsigned char *)(v85 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              v568 = __nwlog_obj();
              if (os_log_type_enabled(v568, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v569 = *(void *)(v85 + 256);
                int v570 = *(_DWORD *)(*(void *)(v85 + 248) + 372);
                if (v569) {
                  LODWORD(v569) = *(_DWORD *)(v569 + 860);
                }
                int v571 = *(_DWORD *)(v85 + 424);
                *(_DWORD *)buf = 136448002;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
                __int16 v631 = 2082;
                *(void *)v632 = v85 + 74;
                *(_WORD *)&v632[8] = 2080;
                *(void *)&v632[10] = " ";
                *(_WORD *)&v632[18] = 1024;
                *(_DWORD *)v633 = v570;
                *(_WORD *)&v633[4] = 1024;
                *(_DWORD *)&v633[6] = v569;
                *(_WORD *)v634 = 1024;
                *(_DWORD *)&v634[2] = v571;
                *(_WORD *)&v634[6] = 2048;
                *(void *)&v634[8] = v91;
                *(_WORD *)&v634[16] = 2048;
                size_t v635 = __len;
                _os_log_impl(&dword_1830D4000, v568, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> got buffer %p of length %zu bytes", buf, 0x46u);
                uint64_t v6 = v623;
              }
            }
          }
          size_t v92 = __len;
          if (!v91 || !__len) {
            goto LABEL_348;
          }
          uint64_t v93 = *(void *)(v85 + 256);
          uint64_t v607 = v91;
          if (v93)
          {
            if (__len)
            {
              uint64_t v622 = *(void *)(v93 + 32);
              if (v622)
              {
                size_t v617 = __len;
                uint64_t v620 = *(void *)(v85 + 256);
                if ((*(unsigned char *)(v93 + 158) & 1) == 0)
                {
                  if (gLogDatapath)
                  {
                    v589 = __nwlog_obj();
                    if (os_log_type_enabled(v589, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v590 = *(void *)(v93 + 488);
                      int v591 = *(_DWORD *)(*(void *)(v93 + 480) + 372);
                      int v592 = *(_DWORD *)(v93 + 860);
                      if (v590) {
                        LODWORD(v590) = *(_DWORD *)(v590 + 424);
                      }
                      *(_DWORD *)buf = 136447746;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      __int16 v631 = 2082;
                      *(void *)v632 = v93 + 74;
                      *(_WORD *)&v632[8] = 2080;
                      *(void *)&v632[10] = " ";
                      *(_WORD *)&v632[18] = 1024;
                      *(_DWORD *)v633 = v591;
                      *(_WORD *)&v633[4] = 1024;
                      *(_DWORD *)&v633[6] = v592;
                      *(_WORD *)v634 = 1024;
                      *(_DWORD *)&v634[2] = v590;
                      *(_WORD *)&v634[6] = 1024;
                      size_t v92 = v617;
                      *(_DWORD *)&v634[8] = v617;
                      _os_log_impl(&dword_1830D4000, v589, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> sending %u bytes", buf, 0x38u);
                      uint64_t v6 = v623;
                    }
                  }
                }
                uint64_t v613 = v93 + 74;
                unsigned int v94 = v92;
                unsigned int v95 = (char *)v91;
LABEL_213:
                *(void *)os_log_type_t type = 0;
                v629 = type;
                uint64_t v626 = 0;
                v627 = &v626;
                int output_frames = nw_protocol_get_output_frames(v622, v93, 1, v92, 0xFFFFFFFFLL, (uint64_t)type);
                uint64_t v100 = *(void *)type;
                if (*(void *)type) {
                  BOOL v101 = output_frames == 0;
                }
                else {
                  BOOL v101 = 1;
                }
                if (v101)
                {
                  int v150 = output_frames;
                  if (output_frames)
                  {
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                    __int16 v631 = 1024;
                    *(_DWORD *)v632 = v150;
                    int v151 = (char *)_os_log_send_and_compose_impl();
                    LOBYTE(v640) = 16;
                    char v625 = 0;
                    if (!__nwlog_fault(v151, &v640, &v625)) {
                      goto LABEL_338;
                    }
                    if (v640 != 17)
                    {
                      if (v625)
                      {
                        int v155 = (char *)__nw_create_backtrace_string();
                        int v156 = __nwlog_obj();
                        os_log_type_t v157 = v640;
                        BOOL v158 = os_log_type_enabled(v156, (os_log_type_t)v640);
                        if (v155)
                        {
                          if (v158)
                          {
                            *(_DWORD *)buf = 136446722;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                            __int16 v631 = 1024;
                            *(_DWORD *)v632 = v150;
                            *(_WORD *)&v632[4] = 2082;
                            *(void *)&v632[6] = v155;
                            _os_log_impl(&dword_1830D4000, v156, v157, "%{public}s output handler reported %u frames to write, but array is empty, dumping backtrace:%{public}s", buf, 0x1Cu);
                          }
                          free(v155);
                          goto LABEL_338;
                        }
                        if (!v158) {
                          goto LABEL_338;
                        }
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                        __int16 v631 = 1024;
                        *(_DWORD *)v632 = v150;
                        uint64_t v154 = "%{public}s output handler reported %u frames to write, but array is empty, no backtrace";
                        int v168 = v156;
                        os_log_type_t v169 = v157;
                      }
                      else
                      {
                        int v152 = __nwlog_obj();
                        os_log_type_t v153 = v640;
                        if (!os_log_type_enabled(v152, (os_log_type_t)v640)) {
                          goto LABEL_338;
                        }
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                        __int16 v631 = 1024;
                        *(_DWORD *)v632 = v150;
                        uint64_t v154 = "%{public}s output handler reported %u frames to write, but array is empty, backtrace limit exceeded";
LABEL_336:
                        int v168 = v152;
                        os_log_type_t v169 = v153;
                      }
                      _os_log_impl(&dword_1830D4000, v168, v169, v154, buf, 0x12u);
                      goto LABEL_338;
                    }
                    int v152 = __nwlog_obj();
                    os_log_type_t v153 = v640;
                    if (os_log_type_enabled(v152, (os_log_type_t)v640))
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      __int16 v631 = 1024;
                      *(_DWORD *)v632 = v150;
                      uint64_t v154 = "%{public}s output handler reported %u frames to write, but array is empty";
                      goto LABEL_336;
                    }
LABEL_338:
                    if (v151) {
                      free(v151);
                    }
                    LODWORD(v92) = v617;
                  }
                  if ((*(unsigned char *)(v620 + 158) & 1) == 0)
                  {
                    v170 = __nwlog_obj();
                    if (os_log_type_enabled(v170, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v171 = *(void *)(v620 + 488);
                      int v172 = *(_DWORD *)(*(void *)(v620 + 480) + 372);
                      int v173 = *(_DWORD *)(v620 + 860);
                      if (v171) {
                        LODWORD(v171) = *(_DWORD *)(v171 + 424);
                      }
                      *(_DWORD *)buf = 136447746;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      __int16 v631 = 2082;
                      *(void *)v632 = v613;
                      *(_WORD *)&v632[8] = 2080;
                      *(void *)&v632[10] = " ";
                      *(_WORD *)&v632[18] = 1024;
                      *(_DWORD *)v633 = v172;
                      *(_WORD *)&v633[4] = 1024;
                      *(_DWORD *)&v633[6] = v173;
                      *(_WORD *)v634 = 1024;
                      *(_DWORD *)&v634[2] = v171;
                      *(_WORD *)&v634[6] = 1024;
                      *(_DWORD *)&v634[8] = v92;
                      _os_log_impl(&dword_1830D4000, v170, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> output handler refused frame request for frames of length %u", buf, 0x38u);
                    }
                  }
                  LODWORD(v92) = v92 - v94;
LABEL_347:
                  size_t v92 = v92;
                  p_cache = NWConcrete_nw_resolution_report.cache;
                  uint64_t v91 = v607;
                  if (__len == v92)
                  {
LABEL_348:
                    nw_http_transaction_metadata_increment_outbound_header_size(*(void **)(v85 + 352), v92);
                    __int16 v174 = *(_WORD *)(v85 + 428);
                    if ((v174 & 0x800) != 0)
                    {
                      *(void *)buf = 0;
                      nw::retained_ptr<nw_endpoint *>::operator=(v85 + 384, buf);
                    }
                    else
                    {
                      *(_WORD *)(v85 + 428) = v174 | 2;
                      if (v618)
                      {
                        *(_WORD *)(v85 + 428) = v174 | 0x402;
                        *(_WORD *)(*(void *)(v85 + 256) + 872) |= 0x20u;
                        nw_http_transaction_metadata_mark_outbound_message_end(*(void **)(v85 + 352));
                        if (*(unsigned char *)(v85 + 168))
                        {
                          if (*(void *)(v85 + 160) != *(void *)(v85 + 176))
                          {
                            if ((*(unsigned char *)(v85 + 158) & 1) == 0)
                            {
                              v175 = __nwlog_obj();
                              if (os_log_type_enabled(v175, OS_LOG_TYPE_ERROR))
                              {
                                uint64_t v176 = *(void *)(v85 + 256);
                                if (v176) {
                                  LODWORD(v176) = *(_DWORD *)(v176 + 860);
                                }
                                int v177 = *(_DWORD *)(*(void *)(v85 + 248) + 372);
                                int v178 = *(_DWORD *)(v85 + 424);
                                if (*(unsigned char *)(v85 + 168)) {
                                  uint64_t v179 = *(void *)(v85 + 160);
                                }
                                else {
                                  uint64_t v179 = -1;
                                }
                                size_t v199 = *(void *)(v85 + 176);
                                *(_DWORD *)buf = 136448002;
                                *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
                                __int16 v631 = 2082;
                                *(void *)v632 = v85 + 74;
                                *(_WORD *)&v632[8] = 2080;
                                *(void *)&v632[10] = " ";
                                *(_WORD *)&v632[18] = 1024;
                                *(_DWORD *)v633 = v177;
                                *(_WORD *)&v633[4] = 1024;
                                *(_DWORD *)&v633[6] = v176;
                                *(_WORD *)v634 = 1024;
                                *(_DWORD *)&v634[2] = v178;
                                *(_WORD *)&v634[6] = 2048;
                                *(void *)&v634[8] = v179;
                                *(_WORD *)&v634[16] = 2048;
                                size_t v635 = v199;
                                _os_log_impl(&dword_1830D4000, v175, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> Content length header %llu does not equal body size %llu", buf, 0x46u);
                              }
                            }
                            nw_protocol_error(*(void **)(v85 + 48), v85);
                            nw_protocol_disconnected(*(void **)(v85 + 48), v85);
                          }
                        }
                      }
                    }
                  }
                  else if ((*(unsigned char *)(v85 + 158) & 1) == 0)
                  {
                    os_log_type_t v180 = __nwlog_obj();
                    if (os_log_type_enabled(v180, OS_LOG_TYPE_ERROR))
                    {
                      uint64_t v181 = *(void *)(v85 + 256);
                      int v182 = *(_DWORD *)(*(void *)(v85 + 248) + 372);
                      if (v181) {
                        LODWORD(v181) = *(_DWORD *)(v181 + 860);
                      }
                      int v183 = *(_DWORD *)(v85 + 424);
                      *(_DWORD *)buf = 136447746;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
                      __int16 v631 = 2082;
                      *(void *)v632 = v85 + 74;
                      *(_WORD *)&v632[8] = 2080;
                      *(void *)&v632[10] = " ";
                      *(_WORD *)&v632[18] = 1024;
                      *(_DWORD *)v633 = v182;
                      *(_WORD *)&v633[4] = 1024;
                      *(_DWORD *)&v633[6] = v181;
                      *(_WORD *)v634 = 1024;
                      *(_DWORD *)&v634[2] = v183;
                      *(_WORD *)&v634[6] = 2048;
                      *(void *)&v634[8] = __len;
                      _os_log_impl(&dword_1830D4000, v180, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> failed to send outbound headers of length %zu", buf, 0x3Cu);
                    }
                  }
                  if (v91)
                  {
                    __int16 v149 = (void *)v91;
LABEL_400:
                    free(v149);
                  }
                  goto LABEL_401;
                }
                while (1)
                {
                  uint64_t v102 = *(void *)(v100 + 32);
                  if (v102 || *(void *)(v100 + 40))
                  {
                    uint64_t v103 = *(void *)(v100 + 112);
                    if (!v103) {
                      goto LABEL_227;
                    }
                  }
                  else
                  {
                    uint64_t v102 = 0;
                    uint64_t v103 = *(void *)(v100 + 112);
                    if (!v103) {
                      goto LABEL_227;
                    }
                  }
                  if ((*(_WORD *)(v100 + 204) & 0x100) != 0
                    && g_channel_check_validity
                    && !g_channel_check_validity(v100, *(void *)(v100 + 88)))
                  {
                    LODWORD(v103) = 0;
LABEL_227:
                    os_log_type_t v105 = 0;
                    goto LABEL_228;
                  }
                  LODWORD(v103) = *(_DWORD *)(v100 + 52);
                  uint64_t v104 = *(unsigned int *)(v100 + 56);
                  if (v103) {
                    LODWORD(v103) = v103 - (v104 + *(_DWORD *)(v100 + 60));
                  }
                  os_log_type_t v105 = (void *)(*(void *)(v100 + 112) + v104);
LABEL_228:
                  if (v103 >= v94) {
                    size_t v106 = v94;
                  }
                  else {
                    size_t v106 = v103;
                  }
                  memcpy(v105, v95, v106);
                  v94 -= v106;
                  v95 += v106;
                  if (!nw_frame_claim(v100, v107, v106, 0))
                  {
                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                    networkd_settings_init();
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                    __int16 v631 = 1024;
                    *(_DWORD *)v632 = v106;
                    int v112 = (char *)_os_log_send_and_compose_impl();
                    LOBYTE(v640) = 16;
                    char v625 = 0;
                    if (!__nwlog_fault(v112, &v640, &v625)) {
                      goto LABEL_253;
                    }
                    if (v640 == 17)
                    {
                      int v113 = __nwlog_obj();
                      os_log_type_t v114 = v640;
                      if (os_log_type_enabled(v113, (os_log_type_t)v640))
                      {
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                        __int16 v631 = 1024;
                        *(_DWORD *)v632 = v106;
                        v115 = v113;
                        os_log_type_t v116 = v114;
                        BOOL v117 = "%{public}s claiming frame with %u bytes failed";
                        goto LABEL_252;
                      }
                      goto LABEL_253;
                    }
                    if (!v625)
                    {
                      BOOL v122 = __nwlog_obj();
                      os_log_type_t v123 = v640;
                      if (!os_log_type_enabled(v122, (os_log_type_t)v640)) {
                        goto LABEL_253;
                      }
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      __int16 v631 = 1024;
                      *(_DWORD *)v632 = v106;
                      v115 = v122;
                      os_log_type_t v116 = v123;
                      BOOL v117 = "%{public}s claiming frame with %u bytes failed, backtrace limit exceeded";
LABEL_252:
                      _os_log_impl(&dword_1830D4000, v115, v116, v117, buf, 0x12u);
                      goto LABEL_253;
                    }
                    v118 = (char *)__nw_create_backtrace_string();
                    BOOL v119 = __nwlog_obj();
                    os_log_type_t v120 = v640;
                    BOOL v121 = os_log_type_enabled(v119, (os_log_type_t)v640);
                    if (v118)
                    {
                      if (v121)
                      {
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                        __int16 v631 = 1024;
                        *(_DWORD *)v632 = v106;
                        *(_WORD *)&v632[4] = 2082;
                        *(void *)&v632[6] = v118;
                        _os_log_impl(&dword_1830D4000, v119, v120, "%{public}s claiming frame with %u bytes failed, dumping backtrace:%{public}s", buf, 0x1Cu);
                      }
                      free(v118);
                      goto LABEL_253;
                    }
                    if (v121)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      __int16 v631 = 1024;
                      *(_DWORD *)v632 = v106;
                      v115 = v119;
                      os_log_type_t v116 = v120;
                      BOOL v117 = "%{public}s claiming frame with %u bytes failed, no backtrace";
                      goto LABEL_252;
                    }
LABEL_253:
                    if (v112) {
                      free(v112);
                    }
                    uint64_t v6 = v623;
LABEL_256:
                    uint64_t v124 = (uint64_t *)v627[1];
                    uint64_t v125 = *v124;
                    if (*v124)
                    {
                      nw_frame_set_metadata(*v124, 0, 0, v618);
                      if (v618)
                      {
                        if ((*(unsigned char *)(v620 + 158) & 1) == 0)
                        {
                          if (gLogDatapath)
                          {
                            os_log_type_t v131 = __nwlog_obj();
                            if (os_log_type_enabled(v131, OS_LOG_TYPE_DEBUG))
                            {
                              uint64_t v132 = *(void *)(v620 + 488);
                              if (v132) {
                                LODWORD(v132) = *(_DWORD *)(v132 + 424);
                              }
                              int v133 = *(_DWORD *)(*(void *)(v620 + 480) + 372);
                              int v134 = *(_DWORD *)(v620 + 860);
                              *(_DWORD *)buf = 136447746;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                              __int16 v631 = 2082;
                              *(void *)v632 = v613;
                              *(_WORD *)&v632[8] = 2080;
                              *(void *)&v632[10] = " ";
                              *(_WORD *)&v632[18] = 1024;
                              *(_DWORD *)v633 = v133;
                              *(_WORD *)&v633[4] = 1024;
                              *(_DWORD *)&v633[6] = v134;
                              *(_WORD *)v634 = 1024;
                              *(_DWORD *)&v634[2] = v132;
                              *(_WORD *)&v634[6] = 2048;
                              *(void *)&v634[8] = v125;
                              _os_log_impl(&dword_1830D4000, v131, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> setting complete on last output frame %p", buf, 0x3Cu);
                              uint64_t v6 = v623;
                            }
                          }
                        }
                      }
                    }
                    nw_protocol_finalize_output_frames(v622, (uint64_t)&v626);
                    uint64_t v126 = *(void *)type;
                    size_t v92 = v617;
                    uint64_t v93 = v620;
                    if (*(void *)type)
                    {
                      *(void *)&long long v640 = 0;
                      *((void *)&v640 + 1) = &v640;
                      int v642 = 0;
                      uint64_t v641 = 0x2000000000;
                      *(void *)&long long v636 = MEMORY[0x1E4F143A8];
                      *((void *)&v636 + 1) = 0x40000000;
                      v637 = ___ZL30nw_http1_connection_send_bytesP19nw_http1_connectionPhjb_block_invoke;
                      v638 = &unk_1E5241520;
                      v639 = &v640;
                      do
                      {
                        if (!v126) {
                          break;
                        }
                        uint64_t v127 = *(void *)(v126 + 32);
                        char v128 = ((uint64_t (*)(long long *))v637)(&v636);
                        uint64_t v126 = v127;
                      }
                      while ((v128 & 1) != 0);
                      if ((*(unsigned char *)(v620 + 158) & 1) == 0)
                      {
                        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                        networkd_settings_init();
                        v129 = gLogObj;
                        if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
                        {
                          uint64_t v130 = *(void *)(v620 + 488);
                          if (v130) {
                            LODWORD(v130) = *(_DWORD *)(v130 + 424);
                          }
                          int v96 = *(_DWORD *)(*(void *)(v620 + 480) + 372);
                          int v97 = *(_DWORD *)(v620 + 860);
                          int v98 = *(_DWORD *)(*((void *)&v640 + 1) + 24);
                          *(_DWORD *)buf = 136447746;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                          __int16 v631 = 2082;
                          *(void *)v632 = v613;
                          *(_WORD *)&v632[8] = 2080;
                          *(void *)&v632[10] = " ";
                          *(_WORD *)&v632[18] = 1024;
                          *(_DWORD *)v633 = v96;
                          *(_WORD *)&v633[4] = 1024;
                          *(_DWORD *)&v633[6] = v97;
                          *(_WORD *)v634 = 1024;
                          *(_DWORD *)&v634[2] = v130;
                          *(_WORD *)&v634[6] = 1024;
                          *(_DWORD *)&v634[8] = v98;
                          _os_log_impl(&dword_1830D4000, v129, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> failed to use %u frames, marking as failed", buf, 0x38u);
                        }
                      }
                      _Block_object_dispose(&v640, 8);
                    }
                    if (!v94) {
                      goto LABEL_347;
                    }
                    goto LABEL_213;
                  }
                  nw_frame_collapse(v100);
                  nw_frame_unclaim(v100, v108, v106, 0);
                  uint64_t v109 = *(void *)(v100 + 32);
                  v110 = *(void **)(v100 + 40);
                  if (v109)
                  {
                    *(void *)(v109 + 40) = v110;
                    v110 = *(void **)(v100 + 40);
                  }
                  else
                  {
                    v629 = *(os_log_type_t **)(v100 + 40);
                  }
                  void *v110 = v109;
                  uint64_t v111 = v627;
                  *(void *)(v100 + 32) = 0;
                  *(void *)(v100 + 40) = v111;
                  *uint64_t v111 = v100;
                  v627 = (uint64_t *)(v100 + 32);
                  if (v102)
                  {
                    uint64_t v100 = v102;
                    if (v94) {
                      continue;
                    }
                  }
                  goto LABEL_256;
                }
              }
              uint64_t v584 = v85;
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
              v585 = (char *)_os_log_send_and_compose_impl();
              LOBYTE(v636) = 16;
              LOBYTE(v640) = 0;
              if (__nwlog_fault(v585, &v636, &v640))
              {
                if (v636 == 17)
                {
                  v586 = __nwlog_obj();
                  os_log_type_t v587 = v636;
                  if (!os_log_type_enabled(v586, (os_log_type_t)v636)) {
                    goto LABEL_1096;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                  v588 = "%{public}s called with null output_handler";
                  goto LABEL_1094;
                }
                if (!(_BYTE)v640)
                {
                  v586 = __nwlog_obj();
                  os_log_type_t v587 = v636;
                  if (!os_log_type_enabled(v586, (os_log_type_t)v636)) {
                    goto LABEL_1096;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                  v588 = "%{public}s called with null output_handler, backtrace limit exceeded";
                  goto LABEL_1094;
                }
                v599 = (char *)__nw_create_backtrace_string();
                v596 = __nwlog_obj();
                os_log_type_t v597 = v636;
                BOOL v602 = os_log_type_enabled(v596, (os_log_type_t)v636);
                if (v599)
                {
                  if (!v602) {
                    goto LABEL_1080;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                  __int16 v631 = 2082;
                  *(void *)v632 = v599;
                  v601 = "%{public}s called with null output_handler, dumping backtrace:%{public}s";
LABEL_1079:
                  _os_log_impl(&dword_1830D4000, v596, v597, v601, buf, 0x16u);
LABEL_1080:
                  free(v599);
                  if (!v585) {
                    goto LABEL_1098;
                  }
                  goto LABEL_1097;
                }
                if (v602)
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                  v588 = "%{public}s called with null output_handler, no backtrace";
                  goto LABEL_1105;
                }
              }
LABEL_1096:
              if (!v585)
              {
LABEL_1098:
                LODWORD(v92) = 0;
                uint64_t v6 = v623;
                uint64_t v85 = v584;
                goto LABEL_347;
              }
LABEL_1097:
              free(v585);
              goto LABEL_1098;
            }
            uint64_t v584 = v85;
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
            v585 = (char *)_os_log_send_and_compose_impl();
            LOBYTE(v636) = 16;
            LOBYTE(v640) = 0;
            if (!__nwlog_fault(v585, &v636, &v640)) {
              goto LABEL_1096;
            }
            if (v636 == 17)
            {
              v586 = __nwlog_obj();
              os_log_type_t v587 = v636;
              if (!os_log_type_enabled(v586, (os_log_type_t)v636)) {
                goto LABEL_1096;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
              v588 = "%{public}s called with null length";
              goto LABEL_1094;
            }
            if (!(_BYTE)v640)
            {
              v586 = __nwlog_obj();
              os_log_type_t v587 = v636;
              if (!os_log_type_enabled(v586, (os_log_type_t)v636)) {
                goto LABEL_1096;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
              v588 = "%{public}s called with null length, backtrace limit exceeded";
              goto LABEL_1094;
            }
            v599 = (char *)__nw_create_backtrace_string();
            v596 = __nwlog_obj();
            os_log_type_t v597 = v636;
            BOOL v600 = os_log_type_enabled(v596, (os_log_type_t)v636);
            if (v599)
            {
              if (!v600) {
                goto LABEL_1080;
              }
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
              __int16 v631 = 2082;
              *(void *)v632 = v599;
              v601 = "%{public}s called with null length, dumping backtrace:%{public}s";
              goto LABEL_1079;
            }
            if (!v600) {
              goto LABEL_1096;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
            v588 = "%{public}s called with null length, no backtrace";
          }
          else
          {
            uint64_t v584 = v85;
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
            v585 = (char *)_os_log_send_and_compose_impl();
            LOBYTE(v636) = 16;
            LOBYTE(v640) = 0;
            if (!__nwlog_fault(v585, &v636, &v640)) {
              goto LABEL_1096;
            }
            if (v636 == 17)
            {
              v586 = __nwlog_obj();
              os_log_type_t v587 = v636;
              if (!os_log_type_enabled(v586, (os_log_type_t)v636)) {
                goto LABEL_1096;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
              v588 = "%{public}s called with null http1_connection";
LABEL_1094:
              v603 = v586;
              os_log_type_t v604 = v587;
LABEL_1095:
              _os_log_impl(&dword_1830D4000, v603, v604, v588, buf, 0xCu);
              goto LABEL_1096;
            }
            if (!(_BYTE)v640)
            {
              v586 = __nwlog_obj();
              os_log_type_t v587 = v636;
              if (!os_log_type_enabled(v586, (os_log_type_t)v636)) {
                goto LABEL_1096;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
              v588 = "%{public}s called with null http1_connection, backtrace limit exceeded";
              goto LABEL_1094;
            }
            v595 = (char *)__nw_create_backtrace_string();
            v596 = __nwlog_obj();
            os_log_type_t v597 = v636;
            BOOL v598 = os_log_type_enabled(v596, (os_log_type_t)v636);
            if (v595)
            {
              if (v598)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                __int16 v631 = 2082;
                *(void *)v632 = v595;
                _os_log_impl(&dword_1830D4000, v596, v597, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v595);
              goto LABEL_1096;
            }
            if (!v598) {
              goto LABEL_1096;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
            v588 = "%{public}s called with null http1_connection, no backtrace";
          }
LABEL_1105:
          v603 = v596;
          os_log_type_t v604 = v597;
          goto LABEL_1095;
        }
        goto LABEL_401;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
      int v135 = (const char *)_os_log_send_and_compose_impl();
      LOBYTE(v636) = 16;
      LOBYTE(v640) = 0;
      if (__nwlog_fault(v135, &v636, &v640))
      {
        if (v636 == 17)
        {
          BOOL v136 = __nwlog_obj();
          os_log_type_t v137 = v636;
          if (!os_log_type_enabled(v136, (os_log_type_t)v636)) {
            goto LABEL_291;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
          os_log_type_t v138 = "%{public}s Stream asked to send outbound headers without current connection";
LABEL_289:
          BOOL v147 = v136;
          os_log_type_t v148 = v137;
LABEL_290:
          _os_log_impl(&dword_1830D4000, v147, v148, v138, buf, 0xCu);
          goto LABEL_291;
        }
        if (!(_BYTE)v640)
        {
          BOOL v136 = __nwlog_obj();
          os_log_type_t v137 = v636;
          if (!os_log_type_enabled(v136, (os_log_type_t)v636)) {
            goto LABEL_291;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
          os_log_type_t v138 = "%{public}s Stream asked to send outbound headers without current connection, backtrace limit exceeded";
          goto LABEL_289;
        }
        __int16 v143 = (char *)__nw_create_backtrace_string();
        os_log_type_t v144 = __nwlog_obj();
        os_log_type_t v145 = v636;
        BOOL v146 = os_log_type_enabled(v144, (os_log_type_t)v636);
        if (v143)
        {
          if (v146)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
            __int16 v631 = 2082;
            *(void *)v632 = v143;
            _os_log_impl(&dword_1830D4000, v144, v145, "%{public}s Stream asked to send outbound headers without current connection, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v143);
          uint64_t v6 = v623;
        }
        else
        {
          uint64_t v6 = v623;
          if (v146)
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_send_outbound_headers";
            os_log_type_t v138 = "%{public}s Stream asked to send outbound headers without current connection, no backtrace";
            BOOL v147 = v144;
            os_log_type_t v148 = v145;
            goto LABEL_290;
          }
        }
      }
LABEL_291:
      if (v135)
      {
        __int16 v149 = (void *)v135;
        goto LABEL_400;
      }
LABEL_401:
      if (!nw_frame_unclaimed_length(a1))
      {
        *((void *)a1 + 10) = 0;
        *((void *)a1 + 11) = 0;
        nw_frame_cache_return_frame(v6 + 696, (uint64_t)a1);
        goto LABEL_784;
      }
LABEL_402:
      if ((*(unsigned char *)(v6 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          v497 = __nwlog_obj();
          if (os_log_type_enabled(v497, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v498 = *(void *)(v6 + 488);
            int v499 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
            int v500 = *(_DWORD *)(v6 + 860);
            if (v498) {
              LODWORD(v498) = *(_DWORD *)(v498 + 424);
            }
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_enqueue_outbound_frame";
            __int16 v631 = 2082;
            *(void *)v632 = v6 + 74;
            *(_WORD *)&v632[8] = 2080;
            *(void *)&v632[10] = " ";
            *(_WORD *)&v632[18] = 1024;
            *(_DWORD *)v633 = v499;
            *(_WORD *)&v633[4] = 1024;
            *(_DWORD *)&v633[6] = v500;
            *(_WORD *)v634 = 1024;
            *(_DWORD *)&v634[2] = v498;
            *(_WORD *)&v634[6] = 2048;
            *(void *)&v634[8] = a1;
            _os_log_impl(&dword_1830D4000, v497, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> enqueuing outbound frame %p", buf, 0x3Cu);
            uint64_t v6 = v623;
          }
        }
      }
      *((void *)a1 + 4) = 0;
      v200 = *(void **)(v6 + 656);
      *((void *)a1 + 5) = v200;
      void *v200 = a1;
      *(void *)(v6 + 656) = (char *)a1 + 32;
      if ((*(_WORD *)(*(void *)(v6 + 488) + 428) & 2) == 0) {
        goto LABEL_784;
      }
      if ((*(unsigned char *)(v6 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          v514 = __nwlog_obj();
          if (os_log_type_enabled(v514, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v515 = *(void *)(v6 + 488);
            int v516 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
            int v517 = *(_DWORD *)(v6 + 860);
            if (v515) {
              LODWORD(v515) = *(_DWORD *)(v515 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
            __int16 v631 = 2082;
            *(void *)v632 = v6 + 74;
            *(_WORD *)&v632[8] = 2080;
            *(void *)&v632[10] = " ";
            *(_WORD *)&v632[18] = 1024;
            *(_DWORD *)v633 = v516;
            *(_WORD *)&v633[4] = 1024;
            *(_DWORD *)&v633[6] = v517;
            *(_WORD *)v634 = 1024;
            *(_DWORD *)&v634[2] = v515;
            _os_log_impl(&dword_1830D4000, v514, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> draining pending outbound frames", buf, 0x32u);
            uint64_t v6 = v623;
          }
        }
      }
      if (!*(void *)(v6 + 480))
      {
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
        v510 = (char *)_os_log_send_and_compose_impl();
        LOBYTE(v636) = 16;
        LOBYTE(v640) = 0;
        if (!__nwlog_fault(v510, &v636, &v640)) {
          goto LABEL_982;
        }
        if (v636 == 17)
        {
          v511 = __nwlog_obj();
          os_log_type_t v512 = v636;
          if (os_log_type_enabled(v511, (os_log_type_t)v636))
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
            v513 = "%{public}s called with null http1_connection->protocol_http1";
            goto LABEL_980;
          }
          goto LABEL_982;
        }
        if (!(_BYTE)v640)
        {
          v511 = __nwlog_obj();
          os_log_type_t v512 = v636;
          if (os_log_type_enabled(v511, (os_log_type_t)v636))
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
            v513 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
            goto LABEL_980;
          }
          goto LABEL_982;
        }
        v518 = (char *)__nw_create_backtrace_string();
        v519 = __nwlog_obj();
        os_log_type_t v520 = v636;
        BOOL v521 = os_log_type_enabled(v519, (os_log_type_t)v636);
        if (v518)
        {
          if (v521)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
            __int16 v631 = 2082;
            *(void *)v632 = v518;
            v522 = "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s";
            goto LABEL_913;
          }
          goto LABEL_914;
        }
        if (!v521) {
          goto LABEL_982;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
        v513 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
        goto LABEL_1019;
      }
      if (!*(void *)(v6 + 488))
      {
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
        v510 = (char *)_os_log_send_and_compose_impl();
        LOBYTE(v636) = 16;
        LOBYTE(v640) = 0;
        if (!__nwlog_fault(v510, &v636, &v640)) {
          goto LABEL_982;
        }
        if (v636 == 17)
        {
          v511 = __nwlog_obj();
          os_log_type_t v512 = v636;
          if (os_log_type_enabled(v511, (os_log_type_t)v636))
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
            v513 = "%{public}s called with null http1_connection->current_stream";
            goto LABEL_980;
          }
          goto LABEL_982;
        }
        if (!(_BYTE)v640)
        {
          v511 = __nwlog_obj();
          os_log_type_t v512 = v636;
          if (!os_log_type_enabled(v511, (os_log_type_t)v636)) {
            goto LABEL_982;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
          v513 = "%{public}s called with null http1_connection->current_stream, backtrace limit exceeded";
          goto LABEL_980;
        }
        v518 = (char *)__nw_create_backtrace_string();
        v519 = __nwlog_obj();
        os_log_type_t v520 = v636;
        BOOL v523 = os_log_type_enabled(v519, (os_log_type_t)v636);
        if (v518)
        {
          if (v523)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
            __int16 v631 = 2082;
            *(void *)v632 = v518;
            v522 = "%{public}s called with null http1_connection->current_stream, dumping backtrace:%{public}s";
            goto LABEL_913;
          }
LABEL_914:
          free(v518);
          goto LABEL_982;
        }
        if (!v523) {
          goto LABEL_982;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
        v513 = "%{public}s called with null http1_connection->current_stream, no backtrace";
LABEL_1019:
        v556 = v519;
        os_log_type_t v557 = v520;
LABEL_981:
        _os_log_impl(&dword_1830D4000, v556, v557, v513, buf, 0xCu);
        goto LABEL_982;
      }
      v201 = (uint64_t *)(v6 + 648);
      uint64_t v202 = *(void *)(v6 + 648);
      if (!v202) {
        goto LABEL_782;
      }
      v606 = (void *)(v6 + 656);
      v605 = (unsigned __int16 *)(v6 + 872);
      uint64_t v614 = v6 + 696;
      uint64_t v619 = v6 + 74;
      v608 = (uint64_t *)(v6 + 648);
      while (2)
      {
        uint64_t v203 = *(void *)(v202 + 32);
        v204 = *(void **)(v202 + 40);
        v205 = (void *)(v202 + 32);
        if (v203)
        {
          *(void *)(v203 + 40) = v204;
          v204 = *(void **)(v202 + 40);
        }
        else
        {
          void *v606 = v204;
        }
        void *v204 = v203;
        void *v205 = 0;
        *(void *)(v202 + 40) = 0;
        LODWORD(__len) = 0;
        if (*(void *)(v202 + 112))
        {
          if ((*(_WORD *)(v202 + 204) & 0x100) != 0
            && g_channel_check_validity
            && (g_channel_check_validity(v202, *(void *)(v202 + 88)) & 1) == 0)
          {
            v208 = 0;
            LODWORD(__len) = 0;
            if (*(unsigned char *)(v6 + 158)) {
              goto LABEL_425;
            }
          }
          else
          {
            int v207 = *(_DWORD *)(v202 + 52);
            uint64_t v206 = *(unsigned int *)(v202 + 56);
            if (v207) {
              v207 -= v206 + *(_DWORD *)(v202 + 60);
            }
            LODWORD(__len) = v207;
            v208 = (char *)(*(void *)(v202 + 112) + v206);
            if (*(unsigned char *)(v6 + 158))
            {
LABEL_425:
              if (!v208 || !__len) {
                goto LABEL_411;
              }
              if ((*(_WORD *)(*(void *)(v6 + 488) + 428) & 0x100) == 0)
              {
LABEL_428:
                if (nw_frame_is_metadata_complete(v202))
                {
                  if ((*(unsigned char *)(v6 + 158) & 1) == 0)
                  {
                    if (*((unsigned char *)p_cache + 3665))
                    {
                      v365 = __nwlog_obj();
                      if (os_log_type_enabled(v365, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v366 = *(void *)(v6 + 488);
                        if (v366) {
                          LODWORD(v366) = *(_DWORD *)(v366 + 424);
                        }
                        uint64_t v6 = v623;
                        int v367 = *(_DWORD *)(*(void *)(v623 + 480) + 372);
                        int v368 = *(_DWORD *)(v623 + 860);
                        *(_DWORD *)buf = 136447746;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                        __int16 v631 = 2082;
                        *(void *)v632 = v619;
                        *(_WORD *)&v632[8] = 2080;
                        *(void *)&v632[10] = " ";
                        *(_WORD *)&v632[18] = 1024;
                        *(_DWORD *)v633 = v367;
                        *(_WORD *)&v633[4] = 1024;
                        *(_DWORD *)&v633[6] = v368;
                        *(_WORD *)v634 = 1024;
                        *(_DWORD *)&v634[2] = v366;
                        *(_WORD *)&v634[6] = 2048;
                        *(void *)&v634[8] = v202;
                        _os_log_impl(&dword_1830D4000, v365, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> draining output frame %p, complete", buf, 0x3Cu);
                        v201 = v608;
                      }
                    }
                  }
                }
                uint64_t v209 = __len;
                uint64_t v615 = v202;
                int is_metadata_complete = nw_frame_is_metadata_complete(v202);
                v610 = v205;
                if (v208)
                {
                  if (v209)
                  {
                    uint64_t v210 = *(void *)(v6 + 32);
                    if (v210)
                    {
                      uint64_t v211 = v209;
                      if ((*(unsigned char *)(v6 + 158) & 1) == 0)
                      {
                        if (*((unsigned char *)p_cache + 3665))
                        {
                          v360 = __nwlog_obj();
                          BOOL v361 = os_log_type_enabled(v360, OS_LOG_TYPE_DEBUG);
                          uint64_t v211 = v209;
                          if (v361)
                          {
                            uint64_t v362 = *(void *)(v6 + 488);
                            if (v362) {
                              LODWORD(v362) = *(_DWORD *)(v362 + 424);
                            }
                            uint64_t v6 = v623;
                            int v363 = *(_DWORD *)(*(void *)(v623 + 480) + 372);
                            int v364 = *(_DWORD *)(v623 + 860);
                            *(_DWORD *)buf = 136447746;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                            __int16 v631 = 2082;
                            *(void *)v632 = v619;
                            *(_WORD *)&v632[8] = 2080;
                            *(void *)&v632[10] = " ";
                            *(_WORD *)&v632[18] = 1024;
                            *(_DWORD *)v633 = v363;
                            *(_WORD *)&v633[4] = 1024;
                            *(_DWORD *)&v633[6] = v364;
                            *(_WORD *)v634 = 1024;
                            *(_DWORD *)&v634[2] = v362;
                            *(_WORD *)&v634[6] = 1024;
                            *(_DWORD *)&v634[8] = v209;
                            _os_log_impl(&dword_1830D4000, v360, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> sending %u bytes", buf, 0x38u);
                            uint64_t v211 = v209;
                          }
                        }
                      }
                      unsigned int v212 = v211;
LABEL_440:
                      *(void *)os_log_type_t type = 0;
                      v629 = type;
                      uint64_t v626 = 0;
                      v627 = &v626;
                      uint64_t v217 = v211;
                      int v218 = nw_protocol_get_output_frames(v210, v6, 1, v211, 0xFFFFFFFFLL, (uint64_t)type);
                      uint64_t v219 = *(void *)type;
                      if (*(void *)type) {
                        BOOL v220 = v218 == 0;
                      }
                      else {
                        BOOL v220 = 1;
                      }
                      if (v220)
                      {
                        int v259 = v218;
                        uint64_t v202 = v615;
                        if (v218)
                        {
                          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                          networkd_settings_init();
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                          __int16 v631 = 1024;
                          *(_DWORD *)v632 = v259;
                          v260 = (char *)_os_log_send_and_compose_impl();
                          LOBYTE(v640) = 16;
                          char v625 = 0;
                          if (!__nwlog_fault(v260, &v640, &v625)) {
                            goto LABEL_560;
                          }
                          if (v640 != 17)
                          {
                            if (v625)
                            {
                              v273 = (char *)__nw_create_backtrace_string();
                              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                              networkd_settings_init();
                              v274 = gLogObj;
                              os_log_type_t v275 = v640;
                              BOOL v276 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v640);
                              if (v273)
                              {
                                if (v276)
                                {
                                  *(_DWORD *)buf = 136446722;
                                  *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                                  __int16 v631 = 1024;
                                  *(_DWORD *)v632 = v259;
                                  *(_WORD *)&v632[4] = 2082;
                                  *(void *)&v632[6] = v273;
                                  _os_log_impl(&dword_1830D4000, v274, v275, "%{public}s output handler reported %u frames to write, but array is empty, dumping backtrace:%{public}s", buf, 0x1Cu);
                                }
                                free(v273);
                                goto LABEL_560;
                              }
                              if (!v276) {
                                goto LABEL_560;
                              }
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                              __int16 v631 = 1024;
                              *(_DWORD *)v632 = v259;
                              v263 = v274;
                              os_log_type_t v264 = v275;
                              v265 = "%{public}s output handler reported %u frames to write, but array is empty, no backtrace";
                            }
                            else
                            {
                              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                              networkd_settings_init();
                              uint64_t v298 = gLogObj;
                              os_log_type_t v299 = v640;
                              if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v640)) {
                                goto LABEL_560;
                              }
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                              __int16 v631 = 1024;
                              *(_DWORD *)v632 = v259;
                              v263 = v298;
                              os_log_type_t v264 = v299;
                              v265 = "%{public}s output handler reported %u frames to write, but array is empty, backtrac"
                                     "e limit exceeded";
                            }
LABEL_559:
                            _os_log_impl(&dword_1830D4000, v263, v264, v265, buf, 0x12u);
                            goto LABEL_560;
                          }
                          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                          networkd_settings_init();
                          uint64_t v261 = gLogObj;
                          os_log_type_t v262 = v640;
                          if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v640))
                          {
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                            __int16 v631 = 1024;
                            *(_DWORD *)v632 = v259;
                            v263 = v261;
                            os_log_type_t v264 = v262;
                            v265 = "%{public}s output handler reported %u frames to write, but array is empty";
                            goto LABEL_559;
                          }
LABEL_560:
                          if (v260) {
                            free(v260);
                          }
                          uint64_t v6 = v623;
                        }
                        v201 = v608;
                        if ((*(unsigned char *)(v6 + 158) & 1) == 0)
                        {
                          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                          networkd_settings_init();
                          v300 = gLogObj;
                          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
                          {
                            uint64_t v301 = *(void *)(v6 + 488);
                            if (v301) {
                              LODWORD(v301) = *(_DWORD *)(v301 + 424);
                            }
                            int v302 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
                            int v303 = *(_DWORD *)(v6 + 860);
                            *(_DWORD *)buf = 136447746;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                            __int16 v631 = 2082;
                            *(void *)v632 = v619;
                            *(_WORD *)&v632[8] = 2080;
                            *(void *)&v632[10] = " ";
                            *(_WORD *)&v632[18] = 1024;
                            *(_DWORD *)v633 = v302;
                            *(_WORD *)&v633[4] = 1024;
                            *(_DWORD *)&v633[6] = v303;
                            *(_WORD *)v634 = 1024;
                            *(_DWORD *)&v634[2] = v301;
                            *(_WORD *)&v634[6] = 1024;
                            *(_DWORD *)&v634[8] = v217;
                            _os_log_impl(&dword_1830D4000, v300, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> output handler refused frame request for frames of length %u", buf, 0x38u);
                          }
                        }
                        LODWORD(v211) = v217 - v212;
                        p_cache = NWConcrete_nw_resolution_report.cache;
LABEL_569:
                        int v304 = v211;
                        if (v211 == __len)
                        {
                          nw_http_transaction_metadata_increment_outbound_body_transfer_size(*(void **)(*(void *)(v6 + 488) + 352), v211);
                          uint64_t v305 = *(void *)(v6 + 488);
                          uint64_t v306 = __len;
                          uint64_t v307 = *(void *)(v305 + 176);
                          BOOL v284 = __CFADD__(v307, __len);
                          *(void *)(v305 + 176) = v307 + __len;
                          if (v284)
                          {
                            if (*((unsigned char *)p_cache + 3665))
                            {
                              v379 = __nwlog_obj();
                              if (os_log_type_enabled(v379, OS_LOG_TYPE_DEBUG))
                              {
                                uint64_t v380 = *(void *)(v305 + 176);
                                *(_DWORD *)buf = 136446978;
                                *(void *)&uint8_t buf[4] = "increment_outbound_body_size";
                                __int16 v631 = 2082;
                                *(void *)v632 = "outbound_body_size";
                                *(_WORD *)&v632[8] = 2048;
                                *(void *)&v632[10] = v306;
                                *(_WORD *)&v632[18] = 2048;
                                *(void *)v633 = v380;
                                _os_log_impl(&dword_1830D4000, v379, OS_LOG_TYPE_DEBUG, "%{public}s Overflow: %{public}s, increment %llu, result %llu", buf, 0x2Au);
                              }
                            }
                            *(void *)(v305 + 176) = -1;
                          }
                          v308 = v610;
                          if (nw_frame_is_metadata_complete(v202))
                          {
                            *(_WORD *)(*(void *)(v6 + 488) + 428) |= 0x400u;
                            *v605 |= 0x20u;
                            nw_http_transaction_metadata_mark_outbound_message_end(*(void **)(*(void *)(v6 + 488)
                                                                                            + 352));
                            uint64_t v309 = *(void *)(v6 + 488);
                            if (*(unsigned char *)(v309 + 168))
                            {
                              if (*(void *)(v309 + 160) != *(void *)(v309 + 176))
                              {
                                if ((*(unsigned char *)(v309 + 158) & 1) == 0)
                                {
                                  v443 = __nwlog_obj();
                                  BOOL v444 = os_log_type_enabled(v443, OS_LOG_TYPE_ERROR);
                                  uint64_t v309 = *(void *)(v6 + 488);
                                  if (v444)
                                  {
                                    uint64_t v445 = *(void *)(v309 + 256);
                                    if (v445) {
                                      LODWORD(v445) = *(_DWORD *)(v445 + 860);
                                    }
                                    int v446 = *(_DWORD *)(*(void *)(v309 + 248) + 372);
                                    int v447 = *(_DWORD *)(v309 + 424);
                                    if (*(unsigned char *)(v309 + 168)) {
                                      uint64_t v448 = *(void *)(v309 + 160);
                                    }
                                    else {
                                      uint64_t v448 = -1;
                                    }
                                    size_t v449 = *(void *)(v309 + 176);
                                    *(_DWORD *)buf = 136448002;
                                    *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                                    __int16 v631 = 2082;
                                    *(void *)v632 = v309 + 74;
                                    *(_WORD *)&v632[8] = 2080;
                                    *(void *)&v632[10] = " ";
                                    *(_WORD *)&v632[18] = 1024;
                                    *(_DWORD *)v633 = v446;
                                    *(_WORD *)&v633[4] = 1024;
                                    *(_DWORD *)&v633[6] = v445;
                                    *(_WORD *)v634 = 1024;
                                    *(_DWORD *)&v634[2] = v447;
                                    *(_WORD *)&v634[6] = 2048;
                                    *(void *)&v634[8] = v448;
                                    *(_WORD *)&v634[16] = 2048;
                                    size_t v635 = v449;
                                    _os_log_impl(&dword_1830D4000, v443, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> Content length header %llu does not equal body size %llu", buf, 0x46u);
                                    uint64_t v309 = *(void *)(v6 + 488);
                                  }
                                }
                                nw_protocol_error(*(void **)(v309 + 48), v309);
                                nw_protocol_disconnected(*(void **)(*(void *)(v6 + 488) + 48), *(void *)(v6 + 488));
                                goto LABEL_779;
                              }
                            }
                          }
LABEL_411:
                          *(void *)(v202 + 80) = 0;
                          *(void *)(v202 + 88) = 0;
                          nw_frame_cache_return_frame(v614, v202);
                          uint64_t v202 = *v201;
                          if (!*v201) {
                            goto LABEL_782;
                          }
                          continue;
                        }
                        v308 = v610;
                        if ((*(unsigned char *)(v6 + 158) & 1) == 0)
                        {
                          v439 = __nwlog_obj();
                          if (os_log_type_enabled(v439, OS_LOG_TYPE_DEFAULT))
                          {
                            uint64_t v440 = *(void *)(v6 + 488);
                            int v441 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
                            int v442 = *(_DWORD *)(v6 + 860);
                            if (v440) {
                              LODWORD(v440) = *(_DWORD *)(v440 + 424);
                            }
                            *(_DWORD *)buf = 136448002;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                            __int16 v631 = 2082;
                            *(void *)v632 = v619;
                            *(_WORD *)&v632[8] = 2080;
                            *(void *)&v632[10] = " ";
                            *(_WORD *)&v632[18] = 1024;
                            *(_DWORD *)v633 = v441;
                            *(_WORD *)&v633[4] = 1024;
                            *(_DWORD *)&v633[6] = v442;
                            *(_WORD *)v634 = 1024;
                            *(_DWORD *)&v634[2] = v440;
                            *(_WORD *)&v634[6] = 1024;
                            *(_DWORD *)&v634[8] = __len;
                            *(_WORD *)&v634[12] = 1024;
                            *(_DWORD *)&v634[14] = v304;
                            _os_log_impl(&dword_1830D4000, v439, OS_LOG_TYPE_DEFAULT, "%{public}s %{public}s%s<i%u:c%u:s%u> could not send pending output frame of length %u sent %u", buf, 0x3Eu);
                          }
                        }
LABEL_779:
                        nw_frame_claim(v202, v216, v304, 0);
                        uint64_t v450 = *v201;
                        *(void *)(v202 + 32) = *v201;
                        v451 = (void *)(v450 + 40);
                        BOOL v101 = v450 == 0;
                        v452 = v606;
                        if (!v101) {
                          v452 = v451;
                        }
                        void *v452 = v308;
                        uint64_t *v201 = v202;
                        *(void *)(v202 + 40) = v201;
LABEL_782:
                        int v453 = *(unsigned __int16 *)(v6 + 872);
                        if ((v453 & 0x8000) == 0 || *v201)
                        {
LABEL_784:
                          if (v609)
                          {
                            if ((*(unsigned char *)(v6 + 158) & 1) == 0)
                            {
                              if (*((unsigned char *)p_cache + 3665))
                              {
                                v506 = __nwlog_obj();
                                if (os_log_type_enabled(v506, OS_LOG_TYPE_DEBUG))
                                {
                                  uint64_t v507 = *(void *)(v6 + 488);
                                  int v508 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
                                  int v509 = *(_DWORD *)(v6 + 860);
                                  if (v507) {
                                    LODWORD(v507) = *(_DWORD *)(v507 + 424);
                                  }
                                  *(_DWORD *)buf = 136447490;
                                  *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
                                  __int16 v631 = 2082;
                                  *(void *)v632 = v6 + 74;
                                  *(_WORD *)&v632[8] = 2080;
                                  *(void *)&v632[10] = " ";
                                  *(_WORD *)&v632[18] = 1024;
                                  *(_DWORD *)v633 = v508;
                                  *(_WORD *)&v633[4] = 1024;
                                  *(_DWORD *)&v633[6] = v509;
                                  *(_WORD *)v634 = 1024;
                                  *(_DWORD *)&v634[2] = v507;
                                  _os_log_impl(&dword_1830D4000, v506, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> initial outbound frame finalized, triggering output_available", buf, 0x32u);
                                  uint64_t v6 = v623;
                                }
                              }
                            }
                            uint64_t v454 = *(void *)(v6 + 488);
                            if (v454) {
                              nw_protocol_output_available(*(void **)(v454 + 48), v454);
                            }
                            else {
                              nw_protocol_output_available(0, 0);
                            }
                          }
                          return;
                        }
                        v455 = (_WORD *)(v6 + 872);
                        unsigned int v456 = v453 & 0xFFFF7FFF | (*(unsigned __int8 *)(v6 + 874) << 16);
                        *(_WORD *)(v6 + 872) = v453 & 0x7FFF;
                        *(unsigned char *)(v6 + 874) = BYTE2(v456);
                        if ((*(unsigned char *)(v6 + 158) & 1) == 0)
                        {
                          if (*((unsigned char *)p_cache + 3665))
                          {
                            v558 = __nwlog_obj();
                            if (os_log_type_enabled(v558, OS_LOG_TYPE_DEBUG))
                            {
                              uint64_t v559 = *(void *)(v6 + 488);
                              int v560 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
                              int v561 = *(_DWORD *)(v6 + 860);
                              if (v559) {
                                LODWORD(v559) = *(_DWORD *)(v559 + 424);
                              }
                              *(_DWORD *)buf = 136447490;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                              __int16 v631 = 2082;
                              *(void *)v632 = v6 + 74;
                              *(_WORD *)&v632[8] = 2080;
                              *(void *)&v632[10] = " ";
                              *(_WORD *)&v632[18] = 1024;
                              *(_DWORD *)v633 = v560;
                              *(_WORD *)&v633[4] = 1024;
                              *(_DWORD *)&v633[6] = v561;
                              *(_WORD *)v634 = 1024;
                              *(_DWORD *)&v634[2] = v559;
                              _os_log_impl(&dword_1830D4000, v558, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> requesting new frame for final chunk", buf, 0x32u);
                              uint64_t v6 = v623;
                            }
                          }
                        }
                        uint64_t v457 = *(void *)(v6 + 32);
                        if (v457)
                        {
                          *(void *)&long long v636 = 0;
                          *((void *)&v636 + 1) = &v636;
                          int v458 = nw_protocol_get_output_frames(v457, v6, 5, 5, 1, (uint64_t)&v636);
                          int v459 = v458;
                          uint64_t v460 = v636;
                          if ((void)v636 && v458)
                          {
                            LODWORD(v640) = 0;
                            uint64_t v461 = nw_frame_unclaimed_bytes(v636, &v640);
                            *(_DWORD *)uint64_t v461 = 218762544;
                            *(unsigned char *)(v461 + 4) = 10;
                            if (nw_frame_claim(v460, v462, 5, 0))
                            {
                              nw_frame_collapse(v460);
                              nw_frame_unclaim(v460, v463, 5u, 0);
                              if (nw_protocol_finalize_output_frames(v457, (uint64_t)&v636))
                              {
                                *(_WORD *)(*(void *)(v6 + 488) + 428) |= 0x400u;
                                *v455 |= 0x20u;
                                nw_http_transaction_metadata_mark_outbound_message_end(*(void **)(*(void *)(v6 + 488)
                                                                                                + 352));
                                uint64_t v464 = *(void *)(v6 + 488);
                                if (*(unsigned char *)(v464 + 168))
                                {
                                  if (*(void *)(v464 + 160) != *(void *)(v464 + 176))
                                  {
                                    if ((*(unsigned char *)(v464 + 158) & 1) == 0)
                                    {
                                      v465 = __nwlog_obj();
                                      BOOL v466 = os_log_type_enabled(v465, OS_LOG_TYPE_ERROR);
                                      uint64_t v464 = *(void *)(v6 + 488);
                                      if (v466)
                                      {
                                        uint64_t v467 = *(void *)(v464 + 256);
                                        if (v467) {
                                          LODWORD(v467) = *(_DWORD *)(v467 + 860);
                                        }
                                        int v468 = *(_DWORD *)(*(void *)(v464 + 248) + 372);
                                        int v469 = *(_DWORD *)(v464 + 424);
                                        if (*(unsigned char *)(v464 + 168)) {
                                          uint64_t v470 = *(void *)(v464 + 160);
                                        }
                                        else {
                                          uint64_t v470 = -1;
                                        }
                                        size_t v496 = *(void *)(v464 + 176);
                                        *(_DWORD *)buf = 136448002;
                                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                                        __int16 v631 = 2082;
                                        *(void *)v632 = v464 + 74;
                                        *(_WORD *)&v632[8] = 2080;
                                        *(void *)&v632[10] = " ";
                                        *(_WORD *)&v632[18] = 1024;
                                        *(_DWORD *)v633 = v468;
                                        *(_WORD *)&v633[4] = 1024;
                                        *(_DWORD *)&v633[6] = v467;
                                        *(_WORD *)v634 = 1024;
                                        *(_DWORD *)&v634[2] = v469;
                                        *(_WORD *)&v634[6] = 2048;
                                        *(void *)&v634[8] = v470;
                                        *(_WORD *)&v634[16] = 2048;
                                        size_t v635 = v496;
                                        _os_log_impl(&dword_1830D4000, v465, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> Content length header %llu does not equal body size %llu", buf, 0x46u);
                                        uint64_t v464 = *(void *)(v6 + 488);
                                      }
                                    }
                                    nw_protocol_error(*(void **)(v464 + 48), v464);
                                    nw_protocol_disconnected(*(void **)(*(void *)(v6 + 488) + 48), *(void *)(v6 + 488));
                                  }
                                }
                              }
                              goto LABEL_784;
                            }
                            __nwlog_obj();
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                            __int16 v631 = 1024;
                            *(_DWORD *)v632 = 5;
                            v475 = (char *)_os_log_send_and_compose_impl();
                            type[0] = OS_LOG_TYPE_ERROR;
                            LOBYTE(v626) = 0;
                            if (!__nwlog_fault(v475, type, &v626)) {
                              goto LABEL_839;
                            }
                            if (type[0] == OS_LOG_TYPE_FAULT)
                            {
                              v476 = __nwlog_obj();
                              os_log_type_t v477 = type[0];
                              if (os_log_type_enabled(v476, type[0]))
                              {
                                *(_DWORD *)buf = 136446466;
                                *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                                __int16 v631 = 1024;
                                *(_DWORD *)v632 = 5;
                                v478 = "%{public}s claiming frame with %u bytes failed";
                                goto LABEL_837;
                              }
                              goto LABEL_839;
                            }
                            if ((_BYTE)v626)
                            {
                              v483 = (char *)__nw_create_backtrace_string();
                              v484 = __nwlog_obj();
                              os_log_type_t v485 = type[0];
                              BOOL v486 = os_log_type_enabled(v484, type[0]);
                              if (v483)
                              {
                                if (v486)
                                {
                                  *(_DWORD *)buf = 136446722;
                                  *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                                  __int16 v631 = 1024;
                                  *(_DWORD *)v632 = 5;
                                  *(_WORD *)&v632[4] = 2082;
                                  *(void *)&v632[6] = v483;
                                  _os_log_impl(&dword_1830D4000, v484, v485, "%{public}s claiming frame with %u bytes failed, dumping backtrace:%{public}s", buf, 0x1Cu);
                                }
                                free(v483);
                                goto LABEL_839;
                              }
                              if (!v486)
                              {
LABEL_839:
                                uint64_t v6 = v623;
                                if (v475) {
                                  free(v475);
                                }
                                goto LABEL_784;
                              }
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                              __int16 v631 = 1024;
                              *(_DWORD *)v632 = 5;
                              v478 = "%{public}s claiming frame with %u bytes failed, no backtrace";
                              v493 = v484;
                              os_log_type_t v494 = v485;
                            }
                            else
                            {
                              v476 = __nwlog_obj();
                              os_log_type_t v477 = type[0];
                              if (!os_log_type_enabled(v476, type[0])) {
                                goto LABEL_839;
                              }
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                              __int16 v631 = 1024;
                              *(_DWORD *)v632 = 5;
                              v478 = "%{public}s claiming frame with %u bytes failed, backtrace limit exceeded";
LABEL_837:
                              v493 = v476;
                              os_log_type_t v494 = v477;
                            }
                            _os_log_impl(&dword_1830D4000, v493, v494, v478, buf, 0x12u);
                            goto LABEL_839;
                          }
                          if (v458)
                          {
                            __nwlog_obj();
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                            __int16 v631 = 1024;
                            *(_DWORD *)v632 = v459;
                            v471 = (char *)_os_log_send_and_compose_impl();
                            LOBYTE(v640) = 16;
                            type[0] = OS_LOG_TYPE_DEFAULT;
                            if (!__nwlog_fault(v471, &v640, type)) {
                              goto LABEL_828;
                            }
                            if (v640 != 17)
                            {
                              if (type[0])
                              {
                                v479 = (char *)__nw_create_backtrace_string();
                                v480 = __nwlog_obj();
                                os_log_type_t v481 = v640;
                                BOOL v482 = os_log_type_enabled(v480, (os_log_type_t)v640);
                                if (v479)
                                {
                                  if (v482)
                                  {
                                    *(_DWORD *)buf = 136446722;
                                    *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                                    __int16 v631 = 1024;
                                    *(_DWORD *)v632 = v459;
                                    *(_WORD *)&v632[4] = 2082;
                                    *(void *)&v632[6] = v479;
                                    _os_log_impl(&dword_1830D4000, v480, v481, "%{public}s output handler reported %u frames to write, but array is empty, dumping backtrace:%{public}s", buf, 0x1Cu);
                                  }
                                  free(v479);
                                  uint64_t v6 = v623;
                                  goto LABEL_828;
                                }
                                uint64_t v6 = v623;
                                if (!v482) {
                                  goto LABEL_828;
                                }
                                *(_DWORD *)buf = 136446466;
                                *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                                __int16 v631 = 1024;
                                *(_DWORD *)v632 = v459;
                                v474 = "%{public}s output handler reported %u frames to write, but array is empty, no backtrace";
                                v487 = v480;
                                os_log_type_t v488 = v481;
                              }
                              else
                              {
                                v472 = __nwlog_obj();
                                os_log_type_t v473 = v640;
                                if (!os_log_type_enabled(v472, (os_log_type_t)v640)) {
                                  goto LABEL_828;
                                }
                                *(_DWORD *)buf = 136446466;
                                *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                                __int16 v631 = 1024;
                                *(_DWORD *)v632 = v459;
                                v474 = "%{public}s output handler reported %u frames to write, but array is empty, backtr"
                                       "ace limit exceeded";
LABEL_826:
                                v487 = v472;
                                os_log_type_t v488 = v473;
                              }
                              _os_log_impl(&dword_1830D4000, v487, v488, v474, buf, 0x12u);
                              goto LABEL_828;
                            }
                            v472 = __nwlog_obj();
                            os_log_type_t v473 = v640;
                            if (os_log_type_enabled(v472, (os_log_type_t)v640))
                            {
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                              __int16 v631 = 1024;
                              *(_DWORD *)v632 = v459;
                              v474 = "%{public}s output handler reported %u frames to write, but array is empty";
                              goto LABEL_826;
                            }
LABEL_828:
                            if (v471) {
                              free(v471);
                            }
                          }
                          if ((*(unsigned char *)(v6 + 158) & 1) == 0)
                          {
                            v489 = __nwlog_obj();
                            if (os_log_type_enabled(v489, OS_LOG_TYPE_DEBUG))
                            {
                              uint64_t v490 = *(void *)(v6 + 488);
                              int v491 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
                              int v492 = *(_DWORD *)(v6 + 860);
                              if (v490) {
                                LODWORD(v490) = *(_DWORD *)(v490 + 424);
                              }
                              *(_DWORD *)buf = 136447746;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                              __int16 v631 = 2082;
                              *(void *)v632 = v6 + 74;
                              *(_WORD *)&v632[8] = 2080;
                              *(void *)&v632[10] = " ";
                              *(_WORD *)&v632[18] = 1024;
                              *(_DWORD *)v633 = v491;
                              *(_WORD *)&v633[4] = 1024;
                              *(_DWORD *)&v633[6] = v492;
                              *(_WORD *)v634 = 1024;
                              *(_DWORD *)&v634[2] = v490;
                              *(_WORD *)&v634[6] = 1024;
                              *(_DWORD *)&v634[8] = 5;
                              _os_log_impl(&dword_1830D4000, v489, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> output handler refused frame request for frames of length %u", buf, 0x38u);
                            }
                          }
                          goto LABEL_784;
                        }
                        __nwlog_obj();
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                        v510 = (char *)_os_log_send_and_compose_impl();
                        LOBYTE(v636) = 16;
                        LOBYTE(v640) = 0;
                        if (!__nwlog_fault(v510, &v636, &v640)) {
                          goto LABEL_982;
                        }
                        if (v636 == 17)
                        {
                          v511 = __nwlog_obj();
                          os_log_type_t v512 = v636;
                          if (os_log_type_enabled(v511, (os_log_type_t)v636))
                          {
                            *(_DWORD *)buf = 136446210;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                            v513 = "%{public}s called with null output_handler";
                            goto LABEL_980;
                          }
LABEL_982:
                          if (v510) {
                            free(v510);
                          }
                          uint64_t v6 = v623;
                          goto LABEL_784;
                        }
                        if ((_BYTE)v640)
                        {
                          v518 = (char *)__nw_create_backtrace_string();
                          v519 = __nwlog_obj();
                          os_log_type_t v520 = v636;
                          BOOL v583 = os_log_type_enabled(v519, (os_log_type_t)v636);
                          if (v518)
                          {
                            if (v583)
                            {
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                              __int16 v631 = 2082;
                              *(void *)v632 = v518;
                              v522 = "%{public}s called with null output_handler, dumping backtrace:%{public}s";
LABEL_913:
                              _os_log_impl(&dword_1830D4000, v519, v520, v522, buf, 0x16u);
                            }
                            goto LABEL_914;
                          }
                          if (!v583) {
                            goto LABEL_982;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                          v513 = "%{public}s called with null output_handler, no backtrace";
                          goto LABEL_1019;
                        }
                        v511 = __nwlog_obj();
                        os_log_type_t v512 = v636;
                        if (!os_log_type_enabled(v511, (os_log_type_t)v636)) {
                          goto LABEL_982;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_final_chunk";
                        v513 = "%{public}s called with null output_handler, backtrace limit exceeded";
LABEL_980:
                        v556 = v511;
                        os_log_type_t v557 = v512;
                        goto LABEL_981;
                      }
                      while (1)
                      {
                        uint64_t v221 = *(void *)(v219 + 32);
                        if (v221 || *(void *)(v219 + 40))
                        {
                          uint64_t v222 = *(void *)(v219 + 112);
                          if (!v222) {
                            goto LABEL_454;
                          }
                        }
                        else
                        {
                          uint64_t v221 = 0;
                          uint64_t v222 = *(void *)(v219 + 112);
                          if (!v222) {
                            goto LABEL_454;
                          }
                        }
                        if ((*(_WORD *)(v219 + 204) & 0x100) != 0
                          && g_channel_check_validity
                          && !g_channel_check_validity(v219, *(void *)(v219 + 88)))
                        {
                          LODWORD(v222) = 0;
LABEL_454:
                          v224 = 0;
                          goto LABEL_455;
                        }
                        LODWORD(v222) = *(_DWORD *)(v219 + 52);
                        uint64_t v223 = *(unsigned int *)(v219 + 56);
                        if (v222) {
                          LODWORD(v222) = v222 - (v223 + *(_DWORD *)(v219 + 60));
                        }
                        v224 = (void *)(*(void *)(v219 + 112) + v223);
LABEL_455:
                        if (v222 >= v212) {
                          size_t v225 = v212;
                        }
                        else {
                          size_t v225 = v222;
                        }
                        memcpy(v224, v208, v225);
                        v212 -= v225;
                        v208 += v225;
                        if (!nw_frame_claim(v219, v226, v225, 0))
                        {
                          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                          networkd_settings_init();
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                          __int16 v631 = 1024;
                          *(_DWORD *)v632 = v225;
                          v231 = (char *)_os_log_send_and_compose_impl();
                          LOBYTE(v640) = 16;
                          char v625 = 0;
                          if (!__nwlog_fault(v231, &v640, &v625)) {
                            goto LABEL_480;
                          }
                          if (v640 == 17)
                          {
                            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                            networkd_settings_init();
                            uint64_t v232 = gLogObj;
                            os_log_type_t v233 = v640;
                            if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v640))
                            {
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                              __int16 v631 = 1024;
                              *(_DWORD *)v632 = v225;
                              v234 = v232;
                              os_log_type_t v235 = v233;
                              v236 = "%{public}s claiming frame with %u bytes failed";
                              goto LABEL_479;
                            }
                            goto LABEL_480;
                          }
                          if (!v625)
                          {
                            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                            networkd_settings_init();
                            uint64_t v241 = gLogObj;
                            os_log_type_t v242 = v640;
                            if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v640)) {
                              goto LABEL_480;
                            }
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                            __int16 v631 = 1024;
                            *(_DWORD *)v632 = v225;
                            v234 = v241;
                            os_log_type_t v235 = v242;
                            v236 = "%{public}s claiming frame with %u bytes failed, backtrace limit exceeded";
                            goto LABEL_479;
                          }
                          v237 = (char *)__nw_create_backtrace_string();
                          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                          networkd_settings_init();
                          v238 = gLogObj;
                          os_log_type_t v239 = v640;
                          BOOL v240 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v640);
                          if (v237)
                          {
                            if (v240)
                            {
                              *(_DWORD *)buf = 136446722;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                              __int16 v631 = 1024;
                              *(_DWORD *)v632 = v225;
                              *(_WORD *)&v632[4] = 2082;
                              *(void *)&v632[6] = v237;
                              _os_log_impl(&dword_1830D4000, v238, v239, "%{public}s claiming frame with %u bytes failed, dumping backtrace:%{public}s", buf, 0x1Cu);
                            }
                            free(v237);
                            goto LABEL_480;
                          }
                          if (v240)
                          {
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                            __int16 v631 = 1024;
                            *(_DWORD *)v632 = v225;
                            v234 = v238;
                            os_log_type_t v235 = v239;
                            v236 = "%{public}s claiming frame with %u bytes failed, no backtrace";
LABEL_479:
                            _os_log_impl(&dword_1830D4000, v234, v235, v236, buf, 0x12u);
                          }
LABEL_480:
                          if (v231) {
                            free(v231);
                          }
LABEL_482:
                          v243 = (uint64_t *)v627[1];
                          uint64_t v244 = *v243;
                          uint64_t v6 = v623;
                          if (*v243)
                          {
                            nw_frame_set_metadata(*v243, 0, 0, is_metadata_complete);
                            if (is_metadata_complete)
                            {
                              if ((*(unsigned char *)(v623 + 158) & 1) == 0)
                              {
                                if (gLogDatapath)
                                {
                                  v249 = __nwlog_obj();
                                  if (os_log_type_enabled(v249, OS_LOG_TYPE_DEBUG))
                                  {
                                    uint64_t v250 = *(void *)(v623 + 488);
                                    if (v250) {
                                      LODWORD(v250) = *(_DWORD *)(v250 + 424);
                                    }
                                    int v251 = *(_DWORD *)(*(void *)(v623 + 480) + 372);
                                    int v252 = *(_DWORD *)(v623 + 860);
                                    *(_DWORD *)buf = 136447746;
                                    *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                                    __int16 v631 = 2082;
                                    *(void *)v632 = v619;
                                    *(_WORD *)&v632[8] = 2080;
                                    *(void *)&v632[10] = " ";
                                    *(_WORD *)&v632[18] = 1024;
                                    *(_DWORD *)v633 = v251;
                                    *(_WORD *)&v633[4] = 1024;
                                    *(_DWORD *)&v633[6] = v252;
                                    *(_WORD *)v634 = 1024;
                                    *(_DWORD *)&v634[2] = v250;
                                    *(_WORD *)&v634[6] = 2048;
                                    *(void *)&v634[8] = v244;
                                    _os_log_impl(&dword_1830D4000, v249, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> setting complete on last output frame %p", buf, 0x3Cu);
                                  }
                                }
                              }
                            }
                          }
                          nw_protocol_finalize_output_frames(v210, (uint64_t)&v626);
                          uint64_t v216 = *(void *)type;
                          if (*(void *)type)
                          {
                            *(void *)&long long v640 = 0;
                            *((void *)&v640 + 1) = &v640;
                            int v642 = 0;
                            uint64_t v641 = 0x2000000000;
                            *(void *)&long long v636 = MEMORY[0x1E4F143A8];
                            *((void *)&v636 + 1) = 0x40000000;
                            v637 = ___ZL30nw_http1_connection_send_bytesP19nw_http1_connectionPhjb_block_invoke;
                            v638 = &unk_1E5241520;
                            v639 = &v640;
                            do
                            {
                              if (!v216) {
                                break;
                              }
                              uint64_t v245 = *(void *)(v216 + 32);
                              char v246 = ((uint64_t (*)(long long *))v637)(&v636);
                              uint64_t v216 = v245;
                            }
                            while ((v246 & 1) != 0);
                            if ((*(unsigned char *)(v623 + 158) & 1) == 0)
                            {
                              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                              networkd_settings_init();
                              v247 = gLogObj;
                              if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
                              {
                                uint64_t v248 = *(void *)(v623 + 488);
                                if (v248) {
                                  LODWORD(v248) = *(_DWORD *)(v248 + 424);
                                }
                                int v213 = *(_DWORD *)(*(void *)(v623 + 480) + 372);
                                int v214 = *(_DWORD *)(v623 + 860);
                                int v215 = *(_DWORD *)(*((void *)&v640 + 1) + 24);
                                *(_DWORD *)buf = 136447746;
                                *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                                __int16 v631 = 2082;
                                *(void *)v632 = v619;
                                *(_WORD *)&v632[8] = 2080;
                                *(void *)&v632[10] = " ";
                                *(_WORD *)&v632[18] = 1024;
                                *(_DWORD *)v633 = v213;
                                *(_WORD *)&v633[4] = 1024;
                                *(_DWORD *)&v633[6] = v214;
                                *(_WORD *)v634 = 1024;
                                *(_DWORD *)&v634[2] = v248;
                                *(_WORD *)&v634[6] = 1024;
                                *(_DWORD *)&v634[8] = v215;
                                _os_log_impl(&dword_1830D4000, v247, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> failed to use %u frames, marking as failed", buf, 0x38u);
                              }
                            }
                            _Block_object_dispose(&v640, 8);
                          }
                          uint64_t v211 = v217;
                          if (!v212)
                          {
                            p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                            goto LABEL_509;
                          }
                          goto LABEL_440;
                        }
                        nw_frame_collapse(v219);
                        nw_frame_unclaim(v219, v227, v225, 0);
                        uint64_t v228 = *(void *)(v219 + 32);
                        v229 = *(void **)(v219 + 40);
                        if (v228)
                        {
                          *(void *)(v228 + 40) = v229;
                          v229 = *(void **)(v219 + 40);
                        }
                        else
                        {
                          v629 = *(os_log_type_t **)(v219 + 40);
                        }
                        void *v229 = v228;
                        v230 = v627;
                        *(void *)(v219 + 32) = 0;
                        *(void *)(v219 + 40) = v230;
                        uint64_t *v230 = v219;
                        v627 = (uint64_t *)(v219 + 32);
                        if (v221)
                        {
                          uint64_t v219 = v221;
                          if (v212) {
                            continue;
                          }
                        }
                        goto LABEL_482;
                      }
                    }
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                    v427 = (char *)_os_log_send_and_compose_impl();
                    LOBYTE(v640) = 16;
                    type[0] = OS_LOG_TYPE_DEFAULT;
                    if (__nwlog_fault(v427, &v640, type))
                    {
                      if (v640 == 17)
                      {
                        v428 = __nwlog_obj();
                        os_log_type_t v429 = v640;
                        if (!os_log_type_enabled(v428, (os_log_type_t)v640)) {
                          goto LABEL_761;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                        v430 = v428;
                        os_log_type_t v431 = v429;
                        v432 = "%{public}s called with null output_handler";
LABEL_760:
                        _os_log_impl(&dword_1830D4000, v430, v431, v432, buf, 0xCu);
                        goto LABEL_761;
                      }
                      if (type[0] == OS_LOG_TYPE_DEFAULT)
                      {
                        v437 = __nwlog_obj();
                        os_log_type_t v438 = v640;
                        if (!os_log_type_enabled(v437, (os_log_type_t)v640)) {
                          goto LABEL_761;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                        v430 = v437;
                        os_log_type_t v431 = v438;
                        v432 = "%{public}s called with null output_handler, backtrace limit exceeded";
                        goto LABEL_760;
                      }
                      v433 = (char *)__nw_create_backtrace_string();
                      v434 = __nwlog_obj();
                      os_log_type_t v435 = v640;
                      BOOL v436 = os_log_type_enabled(v434, (os_log_type_t)v640);
                      if (!v433)
                      {
                        if (!v436) {
                          goto LABEL_761;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                        v430 = v434;
                        os_log_type_t v431 = v435;
                        v432 = "%{public}s called with null output_handler, no backtrace";
                        goto LABEL_760;
                      }
                      if (v436)
                      {
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                        __int16 v631 = 2082;
                        *(void *)v632 = v433;
                        _os_log_impl(&dword_1830D4000, v434, v435, "%{public}s called with null output_handler, dumping backtrace:%{public}s", buf, 0x16u);
                      }
                      free(v433);
                    }
LABEL_761:
                    if (v427) {
                      free(v427);
                    }
                    LODWORD(v211) = 0;
                    uint64_t v6 = v623;
LABEL_509:
                    v201 = v608;
                    uint64_t v202 = v615;
                    goto LABEL_569;
                  }
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                  v352 = (char *)_os_log_send_and_compose_impl();
                  LOBYTE(v640) = 16;
                  type[0] = OS_LOG_TYPE_DEFAULT;
                  if (!__nwlog_fault(v352, &v640, type)) {
                    goto LABEL_697;
                  }
                  if (v640 == 17)
                  {
                    v358 = __nwlog_obj();
                    os_log_type_t v359 = v640;
                    if (os_log_type_enabled(v358, (os_log_type_t)v640))
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      v355 = v358;
                      os_log_type_t v356 = v359;
                      v357 = "%{public}s called with null length";
                      goto LABEL_696;
                    }
                    goto LABEL_697;
                  }
                  if (type[0] == OS_LOG_TYPE_DEFAULT)
                  {
                    v383 = __nwlog_obj();
                    os_log_type_t v384 = v640;
                    if (os_log_type_enabled(v383, (os_log_type_t)v640))
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      v355 = v383;
                      os_log_type_t v356 = v384;
                      v357 = "%{public}s called with null length, backtrace limit exceeded";
                      goto LABEL_696;
                    }
                    goto LABEL_697;
                  }
                  v369 = (char *)__nw_create_backtrace_string();
                  v376 = __nwlog_obj();
                  os_log_type_t v377 = v640;
                  BOOL v378 = os_log_type_enabled(v376, (os_log_type_t)v640);
                  if (!v369)
                  {
                    uint64_t v6 = v623;
                    v201 = v608;
                    if (v378)
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      v355 = v376;
                      os_log_type_t v356 = v377;
                      v357 = "%{public}s called with null length, no backtrace";
                      goto LABEL_696;
                    }
                    goto LABEL_697;
                  }
                  if (v378)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                    __int16 v631 = 2082;
                    *(void *)v632 = v369;
                    v373 = v376;
                    os_log_type_t v374 = v377;
                    v375 = "%{public}s called with null length, dumping backtrace:%{public}s";
                    goto LABEL_676;
                  }
                }
                else
                {
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                  v352 = (char *)_os_log_send_and_compose_impl();
                  LOBYTE(v640) = 16;
                  type[0] = OS_LOG_TYPE_DEFAULT;
                  if (!__nwlog_fault(v352, &v640, type)) {
                    goto LABEL_697;
                  }
                  if (v640 == 17)
                  {
                    v353 = __nwlog_obj();
                    os_log_type_t v354 = v640;
                    if (os_log_type_enabled(v353, (os_log_type_t)v640))
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      v355 = v353;
                      os_log_type_t v356 = v354;
                      v357 = "%{public}s called with null buffer";
LABEL_696:
                      _os_log_impl(&dword_1830D4000, v355, v356, v357, buf, 0xCu);
                    }
LABEL_697:
                    if (v352) {
                      free(v352);
                    }
                    LODWORD(v211) = 0;
                    goto LABEL_569;
                  }
                  if (type[0] == OS_LOG_TYPE_DEFAULT)
                  {
                    v381 = __nwlog_obj();
                    os_log_type_t v382 = v640;
                    if (os_log_type_enabled(v381, (os_log_type_t)v640))
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      v355 = v381;
                      os_log_type_t v356 = v382;
                      v357 = "%{public}s called with null buffer, backtrace limit exceeded";
                      goto LABEL_696;
                    }
                    goto LABEL_697;
                  }
                  v369 = (char *)__nw_create_backtrace_string();
                  v370 = __nwlog_obj();
                  os_log_type_t v371 = v640;
                  BOOL v372 = os_log_type_enabled(v370, (os_log_type_t)v640);
                  if (!v369)
                  {
                    uint64_t v6 = v623;
                    v201 = v608;
                    if (v372)
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                      v355 = v370;
                      os_log_type_t v356 = v371;
                      v357 = "%{public}s called with null buffer, no backtrace";
                      goto LABEL_696;
                    }
                    goto LABEL_697;
                  }
                  if (v372)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_send_bytes";
                    __int16 v631 = 2082;
                    *(void *)v632 = v369;
                    v373 = v370;
                    os_log_type_t v374 = v371;
                    v375 = "%{public}s called with null buffer, dumping backtrace:%{public}s";
LABEL_676:
                    _os_log_impl(&dword_1830D4000, v373, v374, v375, buf, 0x16u);
                  }
                }
                free(v369);
                uint64_t v6 = v623;
                v201 = v608;
                goto LABEL_697;
              }
              if ((*(_WORD *)(v202 + 204) & 4) == 0)
              {
                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                networkd_settings_init();
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                __int16 v631 = 2048;
                *(void *)v632 = v202;
                v253 = (char *)_os_log_send_and_compose_impl();
                LOBYTE(v636) = 16;
                LOBYTE(v640) = 0;
                if (!__nwlog_fault(v253, &v636, &v640)) {
                  goto LABEL_553;
                }
                if (v636 == 17)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  uint64_t v254 = gLogObj;
                  os_log_type_t v255 = v636;
                  if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v636)) {
                    goto LABEL_553;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                  __int16 v631 = 2048;
                  *(void *)v632 = v202;
                  v256 = v254;
                  os_log_type_t v257 = v255;
                  v258 = "%{public}s frame %p has no metadata";
                }
                else if ((_BYTE)v640)
                {
                  v269 = (char *)__nw_create_backtrace_string();
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  v270 = gLogObj;
                  os_log_type_t v271 = v636;
                  BOOL v272 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v636);
                  if (v269)
                  {
                    if (v272)
                    {
                      *(_DWORD *)buf = 136446722;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                      __int16 v631 = 2048;
                      *(void *)v632 = v202;
                      *(_WORD *)&v632[8] = 2082;
                      *(void *)&v632[10] = v269;
                      _os_log_impl(&dword_1830D4000, v270, v271, "%{public}s frame %p has no metadata, dumping backtrace:%{public}s", buf, 0x20u);
                    }
                    free(v269);
LABEL_553:
                    if (v253) {
                      free(v253);
                    }
                    uint64_t v6 = v623;
                    if (!v202) {
                      goto LABEL_782;
                    }
                    continue;
                  }
                  if (!v272) {
                    goto LABEL_553;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                  __int16 v631 = 2048;
                  *(void *)v632 = v202;
                  v256 = v270;
                  os_log_type_t v257 = v271;
                  v258 = "%{public}s frame %p has no metadata, no backtrace";
                }
                else
                {
                  v296 = __nwlog_obj();
                  os_log_type_t v297 = v636;
                  if (!os_log_type_enabled(v296, (os_log_type_t)v636)) {
                    goto LABEL_553;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                  __int16 v631 = 2048;
                  *(void *)v632 = v202;
                  v256 = v296;
                  os_log_type_t v257 = v297;
                  v258 = "%{public}s frame %p has no metadata, backtrace limit exceeded";
                }
                _os_log_impl(&dword_1830D4000, v256, v257, v258, buf, 0x16u);
                goto LABEL_553;
              }
              if (*(unsigned char *)(v202 + 216)) {
                goto LABEL_428;
              }
              nw_frame_unclaim(v202, a2, 0xAu, 7u);
              uint64_t v267 = *(void *)(v202 + 112);
              if (v267)
              {
                if ((*(_WORD *)(v202 + 204) & 0x100) == 0 || !g_channel_check_validity) {
                  goto LABEL_516;
                }
                if (g_channel_check_validity(v202, *(void *)(v202 + 88)))
                {
                  uint64_t v267 = *(void *)(v202 + 112);
LABEL_516:
                  uint64_t v268 = v267 + *(unsigned int *)(v202 + 56);
                  goto LABEL_528;
                }
              }
              uint64_t v268 = 0;
LABEL_528:
              uint64_t v616 = v202;
              uint64_t v277 = *(void *)(v202 + 64);
              if (v277)
              {
                int v278 = (*(unsigned __int8 *)(v277 + 66) >> 6) & 1;
                unsigned int v279 = __len;
                if (__len)
                {
LABEL_530:
                  v280 = p_cache;
                  unsigned int v281 = -1;
                  unsigned int v282 = v279;
                  do
                  {
                    unsigned int v283 = v281++;
                    BOOL v284 = v282 >= 0x10;
                    v282 >>= 4;
                  }
                  while (v284);
                  if (v268)
                  {
                    v285 = (unsigned char *)(v268 + v281);
                    *(_WORD *)(v285 + 1) = 2573;
                    do
                    {
                      if ((v279 & 0xF) >= 0xA) {
                        char v286 = (v279 & 0xF) + 55;
                      }
                      else {
                        char v286 = v279 & 0xF | 0x30;
                      }
                      *v285-- = v286;
                      BOOL v61 = v279 > 0xF;
                      v279 >>= 4;
                    }
                    while (v61);
LABEL_538:
                    unsigned int v287 = v283 + 2;
                    uint64_t v288 = v281 + 3;
                    if (v283 == 6)
                    {
                      unsigned int v289 = 0;
                      p_cache = v280;
                      goto LABEL_592;
                    }
                    p_cache = v280;
LABEL_591:
                    memmove((void *)(v268 + v288), (const void *)(v268 + 10), __len);
                    unsigned int v289 = 8 - v287;
LABEL_592:
                    if (v268)
                    {
                      uint64_t v316 = v268 + v288 + __len;
                      *(_WORD *)uint64_t v316 = 2573;
                      uint64_t v202 = v616;
                      if (!v278) {
                        goto LABEL_601;
                      }
                      *(unsigned char *)(v316 + 6) = 10;
                      *(_DWORD *)(v316 + 2) = 218762544;
LABEL_595:
                      char v317 = v278 ^ 1;
                      if ((*v605 & 0x8000) == 0) {
                        char v317 = 1;
                      }
                      if ((v317 & 1) == 0)
                      {
                        if ((*(unsigned char *)(v623 + 158) & 1) == 0)
                        {
                          if (*((unsigned char *)p_cache + 3665))
                          {
                            v417 = __nwlog_obj();
                            if (os_log_type_enabled(v417, OS_LOG_TYPE_DEBUG))
                            {
                              uint64_t v418 = *(void *)(v623 + 488);
                              if (v418) {
                                LODWORD(v418) = *(_DWORD *)(v418 + 424);
                              }
                              int v419 = *(_DWORD *)(*(void *)(v623 + 480) + 372);
                              int v420 = *(_DWORD *)(v623 + 860);
                              *(_DWORD *)buf = 136447746;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                              __int16 v631 = 2082;
                              *(void *)v632 = v619;
                              *(_WORD *)&v632[8] = 2080;
                              *(void *)&v632[10] = " ";
                              *(_WORD *)&v632[18] = 1024;
                              *(_DWORD *)v633 = v419;
                              *(_WORD *)&v633[4] = 1024;
                              *(_DWORD *)&v633[6] = v420;
                              *(_WORD *)v634 = 1024;
                              *(_DWORD *)&v634[2] = v418;
                              *(_WORD *)&v634[6] = 2048;
                              uint64_t v202 = v616;
                              *(void *)&v634[8] = v616;
                              _os_log_impl(&dword_1830D4000, v417, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> pending final chunk written to frame %p", buf, 0x3Cu);
                            }
                          }
                        }
                        int v318 = *v605;
                        unsigned int v319 = v318 & 0xFFFF7FFF | (*((unsigned __int8 *)v605 + 2) << 16);
                        unsigned __int16 *v605 = v318 & 0x7FFF;
                        *((unsigned char *)v605 + 2) = BYTE2(v319);
                      }
LABEL_601:
                      if (v278) {
                        uint64_t v320 = 0;
                      }
                      else {
                        uint64_t v320 = 5;
                      }
                      uint64_t v321 = v289 + v320;
                      if (!__CFADD__(v289, v320))
                      {
                        uint64_t v6 = v623;
                        v201 = v608;
                        if (!v321)
                        {
LABEL_626:
                          v208 = (char *)nw_frame_unclaimed_bytes(v202, &__len);
                          if (v202)
                          {
                            if ((*(_WORD *)(v202 + 204) & 4) != 0)
                            {
                              char v341 = *(unsigned char *)(v202 + 216);
                              *(void *)(v202 + 208) = v6;
                              *(unsigned char *)(v202 + 216) = v341 & 0xFC | 1;
                              goto LABEL_428;
                            }
LABEL_628:
                            v334 = v205;
                            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                            networkd_settings_init();
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_frame_metadata_reset";
                            __int16 v631 = 2048;
                            *(void *)v632 = v202;
                            v335 = (char *)_os_log_send_and_compose_impl();
                            LOBYTE(v636) = 16;
                            LOBYTE(v640) = 0;
                            if (__nwlog_fault(v335, &v636, &v640))
                            {
                              if (v636 == 17)
                              {
                                v336 = __nwlog_obj();
                                os_log_type_t v337 = v636;
                                if (os_log_type_enabled(v336, (os_log_type_t)v636))
                                {
                                  *(_DWORD *)buf = 136446466;
                                  *(void *)&uint8_t buf[4] = "nw_http1_frame_metadata_reset";
                                  __int16 v631 = 2048;
                                  *(void *)v632 = v202;
                                  v338 = v336;
                                  os_log_type_t v339 = v337;
                                  v340 = "%{public}s frame %p has no metadata";
LABEL_642:
                                  _os_log_impl(&dword_1830D4000, v338, v339, v340, buf, 0x16u);
                                }
                              }
                              else if ((_BYTE)v640)
                              {
                                v342 = (char *)__nw_create_backtrace_string();
                                v343 = __nwlog_obj();
                                os_log_type_t v344 = v636;
                                BOOL v345 = os_log_type_enabled(v343, (os_log_type_t)v636);
                                if (v342)
                                {
                                  if (v345)
                                  {
                                    *(_DWORD *)buf = 136446722;
                                    *(void *)&uint8_t buf[4] = "nw_http1_frame_metadata_reset";
                                    __int16 v631 = 2048;
                                    *(void *)v632 = v202;
                                    *(_WORD *)&v632[8] = 2082;
                                    *(void *)&v632[10] = v342;
                                    _os_log_impl(&dword_1830D4000, v343, v344, "%{public}s frame %p has no metadata, dumping backtrace:%{public}s", buf, 0x20u);
                                  }
                                  free(v342);
                                  goto LABEL_643;
                                }
                                if (v345)
                                {
                                  *(_DWORD *)buf = 136446466;
                                  *(void *)&uint8_t buf[4] = "nw_http1_frame_metadata_reset";
                                  __int16 v631 = 2048;
                                  *(void *)v632 = v202;
                                  v338 = v343;
                                  os_log_type_t v339 = v344;
                                  v340 = "%{public}s frame %p has no metadata, no backtrace";
                                  goto LABEL_642;
                                }
                              }
                              else
                              {
                                v346 = __nwlog_obj();
                                os_log_type_t v347 = v636;
                                if (os_log_type_enabled(v346, (os_log_type_t)v636))
                                {
                                  *(_DWORD *)buf = 136446466;
                                  *(void *)&uint8_t buf[4] = "nw_http1_frame_metadata_reset";
                                  __int16 v631 = 2048;
                                  *(void *)v632 = v202;
                                  v338 = v346;
                                  os_log_type_t v339 = v347;
                                  v340 = "%{public}s frame %p has no metadata, backtrace limit exceeded";
                                  goto LABEL_642;
                                }
                              }
                            }
LABEL_643:
                            if (v335) {
                              free(v335);
                            }
                            uint64_t v6 = v623;
                            v205 = v334;
                            goto LABEL_428;
                          }
                          v392 = v205;
                          __nwlog_obj();
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "__nw_frame_get_metadata";
                          v393 = (char *)_os_log_send_and_compose_impl();
                          LOBYTE(v636) = 16;
                          LOBYTE(v640) = 0;
                          if (__nwlog_fault(v393, &v636, &v640))
                          {
                            if (v636 == 17)
                            {
                              v394 = __nwlog_obj();
                              os_log_type_t v395 = v636;
                              if (os_log_type_enabled(v394, (os_log_type_t)v636))
                              {
                                *(_DWORD *)buf = 136446210;
                                *(void *)&uint8_t buf[4] = "__nw_frame_get_metadata";
                                v396 = v394;
                                os_log_type_t v397 = v395;
                                v398 = "%{public}s called with null frame";
LABEL_735:
                                _os_log_impl(&dword_1830D4000, v396, v397, v398, buf, 0xCu);
                              }
                            }
                            else if ((_BYTE)v640)
                            {
                              v409 = (char *)__nw_create_backtrace_string();
                              v410 = __nwlog_obj();
                              os_log_type_t v411 = v636;
                              BOOL v412 = os_log_type_enabled(v410, (os_log_type_t)v636);
                              if (v409)
                              {
                                if (v412)
                                {
                                  *(_DWORD *)buf = 136446466;
                                  *(void *)&uint8_t buf[4] = "__nw_frame_get_metadata";
                                  __int16 v631 = 2082;
                                  *(void *)v632 = v409;
                                  _os_log_impl(&dword_1830D4000, v410, v411, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
                                }
                                free(v409);
                                goto LABEL_736;
                              }
                              if (v412)
                              {
                                *(_DWORD *)buf = 136446210;
                                *(void *)&uint8_t buf[4] = "__nw_frame_get_metadata";
                                v396 = v410;
                                os_log_type_t v397 = v411;
                                v398 = "%{public}s called with null frame, no backtrace";
                                goto LABEL_735;
                              }
                            }
                            else
                            {
                              v423 = __nwlog_obj();
                              os_log_type_t v424 = v636;
                              if (os_log_type_enabled(v423, (os_log_type_t)v636))
                              {
                                *(_DWORD *)buf = 136446210;
                                *(void *)&uint8_t buf[4] = "__nw_frame_get_metadata";
                                v396 = v423;
                                os_log_type_t v397 = v424;
                                v398 = "%{public}s called with null frame, backtrace limit exceeded";
                                goto LABEL_735;
                              }
                            }
                          }
LABEL_736:
                          if (v393) {
                            free(v393);
                          }
                          v201 = v608;
                          uint64_t v202 = v616;
                          v205 = v392;
                          goto LABEL_628;
                        }
LABEL_625:
                        nw_frame_claim(v202, v266, 0, v321);
                        goto LABEL_626;
                      }
                      v611 = v205;
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                      __int16 v631 = 2082;
                      *(void *)v632 = "unused_bytes";
                      *(_WORD *)&v632[8] = 2048;
                      *(void *)&v632[10] = v320;
                      *(_WORD *)&v632[18] = 2048;
                      *(void *)v633 = v289 + v320;
                      v322 = (char *)_os_log_send_and_compose_impl();
                      LOBYTE(v636) = 16;
                      LOBYTE(v640) = 0;
                      v201 = v608;
                      if (__nwlog_fault(v322, &v636, &v640))
                      {
                        if (v636 == 17)
                        {
                          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                          networkd_settings_init();
                          uint64_t v323 = gLogObj;
                          os_log_type_t v324 = v636;
                          if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v636))
                          {
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                            __int16 v631 = 2082;
                            *(void *)v632 = "unused_bytes";
                            *(_WORD *)&v632[8] = 2048;
                            *(void *)&v632[10] = v320;
                            *(_WORD *)&v632[18] = 2048;
                            *(void *)v633 = v321;
                            v325 = v323;
                            os_log_type_t v326 = v324;
                            v327 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_621:
                            _os_log_impl(&dword_1830D4000, v325, v326, v327, buf, 0x2Au);
                          }
                        }
                        else if ((_BYTE)v640)
                        {
                          v328 = (char *)__nw_create_backtrace_string();
                          v329 = __nwlog_obj();
                          os_log_type_t v330 = v636;
                          BOOL v331 = os_log_type_enabled(v329, (os_log_type_t)v636);
                          if (v328)
                          {
                            if (v331)
                            {
                              *(_DWORD *)buf = 136447234;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                              __int16 v631 = 2082;
                              *(void *)v632 = "unused_bytes";
                              *(_WORD *)&v632[8] = 2048;
                              *(void *)&v632[10] = v320;
                              *(_WORD *)&v632[18] = 2048;
                              *(void *)v633 = v321;
                              *(_WORD *)&v633[8] = 2082;
                              *(void *)v634 = v328;
                              _os_log_impl(&dword_1830D4000, v329, v330, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                            }
                            free(v328);
                            goto LABEL_622;
                          }
                          if (v331)
                          {
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                            __int16 v631 = 2082;
                            *(void *)v632 = "unused_bytes";
                            *(_WORD *)&v632[8] = 2048;
                            *(void *)&v632[10] = v320;
                            *(_WORD *)&v632[18] = 2048;
                            *(void *)v633 = v321;
                            v325 = v329;
                            os_log_type_t v326 = v330;
                            v327 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                            goto LABEL_621;
                          }
                        }
                        else
                        {
                          v332 = __nwlog_obj();
                          os_log_type_t v333 = v636;
                          if (os_log_type_enabled(v332, (os_log_type_t)v636))
                          {
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
                            __int16 v631 = 2082;
                            *(void *)v632 = "unused_bytes";
                            *(_WORD *)&v632[8] = 2048;
                            *(void *)&v632[10] = v320;
                            *(_WORD *)&v632[18] = 2048;
                            *(void *)v633 = v321;
                            v325 = v332;
                            os_log_type_t v326 = v333;
                            v327 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                            goto LABEL_621;
                          }
                        }
                      }
LABEL_622:
                      uint64_t v6 = v623;
                      if (v322) {
                        free(v322);
                      }
                      LODWORD(v321) = -1;
                      uint64_t v202 = v616;
                      v205 = v611;
                      goto LABEL_625;
                    }
                    v385 = v205;
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_trailer";
                    v386 = (char *)_os_log_send_and_compose_impl();
                    LOBYTE(v636) = 16;
                    LOBYTE(v640) = 0;
                    if (__nwlog_fault(v386, &v636, &v640))
                    {
                      if (v636 == 17)
                      {
                        v387 = __nwlog_obj();
                        os_log_type_t v388 = v636;
                        if (os_log_type_enabled(v387, (os_log_type_t)v636))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_trailer";
                          v389 = v387;
                          os_log_type_t v390 = v388;
                          v391 = "%{public}s called with null buffer";
LABEL_729:
                          _os_log_impl(&dword_1830D4000, v389, v390, v391, buf, 0xCu);
                        }
                      }
                      else if ((_BYTE)v640)
                      {
                        v405 = (char *)__nw_create_backtrace_string();
                        v406 = __nwlog_obj();
                        os_log_type_t v407 = v636;
                        BOOL v408 = os_log_type_enabled(v406, (os_log_type_t)v636);
                        if (v405)
                        {
                          if (v408)
                          {
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_trailer";
                            __int16 v631 = 2082;
                            *(void *)v632 = v405;
                            _os_log_impl(&dword_1830D4000, v406, v407, "%{public}s called with null buffer, dumping backtrace:%{public}s", buf, 0x16u);
                          }
                          free(v405);
                          goto LABEL_730;
                        }
                        if (v408)
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_trailer";
                          v389 = v406;
                          os_log_type_t v390 = v407;
                          v391 = "%{public}s called with null buffer, no backtrace";
                          goto LABEL_729;
                        }
                      }
                      else
                      {
                        v421 = __nwlog_obj();
                        os_log_type_t v422 = v636;
                        if (os_log_type_enabled(v421, (os_log_type_t)v636))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_trailer";
                          v389 = v421;
                          os_log_type_t v390 = v422;
                          v391 = "%{public}s called with null buffer, backtrace limit exceeded";
                          goto LABEL_729;
                        }
                      }
                    }
LABEL_730:
                    if (v386) {
                      free(v386);
                    }
                    uint64_t v202 = v616;
                    v205 = v385;
                    goto LABEL_595;
                  }
                  v612 = v205;
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_header";
                  v399 = (char *)_os_log_send_and_compose_impl();
                  LOBYTE(v636) = 16;
                  LOBYTE(v640) = 0;
                  if (__nwlog_fault(v399, &v636, &v640))
                  {
                    if (v636 == 17)
                    {
                      v400 = __nwlog_obj();
                      os_log_type_t v401 = v636;
                      if (os_log_type_enabled(v400, (os_log_type_t)v636))
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_header";
                        v402 = v400;
                        os_log_type_t v403 = v401;
                        v404 = "%{public}s called with null buffer";
LABEL_743:
                        _os_log_impl(&dword_1830D4000, v402, v403, v404, buf, 0xCu);
                      }
                    }
                    else if ((_BYTE)v640)
                    {
                      v413 = (char *)__nw_create_backtrace_string();
                      v414 = __nwlog_obj();
                      os_log_type_t v415 = v636;
                      BOOL v416 = os_log_type_enabled(v414, (os_log_type_t)v636);
                      if (v413)
                      {
                        if (v416)
                        {
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_header";
                          __int16 v631 = 2082;
                          *(void *)v632 = v413;
                          _os_log_impl(&dword_1830D4000, v414, v415, "%{public}s called with null buffer, dumping backtrace:%{public}s", buf, 0x16u);
                        }
                        free(v413);
                        goto LABEL_744;
                      }
                      if (v416)
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_header";
                        v402 = v414;
                        os_log_type_t v403 = v415;
                        v404 = "%{public}s called with null buffer, no backtrace";
                        goto LABEL_743;
                      }
                    }
                    else
                    {
                      v425 = __nwlog_obj();
                      os_log_type_t v426 = v636;
                      if (os_log_type_enabled(v425, (os_log_type_t)v636))
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_header";
                        v402 = v425;
                        os_log_type_t v403 = v426;
                        v404 = "%{public}s called with null buffer, backtrace limit exceeded";
                        goto LABEL_743;
                      }
                    }
                  }
LABEL_744:
                  if (v399) {
                    free(v399);
                  }
                  v205 = v612;
                  goto LABEL_538;
                }
              }
              else
              {
                int v278 = 0;
                unsigned int v279 = __len;
                if (__len) {
                  goto LABEL_530;
                }
              }
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_header";
              v290 = (char *)_os_log_send_and_compose_impl();
              LOBYTE(v636) = 16;
              LOBYTE(v640) = 0;
              if (__nwlog_fault(v290, &v636, &v640))
              {
                if (v636 == 17)
                {
                  v291 = __nwlog_obj();
                  os_log_type_t v292 = v636;
                  if (os_log_type_enabled(v291, (os_log_type_t)v636))
                  {
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_header";
                    v293 = v291;
                    os_log_type_t v294 = v292;
                    v295 = "%{public}s called with null size";
LABEL_587:
                    _os_log_impl(&dword_1830D4000, v293, v294, v295, buf, 0xCu);
                  }
                }
                else if ((_BYTE)v640)
                {
                  v310 = (char *)__nw_create_backtrace_string();
                  v311 = __nwlog_obj();
                  os_log_type_t v312 = v636;
                  BOOL v313 = os_log_type_enabled(v311, (os_log_type_t)v636);
                  if (v310)
                  {
                    if (v313)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_header";
                      __int16 v631 = 2082;
                      *(void *)v632 = v310;
                      _os_log_impl(&dword_1830D4000, v311, v312, "%{public}s called with null size, dumping backtrace:%{public}s", buf, 0x16u);
                    }
                    free(v310);
                    goto LABEL_588;
                  }
                  if (v313)
                  {
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_header";
                    v293 = v311;
                    os_log_type_t v294 = v312;
                    v295 = "%{public}s called with null size, no backtrace";
                    goto LABEL_587;
                  }
                }
                else
                {
                  v314 = __nwlog_obj();
                  os_log_type_t v315 = v636;
                  if (os_log_type_enabled(v314, (os_log_type_t)v636))
                  {
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_write_chunk_header";
                    v293 = v314;
                    os_log_type_t v294 = v315;
                    v295 = "%{public}s called with null size, backtrace limit exceeded";
                    goto LABEL_587;
                  }
                }
              }
LABEL_588:
              if (v290) {
                free(v290);
              }
              unsigned int v287 = 0;
              uint64_t v288 = 2;
              v205 = (void *)(v202 + 32);
              goto LABEL_591;
            }
          }
        }
        else
        {
          v208 = 0;
          if (*(unsigned char *)(v6 + 158)) {
            goto LABEL_425;
          }
        }
        break;
      }
      if (*((unsigned char *)p_cache + 3665))
      {
        v348 = __nwlog_obj();
        if (os_log_type_enabled(v348, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v349 = *(void *)(v6 + 488);
          if (v349) {
            LODWORD(v349) = *(_DWORD *)(v349 + 424);
          }
          int v350 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
          int v351 = *(_DWORD *)(v6 + 860);
          *(_DWORD *)buf = 136448002;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_drain_outbound_frames";
          __int16 v631 = 2082;
          *(void *)v632 = v619;
          *(_WORD *)&v632[8] = 2080;
          *(void *)&v632[10] = " ";
          *(_WORD *)&v632[18] = 1024;
          *(_DWORD *)v633 = v350;
          *(_WORD *)&v633[4] = 1024;
          *(_DWORD *)&v633[6] = v351;
          *(_WORD *)v634 = 1024;
          *(_DWORD *)&v634[2] = v349;
          *(_WORD *)&v634[6] = 2048;
          *(void *)&v634[8] = v202;
          *(_WORD *)&v634[16] = 1024;
          LODWORD(v635) = __len;
          _os_log_impl(&dword_1830D4000, v348, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> draining frame %p with length %u", buf, 0x42u);
        }
      }
      goto LABEL_425;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
    v159 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(v636) = 16;
    LOBYTE(v640) = 0;
    if (!__nwlog_fault(v159, &v636, &v640)) {
      goto LABEL_903;
    }
    if (v636 == 17)
    {
      int v160 = __nwlog_obj();
      os_log_type_t v161 = v636;
      if (!os_log_type_enabled(v160, (os_log_type_t)v636)) {
        goto LABEL_903;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      v162 = "%{public}s called with null http1_connection->current_stream";
      goto LABEL_902;
    }
    if (!(_BYTE)v640)
    {
      int v160 = __nwlog_obj();
      os_log_type_t v161 = v636;
      if (!os_log_type_enabled(v160, (os_log_type_t)v636)) {
        goto LABEL_903;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      v162 = "%{public}s called with null http1_connection->current_stream, backtrace limit exceeded";
      goto LABEL_902;
    }
    v186 = (char *)__nw_create_backtrace_string();
    int v160 = __nwlog_obj();
    os_log_type_t v161 = v636;
    BOOL v495 = os_log_type_enabled(v160, (os_log_type_t)v636);
    if (!v186)
    {
      if (!v495) {
        goto LABEL_903;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      v162 = "%{public}s called with null http1_connection->current_stream, no backtrace";
      goto LABEL_902;
    }
    if (v495)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
      __int16 v631 = 2082;
      *(void *)v632 = v186;
      int v188 = "%{public}s called with null http1_connection->current_stream, dumping backtrace:%{public}s";
      goto LABEL_849;
    }
LABEL_850:
    free(v186);
    if (!v159) {
      return;
    }
LABEL_904:
    free(v159);
    return;
  }
LABEL_29:
  if ((*(unsigned char *)(v6 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      __int16 v191 = __nwlog_obj();
      if (os_log_type_enabled(v191, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v192 = *(void *)(v6 + 488);
        int v193 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
        int v194 = *(_DWORD *)(v6 + 860);
        if (v192) {
          LODWORD(v192) = *(_DWORD *)(v192 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_output_frame_finalizer";
        __int16 v631 = 2082;
        *(void *)v632 = v6 + 74;
        *(_WORD *)&v632[8] = 2080;
        *(void *)&v632[10] = " ";
        *(_WORD *)&v632[18] = 1024;
        *(_DWORD *)v633 = v193;
        *(_WORD *)&v633[4] = 1024;
        *(_DWORD *)&v633[6] = v194;
        *(_WORD *)v634 = 1024;
        *(_DWORD *)&v634[2] = v192;
        _os_log_impl(&dword_1830D4000, v191, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> disposing of output frame, finalizer called with success == false", buf, 0x32u);
      }
    }
  }
  if ((*((_WORD *)a1 + 102) & 0x100) == 0
    || !g_channel_check_validity
    || g_channel_check_validity(a1, *((void *)a1 + 11)))
  {
    __int16 v16 = (void *)*((void *)a1 + 14);
    if (v16) {
      free(v16);
    }
  }
  nw_frame_reset((uint64_t)a1, 0, 0, 0, 0);
  os_release(a1);
}

void nw::http::content_length_manager::set_outbound_message(nw::http::content_length_manager *this, nw_protocol_metadata *a2)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "set_outbound_message";
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v17 = OS_LOG_TYPE_ERROR;
    char v16 = 0;
    if (!__nwlog_fault(v6, &v17, &v16)) {
      goto LABEL_42;
    }
    if (v17 == OS_LOG_TYPE_FAULT)
    {
      int v7 = __nwlog_obj();
      os_log_type_t v8 = v17;
      if (!os_log_type_enabled(v7, v17)) {
        goto LABEL_42;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v19 = "set_outbound_message";
      uint64_t v9 = "%{public}s called with null metadata";
    }
    else if (v16)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v7 = __nwlog_obj();
      os_log_type_t v8 = v17;
      BOOL v11 = os_log_type_enabled(v7, v17);
      if (backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v19 = "set_outbound_message";
          __int16 v20 = 2082;
          __int16 v21 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v7, v8, "%{public}s called with null metadata, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_42:
        if (!v6) {
          return;
        }
LABEL_43:
        free(v6);
        return;
      }
      if (!v11) {
        goto LABEL_42;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v19 = "set_outbound_message";
      uint64_t v9 = "%{public}s called with null metadata, no backtrace";
    }
    else
    {
      int v7 = __nwlog_obj();
      os_log_type_t v8 = v17;
      if (!os_log_type_enabled(v7, v17)) {
        goto LABEL_42;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v19 = "set_outbound_message";
      uint64_t v9 = "%{public}s called with null metadata, backtrace limit exceeded";
    }
LABEL_41:
    _os_log_impl(&dword_1830D4000, v7, v8, v9, buf, 0xCu);
    goto LABEL_42;
  }
  if (nw_protocol_metadata_is_http(a2))
  {
    if (*((unsigned char *)this + 48))
    {
      id v4 = nw_http_metadata_copy_response(a2);
      nw_http_response_get_status_code(v4);
      if (*((unsigned char *)this + 49))
      {
        if (!*((unsigned char *)this + 8)) {
          *((unsigned char *)this + 8) = 1;
        }
        *(void *)this = 0;
        if (!v4) {
          return;
        }
LABEL_11:
        os_release(v4);
        return;
      }
      v15[0] = MEMORY[0x1E4F143A8];
      v15[1] = 0x40000000;
      v15[2] = ___ZN2nw4http22content_length_manager20set_outbound_messageEP20nw_protocol_metadata_block_invoke;
      v15[3] = &__block_descriptor_tmp_136_40951;
      v15[4] = this;
      uint64_t v5 = v15;
    }
    else
    {
      id v4 = nw_http_metadata_copy_request(a2);
      *((unsigned char *)this + 49) = nw_http_request_has_method(v4, (uint64_t)"HEAD");
      v14[0] = MEMORY[0x1E4F143A8];
      v14[1] = 0x40000000;
      v14[2] = ___ZN2nw4http22content_length_manager20set_outbound_messageEP20nw_protocol_metadata_block_invoke_2;
      v14[3] = &__block_descriptor_tmp_137_40952;
      v14[4] = this;
      uint64_t v5 = v14;
    }
    nw_http_fields_access_value_by_name(v4, (unint64_t)"Content-Length", v5);
    if (!v4) {
      return;
    }
    goto LABEL_11;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  uint64_t v19 = "set_outbound_message";
  uint64_t v6 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t v17 = OS_LOG_TYPE_ERROR;
  char v16 = 0;
  if (!__nwlog_fault(v6, &v17, &v16)) {
    goto LABEL_42;
  }
  if (v17 == OS_LOG_TYPE_FAULT)
  {
    int v7 = __nwlog_obj();
    os_log_type_t v8 = v17;
    if (!os_log_type_enabled(v7, v17)) {
      goto LABEL_42;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "set_outbound_message";
    uint64_t v9 = "%{public}s called with null (nw_protocol_metadata_is_http(metadata))";
    goto LABEL_41;
  }
  if (!v16)
  {
    int v7 = __nwlog_obj();
    os_log_type_t v8 = v17;
    if (!os_log_type_enabled(v7, v17)) {
      goto LABEL_42;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "set_outbound_message";
    uint64_t v9 = "%{public}s called with null (nw_protocol_metadata_is_http(metadata)), backtrace limit exceeded";
    goto LABEL_41;
  }
  uint64_t v12 = (char *)__nw_create_backtrace_string();
  int v7 = __nwlog_obj();
  os_log_type_t v8 = v17;
  BOOL v13 = os_log_type_enabled(v7, v17);
  if (!v12)
  {
    if (!v13) {
      goto LABEL_42;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v19 = "set_outbound_message";
    uint64_t v9 = "%{public}s called with null (nw_protocol_metadata_is_http(metadata)), no backtrace";
    goto LABEL_41;
  }
  if (v13)
  {
    *(_DWORD *)buf = 136446466;
    uint64_t v19 = "set_outbound_message";
    __int16 v20 = 2082;
    __int16 v21 = v12;
    _os_log_impl(&dword_1830D4000, v7, v8, "%{public}s called with null (nw_protocol_metadata_is_http(metadata)), dumping backtrace:%{public}s", buf, 0x16u);
  }
  free(v12);
  if (v6) {
    goto LABEL_43;
  }
}

uint64_t ___ZL30nw_http1_connection_send_bytesP19nw_http1_connectionPhjb_block_invoke(uint64_t a1, uint64_t a2)
{
  return 1;
}

void ___ZN2nw4http22content_length_manager20set_outbound_messageEP20nw_protocol_metadata_block_invoke(uint64_t a1, char *__s)
{
  if (__s)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    size_t v4 = strlen(__s);
    if (v4 >= 0x7FFFFFFFFFFFFFF8) {
      abort();
    }
    std::string::size_type v5 = v4;
    if (v4 >= 0x17)
    {
      uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v7 = v4 | 7;
      }
      uint64_t v8 = v7 + 1;
      p_dst = (std::string *)operator new(v7 + 1);
      __dst.__r_.__value_.__l.__size_ = v5;
      __dst.__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    }
    else
    {
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v4;
      p_dst = &__dst;
      if (!v4)
      {
LABEL_10:
        p_dst->__r_.__value_.__s.__data_[v5] = 0;
        *(void *)uint64_t v3 = std::stoull(&__dst, 0, 10);
        *(unsigned char *)(v3 + 8) = 1;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        return;
      }
    }
    memcpy(p_dst, __s, v5);
    goto LABEL_10;
  }
}

void ___ZN2nw4http22content_length_manager20set_outbound_messageEP20nw_protocol_metadata_block_invoke_2(uint64_t a1, char *__s)
{
  if (__s)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    size_t v4 = strlen(__s);
    if (v4 >= 0x7FFFFFFFFFFFFFF8) {
      abort();
    }
    std::string::size_type v5 = v4;
    if (v4 >= 0x17)
    {
      uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17) {
        uint64_t v7 = v4 | 7;
      }
      uint64_t v8 = v7 + 1;
      p_dst = (std::string *)operator new(v7 + 1);
      __dst.__r_.__value_.__l.__size_ = v5;
      __dst.__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    }
    else
    {
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v4;
      p_dst = &__dst;
      if (!v4)
      {
LABEL_10:
        p_dst->__r_.__value_.__s.__data_[v5] = 0;
        *(void *)uint64_t v3 = std::stoull(&__dst, 0, 10);
        *(unsigned char *)(v3 + 8) = 1;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        return;
      }
    }
    memcpy(p_dst, __s, v5);
    goto LABEL_10;
  }
}

#error "18397BA88: too big function (funcsize=0)"

__n128 __Block_byref_object_copy__106(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(a1 + 40) = result;
  return result;
}

BOOL ___ZL41nw_http1_connection_fulfill_frame_requestP19nw_http1_connectionP16nw_frame_array_sS2_bbjjjPj_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v122 = *MEMORY[0x1E4F143B8];
  unsigned int v4 = nw_frame_unclaimed_length((_DWORD *)a2);
  if ((*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) + 1) > *(_DWORD *)(a1 + 72)) {
    return 0;
  }
  unsigned int v5 = v4;
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  unsigned int v7 = *(_DWORD *)(v6 + 24);
  uint64_t v8 = v7 + v4;
  if (__CFADD__(v7, v4))
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    *(_DWORD *)buf = 136446978;
    v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
    __int16 v111 = 2082;
    int v112 = "bytes_count_with_this_frame";
    __int16 v113 = 2048;
    uint64_t v114 = v5;
    __int16 v115 = 2048;
    *(void *)os_log_type_t v116 = v8;
    uint64_t v9 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    os_log_type_t v108 = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v9, type, &v108))
    {
      if (type[0] == OS_LOG_TYPE_FAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v10 = gLogObj;
        os_log_type_t v11 = type[0];
        if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
        {
          *(_DWORD *)buf = 136446978;
          v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
          __int16 v111 = 2082;
          int v112 = "bytes_count_with_this_frame";
          __int16 v113 = 2048;
          uint64_t v114 = v5;
          __int16 v115 = 2048;
          *(void *)os_log_type_t v116 = v8;
          uint64_t v12 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_17:
          _os_log_impl(&dword_1830D4000, v10, v11, v12, buf, 0x2Au);
        }
      }
      else if (v108)
      {
        backtrace_string = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v10 = gLogObj;
        os_log_type_t v11 = type[0];
        BOOL v14 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
        if (backtrace_string)
        {
          if (v14)
          {
            *(_DWORD *)buf = 136447234;
            v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
            __int16 v111 = 2082;
            int v112 = "bytes_count_with_this_frame";
            __int16 v113 = 2048;
            uint64_t v114 = v5;
            __int16 v115 = 2048;
            *(void *)os_log_type_t v116 = v8;
            *(_WORD *)&v116[8] = 2082;
            BOOL v117 = backtrace_string;
            _os_log_impl(&dword_1830D4000, v10, v11, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(backtrace_string);
          goto LABEL_18;
        }
        if (v14)
        {
          *(_DWORD *)buf = 136446978;
          v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
          __int16 v111 = 2082;
          int v112 = "bytes_count_with_this_frame";
          __int16 v113 = 2048;
          uint64_t v114 = v5;
          __int16 v115 = 2048;
          *(void *)os_log_type_t v116 = v8;
          uint64_t v12 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
          goto LABEL_17;
        }
      }
      else
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v10 = gLogObj;
        os_log_type_t v11 = type[0];
        if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
        {
          *(_DWORD *)buf = 136446978;
          v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
          __int16 v111 = 2082;
          int v112 = "bytes_count_with_this_frame";
          __int16 v113 = 2048;
          uint64_t v114 = v5;
          __int16 v115 = 2048;
          *(void *)os_log_type_t v116 = v8;
          uint64_t v12 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
          goto LABEL_17;
        }
      }
    }
LABEL_18:
    if (v9) {
      free(v9);
    }
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    unsigned int v7 = *(_DWORD *)(v6 + 24);
    LODWORD(v8) = -1;
  }
  unsigned int v15 = *(_DWORD *)(a1 + 76);
  if (v8 <= v15)
  {
    *(_DWORD *)(v6 + 24) = v7 + v5;
    if (!__CFADD__(v7, v5)) {
      goto LABEL_77;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v20 = *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    *(_DWORD *)buf = 136446978;
    v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
    __int16 v111 = 2082;
    int v112 = "bytes_count";
    __int16 v113 = 2048;
    uint64_t v114 = v5;
    __int16 v115 = 2048;
    *(void *)os_log_type_t v116 = v20;
    __int16 v21 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    os_log_type_t v108 = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v21, type, &v108))
    {
      if (type[0] == OS_LOG_TYPE_FAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v22 = gLogObj;
        os_log_type_t v23 = type[0];
        if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
        {
          uint64_t v24 = *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
          *(_DWORD *)buf = 136446978;
          v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
          __int16 v111 = 2082;
          int v112 = "bytes_count";
          __int16 v113 = 2048;
          uint64_t v114 = v5;
          __int16 v115 = 2048;
          *(void *)os_log_type_t v116 = v24;
          int v25 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_73:
          _os_log_impl(&dword_1830D4000, v22, v23, v25, buf, 0x2Au);
        }
      }
      else if (v108)
      {
        int v26 = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v22 = gLogObj;
        os_log_type_t v23 = type[0];
        BOOL v27 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
        if (v26)
        {
          if (v27)
          {
            uint64_t v28 = *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
            *(_DWORD *)buf = 136447234;
            v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
            __int16 v111 = 2082;
            int v112 = "bytes_count";
            __int16 v113 = 2048;
            uint64_t v114 = v5;
            __int16 v115 = 2048;
            *(void *)os_log_type_t v116 = v28;
            *(_WORD *)&v116[8] = 2082;
            BOOL v117 = v26;
            _os_log_impl(&dword_1830D4000, v22, v23, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v26);
          goto LABEL_74;
        }
        if (v27)
        {
          uint64_t v63 = *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
          *(_DWORD *)buf = 136446978;
          v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
          __int16 v111 = 2082;
          int v112 = "bytes_count";
          __int16 v113 = 2048;
          uint64_t v114 = v5;
          __int16 v115 = 2048;
          *(void *)os_log_type_t v116 = v63;
          int v25 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
          goto LABEL_73;
        }
      }
      else
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v22 = gLogObj;
        os_log_type_t v23 = type[0];
        if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
        {
          uint64_t v54 = *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
          *(_DWORD *)buf = 136446978;
          v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
          __int16 v111 = 2082;
          int v112 = "bytes_count";
          __int16 v113 = 2048;
          uint64_t v114 = v5;
          __int16 v115 = 2048;
          *(void *)os_log_type_t v116 = v54;
          int v25 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
          goto LABEL_73;
        }
      }
    }
LABEL_74:
    if (v21) {
      free(v21);
    }
    *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = -1;
LABEL_77:
    if (*(unsigned char *)(a1 + 80))
    {
      uint64_t v65 = *(void *)(a2 + 32);
      int v66 = *(void **)(a2 + 40);
      os_log_type_t v64 = (void *)(a2 + 32);
      if (v65)
      {
        *(void *)(v65 + 40) = v66;
        **(void **)(a2 + 40) = v65;
        goto LABEL_84;
      }
    }
    else
    {
      uint64_t v65 = *(void *)(a2 + 16);
      int v66 = *(void **)(a2 + 24);
      os_log_type_t v64 = (void *)(a2 + 16);
      if (v65)
      {
        *(void *)(v65 + 24) = v66;
        int v66 = *(void **)(a2 + 24);
LABEL_83:
        *int v66 = v65;
LABEL_84:
        *os_log_type_t v64 = 0;
        v64[1] = 0;
        if ((*(unsigned char *)(*(void *)(a1 + 64) + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            int v96 = __nwlog_obj();
            if (os_log_type_enabled(v96, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v97 = *(void *)(a1 + 64);
              int v98 = (const char *)(v97 + 74);
              uint64_t v99 = *(void *)(v97 + 488);
              int v100 = *(_DWORD *)(*(void *)(v97 + 480) + 372);
              int v101 = *(_DWORD *)(v97 + 860);
              if (v99) {
                LODWORD(v99) = *(_DWORD *)(v99 + 424);
              }
              *(_DWORD *)buf = 136447746;
              v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
              __int16 v111 = 2082;
              int v112 = v98;
              __int16 v113 = 2080;
              uint64_t v114 = (uint64_t)" ";
              __int16 v115 = 1024;
              *(_DWORD *)os_log_type_t v116 = v100;
              *(_WORD *)&v116[4] = 1024;
              *(_DWORD *)&v116[6] = v101;
              LOWORD(v117) = 1024;
              *(_DWORD *)((char *)&v117 + 2) = v99;
              HIWORD(v117) = 1024;
              *(_DWORD *)v118 = v5;
              _os_log_impl(&dword_1830D4000, v96, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Moving entire frame (%u bytes)", buf, 0x38u);
            }
          }
        }
        uint64_t v37 = a2;
LABEL_87:
        uint64_t v67 = *(void *)(*(void *)(a1 + 32) + 8);
        uint64_t v68 = *(unsigned int *)(v67 + 24) + 1;
        uint64_t v69 = v68 << 31 >> 31;
        *(_DWORD *)(v67 + 24) = v68;
        if (v69 == v68 && (v69 & 0x8000000000000000) == 0)
        {
LABEL_106:
          uint64_t v81 = *(void *)(*(void *)(a1 + 48) + 8);
          if (*(unsigned char *)(a1 + 80))
          {
            *(void *)(v37 + 32) = 0;
            uint64_t v82 = v37 + 32;
          }
          else
          {
            *(void *)(v37 + 16) = 0;
            uint64_t v82 = v37 + 16;
          }
          int v83 = *(uint64_t **)(v81 + 48);
          *(void *)(v82 + 8) = v83;
          *int v83 = v37;
          *(void *)(v81 + 48) = v82;
          return 1;
        }
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v70 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
        *(_DWORD *)buf = 136446978;
        v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
        __int16 v111 = 2082;
        int v112 = "frame_count";
        __int16 v113 = 2048;
        uint64_t v114 = 1;
        __int16 v115 = 2048;
        *(void *)os_log_type_t v116 = v70;
        __int16 v71 = (char *)_os_log_send_and_compose_impl();
        type[0] = OS_LOG_TYPE_ERROR;
        os_log_type_t v108 = OS_LOG_TYPE_DEFAULT;
        if (__nwlog_fault(v71, type, &v108))
        {
          if (type[0] == OS_LOG_TYPE_FAULT)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v72 = gLogObj;
            os_log_type_t v73 = type[0];
            if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
            {
              uint64_t v74 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
              *(_DWORD *)buf = 136446978;
              v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
              __int16 v111 = 2082;
              int v112 = "frame_count";
              __int16 v113 = 2048;
              uint64_t v114 = 1;
              __int16 v115 = 2048;
              *(void *)os_log_type_t v116 = v74;
              BOOL v75 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_102:
              _os_log_impl(&dword_1830D4000, v72, v73, v75, buf, 0x2Au);
            }
          }
          else if (v108)
          {
            uint64_t v76 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v72 = gLogObj;
            os_log_type_t v73 = type[0];
            BOOL v77 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
            if (v76)
            {
              if (v77)
              {
                uint64_t v78 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
                *(_DWORD *)buf = 136447234;
                v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
                __int16 v111 = 2082;
                int v112 = "frame_count";
                __int16 v113 = 2048;
                uint64_t v114 = 1;
                __int16 v115 = 2048;
                *(void *)os_log_type_t v116 = v78;
                *(_WORD *)&v116[8] = 2082;
                BOOL v117 = v76;
                _os_log_impl(&dword_1830D4000, v72, v73, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
              }
              free(v76);
              goto LABEL_103;
            }
            if (v77)
            {
              uint64_t v80 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
              *(_DWORD *)buf = 136446978;
              v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
              __int16 v111 = 2082;
              int v112 = "frame_count";
              __int16 v113 = 2048;
              uint64_t v114 = 1;
              __int16 v115 = 2048;
              *(void *)os_log_type_t v116 = v80;
              BOOL v75 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
              goto LABEL_102;
            }
          }
          else
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v72 = gLogObj;
            os_log_type_t v73 = type[0];
            if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
            {
              uint64_t v79 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
              *(_DWORD *)buf = 136446978;
              v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
              __int16 v111 = 2082;
              int v112 = "frame_count";
              __int16 v113 = 2048;
              uint64_t v114 = 1;
              __int16 v115 = 2048;
              *(void *)os_log_type_t v116 = v79;
              BOOL v75 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
              goto LABEL_102;
            }
          }
        }
LABEL_103:
        if (v71) {
          free(v71);
        }
        *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = -1;
        goto LABEL_106;
      }
    }
    *(void *)(*(void *)(a1 + 56) + 8) = v66;
    goto LABEL_83;
  }
  uint64_t v16 = v15 - v7;
  if (v15 <= v7) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 81))
  {
    if (*(unsigned char *)(a1 + 80))
    {
      uint64_t v18 = *(void *)(a2 + 32);
      uint64_t v19 = *(void **)(a2 + 40);
      os_log_type_t v17 = (void *)(a2 + 32);
      if (v18)
      {
        *(void *)(v18 + 40) = v19;
        **(void **)(a2 + 40) = v18;
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v18 = *(void *)(a2 + 16);
      uint64_t v19 = *(void **)(a2 + 24);
      os_log_type_t v17 = (void *)(a2 + 16);
      if (v18)
      {
        *(void *)(v18 + 24) = v19;
        uint64_t v19 = *(void **)(a2 + 24);
LABEL_47:
        *uint64_t v19 = v18;
LABEL_48:
        void *v17 = 0;
        v17[1] = 0;
        *(void *)os_log_type_t type = a2;
        uint64_t v36 = nw_frame_split((uint64_t *)type, v16);
        if (v36)
        {
          uint64_t v37 = v36;
          BOOL v38 = *(uint64_t **)(a1 + 56);
          uint64_t v39 = *(void *)type;
          unsigned int v40 = v38 + 1;
          uint64_t v41 = *v38;
          if (*(unsigned char *)(a1 + 80))
          {
            *(void *)(*(void *)type + 32) = v41;
            uint64_t v42 = v39 + 32;
            id v43 = (void *)(v41 + 40);
          }
          else
          {
            *(void *)(*(void *)type + 16) = v41;
            uint64_t v42 = v39 + 16;
            id v43 = (void *)(v41 + 24);
          }
          if (v41) {
            unsigned int v40 = v43;
          }
          *unsigned int v40 = v42;
          *BOOL v38 = v39;
          *(void *)(v42 + 8) = v38;
          uint64_t v55 = *(void *)(*(void *)(a1 + 40) + 8);
          int v56 = *(_DWORD *)(v55 + 24);
          *(_DWORD *)(v55 + 24) = v56 + v16;
          if (!__CFADD__(v56, v16)) {
            goto LABEL_137;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v57 = *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
          *(_DWORD *)buf = 136446978;
          v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
          __int16 v111 = 2082;
          int v112 = "bytes_count";
          __int16 v113 = 2048;
          uint64_t v114 = v16;
          __int16 v115 = 2048;
          *(void *)os_log_type_t v116 = v57;
          __int16 v58 = (char *)_os_log_send_and_compose_impl();
          os_log_type_t v108 = OS_LOG_TYPE_ERROR;
          char v106 = 0;
          if (__nwlog_fault(v58, &v108, &v106))
          {
            if (v108 == OS_LOG_TYPE_FAULT)
            {
              int v59 = __nwlog_obj();
              os_log_type_t v60 = v108;
              if (os_log_type_enabled(v59, v108))
              {
                uint64_t v61 = *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
                *(_DWORD *)buf = 136446978;
                v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
                __int16 v111 = 2082;
                int v112 = "bytes_count";
                __int16 v113 = 2048;
                uint64_t v114 = v16;
                __int16 v115 = 2048;
                *(void *)os_log_type_t v116 = v61;
                BOOL v62 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_133:
                _os_log_impl(&dword_1830D4000, v59, v60, v62, buf, 0x2Au);
              }
            }
            else if (v106)
            {
              uint64_t v86 = (char *)__nw_create_backtrace_string();
              int v59 = __nwlog_obj();
              os_log_type_t v60 = v108;
              BOOL v87 = os_log_type_enabled(v59, v108);
              if (v86)
              {
                if (v87)
                {
                  uint64_t v88 = *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
                  *(_DWORD *)buf = 136447234;
                  v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
                  __int16 v111 = 2082;
                  int v112 = "bytes_count";
                  __int16 v113 = 2048;
                  uint64_t v114 = v16;
                  __int16 v115 = 2048;
                  *(void *)os_log_type_t v116 = v88;
                  *(_WORD *)&v116[8] = 2082;
                  BOOL v117 = v86;
                  _os_log_impl(&dword_1830D4000, v59, v60, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                }
                free(v86);
                goto LABEL_134;
              }
              if (v87)
              {
                uint64_t v90 = *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
                *(_DWORD *)buf = 136446978;
                v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
                __int16 v111 = 2082;
                int v112 = "bytes_count";
                __int16 v113 = 2048;
                uint64_t v114 = v16;
                __int16 v115 = 2048;
                *(void *)os_log_type_t v116 = v90;
                BOOL v62 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                goto LABEL_133;
              }
            }
            else
            {
              int v59 = __nwlog_obj();
              os_log_type_t v60 = v108;
              if (os_log_type_enabled(v59, v108))
              {
                uint64_t v89 = *(unsigned int *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
                *(_DWORD *)buf = 136446978;
                v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
                __int16 v111 = 2082;
                int v112 = "bytes_count";
                __int16 v113 = 2048;
                uint64_t v114 = v16;
                __int16 v115 = 2048;
                *(void *)os_log_type_t v116 = v89;
                BOOL v62 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                goto LABEL_133;
              }
            }
          }
LABEL_134:
          if (v58) {
            free(v58);
          }
          *(_DWORD *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = -1;
LABEL_137:
          if ((*(unsigned char *)(*(void *)(a1 + 64) + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              uint64_t v91 = __nwlog_obj();
              if (os_log_type_enabled(v91, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v92 = *(void *)(a1 + 64);
                uint64_t v93 = (const char *)(v92 + 74);
                uint64_t v94 = *(void *)(v92 + 488);
                if (v94) {
                  int v95 = *(_DWORD *)(v94 + 424);
                }
                else {
                  int v95 = 0;
                }
                int v102 = *(_DWORD *)(*(void *)(v92 + 480) + 372);
                int v103 = *(_DWORD *)(v92 + 860);
                int v104 = nw_frame_unclaimed_length(*(_DWORD **)type);
                int v105 = *(_DWORD *)(v37 + 52);
                if (v105) {
                  v105 -= *(_DWORD *)(v37 + 56) + *(_DWORD *)(v37 + 60);
                }
                *(_DWORD *)buf = 136448514;
                v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
                __int16 v111 = 2082;
                int v112 = v93;
                __int16 v113 = 2080;
                uint64_t v114 = (uint64_t)" ";
                __int16 v115 = 1024;
                *(_DWORD *)os_log_type_t v116 = v102;
                *(_WORD *)&v116[4] = 1024;
                *(_DWORD *)&v116[6] = v103;
                LOWORD(v117) = 1024;
                *(_DWORD *)((char *)&v117 + 2) = v95;
                HIWORD(v117) = 1024;
                *(_DWORD *)v118 = v16;
                *(_WORD *)&v118[4] = 1024;
                *(_DWORD *)&v118[6] = v5;
                *(_WORD *)BOOL v119 = 1024;
                *(_DWORD *)&v119[2] = v104;
                __int16 v120 = 1024;
                int v121 = v105;
                _os_log_impl(&dword_1830D4000, v91, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Moving split frame (%u bytes of %u, %u bytes remaining, delivering %u bytes)", buf, 0x4Au);
              }
            }
          }
          goto LABEL_87;
        }
        if ((*(unsigned char *)(*(void *)(a1 + 64) + 158) & 1) == 0)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v44 = gLogObj;
          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
          {
            uint64_t v45 = *(void *)(a1 + 64);
            int v46 = (const char *)(v45 + 74);
            uint64_t v47 = *(void *)(v45 + 488);
            int v48 = *(_DWORD *)(*(void *)(v45 + 480) + 372);
            int v49 = *(_DWORD *)(v45 + 860);
            if (v47) {
              LODWORD(v47) = *(_DWORD *)(v47 + 424);
            }
            *(_DWORD *)buf = 136448002;
            v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
            __int16 v111 = 2082;
            int v112 = v46;
            __int16 v113 = 2080;
            uint64_t v114 = (uint64_t)" ";
            __int16 v115 = 1024;
            *(_DWORD *)os_log_type_t v116 = v48;
            *(_WORD *)&v116[4] = 1024;
            *(_DWORD *)&v116[6] = v49;
            LOWORD(v117) = 1024;
            *(_DWORD *)((char *)&v117 + 2) = v47;
            HIWORD(v117) = 2048;
            *(void *)v118 = a2;
            *(_WORD *)&v118[8] = 1024;
            *(_DWORD *)BOOL v119 = v16;
            _os_log_impl(&dword_1830D4000, v44, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> failed to split frame %p at offset %u", buf, 0x42u);
          }
        }
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
        BOOL v50 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t v108 = OS_LOG_TYPE_ERROR;
        char v106 = 0;
        if (!__nwlog_fault(v50, &v108, &v106)) {
          goto LABEL_127;
        }
        if (v108 == OS_LOG_TYPE_FAULT)
        {
          __int16 v51 = __nwlog_obj();
          os_log_type_t v52 = v108;
          if (!os_log_type_enabled(v51, v108)) {
            goto LABEL_127;
          }
          *(_DWORD *)buf = 136446210;
          v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
          os_log_type_t v53 = "%{public}s nw_frame_split with partial frame failed";
        }
        else if (v106)
        {
          uint64_t v84 = (char *)__nw_create_backtrace_string();
          __int16 v51 = __nwlog_obj();
          os_log_type_t v52 = v108;
          BOOL v85 = os_log_type_enabled(v51, v108);
          if (v84)
          {
            if (v85)
            {
              *(_DWORD *)buf = 136446466;
              v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
              __int16 v111 = 2082;
              int v112 = v84;
              _os_log_impl(&dword_1830D4000, v51, v52, "%{public}s nw_frame_split with partial frame failed, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v84);
            goto LABEL_127;
          }
          if (!v85)
          {
LABEL_127:
            if (v50) {
              free(v50);
            }
            return 0;
          }
          *(_DWORD *)buf = 136446210;
          v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
          os_log_type_t v53 = "%{public}s nw_frame_split with partial frame failed, no backtrace";
        }
        else
        {
          __int16 v51 = __nwlog_obj();
          os_log_type_t v52 = v108;
          if (!os_log_type_enabled(v51, v108)) {
            goto LABEL_127;
          }
          *(_DWORD *)buf = 136446210;
          v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
          os_log_type_t v53 = "%{public}s nw_frame_split with partial frame failed, backtrace limit exceeded";
        }
        _os_log_impl(&dword_1830D4000, v51, v52, v53, buf, 0xCu);
        goto LABEL_127;
      }
    }
    *(void *)(*(void *)(a1 + 56) + 8) = v19;
    goto LABEL_47;
  }
  BOOL result = 0;
  if ((*(unsigned char *)(*(void *)(a1 + 64) + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      int v30 = __nwlog_obj();
      BOOL result = os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG);
      if (result)
      {
        uint64_t v31 = *(void *)(a1 + 64);
        uint64_t v32 = (const char *)(v31 + 74);
        uint64_t v33 = *(void *)(v31 + 488);
        int v34 = *(_DWORD *)(*(void *)(v31 + 480) + 372);
        int v35 = *(_DWORD *)(v31 + 860);
        if (v33) {
          LODWORD(v33) = *(_DWORD *)(v33 + 424);
        }
        *(_DWORD *)buf = 136447490;
        v110 = "nw_http1_connection_fulfill_frame_request_block_invoke";
        __int16 v111 = 2082;
        int v112 = v32;
        __int16 v113 = 2080;
        uint64_t v114 = (uint64_t)" ";
        __int16 v115 = 1024;
        *(_DWORD *)os_log_type_t v116 = v34;
        *(_WORD *)&v116[4] = 1024;
        *(_DWORD *)&v116[6] = v35;
        LOWORD(v117) = 1024;
        *(_DWORD *)((char *)&v117 + 2) = v33;
        _os_log_impl(&dword_1830D4000, v30, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> skipping partial frame, split frames not allowed", buf, 0x32u);
        return 0;
      }
    }
  }
  return result;
}

uint64_t ___ZL41nw_http1_connection_fulfill_frame_requestP19nw_http1_connectionP16nw_frame_array_sS2_bbjjjPj_block_invoke_112(uint64_t a1, void *a2)
{
  if (!a2) {
    return 1;
  }
  if (!*(unsigned char *)(a1 + 48))
  {
    uint64_t v3 = a2[2];
    unsigned int v4 = (void *)a2[3];
    int v2 = a2 + 2;
    if (v3)
    {
      *(void *)(v3 + 24) = v4;
      unsigned int v4 = (void *)a2[3];
LABEL_8:
      void *v4 = v3;
      goto LABEL_9;
    }
LABEL_7:
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 48) = v4;
    goto LABEL_8;
  }
  uint64_t v3 = a2[4];
  unsigned int v4 = (void *)a2[5];
  int v2 = a2 + 4;
  if (!v3) {
    goto LABEL_7;
  }
  *(void *)(v3 + 40) = v4;
  *(void *)a2[5] = v3;
LABEL_9:
  void *v2 = 0;
  v2[1] = 0;
  uint64_t v5 = *(void *)(a1 + 40);
  if (*(unsigned char *)(a1 + 48))
  {
    a2[4] = 0;
    uint64_t v6 = a2 + 4;
  }
  else
  {
    a2[2] = 0;
    uint64_t v6 = a2 + 2;
  }
  unsigned int v7 = *(void **)(v5 + 8);
  v6[1] = v7;
  *unsigned int v7 = a2;
  *(void *)(v5 + 8) = v6;
  return 1;
}

void ___ZL40nw_http1_connection_process_input_framesP19nw_http1_connectionPjS1_P16nw_frame_array_sS3_b_block_invoke(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v156 = *MEMORY[0x1E4F143B8];
  if (a2 && a3)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if ((*(unsigned char *)(v6 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        int v104 = __nwlog_obj();
        BOOL v105 = os_log_type_enabled(v104, OS_LOG_TYPE_DEBUG);
        uint64_t v6 = *(void *)(a1 + 72);
        if (v105)
        {
          char v106 = (const char *)(v6 + 74);
          uint64_t v107 = *(void *)(v6 + 488);
          int v108 = *(_DWORD *)(*(void *)(v6 + 480) + 372);
          int v109 = *(_DWORD *)(v6 + 860);
          if (v107) {
            LODWORD(v107) = *(_DWORD *)(v107 + 424);
          }
          *(_DWORD *)buf = 136448002;
          BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
          __int16 v148 = 2082;
          __int16 v149 = v106;
          __int16 v150 = 2080;
          *(void *)int v151 = " ";
          *(_WORD *)&v151[8] = 1024;
          *(_DWORD *)&v151[10] = v108;
          *(_WORD *)&v151[14] = 1024;
          *(_DWORD *)&v151[16] = v109;
          LOWORD(v152) = 1024;
          *(_DWORD *)((char *)&v152 + 2) = v107;
          HIWORD(v152) = 2048;
          *(void *)os_log_type_t v153 = a2;
          *(_WORD *)&v153[8] = 1024;
          *(_DWORD *)&v153[10] = a3;
          _os_log_impl(&dword_1830D4000, v104, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> body bytes found (%p, %u bytes):", buf, 0x42u);
          uint64_t v6 = *(void *)(a1 + 72);
        }
      }
    }
    char v7 = *(unsigned char *)(v6 + 158) | (gLogDatapath == 0);
    if (*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) == a3)
    {
      if ((v7 & 1) == 0)
      {
        v110 = __nwlog_obj();
        if (os_log_type_enabled(v110, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v111 = *(void *)(a1 + 72);
          int v112 = (const char *)(v111 + 74);
          uint64_t v113 = *(void *)(v111 + 488);
          int v114 = *(_DWORD *)(*(void *)(v111 + 480) + 372);
          int v115 = *(_DWORD *)(v111 + 860);
          if (v113) {
            LODWORD(v113) = *(_DWORD *)(v113 + 424);
          }
          uint64_t v116 = *(void *)(a1 + 80);
          *(_DWORD *)buf = 136447746;
          BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
          __int16 v148 = 2082;
          __int16 v149 = v112;
          __int16 v150 = 2080;
          *(void *)int v151 = " ";
          *(_WORD *)&v151[8] = 1024;
          *(_DWORD *)&v151[10] = v114;
          *(_WORD *)&v151[14] = 1024;
          *(_DWORD *)&v151[16] = v115;
          LOWORD(v152) = 1024;
          *(_DWORD *)((char *)&v152 + 2) = v113;
          HIWORD(v152) = 2048;
          *(void *)os_log_type_t v153 = v116;
          _os_log_impl(&dword_1830D4000, v110, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> entire frame is body, moving to destination array %p", buf, 0x3Cu);
        }
      }
      uint64_t v8 = *(void *)(a1 + 80);
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
      if (*(unsigned char *)(a1 + 88))
      {
        *(void *)(v9 + 32) = 0;
        uint64_t v10 = v9 + 32;
      }
      else
      {
        *(void *)(v9 + 16) = 0;
        uint64_t v10 = v9 + 16;
      }
      uint64_t v37 = *(void **)(v8 + 8);
      *(void *)(v10 + 8) = v37;
      void *v37 = v9;
      *(void *)(v8 + 8) = v10;
      uint64_t v38 = *(void *)(*(void *)(a1 + 48) + 8);
      uint64_t v39 = *(unsigned int *)(v38 + 24) + 1;
      uint64_t v40 = v39 << 31 >> 31;
      *(_DWORD *)(v38 + 24) = v39;
      if (v40 == v39 && (v40 & 0x8000000000000000) == 0)
      {
LABEL_70:
        uint64_t v54 = *(void *)(*(void *)(a1 + 56) + 8);
        int v55 = *(_DWORD *)(v54 + 24);
        int v56 = *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
        *(_DWORD *)(v54 + 24) = v55 + v56;
        if (!__CFADD__(v55, v56))
        {
LABEL_89:
          *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
          return;
        }
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v57 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
        uint64_t v58 = *(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
        *(_DWORD *)buf = 136446978;
        BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
        __int16 v148 = 2082;
        __int16 v149 = "bytes_processed";
        __int16 v150 = 2048;
        *(void *)int v151 = v57;
        *(_WORD *)&v151[8] = 2048;
        *(void *)&v151[10] = v58;
        int v59 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v144 = 0;
        if (__nwlog_fault(v59, &type, &v144))
        {
          if (type == OS_LOG_TYPE_FAULT)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            os_log_type_t v60 = gLogObj;
            os_log_type_t v61 = type;
            if (os_log_type_enabled((os_log_t)gLogObj, type))
            {
              uint64_t v62 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
              uint64_t v63 = *(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
              *(_DWORD *)buf = 136446978;
              BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
              __int16 v148 = 2082;
              __int16 v149 = "bytes_processed";
              __int16 v150 = 2048;
              *(void *)int v151 = v62;
              *(_WORD *)&v151[8] = 2048;
              *(void *)&v151[10] = v63;
              os_log_type_t v64 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_85:
              _os_log_impl(&dword_1830D4000, v60, v61, v64, buf, 0x2Au);
            }
          }
          else if (v144)
          {
            backtrace_string = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            os_log_type_t v60 = gLogObj;
            os_log_type_t v61 = type;
            BOOL v66 = os_log_type_enabled((os_log_t)gLogObj, type);
            if (backtrace_string)
            {
              if (v66)
              {
                uint64_t v67 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
                uint64_t v68 = *(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
                *(_DWORD *)buf = 136447234;
                BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
                __int16 v148 = 2082;
                __int16 v149 = "bytes_processed";
                __int16 v150 = 2048;
                *(void *)int v151 = v67;
                *(_WORD *)&v151[8] = 2048;
                *(void *)&v151[10] = v68;
                *(_WORD *)&v151[18] = 2082;
                int v152 = backtrace_string;
                _os_log_impl(&dword_1830D4000, v60, v61, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
              }
              free(backtrace_string);
              goto LABEL_86;
            }
            if (v66)
            {
              uint64_t v71 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
              uint64_t v72 = *(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
              *(_DWORD *)buf = 136446978;
              BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
              __int16 v148 = 2082;
              __int16 v149 = "bytes_processed";
              __int16 v150 = 2048;
              *(void *)int v151 = v71;
              *(_WORD *)&v151[8] = 2048;
              *(void *)&v151[10] = v72;
              os_log_type_t v64 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
              goto LABEL_85;
            }
          }
          else
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            os_log_type_t v60 = gLogObj;
            os_log_type_t v61 = type;
            if (os_log_type_enabled((os_log_t)gLogObj, type))
            {
              uint64_t v69 = *(unsigned int *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
              uint64_t v70 = *(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
              *(_DWORD *)buf = 136446978;
              BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
              __int16 v148 = 2082;
              __int16 v149 = "bytes_processed";
              __int16 v150 = 2048;
              *(void *)int v151 = v69;
              *(_WORD *)&v151[8] = 2048;
              *(void *)&v151[10] = v70;
              os_log_type_t v64 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
              goto LABEL_85;
            }
          }
        }
LABEL_86:
        if (v59) {
          free(v59);
        }
        *(_DWORD *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = -1;
        goto LABEL_89;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v41 = *(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
      *(_DWORD *)buf = 136446978;
      BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
      __int16 v148 = 2082;
      __int16 v149 = "frames_processed";
      __int16 v150 = 2048;
      *(void *)int v151 = 1;
      *(_WORD *)&v151[8] = 2048;
      *(void *)&v151[10] = v41;
      uint64_t v42 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t type = OS_LOG_TYPE_ERROR;
      char v144 = 0;
      if (__nwlog_fault(v42, &type, &v144))
      {
        if (type == OS_LOG_TYPE_FAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          id v43 = gLogObj;
          os_log_type_t v44 = type;
          if (os_log_type_enabled((os_log_t)gLogObj, type))
          {
            uint64_t v45 = *(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
            *(_DWORD *)buf = 136446978;
            BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
            __int16 v148 = 2082;
            __int16 v149 = "frames_processed";
            __int16 v150 = 2048;
            *(void *)int v151 = 1;
            *(_WORD *)&v151[8] = 2048;
            *(void *)&v151[10] = v45;
            int v46 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_66:
            _os_log_impl(&dword_1830D4000, v43, v44, v46, buf, 0x2Au);
          }
        }
        else if (v144)
        {
          uint64_t v47 = (char *)__nw_create_backtrace_string();
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          id v43 = gLogObj;
          os_log_type_t v44 = type;
          BOOL v48 = os_log_type_enabled((os_log_t)gLogObj, type);
          if (v47)
          {
            if (v48)
            {
              uint64_t v49 = *(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
              *(_DWORD *)buf = 136447234;
              BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
              __int16 v148 = 2082;
              __int16 v149 = "frames_processed";
              __int16 v150 = 2048;
              *(void *)int v151 = 1;
              *(_WORD *)&v151[8] = 2048;
              *(void *)&v151[10] = v49;
              *(_WORD *)&v151[18] = 2082;
              int v152 = v47;
              _os_log_impl(&dword_1830D4000, v43, v44, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
            }
            free(v47);
            goto LABEL_67;
          }
          if (v48)
          {
            uint64_t v53 = *(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
            *(_DWORD *)buf = 136446978;
            BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
            __int16 v148 = 2082;
            __int16 v149 = "frames_processed";
            __int16 v150 = 2048;
            *(void *)int v151 = 1;
            *(_WORD *)&v151[8] = 2048;
            *(void *)&v151[10] = v53;
            int v46 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
            goto LABEL_66;
          }
        }
        else
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          id v43 = gLogObj;
          os_log_type_t v44 = type;
          if (os_log_type_enabled((os_log_t)gLogObj, type))
          {
            uint64_t v52 = *(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
            *(_DWORD *)buf = 136446978;
            BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
            __int16 v148 = 2082;
            __int16 v149 = "frames_processed";
            __int16 v150 = 2048;
            *(void *)int v151 = 1;
            *(_WORD *)&v151[8] = 2048;
            *(void *)&v151[10] = v52;
            int v46 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
            goto LABEL_66;
          }
        }
      }
LABEL_67:
      if (v42) {
        free(v42);
      }
      *(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = -1;
      goto LABEL_70;
    }
    if ((v7 & 1) == 0)
    {
      BOOL v117 = __nwlog_obj();
      if (os_log_type_enabled(v117, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v118 = *(void *)(a1 + 72);
        BOOL v119 = (const char *)(v118 + 74);
        uint64_t v120 = *(void *)(v118 + 488);
        int v121 = *(_DWORD *)(*(void *)(v118 + 480) + 372);
        int v122 = *(_DWORD *)(v118 + 860);
        if (v120) {
          LODWORD(v120) = *(_DWORD *)(v120 + 424);
        }
        uint64_t v123 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
        *(_DWORD *)buf = 136447746;
        BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
        __int16 v148 = 2082;
        __int16 v149 = v119;
        __int16 v150 = 2080;
        *(void *)int v151 = " ";
        *(_WORD *)&v151[8] = 1024;
        *(_DWORD *)&v151[10] = v121;
        *(_WORD *)&v151[14] = 1024;
        *(_DWORD *)&v151[16] = v122;
        LOWORD(v152) = 1024;
        *(_DWORD *)((char *)&v152 + 2) = v120;
        HIWORD(v152) = 2048;
        *(void *)os_log_type_t v153 = v123;
        _os_log_impl(&dword_1830D4000, v117, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> partial frame is body, trimming frame %p", buf, 0x3Cu);
      }
    }
    uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v16 = *(void *)(v15 + 24);
    *(void *)(v15 + 24) = 0;
    int v17 = a2 - *(_DWORD *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
    if ((*(unsigned char *)(*(void *)(a1 + 72) + 158) & 1) != 0 || !gLogDatapath) {
      goto LABEL_16;
    }
    uint64_t v124 = __nwlog_obj();
    BOOL v125 = os_log_type_enabled(v124, OS_LOG_TYPE_DEBUG);
    uint64_t v126 = *(void *)(a1 + 72);
    if (v125)
    {
      uint64_t v127 = (const char *)(v126 + 74);
      uint64_t v128 = *(void *)(v126 + 488);
      int v129 = *(_DWORD *)(*(void *)(v126 + 480) + 372);
      int v130 = *(_DWORD *)(v126 + 860);
      if (v128) {
        LODWORD(v128) = *(_DWORD *)(v128 + 424);
      }
      uint64_t v131 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24);
      *(_DWORD *)buf = 136448258;
      BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
      __int16 v148 = 2082;
      __int16 v149 = v127;
      __int16 v150 = 2080;
      *(void *)int v151 = " ";
      *(_WORD *)&v151[8] = 1024;
      *(_DWORD *)&v151[10] = v129;
      *(_WORD *)&v151[14] = 1024;
      *(_DWORD *)&v151[16] = v130;
      LOWORD(v152) = 1024;
      *(_DWORD *)((char *)&v152 + 2) = v128;
      HIWORD(v152) = 1024;
      *(_DWORD *)os_log_type_t v153 = v17;
      *(_WORD *)&v153[4] = 2048;
      *(void *)&v153[6] = v131;
      __int16 v154 = 2048;
      uint64_t v155 = a2;
      _os_log_impl(&dword_1830D4000, v124, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> claiming %u bytes from beginning of frame (%p -> %p)", buf, 0x4Cu);
      uint64_t v126 = *(void *)(a1 + 72);
    }
    if (v126)
    {
LABEL_16:
      nw_frame_claim(v16, a2, v17, 0);
      if (nw_frame_unclaimed_length((_DWORD *)v16) == a3)
      {
        if (!(*(unsigned char *)(*(void *)(a1 + 72) + 158) & 1 | (gLogDatapath == 0)))
        {
          uint64_t v18 = __nwlog_obj();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v19 = *(void *)(a1 + 72);
            uint64_t v20 = (const char *)(v19 + 74);
            uint64_t v21 = *(void *)(v19 + 488);
            int v22 = *(_DWORD *)(*(void *)(v19 + 480) + 372);
            int v23 = *(_DWORD *)(v19 + 860);
            if (v21) {
              LODWORD(v21) = *(_DWORD *)(v21 + 424);
            }
            *(_DWORD *)buf = 136447490;
            BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
            __int16 v148 = 2082;
            __int16 v149 = v20;
            __int16 v150 = 2080;
            *(void *)int v151 = " ";
            *(_WORD *)&v151[8] = 1024;
            *(_DWORD *)&v151[10] = v22;
            *(_WORD *)&v151[14] = 1024;
            *(_DWORD *)&v151[16] = v23;
            LOWORD(v152) = 1024;
            *(_DWORD *)((char *)&v152 + 2) = v21;
            _os_log_impl(&dword_1830D4000, v18, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> body extends to end of frame, continuing", buf, 0x32u);
          }
        }
LABEL_98:
        uint64_t v73 = *(void *)(a1 + 80);
        if (*(unsigned char *)(a1 + 88))
        {
          *(void *)(v16 + 32) = 0;
          uint64_t v74 = v16 + 32;
        }
        else
        {
          *(void *)(v16 + 16) = 0;
          uint64_t v74 = v16 + 16;
        }
        BOOL v75 = *(uint64_t **)(v73 + 8);
        *(void *)(v74 + 8) = v75;
        *BOOL v75 = v16;
        *(void *)(v73 + 8) = v74;
        uint64_t v76 = *(void *)(*(void *)(a1 + 48) + 8);
        uint64_t v77 = *(unsigned int *)(v76 + 24) + 1;
        uint64_t v78 = v77 << 31 >> 31;
        *(_DWORD *)(v76 + 24) = v77;
        if (v78 == v77 && (v78 & 0x8000000000000000) == 0) {
          goto LABEL_120;
        }
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v79 = *(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
        *(_DWORD *)buf = 136446978;
        BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
        __int16 v148 = 2082;
        __int16 v149 = "frames_processed";
        __int16 v150 = 2048;
        *(void *)int v151 = 1;
        *(_WORD *)&v151[8] = 2048;
        *(void *)&v151[10] = v79;
        uint64_t v80 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v144 = 0;
        if (__nwlog_fault(v80, &type, &v144))
        {
          if (type == OS_LOG_TYPE_FAULT)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v81 = gLogObj;
            os_log_type_t v82 = type;
            if (os_log_type_enabled((os_log_t)gLogObj, type))
            {
              uint64_t v83 = *(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
              *(_DWORD *)buf = 136446978;
              BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
              __int16 v148 = 2082;
              __int16 v149 = "frames_processed";
              __int16 v150 = 2048;
              *(void *)int v151 = 1;
              *(_WORD *)&v151[8] = 2048;
              *(void *)&v151[10] = v83;
              uint64_t v84 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_116:
              _os_log_impl(&dword_1830D4000, v81, v82, v84, buf, 0x2Au);
            }
          }
          else if (v144)
          {
            BOOL v85 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v81 = gLogObj;
            os_log_type_t v82 = type;
            BOOL v86 = os_log_type_enabled((os_log_t)gLogObj, type);
            if (v85)
            {
              if (v86)
              {
                uint64_t v87 = *(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
                *(_DWORD *)buf = 136447234;
                BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
                __int16 v148 = 2082;
                __int16 v149 = "frames_processed";
                __int16 v150 = 2048;
                *(void *)int v151 = 1;
                *(_WORD *)&v151[8] = 2048;
                *(void *)&v151[10] = v87;
                *(_WORD *)&v151[18] = 2082;
                int v152 = v85;
                _os_log_impl(&dword_1830D4000, v81, v82, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
              }
              free(v85);
              goto LABEL_117;
            }
            if (v86)
            {
              uint64_t v89 = *(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
              *(_DWORD *)buf = 136446978;
              BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
              __int16 v148 = 2082;
              __int16 v149 = "frames_processed";
              __int16 v150 = 2048;
              *(void *)int v151 = 1;
              *(_WORD *)&v151[8] = 2048;
              *(void *)&v151[10] = v89;
              uint64_t v84 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
              goto LABEL_116;
            }
          }
          else
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v81 = gLogObj;
            os_log_type_t v82 = type;
            if (os_log_type_enabled((os_log_t)gLogObj, type))
            {
              uint64_t v88 = *(unsigned int *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
              *(_DWORD *)buf = 136446978;
              BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
              __int16 v148 = 2082;
              __int16 v149 = "frames_processed";
              __int16 v150 = 2048;
              *(void *)int v151 = 1;
              *(_WORD *)&v151[8] = 2048;
              *(void *)&v151[10] = v88;
              uint64_t v84 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
              goto LABEL_116;
            }
          }
        }
LABEL_117:
        if (v80) {
          free(v80);
        }
        *(_DWORD *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = -1;
LABEL_120:
        uint64_t v90 = *(void *)(*(void *)(a1 + 56) + 8);
        int v91 = *(_DWORD *)(v90 + 24);
        *(_DWORD *)(v90 + 24) = v91 + a3;
        if (!__CFADD__(v91, a3)) {
          return;
        }
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v92 = a3;
        uint64_t v93 = *(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
        *(_DWORD *)buf = 136446978;
        BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
        __int16 v148 = 2082;
        __int16 v149 = "bytes_processed";
        __int16 v150 = 2048;
        *(void *)int v151 = a3;
        *(_WORD *)&v151[8] = 2048;
        *(void *)&v151[10] = v93;
        uint64_t v94 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v144 = 0;
        if (!__nwlog_fault(v94, &type, &v144)) {
          goto LABEL_136;
        }
        if (type == OS_LOG_TYPE_FAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v95 = gLogObj;
          os_log_type_t v96 = type;
          if (os_log_type_enabled((os_log_t)gLogObj, type))
          {
            uint64_t v97 = *(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
            *(_DWORD *)buf = 136446978;
            BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
            __int16 v148 = 2082;
            __int16 v149 = "bytes_processed";
            __int16 v150 = 2048;
            *(void *)int v151 = v92;
            *(_WORD *)&v151[8] = 2048;
            *(void *)&v151[10] = v97;
            int v98 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_135:
            _os_log_impl(&dword_1830D4000, v95, v96, v98, buf, 0x2Au);
          }
        }
        else if (v144)
        {
          uint64_t v99 = (char *)__nw_create_backtrace_string();
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v95 = gLogObj;
          os_log_type_t v96 = type;
          BOOL v100 = os_log_type_enabled((os_log_t)gLogObj, type);
          if (v99)
          {
            if (v100)
            {
              uint64_t v101 = *(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
              *(_DWORD *)buf = 136447234;
              BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
              __int16 v148 = 2082;
              __int16 v149 = "bytes_processed";
              __int16 v150 = 2048;
              *(void *)int v151 = v92;
              *(_WORD *)&v151[8] = 2048;
              *(void *)&v151[10] = v101;
              *(_WORD *)&v151[18] = 2082;
              int v152 = v99;
              _os_log_impl(&dword_1830D4000, v95, v96, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
            }
            free(v99);
            goto LABEL_136;
          }
          if (v100)
          {
            uint64_t v103 = *(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
            *(_DWORD *)buf = 136446978;
            BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
            __int16 v148 = 2082;
            __int16 v149 = "bytes_processed";
            __int16 v150 = 2048;
            *(void *)int v151 = v92;
            *(_WORD *)&v151[8] = 2048;
            *(void *)&v151[10] = v103;
            int v98 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
            goto LABEL_135;
          }
        }
        else
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v95 = gLogObj;
          os_log_type_t v96 = type;
          if (os_log_type_enabled((os_log_t)gLogObj, type))
          {
            uint64_t v102 = *(unsigned int *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
            *(_DWORD *)buf = 136446978;
            BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
            __int16 v148 = 2082;
            __int16 v149 = "bytes_processed";
            __int16 v150 = 2048;
            *(void *)int v151 = v92;
            *(_WORD *)&v151[8] = 2048;
            *(void *)&v151[10] = v102;
            int v98 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
            goto LABEL_135;
          }
        }
LABEL_136:
        if (v94) {
          free(v94);
        }
        *(_DWORD *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = -1;
        return;
      }
      if (!(*(unsigned char *)(*(void *)(a1 + 72) + 158) & 1 | (gLogDatapath == 0)))
      {
        BOOL v136 = __nwlog_obj();
        if (os_log_type_enabled(v136, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v137 = *(void *)(a1 + 72);
          os_log_type_t v138 = (const char *)(v137 + 74);
          uint64_t v139 = *(void *)(v137 + 488);
          int v140 = *(_DWORD *)(*(void *)(v137 + 480) + 372);
          int v141 = *(_DWORD *)(v137 + 860);
          if (v139) {
            LODWORD(v139) = *(_DWORD *)(v139 + 424);
          }
          *(_DWORD *)buf = 136447746;
          BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
          __int16 v148 = 2082;
          __int16 v149 = v138;
          __int16 v150 = 2080;
          *(void *)int v151 = " ";
          *(_WORD *)&v151[8] = 1024;
          *(_DWORD *)&v151[10] = v140;
          *(_WORD *)&v151[14] = 1024;
          *(_DWORD *)&v151[16] = v141;
          LOWORD(v152) = 1024;
          *(_DWORD *)((char *)&v152 + 2) = v139;
          HIWORD(v152) = 2048;
          *(void *)os_log_type_t v153 = v16;
          _os_log_impl(&dword_1830D4000, v136, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> bytes left over after trimming, splitting frame %p", buf, 0x3Cu);
        }
      }
      *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v16;
      uint64_t v16 = nw_frame_split((uint64_t *)(*(void *)(*(void *)(a1 + 40) + 8) + 24), a3);
      if (v16)
      {
LABEL_97:
        *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = nw_frame_unclaimed_bytes(*(void *)(*(void *)(*(void *)(a1 + 40)+ 8)+ 24), (_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8)+ 24));
        goto LABEL_98;
      }
      if ((*(unsigned char *)(*(void *)(a1 + 72) + 158) & 1) == 0)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v26 = gLogObj;
        if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
        {
          uint64_t v27 = *(void *)(a1 + 72);
          uint64_t v28 = (const char *)(v27 + 74);
          uint64_t v29 = *(void *)(v27 + 488);
          int v30 = *(_DWORD *)(*(void *)(v27 + 480) + 372);
          int v31 = *(_DWORD *)(v27 + 860);
          if (v29) {
            LODWORD(v29) = *(_DWORD *)(v29 + 424);
          }
          uint64_t v32 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
          *(_DWORD *)buf = 136448002;
          BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
          __int16 v148 = 2082;
          __int16 v149 = v28;
          __int16 v150 = 2080;
          *(void *)int v151 = " ";
          *(_WORD *)&v151[8] = 1024;
          *(_DWORD *)&v151[10] = v30;
          *(_WORD *)&v151[14] = 1024;
          *(_DWORD *)&v151[16] = v31;
          LOWORD(v152) = 1024;
          *(_DWORD *)((char *)&v152 + 2) = v29;
          HIWORD(v152) = 2048;
          *(void *)os_log_type_t v153 = v32;
          *(_WORD *)&v153[8] = 1024;
          *(_DWORD *)&v153[10] = a3;
          _os_log_impl(&dword_1830D4000, v26, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> failed to split frame %p at offset %u", buf, 0x42u);
        }
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
      uint64_t v33 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t type = OS_LOG_TYPE_ERROR;
      char v144 = 0;
      if (__nwlog_fault(v33, &type, &v144))
      {
        if (type == OS_LOG_TYPE_FAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v34 = gLogObj;
          os_log_type_t v35 = type;
          if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
            goto LABEL_95;
          }
          *(_DWORD *)buf = 136446210;
          BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
          uint64_t v36 = "%{public}s nw_frame_split with partial frame failed";
          goto LABEL_94;
        }
        if (!v144)
        {
          int v34 = __nwlog_obj();
          os_log_type_t v35 = type;
          if (!os_log_type_enabled(v34, type)) {
            goto LABEL_95;
          }
          *(_DWORD *)buf = 136446210;
          BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
          uint64_t v36 = "%{public}s nw_frame_split with partial frame failed, backtrace limit exceeded";
          goto LABEL_94;
        }
        BOOL v50 = (char *)__nw_create_backtrace_string();
        int v34 = __nwlog_obj();
        os_log_type_t v35 = type;
        BOOL v51 = os_log_type_enabled(v34, type);
        if (v50)
        {
          if (v51)
          {
            *(_DWORD *)buf = 136446466;
            BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
            __int16 v148 = 2082;
            __int16 v149 = v50;
            _os_log_impl(&dword_1830D4000, v34, v35, "%{public}s nw_frame_split with partial frame failed, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v50);
          goto LABEL_95;
        }
        if (v51)
        {
          *(_DWORD *)buf = 136446210;
          BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
          uint64_t v36 = "%{public}s nw_frame_split with partial frame failed, no backtrace";
LABEL_94:
          _os_log_impl(&dword_1830D4000, v34, v35, v36, buf, 0xCu);
        }
      }
LABEL_95:
      if (v33) {
        free(v33);
      }
      goto LABEL_97;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v147 = "nw_http1_get_output_protocol";
    uint64_t v132 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v144 = 0;
    if (__nwlog_fault(v132, &type, &v144))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        int v133 = __nwlog_obj();
        os_log_type_t v134 = type;
        if (!os_log_type_enabled(v133, type)) {
          goto LABEL_175;
        }
        *(_DWORD *)buf = 136446210;
        BOOL v147 = "nw_http1_get_output_protocol";
        int v135 = "%{public}s called with null connection";
        goto LABEL_174;
      }
      if (!v144)
      {
        int v133 = __nwlog_obj();
        os_log_type_t v134 = type;
        if (!os_log_type_enabled(v133, type)) {
          goto LABEL_175;
        }
        *(_DWORD *)buf = 136446210;
        BOOL v147 = "nw_http1_get_output_protocol";
        int v135 = "%{public}s called with null connection, backtrace limit exceeded";
        goto LABEL_174;
      }
      int v142 = (char *)__nw_create_backtrace_string();
      int v133 = __nwlog_obj();
      os_log_type_t v134 = type;
      BOOL v143 = os_log_type_enabled(v133, type);
      if (v142)
      {
        if (v143)
        {
          *(_DWORD *)buf = 136446466;
          BOOL v147 = "nw_http1_get_output_protocol";
          __int16 v148 = 2082;
          __int16 v149 = v142;
          _os_log_impl(&dword_1830D4000, v133, v134, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v142);
        goto LABEL_175;
      }
      if (v143)
      {
        *(_DWORD *)buf = 136446210;
        BOOL v147 = "nw_http1_get_output_protocol";
        int v135 = "%{public}s called with null connection, no backtrace";
LABEL_174:
        _os_log_impl(&dword_1830D4000, v133, v134, v135, buf, 0xCu);
      }
    }
LABEL_175:
    if (v132) {
      free(v132);
    }
    goto LABEL_16;
  }
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  *(_DWORD *)buf = 136446722;
  BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
  __int16 v148 = 2048;
  __int16 v149 = (const char *)a2;
  __int16 v150 = 1024;
  *(_DWORD *)int v151 = a3;
  os_log_type_t v11 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v144 = 0;
  if (__nwlog_fault(v11, &type, &v144))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v12 = gLogObj;
      os_log_type_t v13 = type;
      if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
        goto LABEL_55;
      }
      *(_DWORD *)buf = 136446722;
      BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
      __int16 v148 = 2048;
      __int16 v149 = (const char *)a2;
      __int16 v150 = 1024;
      *(_DWORD *)int v151 = a3;
      BOOL v14 = "%{public}s unexpected values for body_start (%p) or body_length (%u)";
      goto LABEL_54;
    }
    if (!v144)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v12 = gLogObj;
      os_log_type_t v13 = type;
      if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
        goto LABEL_55;
      }
      *(_DWORD *)buf = 136446722;
      BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
      __int16 v148 = 2048;
      __int16 v149 = (const char *)a2;
      __int16 v150 = 1024;
      *(_DWORD *)int v151 = a3;
      BOOL v14 = "%{public}s unexpected values for body_start (%p) or body_length (%u), backtrace limit exceeded";
      goto LABEL_54;
    }
    uint64_t v24 = (char *)__nw_create_backtrace_string();
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v12 = gLogObj;
    os_log_type_t v13 = type;
    BOOL v25 = os_log_type_enabled((os_log_t)gLogObj, type);
    if (v24)
    {
      if (v25)
      {
        *(_DWORD *)buf = 136446978;
        BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
        __int16 v148 = 2048;
        __int16 v149 = (const char *)a2;
        __int16 v150 = 1024;
        *(_DWORD *)int v151 = a3;
        *(_WORD *)&v151[4] = 2082;
        *(void *)&v151[6] = v24;
        _os_log_impl(&dword_1830D4000, v12, v13, "%{public}s unexpected values for body_start (%p) or body_length (%u), dumping backtrace:%{public}s", buf, 0x26u);
      }
      free(v24);
      goto LABEL_55;
    }
    if (v25)
    {
      *(_DWORD *)buf = 136446722;
      BOOL v147 = "nw_http1_connection_process_input_frames_block_invoke";
      __int16 v148 = 2048;
      __int16 v149 = (const char *)a2;
      __int16 v150 = 1024;
      *(_DWORD *)int v151 = a3;
      BOOL v14 = "%{public}s unexpected values for body_start (%p) or body_length (%u), no backtrace";
LABEL_54:
      _os_log_impl(&dword_1830D4000, v12, v13, v14, buf, 0x1Cu);
    }
  }
LABEL_55:
  if (v11) {
    free(v11);
  }
}

uint64_t nw_http1_connection_execute_parser(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unsigned int *a4, uint64_t a5)
{
  uint64_t v81 = *MEMORY[0x1E4F143B8];
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v64 = "nw_http1_connection_execute_parser";
    BOOL v51 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v61 = 0;
    if (!__nwlog_fault(v51, &type, &v61)) {
      goto LABEL_87;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v52 = __nwlog_obj();
      os_log_type_t v53 = type;
      if (!os_log_type_enabled(v52, type)) {
        goto LABEL_87;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      uint64_t v54 = "%{public}s called with null bytes";
      goto LABEL_86;
    }
    if (!v61)
    {
      uint64_t v52 = __nwlog_obj();
      os_log_type_t v53 = type;
      if (!os_log_type_enabled(v52, type)) {
        goto LABEL_87;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      uint64_t v54 = "%{public}s called with null bytes, backtrace limit exceeded";
      goto LABEL_86;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v52 = __nwlog_obj();
    os_log_type_t v53 = type;
    BOOL v58 = os_log_type_enabled(v52, type);
    if (!backtrace_string)
    {
      if (!v58) {
        goto LABEL_87;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      uint64_t v54 = "%{public}s called with null bytes, no backtrace";
      goto LABEL_86;
    }
    if (!v58) {
      goto LABEL_81;
    }
    *(_DWORD *)buf = 136446466;
    os_log_type_t v64 = "nw_http1_connection_execute_parser";
    __int16 v65 = 2082;
    BOOL v66 = backtrace_string;
    uint64_t v57 = "%{public}s called with null bytes, dumping backtrace:%{public}s";
    goto LABEL_80;
  }
  if (!a4)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v64 = "nw_http1_connection_execute_parser";
    BOOL v51 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v61 = 0;
    if (!__nwlog_fault(v51, &type, &v61)) {
      goto LABEL_87;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v52 = __nwlog_obj();
      os_log_type_t v53 = type;
      if (!os_log_type_enabled(v52, type)) {
        goto LABEL_87;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      uint64_t v54 = "%{public}s called with null bytes_parsed";
      goto LABEL_86;
    }
    if (!v61)
    {
      uint64_t v52 = __nwlog_obj();
      os_log_type_t v53 = type;
      if (!os_log_type_enabled(v52, type)) {
        goto LABEL_87;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      uint64_t v54 = "%{public}s called with null bytes_parsed, backtrace limit exceeded";
      goto LABEL_86;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v52 = __nwlog_obj();
    os_log_type_t v53 = type;
    BOOL v59 = os_log_type_enabled(v52, type);
    if (!backtrace_string)
    {
      if (!v59) {
        goto LABEL_87;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      uint64_t v54 = "%{public}s called with null bytes_parsed, no backtrace";
      goto LABEL_86;
    }
    if (!v59) {
      goto LABEL_81;
    }
    *(_DWORD *)buf = 136446466;
    os_log_type_t v64 = "nw_http1_connection_execute_parser";
    __int16 v65 = 2082;
    BOOL v66 = backtrace_string;
    uint64_t v57 = "%{public}s called with null bytes_parsed, dumping backtrace:%{public}s";
    goto LABEL_80;
  }
  if (!a5)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v64 = "nw_http1_connection_execute_parser";
    BOOL v51 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v61 = 0;
    if (!__nwlog_fault(v51, &type, &v61)) {
      goto LABEL_87;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v52 = __nwlog_obj();
      os_log_type_t v53 = type;
      if (!os_log_type_enabled(v52, type)) {
        goto LABEL_87;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      uint64_t v54 = "%{public}s called with null body_block";
      goto LABEL_86;
    }
    if (!v61)
    {
      uint64_t v52 = __nwlog_obj();
      os_log_type_t v53 = type;
      if (!os_log_type_enabled(v52, type)) {
        goto LABEL_87;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      uint64_t v54 = "%{public}s called with null body_block, backtrace limit exceeded";
      goto LABEL_86;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v52 = __nwlog_obj();
    os_log_type_t v53 = type;
    BOOL v60 = os_log_type_enabled(v52, type);
    if (!backtrace_string)
    {
      if (!v60) {
        goto LABEL_87;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      uint64_t v54 = "%{public}s called with null body_block, no backtrace";
      goto LABEL_86;
    }
    if (!v60) {
      goto LABEL_81;
    }
    *(_DWORD *)buf = 136446466;
    os_log_type_t v64 = "nw_http1_connection_execute_parser";
    __int16 v65 = 2082;
    BOOL v66 = backtrace_string;
    uint64_t v57 = "%{public}s called with null body_block, dumping backtrace:%{public}s";
    goto LABEL_80;
  }
  unsigned int v7 = a3;
  if ((*(_WORD *)(a1 + 872) & 0x200) != 0)
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(a5 + 16))(a5, a2, a3);
    return 1;
  }
  *(void *)(a1 + 792) = a5;
  __int16 v10 = *(_WORD *)(*(void *)(a1 + 488) + 428);
  uint64_t v11 = a3;
  int v12 = *(_DWORD *)(a1 + 224);
  if (!v12)
  {
    uint64_t v20 = &a2[a3];
    if (*(void *)(a1 + 208)) {
      *(void *)(a1 + 208) = a2;
    }
    unsigned int v21 = llhttp__internal__run(a1 + 200, a2, &a2[a3]);
    if (v21)
    {
      *(void *)(a1 + 256) = v21;
      uint64_t v22 = *(void *)(a1 + 208);
      if (!v22
        || (int v12 = (*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *))(a1 + 216))(a1 + 200, v22, &a2[v11])) == 0)
      {
        *(void *)(a1 + 792) = 0;
        goto LABEL_50;
      }
      *(_DWORD *)(a1 + 224) = v12;
      *(void *)(a1 + 240) = v20;
    }
    else
    {
      int v12 = *(_DWORD *)(a1 + 224);
    }
  }
  os_log_type_t v13 = (__int16 *)(a1 + 872);
  *(void *)(a1 + 792) = 0;
  if (v12 == 22)
  {
    uint64_t v23 = *(void *)(a1 + 240) - (void)a2;
    if ((*(unsigned char *)(a1 + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v24 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v25 = *(void *)(a1 + 488);
        int v26 = *(_DWORD *)(*(void *)(a1 + 480) + 372);
        int v27 = *(_DWORD *)(a1 + 860);
        if (v25) {
          LODWORD(v25) = *(_DWORD *)(v25 + 424);
        }
        *(_DWORD *)buf = 136447746;
        os_log_type_t v64 = "nw_http1_connection_execute_parser";
        __int16 v65 = 2082;
        BOOL v66 = (char *)(a1 + 74);
        __int16 v67 = 2080;
        uint64_t v68 = " ";
        __int16 v69 = 1024;
        int v70 = v26;
        __int16 v71 = 1024;
        int v72 = v27;
        __int16 v73 = 1024;
        int v74 = v25;
        __int16 v75 = 1024;
        LODWORD(v76) = v23;
        _os_log_impl(&dword_1830D4000, v24, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> upgraded after parsing %u bytes", buf, 0x38u);
      }
    }
    *v13 |= 0x200u;
    uint64_t v11 = v23;
    if (v7 > v23) {
      (*(void (**)(uint64_t, unsigned __int8 *, void))(a5 + 16))(a5, &a2[v23], v7 - v23);
    }
    *a4 = v7;
    goto LABEL_56;
  }
  if (v12 != 21)
  {
    if (v12)
    {
      if ((*(unsigned char *)(a1 + 158) & 1) == 0)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v14 = gLogObj;
        if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
        {
          uint64_t v15 = *(void *)(a1 + 488);
          int v16 = *(_DWORD *)(*(void *)(a1 + 480) + 372);
          int v17 = *(_DWORD *)(a1 + 860);
          if (v15) {
            LODWORD(v15) = *(_DWORD *)(v15 + 424);
          }
          uint64_t v18 = *(void *)(a1 + 232);
          *(_DWORD *)buf = 136448258;
          os_log_type_t v64 = "nw_http1_connection_execute_parser";
          __int16 v65 = 2082;
          BOOL v66 = (char *)(a1 + 74);
          __int16 v67 = 2080;
          uint64_t v68 = " ";
          __int16 v69 = 1024;
          int v70 = v16;
          __int16 v71 = 1024;
          int v72 = v17;
          __int16 v73 = 1024;
          int v74 = v15;
          __int16 v75 = 2080;
          uint64_t v76 = v18;
          __int16 v77 = 1040;
          unsigned int v78 = v7;
          __int16 v79 = 2096;
          uint64_t v80 = a2;
          _os_log_impl(&dword_1830D4000, v14, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> Failed to parse bytes (%s): \n%{network:data}.*P", buf, 0x4Cu);
        }
      }
      uint64_t result = 0;
      *a4 = 0;
      return result;
    }
LABEL_50:
    if ((*(unsigned char *)(a1 + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      id v43 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v44 = *(void *)(a1 + 488);
        int v45 = *(_DWORD *)(*(void *)(a1 + 480) + 372);
        int v46 = *(_DWORD *)(a1 + 860);
        if (v44) {
          LODWORD(v44) = *(_DWORD *)(v44 + 424);
        }
        *(_DWORD *)buf = 136447746;
        os_log_type_t v64 = "nw_http1_connection_execute_parser";
        __int16 v65 = 2082;
        BOOL v66 = (char *)(a1 + 74);
        __int16 v67 = 2080;
        uint64_t v68 = " ";
        __int16 v69 = 1024;
        int v70 = v45;
        __int16 v71 = 1024;
        int v72 = v46;
        __int16 v73 = 1024;
        int v74 = v44;
        __int16 v75 = 1024;
        LODWORD(v76) = v7;
        _os_log_impl(&dword_1830D4000, v43, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> parsed %u bytes", buf, 0x38u);
      }
    }
    *a4 = v7;
    if ((v10 & 1) == 0) {
      goto LABEL_56;
    }
LABEL_68:
    if (v11) {
      nw_http_transaction_metadata_increment_inbound_body_transfer_size(*(void **)(*(void *)(a1 + 488) + 352), v11);
    }
    return 1;
  }
  uint64_t v28 = *(void *)(a1 + 240);
  unsigned int v29 = v28 - a2;
  *a4 = v28 - a2;
  if ((*(unsigned char *)(a1 + 158) & 1) == 0)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v30 = gLogObj;
    if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v31 = *(void *)(a1 + 488);
      int v32 = *(_DWORD *)(*(void *)(a1 + 480) + 372);
      int v33 = *(_DWORD *)(a1 + 860);
      if (v31) {
        LODWORD(v31) = *(_DWORD *)(v31 + 424);
      }
      unsigned int v34 = *a4;
      *(_DWORD *)buf = 136447746;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      __int16 v65 = 2082;
      BOOL v66 = (char *)(a1 + 74);
      __int16 v67 = 2080;
      uint64_t v68 = " ";
      __int16 v69 = 1024;
      int v70 = v32;
      __int16 v71 = 1024;
      int v72 = v33;
      __int16 v73 = 1024;
      int v74 = v31;
      __int16 v75 = 1024;
      LODWORD(v76) = v34;
      _os_log_impl(&dword_1830D4000, v30, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> paused parser after processing %u bytes", buf, 0x38u);
    }
    unsigned int v29 = *a4;
  }
  uint64_t v11 = v29;
  __int16 v35 = *v13;
  if ((v10 & 1) == 0)
  {
    if ((v35 & 4) != 0)
    {
LABEL_56:
      if (v11) {
        nw_http_transaction_metadata_increment_inbound_header_size(*(void **)(*(void *)(a1 + 488) + 352), v11);
      }
      return 1;
    }
    uint64_t v36 = *(void *)(a1 + 488);
    if (v11)
    {
      nw_http_transaction_metadata_increment_inbound_header_size(*(void **)(v36 + 352), v11);
      uint64_t v36 = *(void *)(a1 + 488);
    }
    __int16 v37 = *(_WORD *)(v36 + 428);
    char v38 = *(unsigned char *)(a1 + 158);
    if (v37)
    {
      if ((*(unsigned char *)(a1 + 158) & 1) == 0)
      {
        uint64_t v39 = __nwlog_obj();
        if (os_log_type_enabled(v39, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v40 = *(void *)(a1 + 488);
          int v41 = *(_DWORD *)(*(void *)(a1 + 480) + 372);
          int v42 = *(_DWORD *)(a1 + 860);
          if (v40) {
            LODWORD(v40) = *(_DWORD *)(v40 + 424);
          }
          *(_DWORD *)buf = 136447490;
          os_log_type_t v64 = "nw_http1_connection_execute_parser";
          __int16 v65 = 2082;
          BOOL v66 = (char *)(a1 + 74);
          __int16 v67 = 2080;
          uint64_t v68 = " ";
          __int16 v69 = 1024;
          int v70 = v41;
          __int16 v71 = 1024;
          int v72 = v42;
          __int16 v73 = 1024;
          int v74 = v40;
          _os_log_impl(&dword_1830D4000, v39, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> resuming after processing headers", buf, 0x32u);
        }
      }
      if (*(_DWORD *)(a1 + 224) == 21) {
        *(_DWORD *)(a1 + 224) = 0;
      }
      *(_DWORD *)buf = 0;
      uint64_t result = nw_http1_connection_execute_parser(a1, v28, v7 - *a4, buf, a5);
      *a4 += *(_DWORD *)buf;
      return result;
    }
LABEL_62:
    if ((v38 & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v47 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v48 = *(void *)(a1 + 488);
        int v49 = *(_DWORD *)(*(void *)(a1 + 480) + 372);
        int v50 = *(_DWORD *)(a1 + 860);
        if (v48) {
          LODWORD(v48) = *(_DWORD *)(v48 + 424);
        }
        *(_DWORD *)buf = 136447490;
        os_log_type_t v64 = "nw_http1_connection_execute_parser";
        __int16 v65 = 2082;
        BOOL v66 = (char *)(a1 + 74);
        __int16 v67 = 2080;
        uint64_t v68 = " ";
        __int16 v69 = 1024;
        int v70 = v49;
        __int16 v71 = 1024;
        int v72 = v50;
        __int16 v73 = 1024;
        int v74 = v48;
        _os_log_impl(&dword_1830D4000, v47, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> got informational response", buf, 0x32u);
      }
    }
    *v13 |= 0x10u;
    return 1;
  }
  if ((v35 & 4) != 0) {
    goto LABEL_68;
  }
  if ((*(_WORD *)(*(void *)(a1 + 488) + 428) & 1) == 0)
  {
    char v38 = *(unsigned char *)(a1 + 158);
    goto LABEL_62;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  os_log_type_t v64 = "nw_http1_connection_execute_parser";
  BOOL v51 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v61 = 0;
  if (!__nwlog_fault(v51, &type, &v61)) {
    goto LABEL_87;
  }
  if (type == OS_LOG_TYPE_FAULT)
  {
    uint64_t v52 = __nwlog_obj();
    os_log_type_t v53 = type;
    if (os_log_type_enabled(v52, type))
    {
      *(_DWORD *)buf = 136446210;
      os_log_type_t v64 = "nw_http1_connection_execute_parser";
      uint64_t v54 = "%{public}s paused in the middle of parsing the body";
LABEL_86:
      _os_log_impl(&dword_1830D4000, v52, v53, v54, buf, 0xCu);
      goto LABEL_87;
    }
    goto LABEL_87;
  }
  if (v61)
  {
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v52 = __nwlog_obj();
    os_log_type_t v53 = type;
    BOOL v56 = os_log_type_enabled(v52, type);
    if (!backtrace_string)
    {
      if (v56)
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v64 = "nw_http1_connection_execute_parser";
        uint64_t v54 = "%{public}s paused in the middle of parsing the body, no backtrace";
        goto LABEL_86;
      }
      goto LABEL_87;
    }
    if (!v56)
    {
LABEL_81:
      free(backtrace_string);
      goto LABEL_87;
    }
    *(_DWORD *)buf = 136446466;
    os_log_type_t v64 = "nw_http1_connection_execute_parser";
    __int16 v65 = 2082;
    BOOL v66 = backtrace_string;
    uint64_t v57 = "%{public}s paused in the middle of parsing the body, dumping backtrace:%{public}s";
LABEL_80:
    _os_log_impl(&dword_1830D4000, v52, v53, v57, buf, 0x16u);
    goto LABEL_81;
  }
  uint64_t v52 = __nwlog_obj();
  os_log_type_t v53 = type;
  if (os_log_type_enabled(v52, type))
  {
    *(_DWORD *)buf = 136446210;
    os_log_type_t v64 = "nw_http1_connection_execute_parser";
    uint64_t v54 = "%{public}s paused in the middle of parsing the body, backtrace limit exceeded";
    goto LABEL_86;
  }
LABEL_87:
  if (v51) {
    free(v51);
  }
  return 0;
}

uint64_t ___ZL34nw_protocol_http1_get_input_framesP11nw_protocolS0_jjjP16nw_frame_array_s_block_invoke(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 186) = *(unsigned char *)(a2 + 186) & 0x7F | ((*(unsigned char *)(a1 + 48) != 0) << 7);
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = (*(_WORD *)(v2 + 428) & 0x200) != 0 && **(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 8) == a2;
  nw_frame_set_metadata(a2, *(NSObject **)(v2 + 368), 1, v3);
  return 1;
}

void nw_http1_connection_inbound_frame_finalizer(nw_frame *a1, int a2, void *a3)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
    __int16 v10 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v25 = 0;
    if (!__nwlog_fault(v10, &type, &v25)) {
      goto LABEL_76;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (!os_log_type_enabled(v11, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      os_log_type_t v13 = "%{public}s called with null frame";
    }
    else if (v25)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      BOOL v19 = os_log_type_enabled(v11, type);
      if (backtrace_string)
      {
        if (v19)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
          __int16 v29 = 2082;
          int v30 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v11, v12, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_76:
        if (!v10) {
          return;
        }
        goto LABEL_77;
      }
      if (!v19) {
        goto LABEL_76;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      os_log_type_t v13 = "%{public}s called with null frame, no backtrace";
    }
    else
    {
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (!os_log_type_enabled(v11, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      os_log_type_t v13 = "%{public}s called with null frame, backtrace limit exceeded";
    }
    goto LABEL_75;
  }
  if (!a3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
    __int16 v10 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v25 = 0;
    if (!__nwlog_fault(v10, &type, &v25)) {
      goto LABEL_76;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v25)
      {
        uint64_t v11 = __nwlog_obj();
        os_log_type_t v12 = type;
        if (!os_log_type_enabled(v11, type)) {
          goto LABEL_76;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
        os_log_type_t v13 = "%{public}s called with null context, backtrace limit exceeded";
        goto LABEL_75;
      }
      uint64_t v20 = (char *)__nw_create_backtrace_string();
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      BOOL v21 = os_log_type_enabled(v11, type);
      if (!v20)
      {
        if (!v21) {
          goto LABEL_76;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
        os_log_type_t v13 = "%{public}s called with null context, no backtrace";
        goto LABEL_75;
      }
      if (!v21) {
        goto LABEL_57;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      __int16 v29 = 2082;
      int v30 = v20;
      uint64_t v22 = "%{public}s called with null context, dumping backtrace:%{public}s";
      goto LABEL_56;
    }
    uint64_t v11 = __nwlog_obj();
    os_log_type_t v12 = type;
    if (!os_log_type_enabled(v11, type)) {
      goto LABEL_76;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
    os_log_type_t v13 = "%{public}s called with null context";
LABEL_75:
    _os_log_impl(&dword_1830D4000, v11, v12, v13, buf, 0xCu);
    goto LABEL_76;
  }
  if ((*((_WORD *)a1 + 102) & 4) == 0)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
    __int16 v10 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v25 = 0;
    if (!__nwlog_fault(v10, &type, &v25)) {
      goto LABEL_76;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (!os_log_type_enabled(v11, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      os_log_type_t v13 = "%{public}s called with null metadata";
      goto LABEL_75;
    }
    if (!v25)
    {
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (!os_log_type_enabled(v11, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      os_log_type_t v13 = "%{public}s called with null metadata, backtrace limit exceeded";
      goto LABEL_75;
    }
    uint64_t v20 = (char *)__nw_create_backtrace_string();
    uint64_t v11 = __nwlog_obj();
    os_log_type_t v12 = type;
    BOOL v23 = os_log_type_enabled(v11, type);
    if (!v20)
    {
      if (!v23) {
        goto LABEL_76;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      os_log_type_t v13 = "%{public}s called with null metadata, no backtrace";
      goto LABEL_75;
    }
    if (!v23) {
      goto LABEL_57;
    }
    *(_DWORD *)buf = 136446466;
    uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
    __int16 v29 = 2082;
    int v30 = v20;
    uint64_t v22 = "%{public}s called with null metadata, dumping backtrace:%{public}s";
LABEL_56:
    _os_log_impl(&dword_1830D4000, v11, v12, v22, buf, 0x16u);
    goto LABEL_57;
  }
  uint64_t v5 = *((void *)a1 + 26);
  if (!v5)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
    __int16 v10 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v25 = 0;
    if (!__nwlog_fault(v10, &type, &v25)) {
      goto LABEL_76;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (!os_log_type_enabled(v11, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      os_log_type_t v13 = "%{public}s called with null http1_connection";
      goto LABEL_75;
    }
    if (!v25)
    {
      uint64_t v11 = __nwlog_obj();
      os_log_type_t v12 = type;
      if (!os_log_type_enabled(v11, type)) {
        goto LABEL_76;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      os_log_type_t v13 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      goto LABEL_75;
    }
    uint64_t v20 = (char *)__nw_create_backtrace_string();
    uint64_t v11 = __nwlog_obj();
    os_log_type_t v12 = type;
    BOOL v24 = os_log_type_enabled(v11, type);
    if (!v20)
    {
      if (!v24) {
        goto LABEL_76;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      os_log_type_t v13 = "%{public}s called with null http1_connection, no backtrace";
      goto LABEL_75;
    }
    if (v24)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
      __int16 v29 = 2082;
      int v30 = v20;
      uint64_t v22 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
      goto LABEL_56;
    }
LABEL_57:
    free(v20);
    if (!v10) {
      return;
    }
LABEL_77:
    free(v10);
    return;
  }
  if ((*(unsigned char *)(v5 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      BOOL v14 = __nwlog_obj();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v15 = *(void *)(v5 + 488);
        int v16 = *(_DWORD *)(*(void *)(v5 + 480) + 372);
        int v17 = *(_DWORD *)(v5 + 860);
        if (v15) {
          LODWORD(v15) = *(_DWORD *)(v15 + 424);
        }
        *(_DWORD *)buf = 136448258;
        uint64_t v28 = "nw_http1_connection_inbound_frame_finalizer";
        __int16 v29 = 2082;
        int v30 = (char *)(v5 + 74);
        __int16 v31 = 2080;
        int v32 = " ";
        __int16 v33 = 1024;
        int v34 = v16;
        __int16 v35 = 1024;
        int v36 = v17;
        __int16 v37 = 1024;
        int v38 = v15;
        __int16 v39 = 2048;
        uint64_t v40 = a1;
        __int16 v41 = 1024;
        int v42 = a2;
        __int16 v43 = 2048;
        uint64_t v44 = a3;
        _os_log_impl(&dword_1830D4000, v14, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing input frame %p (success %u, context %p)", buf, 0x4Cu);
      }
    }
  }
  uint64_t v7 = *((void *)a1 + 2);
  uint64_t v8 = (void *)*((void *)a1 + 3);
  if (v7)
  {
    *(void *)(v7 + 24) = v8;
    uint64_t v8 = (void *)*((void *)a1 + 3);
  }
  else
  {
    *(void *)(v5 + 672) = v8;
  }
  *uint64_t v8 = v7;
  *((void *)a1 + 2) = 0;
  *((void *)a1 + 3) = 0;
  *((void *)a1 + 10) = 0;
  *((void *)a1 + 11) = 0;
  if (a2)
  {
    nw_frame_cache_return_frame(v5 + 696, (uint64_t)a1);
  }
  else
  {
    if ((*((_WORD *)a1 + 102) & 0x100) == 0
      || !g_channel_check_validity
      || g_channel_check_validity(a1, 0))
    {
      uint64_t v9 = (void *)*((void *)a1 + 14);
      if (v9) {
        free(v9);
      }
    }
    nw_frame_reset((uint64_t)a1, 0, 0, 0, 0);
    os_release(a1);
  }
}

void nw_protocol_http1_output_finished(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v122 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v111 = "nw_http1_get_http1_protocol";
    __int16 v71 = (char *)_os_log_send_and_compose_impl();
    v108[0] = OS_LOG_TYPE_ERROR;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v71, v108, type)) {
      goto LABEL_201;
    }
    if (v108[0] == OS_LOG_TYPE_FAULT)
    {
      int v72 = __nwlog_obj();
      os_log_type_t v73 = v108[0];
      if (!os_log_type_enabled(v72, v108[0])) {
        goto LABEL_201;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      int v74 = "%{public}s called with null protocol";
    }
    else if (type[0])
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v72 = __nwlog_obj();
      os_log_type_t v73 = v108[0];
      BOOL v78 = os_log_type_enabled(v72, v108[0]);
      if (backtrace_string)
      {
        if (v78)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v111 = "nw_http1_get_http1_protocol";
          __int16 v112 = 2082;
          *(void *)uint64_t v113 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v72, v73, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_201:
        if (!v71) {
          goto LABEL_203;
        }
LABEL_202:
        free(v71);
        goto LABEL_203;
      }
      if (!v78) {
        goto LABEL_201;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      int v74 = "%{public}s called with null protocol, no backtrace";
    }
    else
    {
      int v72 = __nwlog_obj();
      os_log_type_t v73 = v108[0];
      if (!os_log_type_enabled(v72, v108[0])) {
        goto LABEL_201;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      int v74 = "%{public}s called with null protocol, backtrace limit exceeded";
    }
    goto LABEL_200;
  }
  handle = (char *)a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v111 = "nw_http1_get_http1_protocol";
    __int16 v71 = (char *)_os_log_send_and_compose_impl();
    v108[0] = OS_LOG_TYPE_ERROR;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v71, v108, type)) {
      goto LABEL_201;
    }
    if (v108[0] != OS_LOG_TYPE_FAULT)
    {
      if (type[0] == OS_LOG_TYPE_DEFAULT)
      {
        int v72 = __nwlog_obj();
        os_log_type_t v73 = v108[0];
        if (!os_log_type_enabled(v72, v108[0])) {
          goto LABEL_201;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_http1_get_http1_protocol";
        int v74 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_200;
      }
      __int16 v79 = (char *)__nw_create_backtrace_string();
      int v72 = __nwlog_obj();
      os_log_type_t v73 = v108[0];
      BOOL v80 = os_log_type_enabled(v72, v108[0]);
      if (!v79)
      {
        if (!v80) {
          goto LABEL_201;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_http1_get_http1_protocol";
        int v74 = "%{public}s called with null handle, no backtrace";
        goto LABEL_200;
      }
      if (v80)
      {
        *(_DWORD *)buf = 136446466;
        uint64_t v111 = "nw_http1_get_http1_protocol";
        __int16 v112 = 2082;
        *(void *)uint64_t v113 = v79;
        uint64_t v81 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_164:
        _os_log_impl(&dword_1830D4000, v72, v73, v81, buf, 0x16u);
      }
LABEL_165:
      free(v79);
      if (!v71) {
        goto LABEL_203;
      }
      goto LABEL_202;
    }
    int v72 = __nwlog_obj();
    os_log_type_t v73 = v108[0];
    if (!os_log_type_enabled(v72, v108[0])) {
      goto LABEL_201;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v111 = "nw_http1_get_http1_protocol";
    int v74 = "%{public}s called with null handle";
LABEL_200:
    _os_log_impl(&dword_1830D4000, v72, v73, v74, buf, 0xCu);
    goto LABEL_201;
  }
  int v3 = *((_DWORD *)handle + 6);
  unsigned int v4 = a1->handle;
  if (v3 == 1) {
    goto LABEL_10;
  }
  if (v3 != 2)
  {
    if (v3 != 3)
    {
LABEL_203:
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      uint64_t v52 = (char *)_os_log_send_and_compose_impl();
      v108[0] = OS_LOG_TYPE_ERROR;
      type[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v52, v108, type)) {
        goto LABEL_236;
      }
      if (v108[0] == OS_LOG_TYPE_FAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        __int16 v75 = gLogObj;
        os_log_type_t v76 = v108[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, v108[0])) {
          goto LABEL_236;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_protocol_http1_output_finished";
        int v55 = "%{public}s called with null http1";
        goto LABEL_233;
      }
      if (type[0] == OS_LOG_TYPE_DEFAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        __int16 v75 = gLogObj;
        os_log_type_t v76 = v108[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, v108[0])) {
          goto LABEL_236;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_protocol_http1_output_finished";
        int v55 = "%{public}s called with null http1, backtrace limit exceeded";
        goto LABEL_233;
      }
      uint64_t v97 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v98 = gLogObj;
      os_log_type_t v99 = v108[0];
      BOOL v100 = os_log_type_enabled((os_log_t)gLogObj, v108[0]);
      if (v97)
      {
        if (v100)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v111 = "nw_protocol_http1_output_finished";
          __int16 v112 = 2082;
          *(void *)uint64_t v113 = v97;
          _os_log_impl(&dword_1830D4000, v98, v99, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v97);
        goto LABEL_236;
      }
      if (!v100) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      int v55 = "%{public}s called with null http1, no backtrace";
      goto LABEL_241;
    }
    uint64_t v5 = *((void *)handle + 2);
    if (v5)
    {
      unsigned int v4 = (void *)(v5 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v111 = "nw_http1_get_http1_protocol";
    __int16 v71 = (char *)_os_log_send_and_compose_impl();
    v108[0] = OS_LOG_TYPE_ERROR;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v71, v108, type)) {
      goto LABEL_201;
    }
    if (v108[0] == OS_LOG_TYPE_FAULT)
    {
      int v72 = __nwlog_obj();
      os_log_type_t v73 = v108[0];
      if (!os_log_type_enabled(v72, v108[0])) {
        goto LABEL_201;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      int v74 = "%{public}s called with null handle->http1_connection";
      goto LABEL_200;
    }
    if (type[0] == OS_LOG_TYPE_DEFAULT)
    {
      int v72 = __nwlog_obj();
      os_log_type_t v73 = v108[0];
      if (!os_log_type_enabled(v72, v108[0])) {
        goto LABEL_201;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      int v74 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
      goto LABEL_200;
    }
    __int16 v79 = (char *)__nw_create_backtrace_string();
    int v72 = __nwlog_obj();
    os_log_type_t v73 = v108[0];
    BOOL v89 = os_log_type_enabled(v72, v108[0]);
    if (!v79)
    {
      if (!v89) {
        goto LABEL_201;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      int v74 = "%{public}s called with null handle->http1_connection, no backtrace";
      goto LABEL_200;
    }
    if (v89)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      __int16 v112 = 2082;
      *(void *)uint64_t v113 = v79;
      uint64_t v81 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
      goto LABEL_164;
    }
    goto LABEL_165;
  }
  uint64_t v6 = *((void *)handle + 1);
  if (!v6)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v111 = "nw_http1_get_http1_protocol";
    __int16 v71 = (char *)_os_log_send_and_compose_impl();
    v108[0] = OS_LOG_TYPE_ERROR;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v71, v108, type)) {
      goto LABEL_201;
    }
    if (v108[0] == OS_LOG_TYPE_FAULT)
    {
      int v72 = __nwlog_obj();
      os_log_type_t v73 = v108[0];
      if (!os_log_type_enabled(v72, v108[0])) {
        goto LABEL_201;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      int v74 = "%{public}s called with null handle->http1_stream";
      goto LABEL_200;
    }
    if (type[0] == OS_LOG_TYPE_DEFAULT)
    {
      int v72 = __nwlog_obj();
      os_log_type_t v73 = v108[0];
      if (!os_log_type_enabled(v72, v108[0])) {
        goto LABEL_201;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      int v74 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_200;
    }
    __int16 v79 = (char *)__nw_create_backtrace_string();
    int v72 = __nwlog_obj();
    os_log_type_t v73 = v108[0];
    BOOL v90 = os_log_type_enabled(v72, v108[0]);
    if (!v79)
    {
      if (!v90) {
        goto LABEL_201;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      int v74 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_200;
    }
    if (v90)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v111 = "nw_http1_get_http1_protocol";
      __int16 v112 = 2082;
      *(void *)uint64_t v113 = v79;
      uint64_t v81 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_164;
    }
    goto LABEL_165;
  }
  unsigned int v4 = (void *)(v6 + 248);
LABEL_10:
  if (!*v4) {
    goto LABEL_203;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v111 = "nw_protocol_http1_output_finished";
    uint64_t v52 = (char *)_os_log_send_and_compose_impl();
    v108[0] = OS_LOG_TYPE_ERROR;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v52, v108, type)) {
      goto LABEL_236;
    }
    if (v108[0] == OS_LOG_TYPE_FAULT)
    {
      __int16 v75 = __nwlog_obj();
      os_log_type_t v76 = v108[0];
      if (!os_log_type_enabled(v75, v108[0])) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      int v55 = "%{public}s called with null other_protocol";
      goto LABEL_233;
    }
    if (type[0] == OS_LOG_TYPE_DEFAULT)
    {
      __int16 v75 = __nwlog_obj();
      os_log_type_t v76 = v108[0];
      if (!os_log_type_enabled(v75, v108[0])) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      int v55 = "%{public}s called with null other_protocol, backtrace limit exceeded";
      goto LABEL_233;
    }
    BOOL v58 = (char *)__nw_create_backtrace_string();
    __int16 v75 = __nwlog_obj();
    os_log_type_t v76 = v108[0];
    BOOL v83 = os_log_type_enabled(v75, v108[0]);
    if (!v58)
    {
      if (!v83) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      int v55 = "%{public}s called with null other_protocol, no backtrace";
      goto LABEL_233;
    }
    if (!v83) {
      goto LABEL_82;
    }
    *(_DWORD *)buf = 136446466;
    uint64_t v111 = "nw_protocol_http1_output_finished";
    __int16 v112 = 2082;
    *(void *)uint64_t v113 = v58;
    BOOL v60 = "%{public}s called with null other_protocol, dumping backtrace:%{public}s";
LABEL_149:
    char v61 = v75;
    os_log_type_t v62 = v76;
    uint32_t v63 = 22;
LABEL_81:
    _os_log_impl(&dword_1830D4000, v61, v62, v60, buf, v63);
    goto LABEL_82;
  }
  if (v3 != 2)
  {
    if (v3 != 3)
    {
LABEL_221:
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      uint64_t v52 = (char *)_os_log_send_and_compose_impl();
      v108[0] = OS_LOG_TYPE_ERROR;
      type[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v52, v108, type)) {
        goto LABEL_236;
      }
      if (v108[0] == OS_LOG_TYPE_FAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        __int16 v75 = gLogObj;
        os_log_type_t v76 = v108[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, v108[0])) {
          goto LABEL_236;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_protocol_http1_output_finished";
        int v55 = "%{public}s called with null http1_stream";
        goto LABEL_233;
      }
      if (type[0] == OS_LOG_TYPE_DEFAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        __int16 v75 = gLogObj;
        os_log_type_t v76 = v108[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, v108[0])) {
          goto LABEL_236;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_protocol_http1_output_finished";
        int v55 = "%{public}s called with null http1_stream, backtrace limit exceeded";
        goto LABEL_233;
      }
      uint64_t v101 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v98 = gLogObj;
      os_log_type_t v99 = v108[0];
      BOOL v102 = os_log_type_enabled((os_log_t)gLogObj, v108[0]);
      if (v101)
      {
        if (v102)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v111 = "nw_protocol_http1_output_finished";
          __int16 v112 = 2082;
          *(void *)uint64_t v113 = v101;
          _os_log_impl(&dword_1830D4000, v98, v99, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v101);
        if (!v52) {
          return;
        }
LABEL_237:
        free(v52);
        return;
      }
      if (!v102) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      int v55 = "%{public}s called with null http1_stream, no backtrace";
LABEL_241:
      uint64_t v68 = v98;
      os_log_type_t v69 = v99;
      goto LABEL_234;
    }
    uint64_t v7 = *((void *)handle + 2);
    if (v7)
    {
      uint64_t v8 = (uint64_t *)(v7 + 488);
      goto LABEL_17;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v111 = "nw_http1_get_stream_for_protocol";
    uint64_t v84 = (char *)_os_log_send_and_compose_impl();
    v108[0] = OS_LOG_TYPE_ERROR;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v84, v108, type))
    {
      if (v108[0] == OS_LOG_TYPE_FAULT)
      {
        BOOL v85 = __nwlog_obj();
        os_log_type_t v86 = v108[0];
        if (!os_log_type_enabled(v85, v108[0])) {
          goto LABEL_219;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_http1_get_stream_for_protocol";
        uint64_t v87 = "%{public}s called with null handle->http1_connection";
        goto LABEL_218;
      }
      if (type[0] == OS_LOG_TYPE_DEFAULT)
      {
        BOOL v85 = __nwlog_obj();
        os_log_type_t v86 = v108[0];
        if (!os_log_type_enabled(v85, v108[0])) {
          goto LABEL_219;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_http1_get_stream_for_protocol";
        uint64_t v87 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_218;
      }
      int v91 = (char *)__nw_create_backtrace_string();
      BOOL v85 = __nwlog_obj();
      os_log_type_t v86 = v108[0];
      BOOL v92 = os_log_type_enabled(v85, v108[0]);
      if (v91)
      {
        if (v92)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v111 = "nw_http1_get_stream_for_protocol";
          __int16 v112 = 2082;
          *(void *)uint64_t v113 = v91;
          _os_log_impl(&dword_1830D4000, v85, v86, "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v91);
        goto LABEL_219;
      }
      if (v92)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_http1_get_stream_for_protocol";
        uint64_t v87 = "%{public}s called with null handle->http1_connection, no backtrace";
LABEL_218:
        _os_log_impl(&dword_1830D4000, v85, v86, v87, buf, 0xCu);
      }
    }
LABEL_219:
    if (v84) {
      free(v84);
    }
    goto LABEL_221;
  }
  uint64_t v8 = (uint64_t *)(handle + 8);
LABEL_17:
  uint64_t v9 = *v8;
  if (!*v8) {
    goto LABEL_221;
  }
  if (!*(void *)(v9 + 248))
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v111 = "nw_protocol_http1_output_finished";
    uint64_t v52 = (char *)_os_log_send_and_compose_impl();
    v108[0] = OS_LOG_TYPE_ERROR;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v52, v108, type)) {
      goto LABEL_236;
    }
    if (v108[0] == OS_LOG_TYPE_FAULT)
    {
      __int16 v75 = __nwlog_obj();
      os_log_type_t v76 = v108[0];
      if (!os_log_type_enabled(v75, v108[0])) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      int v55 = "%{public}s called with null http1_stream->protocol_http1";
      goto LABEL_233;
    }
    if (type[0] == OS_LOG_TYPE_DEFAULT)
    {
      __int16 v75 = __nwlog_obj();
      os_log_type_t v76 = v108[0];
      if (!os_log_type_enabled(v75, v108[0])) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      int v55 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
      goto LABEL_233;
    }
    BOOL v58 = (char *)__nw_create_backtrace_string();
    __int16 v75 = __nwlog_obj();
    os_log_type_t v76 = v108[0];
    BOOL v88 = os_log_type_enabled(v75, v108[0]);
    if (!v58)
    {
      if (!v88) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      int v55 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
      goto LABEL_233;
    }
    if (!v88) {
      goto LABEL_82;
    }
    *(_DWORD *)buf = 136446466;
    uint64_t v111 = "nw_protocol_http1_output_finished";
    __int16 v112 = 2082;
    *(void *)uint64_t v113 = v58;
    BOOL v60 = "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s";
    goto LABEL_149;
  }
  uint64_t v10 = *(void *)(v9 + 256);
  if (!v10 || (*(_WORD *)(v9 + 428) & 0x100) == 0)
  {
    if ((*(unsigned char *)(v9 + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v11 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v12 = *(void *)(v9 + 256);
        int v13 = *(_DWORD *)(*(void *)(v9 + 248) + 372);
        if (v12) {
          int v14 = *(_DWORD *)(v12 + 860);
        }
        else {
          int v14 = 0;
        }
        int v20 = *(_DWORD *)(v9 + 424);
        int v21 = HIBYTE(*(unsigned __int16 *)(v9 + 428)) & 1;
        *(_DWORD *)buf = 136448002;
        uint64_t v111 = "nw_protocol_http1_output_finished";
        __int16 v112 = 2082;
        *(void *)uint64_t v113 = v9 + 74;
        *(_WORD *)&v113[8] = 2080;
        *(void *)&v113[10] = " ";
        __int16 v114 = 1024;
        int v115 = v13;
        __int16 v116 = 1024;
        int v117 = v14;
        __int16 v118 = 1024;
        int v119 = v20;
        __int16 v120 = 1024;
        *(_DWORD *)int v121 = v21;
        *(_WORD *)&v121[4] = 2048;
        *(void *)&v121[6] = v12;
        uint64_t v22 = "%{public}s %{public}s%s<i%u:c%u:s%u> dropping output_finished, chunked: %u, current_connection: %p";
        BOOL v23 = v11;
        uint32_t v24 = 66;
LABEL_34:
        _os_log_impl(&dword_1830D4000, v23, OS_LOG_TYPE_DEBUG, v22, buf, v24);
        return;
      }
    }
    return;
  }
  if (*(void *)(v10 + 648))
  {
    if ((*(unsigned char *)(v10 + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v15 = gLogObj;
      BOOL v16 = os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG);
      uint64_t v10 = *(void *)(v9 + 256);
      if (v16)
      {
        uint64_t v17 = *(void *)(v10 + 488);
        int v18 = *(_DWORD *)(*(void *)(v10 + 480) + 372);
        int v19 = *(_DWORD *)(v10 + 860);
        if (v17) {
          LODWORD(v17) = *(_DWORD *)(v17 + 424);
        }
        *(_DWORD *)buf = 136447490;
        uint64_t v111 = "nw_protocol_http1_output_finished";
        __int16 v112 = 2082;
        *(void *)uint64_t v113 = v10 + 74;
        *(_WORD *)&v113[8] = 2080;
        *(void *)&v113[10] = " ";
        __int16 v114 = 1024;
        int v115 = v18;
        __int16 v116 = 1024;
        int v117 = v19;
        __int16 v118 = 1024;
        int v119 = v17;
        _os_log_impl(&dword_1830D4000, v15, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> have pending output frames, deferring final chunk", buf, 0x32u);
        uint64_t v10 = *(void *)(v9 + 256);
      }
    }
    *(_WORD *)(v10 + 872) |= 0x8000u;
    return;
  }
  if ((*(_WORD *)(v9 + 428) & 0x400) != 0)
  {
    if ((*(unsigned char *)(v9 + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v29 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v30 = *(void *)(v9 + 256);
        int v31 = *(_DWORD *)(*(void *)(v9 + 248) + 372);
        if (v30) {
          LODWORD(v30) = *(_DWORD *)(v30 + 860);
        }
        int v32 = *(_DWORD *)(v9 + 424);
        *(_DWORD *)buf = 136447490;
        uint64_t v111 = "nw_protocol_http1_output_finished";
        __int16 v112 = 2082;
        *(void *)uint64_t v113 = v9 + 74;
        *(_WORD *)&v113[8] = 2080;
        *(void *)&v113[10] = " ";
        __int16 v114 = 1024;
        int v115 = v31;
        __int16 v116 = 1024;
        int v117 = v30;
        __int16 v118 = 1024;
        int v119 = v32;
        uint64_t v22 = "%{public}s %{public}s%s<i%u:c%u:s%u> dropping output_finished, outbound message already complete";
        BOOL v23 = v29;
        uint32_t v24 = 50;
        goto LABEL_34;
      }
    }
    return;
  }
  if ((*(unsigned char *)(v9 + 158) & 1) == 0)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    char v25 = gLogObj;
    BOOL v26 = os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG);
    uint64_t v10 = *(void *)(v9 + 256);
    if (v26)
    {
      int v27 = *(_DWORD *)(*(void *)(v9 + 248) + 372);
      if (v10) {
        int v28 = *(_DWORD *)(v10 + 860);
      }
      else {
        int v28 = 0;
      }
      int v33 = *(_DWORD *)(v9 + 424);
      *(_DWORD *)buf = 136447490;
      uint64_t v111 = "nw_protocol_http1_output_finished";
      __int16 v112 = 2082;
      *(void *)uint64_t v113 = v9 + 74;
      *(_WORD *)&v113[8] = 2080;
      *(void *)&v113[10] = " ";
      __int16 v114 = 1024;
      int v115 = v27;
      __int16 v116 = 1024;
      int v117 = v28;
      __int16 v118 = 1024;
      int v119 = v33;
      _os_log_impl(&dword_1830D4000, v25, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Sending final chunk immediately, no pending output", buf, 0x32u);
      uint64_t v10 = *(void *)(v9 + 256);
    }
    if (!v10)
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_connection_send_final_chunk";
      uint64_t v52 = (char *)_os_log_send_and_compose_impl();
      v108[0] = OS_LOG_TYPE_ERROR;
      type[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v52, v108, type)) {
        goto LABEL_236;
      }
      if (v108[0] == OS_LOG_TYPE_FAULT)
      {
        __int16 v75 = __nwlog_obj();
        os_log_type_t v76 = v108[0];
        if (!os_log_type_enabled(v75, v108[0])) {
          goto LABEL_236;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_http1_connection_send_final_chunk";
        int v55 = "%{public}s called with null http1_connection";
      }
      else
      {
        if (type[0])
        {
          BOOL v58 = (char *)__nw_create_backtrace_string();
          __int16 v75 = __nwlog_obj();
          os_log_type_t v76 = v108[0];
          BOOL v104 = os_log_type_enabled(v75, v108[0]);
          if (v58)
          {
            if (v104)
            {
              *(_DWORD *)buf = 136446466;
              uint64_t v111 = "nw_http1_connection_send_final_chunk";
              __int16 v112 = 2082;
              *(void *)uint64_t v113 = v58;
              BOOL v60 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
              goto LABEL_149;
            }
            goto LABEL_82;
          }
          if (v104)
          {
            *(_DWORD *)buf = 136446210;
            uint64_t v111 = "nw_http1_connection_send_final_chunk";
            int v55 = "%{public}s called with null http1_connection, no backtrace";
            goto LABEL_233;
          }
          goto LABEL_236;
        }
        __int16 v75 = __nwlog_obj();
        os_log_type_t v76 = v108[0];
        if (!os_log_type_enabled(v75, v108[0])) {
          goto LABEL_236;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_http1_connection_send_final_chunk";
        int v55 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      }
LABEL_233:
      uint64_t v68 = v75;
      os_log_type_t v69 = v76;
LABEL_234:
      uint32_t v70 = 12;
      goto LABEL_235;
    }
  }
  if ((*(unsigned char *)(v10 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      uint64_t v93 = __nwlog_obj();
      if (os_log_type_enabled(v93, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v94 = *(void *)(v10 + 488);
        int v95 = *(_DWORD *)(*(void *)(v10 + 480) + 372);
        int v96 = *(_DWORD *)(v10 + 860);
        if (v94) {
          LODWORD(v94) = *(_DWORD *)(v94 + 424);
        }
        *(_DWORD *)buf = 136447490;
        uint64_t v111 = "nw_http1_connection_send_final_chunk";
        __int16 v112 = 2082;
        *(void *)uint64_t v113 = v10 + 74;
        *(_WORD *)&v113[8] = 2080;
        *(void *)&v113[10] = " ";
        __int16 v114 = 1024;
        int v115 = v95;
        __int16 v116 = 1024;
        int v117 = v96;
        __int16 v118 = 1024;
        int v119 = v94;
        _os_log_impl(&dword_1830D4000, v93, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> requesting new frame for final chunk", buf, 0x32u);
      }
    }
  }
  uint64_t v34 = *(void *)(v10 + 32);
  if (!v34)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v111 = "nw_http1_connection_send_final_chunk";
    uint64_t v52 = (char *)_os_log_send_and_compose_impl();
    v108[0] = OS_LOG_TYPE_ERROR;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v52, v108, type)) {
      goto LABEL_236;
    }
    if (v108[0] == OS_LOG_TYPE_FAULT)
    {
      __int16 v75 = __nwlog_obj();
      os_log_type_t v76 = v108[0];
      if (!os_log_type_enabled(v75, v108[0])) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v111 = "nw_http1_connection_send_final_chunk";
      int v55 = "%{public}s called with null output_handler";
      goto LABEL_233;
    }
    if (type[0])
    {
      BOOL v58 = (char *)__nw_create_backtrace_string();
      __int16 v75 = __nwlog_obj();
      os_log_type_t v76 = v108[0];
      BOOL v103 = os_log_type_enabled(v75, v108[0]);
      if (v58)
      {
        if (v103)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v111 = "nw_http1_connection_send_final_chunk";
          __int16 v112 = 2082;
          *(void *)uint64_t v113 = v58;
          BOOL v60 = "%{public}s called with null output_handler, dumping backtrace:%{public}s";
          goto LABEL_149;
        }
LABEL_82:
        free(v58);
        if (!v52) {
          return;
        }
        goto LABEL_237;
      }
      if (v103)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v111 = "nw_http1_connection_send_final_chunk";
        int v55 = "%{public}s called with null output_handler, no backtrace";
        goto LABEL_233;
      }
LABEL_236:
      if (!v52) {
        return;
      }
      goto LABEL_237;
    }
    __int16 v75 = __nwlog_obj();
    os_log_type_t v76 = v108[0];
    if (!os_log_type_enabled(v75, v108[0])) {
      goto LABEL_236;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v111 = "nw_http1_connection_send_final_chunk";
    int v55 = "%{public}s called with null output_handler, backtrace limit exceeded";
    goto LABEL_233;
  }
  *(void *)int v108 = 0;
  int v109 = v108;
  int output_frames = nw_protocol_get_output_frames(v34, v10, 5, 5, 1, (uint64_t)v108);
  int v36 = output_frames;
  uint64_t v37 = *(void *)v108;
  if (*(void *)v108 && output_frames)
  {
    *(_DWORD *)os_log_type_t type = 0;
    uint64_t v38 = nw_frame_unclaimed_bytes(*(uint64_t *)v108, type);
    *(_DWORD *)uint64_t v38 = 218762544;
    *(unsigned char *)(v38 + 4) = 10;
    if (nw_frame_claim(v37, v39, 5, 0))
    {
      nw_frame_collapse(v37);
      nw_frame_unclaim(v37, v40, 5u, 0);
      if (nw_protocol_finalize_output_frames(v34, (uint64_t)v108))
      {
        *(_WORD *)(*(void *)(v10 + 488) + 428) |= 0x400u;
        *(_WORD *)(v10 + 872) |= 0x20u;
        nw_http_transaction_metadata_mark_outbound_message_end(*(void **)(*(void *)(v10 + 488) + 352));
        uint64_t v41 = *(void *)(v10 + 488);
        if (*(unsigned char *)(v41 + 168))
        {
          if (*(void *)(v41 + 160) != *(void *)(v41 + 176))
          {
            if ((*(unsigned char *)(v41 + 158) & 1) == 0)
            {
              int v42 = __nwlog_obj();
              BOOL v43 = os_log_type_enabled(v42, OS_LOG_TYPE_ERROR);
              uint64_t v41 = *(void *)(v10 + 488);
              if (v43)
              {
                uint64_t v44 = *(void *)(v41 + 256);
                if (v44) {
                  LODWORD(v44) = *(_DWORD *)(v44 + 860);
                }
                int v45 = *(_DWORD *)(*(void *)(v41 + 248) + 372);
                int v46 = *(_DWORD *)(v41 + 424);
                if (*(unsigned char *)(v41 + 168)) {
                  uint64_t v47 = *(void *)(v41 + 160);
                }
                else {
                  uint64_t v47 = -1;
                }
                uint64_t v82 = *(void *)(v41 + 176);
                *(_DWORD *)buf = 136448002;
                uint64_t v111 = "nw_http1_connection_send_final_chunk";
                __int16 v112 = 2082;
                *(void *)uint64_t v113 = v41 + 74;
                *(_WORD *)&v113[8] = 2080;
                *(void *)&v113[10] = " ";
                __int16 v114 = 1024;
                int v115 = v45;
                __int16 v116 = 1024;
                int v117 = v44;
                __int16 v118 = 1024;
                int v119 = v46;
                __int16 v120 = 2048;
                *(void *)int v121 = v47;
                *(_WORD *)&v121[8] = 2048;
                *(void *)&v121[10] = v82;
                _os_log_impl(&dword_1830D4000, v42, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> Content length header %llu does not equal body size %llu", buf, 0x46u);
                uint64_t v41 = *(void *)(v10 + 488);
              }
            }
            nw_protocol_error(*(void **)(v41 + 48), v41);
            nw_protocol_disconnected(*(void **)(*(void *)(v10 + 488) + 48), *(void *)(v10 + 488));
          }
        }
      }
      return;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446466;
    uint64_t v111 = "nw_http1_connection_send_final_chunk";
    __int16 v112 = 1024;
    *(_DWORD *)uint64_t v113 = 5;
    uint64_t v52 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v107 = OS_LOG_TYPE_ERROR;
    char v105 = 0;
    if (!__nwlog_fault(v52, &v107, &v105)) {
      goto LABEL_236;
    }
    if (v107 == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v53 = __nwlog_obj();
      os_log_type_t v54 = v107;
      if (!os_log_type_enabled(v53, v107)) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v111 = "nw_http1_connection_send_final_chunk";
      __int16 v112 = 1024;
      *(_DWORD *)uint64_t v113 = 5;
      int v55 = "%{public}s claiming frame with %u bytes failed";
LABEL_100:
      uint64_t v68 = v53;
      os_log_type_t v69 = v54;
      uint32_t v70 = 18;
LABEL_235:
      _os_log_impl(&dword_1830D4000, v68, v69, v55, buf, v70);
      goto LABEL_236;
    }
    if (!v105)
    {
      os_log_type_t v53 = __nwlog_obj();
      os_log_type_t v54 = v107;
      if (!os_log_type_enabled(v53, v107)) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v111 = "nw_http1_connection_send_final_chunk";
      __int16 v112 = 1024;
      *(_DWORD *)uint64_t v113 = 5;
      int v55 = "%{public}s claiming frame with %u bytes failed, backtrace limit exceeded";
      goto LABEL_100;
    }
    BOOL v58 = (char *)__nw_create_backtrace_string();
    os_log_type_t v53 = __nwlog_obj();
    os_log_type_t v54 = v107;
    BOOL v59 = os_log_type_enabled(v53, v107);
    if (!v58)
    {
      if (!v59) {
        goto LABEL_236;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v111 = "nw_http1_connection_send_final_chunk";
      __int16 v112 = 1024;
      *(_DWORD *)uint64_t v113 = 5;
      int v55 = "%{public}s claiming frame with %u bytes failed, no backtrace";
      goto LABEL_100;
    }
    if (!v59) {
      goto LABEL_82;
    }
    *(_DWORD *)buf = 136446722;
    uint64_t v111 = "nw_http1_connection_send_final_chunk";
    __int16 v112 = 1024;
    *(_DWORD *)uint64_t v113 = 5;
    *(_WORD *)&v113[4] = 2082;
    *(void *)&v113[6] = v58;
    BOOL v60 = "%{public}s claiming frame with %u bytes failed, dumping backtrace:%{public}s";
    char v61 = v53;
    os_log_type_t v62 = v54;
    uint32_t v63 = 28;
    goto LABEL_81;
  }
  if (output_frames)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446466;
    uint64_t v111 = "nw_http1_connection_send_final_chunk";
    __int16 v112 = 1024;
    *(_DWORD *)uint64_t v113 = v36;
    uint64_t v48 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    os_log_type_t v107 = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v48, type, &v107)) {
      goto LABEL_91;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      int v49 = __nwlog_obj();
      os_log_type_t v50 = type[0];
      if (!os_log_type_enabled(v49, type[0])) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v111 = "nw_http1_connection_send_final_chunk";
      __int16 v112 = 1024;
      *(_DWORD *)uint64_t v113 = v36;
      BOOL v51 = "%{public}s output handler reported %u frames to write, but array is empty";
    }
    else if (v107)
    {
      BOOL v56 = (char *)__nw_create_backtrace_string();
      int v49 = __nwlog_obj();
      os_log_type_t v50 = type[0];
      BOOL v57 = os_log_type_enabled(v49, type[0]);
      if (v56)
      {
        if (v57)
        {
          *(_DWORD *)buf = 136446722;
          uint64_t v111 = "nw_http1_connection_send_final_chunk";
          __int16 v112 = 1024;
          *(_DWORD *)uint64_t v113 = v36;
          *(_WORD *)&v113[4] = 2082;
          *(void *)&v113[6] = v56;
          _os_log_impl(&dword_1830D4000, v49, v50, "%{public}s output handler reported %u frames to write, but array is empty, dumping backtrace:%{public}s", buf, 0x1Cu);
        }
        free(v56);
        goto LABEL_91;
      }
      if (!v57)
      {
LABEL_91:
        if (v48) {
          free(v48);
        }
        goto LABEL_93;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v111 = "nw_http1_connection_send_final_chunk";
      __int16 v112 = 1024;
      *(_DWORD *)uint64_t v113 = v36;
      BOOL v51 = "%{public}s output handler reported %u frames to write, but array is empty, no backtrace";
    }
    else
    {
      int v49 = __nwlog_obj();
      os_log_type_t v50 = type[0];
      if (!os_log_type_enabled(v49, type[0])) {
        goto LABEL_91;
      }
      *(_DWORD *)buf = 136446466;
      uint64_t v111 = "nw_http1_connection_send_final_chunk";
      __int16 v112 = 1024;
      *(_DWORD *)uint64_t v113 = v36;
      BOOL v51 = "%{public}s output handler reported %u frames to write, but array is empty, backtrace limit exceeded";
    }
    _os_log_impl(&dword_1830D4000, v49, v50, v51, buf, 0x12u);
    goto LABEL_91;
  }
LABEL_93:
  if ((*(unsigned char *)(v10 + 158) & 1) == 0)
  {
    os_log_type_t v64 = __nwlog_obj();
    if (os_log_type_enabled(v64, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v65 = *(void *)(v10 + 488);
      int v66 = *(_DWORD *)(*(void *)(v10 + 480) + 372);
      int v67 = *(_DWORD *)(v10 + 860);
      if (v65) {
        LODWORD(v65) = *(_DWORD *)(v65 + 424);
      }
      *(_DWORD *)buf = 136447746;
      uint64_t v111 = "nw_http1_connection_send_final_chunk";
      __int16 v112 = 2082;
      *(void *)uint64_t v113 = v10 + 74;
      *(_WORD *)&v113[8] = 2080;
      *(void *)&v113[10] = " ";
      __int16 v114 = 1024;
      int v115 = v66;
      __int16 v116 = 1024;
      int v117 = v67;
      __int16 v118 = 1024;
      int v119 = v65;
      __int16 v120 = 1024;
      *(_DWORD *)int v121 = 5;
      uint64_t v22 = "%{public}s %{public}s%s<i%u:c%u:s%u> output handler refused frame request for frames of length %u";
      BOOL v23 = v64;
      uint32_t v24 = 56;
      goto LABEL_34;
    }
  }
}

void nw_protocol_http1_input_finished(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v269 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    os_log_type_t v153 = (char *)_os_log_send_and_compose_impl();
    v268[0] = 16;
    v260[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v153, v268, v260)) {
      goto LABEL_398;
    }
    if (v268[0] != 17)
    {
      if (v260[0] == OS_LOG_TYPE_DEFAULT)
      {
        __int16 v154 = __nwlog_obj();
        os_log_type_t v155 = v268[0];
        if (!os_log_type_enabled(v154, (os_log_type_t)v268[0])) {
          goto LABEL_398;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v156 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_397;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      __int16 v154 = __nwlog_obj();
      os_log_type_t v155 = v268[0];
      BOOL v162 = os_log_type_enabled(v154, (os_log_type_t)v268[0]);
      if (!backtrace_string)
      {
        if (!v162) {
          goto LABEL_398;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v156 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_397;
      }
      if (v162)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = backtrace_string;
        _os_log_impl(&dword_1830D4000, v154, v155, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_398;
    }
    __int16 v154 = __nwlog_obj();
    os_log_type_t v155 = v268[0];
    if (!os_log_type_enabled(v154, (os_log_type_t)v268[0])) {
      goto LABEL_398;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v156 = "%{public}s called with null protocol";
    goto LABEL_397;
  }
  handle = (char *)a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    os_log_type_t v153 = (char *)_os_log_send_and_compose_impl();
    v268[0] = 16;
    v260[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v153, v268, v260)) {
      goto LABEL_398;
    }
    if (v268[0] != 17)
    {
      if (v260[0] == OS_LOG_TYPE_DEFAULT)
      {
        __int16 v154 = __nwlog_obj();
        os_log_type_t v155 = v268[0];
        if (!os_log_type_enabled(v154, (os_log_type_t)v268[0])) {
          goto LABEL_398;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v156 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_397;
      }
      v163 = (char *)__nw_create_backtrace_string();
      __int16 v154 = __nwlog_obj();
      os_log_type_t v155 = v268[0];
      BOOL v164 = os_log_type_enabled(v154, (os_log_type_t)v268[0]);
      if (!v163)
      {
        if (!v164) {
          goto LABEL_398;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v156 = "%{public}s called with null handle, no backtrace";
        goto LABEL_397;
      }
      if (!v164) {
        goto LABEL_272;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v163;
      int v165 = "%{public}s called with null handle, dumping backtrace:%{public}s";
      goto LABEL_271;
    }
    __int16 v154 = __nwlog_obj();
    os_log_type_t v155 = v268[0];
    if (!os_log_type_enabled(v154, (os_log_type_t)v268[0])) {
      goto LABEL_398;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v156 = "%{public}s called with null handle";
LABEL_397:
    _os_log_impl(&dword_1830D4000, v154, v155, v156, buf, 0xCu);
    goto LABEL_398;
  }
  int v3 = *((_DWORD *)handle + 6);
  unsigned int v4 = a1->handle;
  if (v3 == 1) {
    goto LABEL_10;
  }
  if (v3 != 2)
  {
    if (v3 != 3) {
      goto LABEL_400;
    }
    uint64_t v5 = *((void *)handle + 2);
    if (v5)
    {
      unsigned int v4 = (void *)(v5 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    os_log_type_t v153 = (char *)_os_log_send_and_compose_impl();
    v268[0] = 16;
    v260[0] = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v153, v268, v260))
    {
      if (v268[0] == 17)
      {
        __int16 v154 = __nwlog_obj();
        os_log_type_t v155 = v268[0];
        if (!os_log_type_enabled(v154, (os_log_type_t)v268[0])) {
          goto LABEL_398;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v156 = "%{public}s called with null handle->http1_connection";
        goto LABEL_397;
      }
      if (v260[0] == OS_LOG_TYPE_DEFAULT)
      {
        __int16 v154 = __nwlog_obj();
        os_log_type_t v155 = v268[0];
        if (!os_log_type_enabled(v154, (os_log_type_t)v268[0])) {
          goto LABEL_398;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v156 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_397;
      }
      v163 = (char *)__nw_create_backtrace_string();
      __int16 v154 = __nwlog_obj();
      os_log_type_t v155 = v268[0];
      BOOL v194 = os_log_type_enabled(v154, (os_log_type_t)v268[0]);
      if (!v163)
      {
        if (!v194) {
          goto LABEL_398;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v156 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_397;
      }
      if (v194)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v163;
        int v165 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
        goto LABEL_271;
      }
LABEL_272:
      free(v163);
      if (!v153)
      {
LABEL_400:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
        os_log_type_t v157 = (char *)_os_log_send_and_compose_impl();
        v268[0] = 16;
        v260[0] = OS_LOG_TYPE_DEFAULT;
        if (!__nwlog_fault(v157, v268, v260)) {
          goto LABEL_432;
        }
        if (v268[0] == 17)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          BOOL v158 = gLogObj;
          os_log_type_t v159 = v268[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v268[0])) {
            goto LABEL_432;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
          int v160 = "%{public}s called with null http1";
        }
        else
        {
          if (v260[0])
          {
            int v214 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            int v215 = gLogObj;
            os_log_type_t v216 = v268[0];
            BOOL v217 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v268[0]);
            if (!v214)
            {
              if (!v217) {
                goto LABEL_432;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
              int v160 = "%{public}s called with null http1, no backtrace";
              goto LABEL_437;
            }
            if (v217)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v214;
              _os_log_impl(&dword_1830D4000, v215, v216, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v214);
LABEL_432:
            if (!v157) {
              return;
            }
            goto LABEL_433;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          BOOL v158 = gLogObj;
          os_log_type_t v159 = v268[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v268[0])) {
            goto LABEL_432;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
          int v160 = "%{public}s called with null http1, backtrace limit exceeded";
        }
LABEL_430:
        BOOL v220 = v158;
        os_log_type_t v221 = v159;
LABEL_431:
        _os_log_impl(&dword_1830D4000, v220, v221, v160, buf, 0xCu);
        goto LABEL_432;
      }
LABEL_399:
      free(v153);
      goto LABEL_400;
    }
LABEL_398:
    if (!v153) {
      goto LABEL_400;
    }
    goto LABEL_399;
  }
  uint64_t v6 = *((void *)handle + 1);
  if (!v6)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    os_log_type_t v153 = (char *)_os_log_send_and_compose_impl();
    v268[0] = 16;
    v260[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v153, v268, v260)) {
      goto LABEL_398;
    }
    if (v268[0] == 17)
    {
      __int16 v154 = __nwlog_obj();
      os_log_type_t v155 = v268[0];
      if (!os_log_type_enabled(v154, (os_log_type_t)v268[0])) {
        goto LABEL_398;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v156 = "%{public}s called with null handle->http1_stream";
      goto LABEL_397;
    }
    if (v260[0] == OS_LOG_TYPE_DEFAULT)
    {
      __int16 v154 = __nwlog_obj();
      os_log_type_t v155 = v268[0];
      if (!os_log_type_enabled(v154, (os_log_type_t)v268[0])) {
        goto LABEL_398;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v156 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_397;
    }
    v163 = (char *)__nw_create_backtrace_string();
    __int16 v154 = __nwlog_obj();
    os_log_type_t v155 = v268[0];
    BOOL v193 = os_log_type_enabled(v154, (os_log_type_t)v268[0]);
    if (!v163)
    {
      if (!v193) {
        goto LABEL_398;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v156 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_397;
    }
    if (!v193) {
      goto LABEL_272;
    }
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v163;
    int v165 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
LABEL_271:
    _os_log_impl(&dword_1830D4000, v154, v155, v165, buf, 0x16u);
    goto LABEL_272;
  }
  unsigned int v4 = (void *)(v6 + 248);
LABEL_10:
  if (!*v4) {
    goto LABEL_400;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
    os_log_type_t v157 = (char *)_os_log_send_and_compose_impl();
    v268[0] = 16;
    v260[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v157, v268, v260)) {
      goto LABEL_432;
    }
    if (v268[0] == 17)
    {
      BOOL v158 = __nwlog_obj();
      os_log_type_t v159 = v268[0];
      if (!os_log_type_enabled(v158, (os_log_type_t)v268[0])) {
        goto LABEL_432;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
      int v160 = "%{public}s called with null other_protocol";
    }
    else if (v260[0])
    {
      v167 = (char *)__nw_create_backtrace_string();
      BOOL v158 = __nwlog_obj();
      os_log_type_t v159 = v268[0];
      BOOL v168 = os_log_type_enabled(v158, (os_log_type_t)v268[0]);
      if (v167)
      {
        if (v168)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v167;
          _os_log_impl(&dword_1830D4000, v158, v159, "%{public}s called with null other_protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v167);
        if (!v157) {
          return;
        }
LABEL_433:
        free(v157);
        return;
      }
      if (!v168) {
        goto LABEL_432;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
      int v160 = "%{public}s called with null other_protocol, no backtrace";
    }
    else
    {
      BOOL v158 = __nwlog_obj();
      os_log_type_t v159 = v268[0];
      if (!os_log_type_enabled(v158, (os_log_type_t)v268[0])) {
        goto LABEL_432;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
      int v160 = "%{public}s called with null other_protocol, backtrace limit exceeded";
    }
    goto LABEL_430;
  }
  if (v3 == 2)
  {
    uint64_t v8 = *((void *)handle + 1);
    if (v8)
    {
      uint64_t v7 = (uint64_t *)(v8 + 256);
      goto LABEL_17;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
    BOOL v185 = (char *)_os_log_send_and_compose_impl();
    v268[0] = 16;
    v260[0] = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v185, v268, v260))
    {
      if (v268[0] == 17)
      {
        v186 = __nwlog_obj();
        os_log_type_t v187 = v268[0];
        if (!os_log_type_enabled(v186, (os_log_type_t)v268[0])) {
          goto LABEL_416;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
        int v188 = "%{public}s called with null handle->http1_stream";
        goto LABEL_415;
      }
      if (v260[0] == OS_LOG_TYPE_DEFAULT)
      {
        v186 = __nwlog_obj();
        os_log_type_t v187 = v268[0];
        if (!os_log_type_enabled(v186, (os_log_type_t)v268[0])) {
          goto LABEL_416;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
        int v188 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
        goto LABEL_415;
      }
      BOOL v196 = (char *)__nw_create_backtrace_string();
      v186 = __nwlog_obj();
      os_log_type_t v187 = v268[0];
      BOOL v197 = os_log_type_enabled(v186, (os_log_type_t)v268[0]);
      if (v196)
      {
        if (v197)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v196;
          _os_log_impl(&dword_1830D4000, v186, v187, "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v196);
        goto LABEL_416;
      }
      if (v197)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
        int v188 = "%{public}s called with null handle->http1_stream, no backtrace";
LABEL_415:
        _os_log_impl(&dword_1830D4000, v186, v187, v188, buf, 0xCu);
      }
    }
LABEL_416:
    if (v185) {
      free(v185);
    }
LABEL_418:
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
    os_log_type_t v157 = (char *)_os_log_send_and_compose_impl();
    v268[0] = 16;
    v260[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v157, v268, v260)) {
      goto LABEL_432;
    }
    if (v268[0] == 17)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      BOOL v158 = gLogObj;
      os_log_type_t v159 = v268[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v268[0])) {
        goto LABEL_432;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
      int v160 = "%{public}s called with null http1_connection";
      goto LABEL_430;
    }
    if (v260[0] == OS_LOG_TYPE_DEFAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      BOOL v158 = gLogObj;
      os_log_type_t v159 = v268[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v268[0])) {
        goto LABEL_432;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
      int v160 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      goto LABEL_430;
    }
    int v218 = (char *)__nw_create_backtrace_string();
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v215 = gLogObj;
    os_log_type_t v216 = v268[0];
    BOOL v219 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v268[0]);
    if (v218)
    {
      if (v219)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v218;
        _os_log_impl(&dword_1830D4000, v215, v216, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v218);
      if (!v157) {
        return;
      }
      goto LABEL_433;
    }
    if (v219)
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
      int v160 = "%{public}s called with null http1_connection, no backtrace";
LABEL_437:
      BOOL v220 = v215;
      os_log_type_t v221 = v216;
      goto LABEL_431;
    }
    goto LABEL_432;
  }
  if (v3 != 3) {
    goto LABEL_418;
  }
  uint64_t v7 = (uint64_t *)(handle + 16);
LABEL_17:
  uint64_t v9 = *v7;
  if (!*v7) {
    goto LABEL_418;
  }
  uint64_t v10 = (unsigned __int16 *)(v9 + 872);
  int v11 = *(unsigned __int16 *)(v9 + 872);
  int v12 = v11 | (*(unsigned __int8 *)(v9 + 874) << 16);
  if ((v11 & 0x2000) != 0)
  {
    if (*(unsigned char *)(v9 + 158)) {
      goto LABEL_96;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v49 = gLogObj;
    if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO)) {
      goto LABEL_96;
    }
    uint64_t v50 = *(void *)(v9 + 488);
    int v51 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
    int v52 = *(_DWORD *)(v9 + 860);
    if (v50) {
      LODWORD(v50) = *(_DWORD *)(v50 + 424);
    }
    *(_DWORD *)buf = 136447490;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_finish_input";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v9 + 74;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&unsigned char buf[24] = " ";
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v51;
    *(_WORD *)&buf[38] = 1024;
    *(_DWORD *)&buf[40] = v52;
    LOWORD(v265) = 1024;
    *(_DWORD *)((char *)&v265 + 2) = v50;
    os_log_type_t v53 = "%{public}s %{public}s%s<i%u:c%u:s%u> input already finished, returning";
LABEL_95:
    _os_log_impl(&dword_1830D4000, v49, OS_LOG_TYPE_INFO, v53, buf, 0x32u);
    goto LABEL_96;
  }
  *(unsigned char *)(v9 + 874) = BYTE2(v12);
  *uint64_t v10 = v12 | 0x2000;
  if ((v12 & 0x40000) != 0)
  {
    if (*(unsigned char *)(v9 + 158)) {
      goto LABEL_96;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v49 = gLogObj;
    if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO)) {
      goto LABEL_96;
    }
    uint64_t v54 = *(void *)(v9 + 488);
    int v55 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
    int v56 = *(_DWORD *)(v9 + 860);
    if (v54) {
      LODWORD(v54) = *(_DWORD *)(v54 + 424);
    }
    *(_DWORD *)buf = 136447490;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_finish_input";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v9 + 74;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&unsigned char buf[24] = " ";
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v55;
    *(_WORD *)&buf[38] = 1024;
    *(_DWORD *)&buf[40] = v56;
    LOWORD(v265) = 1024;
    *(_DWORD *)((char *)&v265 + 2) = v54;
    os_log_type_t v53 = "%{public}s %{public}s%s<i%u:c%u:s%u> already getting input frames, returning";
    goto LABEL_95;
  }
  int v259 = (_WORD *)(v9 + 872);
  int v13 = 0;
  *(void *)v260 = 0;
  uint64_t v261 = v260;
  do
  {
    int input_frames = nw_protocol_get_input_frames(*(void *)(v9 + 32), v9, 1, 0xFFFFFFFFLL, 0xFFFFFFFFLL, (uint64_t)v260);
    uint64_t v15 = *(_DWORD **)v260;
    if (!*(void *)v260) {
      goto LABEL_22;
    }
    if (gLogDatapath)
    {
      uint64_t v47 = __nwlog_obj();
      if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v15;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = v260;
        *(_WORD *)&buf[32] = 2048;
        *(void *)&buf[34] = v9 + 616;
        *(_WORD *)&buf[42] = 1024;
        LODWORD(v265) = 1;
        WORD2(v265) = 1024;
        *(_DWORD *)((char *)&v265 + 6) = 1;
        WORD5(v265) = 1024;
        HIDWORD(v265) = 1;
        _os_log_impl(&dword_1830D4000, v47, OS_LOG_TYPE_DEBUG, "%{public}s called: initial frame %p, source %p, destination %p, temp %u, forwards %u, append %u", buf, 0x3Cu);
      }
    }
    int v16 = 0;
    *(void *)uint64_t v268 = 0;
    *(void *)&v268[8] = v268;
    do
    {
      int v19 = (_DWORD *)*((void *)v15 + 4);
      if (!v19 && !*((void *)v15 + 5)) {
        int v19 = 0;
      }
      if (gLogDatapath)
      {
        int v21 = __nwlog_obj();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
        {
          int v22 = v15[13];
          if (v22) {
            v22 -= v15[14] + v15[15];
          }
          if (v19)
          {
            int v23 = v19[13];
            if (v23) {
              v23 -= v19[14] + v19[15];
            }
          }
          else
          {
            int v23 = 0;
          }
          *(_DWORD *)buf = 136447234;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v15;
          *(_WORD *)&buf[22] = 1024;
          *(_DWORD *)&unsigned char buf[24] = v22;
          *(_WORD *)&buf[28] = 2048;
          *(void *)&buf[30] = v19;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v23;
          _os_log_impl(&dword_1830D4000, v21, OS_LOG_TYPE_DEBUG, "%{public}s current frame: (%p, %u bytes), next frame: (%p, %u bytes)", buf, 0x2Cu);
        }
      }
      uint64_t v20 = *((void *)v15 + 4);
      uint64_t v17 = (void *)*((void *)v15 + 5);
      if (v20)
      {
        *(void *)(v20 + 40) = v17;
        uint64_t v17 = (void *)*((void *)v15 + 5);
      }
      else
      {
        uint64_t v261 = (os_log_type_t *)*((void *)v15 + 5);
      }
      void *v17 = v20;
      int v18 = *(void **)&v268[8];
      *((void *)v15 + 4) = 0;
      *((void *)v15 + 5) = v18;
      *int v18 = v15;
      *(void *)&v268[8] = v15 + 8;
      ++v16;
      uint64_t v15 = v19;
    }
    while (v19);
    if (v16)
    {
      if (gLogDatapath)
      {
        uint64_t v48 = __nwlog_obj();
        if (os_log_type_enabled(v48, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 1024;
          *(_DWORD *)&buf[14] = v16;
          _os_log_impl(&dword_1830D4000, v48, OS_LOG_TYPE_DEBUG, "%{public}s moving %u frames from temp array to destination array", buf, 0x12u);
        }
      }
      uint32_t v24 = *(_DWORD **)v268;
      int v25 = v16;
      if (!*(void *)v268) {
        goto LABEL_63;
      }
      int v25 = v16;
      do
      {
        int v27 = v24 + 8;
        int v28 = (_DWORD *)*((void *)v24 + 4);
        if (!v28 && !*((void *)v24 + 5)) {
          int v28 = 0;
        }
        if (gLogDatapath)
        {
          int v31 = __nwlog_obj();
          if (os_log_type_enabled(v31, OS_LOG_TYPE_DEBUG))
          {
            int v32 = v24[13];
            if (v32) {
              v32 -= v24[14] + v24[15];
            }
            if (v28)
            {
              int v33 = v28[13];
              if (v33) {
                v33 -= v28[14] + v28[15];
              }
            }
            else
            {
              int v33 = 0;
            }
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v24;
            *(_WORD *)&buf[22] = 1024;
            *(_DWORD *)&unsigned char buf[24] = v32;
            *(_WORD *)&buf[28] = 2048;
            *(void *)&buf[30] = v28;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v33;
            _os_log_impl(&dword_1830D4000, v31, OS_LOG_TYPE_DEBUG, "%{public}s current frame: (%p, %u bytes), next frame: (%p, %u bytes)", buf, 0x2Cu);
          }
        }
        uint64_t v29 = *((void *)v24 + 4);
        uint64_t v30 = (void *)*((void *)v24 + 5);
        if (v29)
        {
          *(void *)(v29 + 40) = v30;
          uint64_t v30 = (void *)*((void *)v24 + 5);
        }
        else
        {
          *(void *)&v268[8] = *((void *)v24 + 5);
        }
        void *v30 = v29;
        *int v27 = 0;
        *((void *)v24 + 5) = 0;
        BOOL v26 = *(void **)(v9 + 624);
        *((void *)v24 + 5) = v26;
        void *v26 = v24;
        *(void *)(v9 + 624) = v27;
        --v25;
        uint32_t v24 = v28;
      }
      while (v28);
      if (v25)
      {
LABEL_63:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v25;
        uint64_t v34 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v262 = 0;
        if (!__nwlog_fault(v34, &type, &v262)) {
          goto LABEL_77;
        }
        if (type == OS_LOG_TYPE_FAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v35 = gLogObj;
          os_log_type_t v36 = type;
          if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
            goto LABEL_77;
          }
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 1024;
          *(_DWORD *)&buf[14] = v25;
          uint64_t v37 = v35;
          os_log_type_t v38 = v36;
          uint64_t v39 = "%{public}s failed to deliver all temp frames, remaining %u frames";
        }
        else if (v262)
        {
          uint64_t v40 = (char *)__nw_create_backtrace_string();
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v41 = gLogObj;
          os_log_type_t v42 = type;
          BOOL v43 = os_log_type_enabled((os_log_t)gLogObj, type);
          if (v40)
          {
            if (v43)
            {
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
              *(_WORD *)&unsigned char buf[12] = 1024;
              *(_DWORD *)&buf[14] = v25;
              *(_WORD *)&buf[18] = 2082;
              *(void *)&buf[20] = v40;
              _os_log_impl(&dword_1830D4000, v41, v42, "%{public}s failed to deliver all temp frames, remaining %u frames, dumping backtrace:%{public}s", buf, 0x1Cu);
            }
            free(v40);
            goto LABEL_77;
          }
          if (!v43)
          {
LABEL_77:
            if (v34) {
              free(v34);
            }
            goto LABEL_21;
          }
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 1024;
          *(_DWORD *)&buf[14] = v25;
          uint64_t v37 = v41;
          os_log_type_t v38 = v42;
          uint64_t v39 = "%{public}s failed to deliver all temp frames, remaining %u frames, no backtrace";
        }
        else
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v44 = gLogObj;
          os_log_type_t v45 = type;
          if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
            goto LABEL_77;
          }
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 1024;
          *(_DWORD *)&buf[14] = v25;
          uint64_t v37 = v44;
          os_log_type_t v38 = v45;
          uint64_t v39 = "%{public}s failed to deliver all temp frames, remaining %u frames, backtrace limit exceeded";
        }
        _os_log_impl(&dword_1830D4000, v37, v38, v39, buf, 0x12u);
        goto LABEL_77;
      }
    }
LABEL_21:
    if (gLogDatapath)
    {
      int v46 = __nwlog_obj();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v16;
        *(_WORD *)&buf[18] = 2048;
        *(void *)&buf[20] = v260;
        *(_WORD *)&buf[28] = 2048;
        *(void *)&buf[30] = v9 + 616;
        _os_log_impl(&dword_1830D4000, v46, OS_LOG_TYPE_DEBUG, "%{public}s moved %u frames from %p to %p", buf, 0x26u);
      }
    }
LABEL_22:
    v13 += input_frames;
  }
  while (input_frames);
  if (gLogDatapath)
  {
    v195 = __nwlog_obj();
    if (os_log_type_enabled(v195, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_finalize_temp_frame_array";
      _os_log_impl(&dword_1830D4000, v195, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
    }
  }
  *(void *)buf = MEMORY[0x1E4F143A8];
  *(void *)&buf[8] = 0x40000000;
  *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
  *(void *)&unsigned char buf[24] = &__block_descriptor_tmp_58_40119;
  *(void *)&buf[32] = v260;
  buf[40] = 0;
  __int16 v71 = *(_DWORD **)v260;
  uint64_t v10 = (unsigned __int16 *)(v9 + 872);
  do
  {
    if (!v71) {
      break;
    }
    int v72 = (_DWORD *)*((void *)v71 + 4);
    char v73 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
    __int16 v71 = v72;
  }
  while ((v73 & 1) != 0);
  int v74 = (unsigned __int16)*v259;
  int v75 = v74 | (*(unsigned __int8 *)(v9 + 874) << 16);
  if ((v74 & 0x6000) == 0x2000 && !*(void *)(v9 + 616))
  {
    *(unsigned char *)(v9 + 874) = BYTE2(v75);
    *int v259 = v75 | 0x4000;
    if (*(void *)(v9 + 488))
    {
      if (*(_DWORD *)(v9 + 868) && llhttp_message_needs_eof(v9 + 200))
      {
        if ((v75 & 4) == 0)
        {
          unsigned int v105 = 5;
          if (*(unsigned char *)(v9 + 158)) {
            goto LABEL_117;
          }
          goto LABEL_191;
        }
LABEL_349:
        if ((*(unsigned char *)(v9 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            uint64_t v227 = __nwlog_obj();
            if (os_log_type_enabled(v227, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v228 = *(void *)(v9 + 488);
              int v229 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
              int v230 = *(_DWORD *)(v9 + 860);
              if (v228) {
                LODWORD(v228) = *(_DWORD *)(v228 + 424);
              }
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_parser_signal_eof_if_needed";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v9 + 74;
              *(_WORD *)&buf[22] = 2080;
              *(void *)&unsigned char buf[24] = " ";
              *(_WORD *)&buf[32] = 1024;
              *(_DWORD *)&buf[34] = v229;
              *(_WORD *)&buf[38] = 1024;
              *(_DWORD *)&buf[40] = v230;
              LOWORD(v265) = 1024;
              *(_DWORD *)((char *)&v265 + 2) = v228;
              _os_log_impl(&dword_1830D4000, v227, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> signaled eof and terminated message successfully", buf, 0x32u);
              uint64_t v10 = (unsigned __int16 *)(v9 + 872);
            }
          }
        }
        *((unsigned char *)v10 + 2) = (*v10 | (*((unsigned __int8 *)v10 + 2) << 16) | 0x10000u) >> 16;
        goto LABEL_117;
      }
      unsigned int v112 = llhttp_finish(v9 + 200);
      if ((*v259 & 4) != 0) {
        goto LABEL_349;
      }
      unsigned int v105 = v112;
      if (!v112) {
        goto LABEL_349;
      }
      if (v112 != 14) {
        goto LABEL_190;
      }
      uint64_t v113 = *(void *)(v9 + 488);
      if (v113)
      {
        unsigned int v105 = 14;
        if ((*v259 & 1) != 0
          && (*(_WORD *)(v113 + 428) & 1) == 0
          && !*(_DWORD *)(v9 + 848)
          && !*(_DWORD *)(v9 + 852)
          && !*(_DWORD *)(v9 + 856))
        {
          if ((*v259 & 2) != 0 && *(void *)(v9 + 800))
          {
            if (!*(void *)(v9 + 808))
            {
              int v198 = strdup("");
              if (!v198)
              {
                os_log_type_t v257 = __nwlog_obj();
                os_log_type_enabled(v257, OS_LOG_TYPE_ERROR);
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "strict_strdup";
                v258 = (void *)_os_log_send_and_compose_impl();
                if (__nwlog_abort((uint64_t)v258))
                {
                  __break(1u);
                  return;
                }
                free(v258);
              }
              *(void *)(v9 + 808) = v198;
            }
            nw_http1_on_header_value_complete(v9 + 200);
          }
          nw_http1_on_headers_complete(v9 + 200);
          nw_http1_on_message_complete(v9 + 200);
          uint64_t v10 = (unsigned __int16 *)(v9 + 872);
          goto LABEL_349;
        }
LABEL_190:
        if (*(unsigned char *)(v9 + 158)) {
          goto LABEL_117;
        }
        goto LABEL_191;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_recover_incomplete_header";
      os_log_type_t v239 = (char *)_os_log_send_and_compose_impl();
      v268[0] = 16;
      os_log_type_t type = OS_LOG_TYPE_DEFAULT;
      if (__nwlog_fault(v239, v268, &type))
      {
        if (v268[0] == 17)
        {
          BOOL v240 = __nwlog_obj();
          os_log_type_t v241 = v268[0];
          if (!os_log_type_enabled(v240, (os_log_type_t)v268[0])) {
            goto LABEL_529;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_recover_incomplete_header";
          os_log_type_t v242 = "%{public}s called with null http1_stream";
LABEL_528:
          _os_log_impl(&dword_1830D4000, v240, v241, v242, buf, 0xCu);
          goto LABEL_529;
        }
        if (type == OS_LOG_TYPE_DEFAULT)
        {
          BOOL v240 = __nwlog_obj();
          os_log_type_t v241 = v268[0];
          if (!os_log_type_enabled(v240, (os_log_type_t)v268[0])) {
            goto LABEL_529;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_recover_incomplete_header";
          os_log_type_t v242 = "%{public}s called with null http1_stream, backtrace limit exceeded";
          goto LABEL_528;
        }
        uint64_t v250 = (char *)__nw_create_backtrace_string();
        BOOL v240 = __nwlog_obj();
        os_log_type_t v241 = v268[0];
        BOOL v251 = os_log_type_enabled(v240, (os_log_type_t)v268[0]);
        if (!v250)
        {
          if (!v251) {
            goto LABEL_529;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_recover_incomplete_header";
          os_log_type_t v242 = "%{public}s called with null http1_stream, no backtrace";
          goto LABEL_528;
        }
        if (v251)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_recover_incomplete_header";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v250;
          _os_log_impl(&dword_1830D4000, v240, v241, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v250);
      }
LABEL_529:
      if (v239) {
        free(v239);
      }
      unsigned int v105 = 14;
      uint64_t v10 = (unsigned __int16 *)(v9 + 872);
      if (*(unsigned char *)(v9 + 158)) {
        goto LABEL_117;
      }
LABEL_191:
      __int16 v114 = __nwlog_obj();
      if (os_log_type_enabled(v114, OS_LOG_TYPE_ERROR))
      {
        uint64_t v115 = *(void *)(v9 + 488);
        if (v115) {
          LODWORD(v115) = *(_DWORD *)(v115 + 424);
        }
        if (v105 >= 0x24) {
          abort();
        }
        int v116 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
        int v117 = *(_DWORD *)(v9 + 860);
        __int16 v118 = off_1E52441B8[v105];
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_http1_parser_signal_eof_if_needed";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v9 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v116;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v117;
        LOWORD(v265) = 1024;
        *(_DWORD *)((char *)&v265 + 2) = v115;
        WORD3(v265) = 2080;
        *((void *)&v265 + 1) = v118;
        _os_log_impl(&dword_1830D4000, v114, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> parser eof did not terminate full message with errno: %s, deferring input error", buf, 0x3Cu);
      }
      goto LABEL_117;
    }
    if ((v75 & 0x100) != 0)
    {
      if ((*(unsigned char *)(v9 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          int v130 = __nwlog_obj();
          if (os_log_type_enabled(v130, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v131 = *(void *)(v9 + 488);
            int v132 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
            int v133 = *(_DWORD *)(v9 + 860);
            if (v131) {
              LODWORD(v131) = *(_DWORD *)(v131 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v9 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v132;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v133;
            LOWORD(v265) = 1024;
            *(_DWORD *)((char *)&v265 + 2) = v131;
            _os_log_impl(&dword_1830D4000, v130, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> already closed", buf, 0x32u);
            uint64_t v10 = (unsigned __int16 *)(v9 + 872);
          }
        }
      }
      goto LABEL_117;
    }
    *(unsigned char *)(v9 + 874) = BYTE2(v75);
    *int v259 = v75 | 0x4100;
    if ((*(unsigned char *)(v9 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        os_log_type_t v235 = __nwlog_obj();
        if (os_log_type_enabled(v235, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v236 = *(void *)(v9 + 488);
          int v237 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
          int v238 = *(_DWORD *)(v9 + 860);
          if (v236) {
            LODWORD(v236) = *(_DWORD *)(v236 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v9 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v237;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v238;
          LOWORD(v265) = 1024;
          *(_DWORD *)((char *)&v265 + 2) = v236;
          _os_log_impl(&dword_1830D4000, v235, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
          uint64_t v10 = (unsigned __int16 *)(v9 + 872);
        }
      }
    }
    uint64_t v119 = *(void *)(v9 + 480);
    if (!v119)
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
      v231 = (char *)_os_log_send_and_compose_impl();
      v268[0] = 16;
      os_log_type_t type = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v231, v268, &type)) {
        goto LABEL_539;
      }
      if (v268[0] == 17)
      {
        uint64_t v232 = __nwlog_obj();
        os_log_type_t v233 = v268[0];
        if (!os_log_type_enabled(v232, (os_log_type_t)v268[0])) {
          goto LABEL_539;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        v234 = "%{public}s called with null http1";
      }
      else if (type)
      {
        v243 = (char *)__nw_create_backtrace_string();
        uint64_t v232 = __nwlog_obj();
        os_log_type_t v233 = v268[0];
        BOOL v244 = os_log_type_enabled(v232, (os_log_type_t)v268[0]);
        if (v243)
        {
          if (v244)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v243;
            _os_log_impl(&dword_1830D4000, v232, v233, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v243);
          goto LABEL_539;
        }
        if (!v244) {
          goto LABEL_539;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        v234 = "%{public}s called with null http1, no backtrace";
      }
      else
      {
        uint64_t v232 = __nwlog_obj();
        os_log_type_t v233 = v268[0];
        if (!os_log_type_enabled(v232, (os_log_type_t)v268[0])) {
          goto LABEL_539;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        v234 = "%{public}s called with null http1, backtrace limit exceeded";
      }
      v256 = buf;
LABEL_538:
      _os_log_impl(&dword_1830D4000, v232, v233, v234, v256, 0xCu);
      goto LABEL_539;
    }
    int v120 = *v10;
    int v121 = v120 | (*((unsigned __int8 *)v10 + 2) << 16);
    if ((v120 & 0x800) != 0)
    {
      if ((*(unsigned char *)(v9 + 158) & 1) != 0
        || !gLogDatapath
        || (BOOL v146 = __nwlog_obj(), !os_log_type_enabled(v146, OS_LOG_TYPE_DEBUG)))
      {
LABEL_296:
        if (*(void *)(v9 + 488)) {
          goto LABEL_117;
        }
LABEL_297:
        uint64_t v178 = *(void *)(v9 + 784);
        if (v178)
        {
          nw_queue_set_timer_values(v178, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
        }
        else
        {
          if ((*(unsigned char *)(v9 + 158) & 1) == 0)
          {
            uint64_t v179 = __nwlog_obj();
            if (os_log_type_enabled(v179, OS_LOG_TYPE_ERROR))
            {
              uint64_t v180 = *(void *)(v9 + 488);
              int v181 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
              int v182 = *(_DWORD *)(v9 + 860);
              if (v180) {
                LODWORD(v180) = *(_DWORD *)(v180 + 424);
              }
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v9 + 74;
              *(_WORD *)&buf[22] = 2080;
              *(void *)&unsigned char buf[24] = " ";
              *(_WORD *)&buf[32] = 1024;
              *(_DWORD *)&buf[34] = v181;
              *(_WORD *)&buf[38] = 1024;
              *(_DWORD *)&buf[40] = v182;
              LOWORD(v265) = 1024;
              *(_DWORD *)((char *)&v265 + 2) = v180;
              _os_log_impl(&dword_1830D4000, v179, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
            }
          }
          uint64_t v183 = *(void *)(v9 + 608);
          v184 = *(void **)(v9 + 496);
          *(void *)buf = MEMORY[0x1E4F143A8];
          *(void *)&buf[8] = 0x40000000;
          *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
          *(void *)&unsigned char buf[24] = &unk_1E52411A0;
          *(void *)&buf[32] = v183;
          nw_queue_context_async(v184, buf);
        }
        goto LABEL_117;
      }
      uint64_t v147 = *(void *)(v9 + 488);
      int v148 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
      int v149 = *(_DWORD *)(v9 + 860);
      if (v147) {
        LODWORD(v147) = *(_DWORD *)(v147 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v9 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v148;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v149;
      LOWORD(v265) = 1024;
      *(_DWORD *)((char *)&v265 + 2) = v147;
      _os_log_impl(&dword_1830D4000, v146, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
      goto LABEL_541;
    }
    *((unsigned char *)v10 + 2) = BYTE2(v121);
    *uint64_t v10 = v121 | 0x800;
    uint64_t v122 = *(unsigned int *)(v119 + 368) + 1;
    uint64_t v123 = v122 << 31 >> 31;
    *(_DWORD *)(v119 + 368) = v122;
    if (v123 == v122 && (v123 & 0x8000000000000000) == 0)
    {
LABEL_291:
      if ((*(unsigned char *)(v9 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          uint64_t v245 = __nwlog_obj();
          if (os_log_type_enabled(v245, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v246 = *(void *)(v9 + 488);
            int v247 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
            int v248 = *(_DWORD *)(v9 + 860);
            if (v246) {
              LODWORD(v246) = *(_DWORD *)(v246 + 424);
            }
            int v249 = *(_DWORD *)(v119 + 368) + *(_DWORD *)(v119 + 364);
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v9 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v247;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v248;
            LOWORD(v265) = 1024;
            *(_DWORD *)((char *)&v265 + 2) = v246;
            WORD3(v265) = 1024;
            DWORD2(v265) = v249;
            _os_log_impl(&dword_1830D4000, v245, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
            uint64_t v10 = (unsigned __int16 *)(v9 + 872);
          }
        }
      }
      v175 = *(void **)(v9 + 496);
      if (!v175)
      {
        __nwlog_obj();
        *(_DWORD *)uint64_t v268 = 136446210;
        *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        v231 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v262 = 0;
        if (!__nwlog_fault(v231, &type, &v262)) {
          goto LABEL_539;
        }
        if (type == OS_LOG_TYPE_FAULT)
        {
          uint64_t v232 = __nwlog_obj();
          os_log_type_t v233 = type;
          if (!os_log_type_enabled(v232, type)) {
            goto LABEL_539;
          }
          *(_DWORD *)uint64_t v268 = 136446210;
          *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          v234 = "%{public}s called with null http1_connection->context";
LABEL_537:
          v256 = v268;
          goto LABEL_538;
        }
        if (!v262)
        {
          uint64_t v232 = __nwlog_obj();
          os_log_type_t v233 = type;
          if (!os_log_type_enabled(v232, type)) {
            goto LABEL_539;
          }
          *(_DWORD *)uint64_t v268 = 136446210;
          *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          v234 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
          goto LABEL_537;
        }
        int v252 = (char *)__nw_create_backtrace_string();
        uint64_t v232 = __nwlog_obj();
        os_log_type_t v233 = type;
        BOOL v253 = os_log_type_enabled(v232, type);
        if (!v252)
        {
          if (!v253) {
            goto LABEL_539;
          }
          *(_DWORD *)uint64_t v268 = 136446210;
          *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          v234 = "%{public}s called with null http1_connection->context, no backtrace";
          goto LABEL_537;
        }
        if (!v253) {
          goto LABEL_513;
        }
        *(_DWORD *)uint64_t v268 = 136446466;
        *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        *(_WORD *)&v268[12] = 2082;
        *(void *)&v268[14] = v252;
        uint64_t v254 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
        goto LABEL_512;
      }
      uint64_t v176 = *(void *)(v9 + 480);
      if (v176)
      {
        uint64_t v177 = *(void *)(v176 + 200);
        *(void *)buf = MEMORY[0x1E4F143A8];
        *(void *)&buf[8] = 0x40000000;
        *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
        *(void *)&unsigned char buf[24] = &unk_1E52411C8;
        *(void *)&buf[32] = v177;
        nw_queue_context_async(v175, buf);
        goto LABEL_296;
      }
      __nwlog_obj();
      *(_DWORD *)uint64_t v268 = 136446210;
      *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
      v231 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t type = OS_LOG_TYPE_ERROR;
      char v262 = 0;
      if (__nwlog_fault(v231, &type, &v262))
      {
        if (type == OS_LOG_TYPE_FAULT)
        {
          uint64_t v232 = __nwlog_obj();
          os_log_type_t v233 = type;
          if (!os_log_type_enabled(v232, type)) {
            goto LABEL_539;
          }
          *(_DWORD *)uint64_t v268 = 136446210;
          *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          v234 = "%{public}s called with null http1";
          goto LABEL_537;
        }
        if (!v262)
        {
          uint64_t v232 = __nwlog_obj();
          os_log_type_t v233 = type;
          if (!os_log_type_enabled(v232, type)) {
            goto LABEL_539;
          }
          *(_DWORD *)uint64_t v268 = 136446210;
          *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          v234 = "%{public}s called with null http1, backtrace limit exceeded";
          goto LABEL_537;
        }
        int v252 = (char *)__nw_create_backtrace_string();
        uint64_t v232 = __nwlog_obj();
        os_log_type_t v233 = type;
        BOOL v255 = os_log_type_enabled(v232, type);
        if (!v252)
        {
          if (!v255) {
            goto LABEL_539;
          }
          *(_DWORD *)uint64_t v268 = 136446210;
          *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          v234 = "%{public}s called with null http1, no backtrace";
          goto LABEL_537;
        }
        if (!v255) {
          goto LABEL_513;
        }
        *(_DWORD *)uint64_t v268 = 136446466;
        *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        *(_WORD *)&v268[12] = 2082;
        *(void *)&v268[14] = v252;
        uint64_t v254 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_512:
        _os_log_impl(&dword_1830D4000, v232, v233, v254, v268, 0x16u);
LABEL_513:
        free(v252);
        if (v231) {
LABEL_540:
        }
          free(v231);
LABEL_541:
        uint64_t v10 = (unsigned __int16 *)(v9 + 872);
        if (*(void *)(v9 + 488)) {
          goto LABEL_117;
        }
        goto LABEL_297;
      }
LABEL_539:
      if (!v231) {
        goto LABEL_541;
      }
      goto LABEL_540;
    }
    __nwlog_obj();
    uint64_t v124 = *(unsigned int *)(v119 + 368);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->nonresuable_connections";
    *(_WORD *)&buf[22] = 2048;
    *(void *)&unsigned char buf[24] = 1;
    *(_WORD *)&buf[32] = 2048;
    *(void *)&buf[34] = v124;
    BOOL v125 = (char *)_os_log_send_and_compose_impl();
    v268[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v125, v268, &type))
    {
      if (v268[0] == 17)
      {
        uint64_t v126 = __nwlog_obj();
        os_log_type_t v127 = v268[0];
        if (os_log_type_enabled(v126, (os_log_type_t)v268[0]))
        {
          uint64_t v128 = *(unsigned int *)(v119 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v128;
          int v129 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_287:
          _os_log_impl(&dword_1830D4000, v126, v127, v129, buf, 0x2Au);
        }
      }
      else if (type)
      {
        __int16 v150 = (char *)__nw_create_backtrace_string();
        uint64_t v126 = __nwlog_obj();
        os_log_type_t v127 = v268[0];
        BOOL v151 = os_log_type_enabled(v126, (os_log_type_t)v268[0]);
        if (v150)
        {
          if (v151)
          {
            uint64_t v152 = *(unsigned int *)(v119 + 368);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v152;
            *(_WORD *)&buf[42] = 2082;
            *(void *)&long long v265 = v150;
            _os_log_impl(&dword_1830D4000, v126, v127, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v150);
          goto LABEL_288;
        }
        if (v151)
        {
          uint64_t v174 = *(unsigned int *)(v119 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v174;
          int v129 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
          goto LABEL_287;
        }
      }
      else
      {
        uint64_t v126 = __nwlog_obj();
        os_log_type_t v127 = v268[0];
        if (os_log_type_enabled(v126, (os_log_type_t)v268[0]))
        {
          uint64_t v166 = *(unsigned int *)(v119 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v166;
          int v129 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
          goto LABEL_287;
        }
      }
    }
LABEL_288:
    if (v125) {
      free(v125);
    }
    *(_DWORD *)(v119 + 368) = -1;
    uint64_t v10 = (unsigned __int16 *)(v9 + 872);
    goto LABEL_291;
  }
LABEL_117:
  uint64_t v76 = *(void *)(v9 + 616);
  uint64_t v77 = *(void *)(v9 + 632);
  int v78 = *v10 & 0x204;
  if ((*v10 & 0x2000) != 0)
  {
    uint64_t v88 = v76 | v77;
    BOOL v89 = (v76 | v77) == 0;
    unsigned int v90 = ((*v10 | (*((unsigned __int8 *)v10 + 2) << 16)) >> 9) & 1;
    if (v78 == 4) {
      unsigned int v90 = 1;
    }
    if (v88 || !v90)
    {
      if (v78 == 4) {
        goto LABEL_159;
      }
      if (!v89) {
        goto LABEL_159;
      }
      *(_DWORD *)(v9 + 864) = 5;
      if (*(unsigned char *)(v9 + 158)) {
        goto LABEL_159;
      }
      __int16 v79 = __nwlog_obj();
      if (!os_log_type_enabled(v79, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_159;
      }
      uint64_t v98 = *(void *)(v9 + 488);
      int v99 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
      int v100 = *(_DWORD *)(v9 + 860);
      if (v98) {
        LODWORD(v98) = *(_DWORD *)(v98 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v9 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v99;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v100;
      LOWORD(v265) = 1024;
      *(_DWORD *)((char *)&v265 + 2) = v98;
      BOOL v83 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: connection error";
    }
    else
    {
      *(_DWORD *)(v9 + 864) = 4;
      if (*(unsigned char *)(v9 + 158)) {
        goto LABEL_159;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      __int16 v79 = gLogObj;
      if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_159;
      }
      uint64_t v91 = *(void *)(v9 + 488);
      int v92 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
      int v93 = *(_DWORD *)(v9 + 860);
      if (v91) {
        LODWORD(v91) = *(_DWORD *)(v91 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v9 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v92;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v93;
      LOWORD(v265) = 1024;
      *(_DWORD *)((char *)&v265 + 2) = v91;
      BOOL v83 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: connection complete";
    }
LABEL_158:
    _os_log_impl(&dword_1830D4000, v79, OS_LOG_TYPE_DEBUG, v83, buf, 0x32u);
    goto LABEL_159;
  }
  if (v78 != 4)
  {
    if (*(unsigned char *)(v9 + 158)) {
      goto LABEL_159;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    __int16 v79 = gLogObj;
    if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_159;
    }
    uint64_t v101 = *(void *)(v9 + 488);
    int v102 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
    int v103 = *(_DWORD *)(v9 + 860);
    if (v101) {
      LODWORD(v101) = *(_DWORD *)(v101 + 424);
    }
    *(_DWORD *)buf = 136447490;
    *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v9 + 74;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&unsigned char buf[24] = " ";
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v102;
    *(_WORD *)&buf[38] = 1024;
    *(_DWORD *)&buf[40] = v103;
    LOWORD(v265) = 1024;
    *(_DWORD *)((char *)&v265 + 2) = v101;
    BOOL v83 = "%{public}s %{public}s%s<i%u:c%u:s%u> no change to http1 connection state";
    goto LABEL_158;
  }
  if (v76 | v77)
  {
    if (!v76) {
      goto LABEL_159;
    }
    if (v77) {
      goto LABEL_159;
    }
    *(_DWORD *)(v9 + 864) = 3;
    if (*(unsigned char *)(v9 + 158)) {
      goto LABEL_159;
    }
    __int16 v79 = __nwlog_obj();
    if (!os_log_type_enabled(v79, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_159;
    }
    uint64_t v106 = *(void *)(v9 + 488);
    int v107 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
    int v108 = *(_DWORD *)(v9 + 860);
    if (v106) {
      LODWORD(v106) = *(_DWORD *)(v106 + 424);
    }
    *(_DWORD *)buf = 136447490;
    *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v9 + 74;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&unsigned char buf[24] = " ";
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v107;
    *(_WORD *)&buf[38] = 1024;
    *(_DWORD *)&buf[40] = v108;
    LOWORD(v265) = 1024;
    *(_DWORD *)((char *)&v265 + 2) = v106;
    BOOL v83 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: stream pending";
    goto LABEL_158;
  }
  *(_DWORD *)(v9 + 864) = 2;
  if ((*(unsigned char *)(v9 + 158) & 1) == 0)
  {
    __int16 v79 = __nwlog_obj();
    if (os_log_type_enabled(v79, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v80 = *(void *)(v9 + 488);
      int v81 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
      int v82 = *(_DWORD *)(v9 + 860);
      if (v80) {
        LODWORD(v80) = *(_DWORD *)(v80 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v9 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v81;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v82;
      LOWORD(v265) = 1024;
      *(_DWORD *)((char *)&v265 + 2) = v80;
      BOOL v83 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: stream complete";
      goto LABEL_158;
    }
  }
LABEL_159:
  if (*(_DWORD *)(v9 + 864) == 1)
  {
    if (v13)
    {
      uint64_t v104 = *(void *)(v9 + 488);
      if (v104) {
        nw_protocol_input_available(*(void **)(v104 + 48), v104);
      }
    }
  }
LABEL_96:
  uint64_t v57 = *(void *)(v9 + 488);
  if (v57)
  {
    if (*(unsigned char *)(v9 + 158) & 1 | (gLogDatapath == 0)) {
      goto LABEL_98;
    }
    os_log_type_t v169 = __nwlog_obj();
    BOOL v170 = os_log_type_enabled(v169, OS_LOG_TYPE_DEBUG);
    uint64_t v57 = *(void *)(v9 + 488);
    if (v170)
    {
      int v171 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
      int v172 = *(_DWORD *)(v9 + 860);
      if (v57) {
        int v173 = *(_DWORD *)(v57 + 424);
      }
      else {
        int v173 = 0;
      }
      *(_DWORD *)buf = 136448002;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v9 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v171;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v172;
      LOWORD(v265) = 1024;
      *(_DWORD *)((char *)&v265 + 2) = v173;
      WORD3(v265) = 2048;
      *((void *)&v265 + 1) = v9;
      __int16 v266 = 2048;
      uint64_t v267 = v57;
      _os_log_impl(&dword_1830D4000, v169, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection %p sending input_finished to current stream (%p)", buf, 0x46u);
      uint64_t v57 = *(void *)(v9 + 488);
    }
    if (v57) {
LABEL_98:
    }
      nw_protocol_input_finished(*(void **)(v57 + 48), v57);
    else {
      nw_protocol_input_finished(0, 0);
    }
    return;
  }
  if (!(*(unsigned char *)(v9 + 158) & 1 | (gLogDatapath == 0)))
  {
    BOOL v189 = __nwlog_obj();
    if (os_log_type_enabled(v189, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v190 = *(void *)(v9 + 488);
      int v191 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
      int v192 = *(_DWORD *)(v9 + 860);
      if (v190) {
        LODWORD(v190) = *(_DWORD *)(v190 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_finished";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v9 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v191;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v192;
      LOWORD(v265) = 1024;
      *(_DWORD *)((char *)&v265 + 2) = v190;
      _os_log_impl(&dword_1830D4000, v189, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> closing http connection on input_finished, no remaining input", buf, 0x32u);
    }
  }
  int v58 = *v10;
  int v59 = v58 | (*((unsigned __int8 *)v10 + 2) << 16);
  if ((v58 & 0x100) != 0)
  {
    if ((*(unsigned char *)(v9 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v84 = __nwlog_obj();
        if (os_log_type_enabled(v84, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v85 = *(void *)(v9 + 488);
          int v86 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
          int v87 = *(_DWORD *)(v9 + 860);
          if (v85) {
            LODWORD(v85) = *(_DWORD *)(v85 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v9 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v86;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v87;
          LOWORD(v265) = 1024;
          *(_DWORD *)((char *)&v265 + 2) = v85;
          _os_log_impl(&dword_1830D4000, v84, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> already closed", buf, 0x32u);
        }
      }
    }
  }
  else
  {
    *((unsigned char *)v10 + 2) = BYTE2(v59);
    *uint64_t v10 = v59 | 0x100;
    if ((*(unsigned char *)(v9 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v203 = __nwlog_obj();
        if (os_log_type_enabled(v203, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v204 = *(void *)(v9 + 488);
          int v205 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
          int v206 = *(_DWORD *)(v9 + 860);
          if (v204) {
            LODWORD(v204) = *(_DWORD *)(v204 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v9 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v205;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v206;
          LOWORD(v265) = 1024;
          *(_DWORD *)((char *)&v265 + 2) = v204;
          _os_log_impl(&dword_1830D4000, v203, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
        }
      }
    }
    uint64_t v60 = *(void *)(v9 + 480);
    if (!v60)
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
      size_t v199 = (char *)_os_log_send_and_compose_impl();
      v268[0] = 16;
      v260[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v199, v268, v260)) {
        goto LABEL_468;
      }
      if (v268[0] == 17)
      {
        v200 = __nwlog_obj();
        os_log_type_t v201 = v268[0];
        if (!os_log_type_enabled(v200, (os_log_type_t)v268[0])) {
          goto LABEL_468;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        uint64_t v202 = "%{public}s called with null http1";
      }
      else if (v260[0])
      {
        int v207 = (char *)__nw_create_backtrace_string();
        v200 = __nwlog_obj();
        os_log_type_t v201 = v268[0];
        BOOL v208 = os_log_type_enabled(v200, (os_log_type_t)v268[0]);
        if (v207)
        {
          if (v208)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v207;
            _os_log_impl(&dword_1830D4000, v200, v201, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v207);
          goto LABEL_468;
        }
        if (!v208)
        {
LABEL_468:
          if (!v199) {
            goto LABEL_226;
          }
          goto LABEL_469;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        uint64_t v202 = "%{public}s called with null http1, no backtrace";
      }
      else
      {
        v200 = __nwlog_obj();
        os_log_type_t v201 = v268[0];
        if (!os_log_type_enabled(v200, (os_log_type_t)v268[0])) {
          goto LABEL_468;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        uint64_t v202 = "%{public}s called with null http1, backtrace limit exceeded";
      }
      uint64_t v226 = buf;
      goto LABEL_467;
    }
    int v61 = *v10;
    int v62 = v61 | (*((unsigned __int8 *)v10 + 2) << 16);
    if ((v61 & 0x800) == 0)
    {
      *((unsigned char *)v10 + 2) = BYTE2(v62);
      *uint64_t v10 = v62 | 0x800;
      uint64_t v63 = *(unsigned int *)(v60 + 368) + 1;
      uint64_t v64 = v63 << 31 >> 31;
      *(_DWORD *)(v60 + 368) = v63;
      if (v64 != v63 || v64 < 0)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v65 = *(unsigned int *)(v60 + 368);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->nonresuable_connections";
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = 1;
        *(_WORD *)&buf[32] = 2048;
        *(void *)&buf[34] = v65;
        int v66 = (char *)_os_log_send_and_compose_impl();
        v268[0] = 16;
        v260[0] = OS_LOG_TYPE_DEFAULT;
        if (!__nwlog_fault(v66, v268, v260)) {
          goto LABEL_218;
        }
        if (v268[0] != 17)
        {
          if (v260[0])
          {
            int v109 = (char *)__nw_create_backtrace_string();
            int v67 = __nwlog_obj();
            os_log_type_t v68 = v268[0];
            BOOL v110 = os_log_type_enabled(v67, (os_log_type_t)v268[0]);
            if (v109)
            {
              if (v110)
              {
                uint64_t v111 = *(unsigned int *)(v60 + 368);
                *(_DWORD *)buf = 136447234;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                *(void *)&unsigned char buf[24] = 1;
                *(_WORD *)&buf[32] = 2048;
                *(void *)&buf[34] = v111;
                *(_WORD *)&buf[42] = 2082;
                *(void *)&long long v265 = v109;
                _os_log_impl(&dword_1830D4000, v67, v68, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
              }
              free(v109);
              goto LABEL_218;
            }
            if (!v110) {
              goto LABEL_218;
            }
            uint64_t v135 = *(unsigned int *)(v60 + 368);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v135;
            uint32_t v70 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
          }
          else
          {
            int v67 = __nwlog_obj();
            os_log_type_t v68 = v268[0];
            if (!os_log_type_enabled(v67, (os_log_type_t)v268[0])) {
              goto LABEL_218;
            }
            uint64_t v134 = *(unsigned int *)(v60 + 368);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v134;
            uint32_t v70 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
          }
LABEL_217:
          _os_log_impl(&dword_1830D4000, v67, v68, v70, buf, 0x2Au);
          goto LABEL_218;
        }
        int v67 = __nwlog_obj();
        os_log_type_t v68 = v268[0];
        if (os_log_type_enabled(v67, (os_log_type_t)v268[0]))
        {
          uint64_t v69 = *(unsigned int *)(v60 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v69;
          uint32_t v70 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
          goto LABEL_217;
        }
LABEL_218:
        if (v66) {
          free(v66);
        }
        *(_DWORD *)(v60 + 368) = -1;
      }
      if ((*(unsigned char *)(v9 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          uint64_t v209 = __nwlog_obj();
          if (os_log_type_enabled(v209, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v210 = *(void *)(v9 + 488);
            int v211 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
            int v212 = *(_DWORD *)(v9 + 860);
            if (v210) {
              LODWORD(v210) = *(_DWORD *)(v210 + 424);
            }
            int v213 = *(_DWORD *)(v60 + 368) + *(_DWORD *)(v60 + 364);
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v9 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v211;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v212;
            LOWORD(v265) = 1024;
            *(_DWORD *)((char *)&v265 + 2) = v210;
            WORD3(v265) = 1024;
            DWORD2(v265) = v213;
            _os_log_impl(&dword_1830D4000, v209, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
          }
        }
      }
      BOOL v136 = *(void **)(v9 + 496);
      if (v136)
      {
        uint64_t v137 = *(void *)(v9 + 480);
        if (v137)
        {
          uint64_t v138 = *(void *)(v137 + 200);
          *(void *)buf = MEMORY[0x1E4F143A8];
          *(void *)&buf[8] = 0x40000000;
          *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
          *(void *)&unsigned char buf[24] = &unk_1E52411C8;
          *(void *)&buf[32] = v138;
          nw_queue_context_async(v136, buf);
          goto LABEL_226;
        }
        __nwlog_obj();
        *(_DWORD *)uint64_t v268 = 136446210;
        *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        size_t v199 = (char *)_os_log_send_and_compose_impl();
        v260[0] = OS_LOG_TYPE_ERROR;
        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
        if (!__nwlog_fault(v199, v260, &type)) {
          goto LABEL_468;
        }
        if (v260[0] == OS_LOG_TYPE_FAULT)
        {
          v200 = __nwlog_obj();
          os_log_type_t v201 = v260[0];
          if (os_log_type_enabled(v200, v260[0]))
          {
            *(_DWORD *)uint64_t v268 = 136446210;
            *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
            uint64_t v202 = "%{public}s called with null http1";
            goto LABEL_466;
          }
          goto LABEL_468;
        }
        if (type)
        {
          uint64_t v222 = (char *)__nw_create_backtrace_string();
          v200 = __nwlog_obj();
          os_log_type_t v201 = v260[0];
          BOOL v225 = os_log_type_enabled(v200, v260[0]);
          if (v222)
          {
            if (v225)
            {
              *(_DWORD *)uint64_t v268 = 136446466;
              *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              *(_WORD *)&v268[12] = 2082;
              *(void *)&v268[14] = v222;
              v224 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_446:
              _os_log_impl(&dword_1830D4000, v200, v201, v224, v268, 0x16u);
            }
            goto LABEL_447;
          }
          if (!v225) {
            goto LABEL_468;
          }
          *(_DWORD *)uint64_t v268 = 136446210;
          *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          uint64_t v202 = "%{public}s called with null http1, no backtrace";
        }
        else
        {
          v200 = __nwlog_obj();
          os_log_type_t v201 = v260[0];
          if (!os_log_type_enabled(v200, v260[0])) {
            goto LABEL_468;
          }
          *(_DWORD *)uint64_t v268 = 136446210;
          *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          uint64_t v202 = "%{public}s called with null http1, backtrace limit exceeded";
        }
LABEL_466:
        uint64_t v226 = v268;
LABEL_467:
        _os_log_impl(&dword_1830D4000, v200, v201, v202, v226, 0xCu);
        goto LABEL_468;
      }
      __nwlog_obj();
      *(_DWORD *)uint64_t v268 = 136446210;
      *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
      size_t v199 = (char *)_os_log_send_and_compose_impl();
      v260[0] = OS_LOG_TYPE_ERROR;
      os_log_type_t type = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v199, v260, &type)) {
        goto LABEL_468;
      }
      if (v260[0] == OS_LOG_TYPE_FAULT)
      {
        v200 = __nwlog_obj();
        os_log_type_t v201 = v260[0];
        if (os_log_type_enabled(v200, v260[0]))
        {
          *(_DWORD *)uint64_t v268 = 136446210;
          *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          uint64_t v202 = "%{public}s called with null http1_connection->context";
          goto LABEL_466;
        }
        goto LABEL_468;
      }
      if (type == OS_LOG_TYPE_DEFAULT)
      {
        v200 = __nwlog_obj();
        os_log_type_t v201 = v260[0];
        if (!os_log_type_enabled(v200, v260[0])) {
          goto LABEL_468;
        }
        *(_DWORD *)uint64_t v268 = 136446210;
        *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        uint64_t v202 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
        goto LABEL_466;
      }
      uint64_t v222 = (char *)__nw_create_backtrace_string();
      v200 = __nwlog_obj();
      os_log_type_t v201 = v260[0];
      BOOL v223 = os_log_type_enabled(v200, v260[0]);
      if (!v222)
      {
        if (!v223) {
          goto LABEL_468;
        }
        *(_DWORD *)uint64_t v268 = 136446210;
        *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        uint64_t v202 = "%{public}s called with null http1_connection->context, no backtrace";
        goto LABEL_466;
      }
      if (v223)
      {
        *(_DWORD *)uint64_t v268 = 136446466;
        *(void *)&v268[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        *(_WORD *)&v268[12] = 2082;
        *(void *)&v268[14] = v222;
        v224 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
        goto LABEL_446;
      }
LABEL_447:
      free(v222);
      if (!v199) {
        goto LABEL_226;
      }
LABEL_469:
      free(v199);
      goto LABEL_226;
    }
    if ((*(unsigned char *)(v9 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v94 = __nwlog_obj();
        if (os_log_type_enabled(v94, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v95 = *(void *)(v9 + 488);
          int v96 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
          int v97 = *(_DWORD *)(v9 + 860);
          if (v95) {
            LODWORD(v95) = *(_DWORD *)(v95 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v9 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v96;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v97;
          LOWORD(v265) = 1024;
          *(_DWORD *)((char *)&v265 + 2) = v95;
          _os_log_impl(&dword_1830D4000, v94, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
        }
      }
    }
LABEL_226:
    if (!*(void *)(v9 + 488))
    {
      uint64_t v139 = *(void *)(v9 + 784);
      if (v139)
      {
        if (*(void *)v139)
        {
          dispatch_source_set_timer(*(dispatch_source_t *)v139, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
        }
        else
        {
          *(_OWORD *)(v139 + 32) = xmmword_183D5CD50;
          if (*(unsigned char *)(v139 + 48) && *(unsigned char *)(v139 + 49)) {
            nw_queue_source_run_timer(v139);
          }
        }
      }
      else
      {
        if ((*(unsigned char *)(v9 + 158) & 1) == 0)
        {
          int v140 = __nwlog_obj();
          if (os_log_type_enabled(v140, OS_LOG_TYPE_ERROR))
          {
            uint64_t v141 = *(void *)(v9 + 488);
            int v142 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
            int v143 = *(_DWORD *)(v9 + 860);
            if (v141) {
              LODWORD(v141) = *(_DWORD *)(v141 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v9 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v142;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v143;
            LOWORD(v265) = 1024;
            *(_DWORD *)((char *)&v265 + 2) = v141;
            _os_log_impl(&dword_1830D4000, v140, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
          }
        }
        uint64_t v144 = *(void *)(v9 + 608);
        os_log_type_t v145 = *(void **)(v9 + 496);
        *(void *)buf = MEMORY[0x1E4F143A8];
        *(void *)&buf[8] = 0x40000000;
        *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
        *(void *)&unsigned char buf[24] = &unk_1E52411A0;
        *(void *)&buf[32] = v144;
        nw_queue_context_async(v145, buf);
      }
    }
  }
}

void nw_protocol_http1_output_available(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v388 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v380 = "nw_http1_get_http1_protocol";
    int v303 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(__len[1]) = 16;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v303, &__len[1], type)) {
      goto LABEL_576;
    }
    if (LOBYTE(__len[1]) != 17)
    {
      if (type[0] == OS_LOG_TYPE_DEFAULT)
      {
        int v304 = __nwlog_obj();
        os_log_type_t v305 = __len[1];
        if (!os_log_type_enabled(v304, __len[1])) {
          goto LABEL_576;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_http1_get_http1_protocol";
        uint64_t v306 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_575;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v304 = __nwlog_obj();
      os_log_type_t v305 = __len[1];
      BOOL v313 = os_log_type_enabled(v304, __len[1]);
      if (!backtrace_string)
      {
        if (!v313) {
          goto LABEL_576;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_http1_get_http1_protocol";
        uint64_t v306 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_575;
      }
      if (v313)
      {
        *(_DWORD *)buf = 136446466;
        uint64_t v380 = "nw_http1_get_http1_protocol";
        __int16 v381 = 2082;
        *(void *)os_log_type_t v382 = backtrace_string;
        _os_log_impl(&dword_1830D4000, v304, v305, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_576;
    }
    int v304 = __nwlog_obj();
    os_log_type_t v305 = __len[1];
    if (!os_log_type_enabled(v304, __len[1])) {
      goto LABEL_576;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v380 = "nw_http1_get_http1_protocol";
    uint64_t v306 = "%{public}s called with null protocol";
LABEL_575:
    _os_log_impl(&dword_1830D4000, v304, v305, v306, buf, 0xCu);
    goto LABEL_576;
  }
  handle = (char *)a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v380 = "nw_http1_get_http1_protocol";
    int v303 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(__len[1]) = 16;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v303, &__len[1], type)) {
      goto LABEL_576;
    }
    if (LOBYTE(__len[1]) != 17)
    {
      if (type[0] == OS_LOG_TYPE_DEFAULT)
      {
        int v304 = __nwlog_obj();
        os_log_type_t v305 = __len[1];
        if (!os_log_type_enabled(v304, __len[1])) {
          goto LABEL_576;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_http1_get_http1_protocol";
        uint64_t v306 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_575;
      }
      v314 = (char *)__nw_create_backtrace_string();
      int v304 = __nwlog_obj();
      os_log_type_t v305 = __len[1];
      BOOL v315 = os_log_type_enabled(v304, __len[1]);
      if (!v314)
      {
        if (!v315) {
          goto LABEL_576;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_http1_get_http1_protocol";
        uint64_t v306 = "%{public}s called with null handle, no backtrace";
        goto LABEL_575;
      }
      if (v315)
      {
        *(_DWORD *)buf = 136446466;
        uint64_t v380 = "nw_http1_get_http1_protocol";
        __int16 v381 = 2082;
        *(void *)os_log_type_t v382 = v314;
        uint64_t v316 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_479:
        _os_log_impl(&dword_1830D4000, v304, v305, v316, buf, 0x16u);
      }
LABEL_480:
      free(v314);
      if (!v303)
      {
LABEL_578:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_protocol_http1_output_available";
        v308 = (char *)_os_log_send_and_compose_impl();
        LOBYTE(__len[1]) = 16;
        type[0] = OS_LOG_TYPE_DEFAULT;
        if (!__nwlog_fault(v308, &__len[1], type)) {
          goto LABEL_610;
        }
        if (LOBYTE(__len[1]) == 17)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v309 = gLogObj;
          os_log_type_t v310 = __len[1];
          if (!os_log_type_enabled((os_log_t)gLogObj, __len[1])) {
            goto LABEL_610;
          }
          *(_DWORD *)buf = 136446210;
          uint64_t v380 = "nw_protocol_http1_output_available";
          v311 = "%{public}s called with null http1";
        }
        else
        {
          if (type[0])
          {
            BOOL v345 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            v346 = gLogObj;
            os_log_type_t v347 = __len[1];
            BOOL v348 = os_log_type_enabled((os_log_t)gLogObj, __len[1]);
            if (!v345)
            {
              if (!v348) {
                goto LABEL_610;
              }
              *(_DWORD *)buf = 136446210;
              uint64_t v380 = "nw_protocol_http1_output_available";
              v311 = "%{public}s called with null http1, no backtrace";
              goto LABEL_615;
            }
            if (v348)
            {
              *(_DWORD *)buf = 136446466;
              uint64_t v380 = "nw_protocol_http1_output_available";
              __int16 v381 = 2082;
              *(void *)os_log_type_t v382 = v345;
              _os_log_impl(&dword_1830D4000, v346, v347, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v345);
LABEL_610:
            if (!v308) {
              return;
            }
            goto LABEL_611;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v309 = gLogObj;
          os_log_type_t v310 = __len[1];
          if (!os_log_type_enabled((os_log_t)gLogObj, __len[1])) {
            goto LABEL_610;
          }
          *(_DWORD *)buf = 136446210;
          uint64_t v380 = "nw_protocol_http1_output_available";
          v311 = "%{public}s called with null http1, backtrace limit exceeded";
        }
LABEL_608:
        int v351 = v309;
        os_log_type_t v352 = v310;
LABEL_609:
        _os_log_impl(&dword_1830D4000, v351, v352, v311, buf, 0xCu);
        goto LABEL_610;
      }
LABEL_577:
      free(v303);
      goto LABEL_578;
    }
    int v304 = __nwlog_obj();
    os_log_type_t v305 = __len[1];
    if (!os_log_type_enabled(v304, __len[1])) {
      goto LABEL_576;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v380 = "nw_http1_get_http1_protocol";
    uint64_t v306 = "%{public}s called with null handle";
    goto LABEL_575;
  }
  int v3 = *((_DWORD *)handle + 6);
  unsigned int v4 = a1->handle;
  if (v3 == 1) {
    goto LABEL_10;
  }
  if (v3 != 2)
  {
    if (v3 != 3) {
      goto LABEL_578;
    }
    uint64_t v5 = *((void *)handle + 2);
    if (v5)
    {
      unsigned int v4 = (void *)(v5 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v380 = "nw_http1_get_http1_protocol";
    int v303 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(__len[1]) = 16;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v303, &__len[1], type))
    {
      if (LOBYTE(__len[1]) == 17)
      {
        int v304 = __nwlog_obj();
        os_log_type_t v305 = __len[1];
        if (!os_log_type_enabled(v304, __len[1])) {
          goto LABEL_576;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_http1_get_http1_protocol";
        uint64_t v306 = "%{public}s called with null handle->http1_connection";
        goto LABEL_575;
      }
      if (type[0] == OS_LOG_TYPE_DEFAULT)
      {
        int v304 = __nwlog_obj();
        os_log_type_t v305 = __len[1];
        if (!os_log_type_enabled(v304, __len[1])) {
          goto LABEL_576;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_http1_get_http1_protocol";
        uint64_t v306 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_575;
      }
      v314 = (char *)__nw_create_backtrace_string();
      int v304 = __nwlog_obj();
      os_log_type_t v305 = __len[1];
      BOOL v333 = os_log_type_enabled(v304, __len[1]);
      if (!v314)
      {
        if (!v333) {
          goto LABEL_576;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_http1_get_http1_protocol";
        uint64_t v306 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_575;
      }
      if (v333)
      {
        *(_DWORD *)buf = 136446466;
        uint64_t v380 = "nw_http1_get_http1_protocol";
        __int16 v381 = 2082;
        *(void *)os_log_type_t v382 = v314;
        uint64_t v316 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
        goto LABEL_479;
      }
      goto LABEL_480;
    }
LABEL_576:
    if (!v303) {
      goto LABEL_578;
    }
    goto LABEL_577;
  }
  uint64_t v6 = *((void *)handle + 1);
  if (!v6)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v380 = "nw_http1_get_http1_protocol";
    int v303 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(__len[1]) = 16;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v303, &__len[1], type)) {
      goto LABEL_576;
    }
    if (LOBYTE(__len[1]) == 17)
    {
      int v304 = __nwlog_obj();
      os_log_type_t v305 = __len[1];
      if (!os_log_type_enabled(v304, __len[1])) {
        goto LABEL_576;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v380 = "nw_http1_get_http1_protocol";
      uint64_t v306 = "%{public}s called with null handle->http1_stream";
      goto LABEL_575;
    }
    if (type[0] == OS_LOG_TYPE_DEFAULT)
    {
      int v304 = __nwlog_obj();
      os_log_type_t v305 = __len[1];
      if (!os_log_type_enabled(v304, __len[1])) {
        goto LABEL_576;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v380 = "nw_http1_get_http1_protocol";
      uint64_t v306 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_575;
    }
    v314 = (char *)__nw_create_backtrace_string();
    int v304 = __nwlog_obj();
    os_log_type_t v305 = __len[1];
    BOOL v334 = os_log_type_enabled(v304, __len[1]);
    if (!v314)
    {
      if (!v334) {
        goto LABEL_576;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v380 = "nw_http1_get_http1_protocol";
      uint64_t v306 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_575;
    }
    if (v334)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v380 = "nw_http1_get_http1_protocol";
      __int16 v381 = 2082;
      *(void *)os_log_type_t v382 = v314;
      uint64_t v316 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_479;
    }
    goto LABEL_480;
  }
  unsigned int v4 = (void *)(v6 + 248);
LABEL_10:
  if (!*v4) {
    goto LABEL_578;
  }
  if (a2)
  {
    if (v3 != 2)
    {
      if (v3 != 3) {
        goto LABEL_596;
      }
      uint64_t v7 = (uint64_t *)(handle + 16);
      goto LABEL_17;
    }
    uint64_t v8 = *((void *)handle + 1);
    if (v8)
    {
      uint64_t v7 = (uint64_t *)(v8 + 256);
LABEL_17:
      uint64_t v9 = *v7;
      if (*v7)
      {
        if (!*(void *)(v9 + 648)) {
          goto LABEL_393;
        }
        uint64_t v363 = *v7;
        if ((*(unsigned char *)(v9 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            uint64_t v321 = __nwlog_obj();
            if (os_log_type_enabled(v321, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v322 = *(void *)(v9 + 488);
              int v323 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
              int v324 = *(_DWORD *)(v9 + 860);
              if (v322) {
                LODWORD(v322) = *(_DWORD *)(v322 + 424);
              }
              *(_DWORD *)buf = 136447490;
              uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
              __int16 v381 = 2082;
              *(void *)os_log_type_t v382 = v9 + 74;
              *(_WORD *)&v382[8] = 2080;
              *(void *)&v382[10] = " ";
              __int16 v383 = 1024;
              *(_DWORD *)os_log_type_t v384 = v323;
              *(_WORD *)&v384[4] = 1024;
              *(_DWORD *)&v384[6] = v324;
              LOWORD(v385) = 1024;
              *(_DWORD *)((char *)&v385 + 2) = v322;
              _os_log_impl(&dword_1830D4000, v321, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> draining pending outbound frames", buf, 0x32u);
            }
          }
        }
        if (*(void *)(v9 + 480))
        {
          if (*(void *)(v9 + 488))
          {
            uint64_t v10 = (uint64_t *)(v9 + 648);
            uint64_t v11 = *(void *)(v9 + 648);
            if (!v11) {
              goto LABEL_391;
            }
            v355 = (unsigned __int16 *)(v9 + 872);
            uint64_t v12 = v9 + 696;
            os_log_type_t v356 = (void *)(v9 + 656);
            uint64_t v362 = v9 + 74;
            v357 = (uint64_t *)(v9 + 648);
            uint64_t v358 = v9 + 696;
            while (2)
            {
              uint64_t v13 = *(void *)(v11 + 32);
              int v14 = *(void **)(v11 + 40);
              uint64_t v15 = (void *)(v11 + 32);
              if (v13)
              {
                *(void *)(v13 + 40) = v14;
                int v14 = *(void **)(v11 + 40);
              }
              else
              {
                *os_log_type_t v356 = v14;
              }
              *int v14 = v13;
              void *v15 = 0;
              *(void *)(v11 + 40) = 0;
              __len[0] = 0;
              if (*(void *)(v11 + 112))
              {
                if ((*(_WORD *)(v11 + 204) & 0x100) != 0
                  && g_channel_check_validity
                  && (g_channel_check_validity(v11, *(void *)(v11 + 88)) & 1) == 0)
                {
                  int v18 = 0;
                  __len[0] = 0;
                  if (*(unsigned char *)(v9 + 158)) {
                    goto LABEL_39;
                  }
                }
                else
                {
                  int v17 = *(_DWORD *)(v11 + 52);
                  uint64_t v16 = *(unsigned int *)(v11 + 56);
                  if (v17) {
                    v17 -= v16 + *(_DWORD *)(v11 + 60);
                  }
                  __len[0] = v17;
                  int v18 = (char *)(*(void *)(v11 + 112) + v16);
                  if (*(unsigned char *)(v9 + 158))
                  {
LABEL_39:
                    if (!v18 || !__len[0]) {
                      goto LABEL_25;
                    }
                    if ((*(_WORD *)(*(void *)(v9 + 488) + 428) & 0x100) == 0)
                    {
LABEL_42:
                      if (nw_frame_is_metadata_complete(v11))
                      {
                        if ((*(unsigned char *)(v9 + 158) & 1) == 0)
                        {
                          if (gLogDatapath)
                          {
                            BOOL v170 = __nwlog_obj();
                            if (os_log_type_enabled(v170, OS_LOG_TYPE_DEBUG))
                            {
                              uint64_t v171 = *(void *)(v9 + 488);
                              if (v171) {
                                LODWORD(v171) = *(_DWORD *)(v171 + 424);
                              }
                              int v172 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
                              int v173 = *(_DWORD *)(v9 + 860);
                              *(_DWORD *)buf = 136447746;
                              uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                              __int16 v381 = 2082;
                              *(void *)os_log_type_t v382 = v362;
                              *(_WORD *)&v382[8] = 2080;
                              *(void *)&v382[10] = " ";
                              __int16 v383 = 1024;
                              *(_DWORD *)os_log_type_t v384 = v172;
                              *(_WORD *)&v384[4] = 1024;
                              *(_DWORD *)&v384[6] = v173;
                              LOWORD(v385) = 1024;
                              *(_DWORD *)((char *)&v385 + 2) = v171;
                              HIWORD(v385) = 2048;
                              *(void *)v386 = v11;
                              _os_log_impl(&dword_1830D4000, v170, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> draining output frame %p, complete", buf, 0x3Cu);
                            }
                          }
                        }
                      }
                      uint64_t v19 = __len[0];
                      uint64_t v360 = v11;
                      int is_metadata_complete = nw_frame_is_metadata_complete(v11);
                      os_log_type_t v359 = v15;
                      if (v18)
                      {
                        if (v19)
                        {
                          uint64_t v21 = *(void *)(v9 + 32);
                          if (v21)
                          {
                            int v22 = is_metadata_complete;
                            uint64_t v23 = v19;
                            unsigned int v364 = v19;
                            if ((*(unsigned char *)(v9 + 158) & 1) == 0)
                            {
                              if (gLogDatapath)
                              {
                                int v165 = __nwlog_obj();
                                BOOL v166 = os_log_type_enabled(v165, OS_LOG_TYPE_DEBUG);
                                uint64_t v23 = v19;
                                if (v166)
                                {
                                  uint64_t v167 = *(void *)(v9 + 488);
                                  if (v167) {
                                    LODWORD(v167) = *(_DWORD *)(v167 + 424);
                                  }
                                  int v168 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
                                  int v169 = *(_DWORD *)(v9 + 860);
                                  *(_DWORD *)buf = 136447746;
                                  uint64_t v380 = "nw_http1_connection_send_bytes";
                                  __int16 v381 = 2082;
                                  *(void *)os_log_type_t v382 = v362;
                                  *(_WORD *)&v382[8] = 2080;
                                  *(void *)&v382[10] = " ";
                                  __int16 v383 = 1024;
                                  *(_DWORD *)os_log_type_t v384 = v168;
                                  *(_WORD *)&v384[4] = 1024;
                                  *(_DWORD *)&v384[6] = v169;
                                  LOWORD(v385) = 1024;
                                  *(_DWORD *)((char *)&v385 + 2) = v167;
                                  HIWORD(v385) = 1024;
                                  *(_DWORD *)v386 = v19;
                                  _os_log_impl(&dword_1830D4000, v165, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> sending %u bytes", buf, 0x38u);
                                  uint64_t v23 = v19;
                                }
                              }
                            }
                            unsigned int v24 = v23;
LABEL_54:
                            uint64_t v377 = 0;
                            BOOL v378 = &v377;
                            uint64_t v375 = 0;
                            v376 = &v375;
                            int output_frames = nw_protocol_get_output_frames(v21, v9, 1, v23, 0xFFFFFFFFLL, (uint64_t)&v377);
                            uint64_t v30 = v377;
                            if (v377) {
                              BOOL v31 = output_frames == 0;
                            }
                            else {
                              BOOL v31 = 1;
                            }
                            if (v31)
                            {
                              int v70 = output_frames;
                              uint64_t v11 = v360;
                              if (output_frames)
                              {
                                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                networkd_settings_init();
                                *(_DWORD *)buf = 136446466;
                                uint64_t v380 = "nw_http1_connection_send_bytes";
                                __int16 v381 = 1024;
                                *(_DWORD *)os_log_type_t v382 = v70;
                                __int16 v71 = (char *)_os_log_send_and_compose_impl();
                                type[0] = OS_LOG_TYPE_ERROR;
                                char v374 = 0;
                                if (!__nwlog_fault(v71, type, &v374)) {
                                  goto LABEL_172;
                                }
                                if (type[0] != OS_LOG_TYPE_FAULT)
                                {
                                  if (v374)
                                  {
                                    uint64_t v85 = (char *)__nw_create_backtrace_string();
                                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                    networkd_settings_init();
                                    int v86 = gLogObj;
                                    os_log_type_t v87 = type[0];
                                    BOOL v88 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
                                    if (v85)
                                    {
                                      if (v88)
                                      {
                                        *(_DWORD *)buf = 136446722;
                                        uint64_t v380 = "nw_http1_connection_send_bytes";
                                        __int16 v381 = 1024;
                                        *(_DWORD *)os_log_type_t v382 = v70;
                                        *(_WORD *)&v382[4] = 2082;
                                        *(void *)&v382[6] = v85;
                                        _os_log_impl(&dword_1830D4000, v86, v87, "%{public}s output handler reported %u frames to write, but array is empty, dumping backtrace:%{public}s", buf, 0x1Cu);
                                      }
                                      free(v85);
                                      goto LABEL_172;
                                    }
                                    if (!v88) {
                                      goto LABEL_172;
                                    }
                                    *(_DWORD *)buf = 136446466;
                                    uint64_t v380 = "nw_http1_connection_send_bytes";
                                    __int16 v381 = 1024;
                                    *(_DWORD *)os_log_type_t v382 = v70;
                                    int v74 = v86;
                                    os_log_type_t v75 = v87;
                                    uint64_t v76 = "%{public}s output handler reported %u frames to write, but array is empty, no backtrace";
                                  }
                                  else
                                  {
                                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                    networkd_settings_init();
                                    uint64_t v110 = gLogObj;
                                    os_log_type_t v111 = type[0];
                                    if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
                                      goto LABEL_172;
                                    }
                                    *(_DWORD *)buf = 136446466;
                                    uint64_t v380 = "nw_http1_connection_send_bytes";
                                    __int16 v381 = 1024;
                                    *(_DWORD *)os_log_type_t v382 = v70;
                                    int v74 = v110;
                                    os_log_type_t v75 = v111;
                                    uint64_t v76 = "%{public}s output handler reported %u frames to write, but array is empty, bac"
                                          "ktrace limit exceeded";
                                  }
LABEL_171:
                                  _os_log_impl(&dword_1830D4000, v74, v75, v76, buf, 0x12u);
                                  goto LABEL_172;
                                }
                                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                networkd_settings_init();
                                uint64_t v72 = gLogObj;
                                os_log_type_t v73 = type[0];
                                if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
                                {
                                  *(_DWORD *)buf = 136446466;
                                  uint64_t v380 = "nw_http1_connection_send_bytes";
                                  __int16 v381 = 1024;
                                  *(_DWORD *)os_log_type_t v382 = v70;
                                  int v74 = v72;
                                  os_log_type_t v75 = v73;
                                  uint64_t v76 = "%{public}s output handler reported %u frames to write, but array is empty";
                                  goto LABEL_171;
                                }
LABEL_172:
                                if (v71) {
                                  free(v71);
                                }
                                uint64_t v9 = v363;
                              }
                              uint64_t v12 = v358;
                              if ((*(unsigned char *)(v9 + 158) & 1) == 0)
                              {
                                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                networkd_settings_init();
                                unsigned int v112 = gLogObj;
                                if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
                                {
                                  uint64_t v113 = *(void *)(v9 + 488);
                                  if (v113) {
                                    LODWORD(v113) = *(_DWORD *)(v113 + 424);
                                  }
                                  int v114 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
                                  int v115 = *(_DWORD *)(v9 + 860);
                                  *(_DWORD *)buf = 136447746;
                                  uint64_t v380 = "nw_http1_connection_send_bytes";
                                  __int16 v381 = 2082;
                                  *(void *)os_log_type_t v382 = v362;
                                  *(_WORD *)&v382[8] = 2080;
                                  *(void *)&v382[10] = " ";
                                  __int16 v383 = 1024;
                                  *(_DWORD *)os_log_type_t v384 = v114;
                                  *(_WORD *)&v384[4] = 1024;
                                  *(_DWORD *)&v384[6] = v115;
                                  LOWORD(v385) = 1024;
                                  *(_DWORD *)((char *)&v385 + 2) = v113;
                                  HIWORD(v385) = 1024;
                                  *(_DWORD *)v386 = v364;
                                  _os_log_impl(&dword_1830D4000, v112, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> output handler refused frame request for frames of length %u", buf, 0x38u);
                                }
                              }
                              LODWORD(v23) = v364 - v24;
                              uint64_t v10 = v357;
LABEL_363:
                              int v240 = v23;
                              if (v23 == __len[0])
                              {
                                nw_http_transaction_metadata_increment_outbound_body_transfer_size(*(void **)(*(void *)(v9 + 488) + 352), v23);
                                uint64_t v241 = *(void *)(v9 + 488);
                                uint64_t v242 = __len[0];
                                uint64_t v243 = *(void *)(v241 + 176);
                                BOOL v95 = __CFADD__(v243, __len[0]);
                                *(void *)(v241 + 176) = v243 + __len[0];
                                if (v95)
                                {
                                  if (gLogDatapath)
                                  {
                                    uint64_t v246 = __nwlog_obj();
                                    if (os_log_type_enabled(v246, OS_LOG_TYPE_DEBUG))
                                    {
                                      uint64_t v247 = *(void *)(v241 + 176);
                                      *(_DWORD *)buf = 136446978;
                                      uint64_t v380 = "increment_outbound_body_size";
                                      __int16 v381 = 2082;
                                      *(void *)os_log_type_t v382 = "outbound_body_size";
                                      *(_WORD *)&v382[8] = 2048;
                                      *(void *)&v382[10] = v242;
                                      __int16 v383 = 2048;
                                      *(void *)os_log_type_t v384 = v247;
                                      _os_log_impl(&dword_1830D4000, v246, OS_LOG_TYPE_DEBUG, "%{public}s Overflow: %{public}s, increment %llu, result %llu", buf, 0x2Au);
                                    }
                                  }
                                  *(void *)(v241 + 176) = -1;
                                }
                                BOOL v244 = v359;
                                if (nw_frame_is_metadata_complete(v11))
                                {
                                  *(_WORD *)(*(void *)(v9 + 488) + 428) |= 0x400u;
                                  *v355 |= 0x20u;
                                  nw_http_transaction_metadata_mark_outbound_message_end(*(void **)(*(void *)(v9 + 488)
                                                                                                  + 352));
                                  uint64_t v245 = *(void *)(v9 + 488);
                                  if (*(unsigned char *)(v245 + 168))
                                  {
                                    if (*(void *)(v245 + 160) != *(void *)(v245 + 176))
                                    {
                                      if ((*(unsigned char *)(v245 + 158) & 1) == 0)
                                      {
                                        int v252 = __nwlog_obj();
                                        BOOL v253 = os_log_type_enabled(v252, OS_LOG_TYPE_ERROR);
                                        uint64_t v245 = *(void *)(v9 + 488);
                                        if (v253)
                                        {
                                          uint64_t v254 = *(void *)(v245 + 256);
                                          if (v254) {
                                            LODWORD(v254) = *(_DWORD *)(v254 + 860);
                                          }
                                          int v255 = *(_DWORD *)(*(void *)(v245 + 248) + 372);
                                          int v256 = *(_DWORD *)(v245 + 424);
                                          if (*(unsigned char *)(v245 + 168)) {
                                            uint64_t v257 = *(void *)(v245 + 160);
                                          }
                                          else {
                                            uint64_t v257 = -1;
                                          }
                                          uint64_t v258 = *(void *)(v245 + 176);
                                          *(_DWORD *)buf = 136448002;
                                          uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                                          __int16 v381 = 2082;
                                          *(void *)os_log_type_t v382 = v245 + 74;
                                          *(_WORD *)&v382[8] = 2080;
                                          *(void *)&v382[10] = " ";
                                          __int16 v383 = 1024;
                                          *(_DWORD *)os_log_type_t v384 = v255;
                                          *(_WORD *)&v384[4] = 1024;
                                          *(_DWORD *)&v384[6] = v254;
                                          LOWORD(v385) = 1024;
                                          *(_DWORD *)((char *)&v385 + 2) = v256;
                                          HIWORD(v385) = 2048;
                                          *(void *)v386 = v257;
                                          *(_WORD *)&v386[8] = 2048;
                                          uint64_t v387 = v258;
                                          _os_log_impl(&dword_1830D4000, v252, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> Content length header %llu does not equal body size %llu", buf, 0x46u);
                                          uint64_t v245 = *(void *)(v9 + 488);
                                        }
                                      }
                                      nw_protocol_error(*(void **)(v245 + 48), v245);
                                      nw_protocol_disconnected(*(void **)(*(void *)(v9 + 488) + 48), *(void *)(v9 + 488));
                                      goto LABEL_388;
                                    }
                                  }
                                }
LABEL_25:
                                *(void *)(v11 + 80) = 0;
                                *(void *)(v11 + 88) = 0;
                                nw_frame_cache_return_frame(v12, v11);
                                uint64_t v11 = *v10;
                                if (!*v10) {
                                  goto LABEL_391;
                                }
                                continue;
                              }
                              BOOL v244 = v359;
                              if ((*(unsigned char *)(v9 + 158) & 1) == 0)
                              {
                                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                networkd_settings_init();
                                int v248 = gLogObj;
                                if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEFAULT))
                                {
                                  uint64_t v249 = *(void *)(v9 + 488);
                                  int v250 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
                                  int v251 = *(_DWORD *)(v9 + 860);
                                  if (v249) {
                                    LODWORD(v249) = *(_DWORD *)(v249 + 424);
                                  }
                                  *(_DWORD *)buf = 136448002;
                                  uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                                  __int16 v381 = 2082;
                                  *(void *)os_log_type_t v382 = v362;
                                  *(_WORD *)&v382[8] = 2080;
                                  *(void *)&v382[10] = " ";
                                  __int16 v383 = 1024;
                                  *(_DWORD *)os_log_type_t v384 = v250;
                                  *(_WORD *)&v384[4] = 1024;
                                  *(_DWORD *)&v384[6] = v251;
                                  LOWORD(v385) = 1024;
                                  *(_DWORD *)((char *)&v385 + 2) = v249;
                                  HIWORD(v385) = 1024;
                                  *(_DWORD *)v386 = __len[0];
                                  *(_WORD *)&v386[4] = 1024;
                                  *(_DWORD *)&v386[6] = v240;
                                  _os_log_impl(&dword_1830D4000, v248, OS_LOG_TYPE_DEFAULT, "%{public}s %{public}s%s<i%u:c%u:s%u> could not send pending output frame of length %u sent %u", buf, 0x3Eu);
                                }
                              }
LABEL_388:
                              nw_frame_claim(v11, v28, v240, 0);
                              uint64_t v259 = *v10;
                              *(void *)(v11 + 32) = *v10;
                              v260 = (void *)(v259 + 40);
                              BOOL v31 = v259 == 0;
                              uint64_t v261 = v356;
                              if (!v31) {
                                uint64_t v261 = v260;
                              }
                              *uint64_t v261 = v244;
                              *uint64_t v10 = v11;
                              *(void *)(v11 + 40) = v10;
LABEL_391:
                              int v262 = *(unsigned __int16 *)(v9 + 872);
                              if ((v262 & 0x8000) == 0 || *v10)
                              {
LABEL_393:
                                uint64_t v263 = *(void *)(v9 + 488);
                                if (v263)
                                {
                                  nw_protocol_output_available(*(void **)(v263 + 48), v263);
                                }
                                else if ((*(unsigned char *)(v9 + 158) & 1) == 0)
                                {
                                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                  networkd_settings_init();
                                  os_log_type_t v264 = gLogObj;
                                  if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
                                  {
                                    uint64_t v265 = *(void *)(v9 + 488);
                                    int v266 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
                                    int v267 = *(_DWORD *)(v9 + 860);
                                    if (v265) {
                                      LODWORD(v265) = *(_DWORD *)(v265 + 424);
                                    }
                                    *(_DWORD *)buf = 136447490;
                                    uint64_t v380 = "nw_protocol_http1_output_available";
                                    __int16 v381 = 2082;
                                    *(void *)os_log_type_t v382 = v9 + 74;
                                    *(_WORD *)&v382[8] = 2080;
                                    *(void *)&v382[10] = " ";
                                    __int16 v383 = 1024;
                                    *(_DWORD *)os_log_type_t v384 = v266;
                                    *(_WORD *)&v384[4] = 1024;
                                    *(_DWORD *)&v384[6] = v267;
                                    LOWORD(v385) = 1024;
                                    *(_DWORD *)((char *)&v385 + 2) = v265;
                                    _os_log_impl(&dword_1830D4000, v264, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> not sending output_available for connection without stream", buf, 0x32u);
                                  }
                                }
                                return;
                              }
                              uint64_t v268 = (_WORD *)(v9 + 872);
                              unsigned int v269 = v262 & 0xFFFF7FFF | (*(unsigned __int8 *)(v9 + 874) << 16);
                              *(_WORD *)(v9 + 872) = v262 & 0x7FFF;
                              *(unsigned char *)(v9 + 874) = BYTE2(v269);
                              if ((*(unsigned char *)(v9 + 158) & 1) == 0)
                              {
                                if (gLogDatapath)
                                {
                                  char v341 = __nwlog_obj();
                                  if (os_log_type_enabled(v341, OS_LOG_TYPE_DEBUG))
                                  {
                                    uint64_t v342 = *(void *)(v9 + 488);
                                    int v343 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
                                    int v344 = *(_DWORD *)(v9 + 860);
                                    if (v342) {
                                      LODWORD(v342) = *(_DWORD *)(v342 + 424);
                                    }
                                    *(_DWORD *)buf = 136447490;
                                    uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                    __int16 v381 = 2082;
                                    *(void *)os_log_type_t v382 = v9 + 74;
                                    *(_WORD *)&v382[8] = 2080;
                                    *(void *)&v382[10] = " ";
                                    __int16 v383 = 1024;
                                    *(_DWORD *)os_log_type_t v384 = v343;
                                    *(_WORD *)&v384[4] = 1024;
                                    *(_DWORD *)&v384[6] = v344;
                                    LOWORD(v385) = 1024;
                                    *(_DWORD *)((char *)&v385 + 2) = v342;
                                    _os_log_impl(&dword_1830D4000, v341, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> requesting new frame for final chunk", buf, 0x32u);
                                    uint64_t v9 = v363;
                                  }
                                }
                              }
                              uint64_t v270 = *(void *)(v9 + 32);
                              if (v270)
                              {
                                *(void *)&__len[1] = 0;
                                uint64_t v366 = (uint64_t)&__len[1];
                                int v271 = nw_protocol_get_output_frames(v270, v9, 5, 5, 1, (uint64_t)&__len[1]);
                                int v272 = v271;
                                uint64_t v273 = *(void *)&__len[1];
                                if (*(void *)&__len[1] && v271)
                                {
                                  *(_DWORD *)os_log_type_t type = 0;
                                  uint64_t v274 = nw_frame_unclaimed_bytes(*(uint64_t *)&__len[1], type);
                                  *(_DWORD *)uint64_t v274 = 218762544;
                                  *(unsigned char *)(v274 + 4) = 10;
                                  if (nw_frame_claim(v273, v275, 5, 0))
                                  {
                                    nw_frame_collapse(v273);
                                    nw_frame_unclaim(v273, v276, 5u, 0);
                                    if (nw_protocol_finalize_output_frames(v270, (uint64_t)&__len[1]))
                                    {
                                      *(_WORD *)(*(void *)(v9 + 488) + 428) |= 0x400u;
                                      *v268 |= 0x20u;
                                      nw_http_transaction_metadata_mark_outbound_message_end(*(void **)(*(void *)(v9 + 488) + 352));
                                      uint64_t v277 = *(void *)(v9 + 488);
                                      if (*(unsigned char *)(v277 + 168))
                                      {
                                        if (*(void *)(v277 + 160) != *(void *)(v277 + 176))
                                        {
                                          if ((*(unsigned char *)(v277 + 158) & 1) == 0)
                                          {
                                            int v278 = __nwlog_obj();
                                            BOOL v279 = os_log_type_enabled(v278, OS_LOG_TYPE_ERROR);
                                            uint64_t v277 = *(void *)(v9 + 488);
                                            if (v279)
                                            {
                                              uint64_t v280 = *(void *)(v277 + 256);
                                              if (v280) {
                                                LODWORD(v280) = *(_DWORD *)(v280 + 860);
                                              }
                                              int v281 = *(_DWORD *)(*(void *)(v277 + 248) + 372);
                                              int v282 = *(_DWORD *)(v277 + 424);
                                              if (*(unsigned char *)(v277 + 168)) {
                                                uint64_t v283 = *(void *)(v277 + 160);
                                              }
                                              else {
                                                uint64_t v283 = -1;
                                              }
                                              uint64_t v307 = *(void *)(v277 + 176);
                                              *(_DWORD *)buf = 136448002;
                                              uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                              __int16 v381 = 2082;
                                              *(void *)os_log_type_t v382 = v277 + 74;
                                              *(_WORD *)&v382[8] = 2080;
                                              *(void *)&v382[10] = " ";
                                              __int16 v383 = 1024;
                                              *(_DWORD *)os_log_type_t v384 = v281;
                                              *(_WORD *)&v384[4] = 1024;
                                              *(_DWORD *)&v384[6] = v280;
                                              LOWORD(v385) = 1024;
                                              *(_DWORD *)((char *)&v385 + 2) = v282;
                                              HIWORD(v385) = 2048;
                                              *(void *)v386 = v283;
                                              *(_WORD *)&v386[8] = 2048;
                                              uint64_t v387 = v307;
                                              _os_log_impl(&dword_1830D4000, v278, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> Content length header %llu does not equal body size %llu", buf, 0x46u);
                                              uint64_t v277 = *(void *)(v9 + 488);
                                            }
                                          }
                                          nw_protocol_error(*(void **)(v277 + 48), v277);
                                          nw_protocol_disconnected(*(void **)(*(void *)(v9 + 488) + 48), *(void *)(v9 + 488));
                                        }
                                      }
                                    }
                                    goto LABEL_393;
                                  }
                                  __nwlog_obj();
                                  *(_DWORD *)buf = 136446466;
                                  uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                  __int16 v381 = 1024;
                                  *(_DWORD *)os_log_type_t v382 = 5;
                                  uint64_t v288 = (char *)_os_log_send_and_compose_impl();
                                  LOBYTE(v377) = 16;
                                  LOBYTE(v375) = 0;
                                  if (!__nwlog_fault(v288, &v377, &v375)) {
                                    goto LABEL_453;
                                  }
                                  if (v377 == 17)
                                  {
                                    unsigned int v289 = __nwlog_obj();
                                    os_log_type_t v290 = v377;
                                    if (os_log_type_enabled(v289, (os_log_type_t)v377))
                                    {
                                      *(_DWORD *)buf = 136446466;
                                      uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                      __int16 v381 = 1024;
                                      *(_DWORD *)os_log_type_t v382 = 5;
                                      v291 = "%{public}s claiming frame with %u bytes failed";
                                      goto LABEL_451;
                                    }
                                    goto LABEL_453;
                                  }
                                  if ((_BYTE)v375)
                                  {
                                    os_log_type_t v294 = (char *)__nw_create_backtrace_string();
                                    unsigned int v289 = __nwlog_obj();
                                    os_log_type_t v290 = v377;
                                    BOOL v295 = os_log_type_enabled(v289, (os_log_type_t)v377);
                                    if (v294)
                                    {
                                      if (v295)
                                      {
                                        *(_DWORD *)buf = 136446722;
                                        uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                        __int16 v381 = 1024;
                                        *(_DWORD *)os_log_type_t v382 = 5;
                                        *(_WORD *)&v382[4] = 2082;
                                        *(void *)&v382[6] = v294;
                                        _os_log_impl(&dword_1830D4000, v289, v290, "%{public}s claiming frame with %u bytes failed, dumping backtrace:%{public}s", buf, 0x1Cu);
                                      }
                                      free(v294);
                                      if (!v288) {
                                        goto LABEL_393;
                                      }
                                      goto LABEL_454;
                                    }
                                    if (!v295) {
                                      goto LABEL_453;
                                    }
                                    *(_DWORD *)buf = 136446466;
                                    uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                    __int16 v381 = 1024;
                                    *(_DWORD *)os_log_type_t v382 = 5;
                                    v291 = "%{public}s claiming frame with %u bytes failed, no backtrace";
                                  }
                                  else
                                  {
                                    unsigned int v289 = __nwlog_obj();
                                    os_log_type_t v290 = v377;
                                    if (!os_log_type_enabled(v289, (os_log_type_t)v377)) {
                                      goto LABEL_453;
                                    }
                                    *(_DWORD *)buf = 136446466;
                                    uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                    __int16 v381 = 1024;
                                    *(_DWORD *)os_log_type_t v382 = 5;
                                    v291 = "%{public}s claiming frame with %u bytes failed, backtrace limit exceeded";
                                  }
LABEL_451:
                                  v300 = v289;
                                  os_log_type_t v301 = v290;
                                  uint32_t v302 = 18;
LABEL_452:
                                  _os_log_impl(&dword_1830D4000, v300, v301, v291, buf, v302);
                                  goto LABEL_453;
                                }
                                if (v271)
                                {
                                  __nwlog_obj();
                                  *(_DWORD *)buf = 136446466;
                                  uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                  __int16 v381 = 1024;
                                  *(_DWORD *)os_log_type_t v382 = v272;
                                  BOOL v284 = (char *)_os_log_send_and_compose_impl();
                                  type[0] = OS_LOG_TYPE_ERROR;
                                  LOBYTE(v377) = 0;
                                  if (!__nwlog_fault(v284, type, &v377)) {
                                    goto LABEL_442;
                                  }
                                  if (type[0] != OS_LOG_TYPE_FAULT)
                                  {
                                    if ((_BYTE)v377)
                                    {
                                      os_log_type_t v292 = (char *)__nw_create_backtrace_string();
                                      v285 = __nwlog_obj();
                                      os_log_type_t v286 = type[0];
                                      BOOL v293 = os_log_type_enabled(v285, type[0]);
                                      if (v292)
                                      {
                                        if (v293)
                                        {
                                          *(_DWORD *)buf = 136446722;
                                          uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                          __int16 v381 = 1024;
                                          *(_DWORD *)os_log_type_t v382 = v272;
                                          *(_WORD *)&v382[4] = 2082;
                                          *(void *)&v382[6] = v292;
                                          _os_log_impl(&dword_1830D4000, v285, v286, "%{public}s output handler reported %u frames to write, but array is empty, dumping backtrace:%{public}s", buf, 0x1Cu);
                                        }
                                        free(v292);
                                        uint64_t v9 = v363;
                                        goto LABEL_442;
                                      }
                                      uint64_t v9 = v363;
                                      if (!v293) {
                                        goto LABEL_442;
                                      }
                                      *(_DWORD *)buf = 136446466;
                                      uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                      __int16 v381 = 1024;
                                      *(_DWORD *)os_log_type_t v382 = v272;
                                      unsigned int v287 = "%{public}s output handler reported %u frames to write, but array is empty, no backtrace";
                                    }
                                    else
                                    {
                                      v285 = __nwlog_obj();
                                      os_log_type_t v286 = type[0];
                                      if (!os_log_type_enabled(v285, type[0])) {
                                        goto LABEL_442;
                                      }
                                      *(_DWORD *)buf = 136446466;
                                      uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                      __int16 v381 = 1024;
                                      *(_DWORD *)os_log_type_t v382 = v272;
                                      unsigned int v287 = "%{public}s output handler reported %u frames to write, but array is empty, "
                                             "backtrace limit exceeded";
                                    }
LABEL_441:
                                    _os_log_impl(&dword_1830D4000, v285, v286, v287, buf, 0x12u);
                                    goto LABEL_442;
                                  }
                                  v285 = __nwlog_obj();
                                  os_log_type_t v286 = type[0];
                                  if (os_log_type_enabled(v285, type[0]))
                                  {
                                    *(_DWORD *)buf = 136446466;
                                    uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                    __int16 v381 = 1024;
                                    *(_DWORD *)os_log_type_t v382 = v272;
                                    unsigned int v287 = "%{public}s output handler reported %u frames to write, but array is empty";
                                    goto LABEL_441;
                                  }
LABEL_442:
                                  if (v284) {
                                    free(v284);
                                  }
                                }
                                if ((*(unsigned char *)(v9 + 158) & 1) == 0)
                                {
                                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                  networkd_settings_init();
                                  v296 = gLogObj;
                                  if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
                                  {
                                    uint64_t v297 = *(void *)(v9 + 488);
                                    int v298 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
                                    int v299 = *(_DWORD *)(v9 + 860);
                                    if (v297) {
                                      LODWORD(v297) = *(_DWORD *)(v297 + 424);
                                    }
                                    *(_DWORD *)buf = 136447746;
                                    uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                    __int16 v381 = 2082;
                                    *(void *)os_log_type_t v382 = v9 + 74;
                                    *(_WORD *)&v382[8] = 2080;
                                    *(void *)&v382[10] = " ";
                                    __int16 v383 = 1024;
                                    *(_DWORD *)os_log_type_t v384 = v298;
                                    *(_WORD *)&v384[4] = 1024;
                                    *(_DWORD *)&v384[6] = v299;
                                    LOWORD(v385) = 1024;
                                    *(_DWORD *)((char *)&v385 + 2) = v297;
                                    HIWORD(v385) = 1024;
                                    *(_DWORD *)v386 = 5;
                                    _os_log_impl(&dword_1830D4000, v296, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> output handler refused frame request for frames of length %u", buf, 0x38u);
                                  }
                                }
                                goto LABEL_393;
                              }
                              __nwlog_obj();
                              *(_DWORD *)buf = 136446210;
                              uint64_t v380 = "nw_http1_connection_send_final_chunk";
                              os_log_type_t v337 = (char *)_os_log_send_and_compose_impl();
                              LOBYTE(__len[1]) = 16;
                              type[0] = OS_LOG_TYPE_DEFAULT;
                              if (!__nwlog_fault(v337, &__len[1], type)) {
                                goto LABEL_626;
                              }
                              if (LOBYTE(__len[1]) == 17)
                              {
                                v338 = __nwlog_obj();
                                os_log_type_t v339 = __len[1];
                                if (os_log_type_enabled(v338, __len[1]))
                                {
                                  *(_DWORD *)buf = 136446210;
                                  uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                  v340 = "%{public}s called with null output_handler";
                                  goto LABEL_625;
                                }
                                goto LABEL_626;
                              }
                              if (type[0])
                              {
                                v353 = (char *)__nw_create_backtrace_string();
                                v338 = __nwlog_obj();
                                os_log_type_t v339 = __len[1];
                                BOOL v354 = os_log_type_enabled(v338, __len[1]);
                                if (v353)
                                {
                                  if (v354)
                                  {
                                    *(_DWORD *)buf = 136446466;
                                    uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                    __int16 v381 = 2082;
                                    *(void *)os_log_type_t v382 = v353;
                                    _os_log_impl(&dword_1830D4000, v338, v339, "%{public}s called with null output_handler, dumping backtrace:%{public}s", buf, 0x16u);
                                  }
                                  free(v353);
                                  goto LABEL_626;
                                }
                                if (!v354)
                                {
LABEL_626:
                                  if (v337) {
                                    free(v337);
                                  }
                                  uint64_t v9 = v363;
                                  goto LABEL_393;
                                }
                                *(_DWORD *)buf = 136446210;
                                uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                v340 = "%{public}s called with null output_handler, no backtrace";
                              }
                              else
                              {
                                v338 = __nwlog_obj();
                                os_log_type_t v339 = __len[1];
                                if (!os_log_type_enabled(v338, __len[1])) {
                                  goto LABEL_626;
                                }
                                *(_DWORD *)buf = 136446210;
                                uint64_t v380 = "nw_http1_connection_send_final_chunk";
                                v340 = "%{public}s called with null output_handler, backtrace limit exceeded";
                              }
LABEL_625:
                              _os_log_impl(&dword_1830D4000, v338, v339, v340, buf, 0xCu);
                              goto LABEL_626;
                            }
                            while (1)
                            {
                              uint64_t v32 = *(void *)(v30 + 32);
                              if (v32 || *(void *)(v30 + 40))
                              {
                                uint64_t v33 = *(void *)(v30 + 112);
                                if (!v33) {
                                  goto LABEL_68;
                                }
                              }
                              else
                              {
                                uint64_t v32 = 0;
                                uint64_t v33 = *(void *)(v30 + 112);
                                if (!v33) {
                                  goto LABEL_68;
                                }
                              }
                              if ((*(_WORD *)(v30 + 204) & 0x100) != 0
                                && g_channel_check_validity
                                && !g_channel_check_validity(v30, *(void *)(v30 + 88)))
                              {
                                LODWORD(v33) = 0;
LABEL_68:
                                uint64_t v35 = 0;
                                goto LABEL_69;
                              }
                              LODWORD(v33) = *(_DWORD *)(v30 + 52);
                              uint64_t v34 = *(unsigned int *)(v30 + 56);
                              if (v33) {
                                LODWORD(v33) = v33 - (v34 + *(_DWORD *)(v30 + 60));
                              }
                              uint64_t v35 = (void *)(*(void *)(v30 + 112) + v34);
LABEL_69:
                              if (v33 >= v24) {
                                size_t v36 = v24;
                              }
                              else {
                                size_t v36 = v33;
                              }
                              memcpy(v35, v18, v36);
                              v24 -= v36;
                              v18 += v36;
                              if (!nw_frame_claim(v30, v37, v36, 0))
                              {
                                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                networkd_settings_init();
                                *(_DWORD *)buf = 136446466;
                                uint64_t v380 = "nw_http1_connection_send_bytes";
                                __int16 v381 = 1024;
                                *(_DWORD *)os_log_type_t v382 = v36;
                                os_log_type_t v42 = (char *)_os_log_send_and_compose_impl();
                                type[0] = OS_LOG_TYPE_ERROR;
                                char v374 = 0;
                                if (!__nwlog_fault(v42, type, &v374)) {
                                  goto LABEL_94;
                                }
                                if (type[0] == OS_LOG_TYPE_FAULT)
                                {
                                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                  networkd_settings_init();
                                  uint64_t v43 = gLogObj;
                                  os_log_type_t v44 = type[0];
                                  if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
                                  {
                                    *(_DWORD *)buf = 136446466;
                                    uint64_t v380 = "nw_http1_connection_send_bytes";
                                    __int16 v381 = 1024;
                                    *(_DWORD *)os_log_type_t v382 = v36;
                                    os_log_type_t v45 = v43;
                                    os_log_type_t v46 = v44;
                                    uint64_t v47 = "%{public}s claiming frame with %u bytes failed";
                                    goto LABEL_93;
                                  }
                                  goto LABEL_94;
                                }
                                if (!v374)
                                {
                                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                  networkd_settings_init();
                                  uint64_t v52 = gLogObj;
                                  os_log_type_t v53 = type[0];
                                  if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
                                    goto LABEL_94;
                                  }
                                  *(_DWORD *)buf = 136446466;
                                  uint64_t v380 = "nw_http1_connection_send_bytes";
                                  __int16 v381 = 1024;
                                  *(_DWORD *)os_log_type_t v382 = v36;
                                  os_log_type_t v45 = v52;
                                  os_log_type_t v46 = v53;
                                  uint64_t v47 = "%{public}s claiming frame with %u bytes failed, backtrace limit exceeded";
                                  goto LABEL_93;
                                }
                                uint64_t v48 = (char *)__nw_create_backtrace_string();
                                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                networkd_settings_init();
                                int v49 = gLogObj;
                                os_log_type_t v50 = type[0];
                                BOOL v51 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
                                if (v48)
                                {
                                  if (v51)
                                  {
                                    *(_DWORD *)buf = 136446722;
                                    uint64_t v380 = "nw_http1_connection_send_bytes";
                                    __int16 v381 = 1024;
                                    *(_DWORD *)os_log_type_t v382 = v36;
                                    *(_WORD *)&v382[4] = 2082;
                                    *(void *)&v382[6] = v48;
                                    _os_log_impl(&dword_1830D4000, v49, v50, "%{public}s claiming frame with %u bytes failed, dumping backtrace:%{public}s", buf, 0x1Cu);
                                  }
                                  free(v48);
                                  goto LABEL_94;
                                }
                                if (v51)
                                {
                                  *(_DWORD *)buf = 136446466;
                                  uint64_t v380 = "nw_http1_connection_send_bytes";
                                  __int16 v381 = 1024;
                                  *(_DWORD *)os_log_type_t v382 = v36;
                                  os_log_type_t v45 = v49;
                                  os_log_type_t v46 = v50;
                                  uint64_t v47 = "%{public}s claiming frame with %u bytes failed, no backtrace";
LABEL_93:
                                  _os_log_impl(&dword_1830D4000, v45, v46, v47, buf, 0x12u);
                                }
LABEL_94:
                                if (v42) {
                                  free(v42);
                                }
LABEL_96:
                                uint64_t v54 = (uint64_t *)v376[1];
                                uint64_t v55 = *v54;
                                uint64_t v9 = v363;
                                if (*v54)
                                {
                                  nw_frame_set_metadata(*v54, 0, 0, v22);
                                  if (v22)
                                  {
                                    if ((*(unsigned char *)(v363 + 158) & 1) == 0)
                                    {
                                      if (gLogDatapath)
                                      {
                                        uint64_t v60 = __nwlog_obj();
                                        if (os_log_type_enabled(v60, OS_LOG_TYPE_DEBUG))
                                        {
                                          uint64_t v61 = *(void *)(v363 + 488);
                                          if (v61) {
                                            LODWORD(v61) = *(_DWORD *)(v61 + 424);
                                          }
                                          int v62 = *(_DWORD *)(*(void *)(v363 + 480) + 372);
                                          int v63 = *(_DWORD *)(v363 + 860);
                                          *(_DWORD *)buf = 136447746;
                                          uint64_t v380 = "nw_http1_connection_send_bytes";
                                          __int16 v381 = 2082;
                                          *(void *)os_log_type_t v382 = v362;
                                          *(_WORD *)&v382[8] = 2080;
                                          *(void *)&v382[10] = " ";
                                          __int16 v383 = 1024;
                                          *(_DWORD *)os_log_type_t v384 = v62;
                                          *(_WORD *)&v384[4] = 1024;
                                          *(_DWORD *)&v384[6] = v63;
                                          LOWORD(v385) = 1024;
                                          *(_DWORD *)((char *)&v385 + 2) = v61;
                                          HIWORD(v385) = 2048;
                                          *(void *)v386 = v55;
                                          _os_log_impl(&dword_1830D4000, v60, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> setting complete on last output frame %p", buf, 0x3Cu);
                                        }
                                      }
                                    }
                                  }
                                }
                                nw_protocol_finalize_output_frames(v21, (uint64_t)&v375);
                                uint64_t v28 = v377;
                                if (v377)
                                {
                                  *(void *)os_log_type_t type = 0;
                                  os_log_type_t v371 = type;
                                  int v373 = 0;
                                  uint64_t v372 = 0x2000000000;
                                  *(void *)&__len[1] = MEMORY[0x1E4F143A8];
                                  uint64_t v366 = 0x40000000;
                                  int v367 = ___ZL30nw_http1_connection_send_bytesP19nw_http1_connectionPhjb_block_invoke;
                                  int v368 = &unk_1E5241520;
                                  v369 = type;
                                  do
                                  {
                                    if (!v28) {
                                      break;
                                    }
                                    uint64_t v56 = *(void *)(v28 + 32);
                                    char v57 = ((uint64_t (*)(_DWORD *))v367)(&__len[1]);
                                    uint64_t v28 = v56;
                                  }
                                  while ((v57 & 1) != 0);
                                  if ((*(unsigned char *)(v363 + 158) & 1) == 0)
                                  {
                                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                    networkd_settings_init();
                                    int v58 = gLogObj;
                                    if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
                                    {
                                      uint64_t v59 = *(void *)(v363 + 488);
                                      if (v59) {
                                        LODWORD(v59) = *(_DWORD *)(v59 + 424);
                                      }
                                      int v25 = *(_DWORD *)(*(void *)(v363 + 480) + 372);
                                      int v26 = *(_DWORD *)(v363 + 860);
                                      int v27 = *((_DWORD *)v371 + 6);
                                      *(_DWORD *)buf = 136447746;
                                      uint64_t v380 = "nw_http1_connection_send_bytes";
                                      __int16 v381 = 2082;
                                      *(void *)os_log_type_t v382 = v362;
                                      *(_WORD *)&v382[8] = 2080;
                                      *(void *)&v382[10] = " ";
                                      __int16 v383 = 1024;
                                      *(_DWORD *)os_log_type_t v384 = v25;
                                      *(_WORD *)&v384[4] = 1024;
                                      *(_DWORD *)&v384[6] = v26;
                                      LOWORD(v385) = 1024;
                                      *(_DWORD *)((char *)&v385 + 2) = v59;
                                      HIWORD(v385) = 1024;
                                      *(_DWORD *)v386 = v27;
                                      _os_log_impl(&dword_1830D4000, v58, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> failed to use %u frames, marking as failed", buf, 0x38u);
                                    }
                                  }
                                  _Block_object_dispose(type, 8);
                                }
                                uint64_t v23 = v364;
                                if (!v24) {
                                  goto LABEL_362;
                                }
                                goto LABEL_54;
                              }
                              nw_frame_collapse(v30);
                              nw_frame_unclaim(v30, v38, v36, 0);
                              uint64_t v39 = *(void *)(v30 + 32);
                              uint64_t v40 = *(void **)(v30 + 40);
                              if (v39)
                              {
                                *(void *)(v39 + 40) = v40;
                                uint64_t v40 = *(void **)(v30 + 40);
                              }
                              else
                              {
                                BOOL v378 = *(uint64_t **)(v30 + 40);
                              }
                              *uint64_t v40 = v39;
                              uint64_t v41 = v376;
                              *(void *)(v30 + 32) = 0;
                              *(void *)(v30 + 40) = v41;
                              *uint64_t v41 = v30;
                              v376 = (uint64_t *)(v30 + 32);
                              if (v32)
                              {
                                uint64_t v30 = v32;
                                if (v24) {
                                  continue;
                                }
                              }
                              goto LABEL_96;
                            }
                          }
                          __nwlog_obj();
                          *(_DWORD *)buf = 136446210;
                          uint64_t v380 = "nw_http1_connection_send_bytes";
                          uint64_t v228 = (char *)_os_log_send_and_compose_impl();
                          type[0] = OS_LOG_TYPE_ERROR;
                          LOBYTE(v377) = 0;
                          if (__nwlog_fault(v228, type, &v377))
                          {
                            if (type[0] == OS_LOG_TYPE_FAULT)
                            {
                              int v229 = __nwlog_obj();
                              os_log_type_t v230 = type[0];
                              if (!os_log_type_enabled(v229, type[0])) {
                                goto LABEL_359;
                              }
                              *(_DWORD *)buf = 136446210;
                              uint64_t v380 = "nw_http1_connection_send_bytes";
                              v231 = v229;
                              os_log_type_t v232 = v230;
                              os_log_type_t v233 = "%{public}s called with null output_handler";
LABEL_358:
                              _os_log_impl(&dword_1830D4000, v231, v232, v233, buf, 0xCu);
                              goto LABEL_359;
                            }
                            if (!(_BYTE)v377)
                            {
                              int v238 = __nwlog_obj();
                              os_log_type_t v239 = type[0];
                              if (!os_log_type_enabled(v238, type[0])) {
                                goto LABEL_359;
                              }
                              *(_DWORD *)buf = 136446210;
                              uint64_t v380 = "nw_http1_connection_send_bytes";
                              v231 = v238;
                              os_log_type_t v232 = v239;
                              os_log_type_t v233 = "%{public}s called with null output_handler, backtrace limit exceeded";
                              goto LABEL_358;
                            }
                            v234 = (char *)__nw_create_backtrace_string();
                            os_log_type_t v235 = __nwlog_obj();
                            os_log_type_t v236 = type[0];
                            BOOL v237 = os_log_type_enabled(v235, type[0]);
                            if (!v234)
                            {
                              if (!v237) {
                                goto LABEL_359;
                              }
                              *(_DWORD *)buf = 136446210;
                              uint64_t v380 = "nw_http1_connection_send_bytes";
                              v231 = v235;
                              os_log_type_t v232 = v236;
                              os_log_type_t v233 = "%{public}s called with null output_handler, no backtrace";
                              goto LABEL_358;
                            }
                            if (v237)
                            {
                              *(_DWORD *)buf = 136446466;
                              uint64_t v380 = "nw_http1_connection_send_bytes";
                              __int16 v381 = 2082;
                              *(void *)os_log_type_t v382 = v234;
                              _os_log_impl(&dword_1830D4000, v235, v236, "%{public}s called with null output_handler, dumping backtrace:%{public}s", buf, 0x16u);
                            }
                            free(v234);
                          }
LABEL_359:
                          if (v228) {
                            free(v228);
                          }
                          LODWORD(v23) = 0;
                          uint64_t v9 = v363;
LABEL_362:
                          uint64_t v10 = v357;
                          uint64_t v12 = v358;
                          uint64_t v11 = v360;
                          goto LABEL_363;
                        }
                        __nwlog_obj();
                        *(_DWORD *)buf = 136446210;
                        uint64_t v380 = "nw_http1_connection_send_bytes";
                        os_log_type_t v157 = (char *)_os_log_send_and_compose_impl();
                        type[0] = OS_LOG_TYPE_ERROR;
                        LOBYTE(v377) = 0;
                        if (!__nwlog_fault(v157, type, &v377)) {
                          goto LABEL_298;
                        }
                        if (type[0] == OS_LOG_TYPE_FAULT)
                        {
                          v163 = __nwlog_obj();
                          os_log_type_t v164 = type[0];
                          if (os_log_type_enabled(v163, type[0]))
                          {
                            *(_DWORD *)buf = 136446210;
                            uint64_t v380 = "nw_http1_connection_send_bytes";
                            int v160 = v163;
                            os_log_type_t v161 = v164;
                            BOOL v162 = "%{public}s called with null length";
                            goto LABEL_297;
                          }
                          goto LABEL_298;
                        }
                        if (!(_BYTE)v377)
                        {
                          v186 = __nwlog_obj();
                          os_log_type_t v187 = type[0];
                          if (os_log_type_enabled(v186, type[0]))
                          {
                            *(_DWORD *)buf = 136446210;
                            uint64_t v380 = "nw_http1_connection_send_bytes";
                            int v160 = v186;
                            os_log_type_t v161 = v187;
                            BOOL v162 = "%{public}s called with null length, backtrace limit exceeded";
                            goto LABEL_297;
                          }
                          goto LABEL_298;
                        }
                        uint64_t v174 = (char *)__nw_create_backtrace_string();
                        int v181 = __nwlog_obj();
                        os_log_type_t v182 = type[0];
                        BOOL v183 = os_log_type_enabled(v181, type[0]);
                        if (!v174)
                        {
                          if (v183)
                          {
                            *(_DWORD *)buf = 136446210;
                            uint64_t v380 = "nw_http1_connection_send_bytes";
                            int v160 = v181;
                            os_log_type_t v161 = v182;
                            BOOL v162 = "%{public}s called with null length, no backtrace";
                            goto LABEL_297;
                          }
                          goto LABEL_298;
                        }
                        if (v183)
                        {
                          *(_DWORD *)buf = 136446466;
                          uint64_t v380 = "nw_http1_connection_send_bytes";
                          __int16 v381 = 2082;
                          *(void *)os_log_type_t v382 = v174;
                          uint64_t v178 = v181;
                          os_log_type_t v179 = v182;
                          uint64_t v180 = "%{public}s called with null length, dumping backtrace:%{public}s";
                          goto LABEL_279;
                        }
                      }
                      else
                      {
                        __nwlog_obj();
                        *(_DWORD *)buf = 136446210;
                        uint64_t v380 = "nw_http1_connection_send_bytes";
                        os_log_type_t v157 = (char *)_os_log_send_and_compose_impl();
                        type[0] = OS_LOG_TYPE_ERROR;
                        LOBYTE(v377) = 0;
                        if (!__nwlog_fault(v157, type, &v377)) {
                          goto LABEL_298;
                        }
                        if (type[0] == OS_LOG_TYPE_FAULT)
                        {
                          BOOL v158 = __nwlog_obj();
                          os_log_type_t v159 = type[0];
                          if (os_log_type_enabled(v158, type[0]))
                          {
                            *(_DWORD *)buf = 136446210;
                            uint64_t v380 = "nw_http1_connection_send_bytes";
                            int v160 = v158;
                            os_log_type_t v161 = v159;
                            BOOL v162 = "%{public}s called with null buffer";
LABEL_297:
                            _os_log_impl(&dword_1830D4000, v160, v161, v162, buf, 0xCu);
                          }
LABEL_298:
                          if (v157) {
                            free(v157);
                          }
                          LODWORD(v23) = 0;
                          goto LABEL_363;
                        }
                        if (!(_BYTE)v377)
                        {
                          v184 = __nwlog_obj();
                          os_log_type_t v185 = type[0];
                          if (os_log_type_enabled(v184, type[0]))
                          {
                            *(_DWORD *)buf = 136446210;
                            uint64_t v380 = "nw_http1_connection_send_bytes";
                            int v160 = v184;
                            os_log_type_t v161 = v185;
                            BOOL v162 = "%{public}s called with null buffer, backtrace limit exceeded";
                            goto LABEL_297;
                          }
                          goto LABEL_298;
                        }
                        uint64_t v174 = (char *)__nw_create_backtrace_string();
                        v175 = __nwlog_obj();
                        os_log_type_t v176 = type[0];
                        BOOL v177 = os_log_type_enabled(v175, type[0]);
                        if (!v174)
                        {
                          if (v177)
                          {
                            *(_DWORD *)buf = 136446210;
                            uint64_t v380 = "nw_http1_connection_send_bytes";
                            int v160 = v175;
                            os_log_type_t v161 = v176;
                            BOOL v162 = "%{public}s called with null buffer, no backtrace";
                            goto LABEL_297;
                          }
                          goto LABEL_298;
                        }
                        if (v177)
                        {
                          *(_DWORD *)buf = 136446466;
                          uint64_t v380 = "nw_http1_connection_send_bytes";
                          __int16 v381 = 2082;
                          *(void *)os_log_type_t v382 = v174;
                          uint64_t v178 = v175;
                          os_log_type_t v179 = v176;
                          uint64_t v180 = "%{public}s called with null buffer, dumping backtrace:%{public}s";
LABEL_279:
                          _os_log_impl(&dword_1830D4000, v178, v179, v180, buf, 0x16u);
                        }
                      }
                      free(v174);
                      goto LABEL_298;
                    }
                    if ((*(_WORD *)(v11 + 204) & 4) == 0)
                    {
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      *(_DWORD *)buf = 136446466;
                      uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                      __int16 v381 = 2048;
                      *(void *)os_log_type_t v382 = v11;
                      uint64_t v64 = (char *)_os_log_send_and_compose_impl();
                      LOBYTE(__len[1]) = 16;
                      type[0] = OS_LOG_TYPE_DEFAULT;
                      if (!__nwlog_fault(v64, &__len[1], type)) {
                        goto LABEL_165;
                      }
                      if (LOBYTE(__len[1]) == 17)
                      {
                        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                        networkd_settings_init();
                        uint64_t v65 = gLogObj;
                        os_log_type_t v66 = __len[1];
                        if (!os_log_type_enabled((os_log_t)gLogObj, __len[1])) {
                          goto LABEL_165;
                        }
                        *(_DWORD *)buf = 136446466;
                        uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                        __int16 v381 = 2048;
                        *(void *)os_log_type_t v382 = v11;
                        int v67 = v65;
                        os_log_type_t v68 = v66;
                        uint64_t v69 = "%{public}s frame %p has no metadata";
                      }
                      else if (type[0])
                      {
                        int v81 = (char *)__nw_create_backtrace_string();
                        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                        networkd_settings_init();
                        int v82 = gLogObj;
                        os_log_type_t v83 = __len[1];
                        BOOL v84 = os_log_type_enabled((os_log_t)gLogObj, __len[1]);
                        if (v81)
                        {
                          if (v84)
                          {
                            *(_DWORD *)buf = 136446722;
                            uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                            __int16 v381 = 2048;
                            *(void *)os_log_type_t v382 = v11;
                            *(_WORD *)&v382[8] = 2082;
                            *(void *)&v382[10] = v81;
                            _os_log_impl(&dword_1830D4000, v82, v83, "%{public}s frame %p has no metadata, dumping backtrace:%{public}s", buf, 0x20u);
                          }
                          free(v81);
LABEL_165:
                          if (v64) {
                            free(v64);
                          }
                          uint64_t v9 = v363;
                          if (!v11) {
                            goto LABEL_391;
                          }
                          continue;
                        }
                        if (!v84) {
                          goto LABEL_165;
                        }
                        *(_DWORD *)buf = 136446466;
                        uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                        __int16 v381 = 2048;
                        *(void *)os_log_type_t v382 = v11;
                        int v67 = v82;
                        os_log_type_t v68 = v83;
                        uint64_t v69 = "%{public}s frame %p has no metadata, no backtrace";
                      }
                      else
                      {
                        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                        networkd_settings_init();
                        uint64_t v108 = gLogObj;
                        os_log_type_t v109 = __len[1];
                        if (!os_log_type_enabled((os_log_t)gLogObj, __len[1])) {
                          goto LABEL_165;
                        }
                        *(_DWORD *)buf = 136446466;
                        uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                        __int16 v381 = 2048;
                        *(void *)os_log_type_t v382 = v11;
                        int v67 = v108;
                        os_log_type_t v68 = v109;
                        uint64_t v69 = "%{public}s frame %p has no metadata, backtrace limit exceeded";
                      }
                      _os_log_impl(&dword_1830D4000, v67, v68, v69, buf, 0x16u);
                      goto LABEL_165;
                    }
                    if (*(unsigned char *)(v11 + 216)) {
                      goto LABEL_42;
                    }
                    nw_frame_unclaim(v11, (uint64_t)a2, 0xAu, 7u);
                    uint64_t v78 = *(void *)(v11 + 112);
                    if (v78)
                    {
                      if ((*(_WORD *)(v11 + 204) & 0x100) == 0 || !g_channel_check_validity) {
                        goto LABEL_128;
                      }
                      if (g_channel_check_validity(v11, *(void *)(v11 + 88)))
                      {
                        uint64_t v78 = *(void *)(v11 + 112);
LABEL_128:
                        uint64_t v79 = v11;
                        uint64_t v80 = v78 + *(unsigned int *)(v11 + 56);
                        goto LABEL_140;
                      }
                    }
                    uint64_t v79 = v11;
                    uint64_t v80 = 0;
LABEL_140:
                    uint64_t v361 = v79;
                    uint64_t v89 = *(void *)(v79 + 64);
                    if (v89)
                    {
                      int v90 = (*(unsigned __int8 *)(v89 + 66) >> 6) & 1;
                      unsigned int v91 = __len[0];
                      if (__len[0])
                      {
LABEL_142:
                        unsigned int v92 = -1;
                        unsigned int v93 = v91;
                        do
                        {
                          unsigned int v94 = v92++;
                          BOOL v95 = v93 >= 0x10;
                          v93 >>= 4;
                        }
                        while (v95);
                        if (v80)
                        {
                          int v96 = (unsigned char *)(v80 + v92);
                          *(_WORD *)(v96 + 1) = 2573;
                          do
                          {
                            if ((v91 & 0xF) >= 0xA) {
                              char v97 = (v91 & 0xF) + 55;
                            }
                            else {
                              char v97 = v91 & 0xF | 0x30;
                            }
                            *v96-- = v97;
                            BOOL v98 = v91 > 0xF;
                            v91 >>= 4;
                          }
                          while (v98);
LABEL_150:
                          unsigned int v99 = v94 + 2;
                          uint64_t v100 = v92 + 3;
                          if (v94 == 6)
                          {
                            unsigned int v101 = 0;
                            uint64_t v10 = v357;
                            goto LABEL_195;
                          }
                          uint64_t v10 = v357;
LABEL_194:
                          memmove((void *)(v80 + v100), (const void *)(v80 + 10), __len[0]);
                          unsigned int v101 = 8 - v99;
LABEL_195:
                          if (v80)
                          {
                            uint64_t v122 = v80 + v100 + __len[0];
                            *(_WORD *)uint64_t v122 = 2573;
                            uint64_t v11 = v361;
                            if (!v90) {
                              goto LABEL_204;
                            }
                            *(unsigned char *)(v122 + 6) = 10;
                            *(_DWORD *)(v122 + 2) = 218762544;
LABEL_198:
                            char v123 = v90 ^ 1;
                            if ((*v355 & 0x8000) == 0) {
                              char v123 = 1;
                            }
                            if ((v123 & 1) == 0)
                            {
                              if ((*(unsigned char *)(v363 + 158) & 1) == 0)
                              {
                                if (gLogDatapath)
                                {
                                  int v218 = __nwlog_obj();
                                  if (os_log_type_enabled(v218, OS_LOG_TYPE_DEBUG))
                                  {
                                    uint64_t v219 = *(void *)(v363 + 488);
                                    if (v219) {
                                      LODWORD(v219) = *(_DWORD *)(v219 + 424);
                                    }
                                    int v220 = *(_DWORD *)(*(void *)(v363 + 480) + 372);
                                    int v221 = *(_DWORD *)(v363 + 860);
                                    *(_DWORD *)buf = 136447746;
                                    uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                                    __int16 v381 = 2082;
                                    *(void *)os_log_type_t v382 = v362;
                                    *(_WORD *)&v382[8] = 2080;
                                    *(void *)&v382[10] = " ";
                                    __int16 v383 = 1024;
                                    *(_DWORD *)os_log_type_t v384 = v220;
                                    *(_WORD *)&v384[4] = 1024;
                                    *(_DWORD *)&v384[6] = v221;
                                    LOWORD(v385) = 1024;
                                    *(_DWORD *)((char *)&v385 + 2) = v219;
                                    HIWORD(v385) = 2048;
                                    uint64_t v11 = v361;
                                    *(void *)v386 = v361;
                                    _os_log_impl(&dword_1830D4000, v218, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> pending final chunk written to frame %p", buf, 0x3Cu);
                                    uint64_t v10 = v357;
                                  }
                                }
                              }
                              int v124 = *v355;
                              unsigned int v125 = v124 & 0xFFFF7FFF | (*((unsigned __int8 *)v355 + 2) << 16);
                              unsigned __int16 *v355 = v124 & 0x7FFF;
                              *((unsigned char *)v355 + 2) = BYTE2(v125);
                            }
LABEL_204:
                            if (v90) {
                              uint64_t v126 = 0;
                            }
                            else {
                              uint64_t v126 = 5;
                            }
                            uint64_t v127 = v101 + v126;
                            if (!__CFADD__(v101, v126))
                            {
                              uint64_t v9 = v363;
                              uint64_t v12 = v358;
                              if (!v127)
                              {
LABEL_229:
                                int v18 = (char *)nw_frame_unclaimed_bytes(v11, __len);
                                if (v11)
                                {
                                  if ((*(_WORD *)(v11 + 204) & 4) != 0)
                                  {
                                    char v146 = *(unsigned char *)(v11 + 216);
                                    *(void *)(v11 + 208) = v9;
                                    *(unsigned char *)(v11 + 216) = v146 & 0xFC | 1;
                                    goto LABEL_42;
                                  }
LABEL_231:
                                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                  networkd_settings_init();
                                  *(_DWORD *)buf = 136446466;
                                  uint64_t v380 = "nw_http1_frame_metadata_reset";
                                  __int16 v381 = 2048;
                                  *(void *)os_log_type_t v382 = v11;
                                  int v140 = (char *)_os_log_send_and_compose_impl();
                                  LOBYTE(__len[1]) = 16;
                                  type[0] = OS_LOG_TYPE_DEFAULT;
                                  if (__nwlog_fault(v140, &__len[1], type))
                                  {
                                    if (LOBYTE(__len[1]) == 17)
                                    {
                                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                      networkd_settings_init();
                                      uint64_t v141 = gLogObj;
                                      os_log_type_t v142 = __len[1];
                                      if (os_log_type_enabled((os_log_t)gLogObj, __len[1]))
                                      {
                                        *(_DWORD *)buf = 136446466;
                                        uint64_t v380 = "nw_http1_frame_metadata_reset";
                                        __int16 v381 = 2048;
                                        *(void *)os_log_type_t v382 = v361;
                                        int v143 = v141;
                                        os_log_type_t v144 = v142;
                                        os_log_type_t v145 = "%{public}s frame %p has no metadata";
LABEL_245:
                                        _os_log_impl(&dword_1830D4000, v143, v144, v145, buf, 0x16u);
                                      }
                                    }
                                    else if (type[0])
                                    {
                                      uint64_t v147 = (char *)__nw_create_backtrace_string();
                                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                      networkd_settings_init();
                                      int v148 = gLogObj;
                                      os_log_type_t v149 = __len[1];
                                      BOOL v150 = os_log_type_enabled((os_log_t)gLogObj, __len[1]);
                                      if (v147)
                                      {
                                        if (v150)
                                        {
                                          *(_DWORD *)buf = 136446722;
                                          uint64_t v380 = "nw_http1_frame_metadata_reset";
                                          __int16 v381 = 2048;
                                          *(void *)os_log_type_t v382 = v361;
                                          *(_WORD *)&v382[8] = 2082;
                                          *(void *)&v382[10] = v147;
                                          _os_log_impl(&dword_1830D4000, v148, v149, "%{public}s frame %p has no metadata, dumping backtrace:%{public}s", buf, 0x20u);
                                        }
                                        free(v147);
                                        goto LABEL_246;
                                      }
                                      if (v150)
                                      {
                                        *(_DWORD *)buf = 136446466;
                                        uint64_t v380 = "nw_http1_frame_metadata_reset";
                                        __int16 v381 = 2048;
                                        *(void *)os_log_type_t v382 = v361;
                                        int v143 = v148;
                                        os_log_type_t v144 = v149;
                                        os_log_type_t v145 = "%{public}s frame %p has no metadata, no backtrace";
                                        goto LABEL_245;
                                      }
                                    }
                                    else
                                    {
                                      BOOL v151 = __nwlog_obj();
                                      os_log_type_t v152 = __len[1];
                                      if (os_log_type_enabled(v151, __len[1]))
                                      {
                                        *(_DWORD *)buf = 136446466;
                                        uint64_t v380 = "nw_http1_frame_metadata_reset";
                                        __int16 v381 = 2048;
                                        *(void *)os_log_type_t v382 = v361;
                                        int v143 = v151;
                                        os_log_type_t v144 = v152;
                                        os_log_type_t v145 = "%{public}s frame %p has no metadata, backtrace limit exceeded";
                                        goto LABEL_245;
                                      }
                                    }
                                  }
LABEL_246:
                                  if (v140) {
                                    free(v140);
                                  }
                                  uint64_t v9 = v363;
                                  uint64_t v11 = v361;
                                  goto LABEL_42;
                                }
                                __nwlog_obj();
                                *(_DWORD *)buf = 136446210;
                                uint64_t v380 = "__nw_frame_get_metadata";
                                BOOL v194 = (char *)_os_log_send_and_compose_impl();
                                LOBYTE(__len[1]) = 16;
                                type[0] = OS_LOG_TYPE_DEFAULT;
                                if (__nwlog_fault(v194, &__len[1], type))
                                {
                                  if (LOBYTE(__len[1]) == 17)
                                  {
                                    v195 = __nwlog_obj();
                                    os_log_type_t v196 = __len[1];
                                    if (!os_log_type_enabled(v195, __len[1])) {
                                      goto LABEL_336;
                                    }
                                    *(_DWORD *)buf = 136446210;
                                    uint64_t v380 = "__nw_frame_get_metadata";
                                    BOOL v197 = v195;
                                    os_log_type_t v198 = v196;
                                    size_t v199 = "%{public}s called with null frame";
                                    goto LABEL_335;
                                  }
                                  if (type[0] == OS_LOG_TYPE_DEFAULT)
                                  {
                                    v224 = __nwlog_obj();
                                    os_log_type_t v225 = __len[1];
                                    uint64_t v10 = v357;
                                    uint64_t v12 = v358;
                                    uint64_t v11 = v361;
                                    if (!os_log_type_enabled(v224, __len[1])) {
                                      goto LABEL_336;
                                    }
                                    *(_DWORD *)buf = 136446210;
                                    uint64_t v380 = "__nw_frame_get_metadata";
                                    BOOL v197 = v224;
                                    os_log_type_t v198 = v225;
                                    size_t v199 = "%{public}s called with null frame, backtrace limit exceeded";
                                    goto LABEL_335;
                                  }
                                  uint64_t v210 = (char *)__nw_create_backtrace_string();
                                  int v211 = __nwlog_obj();
                                  os_log_type_t v212 = __len[1];
                                  BOOL v213 = os_log_type_enabled(v211, __len[1]);
                                  if (v210)
                                  {
                                    if (v213)
                                    {
                                      *(_DWORD *)buf = 136446466;
                                      uint64_t v380 = "__nw_frame_get_metadata";
                                      __int16 v381 = 2082;
                                      *(void *)os_log_type_t v382 = v210;
                                      _os_log_impl(&dword_1830D4000, v211, v212, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
                                    }
                                    free(v210);
                                    uint64_t v10 = v357;
                                    uint64_t v12 = v358;
                                    uint64_t v11 = v361;
                                    goto LABEL_336;
                                  }
                                  uint64_t v10 = v357;
                                  uint64_t v12 = v358;
                                  uint64_t v11 = v361;
                                  if (v213)
                                  {
                                    *(_DWORD *)buf = 136446210;
                                    uint64_t v380 = "__nw_frame_get_metadata";
                                    BOOL v197 = v211;
                                    os_log_type_t v198 = v212;
                                    size_t v199 = "%{public}s called with null frame, no backtrace";
LABEL_335:
                                    _os_log_impl(&dword_1830D4000, v197, v198, v199, buf, 0xCu);
                                  }
                                }
LABEL_336:
                                if (v194) {
                                  free(v194);
                                }
                                goto LABEL_231;
                              }
LABEL_228:
                              nw_frame_claim(v11, v77, 0, v127);
                              goto LABEL_229;
                            }
                            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                            networkd_settings_init();
                            *(_DWORD *)buf = 136446978;
                            uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                            __int16 v381 = 2082;
                            *(void *)os_log_type_t v382 = "unused_bytes";
                            *(_WORD *)&v382[8] = 2048;
                            *(void *)&v382[10] = v126;
                            __int16 v383 = 2048;
                            *(void *)os_log_type_t v384 = v101 + v126;
                            uint64_t v128 = (char *)_os_log_send_and_compose_impl();
                            LOBYTE(__len[1]) = 16;
                            type[0] = OS_LOG_TYPE_DEFAULT;
                            uint64_t v12 = v358;
                            if (__nwlog_fault(v128, &__len[1], type))
                            {
                              if (LOBYTE(__len[1]) == 17)
                              {
                                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                networkd_settings_init();
                                uint64_t v129 = gLogObj;
                                os_log_type_t v130 = __len[1];
                                if (os_log_type_enabled((os_log_t)gLogObj, __len[1]))
                                {
                                  *(_DWORD *)buf = 136446978;
                                  uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                                  __int16 v381 = 2082;
                                  *(void *)os_log_type_t v382 = "unused_bytes";
                                  *(_WORD *)&v382[8] = 2048;
                                  *(void *)&v382[10] = v126;
                                  __int16 v383 = 2048;
                                  *(void *)os_log_type_t v384 = v127;
                                  uint64_t v131 = v129;
                                  os_log_type_t v132 = v130;
                                  int v133 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_224:
                                  _os_log_impl(&dword_1830D4000, v131, v132, v133, buf, 0x2Au);
                                }
                              }
                              else if (type[0])
                              {
                                uint64_t v134 = (char *)__nw_create_backtrace_string();
                                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                networkd_settings_init();
                                uint64_t v135 = gLogObj;
                                os_log_type_t v136 = __len[1];
                                BOOL v137 = os_log_type_enabled((os_log_t)gLogObj, __len[1]);
                                if (v134)
                                {
                                  if (v137)
                                  {
                                    *(_DWORD *)buf = 136447234;
                                    uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                                    __int16 v381 = 2082;
                                    *(void *)os_log_type_t v382 = "unused_bytes";
                                    *(_WORD *)&v382[8] = 2048;
                                    *(void *)&v382[10] = v126;
                                    __int16 v383 = 2048;
                                    *(void *)os_log_type_t v384 = v127;
                                    *(_WORD *)&v384[8] = 2082;
                                    v385 = v134;
                                    _os_log_impl(&dword_1830D4000, v135, v136, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                                  }
                                  free(v134);
                                  uint64_t v12 = v358;
                                  goto LABEL_225;
                                }
                                uint64_t v12 = v358;
                                if (v137)
                                {
                                  *(_DWORD *)buf = 136446978;
                                  uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                                  __int16 v381 = 2082;
                                  *(void *)os_log_type_t v382 = "unused_bytes";
                                  *(_WORD *)&v382[8] = 2048;
                                  *(void *)&v382[10] = v126;
                                  __int16 v383 = 2048;
                                  *(void *)os_log_type_t v384 = v127;
                                  uint64_t v131 = v135;
                                  os_log_type_t v132 = v136;
                                  int v133 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                                  goto LABEL_224;
                                }
                              }
                              else
                              {
                                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                                networkd_settings_init();
                                uint64_t v138 = gLogObj;
                                os_log_type_t v139 = __len[1];
                                if (os_log_type_enabled((os_log_t)gLogObj, __len[1]))
                                {
                                  *(_DWORD *)buf = 136446978;
                                  uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                                  __int16 v381 = 2082;
                                  *(void *)os_log_type_t v382 = "unused_bytes";
                                  *(_WORD *)&v382[8] = 2048;
                                  *(void *)&v382[10] = v126;
                                  __int16 v383 = 2048;
                                  *(void *)os_log_type_t v384 = v127;
                                  uint64_t v131 = v138;
                                  os_log_type_t v132 = v139;
                                  int v133 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                                  goto LABEL_224;
                                }
                              }
                            }
LABEL_225:
                            uint64_t v9 = v363;
                            if (v128) {
                              free(v128);
                            }
                            LODWORD(v127) = -1;
                            uint64_t v11 = v361;
                            goto LABEL_228;
                          }
                          __nwlog_obj();
                          *(_DWORD *)buf = 136446210;
                          uint64_t v380 = "nw_http1_connection_write_chunk_trailer";
                          int v188 = (char *)_os_log_send_and_compose_impl();
                          LOBYTE(__len[1]) = 16;
                          type[0] = OS_LOG_TYPE_DEFAULT;
                          uint64_t v11 = v361;
                          if (__nwlog_fault(v188, &__len[1], type))
                          {
                            if (LOBYTE(__len[1]) == 17)
                            {
                              BOOL v189 = __nwlog_obj();
                              os_log_type_t v190 = __len[1];
                              if (!os_log_type_enabled(v189, __len[1])) {
                                goto LABEL_331;
                              }
                              *(_DWORD *)buf = 136446210;
                              uint64_t v380 = "nw_http1_connection_write_chunk_trailer";
                              int v191 = v189;
                              os_log_type_t v192 = v190;
                              BOOL v193 = "%{public}s called with null buffer";
                              goto LABEL_330;
                            }
                            if (type[0] == OS_LOG_TYPE_DEFAULT)
                            {
                              uint64_t v222 = __nwlog_obj();
                              os_log_type_t v223 = __len[1];
                              uint64_t v10 = v357;
                              uint64_t v11 = v361;
                              if (!os_log_type_enabled(v222, __len[1])) {
                                goto LABEL_331;
                              }
                              *(_DWORD *)buf = 136446210;
                              uint64_t v380 = "nw_http1_connection_write_chunk_trailer";
                              int v191 = v222;
                              os_log_type_t v192 = v223;
                              BOOL v193 = "%{public}s called with null buffer, backtrace limit exceeded";
                              goto LABEL_330;
                            }
                            int v206 = (char *)__nw_create_backtrace_string();
                            int v207 = __nwlog_obj();
                            os_log_type_t v208 = __len[1];
                            BOOL v209 = os_log_type_enabled(v207, __len[1]);
                            if (v206)
                            {
                              if (v209)
                              {
                                *(_DWORD *)buf = 136446466;
                                uint64_t v380 = "nw_http1_connection_write_chunk_trailer";
                                __int16 v381 = 2082;
                                *(void *)os_log_type_t v382 = v206;
                                _os_log_impl(&dword_1830D4000, v207, v208, "%{public}s called with null buffer, dumping backtrace:%{public}s", buf, 0x16u);
                              }
                              free(v206);
                              uint64_t v10 = v357;
                              uint64_t v11 = v361;
                              goto LABEL_331;
                            }
                            uint64_t v10 = v357;
                            uint64_t v11 = v361;
                            if (v209)
                            {
                              *(_DWORD *)buf = 136446210;
                              uint64_t v380 = "nw_http1_connection_write_chunk_trailer";
                              int v191 = v207;
                              os_log_type_t v192 = v208;
                              BOOL v193 = "%{public}s called with null buffer, no backtrace";
LABEL_330:
                              _os_log_impl(&dword_1830D4000, v191, v192, v193, buf, 0xCu);
                            }
                          }
LABEL_331:
                          if (v188) {
                            free(v188);
                          }
                          goto LABEL_198;
                        }
                        __nwlog_obj();
                        *(_DWORD *)buf = 136446210;
                        uint64_t v380 = "nw_http1_connection_write_chunk_header";
                        v200 = (char *)_os_log_send_and_compose_impl();
                        LOBYTE(__len[1]) = 16;
                        type[0] = OS_LOG_TYPE_DEFAULT;
                        if (__nwlog_fault(v200, &__len[1], type))
                        {
                          if (LOBYTE(__len[1]) == 17)
                          {
                            os_log_type_t v201 = __nwlog_obj();
                            os_log_type_t v202 = __len[1];
                            if (!os_log_type_enabled(v201, __len[1])) {
                              goto LABEL_343;
                            }
                            *(_DWORD *)buf = 136446210;
                            uint64_t v380 = "nw_http1_connection_write_chunk_header";
                            uint64_t v203 = v201;
                            os_log_type_t v204 = v202;
                            int v205 = "%{public}s called with null buffer";
                            goto LABEL_342;
                          }
                          if (type[0] == OS_LOG_TYPE_DEFAULT)
                          {
                            uint64_t v226 = __nwlog_obj();
                            os_log_type_t v227 = __len[1];
                            if (!os_log_type_enabled(v226, __len[1])) {
                              goto LABEL_343;
                            }
                            *(_DWORD *)buf = 136446210;
                            uint64_t v380 = "nw_http1_connection_write_chunk_header";
                            uint64_t v203 = v226;
                            os_log_type_t v204 = v227;
                            int v205 = "%{public}s called with null buffer, backtrace limit exceeded";
                            goto LABEL_342;
                          }
                          int v214 = (char *)__nw_create_backtrace_string();
                          int v215 = __nwlog_obj();
                          os_log_type_t v216 = __len[1];
                          BOOL v217 = os_log_type_enabled(v215, __len[1]);
                          if (v214)
                          {
                            if (v217)
                            {
                              *(_DWORD *)buf = 136446466;
                              uint64_t v380 = "nw_http1_connection_write_chunk_header";
                              __int16 v381 = 2082;
                              *(void *)os_log_type_t v382 = v214;
                              _os_log_impl(&dword_1830D4000, v215, v216, "%{public}s called with null buffer, dumping backtrace:%{public}s", buf, 0x16u);
                            }
                            free(v214);
                            goto LABEL_343;
                          }
                          if (v217)
                          {
                            *(_DWORD *)buf = 136446210;
                            uint64_t v380 = "nw_http1_connection_write_chunk_header";
                            uint64_t v203 = v215;
                            os_log_type_t v204 = v216;
                            int v205 = "%{public}s called with null buffer, no backtrace";
LABEL_342:
                            _os_log_impl(&dword_1830D4000, v203, v204, v205, buf, 0xCu);
                          }
                        }
LABEL_343:
                        if (v200) {
                          free(v200);
                        }
                        goto LABEL_150;
                      }
                    }
                    else
                    {
                      int v90 = 0;
                      unsigned int v91 = __len[0];
                      if (__len[0]) {
                        goto LABEL_142;
                      }
                    }
                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                    networkd_settings_init();
                    *(_DWORD *)buf = 136446210;
                    uint64_t v380 = "nw_http1_connection_write_chunk_header";
                    int v102 = (char *)_os_log_send_and_compose_impl();
                    LOBYTE(__len[1]) = 16;
                    type[0] = OS_LOG_TYPE_DEFAULT;
                    if (__nwlog_fault(v102, &__len[1], type))
                    {
                      if (LOBYTE(__len[1]) == 17)
                      {
                        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                        networkd_settings_init();
                        uint64_t v103 = gLogObj;
                        os_log_type_t v104 = __len[1];
                        if (os_log_type_enabled((os_log_t)gLogObj, __len[1]))
                        {
                          *(_DWORD *)buf = 136446210;
                          uint64_t v380 = "nw_http1_connection_write_chunk_header";
                          unsigned int v105 = v103;
                          os_log_type_t v106 = v104;
                          int v107 = "%{public}s called with null size";
LABEL_190:
                          _os_log_impl(&dword_1830D4000, v105, v106, v107, buf, 0xCu);
                        }
                      }
                      else if (type[0])
                      {
                        int v116 = (char *)__nw_create_backtrace_string();
                        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                        networkd_settings_init();
                        int v117 = gLogObj;
                        os_log_type_t v118 = __len[1];
                        BOOL v119 = os_log_type_enabled((os_log_t)gLogObj, __len[1]);
                        if (v116)
                        {
                          if (v119)
                          {
                            *(_DWORD *)buf = 136446466;
                            uint64_t v380 = "nw_http1_connection_write_chunk_header";
                            __int16 v381 = 2082;
                            *(void *)os_log_type_t v382 = v116;
                            _os_log_impl(&dword_1830D4000, v117, v118, "%{public}s called with null size, dumping backtrace:%{public}s", buf, 0x16u);
                          }
                          free(v116);
                          goto LABEL_191;
                        }
                        if (v119)
                        {
                          *(_DWORD *)buf = 136446210;
                          uint64_t v380 = "nw_http1_connection_write_chunk_header";
                          unsigned int v105 = v117;
                          os_log_type_t v106 = v118;
                          int v107 = "%{public}s called with null size, no backtrace";
                          goto LABEL_190;
                        }
                      }
                      else
                      {
                        int v120 = __nwlog_obj();
                        os_log_type_t v121 = __len[1];
                        if (os_log_type_enabled(v120, __len[1]))
                        {
                          *(_DWORD *)buf = 136446210;
                          uint64_t v380 = "nw_http1_connection_write_chunk_header";
                          unsigned int v105 = v120;
                          os_log_type_t v106 = v121;
                          int v107 = "%{public}s called with null size, backtrace limit exceeded";
                          goto LABEL_190;
                        }
                      }
                    }
LABEL_191:
                    if (v102) {
                      free(v102);
                    }
                    unsigned int v99 = 0;
                    uint64_t v100 = 2;
                    goto LABEL_194;
                  }
                }
              }
              else
              {
                int v18 = 0;
                if (*(unsigned char *)(v9 + 158)) {
                  goto LABEL_39;
                }
              }
              break;
            }
            if (gLogDatapath)
            {
              os_log_type_t v153 = __nwlog_obj();
              if (os_log_type_enabled(v153, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v154 = *(void *)(v9 + 488);
                if (v154) {
                  LODWORD(v154) = *(_DWORD *)(v154 + 424);
                }
                int v155 = *(_DWORD *)(*(void *)(v9 + 480) + 372);
                int v156 = *(_DWORD *)(v9 + 860);
                *(_DWORD *)buf = 136448002;
                uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                __int16 v381 = 2082;
                *(void *)os_log_type_t v382 = v362;
                *(_WORD *)&v382[8] = 2080;
                *(void *)&v382[10] = " ";
                __int16 v383 = 1024;
                *(_DWORD *)os_log_type_t v384 = v155;
                *(_WORD *)&v384[4] = 1024;
                *(_DWORD *)&v384[6] = v156;
                LOWORD(v385) = 1024;
                *(_DWORD *)((char *)&v385 + 2) = v154;
                HIWORD(v385) = 2048;
                *(void *)v386 = v11;
                *(_WORD *)&v386[8] = 1024;
                LODWORD(v387) = __len[0];
                _os_log_impl(&dword_1830D4000, v153, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> draining frame %p with length %u", buf, 0x42u);
              }
            }
            goto LABEL_39;
          }
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
          uint64_t v288 = (char *)_os_log_send_and_compose_impl();
          LOBYTE(__len[1]) = 16;
          type[0] = OS_LOG_TYPE_DEFAULT;
          if (!__nwlog_fault(v288, &__len[1], type)) {
            goto LABEL_453;
          }
          if (LOBYTE(__len[1]) == 17)
          {
            unsigned int v319 = __nwlog_obj();
            os_log_type_t v320 = __len[1];
            if (!os_log_type_enabled(v319, __len[1])) {
              goto LABEL_453;
            }
            *(_DWORD *)buf = 136446210;
            uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
            v291 = "%{public}s called with null http1_connection->current_stream";
          }
          else if (type[0])
          {
            BOOL v331 = (char *)__nw_create_backtrace_string();
            unsigned int v319 = __nwlog_obj();
            os_log_type_t v320 = __len[1];
            BOOL v332 = os_log_type_enabled(v319, __len[1]);
            if (v331)
            {
              if (v332)
              {
                *(_DWORD *)buf = 136446466;
                uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                __int16 v381 = 2082;
                *(void *)os_log_type_t v382 = v331;
                _os_log_impl(&dword_1830D4000, v319, v320, "%{public}s called with null http1_connection->current_stream, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v331);
              if (!v288) {
                goto LABEL_393;
              }
LABEL_454:
              free(v288);
              goto LABEL_393;
            }
            if (!v332) {
              goto LABEL_453;
            }
            *(_DWORD *)buf = 136446210;
            uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
            v291 = "%{public}s called with null http1_connection->current_stream, no backtrace";
          }
          else
          {
            unsigned int v319 = __nwlog_obj();
            os_log_type_t v320 = __len[1];
            if (!os_log_type_enabled(v319, __len[1])) {
              goto LABEL_453;
            }
            *(_DWORD *)buf = 136446210;
            uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
            v291 = "%{public}s called with null http1_connection->current_stream, backtrace limit exceeded";
          }
        }
        else
        {
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
          uint64_t v288 = (char *)_os_log_send_and_compose_impl();
          LOBYTE(__len[1]) = 16;
          type[0] = OS_LOG_TYPE_DEFAULT;
          if (!__nwlog_fault(v288, &__len[1], type)) {
            goto LABEL_453;
          }
          if (LOBYTE(__len[1]) == 17)
          {
            unsigned int v319 = __nwlog_obj();
            os_log_type_t v320 = __len[1];
            if (!os_log_type_enabled(v319, __len[1])) {
              goto LABEL_453;
            }
            *(_DWORD *)buf = 136446210;
            uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
            v291 = "%{public}s called with null http1_connection->protocol_http1";
          }
          else if (type[0])
          {
            v329 = (char *)__nw_create_backtrace_string();
            unsigned int v319 = __nwlog_obj();
            os_log_type_t v320 = __len[1];
            BOOL v330 = os_log_type_enabled(v319, __len[1]);
            if (v329)
            {
              if (v330)
              {
                *(_DWORD *)buf = 136446466;
                uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
                __int16 v381 = 2082;
                *(void *)os_log_type_t v382 = v329;
                _os_log_impl(&dword_1830D4000, v319, v320, "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v329);
              goto LABEL_453;
            }
            if (!v330)
            {
LABEL_453:
              if (!v288) {
                goto LABEL_393;
              }
              goto LABEL_454;
            }
            *(_DWORD *)buf = 136446210;
            uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
            v291 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
          }
          else
          {
            unsigned int v319 = __nwlog_obj();
            os_log_type_t v320 = __len[1];
            if (!os_log_type_enabled(v319, __len[1])) {
              goto LABEL_453;
            }
            *(_DWORD *)buf = 136446210;
            uint64_t v380 = "nw_http1_connection_drain_outbound_frames";
            v291 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
          }
        }
        v300 = v319;
        os_log_type_t v301 = v320;
        uint32_t v302 = 12;
        goto LABEL_452;
      }
LABEL_596:
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      uint64_t v380 = "nw_protocol_http1_output_available";
      v308 = (char *)_os_log_send_and_compose_impl();
      LOBYTE(__len[1]) = 16;
      type[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v308, &__len[1], type)) {
        goto LABEL_610;
      }
      if (LOBYTE(__len[1]) == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v309 = gLogObj;
        os_log_type_t v310 = __len[1];
        if (!os_log_type_enabled((os_log_t)gLogObj, __len[1])) {
          goto LABEL_610;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_protocol_http1_output_available";
        v311 = "%{public}s called with null http1_connection";
        goto LABEL_608;
      }
      if (type[0] == OS_LOG_TYPE_DEFAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v309 = gLogObj;
        os_log_type_t v310 = __len[1];
        if (!os_log_type_enabled((os_log_t)gLogObj, __len[1])) {
          goto LABEL_610;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_protocol_http1_output_available";
        v311 = "%{public}s called with null http1_connection, backtrace limit exceeded";
        goto LABEL_608;
      }
      uint64_t v349 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      v346 = gLogObj;
      os_log_type_t v347 = __len[1];
      BOOL v350 = os_log_type_enabled((os_log_t)gLogObj, __len[1]);
      if (v349)
      {
        if (v350)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v380 = "nw_protocol_http1_output_available";
          __int16 v381 = 2082;
          *(void *)os_log_type_t v382 = v349;
          _os_log_impl(&dword_1830D4000, v346, v347, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v349);
        if (!v308) {
          return;
        }
LABEL_611:
        free(v308);
        return;
      }
      if (v350)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_protocol_http1_output_available";
        v311 = "%{public}s called with null http1_connection, no backtrace";
LABEL_615:
        int v351 = v346;
        os_log_type_t v352 = v347;
        goto LABEL_609;
      }
      goto LABEL_610;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v380 = "nw_http1_get_connection_for_protocol";
    v325 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(__len[1]) = 16;
    type[0] = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v325, &__len[1], type))
    {
      if (LOBYTE(__len[1]) == 17)
      {
        os_log_type_t v326 = __nwlog_obj();
        os_log_type_t v327 = __len[1];
        if (!os_log_type_enabled(v326, __len[1])) {
          goto LABEL_594;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_http1_get_connection_for_protocol";
        v328 = "%{public}s called with null handle->http1_stream";
        goto LABEL_593;
      }
      if (type[0] == OS_LOG_TYPE_DEFAULT)
      {
        os_log_type_t v326 = __nwlog_obj();
        os_log_type_t v327 = __len[1];
        if (!os_log_type_enabled(v326, __len[1])) {
          goto LABEL_594;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_http1_get_connection_for_protocol";
        v328 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
        goto LABEL_593;
      }
      v335 = (char *)__nw_create_backtrace_string();
      os_log_type_t v326 = __nwlog_obj();
      os_log_type_t v327 = __len[1];
      BOOL v336 = os_log_type_enabled(v326, __len[1]);
      if (v335)
      {
        if (v336)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v380 = "nw_http1_get_connection_for_protocol";
          __int16 v381 = 2082;
          *(void *)os_log_type_t v382 = v335;
          _os_log_impl(&dword_1830D4000, v326, v327, "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v335);
        goto LABEL_594;
      }
      if (v336)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v380 = "nw_http1_get_connection_for_protocol";
        v328 = "%{public}s called with null handle->http1_stream, no backtrace";
LABEL_593:
        _os_log_impl(&dword_1830D4000, v326, v327, v328, buf, 0xCu);
      }
    }
LABEL_594:
    if (v325) {
      free(v325);
    }
    goto LABEL_596;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  uint64_t v380 = "nw_protocol_http1_output_available";
  v308 = (char *)_os_log_send_and_compose_impl();
  LOBYTE(__len[1]) = 16;
  type[0] = OS_LOG_TYPE_DEFAULT;
  if (!__nwlog_fault(v308, &__len[1], type)) {
    goto LABEL_610;
  }
  if (LOBYTE(__len[1]) == 17)
  {
    uint64_t v309 = __nwlog_obj();
    os_log_type_t v310 = __len[1];
    if (!os_log_type_enabled(v309, __len[1])) {
      goto LABEL_610;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v380 = "nw_protocol_http1_output_available";
    v311 = "%{public}s called with null other_protocol";
    goto LABEL_608;
  }
  if (type[0] == OS_LOG_TYPE_DEFAULT)
  {
    uint64_t v309 = __nwlog_obj();
    os_log_type_t v310 = __len[1];
    if (!os_log_type_enabled(v309, __len[1])) {
      goto LABEL_610;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v380 = "nw_protocol_http1_output_available";
    v311 = "%{public}s called with null other_protocol, backtrace limit exceeded";
    goto LABEL_608;
  }
  char v317 = (char *)__nw_create_backtrace_string();
  uint64_t v309 = __nwlog_obj();
  os_log_type_t v310 = __len[1];
  BOOL v318 = os_log_type_enabled(v309, __len[1]);
  if (!v317)
  {
    if (!v318) {
      goto LABEL_610;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v380 = "nw_protocol_http1_output_available";
    v311 = "%{public}s called with null other_protocol, no backtrace";
    goto LABEL_608;
  }
  if (v318)
  {
    *(_DWORD *)buf = 136446466;
    uint64_t v380 = "nw_protocol_http1_output_available";
    __int16 v381 = 2082;
    *(void *)os_log_type_t v382 = v317;
    _os_log_impl(&dword_1830D4000, v309, v310, "%{public}s called with null other_protocol, dumping backtrace:%{public}s", buf, 0x16u);
  }
  free(v317);
  if (v308) {
    goto LABEL_611;
  }
}

void nw_protocol_http1_input_available(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v406 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v113 = (char *)_os_log_send_and_compose_impl();
    v404[0] = 16;
    v400[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v113, v404, v400)) {
      goto LABEL_430;
    }
    if (v404[0] == 17)
    {
      int v114 = __nwlog_obj();
      os_log_type_t v115 = v404[0];
      if (!os_log_type_enabled(v114, (os_log_type_t)v404[0])) {
        goto LABEL_430;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v116 = "%{public}s called with null protocol";
    }
    else if (v400[0])
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v114 = __nwlog_obj();
      os_log_type_t v115 = v404[0];
      BOOL v122 = os_log_type_enabled(v114, (os_log_type_t)v404[0]);
      if (backtrace_string)
      {
        if (v122)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = backtrace_string;
          _os_log_impl(&dword_1830D4000, v114, v115, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_430:
        if (!v113) {
          goto LABEL_432;
        }
LABEL_431:
        free(v113);
        goto LABEL_432;
      }
      if (!v122) {
        goto LABEL_430;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v116 = "%{public}s called with null protocol, no backtrace";
    }
    else
    {
      int v114 = __nwlog_obj();
      os_log_type_t v115 = v404[0];
      if (!os_log_type_enabled(v114, (os_log_type_t)v404[0])) {
        goto LABEL_430;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v116 = "%{public}s called with null protocol, backtrace limit exceeded";
    }
    goto LABEL_429;
  }
  handle = (char *)a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v113 = (char *)_os_log_send_and_compose_impl();
    v404[0] = 16;
    v400[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v113, v404, v400)) {
      goto LABEL_430;
    }
    if (v404[0] != 17)
    {
      if (v400[0] == OS_LOG_TYPE_DEFAULT)
      {
        int v114 = __nwlog_obj();
        os_log_type_t v115 = v404[0];
        if (!os_log_type_enabled(v114, (os_log_type_t)v404[0])) {
          goto LABEL_430;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        int v116 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_429;
      }
      char v123 = (char *)__nw_create_backtrace_string();
      int v114 = __nwlog_obj();
      os_log_type_t v115 = v404[0];
      BOOL v124 = os_log_type_enabled(v114, (os_log_type_t)v404[0]);
      if (!v123)
      {
        if (!v124) {
          goto LABEL_430;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        int v116 = "%{public}s called with null handle, no backtrace";
        goto LABEL_429;
      }
      if (v124)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v123;
        unsigned int v125 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_230:
        _os_log_impl(&dword_1830D4000, v114, v115, v125, buf, 0x16u);
      }
LABEL_231:
      free(v123);
      if (!v113) {
        goto LABEL_432;
      }
      goto LABEL_431;
    }
    int v114 = __nwlog_obj();
    os_log_type_t v115 = v404[0];
    if (!os_log_type_enabled(v114, (os_log_type_t)v404[0])) {
      goto LABEL_430;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v116 = "%{public}s called with null handle";
LABEL_429:
    _os_log_impl(&dword_1830D4000, v114, v115, v116, buf, 0xCu);
    goto LABEL_430;
  }
  int v4 = *((_DWORD *)handle + 6);
  uint64_t v5 = (uint64_t *)a1->handle;
  if (v4 == 1) {
    goto LABEL_10;
  }
  if (v4 != 2)
  {
    if (v4 != 3)
    {
LABEL_432:
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
      int v117 = (char *)_os_log_send_and_compose_impl();
      v404[0] = 16;
      v400[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v117, v404, v400)) {
        goto LABEL_490;
      }
      if (v404[0] == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        os_log_type_t v118 = gLogObj;
        os_log_type_t v119 = v404[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v404[0])) {
          goto LABEL_490;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
        int v120 = "%{public}s called with null http1";
        goto LABEL_488;
      }
      if (v400[0] == OS_LOG_TYPE_DEFAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        os_log_type_t v118 = gLogObj;
        os_log_type_t v119 = v404[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v404[0])) {
          goto LABEL_490;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
        int v120 = "%{public}s called with null http1, backtrace limit exceeded";
        goto LABEL_488;
      }
      int v229 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      os_log_type_t v230 = gLogObj;
      os_log_type_t v231 = v404[0];
      BOOL v232 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v404[0]);
      if (!v229)
      {
        if (!v232) {
          goto LABEL_490;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
        int v120 = "%{public}s called with null http1, no backtrace";
        goto LABEL_495;
      }
      if (v232)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v229;
        _os_log_impl(&dword_1830D4000, v230, v231, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v229);
LABEL_490:
      if (!v117) {
        return;
      }
      goto LABEL_491;
    }
    uint64_t v6 = *((void *)handle + 2);
    if (v6)
    {
      uint64_t v5 = (uint64_t *)(v6 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v113 = (char *)_os_log_send_and_compose_impl();
    v404[0] = 16;
    v400[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v113, v404, v400)) {
      goto LABEL_430;
    }
    if (v404[0] == 17)
    {
      int v114 = __nwlog_obj();
      os_log_type_t v115 = v404[0];
      if (!os_log_type_enabled(v114, (os_log_type_t)v404[0])) {
        goto LABEL_430;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v116 = "%{public}s called with null handle->http1_connection";
      goto LABEL_429;
    }
    if (v400[0] == OS_LOG_TYPE_DEFAULT)
    {
      int v114 = __nwlog_obj();
      os_log_type_t v115 = v404[0];
      if (!os_log_type_enabled(v114, (os_log_type_t)v404[0])) {
        goto LABEL_430;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v116 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
      goto LABEL_429;
    }
    char v123 = (char *)__nw_create_backtrace_string();
    int v114 = __nwlog_obj();
    os_log_type_t v115 = v404[0];
    BOOL v186 = os_log_type_enabled(v114, (os_log_type_t)v404[0]);
    if (!v123)
    {
      if (!v186) {
        goto LABEL_430;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v116 = "%{public}s called with null handle->http1_connection, no backtrace";
      goto LABEL_429;
    }
    if (v186)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v123;
      unsigned int v125 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
      goto LABEL_230;
    }
    goto LABEL_231;
  }
  uint64_t v7 = *((void *)handle + 1);
  if (!v7)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v113 = (char *)_os_log_send_and_compose_impl();
    v404[0] = 16;
    v400[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v113, v404, v400)) {
      goto LABEL_430;
    }
    if (v404[0] == 17)
    {
      int v114 = __nwlog_obj();
      os_log_type_t v115 = v404[0];
      if (!os_log_type_enabled(v114, (os_log_type_t)v404[0])) {
        goto LABEL_430;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v116 = "%{public}s called with null handle->http1_stream";
      goto LABEL_429;
    }
    if (v400[0] == OS_LOG_TYPE_DEFAULT)
    {
      int v114 = __nwlog_obj();
      os_log_type_t v115 = v404[0];
      if (!os_log_type_enabled(v114, (os_log_type_t)v404[0])) {
        goto LABEL_430;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v116 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_429;
    }
    char v123 = (char *)__nw_create_backtrace_string();
    int v114 = __nwlog_obj();
    os_log_type_t v115 = v404[0];
    BOOL v187 = os_log_type_enabled(v114, (os_log_type_t)v404[0]);
    if (!v123)
    {
      if (!v187) {
        goto LABEL_430;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v116 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_429;
    }
    if (v187)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v123;
      unsigned int v125 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_230;
    }
    goto LABEL_231;
  }
  uint64_t v5 = (uint64_t *)(v7 + 248);
LABEL_10:
  uint64_t v8 = *v5;
  if (!*v5) {
    goto LABEL_432;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
    int v117 = (char *)_os_log_send_and_compose_impl();
    v404[0] = 16;
    v400[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v117, v404, v400)) {
      goto LABEL_490;
    }
    if (v404[0] == 17)
    {
      os_log_type_t v118 = __nwlog_obj();
      os_log_type_t v119 = v404[0];
      if (!os_log_type_enabled(v118, (os_log_type_t)v404[0])) {
        goto LABEL_490;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
      int v120 = "%{public}s called with null other_protocol";
LABEL_488:
      int v256 = v118;
      os_log_type_t v257 = v119;
LABEL_489:
      _os_log_impl(&dword_1830D4000, v256, v257, v120, buf, 0xCu);
      goto LABEL_490;
    }
    if (v400[0] == OS_LOG_TYPE_DEFAULT)
    {
      os_log_type_t v118 = __nwlog_obj();
      os_log_type_t v119 = v404[0];
      if (!os_log_type_enabled(v118, (os_log_type_t)v404[0])) {
        goto LABEL_490;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
      int v120 = "%{public}s called with null other_protocol, backtrace limit exceeded";
      goto LABEL_488;
    }
    os_log_type_t v157 = (char *)__nw_create_backtrace_string();
    os_log_type_t v118 = __nwlog_obj();
    os_log_type_t v119 = v404[0];
    BOOL v170 = os_log_type_enabled(v118, (os_log_type_t)v404[0]);
    if (!v157)
    {
      if (!v170) {
        goto LABEL_490;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
      int v120 = "%{public}s called with null other_protocol, no backtrace";
      goto LABEL_488;
    }
    if (!v170) {
      goto LABEL_291;
    }
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v157;
    os_log_type_t v159 = "%{public}s called with null other_protocol, dumping backtrace:%{public}s";
    goto LABEL_290;
  }
  if (v4 == 2)
  {
    uint64_t v10 = *((void *)handle + 1);
    if (v10)
    {
      uint64_t v9 = (uint64_t *)(v10 + 256);
      goto LABEL_17;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
    uint64_t v171 = (char *)_os_log_send_and_compose_impl();
    v404[0] = 16;
    v400[0] = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v171, v404, v400))
    {
      if (v404[0] == 17)
      {
        int v172 = __nwlog_obj();
        os_log_type_t v173 = v404[0];
        if (!os_log_type_enabled(v172, (os_log_type_t)v404[0])) {
          goto LABEL_474;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
        uint64_t v174 = "%{public}s called with null handle->http1_stream";
        goto LABEL_473;
      }
      if (v400[0] == OS_LOG_TYPE_DEFAULT)
      {
        int v172 = __nwlog_obj();
        os_log_type_t v173 = v404[0];
        if (!os_log_type_enabled(v172, (os_log_type_t)v404[0])) {
          goto LABEL_474;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
        uint64_t v174 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
        goto LABEL_473;
      }
      int v188 = (char *)__nw_create_backtrace_string();
      int v172 = __nwlog_obj();
      os_log_type_t v173 = v404[0];
      BOOL v189 = os_log_type_enabled(v172, (os_log_type_t)v404[0]);
      if (v188)
      {
        if (v189)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v188;
          _os_log_impl(&dword_1830D4000, v172, v173, "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v188);
        goto LABEL_474;
      }
      if (v189)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
        uint64_t v174 = "%{public}s called with null handle->http1_stream, no backtrace";
LABEL_473:
        _os_log_impl(&dword_1830D4000, v172, v173, v174, buf, 0xCu);
      }
    }
LABEL_474:
    if (v171) {
      free(v171);
    }
LABEL_476:
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
    int v117 = (char *)_os_log_send_and_compose_impl();
    v404[0] = 16;
    v400[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v117, v404, v400)) {
      goto LABEL_490;
    }
    if (v404[0] == 17)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      os_log_type_t v118 = gLogObj;
      os_log_type_t v119 = v404[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v404[0])) {
        goto LABEL_490;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
      int v120 = "%{public}s called with null http1_connection";
      goto LABEL_488;
    }
    if (v400[0] == OS_LOG_TYPE_DEFAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      os_log_type_t v118 = gLogObj;
      os_log_type_t v119 = v404[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v404[0])) {
        goto LABEL_490;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
      int v120 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      goto LABEL_488;
    }
    uint64_t v254 = (char *)__nw_create_backtrace_string();
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    os_log_type_t v230 = gLogObj;
    os_log_type_t v231 = v404[0];
    BOOL v255 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v404[0]);
    if (v254)
    {
      if (v255)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v254;
        _os_log_impl(&dword_1830D4000, v230, v231, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v254);
      if (!v117) {
        return;
      }
LABEL_491:
      free(v117);
      return;
    }
    if (v255)
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
      int v120 = "%{public}s called with null http1_connection, no backtrace";
LABEL_495:
      int v256 = v230;
      os_log_type_t v257 = v231;
      goto LABEL_489;
    }
    goto LABEL_490;
  }
  if (v4 != 3) {
    goto LABEL_476;
  }
  uint64_t v9 = (uint64_t *)(handle + 16);
LABEL_17:
  uint64_t v11 = *v9;
  if (!*v9) {
    goto LABEL_476;
  }
  uint64_t v12 = *(void *)(v11 + 488);
  if (!v12)
  {
    if ((*(unsigned char *)(v8 + 376) & 1) == 0)
    {
      if (*(unsigned char *)(v11 + 158)) {
        return;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v21 = gLogObj;
      if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG)) {
        return;
      }
      uint64_t v22 = *(void *)(v11 + 488);
      int v23 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
      int v24 = *(_DWORD *)(v11 + 860);
      if (v22) {
        LODWORD(v22) = *(_DWORD *)(v22 + 424);
      }
      identifier = (nw_protocol_identifier *)"invalid";
      if (a2->identifier) {
        identifier = a2->identifier;
      }
      goto LABEL_61;
    }
    if ((*(unsigned char *)(v11 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        os_log_type_t v190 = __nwlog_obj();
        if (os_log_type_enabled(v190, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v191 = *(void *)(v11 + 488);
          int v192 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
          int v193 = *(_DWORD *)(v11 + 860);
          if (v191) {
            LODWORD(v191) = *(_DWORD *)(v191 + 424);
          }
          *(_DWORD *)buf = 136447746;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v11 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v192;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v193;
          *(_WORD *)&unsigned char buf[44] = 1024;
          *(_DWORD *)&buf[46] = v191;
          *(_WORD *)&buf[50] = 2048;
          *(void *)&buf[52] = v11;
          _os_log_impl(&dword_1830D4000, v190, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called on idle server connection %p, triggering new flow", buf, 0x3Cu);
        }
      }
    }
    if ((*(unsigned char *)(v8 + 376) & 1) == 0)
    {
      if ((*(unsigned char *)(v8 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          int v27 = __nwlog_obj();
          if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
          {
            int v28 = *(_DWORD *)(v8 + 372);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v8 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v28;
            _os_log_impl(&dword_1830D4000, v27, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called when not in server mode, ignoring", buf, 0x26u);
          }
        }
      }
      goto LABEL_240;
    }
    BOOL v31 = *(void ***)(v8 + 328);
    if (!v31)
    {
      if (*(unsigned char *)(v11 + 158)) {
        goto LABEL_240;
      }
      uint64_t v33 = __nwlog_obj();
      if (!os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_240;
      }
      uint64_t v38 = *(void *)(v11 + 488);
      int v39 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
      int v40 = *(_DWORD *)(v11 + 860);
      if (v38) {
        LODWORD(v38) = *(_DWORD *)(v38 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v11 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v39;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v40;
      *(_WORD *)&unsigned char buf[44] = 1024;
      *(_DWORD *)&buf[46] = v38;
      uint64_t v37 = "%{public}s %{public}s%s<i%u:c%u:s%u> called without listen handler, ignoring";
      goto LABEL_80;
    }
    uint64_t v32 = *v31;
    if (v32 && *v32)
    {
      if (((*(unsigned __int16 *)(v11 + 872) | (*(unsigned __int8 *)(v11 + 874) << 16)) & 0x20000) != 0
        || (*(_WORD *)(v11 + 872) & 0x14) != 0 && *(void *)(v11 + 616))
      {
        if (*(unsigned char *)(v11 + 158)) {
          goto LABEL_240;
        }
        if (!gLogDatapath) {
          goto LABEL_240;
        }
        uint64_t v33 = __nwlog_obj();
        if (!os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_240;
        }
        uint64_t v34 = *(void *)(v11 + 488);
        int v35 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
        int v36 = *(_DWORD *)(v11 + 860);
        if (v34) {
          LODWORD(v34) = *(_DWORD *)(v34 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_detect_next_request";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v11 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v35;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v36;
        *(_WORD *)&unsigned char buf[44] = 1024;
        *(_DWORD *)&buf[46] = v34;
        uint64_t v37 = "%{public}s %{public}s%s<i%u:c%u:s%u> not attempting to read more on connection awaiting a new flow, awaiti"
              "ng disconnect or remove_input_handler";
        goto LABEL_80;
      }
      *(void *)v400 = 0;
      os_log_type_t v401 = v400;
      if (nw_protocol_get_input_frames(*(void *)(v11 + 32), v11, 1, 0xFFFFFFFFLL, 1, (uint64_t)v400))
      {
        if (!(*(unsigned char *)(v11 + 158) & 1 | (gLogDatapath == 0)))
        {
          int v266 = __nwlog_obj();
          if (os_log_type_enabled(v266, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v267 = *(void *)(v11 + 488);
            int v268 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
            int v269 = *(_DWORD *)(v11 + 860);
            if (v267) {
              LODWORD(v267) = *(_DWORD *)(v267 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_detect_next_request";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v11 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v268;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v269;
            *(_WORD *)&unsigned char buf[44] = 1024;
            *(_DWORD *)&buf[46] = v267;
            _os_log_impl(&dword_1830D4000, v266, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> received a frame for non-idle connection, deferring new flow", buf, 0x32u);
          }
        }
        os_log_type_t v42 = *(_DWORD **)v400;
        if (!*(void *)v400)
        {
          if (*(unsigned char *)(v11 + 158)) {
            goto LABEL_239;
          }
          if (!gLogDatapath) {
            goto LABEL_239;
          }
          os_log_type_t v87 = __nwlog_obj();
          if (!os_log_type_enabled(v87, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_239;
          }
          uint64_t v88 = *(void *)(v11 + 488);
          int v89 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
          int v90 = *(_DWORD *)(v11 + 860);
          if (v88) {
            LODWORD(v88) = *(_DWORD *)(v88 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_move_frame_array_to_unprocessed_input_frames";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v11 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v89;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v90;
          *(_WORD *)&unsigned char buf[44] = 1024;
          *(_DWORD *)&buf[46] = v88;
          unsigned int v91 = "%{public}s %{public}s%s<i%u:c%u:s%u> no additional body frames to move";
          unsigned int v92 = v87;
          uint32_t v93 = 50;
          goto LABEL_533;
        }
        if (gLogDatapath)
        {
          v285 = __nwlog_obj();
          if (os_log_type_enabled(v285, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v42;
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = v400;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v11 + 616;
            *(_WORD *)&buf[42] = 1024;
            *(_DWORD *)&unsigned char buf[44] = 1;
            *(_WORD *)&buf[48] = 1024;
            *(_DWORD *)&buf[50] = 1;
            *(_WORD *)&buf[54] = 1024;
            *(_DWORD *)&buf[56] = 1;
            _os_log_impl(&dword_1830D4000, v285, OS_LOG_TYPE_DEBUG, "%{public}s called: initial frame %p, source %p, destination %p, temp %u, forwards %u, append %u", buf, 0x3Cu);
          }
        }
        int v43 = 0;
        *(void *)v404 = 0;
        *(void *)&v404[8] = v404;
        *(void *)&long long v41 = 136447234;
        do
        {
          os_log_type_t v46 = (_DWORD *)*((void *)v42 + 4);
          if (!v46 && !*((void *)v42 + 5)) {
            os_log_type_t v46 = 0;
          }
          if (gLogDatapath)
          {
            long long v393 = v41;
            uint64_t log = __nwlog_obj();
            BOOL v48 = os_log_type_enabled(log, OS_LOG_TYPE_DEBUG);
            long long v41 = v393;
            if (v48)
            {
              int v49 = v42[13];
              if (v49) {
                v49 -= v42[14] + v42[15];
              }
              if (v46)
              {
                int v50 = v46[13];
                if (v50) {
                  v50 -= v46[14] + v46[15];
                }
              }
              else
              {
                int v50 = 0;
              }
              *(_DWORD *)buf = v393;
              *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v42;
              *(_WORD *)&buf[22] = 1024;
              *(_DWORD *)&unsigned char buf[24] = v49;
              *(_WORD *)&buf[28] = 2048;
              *(void *)&buf[30] = v46;
              *(_WORD *)&buf[38] = 1024;
              *(_DWORD *)&buf[40] = v50;
              _os_log_impl(&dword_1830D4000, log, OS_LOG_TYPE_DEBUG, "%{public}s current frame: (%p, %u bytes), next frame: (%p, %u bytes)", buf, 0x2Cu);
              long long v41 = v393;
            }
          }
          uint64_t v47 = *((void *)v42 + 4);
          os_log_type_t v44 = (void *)*((void *)v42 + 5);
          if (v47)
          {
            *(void *)(v47 + 40) = v44;
            os_log_type_t v44 = (void *)*((void *)v42 + 5);
          }
          else
          {
            os_log_type_t v401 = (os_log_type_t *)*((void *)v42 + 5);
          }
          *os_log_type_t v44 = v47;
          os_log_type_t v45 = *(void **)&v404[8];
          *((void *)v42 + 4) = 0;
          *((void *)v42 + 5) = v45;
          *os_log_type_t v45 = v42;
          *(void *)&v404[8] = v42 + 8;
          ++v43;
          os_log_type_t v42 = v46;
        }
        while (v46);
        if (!v43) {
          goto LABEL_238;
        }
        if (gLogDatapath)
        {
          long long v397 = v41;
          os_log_type_t v292 = __nwlog_obj();
          BOOL v293 = os_log_type_enabled(v292, OS_LOG_TYPE_DEBUG);
          long long v41 = v397;
          if (v293)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
            *(_WORD *)&unsigned char buf[12] = 1024;
            *(_DWORD *)&buf[14] = v43;
            _os_log_impl(&dword_1830D4000, v292, OS_LOG_TYPE_DEBUG, "%{public}s moving %u frames from temp array to destination array", buf, 0x12u);
            long long v41 = v397;
          }
        }
        uint64_t v61 = *(_DWORD **)v404;
        int v62 = v43;
        if (*(void *)v404)
        {
          int v62 = v43;
          do
          {
            uint64_t v65 = v61 + 8;
            uint64_t v64 = (_DWORD *)*((void *)v61 + 4);
            if (!v64 && !*((void *)v61 + 5)) {
              uint64_t v64 = 0;
            }
            if (gLogDatapath)
            {
              long long v395 = v41;
              logb = __nwlog_obj();
              BOOL v68 = os_log_type_enabled(logb, OS_LOG_TYPE_DEBUG);
              long long v41 = v395;
              if (v68)
              {
                int v69 = v61[13];
                if (v69) {
                  v69 -= v61[14] + v61[15];
                }
                if (v64)
                {
                  int v70 = v64[13];
                  if (v70) {
                    v70 -= v64[14] + v64[15];
                  }
                }
                else
                {
                  int v70 = 0;
                }
                *(_DWORD *)buf = v395;
                *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v61;
                *(_WORD *)&buf[22] = 1024;
                *(_DWORD *)&unsigned char buf[24] = v69;
                *(_WORD *)&buf[28] = 2048;
                *(void *)&buf[30] = v64;
                *(_WORD *)&buf[38] = 1024;
                *(_DWORD *)&buf[40] = v70;
                _os_log_impl(&dword_1830D4000, logb, OS_LOG_TYPE_DEBUG, "%{public}s current frame: (%p, %u bytes), next frame: (%p, %u bytes)", buf, 0x2Cu);
                long long v41 = v395;
              }
            }
            uint64_t v66 = *((void *)v61 + 4);
            int v67 = (void *)*((void *)v61 + 5);
            if (v66)
            {
              *(void *)(v66 + 40) = v67;
              int v67 = (void *)*((void *)v61 + 5);
            }
            else
            {
              *(void *)&v404[8] = *((void *)v61 + 5);
            }
            *int v67 = v66;
            void *v65 = 0;
            *((void *)v61 + 5) = 0;
            int v63 = *(void **)(v11 + 624);
            *((void *)v61 + 5) = v63;
            *int v63 = v61;
            *(void *)(v11 + 624) = v65;
            --v62;
            uint64_t v61 = v64;
          }
          while (v64);
          if (!v62)
          {
LABEL_238:
            if (!gLogDatapath) {
              goto LABEL_239;
            }
            os_log_type_t v286 = __nwlog_obj();
            if (!os_log_type_enabled(v286, OS_LOG_TYPE_DEBUG)) {
              goto LABEL_239;
            }
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
            *(_WORD *)&unsigned char buf[12] = 1024;
            *(_DWORD *)&buf[14] = v43;
            *(_WORD *)&buf[18] = 2048;
            *(void *)&buf[20] = v400;
            *(_WORD *)&buf[28] = 2048;
            *(void *)&buf[30] = v11 + 616;
            unsigned int v91 = "%{public}s moved %u frames from %p to %p";
            unsigned int v92 = v286;
            uint32_t v93 = 38;
LABEL_533:
            _os_log_impl(&dword_1830D4000, v92, OS_LOG_TYPE_DEBUG, v91, buf, v93);
LABEL_239:
            *(unsigned char *)(v11 + 874) = (*(unsigned __int16 *)(v11 + 872) | (*(unsigned __int8 *)(v11 + 874) << 16) | 0x20000u) >> 16;
            goto LABEL_240;
          }
        }
        __nwlog_obj();
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v62;
        unsigned int v101 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v402 = 0;
        if (__nwlog_fault(v101, &type, &v402))
        {
          if (type == OS_LOG_TYPE_FAULT)
          {
            int v102 = __nwlog_obj();
            os_log_type_t v103 = type;
            if (!os_log_type_enabled(v102, type)) {
              goto LABEL_236;
            }
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
            *(_WORD *)&unsigned char buf[12] = 1024;
            *(_DWORD *)&buf[14] = v62;
            os_log_type_t v104 = "%{public}s failed to deliver all temp frames, remaining %u frames";
            goto LABEL_235;
          }
          if (!v402)
          {
            int v102 = __nwlog_obj();
            os_log_type_t v103 = type;
            if (!os_log_type_enabled(v102, type)) {
              goto LABEL_236;
            }
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
            *(_WORD *)&unsigned char buf[12] = 1024;
            *(_DWORD *)&buf[14] = v62;
            os_log_type_t v104 = "%{public}s failed to deliver all temp frames, remaining %u frames, backtrace limit exceeded";
            goto LABEL_235;
          }
          os_log_type_t v109 = (char *)__nw_create_backtrace_string();
          int v102 = __nwlog_obj();
          os_log_type_t v103 = type;
          BOOL v110 = os_log_type_enabled(v102, type);
          if (v109)
          {
            if (v110)
            {
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
              *(_WORD *)&unsigned char buf[12] = 1024;
              *(_DWORD *)&buf[14] = v62;
              *(_WORD *)&buf[18] = 2082;
              *(void *)&buf[20] = v109;
              _os_log_impl(&dword_1830D4000, v102, v103, "%{public}s failed to deliver all temp frames, remaining %u frames, dumping backtrace:%{public}s", buf, 0x1Cu);
            }
            free(v109);
            goto LABEL_236;
          }
          if (v110)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
            *(_WORD *)&unsigned char buf[12] = 1024;
            *(_DWORD *)&buf[14] = v62;
            os_log_type_t v104 = "%{public}s failed to deliver all temp frames, remaining %u frames, no backtrace";
LABEL_235:
            _os_log_impl(&dword_1830D4000, v102, v103, v104, buf, 0x12u);
          }
        }
LABEL_236:
        if (v101) {
          free(v101);
        }
        goto LABEL_238;
      }
      if (*(unsigned char *)(v11 + 158) & 1 | (gLogDatapath == 0)) {
        goto LABEL_240;
      }
      uint64_t v33 = __nwlog_obj();
      if (!os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_240;
      }
      uint64_t v71 = *(void *)(v11 + 488);
      int v72 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
      int v73 = *(_DWORD *)(v11 + 860);
      if (v71) {
        LODWORD(v71) = *(_DWORD *)(v71 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_detect_next_request";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v11 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v72;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v73;
      *(_WORD *)&unsigned char buf[44] = 1024;
      *(_DWORD *)&buf[46] = v71;
      uint64_t v37 = "%{public}s %{public}s%s<i%u:c%u:s%u> read 0 frames on non-idle connection, not deferring new flow";
LABEL_80:
      _os_log_impl(&dword_1830D4000, v33, OS_LOG_TYPE_DEBUG, v37, buf, 0x32u);
      goto LABEL_240;
    }
    if ((*(unsigned char *)(v8 + 158) & 1) == 0)
    {
      os_log_type_t v198 = __nwlog_obj();
      if (os_log_type_enabled(v198, OS_LOG_TYPE_ERROR))
      {
        int v199 = *(_DWORD *)(v8 + 372);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v8 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v199;
        _os_log_impl(&dword_1830D4000, v198, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> listen handler has no new_flow callback, ignoring incoming flow", buf, 0x26u);
      }
    }
    int v200 = *(unsigned __int16 *)(v11 + 872);
    int v201 = v200 | (*(unsigned __int8 *)(v11 + 874) << 16);
    if ((v200 & 0x100) != 0)
    {
      if (*(unsigned char *)(v11 + 158)) {
        goto LABEL_240;
      }
      if (!gLogDatapath) {
        goto LABEL_240;
      }
      uint64_t v33 = __nwlog_obj();
      if (!os_log_type_enabled(v33, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_240;
      }
      uint64_t v251 = *(void *)(v11 + 488);
      int v252 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
      int v253 = *(_DWORD *)(v11 + 860);
      if (v251) {
        LODWORD(v251) = *(_DWORD *)(v251 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v11 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v252;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v253;
      *(_WORD *)&unsigned char buf[44] = 1024;
      *(_DWORD *)&buf[46] = v251;
      uint64_t v37 = "%{public}s %{public}s%s<i%u:c%u:s%u> already closed";
      goto LABEL_80;
    }
    os_log_type_t v202 = (_WORD *)(v11 + 872);
    *(unsigned char *)(v11 + 874) = BYTE2(v201);
    *(_WORD *)(v11 + 872) = v201 | 0x100;
    if ((*(unsigned char *)(v11 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        int v343 = __nwlog_obj();
        if (os_log_type_enabled(v343, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v344 = *(void *)(v11 + 488);
          int v345 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
          int v346 = *(_DWORD *)(v11 + 860);
          if (v344) {
            LODWORD(v344) = *(_DWORD *)(v344 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v11 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v345;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v346;
          *(_WORD *)&unsigned char buf[44] = 1024;
          *(_DWORD *)&buf[46] = v344;
          _os_log_impl(&dword_1830D4000, v343, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
        }
      }
    }
    uint64_t v203 = *(void *)(v11 + 480);
    if (!v203)
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
      os_log_type_t v347 = (char *)_os_log_send_and_compose_impl();
      v404[0] = 16;
      v400[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v347, v404, v400)) {
        goto LABEL_775;
      }
      if (v404[0] == 17)
      {
        BOOL v348 = __nwlog_obj();
        os_log_type_t v349 = v404[0];
        if (!os_log_type_enabled(v348, (os_log_type_t)v404[0])) {
          goto LABEL_775;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        BOOL v350 = "%{public}s called with null http1";
      }
      else if (v400[0])
      {
        uint64_t v366 = (char *)__nw_create_backtrace_string();
        BOOL v348 = __nwlog_obj();
        os_log_type_t v349 = v404[0];
        BOOL v367 = os_log_type_enabled(v348, (os_log_type_t)v404[0]);
        if (v366)
        {
          if (v367)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v366;
            _os_log_impl(&dword_1830D4000, v348, v349, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v366);
          goto LABEL_775;
        }
        if (!v367) {
          goto LABEL_775;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        BOOL v350 = "%{public}s called with null http1, no backtrace";
      }
      else
      {
        BOOL v348 = __nwlog_obj();
        os_log_type_t v349 = v404[0];
        if (!os_log_type_enabled(v348, (os_log_type_t)v404[0])) {
          goto LABEL_775;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        BOOL v350 = "%{public}s called with null http1, backtrace limit exceeded";
      }
      uint64_t v388 = buf;
LABEL_774:
      _os_log_impl(&dword_1830D4000, v348, v349, v350, v388, 0xCu);
      goto LABEL_775;
    }
    int v204 = (unsigned __int16)*v202;
    int v205 = v204 | (*(unsigned __int8 *)(v11 + 874) << 16);
    if ((v204 & 0x800) != 0)
    {
      if ((*(unsigned char *)(v11 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          int v262 = __nwlog_obj();
          if (os_log_type_enabled(v262, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v263 = *(void *)(v11 + 488);
            int v264 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
            int v265 = *(_DWORD *)(v11 + 860);
            if (v263) {
              LODWORD(v263) = *(_DWORD *)(v263 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v11 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v264;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v265;
            *(_WORD *)&unsigned char buf[44] = 1024;
            *(_DWORD *)&buf[46] = v263;
            _os_log_impl(&dword_1830D4000, v262, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
          }
        }
      }
      goto LABEL_598;
    }
    *(unsigned char *)(v11 + 874) = BYTE2(v205);
    *os_log_type_t v202 = v205 | 0x800;
    uint64_t v206 = *(unsigned int *)(v203 + 368) + 1;
    uint64_t v207 = v206 << 31 >> 31;
    *(_DWORD *)(v203 + 368) = v206;
    if (v207 == v206 && (v207 & 0x8000000000000000) == 0)
    {
LABEL_593:
      if ((*(unsigned char *)(v11 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          uint64_t v361 = __nwlog_obj();
          if (os_log_type_enabled(v361, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v362 = *(void *)(v11 + 488);
            int v363 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
            int v364 = *(_DWORD *)(v11 + 860);
            if (v362) {
              LODWORD(v362) = *(_DWORD *)(v362 + 424);
            }
            int v365 = *(_DWORD *)(v203 + 368) + *(_DWORD *)(v203 + 364);
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v11 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v363;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v364;
            *(_WORD *)&unsigned char buf[44] = 1024;
            *(_DWORD *)&buf[46] = v362;
            *(_WORD *)&buf[50] = 1024;
            *(_DWORD *)&buf[52] = v365;
            _os_log_impl(&dword_1830D4000, v361, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
          }
        }
      }
      BOOL v315 = *(void **)(v11 + 496);
      if (!v315)
      {
        __nwlog_obj();
        *(_DWORD *)v404 = 136446210;
        *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        os_log_type_t v347 = (char *)_os_log_send_and_compose_impl();
        v400[0] = OS_LOG_TYPE_ERROR;
        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
        if (!__nwlog_fault(v347, v400, &type)) {
          goto LABEL_775;
        }
        if (v400[0] == OS_LOG_TYPE_FAULT)
        {
          BOOL v348 = __nwlog_obj();
          os_log_type_t v349 = v400[0];
          if (!os_log_type_enabled(v348, v400[0])) {
            goto LABEL_775;
          }
          *(_DWORD *)v404 = 136446210;
          *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          BOOL v350 = "%{public}s called with null http1_connection->context";
LABEL_773:
          uint64_t v388 = v404;
          goto LABEL_774;
        }
        if (type == OS_LOG_TYPE_DEFAULT)
        {
          BOOL v348 = __nwlog_obj();
          os_log_type_t v349 = v400[0];
          if (!os_log_type_enabled(v348, v400[0])) {
            goto LABEL_775;
          }
          *(_DWORD *)v404 = 136446210;
          *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          BOOL v350 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
          goto LABEL_773;
        }
        __int16 v383 = (char *)__nw_create_backtrace_string();
        BOOL v348 = __nwlog_obj();
        os_log_type_t v349 = v400[0];
        BOOL v384 = os_log_type_enabled(v348, v400[0]);
        if (!v383)
        {
          if (!v384) {
            goto LABEL_775;
          }
          *(_DWORD *)v404 = 136446210;
          *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          BOOL v350 = "%{public}s called with null http1_connection->context, no backtrace";
          goto LABEL_773;
        }
        if (v384)
        {
          *(_DWORD *)v404 = 136446466;
          *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          *(_WORD *)&v404[12] = 2082;
          *(void *)&v404[14] = v383;
          v385 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
LABEL_740:
          _os_log_impl(&dword_1830D4000, v348, v349, v385, v404, 0x16u);
        }
LABEL_741:
        free(v383);
        if (!v347)
        {
LABEL_598:
          if (!*(void *)(v11 + 488))
          {
            uint64_t v318 = *(void *)(v11 + 784);
            if (v318)
            {
              nw_queue_set_timer_values(v318, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
            }
            else
            {
              if ((*(unsigned char *)(v11 + 158) & 1) == 0)
              {
                unsigned int v319 = __nwlog_obj();
                if (os_log_type_enabled(v319, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v320 = *(void *)(v11 + 488);
                  int v321 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
                  int v322 = *(_DWORD *)(v11 + 860);
                  if (v320) {
                    LODWORD(v320) = *(_DWORD *)(v320 + 424);
                  }
                  *(_DWORD *)buf = 136447490;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v11 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  *(void *)&unsigned char buf[24] = " ";
                  *(_WORD *)&buf[32] = 1024;
                  *(_DWORD *)&buf[34] = v321;
                  *(_WORD *)&buf[38] = 1024;
                  *(_DWORD *)&buf[40] = v322;
                  *(_WORD *)&unsigned char buf[44] = 1024;
                  *(_DWORD *)&buf[46] = v320;
                  _os_log_impl(&dword_1830D4000, v319, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
                }
              }
              uint64_t v323 = *(void *)(v11 + 608);
              int v324 = *(void **)(v11 + 496);
              *(void *)buf = MEMORY[0x1E4F143A8];
              *(void *)&buf[8] = 0x40000000;
              *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
              *(void *)&unsigned char buf[24] = &unk_1E52411A0;
              *(void *)&buf[32] = v323;
              nw_queue_context_async(v324, buf);
            }
          }
LABEL_240:
          if (((*(unsigned __int16 *)(v11 + 872) | (*(unsigned __int8 *)(v11 + 874) << 16)) & 0x20000) == 0) {
            return;
          }
          if ((*(unsigned char *)(v8 + 376) & 1) == 0) {
            goto LABEL_242;
          }
          uint64_t v128 = *(void ***)(v8 + 328);
          if (!v128) {
            goto LABEL_267;
          }
          uint64_t v129 = (unsigned __int16 *)(v11 + 872);
          os_log_type_t v130 = *v128;
          if (v130 && *v130)
          {
            uint64_t v131 = *(NSObject **)(v8 + 264);
            if (v131)
            {
              nw_parameters_t v132 = nw_parameters_copy(v131);
              *(void *)(v8 + 224) = v11;
              if ((***(unsigned int (****)(void, void, nw_parameters_t))(v8 + 328))(*(void *)(v8 + 328), *(void *)(v8 + 280), v132)&& *(void *)(v11 + 488)&& !*(void *)(v8 + 224))
              {
                if ((*(unsigned char *)(v8 + 158) & 1) == 0)
                {
                  if (gLogDatapath)
                  {
                    v308 = __nwlog_obj();
                    if (os_log_type_enabled(v308, OS_LOG_TYPE_DEBUG))
                    {
                      int v309 = *(_DWORD *)(v8 + 372);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v8 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      *(void *)&unsigned char buf[24] = " ";
                      *(_WORD *)&buf[32] = 1024;
                      *(_DWORD *)&buf[34] = v309;
                      _os_log_impl(&dword_1830D4000, v308, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> sucessfully associated new flow stream with connection, awaiting connected", buf, 0x26u);
                    }
                  }
                }
                int v164 = *v129;
                unsigned int v165 = (v164 | (*((unsigned __int8 *)v129 + 2) << 16)) & 0xFFFDFFFF;
                unsigned __int16 *v129 = v164;
                *((unsigned char *)v129 + 2) = BYTE2(v165);
                goto LABEL_356;
              }
              if ((*(unsigned char *)(v8 + 158) & 1) == 0)
              {
                int v133 = __nwlog_obj();
                if (os_log_type_enabled(v133, OS_LOG_TYPE_ERROR))
                {
                  int v134 = *(_DWORD *)(v8 + 372);
                  *(_DWORD *)buf = 136447234;
                  *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v8 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  *(void *)&unsigned char buf[24] = " ";
                  *(_WORD *)&buf[32] = 1024;
                  *(_DWORD *)&buf[34] = v134;
                  *(_WORD *)&buf[38] = 2048;
                  *(void *)&buf[40] = v11;
                  _os_log_impl(&dword_1830D4000, v133, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> listen handler didn't accept the new flow, closing connection %p", buf, 0x30u);
                }
              }
              int v135 = *v129;
              int v136 = v135 | (*(unsigned __int8 *)(v11 + 874) << 16);
              if ((v135 & 0x100) != 0)
              {
                if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                {
                  if (gLogDatapath)
                  {
                    os_log_type_t v153 = __nwlog_obj();
                    if (os_log_type_enabled(v153, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v154 = *(void *)(v11 + 488);
                      int v155 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
                      int v156 = *(_DWORD *)(v11 + 860);
                      if (v154) {
                        LODWORD(v154) = *(_DWORD *)(v154 + 424);
                      }
                      *(_DWORD *)buf = 136447490;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v11 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      *(void *)&unsigned char buf[24] = " ";
                      *(_WORD *)&buf[32] = 1024;
                      *(_DWORD *)&buf[34] = v155;
                      *(_WORD *)&buf[38] = 1024;
                      *(_DWORD *)&buf[40] = v156;
                      *(_WORD *)&unsigned char buf[44] = 1024;
                      *(_DWORD *)&buf[46] = v154;
                      _os_log_impl(&dword_1830D4000, v153, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> already closed", buf, 0x32u);
                    }
                  }
                }
                goto LABEL_356;
              }
              *(unsigned char *)(v11 + 874) = BYTE2(v136);
              unsigned __int16 *v129 = v136 | 0x100;
              if ((*(unsigned char *)(v11 + 158) & 1) == 0)
              {
                if (gLogDatapath)
                {
                  int v278 = __nwlog_obj();
                  if (os_log_type_enabled(v278, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v279 = *(void *)(v11 + 488);
                    int v280 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
                    int v281 = *(_DWORD *)(v11 + 860);
                    if (v279) {
                      LODWORD(v279) = *(_DWORD *)(v279 + 424);
                    }
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v11 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    *(void *)&unsigned char buf[24] = " ";
                    *(_WORD *)&buf[32] = 1024;
                    *(_DWORD *)&buf[34] = v280;
                    *(_WORD *)&buf[38] = 1024;
                    *(_DWORD *)&buf[40] = v281;
                    *(_WORD *)&unsigned char buf[44] = 1024;
                    *(_DWORD *)&buf[46] = v279;
                    _os_log_impl(&dword_1830D4000, v278, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
                  }
                }
              }
              uint64_t v137 = *(void *)(v11 + 480);
              if (!v137)
              {
                __nwlog_obj();
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                uint64_t v274 = (char *)_os_log_send_and_compose_impl();
                v404[0] = 16;
                v400[0] = OS_LOG_TYPE_DEFAULT;
                if (!__nwlog_fault(v274, v404, v400)) {
                  goto LABEL_658;
                }
                if (v404[0] == 17)
                {
                  uint64_t v275 = __nwlog_obj();
                  os_log_type_t v276 = v404[0];
                  if (!os_log_type_enabled(v275, (os_log_type_t)v404[0])) {
                    goto LABEL_658;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  uint64_t v277 = "%{public}s called with null http1";
                }
                else if (v400[0])
                {
                  os_log_type_t v294 = (char *)__nw_create_backtrace_string();
                  uint64_t v275 = __nwlog_obj();
                  os_log_type_t v276 = v404[0];
                  BOOL v295 = os_log_type_enabled(v275, (os_log_type_t)v404[0]);
                  if (v294)
                  {
                    if (v295)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v294;
                      _os_log_impl(&dword_1830D4000, v275, v276, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
                    }
                    free(v294);
                    goto LABEL_658;
                  }
                  if (!v295) {
                    goto LABEL_658;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  uint64_t v277 = "%{public}s called with null http1, no backtrace";
                }
                else
                {
                  uint64_t v275 = __nwlog_obj();
                  os_log_type_t v276 = v404[0];
                  if (!os_log_type_enabled(v275, (os_log_type_t)v404[0])) {
                    goto LABEL_658;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  uint64_t v277 = "%{public}s called with null http1, backtrace limit exceeded";
                }
                os_log_type_t v337 = buf;
LABEL_657:
                _os_log_impl(&dword_1830D4000, v275, v276, v277, v337, 0xCu);
                goto LABEL_658;
              }
              int v138 = *v129;
              int v139 = v138 | (*(unsigned __int8 *)(v11 + 874) << 16);
              if ((v138 & 0x800) != 0)
              {
                if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                {
                  if (gLogDatapath)
                  {
                    int v160 = __nwlog_obj();
                    if (os_log_type_enabled(v160, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v161 = *(void *)(v11 + 488);
                      int v162 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
                      int v163 = *(_DWORD *)(v11 + 860);
                      if (v161) {
                        LODWORD(v161) = *(_DWORD *)(v161 + 424);
                      }
                      *(_DWORD *)buf = 136447490;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v11 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      *(void *)&unsigned char buf[24] = " ";
                      *(_WORD *)&buf[32] = 1024;
                      *(_DWORD *)&buf[34] = v162;
                      *(_WORD *)&buf[38] = 1024;
                      *(_DWORD *)&buf[40] = v163;
                      *(_WORD *)&unsigned char buf[44] = 1024;
                      *(_DWORD *)&buf[46] = v161;
                      _os_log_impl(&dword_1830D4000, v160, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
                    }
                  }
                }
                goto LABEL_347;
              }
              *(unsigned char *)(v11 + 874) = BYTE2(v139);
              unsigned __int16 *v129 = v139 | 0x800;
              uint64_t v140 = *(unsigned int *)(v137 + 368) + 1;
              uint64_t v141 = v140 << 31 >> 31;
              *(_DWORD *)(v137 + 368) = v140;
              if (v141 == v140 && (v141 & 0x8000000000000000) == 0)
              {
LABEL_342:
                if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                {
                  if (gLogDatapath)
                  {
                    v296 = __nwlog_obj();
                    if (os_log_type_enabled(v296, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v297 = *(void *)(v11 + 488);
                      int v298 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
                      int v299 = *(_DWORD *)(v11 + 860);
                      if (v297) {
                        LODWORD(v297) = *(_DWORD *)(v297 + 424);
                      }
                      int v300 = *(_DWORD *)(v137 + 368) + *(_DWORD *)(v137 + 364);
                      *(_DWORD *)buf = 136447746;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v11 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      *(void *)&unsigned char buf[24] = " ";
                      *(_WORD *)&buf[32] = 1024;
                      *(_DWORD *)&buf[34] = v298;
                      *(_WORD *)&buf[38] = 1024;
                      *(_DWORD *)&buf[40] = v299;
                      *(_WORD *)&unsigned char buf[44] = 1024;
                      *(_DWORD *)&buf[46] = v297;
                      *(_WORD *)&buf[50] = 1024;
                      *(_DWORD *)&buf[52] = v300;
                      _os_log_impl(&dword_1830D4000, v296, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
                    }
                  }
                }
                os_log_type_t v176 = *(void **)(v11 + 496);
                if (!v176)
                {
                  __nwlog_obj();
                  *(_DWORD *)v404 = 136446210;
                  *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  uint64_t v274 = (char *)_os_log_send_and_compose_impl();
                  v400[0] = OS_LOG_TYPE_ERROR;
                  os_log_type_t type = OS_LOG_TYPE_DEFAULT;
                  if (!__nwlog_fault(v274, v400, &type)) {
                    goto LABEL_658;
                  }
                  if (v400[0] == OS_LOG_TYPE_FAULT)
                  {
                    uint64_t v275 = __nwlog_obj();
                    os_log_type_t v276 = v400[0];
                    if (!os_log_type_enabled(v275, v400[0])) {
                      goto LABEL_658;
                    }
                    *(_DWORD *)v404 = 136446210;
                    *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                    uint64_t v277 = "%{public}s called with null http1_connection->context";
LABEL_656:
                    os_log_type_t v337 = v404;
                    goto LABEL_657;
                  }
                  if (type == OS_LOG_TYPE_DEFAULT)
                  {
                    uint64_t v275 = __nwlog_obj();
                    os_log_type_t v276 = v400[0];
                    if (!os_log_type_enabled(v275, v400[0])) {
                      goto LABEL_658;
                    }
                    *(_DWORD *)v404 = 136446210;
                    *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                    uint64_t v277 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
                    goto LABEL_656;
                  }
                  os_log_type_t v310 = (char *)__nw_create_backtrace_string();
                  uint64_t v275 = __nwlog_obj();
                  os_log_type_t v276 = v400[0];
                  BOOL v311 = os_log_type_enabled(v275, v400[0]);
                  if (!v310)
                  {
                    if (!v311) {
                      goto LABEL_658;
                    }
                    *(_DWORD *)v404 = 136446210;
                    *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                    uint64_t v277 = "%{public}s called with null http1_connection->context, no backtrace";
                    goto LABEL_656;
                  }
                  if (v311)
                  {
                    *(_DWORD *)v404 = 136446466;
                    *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                    *(_WORD *)&v404[12] = 2082;
                    *(void *)&v404[14] = v310;
                    os_log_type_t v312 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
LABEL_584:
                    _os_log_impl(&dword_1830D4000, v275, v276, v312, v404, 0x16u);
                  }
LABEL_585:
                  free(v310);
                  if (!v274)
                  {
LABEL_347:
                    if (!*(void *)(v11 + 488))
                    {
                      uint64_t v179 = *(void *)(v11 + 784);
                      if (v179)
                      {
                        nw_queue_set_timer_values(v179, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
                      }
                      else
                      {
                        if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                        {
                          uint64_t v180 = __nwlog_obj();
                          if (os_log_type_enabled(v180, OS_LOG_TYPE_ERROR))
                          {
                            uint64_t v181 = *(void *)(v11 + 488);
                            int v182 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
                            int v183 = *(_DWORD *)(v11 + 860);
                            if (v181) {
                              LODWORD(v181) = *(_DWORD *)(v181 + 424);
                            }
                            *(_DWORD *)buf = 136447490;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v11 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            *(void *)&unsigned char buf[24] = " ";
                            *(_WORD *)&buf[32] = 1024;
                            *(_DWORD *)&buf[34] = v182;
                            *(_WORD *)&buf[38] = 1024;
                            *(_DWORD *)&buf[40] = v183;
                            *(_WORD *)&unsigned char buf[44] = 1024;
                            *(_DWORD *)&buf[46] = v181;
                            _os_log_impl(&dword_1830D4000, v180, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
                          }
                        }
                        uint64_t v184 = *(void *)(v11 + 608);
                        os_log_type_t v185 = *(void **)(v11 + 496);
                        *(void *)buf = MEMORY[0x1E4F143A8];
                        *(void *)&buf[8] = 0x40000000;
                        *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
                        *(void *)&unsigned char buf[24] = &unk_1E52411A0;
                        *(void *)&buf[32] = v184;
                        nw_queue_context_async(v185, buf);
                      }
                    }
LABEL_356:
                    if (v132) {
                      os_release(v132);
                    }
                    return;
                  }
LABEL_659:
                  free(v274);
                  goto LABEL_347;
                }
                uint64_t v177 = *(void *)(v11 + 480);
                if (v177)
                {
                  uint64_t v178 = *(void *)(v177 + 200);
                  *(void *)buf = MEMORY[0x1E4F143A8];
                  *(void *)&buf[8] = 0x40000000;
                  *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
                  *(void *)&unsigned char buf[24] = &unk_1E52411C8;
                  *(void *)&buf[32] = v178;
                  nw_queue_context_async(v176, buf);
                  goto LABEL_347;
                }
                __nwlog_obj();
                *(_DWORD *)v404 = 136446210;
                *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                uint64_t v274 = (char *)_os_log_send_and_compose_impl();
                v400[0] = OS_LOG_TYPE_ERROR;
                os_log_type_t type = OS_LOG_TYPE_DEFAULT;
                if (__nwlog_fault(v274, v400, &type))
                {
                  if (v400[0] == OS_LOG_TYPE_FAULT)
                  {
                    uint64_t v275 = __nwlog_obj();
                    os_log_type_t v276 = v400[0];
                    if (!os_log_type_enabled(v275, v400[0])) {
                      goto LABEL_658;
                    }
                    *(_DWORD *)v404 = 136446210;
                    *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                    uint64_t v277 = "%{public}s called with null http1";
                    goto LABEL_656;
                  }
                  if (type == OS_LOG_TYPE_DEFAULT)
                  {
                    uint64_t v275 = __nwlog_obj();
                    os_log_type_t v276 = v400[0];
                    if (!os_log_type_enabled(v275, v400[0])) {
                      goto LABEL_658;
                    }
                    *(_DWORD *)v404 = 136446210;
                    *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                    uint64_t v277 = "%{public}s called with null http1, backtrace limit exceeded";
                    goto LABEL_656;
                  }
                  os_log_type_t v310 = (char *)__nw_create_backtrace_string();
                  uint64_t v275 = __nwlog_obj();
                  os_log_type_t v276 = v400[0];
                  BOOL v313 = os_log_type_enabled(v275, v400[0]);
                  if (!v310)
                  {
                    if (!v313) {
                      goto LABEL_658;
                    }
                    *(_DWORD *)v404 = 136446210;
                    *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                    uint64_t v277 = "%{public}s called with null http1, no backtrace";
                    goto LABEL_656;
                  }
                  if (v313)
                  {
                    *(_DWORD *)v404 = 136446466;
                    *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                    *(_WORD *)&v404[12] = 2082;
                    *(void *)&v404[14] = v310;
                    os_log_type_t v312 = "%{public}s called with null http1, dumping backtrace:%{public}s";
                    goto LABEL_584;
                  }
                  goto LABEL_585;
                }
LABEL_658:
                if (!v274) {
                  goto LABEL_347;
                }
                goto LABEL_659;
              }
              __nwlog_obj();
              uint64_t v142 = *(unsigned int *)(v137 + 368);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->nonresuable_connections";
              *(_WORD *)&buf[22] = 2048;
              *(void *)&unsigned char buf[24] = 1;
              *(_WORD *)&buf[32] = 2048;
              *(void *)&buf[34] = v142;
              int v143 = (char *)_os_log_send_and_compose_impl();
              v404[0] = 16;
              v400[0] = OS_LOG_TYPE_DEFAULT;
              if (__nwlog_fault(v143, v404, v400))
              {
                if (v404[0] == 17)
                {
                  os_log_type_t v144 = __nwlog_obj();
                  os_log_type_t v145 = v404[0];
                  if (os_log_type_enabled(v144, (os_log_type_t)v404[0]))
                  {
                    uint64_t v146 = *(unsigned int *)(v137 + 368);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->nonresuable_connections";
                    *(_WORD *)&buf[22] = 2048;
                    *(void *)&unsigned char buf[24] = 1;
                    *(_WORD *)&buf[32] = 2048;
                    *(void *)&buf[34] = v146;
                    uint64_t v147 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_338:
                    _os_log_impl(&dword_1830D4000, v144, v145, v147, buf, 0x2Au);
                  }
                }
                else if (v400[0])
                {
                  BOOL v166 = (char *)__nw_create_backtrace_string();
                  os_log_type_t v144 = __nwlog_obj();
                  os_log_type_t v145 = v404[0];
                  BOOL v167 = os_log_type_enabled(v144, (os_log_type_t)v404[0]);
                  if (v166)
                  {
                    if (v167)
                    {
                      uint64_t v168 = *(unsigned int *)(v137 + 368);
                      *(_DWORD *)buf = 136447234;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->nonresuable_connections";
                      *(_WORD *)&buf[22] = 2048;
                      *(void *)&unsigned char buf[24] = 1;
                      *(_WORD *)&buf[32] = 2048;
                      *(void *)&buf[34] = v168;
                      *(_WORD *)&buf[42] = 2082;
                      *(void *)&unsigned char buf[44] = v166;
                      _os_log_impl(&dword_1830D4000, v144, v145, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                    }
                    free(v166);
                    goto LABEL_339;
                  }
                  if (v167)
                  {
                    uint64_t v175 = *(unsigned int *)(v137 + 368);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->nonresuable_connections";
                    *(_WORD *)&buf[22] = 2048;
                    *(void *)&unsigned char buf[24] = 1;
                    *(_WORD *)&buf[32] = 2048;
                    *(void *)&buf[34] = v175;
                    uint64_t v147 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                    goto LABEL_338;
                  }
                }
                else
                {
                  os_log_type_t v144 = __nwlog_obj();
                  os_log_type_t v145 = v404[0];
                  if (os_log_type_enabled(v144, (os_log_type_t)v404[0]))
                  {
                    uint64_t v169 = *(unsigned int *)(v137 + 368);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->nonresuable_connections";
                    *(_WORD *)&buf[22] = 2048;
                    *(void *)&unsigned char buf[24] = 1;
                    *(_WORD *)&buf[32] = 2048;
                    *(void *)&buf[34] = v169;
                    uint64_t v147 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                    goto LABEL_338;
                  }
                }
              }
LABEL_339:
              if (v143) {
                free(v143);
              }
              *(_DWORD *)(v137 + 368) = -1;
              goto LABEL_342;
            }
            if ((*(unsigned char *)(v8 + 158) & 1) == 0)
            {
              BOOL v151 = __nwlog_obj();
              if (os_log_type_enabled(v151, OS_LOG_TYPE_ERROR))
              {
                int v152 = *(_DWORD *)(v8 + 372);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v8 + 74;
                *(_WORD *)&buf[22] = 2080;
                *(void *)&unsigned char buf[24] = " ";
                *(_WORD *)&buf[32] = 1024;
                *(_DWORD *)&buf[34] = v152;
                _os_log_impl(&dword_1830D4000, v151, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> http1->parameters is NULL when opening responder stream", buf, 0x26u);
              }
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
            int v117 = (char *)_os_log_send_and_compose_impl();
            v404[0] = 16;
            v400[0] = OS_LOG_TYPE_DEFAULT;
            if (!__nwlog_fault(v117, v404, v400)) {
              goto LABEL_490;
            }
            if (v404[0] == 17)
            {
              os_log_type_t v118 = __nwlog_obj();
              os_log_type_t v119 = v404[0];
              if (!os_log_type_enabled(v118, (os_log_type_t)v404[0])) {
                goto LABEL_490;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
              int v120 = "%{public}s http1->parameters is NULL when opening responder stream";
              goto LABEL_488;
            }
            if (v400[0] == OS_LOG_TYPE_DEFAULT)
            {
              os_log_type_t v118 = __nwlog_obj();
              os_log_type_t v119 = v404[0];
              if (!os_log_type_enabled(v118, (os_log_type_t)v404[0])) {
                goto LABEL_490;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
              int v120 = "%{public}s http1->parameters is NULL when opening responder stream, backtrace limit exceeded";
              goto LABEL_488;
            }
            os_log_type_t v157 = (char *)__nw_create_backtrace_string();
            os_log_type_t v118 = __nwlog_obj();
            os_log_type_t v119 = v404[0];
            BOOL v158 = os_log_type_enabled(v118, (os_log_type_t)v404[0]);
            if (!v157)
            {
              if (!v158) {
                goto LABEL_490;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
              int v120 = "%{public}s http1->parameters is NULL when opening responder stream, no backtrace";
              goto LABEL_488;
            }
            if (!v158) {
              goto LABEL_291;
            }
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v157;
            os_log_type_t v159 = "%{public}s http1->parameters is NULL when opening responder stream, dumping backtrace:%{public}s";
LABEL_290:
            _os_log_impl(&dword_1830D4000, v118, v119, v159, buf, 0x16u);
LABEL_291:
            free(v157);
            if (!v117) {
              return;
            }
            goto LABEL_491;
          }
          if ((*(unsigned char *)(v8 + 158) & 1) == 0)
          {
            os_log_type_t v233 = __nwlog_obj();
            if (os_log_type_enabled(v233, OS_LOG_TYPE_ERROR))
            {
              int v234 = *(_DWORD *)(v8 + 372);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v8 + 74;
              *(_WORD *)&buf[22] = 2080;
              *(void *)&unsigned char buf[24] = " ";
              *(_WORD *)&buf[32] = 1024;
              *(_DWORD *)&buf[34] = v234;
              _os_log_impl(&dword_1830D4000, v233, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> listen handler has no new_flow callback, ignoring incoming flow", buf, 0x26u);
            }
          }
          int v235 = *v129;
          int v236 = v235 | (*(unsigned __int8 *)(v11 + 874) << 16);
          if ((v235 & 0x100) != 0) {
            goto LABEL_459;
          }
          *(unsigned char *)(v11 + 874) = BYTE2(v236);
          unsigned __int16 *v129 = v236 | 0x100;
          if ((*(unsigned char *)(v11 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              v357 = __nwlog_obj();
              if (os_log_type_enabled(v357, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v358 = *(void *)(v11 + 488);
                int v359 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
                int v360 = *(_DWORD *)(v11 + 860);
                if (v358) {
                  LODWORD(v358) = *(_DWORD *)(v358 + 424);
                }
                *(_DWORD *)buf = 136447490;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v11 + 74;
                *(_WORD *)&buf[22] = 2080;
                *(void *)&unsigned char buf[24] = " ";
                *(_WORD *)&buf[32] = 1024;
                *(_DWORD *)&buf[34] = v359;
                *(_WORD *)&buf[38] = 1024;
                *(_DWORD *)&buf[40] = v360;
                *(_WORD *)&unsigned char buf[44] = 1024;
                *(_DWORD *)&buf[46] = v358;
                _os_log_impl(&dword_1830D4000, v357, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
              }
            }
          }
          uint64_t v237 = *(void *)(v11 + 480);
          if (!v237)
          {
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            os_log_type_t v339 = (char *)_os_log_send_and_compose_impl();
            v404[0] = 16;
            v400[0] = OS_LOG_TYPE_DEFAULT;
            if (!__nwlog_fault(v339, v404, v400)) {
              goto LABEL_767;
            }
            if (v404[0] != 17)
            {
              if (v400[0])
              {
                int v373 = (char *)__nw_create_backtrace_string();
                v340 = __nwlog_obj();
                os_log_type_t v341 = v404[0];
                BOOL v356 = os_log_type_enabled(v340, (os_log_type_t)v404[0]);
                if (v373)
                {
                  if (!v356) {
                    goto LABEL_730;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v373;
                  uint64_t v375 = "%{public}s called with null http1, dumping backtrace:%{public}s";
                  uint64_t v377 = buf;
                  goto LABEL_729;
                }
                goto LABEL_747;
              }
              goto LABEL_743;
            }
LABEL_689:
            v340 = __nwlog_obj();
            os_log_type_t v341 = v404[0];
            if (!os_log_type_enabled(v340, (os_log_type_t)v404[0])) {
              goto LABEL_767;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            uint64_t v342 = "%{public}s called with null http1";
LABEL_749:
            uint64_t v387 = buf;
LABEL_766:
            _os_log_impl(&dword_1830D4000, v340, v341, v342, v387, 0xCu);
            goto LABEL_767;
          }
          int v238 = *v129;
          int v239 = v238 | (*(unsigned __int8 *)(v11 + 874) << 16);
          if ((v238 & 0x800) != 0) {
            goto LABEL_496;
          }
          *(unsigned char *)(v11 + 874) = BYTE2(v239);
          unsigned __int16 *v129 = v239 | 0x800;
          uint64_t v240 = *(unsigned int *)(v237 + 368) + 1;
          uint64_t v241 = v240 << 31 >> 31;
          *(_DWORD *)(v237 + 368) = v240;
          if (v241 == v240 && (v241 & 0x8000000000000000) == 0)
          {
LABEL_640:
            if ((*(unsigned char *)(v11 + 158) & 1) == 0)
            {
              if (gLogDatapath)
              {
                BOOL v378 = __nwlog_obj();
                if (os_log_type_enabled(v378, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v379 = *(void *)(v11 + 488);
                  int v380 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
                  int v381 = *(_DWORD *)(v11 + 860);
                  if (v379) {
                    LODWORD(v379) = *(_DWORD *)(v379 + 424);
                  }
                  int v382 = *(_DWORD *)(v237 + 368) + *(_DWORD *)(v237 + 364);
                  *(_DWORD *)buf = 136447746;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v11 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  *(void *)&unsigned char buf[24] = " ";
                  *(_WORD *)&buf[32] = 1024;
                  *(_DWORD *)&buf[34] = v380;
                  *(_WORD *)&buf[38] = 1024;
                  *(_DWORD *)&buf[40] = v381;
                  *(_WORD *)&unsigned char buf[44] = 1024;
                  *(_DWORD *)&buf[46] = v379;
                  *(_WORD *)&buf[50] = 1024;
                  *(_DWORD *)&buf[52] = v382;
                  _os_log_impl(&dword_1830D4000, v378, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
                }
              }
            }
            os_log_type_t v326 = *(void **)(v11 + 496);
            if (v326)
            {
              uint64_t v327 = *(void *)(v11 + 480);
              if (v327) {
                goto LABEL_619;
              }
              goto LABEL_644;
            }
LABEL_679:
            __nwlog_obj();
            *(_DWORD *)v404 = 136446210;
            *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
            os_log_type_t v339 = (char *)_os_log_send_and_compose_impl();
            v400[0] = OS_LOG_TYPE_ERROR;
            os_log_type_t type = OS_LOG_TYPE_DEFAULT;
            if (!__nwlog_fault(v339, v400, &type)) {
              goto LABEL_767;
            }
            if (v400[0] == OS_LOG_TYPE_FAULT)
            {
              v340 = __nwlog_obj();
              os_log_type_t v341 = v400[0];
              if (!os_log_type_enabled(v340, v400[0])) {
                goto LABEL_767;
              }
              *(_DWORD *)v404 = 136446210;
              *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              uint64_t v342 = "%{public}s called with null http1_connection->context";
              goto LABEL_765;
            }
            if (type == OS_LOG_TYPE_DEFAULT)
            {
              v340 = __nwlog_obj();
              os_log_type_t v341 = v400[0];
              if (!os_log_type_enabled(v340, v400[0])) {
                goto LABEL_767;
              }
              *(_DWORD *)v404 = 136446210;
              *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              uint64_t v342 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
              goto LABEL_765;
            }
            int v373 = (char *)__nw_create_backtrace_string();
            v340 = __nwlog_obj();
            os_log_type_t v341 = v400[0];
            BOOL v376 = os_log_type_enabled(v340, v400[0]);
            if (!v373)
            {
              if (!v376) {
                goto LABEL_767;
              }
              *(_DWORD *)v404 = 136446210;
              *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              uint64_t v342 = "%{public}s called with null http1_connection->context, no backtrace";
              goto LABEL_765;
            }
            if (v376)
            {
              *(_DWORD *)v404 = 136446466;
              *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              *(_WORD *)&v404[12] = 2082;
              *(void *)&v404[14] = v373;
              uint64_t v375 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
              goto LABEL_720;
            }
LABEL_730:
            free(v373);
            if (!v339)
            {
LABEL_620:
              if (!*(void *)(v11 + 488))
              {
                uint64_t v329 = *(void *)(v11 + 784);
                if (v329)
                {
                  nw_queue_set_timer_values(v329, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
                }
                else
                {
                  if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                  {
                    BOOL v330 = __nwlog_obj();
                    if (os_log_type_enabled(v330, OS_LOG_TYPE_ERROR))
                    {
                      uint64_t v331 = *(void *)(v11 + 488);
                      int v332 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
                      int v333 = *(_DWORD *)(v11 + 860);
                      if (v331) {
                        LODWORD(v331) = *(_DWORD *)(v331 + 424);
                      }
                      *(_DWORD *)buf = 136447490;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v11 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      *(void *)&unsigned char buf[24] = " ";
                      *(_WORD *)&buf[32] = 1024;
                      *(_DWORD *)&buf[34] = v332;
                      *(_WORD *)&buf[38] = 1024;
                      *(_DWORD *)&buf[40] = v333;
                      *(_WORD *)&unsigned char buf[44] = 1024;
                      *(_DWORD *)&buf[46] = v331;
                      _os_log_impl(&dword_1830D4000, v330, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
                    }
                  }
                  uint64_t v334 = *(void *)(v11 + 608);
                  v335 = *(void **)(v11 + 496);
                  *(void *)buf = MEMORY[0x1E4F143A8];
                  *(void *)&buf[8] = 0x40000000;
                  *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
                  *(void *)&unsigned char buf[24] = &unk_1E52411A0;
                  *(void *)&buf[32] = v334;
                  nw_queue_context_async(v335, buf);
                }
              }
              return;
            }
LABEL_768:
            free(v339);
            goto LABEL_620;
          }
          __nwlog_obj();
          uint64_t v242 = *(unsigned int *)(v237 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v242;
          uint64_t v243 = (char *)_os_log_send_and_compose_impl();
          v404[0] = 16;
          v400[0] = OS_LOG_TYPE_DEFAULT;
          if (__nwlog_fault(v243, v404, v400))
          {
            if (v404[0] == 17)
            {
              BOOL v244 = __nwlog_obj();
              os_log_type_t v245 = v404[0];
              if (os_log_type_enabled(v244, (os_log_type_t)v404[0]))
              {
                uint64_t v246 = *(unsigned int *)(v237 + 368);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                *(void *)&unsigned char buf[24] = 1;
                *(_WORD *)&buf[32] = 2048;
                *(void *)&buf[34] = v246;
                uint64_t v247 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_636:
                _os_log_impl(&dword_1830D4000, v244, v245, v247, buf, 0x2Au);
              }
            }
            else if (v400[0])
            {
              os_log_type_t v301 = (char *)__nw_create_backtrace_string();
              BOOL v244 = __nwlog_obj();
              os_log_type_t v245 = v404[0];
              BOOL v302 = os_log_type_enabled(v244, (os_log_type_t)v404[0]);
              if (v301)
              {
                if (v302)
                {
                  uint64_t v303 = *(unsigned int *)(v237 + 368);
                  *(_DWORD *)buf = 136447234;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->nonresuable_connections";
                  *(_WORD *)&buf[22] = 2048;
                  *(void *)&unsigned char buf[24] = 1;
                  *(_WORD *)&buf[32] = 2048;
                  *(void *)&buf[34] = v303;
                  *(_WORD *)&buf[42] = 2082;
                  *(void *)&unsigned char buf[44] = v301;
                  _os_log_impl(&dword_1830D4000, v244, v245, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                }
                free(v301);
                goto LABEL_637;
              }
              if (v302)
              {
                uint64_t v338 = *(unsigned int *)(v237 + 368);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                *(void *)&unsigned char buf[24] = 1;
                *(_WORD *)&buf[32] = 2048;
                *(void *)&buf[34] = v338;
                uint64_t v247 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                goto LABEL_636;
              }
            }
            else
            {
              BOOL v244 = __nwlog_obj();
              os_log_type_t v245 = v404[0];
              if (os_log_type_enabled(v244, (os_log_type_t)v404[0]))
              {
                uint64_t v336 = *(unsigned int *)(v237 + 368);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                *(void *)&unsigned char buf[24] = 1;
                *(_WORD *)&buf[32] = 2048;
                *(void *)&buf[34] = v336;
                uint64_t v247 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                goto LABEL_636;
              }
            }
          }
LABEL_637:
          if (v243) {
            free(v243);
          }
          *(_DWORD *)(v237 + 368) = -1;
          goto LABEL_640;
        }
LABEL_776:
        free(v347);
        goto LABEL_598;
      }
      uint64_t v316 = *(void *)(v11 + 480);
      if (v316)
      {
        uint64_t v317 = *(void *)(v316 + 200);
        *(void *)buf = MEMORY[0x1E4F143A8];
        *(void *)&buf[8] = 0x40000000;
        *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
        *(void *)&unsigned char buf[24] = &unk_1E52411C8;
        *(void *)&buf[32] = v317;
        nw_queue_context_async(v315, buf);
        goto LABEL_598;
      }
      __nwlog_obj();
      *(_DWORD *)v404 = 136446210;
      *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
      os_log_type_t v347 = (char *)_os_log_send_and_compose_impl();
      v400[0] = OS_LOG_TYPE_ERROR;
      os_log_type_t type = OS_LOG_TYPE_DEFAULT;
      if (__nwlog_fault(v347, v400, &type))
      {
        if (v400[0] == OS_LOG_TYPE_FAULT)
        {
          BOOL v348 = __nwlog_obj();
          os_log_type_t v349 = v400[0];
          if (!os_log_type_enabled(v348, v400[0])) {
            goto LABEL_775;
          }
          *(_DWORD *)v404 = 136446210;
          *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          BOOL v350 = "%{public}s called with null http1";
          goto LABEL_773;
        }
        if (type == OS_LOG_TYPE_DEFAULT)
        {
          BOOL v348 = __nwlog_obj();
          os_log_type_t v349 = v400[0];
          if (!os_log_type_enabled(v348, v400[0])) {
            goto LABEL_775;
          }
          *(_DWORD *)v404 = 136446210;
          *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          BOOL v350 = "%{public}s called with null http1, backtrace limit exceeded";
          goto LABEL_773;
        }
        __int16 v383 = (char *)__nw_create_backtrace_string();
        BOOL v348 = __nwlog_obj();
        os_log_type_t v349 = v400[0];
        BOOL v386 = os_log_type_enabled(v348, v400[0]);
        if (!v383)
        {
          if (!v386) {
            goto LABEL_775;
          }
          *(_DWORD *)v404 = 136446210;
          *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          BOOL v350 = "%{public}s called with null http1, no backtrace";
          goto LABEL_773;
        }
        if (v386)
        {
          *(_DWORD *)v404 = 136446466;
          *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          *(_WORD *)&v404[12] = 2082;
          *(void *)&v404[14] = v383;
          v385 = "%{public}s called with null http1, dumping backtrace:%{public}s";
          goto LABEL_740;
        }
        goto LABEL_741;
      }
LABEL_775:
      if (!v347) {
        goto LABEL_598;
      }
      goto LABEL_776;
    }
    __nwlog_obj();
    uint64_t v208 = *(unsigned int *)(v203 + 368);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->nonresuable_connections";
    *(_WORD *)&buf[22] = 2048;
    *(void *)&unsigned char buf[24] = 1;
    *(_WORD *)&buf[32] = 2048;
    *(void *)&buf[34] = v208;
    BOOL v209 = (char *)_os_log_send_and_compose_impl();
    v404[0] = 16;
    v400[0] = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v209, v404, v400))
    {
      if (v404[0] == 17)
      {
        uint64_t v210 = __nwlog_obj();
        os_log_type_t v211 = v404[0];
        if (os_log_type_enabled(v210, (os_log_type_t)v404[0]))
        {
          uint64_t v212 = *(unsigned int *)(v203 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v212;
          BOOL v213 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_589:
          _os_log_impl(&dword_1830D4000, v210, v211, v213, buf, 0x2Au);
        }
      }
      else if (v400[0])
      {
        int v282 = (char *)__nw_create_backtrace_string();
        uint64_t v210 = __nwlog_obj();
        os_log_type_t v211 = v404[0];
        BOOL v283 = os_log_type_enabled(v210, (os_log_type_t)v404[0]);
        if (v282)
        {
          if (v283)
          {
            uint64_t v284 = *(unsigned int *)(v203 + 368);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v284;
            *(_WORD *)&buf[42] = 2082;
            *(void *)&unsigned char buf[44] = v282;
            _os_log_impl(&dword_1830D4000, v210, v211, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v282);
          goto LABEL_590;
        }
        if (v283)
        {
          uint64_t v314 = *(unsigned int *)(v203 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v314;
          BOOL v213 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
          goto LABEL_589;
        }
      }
      else
      {
        uint64_t v210 = __nwlog_obj();
        os_log_type_t v211 = v404[0];
        if (os_log_type_enabled(v210, (os_log_type_t)v404[0]))
        {
          uint64_t v306 = *(unsigned int *)(v203 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v306;
          BOOL v213 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
          goto LABEL_589;
        }
      }
    }
LABEL_590:
    if (v209) {
      free(v209);
    }
    *(_DWORD *)(v203 + 368) = -1;
    goto LABEL_593;
  }
  if ((*(_WORD *)(v11 + 872) & 0x204) != 4)
  {
    int v26 = *(void **)(v12 + 48);
    nw_protocol_input_available(v26, v12);
    return;
  }
  if (((*(unsigned __int16 *)(v11 + 872) | (*(unsigned __int8 *)(v11 + 874) << 16)) & 0x20000) != 0
    || (*(unsigned char *)(v8 + 376) & 1) == 0)
  {
    if (*(unsigned char *)(v11 + 158)) {
      return;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v21 = gLogObj;
    if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG)) {
      return;
    }
    uint64_t v22 = *(void *)(v11 + 488);
    int v23 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
    int v24 = *(_DWORD *)(v11 + 860);
    if (v22) {
      LODWORD(v22) = *(_DWORD *)(v22 + 424);
    }
    identifier = (nw_protocol_identifier *)"invalid";
    if (a2->identifier) {
      identifier = a2->identifier;
    }
LABEL_61:
    *(_DWORD *)buf = 136447746;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v11 + 74;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&unsigned char buf[24] = " ";
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v23;
    *(_WORD *)&buf[38] = 1024;
    *(_DWORD *)&buf[40] = v24;
    *(_WORD *)&unsigned char buf[44] = 1024;
    *(_DWORD *)&buf[46] = v22;
    *(_WORD *)&buf[50] = 2080;
    *(void *)&buf[52] = identifier;
    uint64_t v20 = "%{public}s %{public}s%s<i%u:c%u:s%u> ignoring input_available from %s";
    uint64_t v29 = v21;
    uint32_t v30 = 60;
    goto LABEL_62;
  }
  if ((*(unsigned char *)(v11 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      BOOL v194 = __nwlog_obj();
      if (os_log_type_enabled(v194, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v195 = *(void *)(v11 + 488);
        int v196 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
        int v197 = *(_DWORD *)(v11 + 860);
        if (v195) {
          LODWORD(v195) = *(_DWORD *)(v195 + 424);
        }
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_input_available";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v11 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v196;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v197;
        *(_WORD *)&unsigned char buf[44] = 1024;
        *(_DWORD *)&buf[46] = v195;
        *(_WORD *)&buf[50] = 2048;
        *(void *)&buf[52] = v11;
        _os_log_impl(&dword_1830D4000, v194, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> active server connection %p got input_available after completing input, checking to defer new_flow", buf, 0x3Cu);
      }
    }
  }
  if ((*(unsigned char *)(v8 + 376) & 1) == 0)
  {
LABEL_242:
    if (*(unsigned char *)(v8 + 158)) {
      return;
    }
    if (!gLogDatapath) {
      return;
    }
    uint64_t v126 = __nwlog_obj();
    if (!os_log_type_enabled(v126, OS_LOG_TYPE_DEBUG)) {
      return;
    }
    int v127 = *(_DWORD *)(v8 + 372);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v8 + 74;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&unsigned char buf[24] = " ";
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v127;
    uint64_t v20 = "%{public}s %{public}s%s<i%u> called when not in server mode, ignoring";
    uint64_t v29 = v126;
    uint32_t v30 = 38;
LABEL_62:
    _os_log_impl(&dword_1830D4000, v29, OS_LOG_TYPE_DEBUG, v20, buf, v30);
    return;
  }
  uint64_t v13 = *(void ***)(v8 + 328);
  if (!v13)
  {
LABEL_267:
    if ((*(unsigned char *)(v11 + 158) & 1) == 0)
    {
      uint64_t v16 = __nwlog_obj();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v148 = *(void *)(v11 + 488);
        int v149 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
        int v150 = *(_DWORD *)(v11 + 860);
        if (v148) {
          LODWORD(v148) = *(_DWORD *)(v148 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v11 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v149;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v150;
        *(_WORD *)&unsigned char buf[44] = 1024;
        *(_DWORD *)&buf[46] = v148;
        uint64_t v20 = "%{public}s %{public}s%s<i%u:c%u:s%u> called without listen handler, ignoring";
        goto LABEL_272;
      }
    }
    return;
  }
  int v14 = (unsigned __int16 *)(v11 + 872);
  uint64_t v15 = *v13;
  if (!v15 || !*v15)
  {
    if ((*(unsigned char *)(v8 + 158) & 1) == 0)
    {
      int v214 = __nwlog_obj();
      if (os_log_type_enabled(v214, OS_LOG_TYPE_ERROR))
      {
        int v215 = *(_DWORD *)(v8 + 372);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v8 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v215;
        _os_log_impl(&dword_1830D4000, v214, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> listen handler has no new_flow callback, ignoring incoming flow", buf, 0x26u);
      }
    }
    int v216 = *v14;
    int v217 = v216 | (*(unsigned __int8 *)(v11 + 874) << 16);
    if ((v216 & 0x100) == 0)
    {
      *(unsigned char *)(v11 + 874) = BYTE2(v217);
      *int v14 = v217 | 0x100;
      if ((*(unsigned char *)(v11 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          int v351 = __nwlog_obj();
          if (os_log_type_enabled(v351, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v352 = *(void *)(v11 + 488);
            int v353 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
            int v354 = *(_DWORD *)(v11 + 860);
            if (v352) {
              LODWORD(v352) = *(_DWORD *)(v352 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v11 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v353;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v354;
            *(_WORD *)&unsigned char buf[44] = 1024;
            *(_DWORD *)&buf[46] = v352;
            _os_log_impl(&dword_1830D4000, v351, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
          }
        }
      }
      uint64_t v218 = *(void *)(v11 + 480);
      if (v218)
      {
        int v219 = *v14;
        int v220 = v219 | (*(unsigned __int8 *)(v11 + 874) << 16);
        if ((v219 & 0x800) == 0)
        {
          *(unsigned char *)(v11 + 874) = BYTE2(v220);
          *int v14 = v220 | 0x800;
          uint64_t v221 = *(unsigned int *)(v218 + 368) + 1;
          uint64_t v222 = v221 << 31 >> 31;
          *(_DWORD *)(v218 + 368) = v221;
          if (v222 == v221 && (v222 & 0x8000000000000000) == 0) {
            goto LABEL_615;
          }
          __nwlog_obj();
          uint64_t v223 = *(unsigned int *)(v218 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v223;
          v224 = (char *)_os_log_send_and_compose_impl();
          v404[0] = 16;
          v400[0] = OS_LOG_TYPE_DEFAULT;
          if (__nwlog_fault(v224, v404, v400))
          {
            if (v404[0] == 17)
            {
              os_log_type_t v225 = __nwlog_obj();
              os_log_type_t v226 = v404[0];
              if (os_log_type_enabled(v225, (os_log_type_t)v404[0]))
              {
                uint64_t v227 = *(unsigned int *)(v218 + 368);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                *(void *)&unsigned char buf[24] = 1;
                *(_WORD *)&buf[32] = 2048;
                *(void *)&buf[34] = v227;
                uint64_t v228 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_611:
                _os_log_impl(&dword_1830D4000, v225, v226, v228, buf, 0x2Au);
              }
            }
            else if (v400[0])
            {
              unsigned int v287 = (char *)__nw_create_backtrace_string();
              os_log_type_t v225 = __nwlog_obj();
              os_log_type_t v226 = v404[0];
              BOOL v288 = os_log_type_enabled(v225, (os_log_type_t)v404[0]);
              if (v287)
              {
                if (v288)
                {
                  uint64_t v289 = *(unsigned int *)(v218 + 368);
                  *(_DWORD *)buf = 136447234;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->nonresuable_connections";
                  *(_WORD *)&buf[22] = 2048;
                  *(void *)&unsigned char buf[24] = 1;
                  *(_WORD *)&buf[32] = 2048;
                  *(void *)&buf[34] = v289;
                  *(_WORD *)&buf[42] = 2082;
                  *(void *)&unsigned char buf[44] = v287;
                  _os_log_impl(&dword_1830D4000, v225, v226, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                }
                free(v287);
                goto LABEL_612;
              }
              if (v288)
              {
                uint64_t v325 = *(unsigned int *)(v218 + 368);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                *(void *)&unsigned char buf[24] = 1;
                *(_WORD *)&buf[32] = 2048;
                *(void *)&buf[34] = v325;
                uint64_t v228 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                goto LABEL_611;
              }
            }
            else
            {
              os_log_type_t v225 = __nwlog_obj();
              os_log_type_t v226 = v404[0];
              if (os_log_type_enabled(v225, (os_log_type_t)v404[0]))
              {
                uint64_t v307 = *(unsigned int *)(v218 + 368);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                *(void *)&unsigned char buf[24] = 1;
                *(_WORD *)&buf[32] = 2048;
                *(void *)&buf[34] = v307;
                uint64_t v228 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                goto LABEL_611;
              }
            }
          }
LABEL_612:
          if (v224) {
            free(v224);
          }
          *(_DWORD *)(v218 + 368) = -1;
LABEL_615:
          if ((*(unsigned char *)(v11 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              int v368 = __nwlog_obj();
              if (os_log_type_enabled(v368, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v369 = *(void *)(v11 + 488);
                int v370 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
                int v371 = *(_DWORD *)(v11 + 860);
                if (v369) {
                  LODWORD(v369) = *(_DWORD *)(v369 + 424);
                }
                int v372 = *(_DWORD *)(v218 + 368) + *(_DWORD *)(v218 + 364);
                *(_DWORD *)buf = 136447746;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v11 + 74;
                *(_WORD *)&buf[22] = 2080;
                *(void *)&unsigned char buf[24] = " ";
                *(_WORD *)&buf[32] = 1024;
                *(_DWORD *)&buf[34] = v370;
                *(_WORD *)&buf[38] = 1024;
                *(_DWORD *)&buf[40] = v371;
                *(_WORD *)&unsigned char buf[44] = 1024;
                *(_DWORD *)&buf[46] = v369;
                *(_WORD *)&buf[50] = 1024;
                *(_DWORD *)&buf[52] = v372;
                _os_log_impl(&dword_1830D4000, v368, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
              }
            }
          }
          os_log_type_t v326 = *(void **)(v11 + 496);
          if (v326)
          {
            uint64_t v327 = *(void *)(v11 + 480);
            if (v327)
            {
LABEL_619:
              uint64_t v328 = *(void *)(v327 + 200);
              *(void *)buf = MEMORY[0x1E4F143A8];
              *(void *)&buf[8] = 0x40000000;
              *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
              *(void *)&unsigned char buf[24] = &unk_1E52411C8;
              *(void *)&buf[32] = v328;
              nw_queue_context_async(v326, buf);
              goto LABEL_620;
            }
LABEL_644:
            __nwlog_obj();
            *(_DWORD *)v404 = 136446210;
            *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
            os_log_type_t v339 = (char *)_os_log_send_and_compose_impl();
            v400[0] = OS_LOG_TYPE_ERROR;
            os_log_type_t type = OS_LOG_TYPE_DEFAULT;
            if (!__nwlog_fault(v339, v400, &type)) {
              goto LABEL_767;
            }
            if (v400[0] == OS_LOG_TYPE_FAULT)
            {
              v340 = __nwlog_obj();
              os_log_type_t v341 = v400[0];
              if (!os_log_type_enabled(v340, v400[0])) {
                goto LABEL_767;
              }
              *(_DWORD *)v404 = 136446210;
              *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              uint64_t v342 = "%{public}s called with null http1";
LABEL_765:
              uint64_t v387 = v404;
              goto LABEL_766;
            }
            if (type == OS_LOG_TYPE_DEFAULT)
            {
              v340 = __nwlog_obj();
              os_log_type_t v341 = v400[0];
              if (!os_log_type_enabled(v340, v400[0])) {
                goto LABEL_767;
              }
              *(_DWORD *)v404 = 136446210;
              *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              uint64_t v342 = "%{public}s called with null http1, backtrace limit exceeded";
              goto LABEL_765;
            }
            int v373 = (char *)__nw_create_backtrace_string();
            v340 = __nwlog_obj();
            os_log_type_t v341 = v400[0];
            BOOL v374 = os_log_type_enabled(v340, v400[0]);
            if (!v373)
            {
              if (!v374) {
                goto LABEL_767;
              }
              *(_DWORD *)v404 = 136446210;
              *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              uint64_t v342 = "%{public}s called with null http1, no backtrace";
              goto LABEL_765;
            }
            if (v374)
            {
              *(_DWORD *)v404 = 136446466;
              *(void *)&v404[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              *(_WORD *)&v404[12] = 2082;
              *(void *)&v404[14] = v373;
              uint64_t v375 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_720:
              uint64_t v377 = v404;
LABEL_729:
              _os_log_impl(&dword_1830D4000, v340, v341, v375, v377, 0x16u);
              goto LABEL_730;
            }
            goto LABEL_730;
          }
          goto LABEL_679;
        }
LABEL_496:
        if ((*(unsigned char *)(v11 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            uint64_t v258 = __nwlog_obj();
            if (os_log_type_enabled(v258, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v259 = *(void *)(v11 + 488);
              int v260 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
              int v261 = *(_DWORD *)(v11 + 860);
              if (v259) {
                LODWORD(v259) = *(_DWORD *)(v259 + 424);
              }
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v11 + 74;
              *(_WORD *)&buf[22] = 2080;
              *(void *)&unsigned char buf[24] = " ";
              *(_WORD *)&buf[32] = 1024;
              *(_DWORD *)&buf[34] = v260;
              *(_WORD *)&buf[38] = 1024;
              *(_DWORD *)&buf[40] = v261;
              *(_WORD *)&unsigned char buf[44] = 1024;
              *(_DWORD *)&buf[46] = v259;
              _os_log_impl(&dword_1830D4000, v258, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
            }
          }
        }
        goto LABEL_620;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
      os_log_type_t v339 = (char *)_os_log_send_and_compose_impl();
      v404[0] = 16;
      v400[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v339, v404, v400)) {
        goto LABEL_767;
      }
      if (v404[0] != 17)
      {
        if (v400[0])
        {
          v355 = (char *)__nw_create_backtrace_string();
          v340 = __nwlog_obj();
          os_log_type_t v341 = v404[0];
          BOOL v356 = os_log_type_enabled(v340, (os_log_type_t)v404[0]);
          if (v355)
          {
            if (v356)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v355;
              _os_log_impl(&dword_1830D4000, v340, v341, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v355);
LABEL_767:
            if (!v339) {
              goto LABEL_620;
            }
            goto LABEL_768;
          }
LABEL_747:
          if (!v356) {
            goto LABEL_767;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          uint64_t v342 = "%{public}s called with null http1, no backtrace";
          goto LABEL_749;
        }
LABEL_743:
        v340 = __nwlog_obj();
        os_log_type_t v341 = v404[0];
        if (!os_log_type_enabled(v340, (os_log_type_t)v404[0])) {
          goto LABEL_767;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        uint64_t v342 = "%{public}s called with null http1, backtrace limit exceeded";
        goto LABEL_749;
      }
      goto LABEL_689;
    }
LABEL_459:
    if ((*(unsigned char *)(v11 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v16 = __nwlog_obj();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v248 = *(void *)(v11 + 488);
          int v249 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
          int v250 = *(_DWORD *)(v11 + 860);
          if (v248) {
            LODWORD(v248) = *(_DWORD *)(v248 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v11 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v249;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v250;
          *(_WORD *)&unsigned char buf[44] = 1024;
          *(_DWORD *)&buf[46] = v248;
          uint64_t v20 = "%{public}s %{public}s%s<i%u:c%u:s%u> already closed";
          goto LABEL_272;
        }
      }
    }
    return;
  }
  if (((*v14 | (*(unsigned __int8 *)(v11 + 874) << 16)) & 0x20000) != 0 || (*v14 & 0x14) != 0 && *(void *)(v11 + 616))
  {
    if ((*(unsigned char *)(v11 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v16 = __nwlog_obj();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v17 = *(void *)(v11 + 488);
          int v18 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
          int v19 = *(_DWORD *)(v11 + 860);
          if (v17) {
            LODWORD(v17) = *(_DWORD *)(v17 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_detect_next_request";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v11 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v18;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v19;
          *(_WORD *)&unsigned char buf[44] = 1024;
          *(_DWORD *)&buf[46] = v17;
          uint64_t v20 = "%{public}s %{public}s%s<i%u:c%u:s%u> not attempting to read more on connection awaiting a new flow, awai"
                "ting disconnect or remove_input_handler";
LABEL_272:
          uint64_t v29 = v16;
          uint32_t v30 = 50;
          goto LABEL_62;
        }
      }
    }
    return;
  }
  *(void *)v400 = 0;
  os_log_type_t v401 = v400;
  if (nw_protocol_get_input_frames(*(void *)(v11 + 32), v11, 1, 0xFFFFFFFFLL, 1, (uint64_t)v400))
  {
    if (!(*(unsigned char *)(v11 + 158) & 1 | (gLogDatapath == 0)))
    {
      uint64_t v270 = __nwlog_obj();
      if (os_log_type_enabled(v270, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v271 = *(void *)(v11 + 488);
        int v272 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
        int v273 = *(_DWORD *)(v11 + 860);
        if (v271) {
          LODWORD(v271) = *(_DWORD *)(v271 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_detect_next_request";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v11 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v272;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v273;
        *(_WORD *)&unsigned char buf[44] = 1024;
        *(_DWORD *)&buf[46] = v271;
        _os_log_impl(&dword_1830D4000, v270, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> received a frame for non-idle connection, deferring new flow", buf, 0x32u);
      }
    }
    uint64_t v52 = *(_DWORD **)v400;
    if (!*(void *)v400)
    {
      if (*(unsigned char *)(v11 + 158)) {
        goto LABEL_323;
      }
      if (!gLogDatapath) {
        goto LABEL_323;
      }
      unsigned int v94 = __nwlog_obj();
      if (!os_log_type_enabled(v94, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_323;
      }
      uint64_t v95 = *(void *)(v11 + 488);
      int v96 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
      int v97 = *(_DWORD *)(v11 + 860);
      if (v95) {
        LODWORD(v95) = *(_DWORD *)(v95 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_move_frame_array_to_unprocessed_input_frames";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v11 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v96;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v97;
      *(_WORD *)&unsigned char buf[44] = 1024;
      *(_DWORD *)&buf[46] = v95;
      BOOL v98 = "%{public}s %{public}s%s<i%u:c%u:s%u> no additional body frames to move";
      unsigned int v99 = v94;
      uint32_t v100 = 50;
      goto LABEL_543;
    }
    uint64_t v399 = v11 + 616;
    if (gLogDatapath)
    {
      os_log_type_t v290 = __nwlog_obj();
      if (os_log_type_enabled(v290, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v52;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = v400;
        *(_WORD *)&buf[32] = 2048;
        *(void *)&buf[34] = v11 + 616;
        *(_WORD *)&buf[42] = 1024;
        *(_DWORD *)&unsigned char buf[44] = 1;
        *(_WORD *)&buf[48] = 1024;
        *(_DWORD *)&buf[50] = 1;
        *(_WORD *)&buf[54] = 1024;
        *(_DWORD *)&buf[56] = 1;
        _os_log_impl(&dword_1830D4000, v290, OS_LOG_TYPE_DEBUG, "%{public}s called: initial frame %p, source %p, destination %p, temp %u, forwards %u, append %u", buf, 0x3Cu);
      }
    }
    int v53 = 0;
    *(void *)v404 = 0;
    *(void *)&v404[8] = v404;
    *(void *)&long long v51 = 136447234;
    do
    {
      uint64_t v56 = (_DWORD *)*((void *)v52 + 4);
      if (!v56 && !*((void *)v52 + 5)) {
        uint64_t v56 = 0;
      }
      if (gLogDatapath)
      {
        long long v394 = v51;
        int loga = __nwlog_obj();
        BOOL v58 = os_log_type_enabled(loga, OS_LOG_TYPE_DEBUG);
        long long v51 = v394;
        if (v58)
        {
          int v59 = v52[13];
          if (v59) {
            v59 -= v52[14] + v52[15];
          }
          if (v56)
          {
            int v60 = v56[13];
            if (v60) {
              v60 -= v56[14] + v56[15];
            }
          }
          else
          {
            int v60 = 0;
          }
          *(_DWORD *)buf = v394;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v52;
          *(_WORD *)&buf[22] = 1024;
          *(_DWORD *)&unsigned char buf[24] = v59;
          *(_WORD *)&buf[28] = 2048;
          *(void *)&buf[30] = v56;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v60;
          _os_log_impl(&dword_1830D4000, loga, OS_LOG_TYPE_DEBUG, "%{public}s current frame: (%p, %u bytes), next frame: (%p, %u bytes)", buf, 0x2Cu);
          long long v51 = v394;
        }
      }
      uint64_t v57 = *((void *)v52 + 4);
      uint64_t v54 = (void *)*((void *)v52 + 5);
      if (v57)
      {
        *(void *)(v57 + 40) = v54;
        uint64_t v54 = (void *)*((void *)v52 + 5);
      }
      else
      {
        os_log_type_t v401 = (os_log_type_t *)*((void *)v52 + 5);
      }
      *uint64_t v54 = v57;
      uint64_t v55 = *(void **)&v404[8];
      *((void *)v52 + 4) = 0;
      *((void *)v52 + 5) = v55;
      *uint64_t v55 = v52;
      *(void *)&v404[8] = v52 + 8;
      ++v53;
      uint64_t v52 = v56;
    }
    while (v56);
    if (!v53) {
      goto LABEL_322;
    }
    if (gLogDatapath)
    {
      long long v398 = v51;
      int v304 = __nwlog_obj();
      BOOL v305 = os_log_type_enabled(v304, OS_LOG_TYPE_DEBUG);
      long long v51 = v398;
      if (v305)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v53;
        _os_log_impl(&dword_1830D4000, v304, OS_LOG_TYPE_DEBUG, "%{public}s moving %u frames from temp array to destination array", buf, 0x12u);
        long long v51 = v398;
      }
    }
    int v74 = *(_DWORD **)v404;
    int v75 = v53;
    if (*(void *)v404)
    {
      int v75 = v53;
      do
      {
        uint64_t v78 = v74 + 8;
        uint64_t v77 = (_DWORD *)*((void *)v74 + 4);
        if (!v77 && !*((void *)v74 + 5)) {
          uint64_t v77 = 0;
        }
        if (gLogDatapath)
        {
          long long v396 = v51;
          logc = __nwlog_obj();
          BOOL v81 = os_log_type_enabled(logc, OS_LOG_TYPE_DEBUG);
          long long v51 = v396;
          if (v81)
          {
            int v82 = v74[13];
            if (v82) {
              v82 -= v74[14] + v74[15];
            }
            if (v77)
            {
              int v83 = v77[13];
              if (v83) {
                v83 -= v77[14] + v77[15];
              }
            }
            else
            {
              int v83 = 0;
            }
            *(_DWORD *)buf = v396;
            *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v74;
            *(_WORD *)&buf[22] = 1024;
            *(_DWORD *)&unsigned char buf[24] = v82;
            *(_WORD *)&buf[28] = 2048;
            *(void *)&buf[30] = v77;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v83;
            _os_log_impl(&dword_1830D4000, logc, OS_LOG_TYPE_DEBUG, "%{public}s current frame: (%p, %u bytes), next frame: (%p, %u bytes)", buf, 0x2Cu);
            long long v51 = v396;
          }
        }
        uint64_t v79 = *((void *)v74 + 4);
        uint64_t v80 = (void *)*((void *)v74 + 5);
        if (v79)
        {
          *(void *)(v79 + 40) = v80;
          uint64_t v80 = (void *)*((void *)v74 + 5);
        }
        else
        {
          *(void *)&v404[8] = *((void *)v74 + 5);
        }
        void *v80 = v79;
        *uint64_t v78 = 0;
        *((void *)v74 + 5) = 0;
        uint64_t v76 = *(void **)(v11 + 624);
        *((void *)v74 + 5) = v76;
        *uint64_t v76 = v74;
        *(void *)(v11 + 624) = v78;
        --v75;
        int v74 = v77;
      }
      while (v77);
      if (!v75)
      {
LABEL_322:
        if (!gLogDatapath) {
          goto LABEL_323;
        }
        v291 = __nwlog_obj();
        if (!os_log_type_enabled(v291, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_323;
        }
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v53;
        *(_WORD *)&buf[18] = 2048;
        *(void *)&buf[20] = v400;
        *(_WORD *)&buf[28] = 2048;
        *(void *)&buf[30] = v399;
        BOOL v98 = "%{public}s moved %u frames from %p to %p";
        unsigned int v99 = v291;
        uint32_t v100 = 38;
LABEL_543:
        _os_log_impl(&dword_1830D4000, v99, OS_LOG_TYPE_DEBUG, v98, buf, v100);
LABEL_323:
        *((unsigned char *)v14 + 2) = (*v14 | (*((unsigned __int8 *)v14 + 2) << 16) | 0x20000u) >> 16;
        return;
      }
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
    *(_WORD *)&unsigned char buf[12] = 1024;
    *(_DWORD *)&buf[14] = v75;
    unsigned int v105 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v402 = 0;
    if (__nwlog_fault(v105, &type, &v402))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        os_log_type_t v106 = __nwlog_obj();
        os_log_type_t v107 = type;
        if (!os_log_type_enabled(v106, type)) {
          goto LABEL_320;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v75;
        uint64_t v108 = "%{public}s failed to deliver all temp frames, remaining %u frames";
        goto LABEL_319;
      }
      if (!v402)
      {
        os_log_type_t v106 = __nwlog_obj();
        os_log_type_t v107 = type;
        if (!os_log_type_enabled(v106, type)) {
          goto LABEL_320;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v75;
        uint64_t v108 = "%{public}s failed to deliver all temp frames, remaining %u frames, backtrace limit exceeded";
        goto LABEL_319;
      }
      os_log_type_t v111 = (char *)__nw_create_backtrace_string();
      os_log_type_t v106 = __nwlog_obj();
      os_log_type_t v107 = type;
      BOOL v112 = os_log_type_enabled(v106, type);
      if (v111)
      {
        if (v112)
        {
          *(_DWORD *)buf = 136446722;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 1024;
          *(_DWORD *)&buf[14] = v75;
          *(_WORD *)&buf[18] = 2082;
          *(void *)&buf[20] = v111;
          _os_log_impl(&dword_1830D4000, v106, v107, "%{public}s failed to deliver all temp frames, remaining %u frames, dumping backtrace:%{public}s", buf, 0x1Cu);
        }
        free(v111);
        goto LABEL_320;
      }
      if (v112)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v75;
        uint64_t v108 = "%{public}s failed to deliver all temp frames, remaining %u frames, no backtrace";
LABEL_319:
        _os_log_impl(&dword_1830D4000, v106, v107, v108, buf, 0x12u);
      }
    }
LABEL_320:
    if (v105) {
      free(v105);
    }
    goto LABEL_322;
  }
  if (!(*(unsigned char *)(v11 + 158) & 1 | (gLogDatapath == 0)))
  {
    uint64_t v16 = __nwlog_obj();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v84 = *(void *)(v11 + 488);
      int v85 = *(_DWORD *)(*(void *)(v11 + 480) + 372);
      int v86 = *(_DWORD *)(v11 + 860);
      if (v84) {
        LODWORD(v84) = *(_DWORD *)(v84 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_detect_next_request";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v11 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v85;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v86;
      *(_WORD *)&unsigned char buf[44] = 1024;
      *(_DWORD *)&buf[46] = v84;
      uint64_t v20 = "%{public}s %{public}s%s<i%u:c%u:s%u> read 0 frames on non-idle connection, not deferring new flow";
      goto LABEL_272;
    }
  }
}

BOOL nw_protocol_http1_reset(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v392 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v249 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v249, aBlock, &type)) {
      goto LABEL_614;
    }
    if (aBlock[0] != 17)
    {
      if (type == OS_LOG_TYPE_DEFAULT)
      {
        int v250 = __nwlog_obj();
        os_log_type_t v251 = aBlock[0];
        if (!os_log_type_enabled(v250, (os_log_type_t)aBlock[0])) {
          goto LABEL_614;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        int v252 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_613;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v250 = __nwlog_obj();
      os_log_type_t v251 = aBlock[0];
      BOOL v263 = os_log_type_enabled(v250, (os_log_type_t)aBlock[0]);
      if (!backtrace_string)
      {
        if (!v263) {
          goto LABEL_614;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        int v252 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_613;
      }
      if (v263)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = backtrace_string;
        _os_log_impl(&dword_1830D4000, v250, v251, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_614;
    }
    int v250 = __nwlog_obj();
    os_log_type_t v251 = aBlock[0];
    if (!os_log_type_enabled(v250, (os_log_type_t)aBlock[0])) {
      goto LABEL_614;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v252 = "%{public}s called with null protocol";
LABEL_613:
    _os_log_impl(&dword_1830D4000, v250, v251, v252, buf, 0xCu);
    goto LABEL_614;
  }
  handle = (char *)a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v249 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v249, aBlock, &type)) {
      goto LABEL_614;
    }
    if (aBlock[0] != 17)
    {
      if (type == OS_LOG_TYPE_DEFAULT)
      {
        int v250 = __nwlog_obj();
        os_log_type_t v251 = aBlock[0];
        if (!os_log_type_enabled(v250, (os_log_type_t)aBlock[0])) {
          goto LABEL_614;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        int v252 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_613;
      }
      int v264 = (char *)__nw_create_backtrace_string();
      int v250 = __nwlog_obj();
      os_log_type_t v251 = aBlock[0];
      BOOL v265 = os_log_type_enabled(v250, (os_log_type_t)aBlock[0]);
      if (!v264)
      {
        if (!v265) {
          goto LABEL_614;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        int v252 = "%{public}s called with null handle, no backtrace";
        goto LABEL_613;
      }
      if (v265)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v264;
        int v266 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_421:
        _os_log_impl(&dword_1830D4000, v250, v251, v266, buf, 0x16u);
      }
LABEL_422:
      free(v264);
      if (!v249)
      {
LABEL_616:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
        uint64_t v254 = (char *)_os_log_send_and_compose_impl();
        aBlock[0] = 16;
        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
        if (!__nwlog_fault(v254, aBlock, &type)) {
          goto LABEL_647;
        }
        if (aBlock[0] == 17)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          BOOL v255 = gLogObj;
          os_log_type_t v256 = aBlock[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
            goto LABEL_647;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
          os_log_type_t v257 = "%{public}s called with null http1";
        }
        else
        {
          if (type)
          {
            v355 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            BOOL v356 = gLogObj;
            os_log_type_t v357 = aBlock[0];
            BOOL v358 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]);
            if (v355)
            {
              if (v358)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v355;
                int v359 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_641:
                _os_log_impl(&dword_1830D4000, v356, v357, v359, buf, 0x16u);
              }
LABEL_642:
              free(v355);
              goto LABEL_647;
            }
            if (!v358) {
              goto LABEL_647;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
            os_log_type_t v257 = "%{public}s called with null http1, no backtrace";
LABEL_652:
            uint64_t v361 = v356;
            os_log_type_t v362 = v357;
            goto LABEL_646;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          BOOL v255 = gLogObj;
          os_log_type_t v256 = aBlock[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
            goto LABEL_647;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
          os_log_type_t v257 = "%{public}s called with null http1, backtrace limit exceeded";
        }
LABEL_645:
        uint64_t v361 = v255;
        os_log_type_t v362 = v256;
LABEL_646:
        _os_log_impl(&dword_1830D4000, v361, v362, v257, buf, 0xCu);
        goto LABEL_647;
      }
LABEL_615:
      free(v249);
      goto LABEL_616;
    }
    int v250 = __nwlog_obj();
    os_log_type_t v251 = aBlock[0];
    if (!os_log_type_enabled(v250, (os_log_type_t)aBlock[0])) {
      goto LABEL_614;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v252 = "%{public}s called with null handle";
    goto LABEL_613;
  }
  int v4 = *((_DWORD *)handle + 6);
  uint64_t v5 = (uint64_t *)a1->handle;
  if (v4 == 1) {
    goto LABEL_10;
  }
  if (v4 != 2)
  {
    if (v4 != 3) {
      goto LABEL_616;
    }
    uint64_t v6 = *((void *)handle + 2);
    if (v6)
    {
      uint64_t v5 = (uint64_t *)(v6 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v249 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v249, aBlock, &type))
    {
      if (aBlock[0] == 17)
      {
        int v250 = __nwlog_obj();
        os_log_type_t v251 = aBlock[0];
        if (!os_log_type_enabled(v250, (os_log_type_t)aBlock[0])) {
          goto LABEL_614;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        int v252 = "%{public}s called with null handle->http1_connection";
        goto LABEL_613;
      }
      if (type == OS_LOG_TYPE_DEFAULT)
      {
        int v250 = __nwlog_obj();
        os_log_type_t v251 = aBlock[0];
        if (!os_log_type_enabled(v250, (os_log_type_t)aBlock[0])) {
          goto LABEL_614;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        int v252 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_613;
      }
      int v264 = (char *)__nw_create_backtrace_string();
      int v250 = __nwlog_obj();
      os_log_type_t v251 = aBlock[0];
      BOOL v333 = os_log_type_enabled(v250, (os_log_type_t)aBlock[0]);
      if (!v264)
      {
        if (!v333) {
          goto LABEL_614;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        int v252 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_613;
      }
      if (v333)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v264;
        int v266 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
        goto LABEL_421;
      }
      goto LABEL_422;
    }
LABEL_614:
    if (!v249) {
      goto LABEL_616;
    }
    goto LABEL_615;
  }
  uint64_t v7 = *((void *)handle + 1);
  if (!v7)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v249 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v249, aBlock, &type)) {
      goto LABEL_614;
    }
    if (aBlock[0] == 17)
    {
      int v250 = __nwlog_obj();
      os_log_type_t v251 = aBlock[0];
      if (!os_log_type_enabled(v250, (os_log_type_t)aBlock[0])) {
        goto LABEL_614;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v252 = "%{public}s called with null handle->http1_stream";
      goto LABEL_613;
    }
    if (type == OS_LOG_TYPE_DEFAULT)
    {
      int v250 = __nwlog_obj();
      os_log_type_t v251 = aBlock[0];
      if (!os_log_type_enabled(v250, (os_log_type_t)aBlock[0])) {
        goto LABEL_614;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v252 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_613;
    }
    int v264 = (char *)__nw_create_backtrace_string();
    int v250 = __nwlog_obj();
    os_log_type_t v251 = aBlock[0];
    BOOL v334 = os_log_type_enabled(v250, (os_log_type_t)aBlock[0]);
    if (!v264)
    {
      if (!v334) {
        goto LABEL_614;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v252 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_613;
    }
    if (v334)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v264;
      int v266 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_421;
    }
    goto LABEL_422;
  }
  uint64_t v5 = (uint64_t *)(v7 + 248);
LABEL_10:
  uint64_t v8 = *v5;
  if (!*v5) {
    goto LABEL_616;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
    uint64_t v254 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v254, aBlock, &type)) {
      goto LABEL_647;
    }
    if (aBlock[0] == 17)
    {
      BOOL v255 = __nwlog_obj();
      os_log_type_t v256 = aBlock[0];
      if (!os_log_type_enabled(v255, (os_log_type_t)aBlock[0])) {
        goto LABEL_647;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
      os_log_type_t v257 = "%{public}s called with null other_protocol";
    }
    else if (type)
    {
      int v304 = (char *)__nw_create_backtrace_string();
      BOOL v255 = __nwlog_obj();
      os_log_type_t v256 = aBlock[0];
      BOOL v305 = os_log_type_enabled(v255, (os_log_type_t)aBlock[0]);
      if (v304)
      {
        if (v305)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v304;
          _os_log_impl(&dword_1830D4000, v255, v256, "%{public}s called with null other_protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v304);
        goto LABEL_647;
      }
      if (!v305) {
        goto LABEL_647;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
      os_log_type_t v257 = "%{public}s called with null other_protocol, no backtrace";
    }
    else
    {
      BOOL v255 = __nwlog_obj();
      os_log_type_t v256 = aBlock[0];
      if (!os_log_type_enabled(v255, (os_log_type_t)aBlock[0])) {
        goto LABEL_647;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
      os_log_type_t v257 = "%{public}s called with null other_protocol, backtrace limit exceeded";
    }
    goto LABEL_645;
  }
  if (v4 != 2)
  {
    if (v4 != 3) {
      goto LABEL_633;
    }
    uint64_t v9 = *((void *)handle + 2);
    if (v9)
    {
      uint64_t v10 = (uint64_t *)(v9 + 488);
      goto LABEL_17;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
    uint64_t v318 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v318, aBlock, &type))
    {
      if (aBlock[0] == 17)
      {
        unsigned int v319 = __nwlog_obj();
        os_log_type_t v320 = aBlock[0];
        if (!os_log_type_enabled(v319, (os_log_type_t)aBlock[0])) {
          goto LABEL_631;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        int v321 = "%{public}s called with null handle->http1_connection";
        goto LABEL_630;
      }
      if (type == OS_LOG_TYPE_DEFAULT)
      {
        unsigned int v319 = __nwlog_obj();
        os_log_type_t v320 = aBlock[0];
        if (!os_log_type_enabled(v319, (os_log_type_t)aBlock[0])) {
          goto LABEL_631;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        int v321 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_630;
      }
      v335 = (char *)__nw_create_backtrace_string();
      unsigned int v319 = __nwlog_obj();
      os_log_type_t v320 = aBlock[0];
      BOOL v336 = os_log_type_enabled(v319, (os_log_type_t)aBlock[0]);
      if (v335)
      {
        if (v336)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v335;
          _os_log_impl(&dword_1830D4000, v319, v320, "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v335);
        goto LABEL_631;
      }
      if (v336)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        int v321 = "%{public}s called with null handle->http1_connection, no backtrace";
LABEL_630:
        _os_log_impl(&dword_1830D4000, v319, v320, v321, buf, 0xCu);
      }
    }
LABEL_631:
    if (v318) {
      free(v318);
    }
    goto LABEL_633;
  }
  uint64_t v10 = (uint64_t *)(handle + 8);
LABEL_17:
  uint64_t v11 = *v10;
  if (*v10)
  {
    if ((*(unsigned char *)(v11 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v271 = __nwlog_obj();
        if (os_log_type_enabled(v271, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v272 = *(void *)(v11 + 256);
          int v273 = *(_DWORD *)(*(void *)(v11 + 248) + 372);
          if (v272) {
            LODWORD(v272) = *(_DWORD *)(v272 + 860);
          }
          int v274 = *(_DWORD *)(v11 + 424);
          *(_DWORD *)buf = 136448002;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v11 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v273;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v272;
          *(_WORD *)&unsigned char buf[44] = 1024;
          *(_DWORD *)&buf[46] = v274;
          *(_WORD *)&buf[50] = 2048;
          *(void *)&buf[52] = v11;
          *(_WORD *)&unsigned char buf[60] = 2048;
          *(void *)&buf[62] = a2;
          _os_log_impl(&dword_1830D4000, v271, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for stream %p with replacement protocol: %p", buf, 0x46u);
        }
      }
    }
    a2->output_handler_context = 0;
    int v381 = a2;
    nw_protocol_set_output_handler((uint64_t)a2, 0);
    nw_protocol_set_input_handler(v11, 0);
    uint64_t v12 = *(void **)(v11 + 336);
    if (v12)
    {
      uint64_t v13 = os_retain(v12);
      int v14 = *(void **)(v11 + 320);
      if (v14)
      {
LABEL_22:
        uint64_t v15 = os_retain(v14);
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v13 = 0;
      int v14 = *(void **)(v11 + 320);
      if (v14) {
        goto LABEL_22;
      }
    }
    uint64_t v15 = 0;
LABEL_25:
    object = v15;
    if ((*(_WORD *)(v11 + 428) & 0x1000) == 0) {
      goto LABEL_68;
    }
    if ((*(unsigned char *)(v8 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        int v322 = __nwlog_obj();
        if (os_log_type_enabled(v322, OS_LOG_TYPE_DEBUG))
        {
          int v323 = *(_DWORD *)(v8 + 372);
          int v324 = *(_DWORD *)(v11 + 424);
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v8 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v323;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v324;
          *(_WORD *)&unsigned char buf[44] = 2048;
          *(void *)&buf[46] = v11;
          _os_log_impl(&dword_1830D4000, v322, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream %u (%p)", buf, 0x36u);
        }
      }
    }
    if ((*(_WORD *)(v11 + 428) & 0x1000) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v11;
      uint64_t v16 = (char *)_os_log_send_and_compose_impl();
      aBlock[0] = 16;
      os_log_type_t type = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v16, aBlock, &type)) {
        goto LABEL_56;
      }
      if (aBlock[0] == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v17 = gLogObj;
        os_log_type_t v18 = aBlock[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
          goto LABEL_56;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v11;
        int v19 = "%{public}s stream %p not in pending list, cannot remove";
      }
      else if (type)
      {
        uint64_t v22 = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v17 = gLogObj;
        os_log_type_t v18 = aBlock[0];
        BOOL v23 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]);
        if (v22)
        {
          if (v23)
          {
            *(_DWORD *)buf = 136446722;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v11;
            *(_WORD *)&buf[22] = 2082;
            *(void *)&unsigned char buf[24] = v22;
            _os_log_impl(&dword_1830D4000, v17, v18, "%{public}s stream %p not in pending list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
          }
          free(v22);
          goto LABEL_56;
        }
        if (!v23)
        {
LABEL_56:
          if (v16) {
            free(v16);
          }
          goto LABEL_58;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v11;
        int v19 = "%{public}s stream %p not in pending list, cannot remove, no backtrace";
      }
      else
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v17 = gLogObj;
        os_log_type_t v18 = aBlock[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
          goto LABEL_56;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v11;
        int v19 = "%{public}s stream %p not in pending list, cannot remove, backtrace limit exceeded";
      }
      _os_log_impl(&dword_1830D4000, v17, v18, v19, buf, 0x16u);
      goto LABEL_56;
    }
    uint64_t v20 = *(void *)(v11 + 296);
    uint64_t v21 = *(void **)(v11 + 304);
    if (v20)
    {
      *(void *)(v20 + 304) = v21;
      uint64_t v21 = *(void **)(v11 + 304);
    }
    else
    {
      *(void *)(v8 + 256) = v21;
    }
    void *v21 = v20;
    *(void *)(v11 + 296) = 0;
    *(void *)(v11 + 304) = 0;
    int v24 = *(_DWORD *)(v8 + 348);
    *(_DWORD *)(v8 + 348) = v24 - 1;
    if (v24)
    {
LABEL_66:
      *(_WORD *)(v11 + 428) &= ~0x1000u;
      if ((*(unsigned char *)(v11 + 158) & 1) != 0
        || !gLogDatapath
        || (os_log_type_t v337 = __nwlog_obj(), !os_log_type_enabled(v337, OS_LOG_TYPE_DEBUG)))
      {
LABEL_68:
        uint64_t v379 = *(void *)(v11 + 256);
        if (!v379) {
          goto LABEL_98;
        }
        if (*(void *)(v11 + 248))
        {
          if (*(void *)(v379 + 488) == v11)
          {
            if ((*(unsigned char *)(v11 + 158) & 1) == 0)
            {
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              os_log_type_t v45 = gLogObj;
              if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
              {
                uint64_t v46 = *(void *)(v11 + 256);
                int v47 = *(_DWORD *)(*(void *)(v11 + 248) + 372);
                if (v46) {
                  LODWORD(v46) = *(_DWORD *)(v46 + 860);
                }
                int v48 = *(_DWORD *)(v11 + 424);
                *(_DWORD *)buf = 136448002;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v11 + 74;
                *(_WORD *)&buf[22] = 2080;
                *(void *)&unsigned char buf[24] = " ";
                *(_WORD *)&buf[32] = 1024;
                *(_DWORD *)&buf[34] = v47;
                *(_WORD *)&buf[38] = 1024;
                *(_DWORD *)&buf[40] = v46;
                *(_WORD *)&unsigned char buf[44] = 1024;
                *(_DWORD *)&buf[46] = v48;
                *(_WORD *)&buf[50] = 2048;
                *(void *)&buf[52] = v11;
                *(_WORD *)&unsigned char buf[60] = 2048;
                *(void *)&buf[62] = v379;
                _os_log_impl(&dword_1830D4000, v45, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) finished with connection %p", buf, 0x46u);
              }
            }
            if (gLogDatapath)
            {
              uint64_t v342 = __nwlog_obj();
              if (os_log_type_enabled(v342, OS_LOG_TYPE_DEBUG))
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_protocol_finalize_temp_frame_array";
                _os_log_impl(&dword_1830D4000, v342, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
              }
            }
            *(void *)buf = MEMORY[0x1E4F143A8];
            *(void *)&buf[8] = 0x40000000;
            *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
            *(void *)&unsigned char buf[24] = &__block_descriptor_tmp_58_40119;
            *(void *)&buf[32] = v379 + 632;
            buf[40] = 0;
            uint64_t v49 = *(void *)(v379 + 632);
            do
            {
              if (!v49) {
                break;
              }
              uint64_t v50 = *(void *)(v49 + 32);
              char v51 = (*(uint64_t (**)(uint8_t *))&buf[16])(buf);
              uint64_t v49 = v50;
            }
            while ((v51 & 1) != 0);
            *(void *)(v11 + 256) = 0;
            *(void *)(v379 + 488) = 0;
            nw_protocol_set_output_handler(v11, 0);
            nw_protocol_set_input_handler(v379, 0);
            goto LABEL_97;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v39 = *(void *)(v379 + 488);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v379;
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = v11;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v39;
          int v40 = (char *)_os_log_send_and_compose_impl();
          aBlock[0] = 16;
          os_log_type_t type = OS_LOG_TYPE_DEFAULT;
          if (__nwlog_fault(v40, aBlock, &type))
          {
            if (aBlock[0] == 17)
            {
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              long long v41 = gLogObj;
              os_log_type_t v42 = aBlock[0];
              if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
                goto LABEL_95;
              }
              uint64_t v43 = *(void *)(v379 + 488);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v379;
              *(_WORD *)&buf[22] = 2048;
              *(void *)&unsigned char buf[24] = v11;
              *(_WORD *)&buf[32] = 2048;
              *(void *)&buf[34] = v43;
              os_log_type_t v44 = "%{public}s Connection %p does not already have stream %p, has %p";
              goto LABEL_94;
            }
            if (type == OS_LOG_TYPE_DEFAULT)
            {
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              long long v41 = gLogObj;
              os_log_type_t v42 = aBlock[0];
              if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
                goto LABEL_95;
              }
              uint64_t v55 = *(void *)(v379 + 488);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v379;
              *(_WORD *)&buf[22] = 2048;
              *(void *)&unsigned char buf[24] = v11;
              *(_WORD *)&buf[32] = 2048;
              *(void *)&buf[34] = v55;
              os_log_type_t v44 = "%{public}s Connection %p does not already have stream %p, has %p, backtrace limit exceeded";
              goto LABEL_94;
            }
            uint64_t v52 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            long long v41 = gLogObj;
            os_log_type_t v42 = aBlock[0];
            BOOL v53 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]);
            if (v52)
            {
              if (v53)
              {
                uint64_t v54 = *(void *)(v379 + 488);
                *(_DWORD *)buf = 136447234;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v379;
                *(_WORD *)&buf[22] = 2048;
                *(void *)&unsigned char buf[24] = v11;
                *(_WORD *)&buf[32] = 2048;
                *(void *)&buf[34] = v54;
                *(_WORD *)&buf[42] = 2082;
                *(void *)&unsigned char buf[44] = v52;
                _os_log_impl(&dword_1830D4000, v41, v42, "%{public}s Connection %p does not already have stream %p, has %p, dumping backtrace:%{public}s", buf, 0x34u);
              }
              free(v52);
              goto LABEL_95;
            }
            if (v53)
            {
              uint64_t v56 = *(void *)(v379 + 488);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v379;
              *(_WORD *)&buf[22] = 2048;
              *(void *)&unsigned char buf[24] = v11;
              *(_WORD *)&buf[32] = 2048;
              *(void *)&buf[34] = v56;
              os_log_type_t v44 = "%{public}s Connection %p does not already have stream %p, has %p, no backtrace";
LABEL_94:
              _os_log_impl(&dword_1830D4000, v41, v42, v44, buf, 0x2Au);
            }
          }
LABEL_95:
          if (v40) {
            free(v40);
          }
LABEL_97:
          uint64_t v15 = object;
          goto LABEL_98;
        }
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
        uint64_t v306 = (char *)_os_log_send_and_compose_impl();
        aBlock[0] = 16;
        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
        if (__nwlog_fault(v306, aBlock, &type))
        {
          if (aBlock[0] == 17)
          {
            uint64_t v307 = __nwlog_obj();
            os_log_type_t v308 = aBlock[0];
            if (!os_log_type_enabled(v307, (os_log_type_t)aBlock[0])) {
              goto LABEL_607;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
            int v309 = "%{public}s called with null http1_stream->protocol_http1";
            goto LABEL_606;
          }
          if (type == OS_LOG_TYPE_DEFAULT)
          {
            uint64_t v307 = __nwlog_obj();
            os_log_type_t v308 = aBlock[0];
            if (!os_log_type_enabled(v307, (os_log_type_t)aBlock[0])) {
              goto LABEL_607;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
            int v309 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
            goto LABEL_606;
          }
          uint64_t v331 = (char *)__nw_create_backtrace_string();
          uint64_t v307 = __nwlog_obj();
          os_log_type_t v308 = aBlock[0];
          BOOL v332 = os_log_type_enabled(v307, (os_log_type_t)aBlock[0]);
          if (v331)
          {
            if (v332)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v331;
              _os_log_impl(&dword_1830D4000, v307, v308, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v331);
            goto LABEL_607;
          }
          if (v332)
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
            int v309 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
LABEL_606:
            _os_log_impl(&dword_1830D4000, v307, v308, v309, buf, 0xCu);
          }
        }
LABEL_607:
        uint64_t v15 = object;
        if (v306) {
          free(v306);
        }
LABEL_98:
        if ((*(unsigned char *)(v8 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            uint64_t v275 = __nwlog_obj();
            if (os_log_type_enabled(v275, OS_LOG_TYPE_DEBUG))
            {
              int v276 = *(_DWORD *)(v8 + 372);
              int v277 = *(_DWORD *)(v11 + 424);
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v8 + 74;
              *(_WORD *)&buf[22] = 2080;
              *(void *)&unsigned char buf[24] = " ";
              *(_WORD *)&buf[32] = 1024;
              *(_DWORD *)&buf[34] = v276;
              *(_WORD *)&buf[38] = 1024;
              *(_DWORD *)&buf[40] = v277;
              *(_WORD *)&unsigned char buf[44] = 2048;
              *(void *)&buf[46] = v11;
              _os_log_impl(&dword_1830D4000, v275, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream %u (%p)", buf, 0x36u);
            }
          }
        }
        uint64_t v57 = *(void *)(v11 + 280);
        BOOL v58 = *(void **)(v11 + 288);
        if (v57)
        {
          *(void *)(v57 + 288) = v58;
          BOOL v58 = *(void **)(v11 + 288);
        }
        else
        {
          *(void *)(v8 + 240) = v58;
        }
        void *v58 = v57;
        *(void *)(v11 + 280) = 0;
        *(void *)(v11 + 288) = 0;
        int v59 = *(_DWORD *)(v8 + 344);
        *(_DWORD *)(v8 + 344) = v59 - 1;
        if (v59)
        {
          if ((*(_WORD *)(v11 + 428) & 8) == 0) {
            goto LABEL_140;
          }
          goto LABEL_123;
        }
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v60 = *(unsigned int *)(v8 + 344);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->streams_count";
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = 1;
        *(_WORD *)&buf[32] = 2048;
        *(void *)&buf[34] = v60;
        uint64_t v61 = (char *)_os_log_send_and_compose_impl();
        aBlock[0] = 16;
        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
        if (__nwlog_fault(v61, aBlock, &type))
        {
          if (aBlock[0] == 17)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            int v62 = gLogObj;
            os_log_type_t v63 = aBlock[0];
            if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
              goto LABEL_120;
            }
            uint64_t v64 = *(unsigned int *)(v8 + 344);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->streams_count";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v64;
            uint64_t v65 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_119:
            _os_log_impl(&dword_1830D4000, v62, v63, v65, buf, 0x2Au);
            goto LABEL_120;
          }
          if (type == OS_LOG_TYPE_DEFAULT)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            int v62 = gLogObj;
            os_log_type_t v63 = aBlock[0];
            if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
              goto LABEL_120;
            }
            uint64_t v69 = *(unsigned int *)(v8 + 344);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->streams_count";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v69;
            uint64_t v65 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
            goto LABEL_119;
          }
          uint64_t v66 = (char *)__nw_create_backtrace_string();
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v62 = gLogObj;
          os_log_type_t v63 = aBlock[0];
          BOOL v67 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]);
          if (!v66)
          {
            if (!v67) {
              goto LABEL_120;
            }
            uint64_t v70 = *(unsigned int *)(v8 + 344);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->streams_count";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v70;
            uint64_t v65 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
            goto LABEL_119;
          }
          if (v67)
          {
            uint64_t v68 = *(unsigned int *)(v8 + 344);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->streams_count";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v68;
            *(_WORD *)&buf[42] = 2082;
            *(void *)&unsigned char buf[44] = v66;
            _os_log_impl(&dword_1830D4000, v62, v63, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v66);
        }
LABEL_120:
        if (v61) {
          free(v61);
        }
        *(_DWORD *)(v8 + 344) = 0;
        uint64_t v15 = object;
        if ((*(_WORD *)(v11 + 428) & 8) == 0)
        {
LABEL_140:
          if ((*(unsigned char *)(v11 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              int v278 = __nwlog_obj();
              if (os_log_type_enabled(v278, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v279 = *(void *)(v11 + 256);
                int v280 = *(_DWORD *)(*(void *)(v11 + 248) + 372);
                if (v279) {
                  LODWORD(v279) = *(_DWORD *)(v279 + 860);
                }
                int v281 = *(_DWORD *)(v11 + 424);
                int v282 = *(_DWORD *)(v8 + 344);
                *(_DWORD *)buf = 136448258;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v11 + 74;
                *(_WORD *)&buf[22] = 2080;
                *(void *)&unsigned char buf[24] = " ";
                *(_WORD *)&buf[32] = 1024;
                *(_DWORD *)&buf[34] = v280;
                *(_WORD *)&buf[38] = 1024;
                *(_DWORD *)&buf[40] = v279;
                *(_WORD *)&unsigned char buf[44] = 1024;
                *(_DWORD *)&buf[46] = v281;
                *(_WORD *)&buf[50] = 1024;
                *(_DWORD *)&buf[52] = v281;
                *(_WORD *)&buf[56] = 2048;
                *(void *)&buf[58] = v11;
                *(_WORD *)&buf[66] = 1024;
                *(_DWORD *)&buf[68] = v282;
                _os_log_impl(&dword_1830D4000, v278, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed stream %u (%p), now have %u streams", buf, 0x48u);
              }
            }
          }
          if (v13)
          {
            if (v15)
            {
              int v86 = (char *)malloc_type_calloc(1uLL, 0x1B0uLL, 0xEAFB8F1AuLL);
              if (!v86)
              {
                unsigned int v287 = __nwlog_obj();
                os_log_type_enabled(v287, OS_LOG_TYPE_ERROR);
                *(_DWORD *)buf = 136446722;
                *(void *)&uint8_t buf[4] = "strict_calloc";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = 1;
                *(_WORD *)&buf[22] = 2048;
                *(void *)&unsigned char buf[24] = 432;
                BOOL v288 = (void *)_os_log_send_and_compose_impl();
                BOOL result = __nwlog_abort((uint64_t)v288);
                if (result)
                {
                  __break(1u);
                  return result;
                }
                free(v288);
              }
              *((_OWORD *)v86 + 25) = 0u;
              *((_OWORD *)v86 + 26) = 0u;
              *((_OWORD *)v86 + 23) = 0u;
              *((_OWORD *)v86 + 24) = 0u;
              *((_OWORD *)v86 + 21) = 0u;
              *((_OWORD *)v86 + 22) = 0u;
              *((_OWORD *)v86 + 19) = 0u;
              *((_OWORD *)v86 + 20) = 0u;
              *((_OWORD *)v86 + 17) = 0u;
              *((_OWORD *)v86 + 18) = 0u;
              *((_OWORD *)v86 + 15) = 0u;
              *((_OWORD *)v86 + 16) = 0u;
              *((_OWORD *)v86 + 13) = 0u;
              *((_OWORD *)v86 + 14) = 0u;
              *((_OWORD *)v86 + 11) = 0u;
              *((_OWORD *)v86 + 12) = 0u;
              *((_OWORD *)v86 + 9) = 0u;
              *((_OWORD *)v86 + 10) = 0u;
              *((_OWORD *)v86 + 7) = 0u;
              *((_OWORD *)v86 + 8) = 0u;
              *((_OWORD *)v86 + 5) = 0u;
              *((_OWORD *)v86 + 6) = 0u;
              *((_OWORD *)v86 + 3) = 0u;
              *((_OWORD *)v86 + 4) = 0u;
              *((_OWORD *)v86 + 1) = 0u;
              *((_OWORD *)v86 + 2) = 0u;
              *(_OWORD *)int v86 = 0u;
              *((void *)v86 + 2) = *(void *)(v8 + 16);
              if (nw_protocol_http1_get_callbacks(void)::onceToken != -1) {
                dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
              }
              *((void *)v86 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
              *((_DWORD *)v86 + 60) = 2;
              *((void *)v86 + 28) = v86;
              *((void *)v86 + 5) = v86 + 216;
              *((void *)v86 + 31) = v8;
              nw_protocol_set_input_handler((uint64_t)v86, (uint64_t)v381);
              nw_protocol_set_output_handler((uint64_t)v86, *(void *)(v8 + 32));
              *(void *)buf = 0;
              *(void *)&buf[8] = buf;
              *(void *)&buf[16] = 0x2000000000;
              *(void *)&unsigned char buf[24] = v86;
              *(void *)aBlock = MEMORY[0x1E4F143A8];
              *(void *)&aBlock[8] = 0x40000000;
              *(void *)&aBlock[16] = ___ZL22nw_http1_stream_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke;
              uint64_t v390 = (uint64_t)&unk_1E52414D0;
              *(void *)v391 = buf;
              *((void *)v86 + 39) = _Block_copy(aBlock);
              _Block_object_dispose(buf, 8);
              os_log_type_t v87 = os_retain(v13);
              char v88 = v86[344];
              if (v88)
              {
                int v89 = (void *)*((void *)v86 + 42);
                if (v89)
                {
                  os_release(v89);
                  char v88 = v86[344];
                }
              }
              *((void *)v86 + 42) = v87;
              v86[344] = v88 | 1;
              int v90 = os_retain(v15);
              char v91 = v86[328];
              if (v91)
              {
                unsigned int v92 = (void *)*((void *)v86 + 40);
                if (v92)
                {
                  os_release(v92);
                  char v91 = v86[328];
                }
              }
              *((void *)v86 + 40) = v90;
              v86[328] = v91 | 1;
              if ((v86[158] & 1) == 0)
              {
                if (gLogDatapath)
                {
                  BOOL v293 = __nwlog_obj();
                  if (os_log_type_enabled(v293, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v294 = *((void *)v86 + 32);
                    int v295 = *(_DWORD *)(*((void *)v86 + 31) + 372);
                    if (v294) {
                      LODWORD(v294) = *(_DWORD *)(v294 + 860);
                    }
                    int v296 = *((_DWORD *)v86 + 106);
                    *(_DWORD *)buf = 136447746;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v86 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    *(void *)&unsigned char buf[24] = " ";
                    *(_WORD *)&buf[32] = 1024;
                    *(_DWORD *)&buf[34] = v295;
                    *(_WORD *)&buf[38] = 1024;
                    *(_DWORD *)&buf[40] = v294;
                    *(_WORD *)&unsigned char buf[44] = 1024;
                    *(_DWORD *)&buf[46] = v296;
                    *(_WORD *)&buf[50] = 2048;
                    *(void *)&buf[52] = v86;
                    _os_log_impl(&dword_1830D4000, v293, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created %p", buf, 0x3Cu);
                  }
                }
              }
              v381->output_handler_context = v86;
              uint32_t v93 = v15;
              id v94 = *(id *)(v93[13] + 136);

              char v95 = v86[272];
              if (v95)
              {
                int v96 = (void *)*((void *)v86 + 33);
                if (v96)
                {
                  os_release(v96);
                  char v95 = v86[272];
                }
              }
              *((void *)v86 + 33) = v94;
              v86[272] = v95 | 1;
              uint64_t v97 = _nw_http_parsed_fields_create();
              char v98 = v86[408];
              if (v98)
              {
                unsigned int v99 = (void *)*((void *)v86 + 50);
                if (v99)
                {
                  os_release(v99);
                  char v98 = v86[408];
                }
              }
              *((void *)v86 + 50) = v97;
              v86[408] = v98 | 1;
              v86[208] = *(unsigned char *)(v8 + 376) & 1;
              uint32_t v100 = nw_parameters_copy_protocol_options_legacy(v93, (nw_protocol *)v8);
              unsigned int v101 = v100;
              if (!v100 || (singleton = nw_http_messaging_options_copy_transaction_metadata(v100)) == 0)
              {
                if (nw_protocol_copy_http_transaction_definition_onceToken != -1) {
                  dispatch_once(&nw_protocol_copy_http_transaction_definition_onceToken, &__block_literal_global_84_75899);
                }
                singleton = nw_protocol_metadata_create_singleton((void *)nw_protocol_copy_http_transaction_definition_definition);
              }
              char v103 = v86[360];
              if (v103)
              {
                os_log_type_t v104 = (void *)*((void *)v86 + 44);
                if (v104)
                {
                  os_release(v104);
                  char v103 = v86[360];
                }
              }
              *((void *)v86 + 44) = singleton;
              v86[360] = v103 | 1;
              if (v101) {
                os_release(v101);
              }
              unsigned int v105 = nw_parameters_copy_protocol_options_legacy(v93, (nw_protocol *)v11);
              if (v105)
              {
                os_log_type_t v106 = v105;
                if ((v86[158] & 1) == 0)
                {
                  if (gLogDatapath)
                  {
                    os_log_type_t v310 = __nwlog_obj();
                    if (os_log_type_enabled(v310, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v311 = *((void *)v86 + 32);
                      int v312 = *(_DWORD *)(*((void *)v86 + 31) + 372);
                      if (v311) {
                        LODWORD(v311) = *(_DWORD *)(v311 + 860);
                      }
                      int v313 = *((_DWORD *)v86 + 106);
                      *(_DWORD *)buf = 136448770;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v86 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      *(void *)&unsigned char buf[24] = " ";
                      *(_WORD *)&buf[32] = 1024;
                      *(_DWORD *)&buf[34] = v312;
                      *(_WORD *)&buf[38] = 1024;
                      *(_DWORD *)&buf[40] = v311;
                      *(_WORD *)&unsigned char buf[44] = 1024;
                      *(_DWORD *)&buf[46] = v313;
                      *(_WORD *)&buf[50] = 2048;
                      *(void *)&buf[52] = v86;
                      *(_WORD *)&unsigned char buf[60] = 2048;
                      *(void *)&buf[62] = v8;
                      *(_WORD *)&buf[70] = 2048;
                      *(void *)&buf[72] = v11;
                      *(_WORD *)BOOL v386 = 2048;
                      *(void *)&v386[2] = v93;
                      __int16 v387 = 2048;
                      uint64_t v388 = v106;
                      _os_log_impl(&dword_1830D4000, v310, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http1_stream protocol %p, set protocol instance to %p instead of %p in parameters %p options %p", buf, 0x64u);
                    }
                  }
                }
                if (nw_protocol_copy_http1_definition_onceToken != -1) {
                  dispatch_once(&nw_protocol_copy_http1_definition_onceToken, &__block_literal_global_73800);
                }
                id v107 = (id)nw_protocol_copy_http1_definition_http1_definition;
                uint64_t v108 = v106;
                *((void *)v108 + 2) = v8;

                if (v107) {
                  os_release(v107);
                }
                os_release(v108);
              }
              nw_protocol_set_input_handler((uint64_t)v86, (uint64_t)v381);
              *(_OWORD *)int v86 = *(_OWORD *)v381->flow_id;
              nw_protocol_set_output_handler((uint64_t)v381, (uint64_t)v86);
              os_log_type_t v109 = (uint64_t *)*((void *)v86 + 40);
              if (v109)
              {
                BOOL v110 = nw_parameters_copy_protocol_options_legacy(*((void **)v86 + 40), (nw_protocol *)v8);
                if (v110)
                {
                  os_log_type_t v111 = v110;
                  if ((v86[158] & 1) == 0)
                  {
                    if (gLogDatapath)
                    {
                      uint64_t v314 = __nwlog_obj();
                      if (os_log_type_enabled(v314, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v315 = *((void *)v86 + 32);
                        int v316 = *(_DWORD *)(*((void *)v86 + 31) + 372);
                        if (v315) {
                          LODWORD(v315) = *(_DWORD *)(v315 + 860);
                        }
                        int v317 = *((_DWORD *)v86 + 106);
                        *(_DWORD *)buf = 136448770;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v86 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        *(void *)&unsigned char buf[24] = " ";
                        *(_WORD *)&buf[32] = 1024;
                        *(_DWORD *)&buf[34] = v316;
                        *(_WORD *)&buf[38] = 1024;
                        *(_DWORD *)&buf[40] = v315;
                        *(_WORD *)&unsigned char buf[44] = 1024;
                        *(_DWORD *)&buf[46] = v317;
                        *(_WORD *)&buf[50] = 2048;
                        *(void *)&buf[52] = v86;
                        *(_WORD *)&unsigned char buf[60] = 2048;
                        *(void *)&buf[62] = v86;
                        *(_WORD *)&buf[70] = 2048;
                        *(void *)&buf[72] = v8;
                        *(_WORD *)BOOL v386 = 2048;
                        *(void *)&v386[2] = v109;
                        __int16 v387 = 2048;
                        uint64_t v388 = v111;
                        _os_log_impl(&dword_1830D4000, v314, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http1_stream protocol %p, set protocol instance to %p instead of %p in parameters %p options %p", buf, 0x64u);
                      }
                    }
                  }
                  if (nw_protocol_copy_http1_definition_onceToken != -1) {
                    dispatch_once(&nw_protocol_copy_http1_definition_onceToken, &__block_literal_global_73800);
                  }
                  id v112 = (id)nw_protocol_copy_http1_definition_http1_definition;
                  uint64_t v113 = v111;
                  *((void *)v113 + 2) = v86;

                  if (v112) {
                    os_release(v112);
                  }
                  os_release(v113);
                }
                *(_DWORD *)BOOL v386 = 0;
                memset(buf, 0, sizeof(buf));
                int v114 = nw_parameters_copy_protocol_options_legacy(*((void **)v86 + 40), (nw_protocol *)v86);
                os_log_type_t v115 = v114;
                if (v114)
                {
                  int v116 = v114;
                  uint64_t v117 = 0;
                  buf[0] = 0;
                  while (1)
                  {
                    int v118 = v116[v117 + 48];
                    buf[v117] = v118;
                    if (!v118) {
                      break;
                    }
                    if (++v117 == 83)
                    {
                      v386[3] = 0;
                      break;
                    }
                  }
                }
                else if ((v86[158] & 1) == 0)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  os_log_type_t v119 = gLogObj;
                  if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
                  {
                    uint64_t v120 = *((void *)v86 + 32);
                    int v121 = *(_DWORD *)(*((void *)v86 + 31) + 372);
                    if (v120) {
                      LODWORD(v120) = *(_DWORD *)(v120 + 860);
                    }
                    int v122 = *((_DWORD *)v86 + 106);
                    *(_DWORD *)aBlock = 136448002;
                    *(void *)&aBlock[4] = "nw_http1_stream_add_input_handler";
                    *(_WORD *)&aBlock[12] = 2082;
                    *(void *)&aBlock[14] = v86 + 74;
                    *(_WORD *)&aBlock[22] = 2080;
                    uint64_t v390 = (uint64_t)" ";
                    *(_WORD *)v391 = 1024;
                    *(_DWORD *)&v391[2] = v121;
                    *(_WORD *)&v391[6] = 1024;
                    *(_DWORD *)&v391[8] = v120;
                    *(_WORD *)&v391[12] = 1024;
                    *(_DWORD *)&v391[14] = v122;
                    *(_WORD *)&v391[18] = 2048;
                    *(void *)&v391[20] = v86;
                    *(_WORD *)&v391[28] = 2048;
                    *(void *)&v391[30] = v109;
                    _os_log_impl(&dword_1830D4000, v119, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> Failed to access options for protocol %p, parameters %p", aBlock, 0x46u);
                  }
                }
                BOOL v378 = v13;
                if ((*(unsigned char *)(v8 + 158) & 1) == 0)
                {
                  if (gLogDatapath)
                  {
                    uint64_t v297 = __nwlog_obj();
                    if (os_log_type_enabled(v297, OS_LOG_TYPE_DEBUG))
                    {
                      int v298 = *(_DWORD *)(v8 + 372);
                      *(_DWORD *)aBlock = 136447234;
                      *(void *)&aBlock[4] = "nw_http1_add_stream";
                      *(_WORD *)&aBlock[12] = 2082;
                      *(void *)&aBlock[14] = v8 + 74;
                      *(_WORD *)&aBlock[22] = 2080;
                      uint64_t v390 = (uint64_t)" ";
                      *(_WORD *)v391 = 1024;
                      *(_DWORD *)&v391[2] = v298;
                      *(_WORD *)&v391[6] = 2048;
                      *(void *)&v391[8] = v86;
                      _os_log_impl(&dword_1830D4000, v297, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream (%p)", aBlock, 0x30u);
                    }
                  }
                }
                *((void *)v86 + 35) = 0;
                char v123 = *(void **)(v8 + 240);
                *((void *)v86 + 36) = v123;
                void *v123 = v86;
                *(void *)(v8 + 240) = v86 + 280;
                uint64_t v124 = *(unsigned int *)(v8 + 344) + 1;
                uint64_t v125 = v124 << 31 >> 31;
                *(_DWORD *)(v8 + 344) = v124;
                if (v125 == v124 && (v125 & 0x8000000000000000) == 0)
                {
LABEL_220:
                  uint64_t v137 = *(unsigned int *)(v8 + 356) + 1;
                  uint64_t v138 = v137 << 31 >> 31;
                  *(_DWORD *)(v8 + 356) = v137;
                  if (v138 == v137 && (v138 & 0x8000000000000000) == 0) {
                    goto LABEL_239;
                  }
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  uint64_t v139 = *(unsigned int *)(v8 + 356);
                  *(_DWORD *)aBlock = 136446978;
                  *(void *)&aBlock[4] = "nw_http1_add_stream";
                  *(_WORD *)&aBlock[12] = 2082;
                  *(void *)&aBlock[14] = "http1->next_stream_log_num";
                  *(_WORD *)&aBlock[22] = 2048;
                  uint64_t v390 = 1;
                  *(_WORD *)v391 = 2048;
                  *(void *)&v391[2] = v139;
                  uint64_t v140 = (char *)_os_log_send_and_compose_impl();
                  os_log_type_t type = OS_LOG_TYPE_ERROR;
                  char v383 = 0;
                  if (__nwlog_fault(v140, &type, &v383))
                  {
                    if (type == OS_LOG_TYPE_FAULT)
                    {
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      uint64_t v141 = gLogObj;
                      os_log_type_t v142 = type;
                      if (os_log_type_enabled((os_log_t)gLogObj, type))
                      {
                        uint64_t v143 = *(unsigned int *)(v8 + 356);
                        *(_DWORD *)aBlock = 136446978;
                        *(void *)&aBlock[4] = "nw_http1_add_stream";
                        *(_WORD *)&aBlock[12] = 2082;
                        *(void *)&aBlock[14] = "http1->next_stream_log_num";
                        *(_WORD *)&aBlock[22] = 2048;
                        uint64_t v390 = 1;
                        *(_WORD *)v391 = 2048;
                        *(void *)&v391[2] = v143;
                        os_log_type_t v144 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_235:
                        _os_log_impl(&dword_1830D4000, v141, v142, v144, aBlock, 0x2Au);
                      }
                    }
                    else if (v383)
                    {
                      os_log_type_t v145 = (char *)__nw_create_backtrace_string();
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      uint64_t v141 = gLogObj;
                      os_log_type_t v142 = type;
                      BOOL v146 = os_log_type_enabled((os_log_t)gLogObj, type);
                      if (v145)
                      {
                        if (v146)
                        {
                          uint64_t v147 = *(unsigned int *)(v8 + 356);
                          *(_DWORD *)aBlock = 136447234;
                          *(void *)&aBlock[4] = "nw_http1_add_stream";
                          *(_WORD *)&aBlock[12] = 2082;
                          *(void *)&aBlock[14] = "http1->next_stream_log_num";
                          *(_WORD *)&aBlock[22] = 2048;
                          uint64_t v390 = 1;
                          *(_WORD *)v391 = 2048;
                          *(void *)&v391[2] = v147;
                          *(_WORD *)&v391[10] = 2082;
                          *(void *)&v391[12] = v145;
                          _os_log_impl(&dword_1830D4000, v141, v142, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", aBlock, 0x34u);
                        }
                        free(v145);
                        goto LABEL_236;
                      }
                      if (v146)
                      {
                        uint64_t v149 = *(unsigned int *)(v8 + 356);
                        *(_DWORD *)aBlock = 136446978;
                        *(void *)&aBlock[4] = "nw_http1_add_stream";
                        *(_WORD *)&aBlock[12] = 2082;
                        *(void *)&aBlock[14] = "http1->next_stream_log_num";
                        *(_WORD *)&aBlock[22] = 2048;
                        uint64_t v390 = 1;
                        *(_WORD *)v391 = 2048;
                        *(void *)&v391[2] = v149;
                        os_log_type_t v144 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                        goto LABEL_235;
                      }
                    }
                    else
                    {
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      uint64_t v141 = gLogObj;
                      os_log_type_t v142 = type;
                      if (os_log_type_enabled((os_log_t)gLogObj, type))
                      {
                        uint64_t v148 = *(unsigned int *)(v8 + 356);
                        *(_DWORD *)aBlock = 136446978;
                        *(void *)&aBlock[4] = "nw_http1_add_stream";
                        *(_WORD *)&aBlock[12] = 2082;
                        *(void *)&aBlock[14] = "http1->next_stream_log_num";
                        *(_WORD *)&aBlock[22] = 2048;
                        uint64_t v390 = 1;
                        *(_WORD *)v391 = 2048;
                        *(void *)&v391[2] = v148;
                        os_log_type_t v144 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                        goto LABEL_235;
                      }
                    }
                  }
LABEL_236:
                  if (v140) {
                    free(v140);
                  }
                  LODWORD(v137) = -1;
                  *(_DWORD *)(v8 + 356) = -1;
LABEL_239:
                  *((_DWORD *)v86 + 106) = v137;
                  if ((v86[158] & 1) == 0)
                  {
                    if (gLogDatapath)
                    {
                      int v299 = __nwlog_obj();
                      if (os_log_type_enabled(v299, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v300 = *((void *)v86 + 32);
                        int v301 = *(_DWORD *)(*((void *)v86 + 31) + 372);
                        if (v300) {
                          LODWORD(v300) = *(_DWORD *)(v300 + 860);
                        }
                        int v302 = *((_DWORD *)v86 + 106);
                        int v303 = *(_DWORD *)(v8 + 344);
                        *(_DWORD *)aBlock = 136448258;
                        *(void *)&aBlock[4] = "nw_http1_add_stream";
                        *(_WORD *)&aBlock[12] = 2082;
                        *(void *)&aBlock[14] = v86 + 74;
                        *(_WORD *)&aBlock[22] = 2080;
                        uint64_t v390 = (uint64_t)" ";
                        *(_WORD *)v391 = 1024;
                        *(_DWORD *)&v391[2] = v301;
                        *(_WORD *)&v391[6] = 1024;
                        *(_DWORD *)&v391[8] = v300;
                        *(_WORD *)&v391[12] = 1024;
                        *(_DWORD *)&v391[14] = v302;
                        *(_WORD *)&v391[18] = 1024;
                        *(_DWORD *)&v391[20] = v302;
                        *(_WORD *)&v391[24] = 2048;
                        *(void *)&v391[26] = v86;
                        *(_WORD *)&v391[34] = 1024;
                        *(_DWORD *)&v391[36] = v303;
                        _os_log_impl(&dword_1830D4000, v299, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added stream %u (%p), now have %u streams", aBlock, 0x48u);
                      }
                    }
                  }
                  nw_protocol_plugin_name_set_name((uint64_t)(v86 + 64), (uint64_t)v86, v109);
                  if (buf[0])
                  {
                    uint64_t v13 = v378;
                    if ((*(unsigned char *)(v8 + 158) & 1) == 0)
                    {
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      uint64_t v150 = gLogObj;
                      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEFAULT))
                      {
                        int v151 = *(_DWORD *)(v8 + 372);
                        int v152 = *(_DWORD *)(v8 + 344);
                        *(_DWORD *)aBlock = 136447746;
                        *(void *)&aBlock[4] = "nw_http1_stream_add_input_handler";
                        *(_WORD *)&aBlock[12] = 2082;
                        *(void *)&aBlock[14] = v8 + 74;
                        *(_WORD *)&aBlock[22] = 2080;
                        uint64_t v390 = (uint64_t)" ";
                        *(_WORD *)v391 = 1024;
                        *(_DWORD *)&v391[2] = v151;
                        *(_WORD *)&v391[6] = 2048;
                        *(void *)&v391[8] = v381;
                        *(_WORD *)&v391[16] = 2082;
                        *(void *)&v391[18] = buf;
                        *(_WORD *)&v391[26] = 1024;
                        *(_DWORD *)&v391[28] = v152;
                        os_log_type_t v153 = "%{public}s %{public}s%s<i%u> added input handler %p from %{public}s, now have %u input handlers";
                        uint64_t v154 = v150;
                        uint32_t v155 = 64;
LABEL_248:
                        _os_log_impl(&dword_1830D4000, v154, OS_LOG_TYPE_DEFAULT, v153, aBlock, v155);
                      }
                    }
                  }
                  else
                  {
                    uint64_t v13 = v378;
                    if ((*(unsigned char *)(v8 + 158) & 1) == 0)
                    {
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      uint64_t v156 = gLogObj;
                      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEFAULT))
                      {
                        int v157 = *(_DWORD *)(v8 + 372);
                        int v158 = *(_DWORD *)(v8 + 344);
                        *(_DWORD *)aBlock = 136447490;
                        *(void *)&aBlock[4] = "nw_http1_stream_add_input_handler";
                        *(_WORD *)&aBlock[12] = 2082;
                        *(void *)&aBlock[14] = v8 + 74;
                        *(_WORD *)&aBlock[22] = 2080;
                        uint64_t v390 = (uint64_t)" ";
                        *(_WORD *)v391 = 1024;
                        *(_DWORD *)&v391[2] = v157;
                        *(_WORD *)&v391[6] = 2048;
                        *(void *)&v391[8] = v381;
                        *(_WORD *)&v391[16] = 1024;
                        *(_DWORD *)&v391[18] = v158;
                        os_log_type_t v153 = "%{public}s %{public}s%s<i%u> added input handler %p, now have %u input handlers";
                        uint64_t v154 = v156;
                        uint32_t v155 = 54;
                        goto LABEL_248;
                      }
                    }
                  }
                  if (v115) {
                    os_release(v115);
                  }
LABEL_251:
                  int v159 = 0;
                  goto LABEL_252;
                }
                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                networkd_settings_init();
                uint64_t v126 = *(unsigned int *)(v8 + 344);
                *(_DWORD *)aBlock = 136446978;
                *(void *)&aBlock[4] = "nw_http1_add_stream";
                *(_WORD *)&aBlock[12] = 2082;
                *(void *)&aBlock[14] = "http1->streams_count";
                *(_WORD *)&aBlock[22] = 2048;
                uint64_t v390 = 1;
                *(_WORD *)v391 = 2048;
                *(void *)&v391[2] = v126;
                int v127 = (char *)_os_log_send_and_compose_impl();
                os_log_type_t type = OS_LOG_TYPE_ERROR;
                char v383 = 0;
                if (__nwlog_fault(v127, &type, &v383))
                {
                  if (type == OS_LOG_TYPE_FAULT)
                  {
                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                    networkd_settings_init();
                    uint64_t v128 = gLogObj;
                    os_log_type_t v129 = type;
                    if (os_log_type_enabled((os_log_t)gLogObj, type))
                    {
                      uint64_t v130 = *(unsigned int *)(v8 + 344);
                      *(_DWORD *)aBlock = 136446978;
                      *(void *)&aBlock[4] = "nw_http1_add_stream";
                      *(_WORD *)&aBlock[12] = 2082;
                      *(void *)&aBlock[14] = "http1->streams_count";
                      *(_WORD *)&aBlock[22] = 2048;
                      uint64_t v390 = 1;
                      *(_WORD *)v391 = 2048;
                      *(void *)&v391[2] = v130;
                      uint64_t v131 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_216:
                      _os_log_impl(&dword_1830D4000, v128, v129, v131, aBlock, 0x2Au);
                    }
                  }
                  else if (v383)
                  {
                    nw_parameters_t v132 = (char *)__nw_create_backtrace_string();
                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                    networkd_settings_init();
                    uint64_t v128 = gLogObj;
                    os_log_type_t v129 = type;
                    BOOL v133 = os_log_type_enabled((os_log_t)gLogObj, type);
                    if (v132)
                    {
                      if (v133)
                      {
                        uint64_t v134 = *(unsigned int *)(v8 + 344);
                        *(_DWORD *)aBlock = 136447234;
                        *(void *)&aBlock[4] = "nw_http1_add_stream";
                        *(_WORD *)&aBlock[12] = 2082;
                        *(void *)&aBlock[14] = "http1->streams_count";
                        *(_WORD *)&aBlock[22] = 2048;
                        uint64_t v390 = 1;
                        *(_WORD *)v391 = 2048;
                        *(void *)&v391[2] = v134;
                        *(_WORD *)&v391[10] = 2082;
                        *(void *)&v391[12] = v132;
                        _os_log_impl(&dword_1830D4000, v128, v129, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", aBlock, 0x34u);
                      }
                      free(v132);
                      goto LABEL_217;
                    }
                    if (v133)
                    {
                      uint64_t v136 = *(unsigned int *)(v8 + 344);
                      *(_DWORD *)aBlock = 136446978;
                      *(void *)&aBlock[4] = "nw_http1_add_stream";
                      *(_WORD *)&aBlock[12] = 2082;
                      *(void *)&aBlock[14] = "http1->streams_count";
                      *(_WORD *)&aBlock[22] = 2048;
                      uint64_t v390 = 1;
                      *(_WORD *)v391 = 2048;
                      *(void *)&v391[2] = v136;
                      uint64_t v131 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                      goto LABEL_216;
                    }
                  }
                  else
                  {
                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                    networkd_settings_init();
                    uint64_t v128 = gLogObj;
                    os_log_type_t v129 = type;
                    if (os_log_type_enabled((os_log_t)gLogObj, type))
                    {
                      uint64_t v135 = *(unsigned int *)(v8 + 344);
                      *(_DWORD *)aBlock = 136446978;
                      *(void *)&aBlock[4] = "nw_http1_add_stream";
                      *(_WORD *)&aBlock[12] = 2082;
                      *(void *)&aBlock[14] = "http1->streams_count";
                      *(_WORD *)&aBlock[22] = 2048;
                      uint64_t v390 = 1;
                      *(_WORD *)v391 = 2048;
                      *(void *)&v391[2] = v135;
                      uint64_t v131 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                      goto LABEL_216;
                    }
                  }
                }
LABEL_217:
                if (v127) {
                  free(v127);
                }
                *(_DWORD *)(v8 + 344) = -1;
                goto LABEL_220;
              }
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
              uint64_t v289 = (char *)_os_log_send_and_compose_impl();
              aBlock[0] = 16;
              os_log_type_t type = OS_LOG_TYPE_DEFAULT;
              if (__nwlog_fault(v289, aBlock, &type))
              {
                if (aBlock[0] == 17)
                {
                  os_log_type_t v290 = __nwlog_obj();
                  os_log_type_t v291 = aBlock[0];
                  if (!os_log_type_enabled(v290, (os_log_type_t)aBlock[0])) {
                    goto LABEL_596;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
                  os_log_type_t v292 = "%{public}s called with null http1_stream->parameters";
                  goto LABEL_595;
                }
                if (type == OS_LOG_TYPE_DEFAULT)
                {
                  os_log_type_t v290 = __nwlog_obj();
                  os_log_type_t v291 = aBlock[0];
                  if (!os_log_type_enabled(v290, (os_log_type_t)aBlock[0])) {
                    goto LABEL_596;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
                  os_log_type_t v292 = "%{public}s called with null http1_stream->parameters, backtrace limit exceeded";
                  goto LABEL_595;
                }
                uint64_t v329 = (char *)__nw_create_backtrace_string();
                os_log_type_t v290 = __nwlog_obj();
                os_log_type_t v291 = aBlock[0];
                BOOL v330 = os_log_type_enabled(v290, (os_log_type_t)aBlock[0]);
                if (v329)
                {
                  if (v330)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v329;
                    _os_log_impl(&dword_1830D4000, v290, v291, "%{public}s called with null http1_stream->parameters, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v329);
                  goto LABEL_596;
                }
                if (v330)
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
                  os_log_type_t v292 = "%{public}s called with null http1_stream->parameters, no backtrace";
LABEL_595:
                  _os_log_impl(&dword_1830D4000, v290, v291, v292, buf, 0xCu);
                }
              }
LABEL_596:
              if (v289) {
                free(v289);
              }
              goto LABEL_251;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
            uint64_t v267 = (void *)_os_log_send_and_compose_impl();
            os_log_type_t type = OS_LOG_TYPE_ERROR;
            char v383 = 0;
            if (__nwlog_fault((const char *)v267, &type, &v383))
            {
              if (type == OS_LOG_TYPE_FAULT)
              {
                int v268 = __nwlog_obj();
                os_log_type_t v269 = type;
                if (!os_log_type_enabled(v268, type)) {
                  goto LABEL_558;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
                uint64_t v270 = "%{public}s called with null parameters";
                goto LABEL_557;
              }
              if (!v383)
              {
                int v268 = __nwlog_obj();
                os_log_type_t v269 = type;
                if (!os_log_type_enabled(v268, type)) {
                  goto LABEL_558;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
                uint64_t v270 = "%{public}s called with null parameters, backtrace limit exceeded";
                goto LABEL_557;
              }
              uint64_t v327 = (char *)__nw_create_backtrace_string();
              int v268 = __nwlog_obj();
              os_log_type_t v269 = type;
              BOOL v328 = os_log_type_enabled(v268, type);
              if (v327)
              {
                if (v328)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v327;
                  _os_log_impl(&dword_1830D4000, v268, v269, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v327);
                if (!v267)
                {
LABEL_560:
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
                  int v343 = (char *)_os_log_send_and_compose_impl();
                  aBlock[0] = 16;
                  os_log_type_t type = OS_LOG_TYPE_DEFAULT;
                  if (!__nwlog_fault(v343, aBlock, &type)) {
                    goto LABEL_574;
                  }
                  if (aBlock[0] == 17)
                  {
                    uint64_t v344 = __nwlog_obj();
                    os_log_type_t v345 = aBlock[0];
                    if (!os_log_type_enabled(v344, (os_log_type_t)aBlock[0])) {
                      goto LABEL_574;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
                    int v346 = "%{public}s called with null http1_stream";
                  }
                  else if (type)
                  {
                    os_log_type_t v347 = (char *)__nw_create_backtrace_string();
                    uint64_t v344 = __nwlog_obj();
                    os_log_type_t v345 = aBlock[0];
                    BOOL v348 = os_log_type_enabled(v344, (os_log_type_t)aBlock[0]);
                    if (v347)
                    {
                      if (v348)
                      {
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v347;
                        _os_log_impl(&dword_1830D4000, v344, v345, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
                      }
                      free(v347);
LABEL_574:
                      if (v343) {
                        free(v343);
                      }
                      __nwlog_obj();
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
                      os_log_type_t v349 = (char *)_os_log_send_and_compose_impl();
                      aBlock[0] = 16;
                      os_log_type_t type = OS_LOG_TYPE_DEFAULT;
                      if (!__nwlog_fault(v349, aBlock, &type)) {
                        goto LABEL_590;
                      }
                      if (aBlock[0] == 17)
                      {
                        BOOL v350 = __nwlog_obj();
                        os_log_type_t v351 = aBlock[0];
                        if (os_log_type_enabled(v350, (os_log_type_t)aBlock[0]))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
                          uint64_t v352 = "%{public}s called with null http1_stream";
LABEL_589:
                          _os_log_impl(&dword_1830D4000, v350, v351, v352, buf, 0xCu);
                        }
                      }
                      else if (type)
                      {
                        int v353 = (char *)__nw_create_backtrace_string();
                        BOOL v350 = __nwlog_obj();
                        os_log_type_t v351 = aBlock[0];
                        BOOL v354 = os_log_type_enabled(v350, (os_log_type_t)aBlock[0]);
                        if (v353)
                        {
                          if (v354)
                          {
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v353;
                            _os_log_impl(&dword_1830D4000, v350, v351, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
                          }
                          free(v353);
                          goto LABEL_590;
                        }
                        if (v354)
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
                          uint64_t v352 = "%{public}s called with null http1_stream, no backtrace";
                          goto LABEL_589;
                        }
                      }
                      else
                      {
                        BOOL v350 = __nwlog_obj();
                        os_log_type_t v351 = aBlock[0];
                        if (os_log_type_enabled(v350, (os_log_type_t)aBlock[0]))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
                          uint64_t v352 = "%{public}s called with null http1_stream, backtrace limit exceeded";
                          goto LABEL_589;
                        }
                      }
LABEL_590:
                      if (v349) {
                        free(v349);
                      }
                      int v86 = 0;
                      int v159 = 1;
LABEL_252:
                      uint64_t v160 = v379;
                      if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                      {
                        if (gLogDatapath)
                        {
                          BOOL v283 = __nwlog_obj();
                          if (os_log_type_enabled(v283, OS_LOG_TYPE_DEBUG))
                          {
                            uint64_t v284 = *(void *)(v11 + 256);
                            int v285 = *(_DWORD *)(*(void *)(v11 + 248) + 372);
                            if (v284) {
                              LODWORD(v284) = *(_DWORD *)(v284 + 860);
                            }
                            int v286 = *(_DWORD *)(v11 + 424);
                            *(_DWORD *)buf = 136447746;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_destroy";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v11 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            *(void *)&unsigned char buf[24] = " ";
                            *(_WORD *)&buf[32] = 1024;
                            *(_DWORD *)&buf[34] = v285;
                            *(_WORD *)&buf[38] = 1024;
                            *(_DWORD *)&buf[40] = v284;
                            *(_WORD *)&unsigned char buf[44] = 1024;
                            *(_DWORD *)&buf[46] = v286;
                            *(_WORD *)&buf[50] = 2048;
                            *(void *)&buf[52] = v11;
                            _os_log_impl(&dword_1830D4000, v283, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> destroying %p", buf, 0x3Cu);
                          }
                        }
                      }
                      if ((*(_WORD *)(v11 + 428) & 0x4000) != 0) {
                        nw_http_transaction_metadata_set_event_handler(*(void **)(v11 + 352), 0);
                      }
                      char v161 = *(unsigned char *)(v11 + 344);
                      if (v161)
                      {
                        int v162 = *(void **)(v11 + 336);
                        if (v162)
                        {
                          os_release(v162);
                          char v161 = *(unsigned char *)(v11 + 344);
                        }
                      }
                      *(void *)(v11 + 336) = 0;
                      *(unsigned char *)(v11 + 344) = v161 | 1;
                      char v163 = *(unsigned char *)(v11 + 328);
                      if (v163)
                      {
                        int v164 = *(void **)(v11 + 320);
                        if (v164)
                        {
                          os_release(v164);
                          char v163 = *(unsigned char *)(v11 + 328);
                        }
                      }
                      *(void *)(v11 + 320) = 0;
                      *(unsigned char *)(v11 + 328) = v163 | 1;
                      char v165 = *(unsigned char *)(v11 + 376);
                      if (v165)
                      {
                        BOOL v166 = *(void **)(v11 + 368);
                        if (v166)
                        {
                          os_release(v166);
                          char v165 = *(unsigned char *)(v11 + 376);
                        }
                      }
                      *(void *)(v11 + 368) = 0;
                      *(unsigned char *)(v11 + 376) = v165 | 1;
                      char v167 = *(unsigned char *)(v11 + 392);
                      if (v167)
                      {
                        uint64_t v168 = *(void **)(v11 + 384);
                        if (v168)
                        {
                          os_release(v168);
                          char v167 = *(unsigned char *)(v11 + 392);
                        }
                      }
                      *(void *)(v11 + 384) = 0;
                      *(unsigned char *)(v11 + 392) = v167 | 1;
                      uint64_t v169 = *(void *)(v11 + 256);
                      if (v169 && *(void *)(v169 + 488) == v11) {
                        *(void *)(v169 + 488) = 0;
                      }
                      *(void *)(v11 + 256) = 0;
                      uint64_t v170 = *(void *)(v11 + 48);
                      if (v170 && *(void *)(v170 + 56) == v11) {
                        *(void *)(v170 + 56) = 0;
                      }
                      (*(void (**)(void, void))(*(void *)(v11 + 312) + 16))(*(void *)(v11 + 312), 0);
                      uint64_t v171 = *(const void **)(v11 + 312);
                      if (v171)
                      {
                        _Block_release(v171);
                        *(void *)(v11 + 312) = 0;
                      }
                      nw_http1_stream::~nw_http1_stream((nw_http1_stream *)v11);
                      free(v172);
                      if (!v379) {
                        goto LABEL_339;
                      }
                      uint64_t v173 = *(void *)(v379 + 488);
                      if (!v173 || (*(_WORD *)(v173 + 428) & 0x2000) != 0)
                      {
                        if ((*(_WORD *)(v379 + 872) & 4) == 0)
                        {
                          if (*(unsigned char *)(v379 + 158)) {
                            goto LABEL_338;
                          }
                          if (!gLogDatapath) {
                            goto LABEL_338;
                          }
                          uint64_t v178 = __nwlog_obj();
                          if (!os_log_type_enabled(v178, OS_LOG_TYPE_DEBUG)) {
                            goto LABEL_338;
                          }
                          uint64_t v179 = *(void *)(v379 + 488);
                          int v180 = *(_DWORD *)(*(void *)(v379 + 480) + 372);
                          int v181 = *(_DWORD *)(v379 + 860);
                          if (v179) {
                            LODWORD(v179) = *(_DWORD *)(v179 + 424);
                          }
                          *(_DWORD *)buf = 136447490;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v379 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          *(void *)&unsigned char buf[24] = " ";
                          *(_WORD *)&buf[32] = 1024;
                          *(_DWORD *)&buf[34] = v180;
                          *(_WORD *)&buf[38] = 1024;
                          *(_DWORD *)&buf[40] = v181;
                          *(_WORD *)&unsigned char buf[44] = 1024;
                          *(_DWORD *)&buf[46] = v179;
                          int v182 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because the message is not complete";
                          goto LABEL_657;
                        }
                        if ((*(_WORD *)(v379 + 872) & 0x20) == 0)
                        {
                          if (*(unsigned char *)(v379 + 158)) {
                            goto LABEL_338;
                          }
                          if (!gLogDatapath) {
                            goto LABEL_338;
                          }
                          uint64_t v178 = __nwlog_obj();
                          if (!os_log_type_enabled(v178, OS_LOG_TYPE_DEBUG)) {
                            goto LABEL_338;
                          }
                          uint64_t v183 = *(void *)(v379 + 488);
                          int v184 = *(_DWORD *)(*(void *)(v379 + 480) + 372);
                          int v185 = *(_DWORD *)(v379 + 860);
                          if (v183) {
                            LODWORD(v183) = *(_DWORD *)(v183 + 424);
                          }
                          *(_DWORD *)buf = 136447490;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v379 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          *(void *)&unsigned char buf[24] = " ";
                          *(_WORD *)&buf[32] = 1024;
                          *(_DWORD *)&buf[34] = v184;
                          *(_WORD *)&buf[38] = 1024;
                          *(_DWORD *)&buf[40] = v185;
                          *(_WORD *)&unsigned char buf[44] = 1024;
                          *(_DWORD *)&buf[46] = v183;
                          int v182 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because the outbound m"
                                 "essage is not complete";
                          goto LABEL_657;
                        }
                        if ((*(_WORD *)(v379 + 872) & 8) == 0)
                        {
                          if (*(unsigned char *)(v379 + 158)) {
                            goto LABEL_338;
                          }
                          if (!gLogDatapath) {
                            goto LABEL_338;
                          }
                          uint64_t v178 = __nwlog_obj();
                          if (!os_log_type_enabled(v178, OS_LOG_TYPE_DEBUG)) {
                            goto LABEL_338;
                          }
                          uint64_t v186 = *(void *)(v379 + 488);
                          int v187 = *(_DWORD *)(*(void *)(v379 + 480) + 372);
                          int v188 = *(_DWORD *)(v379 + 860);
                          if (v186) {
                            LODWORD(v186) = *(_DWORD *)(v186 + 424);
                          }
                          *(_DWORD *)buf = 136447490;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v379 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          *(void *)&unsigned char buf[24] = " ";
                          *(_WORD *)&buf[32] = 1024;
                          *(_DWORD *)&buf[34] = v187;
                          *(_WORD *)&buf[38] = 1024;
                          *(_DWORD *)&buf[40] = v188;
                          *(_WORD *)&unsigned char buf[44] = 1024;
                          *(_DWORD *)&buf[46] = v186;
                          int v182 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because keep alive is false";
                          goto LABEL_657;
                        }
                      }
                      else if ((*(unsigned char *)(v379 + 158) & 1) == 0)
                      {
                        if (gLogDatapath)
                        {
                          uint64_t v174 = __nwlog_obj();
                          if (os_log_type_enabled(v174, OS_LOG_TYPE_DEBUG))
                          {
                            uint64_t v175 = *(void *)(v379 + 488);
                            int v176 = *(_DWORD *)(*(void *)(v379 + 480) + 372);
                            int v177 = *(_DWORD *)(v379 + 860);
                            if (v175) {
                              LODWORD(v175) = *(_DWORD *)(v175 + 424);
                            }
                            *(_DWORD *)buf = 136447490;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v379 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            *(void *)&unsigned char buf[24] = " ";
                            *(_WORD *)&buf[32] = 1024;
                            *(_DWORD *)&buf[34] = v176;
                            *(_WORD *)&buf[38] = 1024;
                            *(_DWORD *)&buf[40] = v177;
                            *(_WORD *)&unsigned char buf[44] = 1024;
                            *(_DWORD *)&buf[46] = v175;
                            _os_log_impl(&dword_1830D4000, v174, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection may be reusable because the current stream didn't use it", buf, 0x32u);
                            uint64_t v160 = v379;
                          }
                        }
                      }
                      if ((*(unsigned char *)(*(void *)(v160 + 480) + 376) & 8) != 0)
                      {
                        if (*(unsigned char *)(v160 + 158)) {
                          goto LABEL_338;
                        }
                        if (!gLogDatapath) {
                          goto LABEL_338;
                        }
                        uint64_t v178 = __nwlog_obj();
                        if (!os_log_type_enabled(v178, OS_LOG_TYPE_DEBUG)) {
                          goto LABEL_338;
                        }
                        uint64_t v193 = *(void *)(v160 + 488);
                        int v194 = *(_DWORD *)(*(void *)(v160 + 480) + 372);
                        int v195 = *(_DWORD *)(v160 + 860);
                        if (v193) {
                          LODWORD(v193) = *(_DWORD *)(v193 + 424);
                        }
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v160 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        *(void *)&unsigned char buf[24] = " ";
                        *(_WORD *)&buf[32] = 1024;
                        *(_DWORD *)&buf[34] = v194;
                        *(_WORD *)&buf[38] = 1024;
                        *(_DWORD *)&buf[40] = v195;
                        *(_WORD *)&unsigned char buf[44] = 1024;
                        *(_DWORD *)&buf[46] = v193;
                        int v182 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because pool is closed f"
                               "or new connections";
                        goto LABEL_657;
                      }
                      __int16 v189 = *(_WORD *)(v160 + 872);
                      if ((v189 & 0x200) != 0)
                      {
                        if (*(unsigned char *)(v160 + 158)) {
                          goto LABEL_338;
                        }
                        if (!gLogDatapath) {
                          goto LABEL_338;
                        }
                        uint64_t v178 = __nwlog_obj();
                        if (!os_log_type_enabled(v178, OS_LOG_TYPE_DEBUG)) {
                          goto LABEL_338;
                        }
                        uint64_t v196 = *(void *)(v160 + 488);
                        int v197 = *(_DWORD *)(*(void *)(v160 + 480) + 372);
                        int v198 = *(_DWORD *)(v160 + 860);
                        if (v196) {
                          LODWORD(v196) = *(_DWORD *)(v196 + 424);
                        }
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v160 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        *(void *)&unsigned char buf[24] = " ";
                        *(_WORD *)&buf[32] = 1024;
                        *(_DWORD *)&buf[34] = v197;
                        *(_WORD *)&buf[38] = 1024;
                        *(_DWORD *)&buf[40] = v198;
                        *(_WORD *)&unsigned char buf[44] = 1024;
                        *(_DWORD *)&buf[46] = v196;
                        int v182 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because it was upgraded";
                        goto LABEL_657;
                      }
                      if ((v189 & 0x40) == 0)
                      {
                        if (*(unsigned char *)(v160 + 158)) {
                          goto LABEL_338;
                        }
                        if (!gLogDatapath) {
                          goto LABEL_338;
                        }
                        uint64_t v178 = __nwlog_obj();
                        if (!os_log_type_enabled(v178, OS_LOG_TYPE_DEBUG)) {
                          goto LABEL_338;
                        }
                        uint64_t v190 = *(void *)(v160 + 488);
                        int v191 = *(_DWORD *)(*(void *)(v160 + 480) + 372);
                        int v192 = *(_DWORD *)(v160 + 860);
                        if (v190) {
                          LODWORD(v190) = *(_DWORD *)(v190 + 424);
                        }
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v160 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        *(void *)&unsigned char buf[24] = " ";
                        *(_WORD *)&buf[32] = 1024;
                        *(_DWORD *)&buf[34] = v191;
                        *(_WORD *)&buf[38] = 1024;
                        *(_DWORD *)&buf[40] = v192;
                        *(_WORD *)&unsigned char buf[44] = 1024;
                        *(_DWORD *)&buf[46] = v190;
                        int v182 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because it was never connected";
LABEL_657:
                        _os_log_impl(&dword_1830D4000, v178, OS_LOG_TYPE_DEBUG, v182, buf, 0x32u);
                        uint64_t v160 = v379;
LABEL_338:
                        uint64_t v203 = *(void *)(v160 + 608);
                        int v204 = *(void **)(v160 + 496);
                        v382[0] = MEMORY[0x1E4F143A8];
                        v382[1] = 0x40000000;
                        v382[2] = ___ZL23nw_protocol_http1_resetP11nw_protocolS0__block_invoke;
                        v382[3] = &unk_1E52414F8;
                        v382[4] = v203;
                        nw_queue_context_async(v204, v382);
LABEL_339:
                        if (object) {
                          os_release(object);
                        }
                        if (v13) {
                          os_release(v13);
                        }
                        return 1;
                      }
                      if ((*(_WORD *)(v160 + 872) & 0x100) != 0)
                      {
                        if (*(unsigned char *)(v160 + 158)) {
                          goto LABEL_338;
                        }
                        if (!gLogDatapath) {
                          goto LABEL_338;
                        }
                        uint64_t v178 = __nwlog_obj();
                        if (!os_log_type_enabled(v178, OS_LOG_TYPE_DEBUG)) {
                          goto LABEL_338;
                        }
                        uint64_t v363 = *(void *)(v160 + 488);
                        int v364 = *(_DWORD *)(*(void *)(v160 + 480) + 372);
                        int v365 = *(_DWORD *)(v160 + 860);
                        if (v363) {
                          LODWORD(v363) = *(_DWORD *)(v363 + 424);
                        }
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v160 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        *(void *)&unsigned char buf[24] = " ";
                        *(_WORD *)&buf[32] = 1024;
                        *(_DWORD *)&buf[34] = v364;
                        *(_WORD *)&buf[38] = 1024;
                        *(_DWORD *)&buf[40] = v365;
                        *(_WORD *)&unsigned char buf[44] = 1024;
                        *(_DWORD *)&buf[46] = v363;
                        int v182 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because it has been closed";
                        goto LABEL_657;
                      }
                      if (*(_DWORD *)(v160 + 864) == 4)
                      {
                        if (*(unsigned char *)(v160 + 158) & 1 | (gLogDatapath == 0)) {
                          goto LABEL_338;
                        }
                        uint64_t v178 = __nwlog_obj();
                        if (!os_log_type_enabled(v178, OS_LOG_TYPE_DEBUG)) {
                          goto LABEL_338;
                        }
                        uint64_t v199 = *(void *)(v160 + 488);
                        int v200 = *(_DWORD *)(*(void *)(v160 + 480) + 372);
                        int v201 = *(_DWORD *)(v160 + 860);
                        if (v199) {
                          LODWORD(v199) = *(_DWORD *)(v199 + 424);
                        }
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v160 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        *(void *)&unsigned char buf[24] = " ";
                        *(_WORD *)&buf[32] = 1024;
                        *(_DWORD *)&buf[34] = v200;
                        *(_WORD *)&buf[38] = 1024;
                        *(_DWORD *)&buf[40] = v201;
                        *(_WORD *)&unsigned char buf[44] = 1024;
                        *(_DWORD *)&buf[46] = v199;
                        int v182 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because input has finished from below";
                        goto LABEL_657;
                      }
                      uint64_t v207 = (unsigned __int16 *)(v160 + 872);
                      if (!(*(unsigned char *)(v160 + 158) & 1 | (gLogDatapath == 0)))
                      {
                        int v368 = __nwlog_obj();
                        if (os_log_type_enabled(v368, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v369 = *(void *)(v160 + 488);
                          int v370 = *(_DWORD *)(*(void *)(v160 + 480) + 372);
                          int v371 = *(_DWORD *)(v160 + 860);
                          if (v369) {
                            LODWORD(v369) = *(_DWORD *)(v369 + 424);
                          }
                          *(_DWORD *)buf = 136447490;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v160 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          *(void *)&unsigned char buf[24] = " ";
                          *(_WORD *)&buf[32] = 1024;
                          *(_DWORD *)&buf[34] = v370;
                          *(_WORD *)&buf[38] = 1024;
                          *(_DWORD *)&buf[40] = v371;
                          *(_WORD *)&unsigned char buf[44] = 1024;
                          *(_DWORD *)&buf[46] = v369;
                          _os_log_impl(&dword_1830D4000, v368, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection can be reused", buf, 0x32u);
                          uint64_t v160 = v379;
                        }
                      }
                      *v207 &= 0xFFFAu;
                      uint64_t v208 = *(void **)(v160 + 800);
                      if (v208)
                      {
                        free(v208);
                        *(void *)(v160 + 800) = 0;
                      }
                      *(_DWORD *)(v160 + 840) = 0;
                      BOOL v209 = *(void **)(v160 + 808);
                      if (v209)
                      {
                        free(v209);
                        *(void *)(v160 + 808) = 0;
                      }
                      *(_DWORD *)(v160 + 844) = 0;
                      uint64_t v210 = *(void **)(v160 + 816);
                      if (v210)
                      {
                        free(v210);
                        *(void *)(v160 + 816) = 0;
                      }
                      *(_DWORD *)(v160 + 848) = 0;
                      os_log_type_t v211 = *(void **)(v160 + 824);
                      if (v211)
                      {
                        free(v211);
                        *(void *)(v160 + 824) = 0;
                      }
                      *(_DWORD *)(v160 + 852) = 0;
                      uint64_t v212 = *(void **)(v160 + 832);
                      if (v212)
                      {
                        free(v212);
                        *(void *)(v160 + 832) = 0;
                      }
                      *(_DWORD *)(v160 + 856) = 0;
                      int v213 = *v207;
                      int v214 = v213 | (*((unsigned __int8 *)v207 + 2) << 16);
                      if ((v213 & 0x10) != 0)
                      {
                        if (*(_DWORD *)(v160 + 224) == 21) {
                          *(_DWORD *)(v160 + 224) = 0;
                        }
                        unsigned int v223 = v214 & 0xFFFFFFEF;
                        *uint64_t v207 = v223;
                        *((unsigned char *)v207 + 2) = BYTE2(v223);
                        if ((*(unsigned char *)(v160 + 158) & 1) == 0)
                        {
                          if (gLogDatapath)
                          {
                            uint64_t v218 = __nwlog_obj();
                            if (os_log_type_enabled(v218, OS_LOG_TYPE_DEBUG))
                            {
                              uint64_t v372 = *(void *)(v160 + 488);
                              int v373 = *(_DWORD *)(*(void *)(v160 + 480) + 372);
                              int v374 = *(_DWORD *)(v160 + 860);
                              if (v372) {
                                LODWORD(v372) = *(_DWORD *)(v372 + 424);
                              }
                              *(_DWORD *)buf = 136447490;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_reset_for_new_message";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = v160 + 74;
                              *(_WORD *)&buf[22] = 2080;
                              *(void *)&unsigned char buf[24] = " ";
                              *(_WORD *)&buf[32] = 1024;
                              *(_DWORD *)&buf[34] = v373;
                              *(_WORD *)&buf[38] = 1024;
                              *(_DWORD *)&buf[40] = v374;
                              *(_WORD *)&unsigned char buf[44] = 1024;
                              *(_DWORD *)&buf[46] = v372;
                              uint64_t v222 = "%{public}s %{public}s%s<i%u:c%u:s%u> Unpausing parser, input for next stream available";
                              goto LABEL_674;
                            }
                          }
                        }
                      }
                      else
                      {
                        *(_OWORD *)(v160 + 200) = 0u;
                        char v215 = *(unsigned char *)(v160 + 272);
                        uint64_t v216 = *(void *)(v160 + 248);
                        __int16 v217 = *(_WORD *)(v160 + 278);
                        *(_OWORD *)(v160 + 248) = 0u;
                        *(_OWORD *)(v160 + 264) = 0u;
                        *(_OWORD *)(v160 + 216) = 0u;
                        *(_OWORD *)(v160 + 232) = 0u;
                        *(void *)(v160 + 280) = 0;
                        *(unsigned char *)(v160 + 272) = v215;
                        *(void *)(v160 + 248) = v216;
                        *(void *)(v160 + 256) = 238;
                        *(_WORD *)(v160 + 278) = v217;
                        if ((*(unsigned char *)(v160 + 158) & 1) == 0)
                        {
                          if (gLogDatapath)
                          {
                            uint64_t v218 = __nwlog_obj();
                            if (os_log_type_enabled(v218, OS_LOG_TYPE_DEBUG))
                            {
                              uint64_t v219 = *(void *)(v160 + 488);
                              int v220 = *(_DWORD *)(*(void *)(v160 + 480) + 372);
                              int v221 = *(_DWORD *)(v160 + 860);
                              if (v219) {
                                LODWORD(v219) = *(_DWORD *)(v219 + 424);
                              }
                              *(_DWORD *)buf = 136447490;
                              *(void *)&uint8_t buf[4] = "nw_http1_connection_reset_for_new_message";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = v160 + 74;
                              *(_WORD *)&buf[22] = 2080;
                              *(void *)&unsigned char buf[24] = " ";
                              *(_WORD *)&buf[32] = 1024;
                              *(_DWORD *)&buf[34] = v220;
                              *(_WORD *)&buf[38] = 1024;
                              *(_DWORD *)&buf[40] = v221;
                              *(_WORD *)&unsigned char buf[44] = 1024;
                              *(_DWORD *)&buf[46] = v219;
                              uint64_t v222 = "%{public}s %{public}s%s<i%u:c%u:s%u> Resetting parser, no current available input for next stream";
LABEL_674:
                              _os_log_impl(&dword_1830D4000, v218, OS_LOG_TYPE_DEBUG, v222, buf, 0x32u);
                              uint64_t v160 = v379;
                            }
                          }
                        }
                      }
                      if (v159)
                      {
                        __nwlog_obj();
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        os_log_type_t v225 = (char *)_os_log_send_and_compose_impl();
                        aBlock[0] = 16;
                        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
                        if (!__nwlog_fault(v225, aBlock, &type)) {
                          goto LABEL_410;
                        }
                        if (aBlock[0] == 17)
                        {
                          uint64_t v366 = __nwlog_obj();
                          os_log_type_t v367 = aBlock[0];
                          if (!os_log_type_enabled(v366, (os_log_type_t)aBlock[0])) {
                            goto LABEL_410;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          int v229 = "%{public}s called with null http1_stream";
                        }
                        else if (type)
                        {
                          uint64_t v375 = (char *)__nw_create_backtrace_string();
                          uint64_t v366 = __nwlog_obj();
                          os_log_type_t v367 = aBlock[0];
                          BOOL v376 = os_log_type_enabled(v366, (os_log_type_t)aBlock[0]);
                          if (v375)
                          {
                            if (v376)
                            {
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = v375;
                              _os_log_impl(&dword_1830D4000, v366, v367, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
                            }
                            free(v375);
                            goto LABEL_410;
                          }
                          if (!v376) {
                            goto LABEL_410;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          int v229 = "%{public}s called with null http1_stream, no backtrace";
                        }
                        else
                        {
                          uint64_t v366 = __nwlog_obj();
                          os_log_type_t v367 = aBlock[0];
                          if (!os_log_type_enabled(v366, (os_log_type_t)aBlock[0])) {
                            goto LABEL_410;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          int v229 = "%{public}s called with null http1_stream, backtrace limit exceeded";
                        }
                      }
                      else
                      {
                        if (*((void *)v86 + 31))
                        {
                          if (!*(void *)(v160 + 488))
                          {
                            *((void *)v86 + 32) = v160;
                            *(void *)(v160 + 488) = v86;
                            nw_protocol_set_output_handler((uint64_t)v86, *(void *)(v160 + 32));
                            nw_protocol_set_input_handler(v160, *((void *)v86 + 6));
                            *(_OWORD *)int v86 = *(_OWORD *)v160;
                            long long v230 = *((_OWORD *)v86 + 9);
                            long long v232 = *((_OWORD *)v86 + 6);
                            long long v231 = *((_OWORD *)v86 + 7);
                            *(_OWORD *)(v160 + 128) = *((_OWORD *)v86 + 8);
                            *(_OWORD *)(v160 + 144) = v230;
                            *(_OWORD *)(v160 + 96) = v232;
                            *(_OWORD *)(v160 + 112) = v231;
                            long long v233 = *((_OWORD *)v86 + 5);
                            *(_OWORD *)(v160 + 64) = *((_OWORD *)v86 + 4);
                            *(_OWORD *)(v160 + 80) = v233;
                            nw_http_transaction_metadata_set_connection_metadata(*((void **)v86 + 44), *(void **)(v160 + 768));
                            *v207 &= 0xFFD7u;
                            *(_DWORD *)(v160 + 864) = 1;
                            if ((*(unsigned char *)(v160 + 158) & 1) == 0)
                            {
                              int v234 = __nwlog_obj();
                              if (os_log_type_enabled(v234, OS_LOG_TYPE_DEBUG))
                              {
                                uint64_t v235 = *(void *)(v160 + 488);
                                int v236 = *(_DWORD *)(*(void *)(v160 + 480) + 372);
                                int v237 = *(_DWORD *)(v160 + 860);
                                if (v235) {
                                  LODWORD(v235) = *(_DWORD *)(v235 + 424);
                                }
                                *(_DWORD *)buf = 136447490;
                                *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                                *(_WORD *)&unsigned char buf[12] = 2082;
                                *(void *)&buf[14] = v160 + 74;
                                *(_WORD *)&buf[22] = 2080;
                                *(void *)&unsigned char buf[24] = " ";
                                *(_WORD *)&buf[32] = 1024;
                                *(_DWORD *)&buf[34] = v236;
                                *(_WORD *)&buf[38] = 1024;
                                *(_DWORD *)&buf[40] = v237;
                                *(_WORD *)&unsigned char buf[44] = 1024;
                                *(_DWORD *)&buf[46] = v235;
                                _os_log_impl(&dword_1830D4000, v234, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                              }
                            }
                            if ((v86[158] & 1) == 0)
                            {
                              int v238 = __nwlog_obj();
                              if (os_log_type_enabled(v238, OS_LOG_TYPE_INFO))
                              {
                                uint64_t v239 = *((void *)v86 + 32);
                                int v240 = *(_DWORD *)(*((void *)v86 + 31) + 372);
                                if (v239) {
                                  LODWORD(v239) = *(_DWORD *)(v239 + 860);
                                }
                                int v241 = *((_DWORD *)v86 + 106);
                                *(_DWORD *)buf = 136448002;
                                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                *(_WORD *)&unsigned char buf[12] = 2082;
                                *(void *)&buf[14] = v86 + 74;
                                *(_WORD *)&buf[22] = 2080;
                                *(void *)&unsigned char buf[24] = " ";
                                *(_WORD *)&buf[32] = 1024;
                                *(_DWORD *)&buf[34] = v240;
                                *(_WORD *)&buf[38] = 1024;
                                *(_DWORD *)&buf[40] = v239;
                                *(_WORD *)&unsigned char buf[44] = 1024;
                                *(_DWORD *)&buf[46] = v241;
                                *(_WORD *)&buf[50] = 2048;
                                *(void *)&buf[52] = v86;
                                *(_WORD *)&unsigned char buf[60] = 2048;
                                *(void *)&buf[62] = v160;
                                _os_log_impl(&dword_1830D4000, v238, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
                              }
                            }
                            goto LABEL_339;
                          }
                          __nwlog_obj();
                          uint64_t v224 = *(void *)(v160 + 488);
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v160;
                          *(_WORD *)&buf[22] = 2048;
                          *(void *)&unsigned char buf[24] = v224;
                          os_log_type_t v225 = (char *)_os_log_send_and_compose_impl();
                          aBlock[0] = 16;
                          os_log_type_t type = OS_LOG_TYPE_DEFAULT;
                          if (__nwlog_fault(v225, aBlock, &type))
                          {
                            if (aBlock[0] == 17)
                            {
                              os_log_type_t v226 = __nwlog_obj();
                              os_log_type_t v227 = aBlock[0];
                              if (!os_log_type_enabled(v226, (os_log_type_t)aBlock[0])) {
                                goto LABEL_410;
                              }
                              uint64_t v228 = *(void *)(v160 + 488);
                              *(_DWORD *)buf = 136446722;
                              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                              *(_WORD *)&unsigned char buf[12] = 2048;
                              *(void *)&buf[14] = v160;
                              *(_WORD *)&buf[22] = 2048;
                              *(void *)&unsigned char buf[24] = v228;
                              int v229 = "%{public}s Connection %p already has a stream (%p)";
LABEL_408:
                              uint64_t v259 = v226;
                              os_log_type_t v260 = v227;
                              uint32_t v261 = 32;
LABEL_409:
                              _os_log_impl(&dword_1830D4000, v259, v260, v229, buf, v261);
                              goto LABEL_410;
                            }
                            if (type == OS_LOG_TYPE_DEFAULT)
                            {
                              os_log_type_t v226 = __nwlog_obj();
                              os_log_type_t v227 = aBlock[0];
                              if (!os_log_type_enabled(v226, (os_log_type_t)aBlock[0])) {
                                goto LABEL_410;
                              }
                              uint64_t v253 = *(void *)(v160 + 488);
                              *(_DWORD *)buf = 136446722;
                              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                              *(_WORD *)&unsigned char buf[12] = 2048;
                              *(void *)&buf[14] = v160;
                              *(_WORD *)&buf[22] = 2048;
                              *(void *)&unsigned char buf[24] = v253;
                              int v229 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                              goto LABEL_408;
                            }
                            uint64_t v242 = (char *)__nw_create_backtrace_string();
                            os_log_type_t v226 = __nwlog_obj();
                            os_log_type_t v227 = aBlock[0];
                            BOOL v243 = os_log_type_enabled(v226, (os_log_type_t)aBlock[0]);
                            if (!v242)
                            {
                              if (!v243) {
                                goto LABEL_410;
                              }
                              uint64_t v258 = *(void *)(v160 + 488);
                              *(_DWORD *)buf = 136446722;
                              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                              *(_WORD *)&unsigned char buf[12] = 2048;
                              *(void *)&buf[14] = v160;
                              *(_WORD *)&buf[22] = 2048;
                              *(void *)&unsigned char buf[24] = v258;
                              int v229 = "%{public}s Connection %p already has a stream (%p), no backtrace";
                              goto LABEL_408;
                            }
                            if (v243)
                            {
                              uint64_t v244 = *(void *)(v160 + 488);
                              *(_DWORD *)buf = 136446978;
                              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                              *(_WORD *)&unsigned char buf[12] = 2048;
                              *(void *)&buf[14] = v160;
                              *(_WORD *)&buf[22] = 2048;
                              *(void *)&unsigned char buf[24] = v244;
                              *(_WORD *)&buf[32] = 2082;
                              *(void *)&buf[34] = v242;
                              os_log_type_t v245 = "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s";
                              uint64_t v246 = v226;
                              os_log_type_t v247 = v227;
                              uint32_t v248 = 42;
LABEL_389:
                              _os_log_impl(&dword_1830D4000, v246, v247, v245, buf, v248);
                              goto LABEL_390;
                            }
                            goto LABEL_390;
                          }
                          goto LABEL_410;
                        }
                        __nwlog_obj();
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        os_log_type_t v225 = (char *)_os_log_send_and_compose_impl();
                        aBlock[0] = 16;
                        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
                        if (!__nwlog_fault(v225, aBlock, &type)) {
                          goto LABEL_410;
                        }
                        if (aBlock[0] == 17)
                        {
                          uint64_t v366 = __nwlog_obj();
                          os_log_type_t v367 = aBlock[0];
                          if (!os_log_type_enabled(v366, (os_log_type_t)aBlock[0])) {
                            goto LABEL_410;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          int v229 = "%{public}s called with null http1_stream->protocol_http1";
                        }
                        else if (type)
                        {
                          uint64_t v242 = (char *)__nw_create_backtrace_string();
                          uint64_t v366 = __nwlog_obj();
                          os_log_type_t v367 = aBlock[0];
                          BOOL v377 = os_log_type_enabled(v366, (os_log_type_t)aBlock[0]);
                          if (v242)
                          {
                            if (v377)
                            {
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = v242;
                              os_log_type_t v245 = "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s";
                              uint64_t v246 = v366;
                              os_log_type_t v247 = v367;
                              uint32_t v248 = 22;
                              goto LABEL_389;
                            }
LABEL_390:
                            free(v242);
                            if (!v225) {
                              goto LABEL_339;
                            }
                            goto LABEL_411;
                          }
                          if (!v377)
                          {
LABEL_410:
                            if (!v225) {
                              goto LABEL_339;
                            }
LABEL_411:
                            free(v225);
                            goto LABEL_339;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          int v229 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
                        }
                        else
                        {
                          uint64_t v366 = __nwlog_obj();
                          os_log_type_t v367 = aBlock[0];
                          if (!os_log_type_enabled(v366, (os_log_type_t)aBlock[0])) {
                            goto LABEL_410;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          int v229 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                        }
                      }
                      uint64_t v259 = v366;
                      os_log_type_t v260 = v367;
                      uint32_t v261 = 12;
                      goto LABEL_409;
                    }
                    if (!v348) {
                      goto LABEL_574;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
                    int v346 = "%{public}s called with null http1_stream, no backtrace";
                  }
                  else
                  {
                    uint64_t v344 = __nwlog_obj();
                    os_log_type_t v345 = aBlock[0];
                    if (!os_log_type_enabled(v344, (os_log_type_t)aBlock[0])) {
                      goto LABEL_574;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
                    int v346 = "%{public}s called with null http1_stream, backtrace limit exceeded";
                  }
                  _os_log_impl(&dword_1830D4000, v344, v345, v346, buf, 0xCu);
                  goto LABEL_574;
                }
LABEL_559:
                free(v267);
                goto LABEL_560;
              }
              if (v328)
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
                uint64_t v270 = "%{public}s called with null parameters, no backtrace";
LABEL_557:
                _os_log_impl(&dword_1830D4000, v268, v269, v270, buf, 0xCu);
              }
            }
          }
          else
          {
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
            uint64_t v267 = (void *)_os_log_send_and_compose_impl();
            os_log_type_t type = OS_LOG_TYPE_ERROR;
            char v383 = 0;
            if (!__nwlog_fault((const char *)v267, &type, &v383)) {
              goto LABEL_558;
            }
            if (type == OS_LOG_TYPE_FAULT)
            {
              int v268 = __nwlog_obj();
              os_log_type_t v269 = type;
              if (!os_log_type_enabled(v268, type)) {
                goto LABEL_558;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
              uint64_t v270 = "%{public}s called with null endpoint";
              goto LABEL_557;
            }
            if (!v383)
            {
              int v268 = __nwlog_obj();
              os_log_type_t v269 = type;
              if (!os_log_type_enabled(v268, type)) {
                goto LABEL_558;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
              uint64_t v270 = "%{public}s called with null endpoint, backtrace limit exceeded";
              goto LABEL_557;
            }
            uint64_t v325 = (char *)__nw_create_backtrace_string();
            int v268 = __nwlog_obj();
            os_log_type_t v269 = type;
            BOOL v326 = os_log_type_enabled(v268, type);
            if (!v325)
            {
              if (!v326) {
                goto LABEL_558;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
              uint64_t v270 = "%{public}s called with null endpoint, no backtrace";
              goto LABEL_557;
            }
            if (v326)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v325;
              _os_log_impl(&dword_1830D4000, v268, v269, "%{public}s called with null endpoint, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v325);
          }
LABEL_558:
          if (!v267) {
            goto LABEL_560;
          }
          goto LABEL_559;
        }
LABEL_123:
        int v71 = *(_DWORD *)(v8 + 352);
        *(_DWORD *)(v8 + 352) = v71 - 1;
        if (v71) {
          goto LABEL_140;
        }
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v72 = *(unsigned int *)(v8 + 352);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->pending_output_handler_count";
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = 1;
        *(_WORD *)&buf[32] = 2048;
        *(void *)&buf[34] = v72;
        int v73 = (char *)_os_log_send_and_compose_impl();
        aBlock[0] = 16;
        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
        if (!__nwlog_fault(v73, aBlock, &type)) {
          goto LABEL_137;
        }
        if (aBlock[0] == 17)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v74 = gLogObj;
          os_log_type_t v75 = aBlock[0];
          if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]))
          {
            uint64_t v76 = *(unsigned int *)(v8 + 352);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_output_handler_count";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v76;
            uint64_t v77 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_135:
            uint64_t v84 = v74;
            os_log_type_t v85 = v75;
LABEL_136:
            _os_log_impl(&dword_1830D4000, v84, v85, v77, buf, 0x2Au);
          }
        }
        else if (type)
        {
          uint64_t v78 = (char *)__nw_create_backtrace_string();
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v79 = gLogObj;
          os_log_type_t v80 = aBlock[0];
          BOOL v81 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]);
          if (v78)
          {
            if (v81)
            {
              uint64_t v82 = *(unsigned int *)(v8 + 352);
              *(_DWORD *)buf = 136447234;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->pending_output_handler_count";
              *(_WORD *)&buf[22] = 2048;
              *(void *)&unsigned char buf[24] = 1;
              *(_WORD *)&buf[32] = 2048;
              *(void *)&buf[34] = v82;
              *(_WORD *)&buf[42] = 2082;
              *(void *)&unsigned char buf[44] = v78;
              _os_log_impl(&dword_1830D4000, v79, v80, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
            }
            free(v78);
            goto LABEL_137;
          }
          if (v81)
          {
            uint64_t v202 = *(unsigned int *)(v8 + 352);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_output_handler_count";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v202;
            uint64_t v77 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
            uint64_t v84 = v79;
            os_log_type_t v85 = v80;
            goto LABEL_136;
          }
        }
        else
        {
          int v74 = __nwlog_obj();
          os_log_type_t v75 = aBlock[0];
          if (os_log_type_enabled(v74, (os_log_type_t)aBlock[0]))
          {
            uint64_t v83 = *(unsigned int *)(v8 + 352);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_output_handler_count";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v83;
            uint64_t v77 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
            goto LABEL_135;
          }
        }
LABEL_137:
        if (v73) {
          free(v73);
        }
        *(_DWORD *)(v8 + 352) = 0;
        uint64_t v15 = object;
        goto LABEL_140;
      }
      uint64_t v338 = *(void *)(v11 + 256);
      int v339 = *(_DWORD *)(*(void *)(v11 + 248) + 372);
      if (v338) {
        LODWORD(v338) = *(_DWORD *)(v338 + 860);
      }
      int v340 = *(_DWORD *)(v11 + 424);
      int v341 = *(_DWORD *)(v8 + 348);
      *(_DWORD *)buf = 136448258;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v11 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v339;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v338;
      *(_WORD *)&unsigned char buf[44] = 1024;
      *(_DWORD *)&buf[46] = v340;
      *(_WORD *)&buf[50] = 1024;
      *(_DWORD *)&buf[52] = v340;
      *(_WORD *)&buf[56] = 2048;
      *(void *)&buf[58] = v11;
      *(_WORD *)&buf[66] = 1024;
      *(_DWORD *)&buf[68] = v341;
      _os_log_impl(&dword_1830D4000, v337, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed pending stream %u (%p), now have %u pending streams", buf, 0x48u);
LABEL_58:
      uint64_t v15 = object;
      goto LABEL_68;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v25 = *(unsigned int *)(v8 + 348);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->pending_stream_count";
    *(_WORD *)&buf[22] = 2048;
    *(void *)&unsigned char buf[24] = 1;
    *(_WORD *)&buf[32] = 2048;
    *(void *)&buf[34] = v25;
    int v26 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v26, aBlock, &type))
    {
      if (aBlock[0] == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v27 = gLogObj;
        os_log_type_t v28 = aBlock[0];
        if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]))
        {
          uint64_t v29 = *(unsigned int *)(v8 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v29;
          uint32_t v30 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_61:
          uint64_t v37 = v27;
          os_log_type_t v38 = v28;
LABEL_62:
          _os_log_impl(&dword_1830D4000, v37, v38, v30, buf, 0x2Au);
        }
      }
      else if (type)
      {
        BOOL v31 = (char *)__nw_create_backtrace_string();
        uint64_t v32 = __nwlog_obj();
        os_log_type_t v33 = aBlock[0];
        BOOL v34 = os_log_type_enabled(v32, (os_log_type_t)aBlock[0]);
        if (v31)
        {
          if (v34)
          {
            uint64_t v35 = *(unsigned int *)(v8 + 348);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_stream_count";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v35;
            *(_WORD *)&buf[42] = 2082;
            *(void *)&unsigned char buf[44] = v31;
            _os_log_impl(&dword_1830D4000, v32, v33, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v31);
          goto LABEL_63;
        }
        if (v34)
        {
          uint64_t v206 = *(unsigned int *)(v8 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v206;
          uint32_t v30 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
          uint64_t v37 = v32;
          os_log_type_t v38 = v33;
          goto LABEL_62;
        }
      }
      else
      {
        int v27 = __nwlog_obj();
        os_log_type_t v28 = aBlock[0];
        if (os_log_type_enabled(v27, (os_log_type_t)aBlock[0]))
        {
          uint64_t v36 = *(unsigned int *)(v8 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v36;
          uint32_t v30 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
          goto LABEL_61;
        }
      }
    }
LABEL_63:
    if (v26) {
      free(v26);
    }
    *(_DWORD *)(v8 + 348) = 0;
    uint64_t v15 = object;
    goto LABEL_66;
  }
LABEL_633:
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
  uint64_t v254 = (char *)_os_log_send_and_compose_impl();
  aBlock[0] = 16;
  os_log_type_t type = OS_LOG_TYPE_DEFAULT;
  if (!__nwlog_fault(v254, aBlock, &type)) {
    goto LABEL_647;
  }
  if (aBlock[0] != 17)
  {
    if (type == OS_LOG_TYPE_DEFAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      BOOL v255 = gLogObj;
      os_log_type_t v256 = aBlock[0];
      if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
        os_log_type_t v257 = "%{public}s called with null http1_stream, backtrace limit exceeded";
        goto LABEL_645;
      }
      goto LABEL_647;
    }
    v355 = (char *)__nw_create_backtrace_string();
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    BOOL v356 = gLogObj;
    os_log_type_t v357 = aBlock[0];
    BOOL v360 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]);
    if (v355)
    {
      if (v360)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v355;
        int v359 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
        goto LABEL_641;
      }
      goto LABEL_642;
    }
    if (!v360) {
      goto LABEL_647;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
    os_log_type_t v257 = "%{public}s called with null http1_stream, no backtrace";
    goto LABEL_652;
  }
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  BOOL v255 = gLogObj;
  os_log_type_t v256 = aBlock[0];
  if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]))
  {
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_reset";
    os_log_type_t v257 = "%{public}s called with null http1_stream";
    goto LABEL_645;
  }
LABEL_647:
  if (v254) {
    free(v254);
  }
  return 0;
}

uint64_t ___ZL22nw_http1_stream_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
  }
  return *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

void nw_http1_stream::~nw_http1_stream(nw_http1_stream *this)
{
  uint64_t v2 = (void *)*((void *)this + 52);
  if (v2)
  {
    free(v2);
    *((void *)this + 52) = 0;
  }
  if (*((unsigned char *)this + 408))
  {
    int v3 = (void *)*((void *)this + 50);
    if (v3) {
      os_release(v3);
    }
  }
  *((void *)this + 50) = 0;
  if (*((unsigned char *)this + 392))
  {
    int v4 = (void *)*((void *)this + 48);
    if (v4) {
      os_release(v4);
    }
  }
  *((void *)this + 48) = 0;
  if (*((unsigned char *)this + 376))
  {
    uint64_t v5 = (void *)*((void *)this + 46);
    if (v5) {
      os_release(v5);
    }
  }
  *((void *)this + 46) = 0;
  if (*((unsigned char *)this + 360))
  {
    uint64_t v6 = (void *)*((void *)this + 44);
    if (v6) {
      os_release(v6);
    }
  }
  *((void *)this + 44) = 0;
  if (*((unsigned char *)this + 344))
  {
    uint64_t v7 = (void *)*((void *)this + 42);
    if (v7) {
      os_release(v7);
    }
  }
  *((void *)this + 42) = 0;
  if (*((unsigned char *)this + 328))
  {
    uint64_t v8 = (void *)*((void *)this + 40);
    if (v8) {
      os_release(v8);
    }
  }
  *((void *)this + 40) = 0;
  if (*((unsigned char *)this + 272))
  {
    uint64_t v9 = (void *)*((void *)this + 33);
    if (v9) {
      os_release(v9);
    }
  }
  *((void *)this + 33) = 0;
}

void ___ZL23nw_protocol_http1_resetP11nw_protocolS0__block_invoke(uint64_t a1)
{
  uint64_t v145 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  if ((*(_WORD *)(v1 + 872) & 0x100) == 0)
  {
    int v3 = *(void **)(v1 + 32);
    nw_protocol_disconnect(v3, v2);
    return;
  }
  uint64_t v4 = *(void *)(v1 + 480);
  if (v4)
  {
    nw_http_connection_metadata_closed(*(void **)(v1 + 768));
    if ((*(unsigned char *)(v2 + 158) & 1) == 0)
    {
      if (!gLogDatapath) {
        goto LABEL_9;
      }
      BOOL v81 = __nwlog_obj();
      if (os_log_type_enabled(v81, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v82 = *(void *)(v2 + 488);
        int v83 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
        int v84 = *(_DWORD *)(v2 + 860);
        if (v82) {
          LODWORD(v82) = *(_DWORD *)(v82 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v2 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v137 = (uint64_t)" ";
        *(_WORD *)uint64_t v138 = 1024;
        *(_DWORD *)&v138[2] = v83;
        *(_WORD *)&v138[6] = 1024;
        *(_DWORD *)&v138[8] = v84;
        *(_WORD *)&v138[12] = 1024;
        *(_DWORD *)&v138[14] = v82;
        _os_log_impl(&dword_1830D4000, v81, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing unprocessed_input_frames", buf, 0x32u);
      }
    }
    if (gLogDatapath)
    {
      os_log_type_t v85 = __nwlog_obj();
      if (os_log_type_enabled(v85, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(type) = 136446210;
        *(void *)((char *)&type + 4) = "nw_protocol_finalize_temp_frame_array";
        _os_log_impl(&dword_1830D4000, v85, OS_LOG_TYPE_DEBUG, "%{public}s called", (uint8_t *)&type, 0xCu);
      }
    }
LABEL_9:
    *(void *)buf = MEMORY[0x1E4F143A8];
    *(void *)&buf[8] = 0x40000000;
    *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
    uint64_t v137 = (uint64_t)&__block_descriptor_tmp_58_40119;
    *(void *)uint64_t v138 = v2 + 616;
    v138[8] = 0;
    uint64_t v5 = *(void *)(v2 + 616);
    do
    {
      if (!v5) {
        break;
      }
      uint64_t v6 = *(void *)(v5 + 32);
      char v7 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
      uint64_t v5 = v6;
    }
    while ((v7 & 1) != 0);
    if ((*(unsigned char *)(v2 + 158) & 1) == 0)
    {
      if (!gLogDatapath) {
        goto LABEL_14;
      }
      int v86 = __nwlog_obj();
      if (os_log_type_enabled(v86, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v87 = *(void *)(v2 + 488);
        int v88 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
        int v89 = *(_DWORD *)(v2 + 860);
        if (v87) {
          LODWORD(v87) = *(_DWORD *)(v87 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v2 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v137 = (uint64_t)" ";
        *(_WORD *)uint64_t v138 = 1024;
        *(_DWORD *)&v138[2] = v88;
        *(_WORD *)&v138[6] = 1024;
        *(_DWORD *)&v138[8] = v89;
        *(_WORD *)&v138[12] = 1024;
        *(_DWORD *)&v138[14] = v87;
        _os_log_impl(&dword_1830D4000, v86, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing processed_input_frames", buf, 0x32u);
      }
    }
    if (gLogDatapath)
    {
      int v90 = __nwlog_obj();
      if (os_log_type_enabled(v90, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(type) = 136446210;
        *(void *)((char *)&type + 4) = "nw_protocol_finalize_temp_frame_array";
        _os_log_impl(&dword_1830D4000, v90, OS_LOG_TYPE_DEBUG, "%{public}s called", (uint8_t *)&type, 0xCu);
      }
    }
LABEL_14:
    *(void *)buf = MEMORY[0x1E4F143A8];
    *(void *)&buf[8] = 0x40000000;
    *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
    uint64_t v137 = (uint64_t)&__block_descriptor_tmp_58_40119;
    *(void *)uint64_t v138 = v2 + 632;
    v138[8] = 0;
    uint64_t v8 = *(void *)(v2 + 632);
    do
    {
      if (!v8) {
        break;
      }
      uint64_t v9 = *(void *)(v8 + 32);
      char v10 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
      uint64_t v8 = v9;
    }
    while ((v10 & 1) != 0);
    if ((*(unsigned char *)(v2 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        char v91 = __nwlog_obj();
        if (os_log_type_enabled(v91, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v92 = *(void *)(v2 + 488);
          int v93 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
          int v94 = *(_DWORD *)(v2 + 860);
          if (v92) {
            LODWORD(v92) = *(_DWORD *)(v92 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v2 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v137 = (uint64_t)" ";
          *(_WORD *)uint64_t v138 = 1024;
          *(_DWORD *)&v138[2] = v93;
          *(_WORD *)&v138[6] = 1024;
          *(_DWORD *)&v138[8] = v94;
          *(_WORD *)&v138[12] = 1024;
          *(_DWORD *)&v138[14] = v92;
          _os_log_impl(&dword_1830D4000, v91, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removing pending_output_frames", buf, 0x32u);
        }
      }
    }
    *(void *)&long long type = MEMORY[0x1E4F143A8];
    *((void *)&type + 1) = 0x40000000;
    BOOL v133 = (uint64_t (*)(long long *))___ZL29nw_http1_tear_down_connectionP17nw_protocol_http1P19nw_http1_connection_block_invoke;
    uint64_t v134 = &__block_descriptor_tmp_57_40171;
    uint64_t v135 = v2;
    uint64_t v11 = *(void *)(v2 + 648);
    do
    {
      if (!v11) {
        break;
      }
      uint64_t v12 = *(void *)(v11 + 32);
      char v13 = v133(&type);
      uint64_t v11 = v12;
    }
    while ((v13 & 1) != 0);
    int v14 = (uint64_t *)(v2 + 696);
    nw_frame_cache_remove_all((uint64_t *)(v2 + 696));
    if ((*(unsigned char *)(v2 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        char v95 = __nwlog_obj();
        if (os_log_type_enabled(v95, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v96 = *(void *)(v2 + 488);
          int v97 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
          int v98 = *(_DWORD *)(v2 + 860);
          if (v96) {
            LODWORD(v96) = *(_DWORD *)(v96 + 424);
          }
          uint64_t v99 = *(void *)(v2 + 32);
          *(_DWORD *)buf = 136447746;
          *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v2 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v137 = (uint64_t)" ";
          *(_WORD *)uint64_t v138 = 1024;
          *(_DWORD *)&v138[2] = v97;
          *(_WORD *)&v138[6] = 1024;
          *(_DWORD *)&v138[8] = v98;
          *(_WORD *)&v138[12] = 1024;
          *(_DWORD *)&v138[14] = v96;
          *(_WORD *)&v138[18] = 2048;
          *(void *)&v138[20] = v99;
          _os_log_impl(&dword_1830D4000, v95, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> calling remove input handler on output handler %p", buf, 0x3Cu);
        }
      }
    }
    int v15 = *(_DWORD *)(v4 + 336);
    *(_DWORD *)(v4 + 336) = v15 - 1;
    if (v15)
    {
LABEL_42:
      if ((*(unsigned char *)(v4 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          uint32_t v100 = __nwlog_obj();
          if (os_log_type_enabled(v100, OS_LOG_TYPE_DEBUG))
          {
            int v101 = *(_DWORD *)(v4 + 372);
            int v102 = *(_DWORD *)(v4 + 336);
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v4 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v137 = (uint64_t)" ";
            *(_WORD *)uint64_t v138 = 1024;
            *(_DWORD *)&v138[2] = v101;
            *(_WORD *)&v138[6] = 2048;
            *(void *)&v138[8] = v2;
            *(_WORD *)&v138[16] = 1024;
            *(_DWORD *)&v138[18] = v102;
            _os_log_impl(&dword_1830D4000, v100, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> removed connection %p, now have %u connections", buf, 0x36u);
          }
        }
      }
      if ((*(_WORD *)(v2 + 872) & 0x800) == 0)
      {
LABEL_65:
        nw_protocol_remove_input_handler(*(void *)(v2 + 32), v2);
        nw_protocol_set_output_handler(v2, 0);
        if ((*(unsigned char *)(v2 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            char v103 = __nwlog_obj();
            if (os_log_type_enabled(v103, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v104 = *(void *)(v2 + 488);
              int v105 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
              int v106 = *(_DWORD *)(v2 + 860);
              if (v104) {
                LODWORD(v104) = *(_DWORD *)(v104 + 424);
              }
              *(_DWORD *)buf = 136447746;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_destroy";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v2 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v137 = (uint64_t)" ";
              *(_WORD *)uint64_t v138 = 1024;
              *(_DWORD *)&v138[2] = v105;
              *(_WORD *)&v138[6] = 1024;
              *(_DWORD *)&v138[8] = v106;
              *(_WORD *)&v138[12] = 1024;
              *(_DWORD *)&v138[14] = v104;
              *(_WORD *)&v138[18] = 2048;
              *(void *)&v138[20] = v2;
              _os_log_impl(&dword_1830D4000, v103, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> destroying %p", buf, 0x3Cu);
            }
          }
        }
        char v40 = *(unsigned char *)(v2 + 760);
        if (v40)
        {
          long long v41 = *(void **)(v2 + 752);
          if (v41)
          {
            os_release(v41);
            char v40 = *(unsigned char *)(v2 + 760);
          }
        }
        *(void *)(v2 + 752) = 0;
        *(unsigned char *)(v2 + 760) = v40 | 1;
        char v42 = *(unsigned char *)(v2 + 744);
        if (v42)
        {
          uint64_t v43 = *(void **)(v2 + 736);
          if (v43)
          {
            os_release(v43);
            char v42 = *(unsigned char *)(v2 + 744);
          }
        }
        *(void *)(v2 + 736) = 0;
        *(unsigned char *)(v2 + 744) = v42 | 1;
        uint64_t v44 = *(void *)(v2 + 488);
        if (!v44 || *(void *)(v44 + 256) != v2)
        {
LABEL_86:
          *(void *)(v2 + 488) = 0;
          if ((*(unsigned char *)(v2 + 158) & 1) == 0)
          {
            if (!gLogDatapath) {
              goto LABEL_88;
            }
            id v107 = __nwlog_obj();
            if (os_log_type_enabled(v107, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v108 = *(void *)(v2 + 488);
              int v109 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
              int v110 = *(_DWORD *)(v2 + 860);
              if (v108) {
                LODWORD(v108) = *(_DWORD *)(v108 + 424);
              }
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_destroy";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v2 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v137 = (uint64_t)" ";
              *(_WORD *)uint64_t v138 = 1024;
              *(_DWORD *)&v138[2] = v109;
              *(_WORD *)&v138[6] = 1024;
              *(_DWORD *)&v138[8] = v110;
              *(_WORD *)&v138[12] = 1024;
              *(_DWORD *)&v138[14] = v108;
              _os_log_impl(&dword_1830D4000, v107, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing frame arrays", buf, 0x32u);
            }
          }
          if (gLogDatapath)
          {
            os_log_type_t v111 = __nwlog_obj();
            if (os_log_type_enabled(v111, OS_LOG_TYPE_DEBUG))
            {
              int v141 = 136446210;
              os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
              _os_log_impl(&dword_1830D4000, v111, OS_LOG_TYPE_DEBUG, "%{public}s called", (uint8_t *)&v141, 0xCu);
            }
          }
LABEL_88:
          *(void *)buf = MEMORY[0x1E4F143A8];
          *(void *)&buf[8] = 0x40000000;
          *(void *)&buf[16] = ___ZL39nw_protocol_finalize_master_frame_arrayP16nw_frame_array_sb_block_invoke_40196;
          uint64_t v137 = (uint64_t)&__block_descriptor_tmp_60_40197;
          v138[0] = 0;
          uint64_t v52 = *(void *)(v2 + 680);
          do
          {
            if (!v52) {
              break;
            }
            uint64_t v53 = *(void *)(v52 + 16);
            char v54 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
            uint64_t v52 = v53;
          }
          while ((v54 & 1) != 0);
          if (!*(void *)(v2 + 680))
          {
            if (!gLogDatapath) {
              goto LABEL_93;
            }
            goto LABEL_203;
          }
          int v71 = v14;
          __nwlog_obj();
          int v141 = 136446210;
          os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
          uint64_t v72 = (char *)_os_log_send_and_compose_impl();
          os_log_type_t v131 = OS_LOG_TYPE_ERROR;
          char v130 = 0;
          if (__nwlog_fault(v72, &v131, &v130))
          {
            if (v131 == OS_LOG_TYPE_FAULT)
            {
              int v73 = __nwlog_obj();
              os_log_type_t v74 = v131;
              if (!os_log_type_enabled(v73, v131)) {
                goto LABEL_200;
              }
              int v141 = 136446210;
              os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
              os_log_type_t v75 = "%{public}s frame array is not empty after finalize";
LABEL_199:
              _os_log_impl(&dword_1830D4000, v73, v74, v75, (uint8_t *)&v141, 0xCu);
              goto LABEL_200;
            }
            if (!v130)
            {
              int v73 = __nwlog_obj();
              os_log_type_t v74 = v131;
              if (!os_log_type_enabled(v73, v131)) {
                goto LABEL_200;
              }
              int v141 = 136446210;
              os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
              os_log_type_t v75 = "%{public}s frame array is not empty after finalize, backtrace limit exceeded";
              goto LABEL_199;
            }
            backtrace_string = (char *)__nw_create_backtrace_string();
            int v73 = __nwlog_obj();
            os_log_type_t v74 = v131;
            BOOL v118 = os_log_type_enabled(v73, v131);
            if (!backtrace_string)
            {
              if (!v118) {
                goto LABEL_200;
              }
              int v141 = 136446210;
              os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
              os_log_type_t v75 = "%{public}s frame array is not empty after finalize, no backtrace";
              goto LABEL_199;
            }
            if (v118)
            {
              int v141 = 136446466;
              os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
              __int16 v143 = 2082;
              os_log_type_t v144 = backtrace_string;
              _os_log_impl(&dword_1830D4000, v73, v74, "%{public}s frame array is not empty after finalize, dumping backtrace:%{public}s", (uint8_t *)&v141, 0x16u);
            }
            free(backtrace_string);
          }
LABEL_200:
          if (v72) {
            free(v72);
          }
          int v14 = v71;
          if (!gLogDatapath)
          {
LABEL_93:
            *(void *)buf = MEMORY[0x1E4F143A8];
            *(void *)&buf[8] = 0x40000000;
            *(void *)&buf[16] = ___ZL39nw_protocol_finalize_master_frame_arrayP16nw_frame_array_sb_block_invoke_40196;
            uint64_t v137 = (uint64_t)&__block_descriptor_tmp_60_40197;
            v138[0] = 0;
            uint64_t v55 = *(void *)(v2 + 664);
            do
            {
              if (!v55) {
                break;
              }
              uint64_t v56 = *(void *)(v55 + 16);
              char v57 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
              uint64_t v55 = v56;
            }
            while ((v57 & 1) != 0);
            if (!*(void *)(v2 + 664))
            {
LABEL_97:
              nw_frame_cache_destroy(v14);
              BOOL v58 = *(void **)(v2 + 528);
              if (v58)
              {
                int v59 = *(void **)(v2 + 544);
                if (v59) {
                  nw_association_unregister(v58, v59);
                }
              }
              uint64_t v60 = *(void **)(v2 + 800);
              if (v60)
              {
                free(v60);
                *(void *)(v2 + 800) = 0;
              }
              *(_DWORD *)(v2 + 840) = 0;
              uint64_t v61 = *(void **)(v2 + 808);
              if (v61)
              {
                free(v61);
                *(void *)(v2 + 808) = 0;
              }
              *(_DWORD *)(v2 + 844) = 0;
              int v62 = *(void **)(v2 + 816);
              if (v62)
              {
                free(v62);
                *(void *)(v2 + 816) = 0;
              }
              *(_DWORD *)(v2 + 848) = 0;
              os_log_type_t v63 = *(void **)(v2 + 824);
              if (v63)
              {
                free(v63);
                *(void *)(v2 + 824) = 0;
              }
              *(_DWORD *)(v2 + 852) = 0;
              uint64_t v64 = *(void **)(v2 + 832);
              if (v64)
              {
                free(v64);
                *(void *)(v2 + 832) = 0;
              }
              *(_DWORD *)(v2 + 856) = 0;
              (*(void (**)(void, void))(*(void *)(v2 + 608) + 16))(*(void *)(v2 + 608), 0);
              uint64_t v65 = *(const void **)(v2 + 608);
              if (v65)
              {
                _Block_release(v65);
                *(void *)(v2 + 608) = 0;
              }
              nw_http1_connection::~nw_http1_connection((nw_http1_connection *)v2);
              free(v66);
              if (!*(_DWORD *)(v4 + 336) && !*(_DWORD *)(v4 + 344)) {
                nw_protocol_http1_destroy(v4, v4);
              }
              return;
            }
            uint64_t v76 = v14;
            __nwlog_obj();
            int v141 = 136446210;
            os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
            uint64_t v77 = (char *)_os_log_send_and_compose_impl();
            os_log_type_t v131 = OS_LOG_TYPE_ERROR;
            char v130 = 0;
            if (__nwlog_fault(v77, &v131, &v130))
            {
              if (v131 == OS_LOG_TYPE_FAULT)
              {
                uint64_t v78 = __nwlog_obj();
                os_log_type_t v79 = v131;
                if (os_log_type_enabled(v78, v131))
                {
                  int v141 = 136446210;
                  os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
                  os_log_type_t v80 = "%{public}s frame array is not empty after finalize";
LABEL_207:
                  _os_log_impl(&dword_1830D4000, v78, v79, v80, (uint8_t *)&v141, 0xCu);
                }
              }
              else if (v130)
              {
                os_log_type_t v119 = (char *)__nw_create_backtrace_string();
                uint64_t v78 = __nwlog_obj();
                os_log_type_t v79 = v131;
                BOOL v120 = os_log_type_enabled(v78, v131);
                if (v119)
                {
                  if (v120)
                  {
                    int v141 = 136446466;
                    os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
                    __int16 v143 = 2082;
                    os_log_type_t v144 = v119;
                    _os_log_impl(&dword_1830D4000, v78, v79, "%{public}s frame array is not empty after finalize, dumping backtrace:%{public}s", (uint8_t *)&v141, 0x16u);
                  }
                  free(v119);
                  goto LABEL_208;
                }
                if (v120)
                {
                  int v141 = 136446210;
                  os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
                  os_log_type_t v80 = "%{public}s frame array is not empty after finalize, no backtrace";
                  goto LABEL_207;
                }
              }
              else
              {
                uint64_t v78 = __nwlog_obj();
                os_log_type_t v79 = v131;
                if (os_log_type_enabled(v78, v131))
                {
                  int v141 = 136446210;
                  os_log_type_t v142 = "nw_protocol_finalize_master_frame_array";
                  os_log_type_t v80 = "%{public}s frame array is not empty after finalize, backtrace limit exceeded";
                  goto LABEL_207;
                }
              }
            }
LABEL_208:
            if (v77) {
              free(v77);
            }
            int v14 = v76;
            goto LABEL_97;
          }
LABEL_203:
          int v127 = __nwlog_obj();
          if (os_log_type_enabled(v127, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_protocol_finalize_master_frame_array";
            _os_log_impl(&dword_1830D4000, v127, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
          }
          goto LABEL_93;
        }
        if (*(void *)(v44 + 248))
        {
          if ((*(unsigned char *)(v44 + 158) & 1) == 0)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            os_log_type_t v45 = gLogObj;
            if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
            {
              uint64_t v46 = *(void *)(v44 + 256);
              int v47 = *(_DWORD *)(*(void *)(v44 + 248) + 372);
              if (v46) {
                LODWORD(v46) = *(_DWORD *)(v46 + 860);
              }
              int v48 = *(_DWORD *)(v44 + 424);
              *(_DWORD *)buf = 136448002;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v44 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v137 = (uint64_t)" ";
              *(_WORD *)uint64_t v138 = 1024;
              *(_DWORD *)&v138[2] = v47;
              *(_WORD *)&v138[6] = 1024;
              *(_DWORD *)&v138[8] = v46;
              *(_WORD *)&v138[12] = 1024;
              *(_DWORD *)&v138[14] = v48;
              *(_WORD *)&v138[18] = 2048;
              *(void *)&v138[20] = v44;
              __int16 v139 = 2048;
              uint64_t v140 = v2;
              _os_log_impl(&dword_1830D4000, v45, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) finished with connection %p", buf, 0x46u);
            }
          }
          if (gLogDatapath)
          {
            uint64_t v126 = __nwlog_obj();
            if (os_log_type_enabled(v126, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_finalize_temp_frame_array";
              _os_log_impl(&dword_1830D4000, v126, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
            }
          }
          *(void *)buf = MEMORY[0x1E4F143A8];
          *(void *)&buf[8] = 0x40000000;
          *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
          uint64_t v137 = (uint64_t)&__block_descriptor_tmp_58_40119;
          *(void *)uint64_t v138 = v2 + 632;
          v138[8] = 0;
          uint64_t v49 = *(void *)(v2 + 632);
          do
          {
            if (!v49) {
              break;
            }
            uint64_t v50 = *(void *)(v49 + 32);
            char v51 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
            uint64_t v49 = v50;
          }
          while ((v51 & 1) != 0);
          *(void *)(v44 + 256) = 0;
          *(void *)(v2 + 488) = 0;
          nw_protocol_set_output_handler(v44, 0);
          nw_protocol_set_input_handler(v2, 0);
          goto LABEL_86;
        }
        int v121 = v14;
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
        int v122 = (char *)_os_log_send_and_compose_impl();
        LOBYTE(v141) = 16;
        os_log_type_t v131 = OS_LOG_TYPE_DEFAULT;
        if (__nwlog_fault(v122, &v141, &v131))
        {
          if (v141 == 17)
          {
            char v123 = __nwlog_obj();
            os_log_type_t v124 = v141;
            if (os_log_type_enabled(v123, (os_log_type_t)v141))
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              uint64_t v125 = "%{public}s called with null http1_stream->protocol_http1";
LABEL_220:
              _os_log_impl(&dword_1830D4000, v123, v124, v125, buf, 0xCu);
            }
          }
          else if (v131)
          {
            uint64_t v128 = (char *)__nw_create_backtrace_string();
            char v123 = __nwlog_obj();
            os_log_type_t v124 = v141;
            BOOL v129 = os_log_type_enabled(v123, (os_log_type_t)v141);
            if (v128)
            {
              if (v129)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v128;
                _os_log_impl(&dword_1830D4000, v123, v124, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v128);
              goto LABEL_221;
            }
            if (v129)
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              uint64_t v125 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
              goto LABEL_220;
            }
          }
          else
          {
            char v123 = __nwlog_obj();
            os_log_type_t v124 = v141;
            if (os_log_type_enabled(v123, (os_log_type_t)v141))
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              uint64_t v125 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
              goto LABEL_220;
            }
          }
        }
LABEL_221:
        if (v122) {
          free(v122);
        }
        int v14 = v121;
        goto LABEL_86;
      }
      int v27 = *(_DWORD *)(v4 + 368);
      *(_DWORD *)(v4 + 368) = v27 - 1;
      if (v27)
      {
LABEL_63:
        if ((*(unsigned char *)(v4 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            id v112 = __nwlog_obj();
            if (os_log_type_enabled(v112, OS_LOG_TYPE_DEBUG))
            {
              int v113 = *(_DWORD *)(v4 + 372);
              int v114 = *(_DWORD *)(v4 + 368) + *(_DWORD *)(v4 + 364);
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v4 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v137 = (uint64_t)" ";
              *(_WORD *)uint64_t v138 = 1024;
              *(_DWORD *)&v138[2] = v113;
              *(_WORD *)&v138[6] = 1024;
              *(_DWORD *)&v138[8] = v114;
              *(_WORD *)&v138[12] = 2048;
              *(void *)&v138[14] = v2;
              _os_log_impl(&dword_1830D4000, v112, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> decreased connection pool width to %u after removing non-reusable connection %p", buf, 0x36u);
            }
          }
        }
        goto LABEL_65;
      }
      os_log_type_t v28 = v14;
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v29 = *(unsigned int *)(v4 + 368);
      *(_DWORD *)buf = 136446978;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = "http1->nonresuable_connections";
      *(_WORD *)&buf[22] = 2048;
      uint64_t v137 = 1;
      *(_WORD *)uint64_t v138 = 2048;
      *(void *)&v138[2] = v29;
      uint32_t v30 = (char *)_os_log_send_and_compose_impl();
      LOBYTE(v141) = 16;
      os_log_type_t v131 = OS_LOG_TYPE_DEFAULT;
      if (__nwlog_fault(v30, &v141, &v131))
      {
        if (v141 == 17)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          BOOL v31 = gLogObj;
          os_log_type_t v32 = v141;
          if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v141))
          {
            uint64_t v33 = *(unsigned int *)(v4 + 368);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v137 = 1;
            *(_WORD *)uint64_t v138 = 2048;
            *(void *)&v138[2] = v33;
            BOOL v34 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_59:
            _os_log_impl(&dword_1830D4000, v31, v32, v34, buf, 0x2Au);
          }
        }
        else if (v131)
        {
          uint64_t v35 = (char *)__nw_create_backtrace_string();
          BOOL v31 = __nwlog_obj();
          os_log_type_t v32 = v141;
          BOOL v36 = os_log_type_enabled(v31, (os_log_type_t)v141);
          if (v35)
          {
            if (v36)
            {
              uint64_t v37 = *(unsigned int *)(v4 + 368);
              *(_DWORD *)buf = 136447234;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->nonresuable_connections";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v137 = 1;
              *(_WORD *)uint64_t v138 = 2048;
              *(void *)&v138[2] = v37;
              *(_WORD *)&v138[10] = 2082;
              *(void *)&v138[12] = v35;
              _os_log_impl(&dword_1830D4000, v31, v32, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
            }
            free(v35);
            goto LABEL_60;
          }
          if (v36)
          {
            uint64_t v39 = *(unsigned int *)(v4 + 368);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v137 = 1;
            *(_WORD *)uint64_t v138 = 2048;
            *(void *)&v138[2] = v39;
            BOOL v34 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
            goto LABEL_59;
          }
        }
        else
        {
          BOOL v31 = __nwlog_obj();
          os_log_type_t v32 = v141;
          if (os_log_type_enabled(v31, (os_log_type_t)v141))
          {
            uint64_t v38 = *(unsigned int *)(v4 + 368);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v137 = 1;
            *(_WORD *)uint64_t v138 = 2048;
            *(void *)&v138[2] = v38;
            BOOL v34 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
            goto LABEL_59;
          }
        }
      }
LABEL_60:
      if (v30) {
        free(v30);
      }
      *(_DWORD *)(v4 + 368) = 0;
      int v14 = v28;
      goto LABEL_63;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v16 = *(unsigned int *)(v4 + 336);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->connections_count";
    *(_WORD *)&buf[22] = 2048;
    uint64_t v137 = 1;
    *(_WORD *)uint64_t v138 = 2048;
    *(void *)&v138[2] = v16;
    uint64_t v17 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(v141) = 16;
    os_log_type_t v131 = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v17, &v141, &v131))
    {
      if (v141 == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        os_log_type_t v18 = gLogObj;
        os_log_type_t v19 = v141;
        if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v141))
        {
          uint64_t v20 = *(unsigned int *)(v4 + 336);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->connections_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v137 = 1;
          *(_WORD *)uint64_t v138 = 2048;
          *(void *)&v138[2] = v20;
          uint64_t v21 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_38:
          _os_log_impl(&dword_1830D4000, v18, v19, v21, buf, 0x2Au);
        }
      }
      else if (v131)
      {
        uint64_t v22 = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        os_log_type_t v18 = gLogObj;
        os_log_type_t v19 = v141;
        BOOL v23 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v141);
        if (v22)
        {
          if (v23)
          {
            uint64_t v24 = *(unsigned int *)(v4 + 336);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->connections_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v137 = 1;
            *(_WORD *)uint64_t v138 = 2048;
            *(void *)&v138[2] = v24;
            *(_WORD *)&v138[10] = 2082;
            *(void *)&v138[12] = v22;
            _os_log_impl(&dword_1830D4000, v18, v19, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v22);
          goto LABEL_39;
        }
        if (v23)
        {
          uint64_t v26 = *(unsigned int *)(v4 + 336);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->connections_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v137 = 1;
          *(_WORD *)uint64_t v138 = 2048;
          *(void *)&v138[2] = v26;
          uint64_t v21 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
          goto LABEL_38;
        }
      }
      else
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        os_log_type_t v18 = gLogObj;
        os_log_type_t v19 = v141;
        if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v141))
        {
          uint64_t v25 = *(unsigned int *)(v4 + 336);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->connections_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v137 = 1;
          *(_WORD *)uint64_t v138 = 2048;
          *(void *)&v138[2] = v25;
          uint64_t v21 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
          goto LABEL_38;
        }
      }
    }
LABEL_39:
    if (v17) {
      free(v17);
    }
    *(_DWORD *)(v4 + 336) = 0;
    int v14 = (uint64_t *)(v2 + 696);
    goto LABEL_42;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
  BOOL v67 = (char *)_os_log_send_and_compose_impl();
  LOBYTE(type) = 16;
  LOBYTE(v141) = 0;
  if (__nwlog_fault(v67, &type, &v141))
  {
    if (type == 17)
    {
      uint64_t v68 = __nwlog_obj();
      os_log_type_t v69 = type;
      if (!os_log_type_enabled(v68, (os_log_type_t)type)) {
        goto LABEL_195;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
      uint64_t v70 = "%{public}s called with null http1";
      goto LABEL_194;
    }
    if (!(_BYTE)v141)
    {
      uint64_t v68 = __nwlog_obj();
      os_log_type_t v69 = type;
      if (!os_log_type_enabled(v68, (os_log_type_t)type)) {
        goto LABEL_195;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
      uint64_t v70 = "%{public}s called with null http1, backtrace limit exceeded";
      goto LABEL_194;
    }
    os_log_type_t v115 = (char *)__nw_create_backtrace_string();
    uint64_t v68 = __nwlog_obj();
    os_log_type_t v69 = type;
    BOOL v116 = os_log_type_enabled(v68, (os_log_type_t)type);
    if (v115)
    {
      if (v116)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v115;
        _os_log_impl(&dword_1830D4000, v68, v69, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v115);
      goto LABEL_195;
    }
    if (v116)
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
      uint64_t v70 = "%{public}s called with null http1, no backtrace";
LABEL_194:
      _os_log_impl(&dword_1830D4000, v68, v69, v70, buf, 0xCu);
    }
  }
LABEL_195:
  if (v67) {
    free(v67);
  }
}

uint64_t nw_protocol_http1_replace_input_handler(nw_protocol *a1, nw_protocol *a2, nw_protocol *a3)
{
  uint64_t v84 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v69 = "nw_http1_get_http1_protocol";
    uint64_t v29 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v66 = 0;
    if (!__nwlog_fault(v29, &type, &v66)) {
      goto LABEL_139;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v66)
      {
        uint32_t v30 = __nwlog_obj();
        os_log_type_t v31 = type;
        if (!os_log_type_enabled(v30, type)) {
          goto LABEL_139;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_http1_get_http1_protocol";
        os_log_type_t v32 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_138;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint32_t v30 = __nwlog_obj();
      os_log_type_t v31 = type;
      BOOL v38 = os_log_type_enabled(v30, type);
      if (!backtrace_string)
      {
        if (!v38) {
          goto LABEL_139;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_http1_get_http1_protocol";
        os_log_type_t v32 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_138;
      }
      if (v38)
      {
        *(_DWORD *)buf = 136446466;
        os_log_type_t v69 = "nw_http1_get_http1_protocol";
        __int16 v70 = 2082;
        int v71 = (nw_protocol *)backtrace_string;
        _os_log_impl(&dword_1830D4000, v30, v31, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_139;
    }
    uint32_t v30 = __nwlog_obj();
    os_log_type_t v31 = type;
    if (!os_log_type_enabled(v30, type)) {
      goto LABEL_139;
    }
    *(_DWORD *)buf = 136446210;
    os_log_type_t v69 = "nw_http1_get_http1_protocol";
    os_log_type_t v32 = "%{public}s called with null protocol";
LABEL_138:
    _os_log_impl(&dword_1830D4000, v30, v31, v32, buf, 0xCu);
    goto LABEL_139;
  }
  handle = (char *)a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v69 = "nw_http1_get_http1_protocol";
    uint64_t v29 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v66 = 0;
    if (!__nwlog_fault(v29, &type, &v66)) {
      goto LABEL_139;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v66)
      {
        uint32_t v30 = __nwlog_obj();
        os_log_type_t v31 = type;
        if (!os_log_type_enabled(v30, type)) {
          goto LABEL_139;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_http1_get_http1_protocol";
        os_log_type_t v32 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_138;
      }
      uint64_t v39 = (char *)__nw_create_backtrace_string();
      uint32_t v30 = __nwlog_obj();
      os_log_type_t v31 = type;
      BOOL v40 = os_log_type_enabled(v30, type);
      if (!v39)
      {
        if (!v40) {
          goto LABEL_139;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_http1_get_http1_protocol";
        os_log_type_t v32 = "%{public}s called with null handle, no backtrace";
        goto LABEL_138;
      }
      if (v40)
      {
        *(_DWORD *)buf = 136446466;
        os_log_type_t v69 = "nw_http1_get_http1_protocol";
        __int16 v70 = 2082;
        int v71 = (nw_protocol *)v39;
        long long v41 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_112:
        _os_log_impl(&dword_1830D4000, v30, v31, v41, buf, 0x16u);
      }
LABEL_113:
      free(v39);
      if (!v29)
      {
LABEL_141:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
        uint64_t v33 = (const char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v66 = 0;
        if (!__nwlog_fault(v33, &type, &v66)) {
          goto LABEL_172;
        }
        if (type == OS_LOG_TYPE_FAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          BOOL v34 = gLogObj;
          os_log_type_t v35 = type;
          if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
            goto LABEL_172;
          }
          *(_DWORD *)buf = 136446210;
          os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
          BOOL v36 = "%{public}s called with null http1";
        }
        else
        {
          if (v66)
          {
            BOOL v58 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            int v59 = gLogObj;
            os_log_type_t v60 = type;
            BOOL v61 = os_log_type_enabled((os_log_t)gLogObj, type);
            if (v58)
            {
              if (v61)
              {
                *(_DWORD *)buf = 136446466;
                os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
                __int16 v70 = 2082;
                int v71 = (nw_protocol *)v58;
                int v62 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_166:
                _os_log_impl(&dword_1830D4000, v59, v60, v62, buf, 0x16u);
              }
LABEL_167:
              free(v58);
              goto LABEL_172;
            }
            if (!v61) {
              goto LABEL_172;
            }
            *(_DWORD *)buf = 136446210;
            os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
            BOOL v36 = "%{public}s called with null http1, no backtrace";
LABEL_178:
            uint64_t v64 = v59;
            os_log_type_t v65 = v60;
            goto LABEL_171;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          BOOL v34 = gLogObj;
          os_log_type_t v35 = type;
          if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
            goto LABEL_172;
          }
          *(_DWORD *)buf = 136446210;
          os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
          BOOL v36 = "%{public}s called with null http1, backtrace limit exceeded";
        }
        goto LABEL_170;
      }
LABEL_140:
      free(v29);
      goto LABEL_141;
    }
    uint32_t v30 = __nwlog_obj();
    os_log_type_t v31 = type;
    if (!os_log_type_enabled(v30, type)) {
      goto LABEL_139;
    }
    *(_DWORD *)buf = 136446210;
    os_log_type_t v69 = "nw_http1_get_http1_protocol";
    os_log_type_t v32 = "%{public}s called with null handle";
    goto LABEL_138;
  }
  int v7 = *((_DWORD *)handle + 6);
  uint64_t v8 = (uint64_t *)a1->handle;
  if (v7 == 1) {
    goto LABEL_10;
  }
  if (v7 != 2)
  {
    if (v7 != 3) {
      goto LABEL_141;
    }
    uint64_t v9 = *((void *)handle + 2);
    if (v9)
    {
      uint64_t v8 = (uint64_t *)(v9 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v69 = "nw_http1_get_http1_protocol";
    uint64_t v29 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v66 = 0;
    if (__nwlog_fault(v29, &type, &v66))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        uint32_t v30 = __nwlog_obj();
        os_log_type_t v31 = type;
        if (!os_log_type_enabled(v30, type)) {
          goto LABEL_139;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_http1_get_http1_protocol";
        os_log_type_t v32 = "%{public}s called with null handle->http1_connection";
        goto LABEL_138;
      }
      if (!v66)
      {
        uint32_t v30 = __nwlog_obj();
        os_log_type_t v31 = type;
        if (!os_log_type_enabled(v30, type)) {
          goto LABEL_139;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_http1_get_http1_protocol";
        os_log_type_t v32 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_138;
      }
      uint64_t v39 = (char *)__nw_create_backtrace_string();
      uint32_t v30 = __nwlog_obj();
      os_log_type_t v31 = type;
      BOOL v54 = os_log_type_enabled(v30, type);
      if (!v39)
      {
        if (!v54) {
          goto LABEL_139;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_http1_get_http1_protocol";
        os_log_type_t v32 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_138;
      }
      if (v54)
      {
        *(_DWORD *)buf = 136446466;
        os_log_type_t v69 = "nw_http1_get_http1_protocol";
        __int16 v70 = 2082;
        int v71 = (nw_protocol *)v39;
        long long v41 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
        goto LABEL_112;
      }
      goto LABEL_113;
    }
LABEL_139:
    if (!v29) {
      goto LABEL_141;
    }
    goto LABEL_140;
  }
  uint64_t v10 = *((void *)handle + 1);
  if (!v10)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v69 = "nw_http1_get_http1_protocol";
    uint64_t v29 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v66 = 0;
    if (!__nwlog_fault(v29, &type, &v66)) {
      goto LABEL_139;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint32_t v30 = __nwlog_obj();
      os_log_type_t v31 = type;
      if (!os_log_type_enabled(v30, type)) {
        goto LABEL_139;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v69 = "nw_http1_get_http1_protocol";
      os_log_type_t v32 = "%{public}s called with null handle->http1_stream";
      goto LABEL_138;
    }
    if (!v66)
    {
      uint32_t v30 = __nwlog_obj();
      os_log_type_t v31 = type;
      if (!os_log_type_enabled(v30, type)) {
        goto LABEL_139;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v69 = "nw_http1_get_http1_protocol";
      os_log_type_t v32 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_138;
    }
    uint64_t v39 = (char *)__nw_create_backtrace_string();
    uint32_t v30 = __nwlog_obj();
    os_log_type_t v31 = type;
    BOOL v55 = os_log_type_enabled(v30, type);
    if (!v39)
    {
      if (!v55) {
        goto LABEL_139;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v69 = "nw_http1_get_http1_protocol";
      os_log_type_t v32 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_138;
    }
    if (v55)
    {
      *(_DWORD *)buf = 136446466;
      os_log_type_t v69 = "nw_http1_get_http1_protocol";
      __int16 v70 = 2082;
      int v71 = (nw_protocol *)v39;
      long long v41 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_112;
    }
    goto LABEL_113;
  }
  uint64_t v8 = (uint64_t *)(v10 + 248);
LABEL_10:
  uint64_t v11 = *v8;
  if (!*v8) {
    goto LABEL_141;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
    uint64_t v33 = (const char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v66 = 0;
    if (!__nwlog_fault(v33, &type, &v66)) {
      goto LABEL_172;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v66)
      {
        BOOL v34 = __nwlog_obj();
        os_log_type_t v35 = type;
        if (!os_log_type_enabled(v34, type)) {
          goto LABEL_172;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
        BOOL v36 = "%{public}s called with null old_input_protocol, backtrace limit exceeded";
        goto LABEL_170;
      }
      uint64_t v46 = (char *)__nw_create_backtrace_string();
      BOOL v34 = __nwlog_obj();
      os_log_type_t v35 = type;
      BOOL v47 = os_log_type_enabled(v34, type);
      if (!v46)
      {
        if (!v47) {
          goto LABEL_172;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
        BOOL v36 = "%{public}s called with null old_input_protocol, no backtrace";
        goto LABEL_170;
      }
      if (v47)
      {
        *(_DWORD *)buf = 136446466;
        os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
        __int16 v70 = 2082;
        int v71 = (nw_protocol *)v46;
        int v48 = "%{public}s called with null old_input_protocol, dumping backtrace:%{public}s";
LABEL_82:
        _os_log_impl(&dword_1830D4000, v34, v35, v48, buf, 0x16u);
      }
LABEL_83:
      free(v46);
      goto LABEL_172;
    }
    BOOL v34 = __nwlog_obj();
    os_log_type_t v35 = type;
    if (!os_log_type_enabled(v34, type)) {
      goto LABEL_172;
    }
    *(_DWORD *)buf = 136446210;
    os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
    BOOL v36 = "%{public}s called with null old_input_protocol";
LABEL_170:
    uint64_t v64 = v34;
    os_log_type_t v65 = v35;
LABEL_171:
    _os_log_impl(&dword_1830D4000, v64, v65, v36, buf, 0xCu);
    goto LABEL_172;
  }
  if (!a3)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
    uint64_t v33 = (const char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v66 = 0;
    if (!__nwlog_fault(v33, &type, &v66)) {
      goto LABEL_172;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v34 = __nwlog_obj();
      os_log_type_t v35 = type;
      if (!os_log_type_enabled(v34, type)) {
        goto LABEL_172;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
      BOOL v36 = "%{public}s called with null new_input_protocol";
      goto LABEL_170;
    }
    if (!v66)
    {
      BOOL v34 = __nwlog_obj();
      os_log_type_t v35 = type;
      if (!os_log_type_enabled(v34, type)) {
        goto LABEL_172;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
      BOOL v36 = "%{public}s called with null new_input_protocol, backtrace limit exceeded";
      goto LABEL_170;
    }
    uint64_t v46 = (char *)__nw_create_backtrace_string();
    BOOL v34 = __nwlog_obj();
    os_log_type_t v35 = type;
    BOOL v49 = os_log_type_enabled(v34, type);
    if (!v46)
    {
      if (!v49) {
        goto LABEL_172;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
      BOOL v36 = "%{public}s called with null new_input_protocol, no backtrace";
      goto LABEL_170;
    }
    if (v49)
    {
      *(_DWORD *)buf = 136446466;
      os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
      __int16 v70 = 2082;
      int v71 = (nw_protocol *)v46;
      int v48 = "%{public}s called with null new_input_protocol, dumping backtrace:%{public}s";
      goto LABEL_82;
    }
    goto LABEL_83;
  }
  if (v7 != 2)
  {
    if (v7 != 3)
    {
LABEL_158:
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
      uint64_t v33 = (const char *)_os_log_send_and_compose_impl();
      os_log_type_t type = OS_LOG_TYPE_ERROR;
      char v66 = 0;
      if (!__nwlog_fault(v33, &type, &v66)) {
        goto LABEL_172;
      }
      if (type == OS_LOG_TYPE_FAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v34 = gLogObj;
        os_log_type_t v35 = type;
        if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
          goto LABEL_172;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
        BOOL v36 = "%{public}s called with null http1_stream";
        goto LABEL_170;
      }
      if (!v66)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v34 = gLogObj;
        os_log_type_t v35 = type;
        if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
          goto LABEL_172;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
        BOOL v36 = "%{public}s called with null http1_stream, backtrace limit exceeded";
        goto LABEL_170;
      }
      BOOL v58 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v59 = gLogObj;
      os_log_type_t v60 = type;
      BOOL v63 = os_log_type_enabled((os_log_t)gLogObj, type);
      if (v58)
      {
        if (v63)
        {
          *(_DWORD *)buf = 136446466;
          os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
          __int16 v70 = 2082;
          int v71 = (nw_protocol *)v58;
          int v62 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
          goto LABEL_166;
        }
        goto LABEL_167;
      }
      if (!v63)
      {
LABEL_172:
        if (v33)
        {
          os_log_type_t v28 = (char *)v33;
          goto LABEL_174;
        }
        return 0;
      }
      *(_DWORD *)buf = 136446210;
      os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
      BOOL v36 = "%{public}s called with null http1_stream, no backtrace";
      goto LABEL_178;
    }
    uint64_t v12 = *((void *)handle + 2);
    if (v12)
    {
      char v13 = (uint64_t *)(v12 + 488);
      goto LABEL_18;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    os_log_type_t v69 = "nw_http1_get_stream_for_protocol";
    uint64_t v50 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v66 = 0;
    if (__nwlog_fault(v50, &type, &v66))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        char v51 = __nwlog_obj();
        os_log_type_t v52 = type;
        if (!os_log_type_enabled(v51, type)) {
          goto LABEL_156;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_http1_get_stream_for_protocol";
        uint64_t v53 = "%{public}s called with null handle->http1_connection";
        goto LABEL_155;
      }
      if (!v66)
      {
        char v51 = __nwlog_obj();
        os_log_type_t v52 = type;
        if (!os_log_type_enabled(v51, type)) {
          goto LABEL_156;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_http1_get_stream_for_protocol";
        uint64_t v53 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_155;
      }
      uint64_t v56 = (char *)__nw_create_backtrace_string();
      char v51 = __nwlog_obj();
      os_log_type_t v52 = type;
      BOOL v57 = os_log_type_enabled(v51, type);
      if (v56)
      {
        if (v57)
        {
          *(_DWORD *)buf = 136446466;
          os_log_type_t v69 = "nw_http1_get_stream_for_protocol";
          __int16 v70 = 2082;
          int v71 = (nw_protocol *)v56;
          _os_log_impl(&dword_1830D4000, v51, v52, "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v56);
        goto LABEL_156;
      }
      if (v57)
      {
        *(_DWORD *)buf = 136446210;
        os_log_type_t v69 = "nw_http1_get_stream_for_protocol";
        uint64_t v53 = "%{public}s called with null handle->http1_connection, no backtrace";
LABEL_155:
        _os_log_impl(&dword_1830D4000, v51, v52, v53, buf, 0xCu);
      }
    }
LABEL_156:
    if (v50) {
      free(v50);
    }
    goto LABEL_158;
  }
  char v13 = (uint64_t *)(handle + 8);
LABEL_18:
  uint64_t v14 = *v13;
  if (!*v13) {
    goto LABEL_158;
  }
  if ((*(unsigned char *)(v14 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      char v42 = __nwlog_obj();
      if (os_log_type_enabled(v42, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v43 = *(void *)(v14 + 256);
        int v44 = *(_DWORD *)(*(void *)(v14 + 248) + 372);
        if (v43) {
          LODWORD(v43) = *(_DWORD *)(v43 + 860);
        }
        int v45 = *(_DWORD *)(v14 + 424);
        *(_DWORD *)buf = 136448258;
        os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
        __int16 v70 = 2082;
        int v71 = (nw_protocol *)(v14 + 74);
        __int16 v72 = 2080;
        int v73 = (nw_protocol *)" ";
        __int16 v74 = 1024;
        *(_DWORD *)os_log_type_t v75 = v44;
        *(_WORD *)&v75[4] = 1024;
        *(_DWORD *)&v75[6] = v43;
        __int16 v76 = 1024;
        int v77 = v45;
        __int16 v78 = 2048;
        uint64_t v79 = v14;
        __int16 v80 = 2048;
        BOOL v81 = a2;
        __int16 v82 = 2048;
        int v83 = a3;
        _os_log_impl(&dword_1830D4000, v42, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for stream %p with old protocol: %p and new protocol: %p", buf, 0x50u);
      }
    }
  }
  if (a1->default_input_handler != a2)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    default_input_handler = a1->default_input_handler;
    *(_DWORD *)buf = 136446722;
    os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
    __int16 v70 = 2048;
    int v71 = default_input_handler;
    __int16 v72 = 2048;
    int v73 = a2;
    uint64_t v16 = (const char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v66 = 0;
    if (!__nwlog_fault(v16, &type, &v66)) {
      goto LABEL_43;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v17 = gLogObj;
      os_log_type_t v18 = type;
      if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
        goto LABEL_43;
      }
      os_log_type_t v19 = a1->default_input_handler;
      *(_DWORD *)buf = 136446722;
      os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
      __int16 v70 = 2048;
      int v71 = v19;
      __int16 v72 = 2048;
      int v73 = a2;
      uint64_t v20 = "%{public}s Old input handler does not match (%p != %p)";
    }
    else if (v66)
    {
      BOOL v23 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v17 = gLogObj;
      os_log_type_t v18 = type;
      BOOL v24 = os_log_type_enabled((os_log_t)gLogObj, type);
      if (v23)
      {
        if (v24)
        {
          uint64_t v25 = a1->default_input_handler;
          *(_DWORD *)buf = 136446978;
          os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
          __int16 v70 = 2048;
          int v71 = v25;
          __int16 v72 = 2048;
          int v73 = a2;
          __int16 v74 = 2082;
          *(void *)os_log_type_t v75 = v23;
          _os_log_impl(&dword_1830D4000, v17, v18, "%{public}s Old input handler does not match (%p != %p), dumping backtrace:%{public}s", buf, 0x2Au);
        }
        free(v23);
LABEL_43:
        if (v16)
        {
          os_log_type_t v28 = (char *)v16;
LABEL_174:
          free(v28);
          return 0;
        }
        return 0;
      }
      if (!v24) {
        goto LABEL_43;
      }
      int v27 = a1->default_input_handler;
      *(_DWORD *)buf = 136446722;
      os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
      __int16 v70 = 2048;
      int v71 = v27;
      __int16 v72 = 2048;
      int v73 = a2;
      uint64_t v20 = "%{public}s Old input handler does not match (%p != %p), no backtrace";
    }
    else
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v17 = gLogObj;
      os_log_type_t v18 = type;
      if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
        goto LABEL_43;
      }
      uint64_t v26 = a1->default_input_handler;
      *(_DWORD *)buf = 136446722;
      os_log_type_t v69 = "nw_protocol_http1_replace_input_handler";
      __int16 v70 = 2048;
      int v71 = v26;
      __int16 v72 = 2048;
      int v73 = a2;
      uint64_t v20 = "%{public}s Old input handler does not match (%p != %p), backtrace limit exceeded";
    }
    _os_log_impl(&dword_1830D4000, v17, v18, v20, buf, 0x20u);
    goto LABEL_43;
  }
  nw_protocol_set_input_handler(v14, (uint64_t)a3);
  if (*(nw_protocol **)(v11 + 48) == a2) {
    nw_protocol_set_input_handler(v11, (uint64_t)a3);
  }
  uint64_t v21 = *(void *)(v14 + 256);
  if (v21) {
    nw_protocol_set_input_handler(v21, (uint64_t)a3);
  }
  if (!a3->output_handler) {
    nw_protocol_set_output_handler((uint64_t)a3, v14);
  }
  return 1;
}

BOOL nw_protocol_http1_remove_input_handler(nw_protocol *a1, nw_protocol *a2, int a3)
{
  uint64_t v1054 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v441 = (char *)_os_log_send_and_compose_impl();
    v1049[0] = 16;
    aBlock[0] = 0;
    if (!__nwlog_fault(v441, v1049, aBlock)) {
      goto LABEL_1295;
    }
    if (v1049[0] != 17)
    {
      if (!aBlock[0])
      {
        int v442 = __nwlog_obj();
        os_log_type_t v443 = v1049[0];
        if (!os_log_type_enabled(v442, (os_log_type_t)v1049[0])) {
          goto LABEL_1295;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v444 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_1294;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v442 = __nwlog_obj();
      os_log_type_t v443 = v1049[0];
      BOOL v513 = os_log_type_enabled(v442, (os_log_type_t)v1049[0]);
      if (!backtrace_string)
      {
        if (!v513) {
          goto LABEL_1295;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v444 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_1294;
      }
      if (v513)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = backtrace_string;
        _os_log_impl(&dword_1830D4000, v442, v443, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_1295;
    }
    int v442 = __nwlog_obj();
    os_log_type_t v443 = v1049[0];
    if (!os_log_type_enabled(v442, (os_log_type_t)v1049[0])) {
      goto LABEL_1295;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    BOOL v444 = "%{public}s called with null protocol";
LABEL_1294:
    _os_log_impl(&dword_1830D4000, v442, v443, v444, buf, 0xCu);
    goto LABEL_1295;
  }
  handle = (char *)a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v441 = (char *)_os_log_send_and_compose_impl();
    v1049[0] = 16;
    aBlock[0] = 0;
    if (!__nwlog_fault(v441, v1049, aBlock)) {
      goto LABEL_1295;
    }
    if (v1049[0] != 17)
    {
      if (!aBlock[0])
      {
        int v442 = __nwlog_obj();
        os_log_type_t v443 = v1049[0];
        if (!os_log_type_enabled(v442, (os_log_type_t)v1049[0])) {
          goto LABEL_1295;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v444 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_1294;
      }
      v514 = (char *)__nw_create_backtrace_string();
      int v442 = __nwlog_obj();
      os_log_type_t v443 = v1049[0];
      BOOL v515 = os_log_type_enabled(v442, (os_log_type_t)v1049[0]);
      if (!v514)
      {
        if (!v515) {
          goto LABEL_1295;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v444 = "%{public}s called with null handle, no backtrace";
        goto LABEL_1294;
      }
      if (v515)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v514;
        int v516 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_877:
        _os_log_impl(&dword_1830D4000, v442, v443, v516, buf, 0x16u);
      }
LABEL_878:
      free(v514);
      if (!v441)
      {
LABEL_1297:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
        int v503 = (char *)_os_log_send_and_compose_impl();
        v1049[0] = 16;
        aBlock[0] = 0;
        if (!__nwlog_fault(v503, v1049, aBlock)) {
          goto LABEL_1328;
        }
        if (v1049[0] == 17)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v504 = gLogObj;
          os_log_type_t v505 = v1049[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0])) {
            goto LABEL_1328;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
          v506 = "%{public}s called with null http1";
        }
        else
        {
          if (aBlock[0])
          {
            v782 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            v783 = gLogObj;
            os_log_type_t v784 = v1049[0];
            BOOL v785 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]);
            if (v782)
            {
              if (v785)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v782;
                v786 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_1322:
                _os_log_impl(&dword_1830D4000, v783, v784, v786, buf, 0x16u);
              }
LABEL_1323:
              free(v782);
              goto LABEL_1328;
            }
            if (!v785) {
              goto LABEL_1328;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
            v506 = "%{public}s called with null http1, no backtrace";
LABEL_1333:
            v788 = v783;
            os_log_type_t v789 = v784;
            goto LABEL_1327;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v504 = gLogObj;
          os_log_type_t v505 = v1049[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0])) {
            goto LABEL_1328;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
          v506 = "%{public}s called with null http1, backtrace limit exceeded";
        }
LABEL_1326:
        v788 = v504;
        os_log_type_t v789 = v505;
LABEL_1327:
        _os_log_impl(&dword_1830D4000, v788, v789, v506, buf, 0xCu);
        goto LABEL_1328;
      }
LABEL_1296:
      free(v441);
      goto LABEL_1297;
    }
    int v442 = __nwlog_obj();
    os_log_type_t v443 = v1049[0];
    if (!os_log_type_enabled(v442, (os_log_type_t)v1049[0])) {
      goto LABEL_1295;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    BOOL v444 = "%{public}s called with null handle";
    goto LABEL_1294;
  }
  int v7 = *((_DWORD *)handle + 6);
  uint64_t v8 = (uint64_t *)a1->handle;
  if (v7 == 1) {
    goto LABEL_10;
  }
  if (v7 != 2)
  {
    if (v7 != 3) {
      goto LABEL_1297;
    }
    uint64_t v9 = *((void *)handle + 2);
    if (v9)
    {
      uint64_t v8 = (uint64_t *)(v9 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v441 = (char *)_os_log_send_and_compose_impl();
    v1049[0] = 16;
    aBlock[0] = 0;
    if (__nwlog_fault(v441, v1049, aBlock))
    {
      if (v1049[0] == 17)
      {
        int v442 = __nwlog_obj();
        os_log_type_t v443 = v1049[0];
        if (!os_log_type_enabled(v442, (os_log_type_t)v1049[0])) {
          goto LABEL_1295;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v444 = "%{public}s called with null handle->http1_connection";
        goto LABEL_1294;
      }
      if (!aBlock[0])
      {
        int v442 = __nwlog_obj();
        os_log_type_t v443 = v1049[0];
        if (!os_log_type_enabled(v442, (os_log_type_t)v1049[0])) {
          goto LABEL_1295;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v444 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_1294;
      }
      v514 = (char *)__nw_create_backtrace_string();
      int v442 = __nwlog_obj();
      os_log_type_t v443 = v1049[0];
      BOOL v711 = os_log_type_enabled(v442, (os_log_type_t)v1049[0]);
      if (!v514)
      {
        if (!v711) {
          goto LABEL_1295;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v444 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_1294;
      }
      if (v711)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v514;
        int v516 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
        goto LABEL_877;
      }
      goto LABEL_878;
    }
LABEL_1295:
    if (!v441) {
      goto LABEL_1297;
    }
    goto LABEL_1296;
  }
  uint64_t v10 = *((void *)handle + 1);
  if (!v10)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v441 = (char *)_os_log_send_and_compose_impl();
    v1049[0] = 16;
    aBlock[0] = 0;
    if (!__nwlog_fault(v441, v1049, aBlock)) {
      goto LABEL_1295;
    }
    if (v1049[0] == 17)
    {
      int v442 = __nwlog_obj();
      os_log_type_t v443 = v1049[0];
      if (!os_log_type_enabled(v442, (os_log_type_t)v1049[0])) {
        goto LABEL_1295;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      BOOL v444 = "%{public}s called with null handle->http1_stream";
      goto LABEL_1294;
    }
    if (!aBlock[0])
    {
      int v442 = __nwlog_obj();
      os_log_type_t v443 = v1049[0];
      if (!os_log_type_enabled(v442, (os_log_type_t)v1049[0])) {
        goto LABEL_1295;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      BOOL v444 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_1294;
    }
    v514 = (char *)__nw_create_backtrace_string();
    int v442 = __nwlog_obj();
    os_log_type_t v443 = v1049[0];
    BOOL v712 = os_log_type_enabled(v442, (os_log_type_t)v1049[0]);
    if (!v514)
    {
      if (!v712) {
        goto LABEL_1295;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      BOOL v444 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_1294;
    }
    if (v712)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v514;
      int v516 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_877;
    }
    goto LABEL_878;
  }
  uint64_t v8 = (uint64_t *)(v10 + 248);
LABEL_10:
  uint64_t v11 = *v8;
  if (!*v8) {
    goto LABEL_1297;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
    int v503 = (char *)_os_log_send_and_compose_impl();
    v1049[0] = 16;
    aBlock[0] = 0;
    if (!__nwlog_fault(v503, v1049, aBlock)) {
      goto LABEL_1328;
    }
    if (v1049[0] == 17)
    {
      int v504 = __nwlog_obj();
      os_log_type_t v505 = v1049[0];
      if (!os_log_type_enabled(v504, (os_log_type_t)v1049[0])) {
        goto LABEL_1328;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
      v506 = "%{public}s called with null input_protocol";
    }
    else if (aBlock[0])
    {
      v533 = (char *)__nw_create_backtrace_string();
      int v504 = __nwlog_obj();
      os_log_type_t v505 = v1049[0];
      BOOL v534 = os_log_type_enabled(v504, (os_log_type_t)v1049[0]);
      if (v533)
      {
        if (v534)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v533;
          _os_log_impl(&dword_1830D4000, v504, v505, "%{public}s called with null input_protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v533);
        goto LABEL_1328;
      }
      if (!v534) {
        goto LABEL_1328;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
      v506 = "%{public}s called with null input_protocol, no backtrace";
    }
    else
    {
      int v504 = __nwlog_obj();
      os_log_type_t v505 = v1049[0];
      if (!os_log_type_enabled(v504, (os_log_type_t)v1049[0])) {
        goto LABEL_1328;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
      v506 = "%{public}s called with null input_protocol, backtrace limit exceeded";
    }
    goto LABEL_1326;
  }
  if (v7 != 2)
  {
    if (v7 != 3) {
      goto LABEL_1314;
    }
    uint64_t v12 = *((void *)handle + 2);
    if (v12)
    {
      char v13 = (uint64_t *)(v12 + 488);
      goto LABEL_17;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
    os_log_type_t v550 = (char *)_os_log_send_and_compose_impl();
    v1049[0] = 16;
    aBlock[0] = 0;
    if (__nwlog_fault(v550, v1049, aBlock))
    {
      if (v1049[0] == 17)
      {
        v551 = __nwlog_obj();
        os_log_type_t v552 = v1049[0];
        if (!os_log_type_enabled(v551, (os_log_type_t)v1049[0])) {
          goto LABEL_1312;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        uint64_t v553 = "%{public}s called with null handle->http1_connection";
        goto LABEL_1311;
      }
      if (!aBlock[0])
      {
        v551 = __nwlog_obj();
        os_log_type_t v552 = v1049[0];
        if (!os_log_type_enabled(v551, (os_log_type_t)v1049[0])) {
          goto LABEL_1312;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        uint64_t v553 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_1311;
      }
      v713 = (char *)__nw_create_backtrace_string();
      v551 = __nwlog_obj();
      os_log_type_t v552 = v1049[0];
      BOOL v714 = os_log_type_enabled(v551, (os_log_type_t)v1049[0]);
      if (v713)
      {
        if (v714)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v713;
          _os_log_impl(&dword_1830D4000, v551, v552, "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v713);
        goto LABEL_1312;
      }
      if (v714)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        uint64_t v553 = "%{public}s called with null handle->http1_connection, no backtrace";
LABEL_1311:
        _os_log_impl(&dword_1830D4000, v551, v552, v553, buf, 0xCu);
      }
    }
LABEL_1312:
    if (v550) {
      free(v550);
    }
    goto LABEL_1314;
  }
  char v13 = (uint64_t *)(handle + 8);
LABEL_17:
  uint64_t v14 = *v13;
  if (*v13)
  {
    p_cache = NWConcrete_nw_resolution_report.cache;
    if ((*(unsigned char *)(v14 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        int v517 = __nwlog_obj();
        if (os_log_type_enabled(v517, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v518 = *(void *)(v14 + 256);
          int v519 = *(_DWORD *)(*(void *)(v14 + 248) + 372);
          if (v518) {
            LODWORD(v518) = *(_DWORD *)(v518 + 860);
          }
          int v520 = *(_DWORD *)(v14 + 424);
          *(_DWORD *)buf = 136448514;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v14 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v1035 = (uint64_t)" ";
          *(_WORD *)v1036 = 1024;
          *(_DWORD *)&v1036[2] = v519;
          *(_WORD *)&v1036[6] = 1024;
          *(_DWORD *)&v1036[8] = v518;
          *(_WORD *)&v1036[12] = 1024;
          *(_DWORD *)&v1036[14] = v520;
          *(_WORD *)&v1036[18] = 2048;
          *(void *)&v1036[20] = a2;
          *(_WORD *)&v1036[28] = 1024;
          *(_DWORD *)&v1036[30] = v520;
          *(_WORD *)&v1036[34] = 2048;
          *(void *)&v1036[36] = v14;
          __int16 v1037 = 1024;
          int v1038 = a3;
          _os_log_impl(&dword_1830D4000, v517, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called with input_protocol %p, stream %u (%p), destroy: %u", buf, 0x52u);
        }
      }
    }
    nw_http_transaction_metadata_mark_end(*(void **)(v14 + 352));
    if (a2->output_handler == a1) {
      nw_protocol_set_output_handler((uint64_t)a2, 0);
    }
    a2->output_handler_context = 0;
    nw_protocol_set_input_handler(v14, 0);
    uint64_t v16 = *(void *)(v14 + 256);
    uint64_t v1026 = v11;
    if (v16)
    {
      uint64_t v17 = *(void *)(v16 + 488);
      if (!v17 || (*(_WORD *)(v17 + 428) & 0x2000) != 0)
      {
        if ((*(_WORD *)(v16 + 872) & 4) == 0)
        {
          int v22 = 0;
          if ((*(unsigned char *)(v16 + 158) & 1) != 0 || !gLogDatapath) {
            goto LABEL_84;
          }
          BOOL v23 = __nwlog_obj();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v24 = *(void *)(v16 + 488);
            int v25 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
            int v26 = *(_DWORD *)(v16 + 860);
            if (v24) {
              LODWORD(v24) = *(_DWORD *)(v24 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v16 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v1035 = (uint64_t)" ";
            *(_WORD *)v1036 = 1024;
            *(_DWORD *)&v1036[2] = v25;
            *(_WORD *)&v1036[6] = 1024;
            *(_DWORD *)&v1036[8] = v26;
            *(_WORD *)&v1036[12] = 1024;
            *(_DWORD *)&v1036[14] = v24;
            int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because the message is not complete";
            goto LABEL_1289;
          }
          goto LABEL_1539;
        }
        if ((*(_WORD *)(v16 + 872) & 0x20) == 0)
        {
          int v22 = 0;
          if ((*(unsigned char *)(v16 + 158) & 1) != 0 || !gLogDatapath) {
            goto LABEL_84;
          }
          BOOL v23 = __nwlog_obj();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v32 = *(void *)(v16 + 488);
            int v33 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
            int v34 = *(_DWORD *)(v16 + 860);
            if (v32) {
              LODWORD(v32) = *(_DWORD *)(v32 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v16 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v1035 = (uint64_t)" ";
            *(_WORD *)v1036 = 1024;
            *(_DWORD *)&v1036[2] = v33;
            *(_WORD *)&v1036[6] = 1024;
            *(_DWORD *)&v1036[8] = v34;
            *(_WORD *)&v1036[12] = 1024;
            *(_DWORD *)&v1036[14] = v32;
            int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because the outbound message is not complete";
            goto LABEL_1289;
          }
          goto LABEL_1539;
        }
        if ((*(_WORD *)(v16 + 872) & 8) == 0)
        {
          int v22 = 0;
          if ((*(unsigned char *)(v16 + 158) & 1) != 0 || !gLogDatapath) {
            goto LABEL_84;
          }
          BOOL v23 = __nwlog_obj();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v39 = *(void *)(v16 + 488);
            int v40 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
            int v41 = *(_DWORD *)(v16 + 860);
            if (v39) {
              LODWORD(v39) = *(_DWORD *)(v39 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v16 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v1035 = (uint64_t)" ";
            *(_WORD *)v1036 = 1024;
            *(_DWORD *)&v1036[2] = v40;
            *(_WORD *)&v1036[6] = 1024;
            *(_DWORD *)&v1036[8] = v41;
            *(_WORD *)&v1036[12] = 1024;
            *(_DWORD *)&v1036[14] = v39;
            int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because keep alive is false";
            goto LABEL_1289;
          }
          goto LABEL_1539;
        }
      }
      else if ((*(unsigned char *)(v16 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          os_log_type_t v18 = __nwlog_obj();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v19 = *(void *)(v16 + 488);
            int v20 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
            int v21 = *(_DWORD *)(v16 + 860);
            if (v19) {
              LODWORD(v19) = *(_DWORD *)(v19 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v16 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v1035 = (uint64_t)" ";
            *(_WORD *)v1036 = 1024;
            *(_DWORD *)&v1036[2] = v20;
            *(_WORD *)&v1036[6] = 1024;
            *(_DWORD *)&v1036[8] = v21;
            *(_WORD *)&v1036[12] = 1024;
            *(_DWORD *)&v1036[14] = v19;
            _os_log_impl(&dword_1830D4000, v18, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection may be reusable because the current stream didn't use it", buf, 0x32u);
          }
        }
      }
      if ((*(unsigned char *)(*(void *)(v16 + 480) + 376) & 8) != 0)
      {
        int v22 = 0;
        if ((*(unsigned char *)(v16 + 158) & 1) != 0 || !gLogDatapath) {
          goto LABEL_84;
        }
        BOOL v23 = __nwlog_obj();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v46 = *(void *)(v16 + 488);
          int v47 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
          int v48 = *(_DWORD *)(v16 + 860);
          if (v46) {
            LODWORD(v46) = *(_DWORD *)(v46 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v16 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v1035 = (uint64_t)" ";
          *(_WORD *)v1036 = 1024;
          *(_DWORD *)&v1036[2] = v47;
          *(_WORD *)&v1036[6] = 1024;
          *(_DWORD *)&v1036[8] = v48;
          *(_WORD *)&v1036[12] = 1024;
          *(_DWORD *)&v1036[14] = v46;
          int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because pool is closed for new connections";
          goto LABEL_1289;
        }
      }
      else
      {
        __int16 v42 = *(_WORD *)(v16 + 872);
        if ((v42 & 0x200) != 0)
        {
          int v22 = 0;
          if ((*(unsigned char *)(v16 + 158) & 1) != 0 || !gLogDatapath) {
            goto LABEL_84;
          }
          BOOL v23 = __nwlog_obj();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v779 = *(void *)(v16 + 488);
            int v780 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
            int v781 = *(_DWORD *)(v16 + 860);
            if (v779) {
              LODWORD(v779) = *(_DWORD *)(v779 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v16 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v1035 = (uint64_t)" ";
            *(_WORD *)v1036 = 1024;
            *(_DWORD *)&v1036[2] = v780;
            *(_WORD *)&v1036[6] = 1024;
            *(_DWORD *)&v1036[8] = v781;
            *(_WORD *)&v1036[12] = 1024;
            *(_DWORD *)&v1036[14] = v779;
            int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because it was upgraded";
            goto LABEL_1289;
          }
        }
        else
        {
          if ((v42 & 0x40) == 0)
          {
            int v22 = 0;
            if ((*(unsigned char *)(v16 + 158) & 1) == 0 && gLogDatapath)
            {
              BOOL v23 = __nwlog_obj();
              if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v43 = *(void *)(v16 + 488);
                int v44 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                int v45 = *(_DWORD *)(v16 + 860);
                if (v43) {
                  LODWORD(v43) = *(_DWORD *)(v43 + 424);
                }
                *(_DWORD *)buf = 136447490;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v16 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v1035 = (uint64_t)" ";
                *(_WORD *)v1036 = 1024;
                *(_DWORD *)&v1036[2] = v44;
                *(_WORD *)&v1036[6] = 1024;
                *(_DWORD *)&v1036[8] = v45;
                *(_WORD *)&v1036[12] = 1024;
                *(_DWORD *)&v1036[14] = v43;
                int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because it was never connected";
LABEL_1289:
                _os_log_impl(&dword_1830D4000, v23, OS_LOG_TYPE_DEBUG, v27, buf, 0x32u);
                int v22 = 0;
                goto LABEL_84;
              }
              goto LABEL_1539;
            }
LABEL_84:
            if (*(void *)(v14 + 248))
            {
              uint64_t v49 = *(void *)(v14 + 256);
              if (v49)
              {
                if (*(void *)(v49 + 488) == v14)
                {
                  if ((*(unsigned char *)(v14 + 158) & 1) == 0)
                  {
                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                    networkd_settings_init();
                    uint64_t v56 = gLogObj;
                    if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
                    {
                      uint64_t v57 = *(void *)(v14 + 256);
                      int v58 = *(_DWORD *)(*(void *)(v14 + 248) + 372);
                      if (v57) {
                        LODWORD(v57) = *(_DWORD *)(v57 + 860);
                      }
                      int v59 = *(_DWORD *)(v14 + 424);
                      *(_DWORD *)buf = 136448002;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v14 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      uint64_t v1035 = (uint64_t)" ";
                      *(_WORD *)v1036 = 1024;
                      *(_DWORD *)&v1036[2] = v58;
                      *(_WORD *)&v1036[6] = 1024;
                      *(_DWORD *)&v1036[8] = v57;
                      *(_WORD *)&v1036[12] = 1024;
                      *(_DWORD *)&v1036[14] = v59;
                      *(_WORD *)&v1036[18] = 2048;
                      *(void *)&v1036[20] = v14;
                      *(_WORD *)&v1036[28] = 2048;
                      *(void *)&v1036[30] = v49;
                      _os_log_impl(&dword_1830D4000, v56, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) finished with connection %p", buf, 0x46u);
                    }
                  }
                  if (gLogDatapath)
                  {
                    v719 = __nwlog_obj();
                    if (os_log_type_enabled(v719, OS_LOG_TYPE_DEBUG))
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_protocol_finalize_temp_frame_array";
                      _os_log_impl(&dword_1830D4000, v719, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
                    }
                  }
                  *(void *)buf = MEMORY[0x1E4F143A8];
                  *(void *)&buf[8] = 0x40000000;
                  *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
                  uint64_t v1035 = (uint64_t)&__block_descriptor_tmp_58_40119;
                  *(void *)v1036 = v49 + 632;
                  v1036[8] = 0;
                  uint64_t v60 = *(void *)(v49 + 632);
                  do
                  {
                    if (!v60) {
                      break;
                    }
                    uint64_t v61 = *(void *)(v60 + 32);
                    char v62 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
                    uint64_t v60 = v61;
                  }
                  while ((v62 & 1) != 0);
                  *(void *)(v14 + 256) = 0;
                  *(void *)(v49 + 488) = 0;
                  nw_protocol_set_output_handler(v14, 0);
                  nw_protocol_set_input_handler(v49, 0);
                  if (v22)
                  {
LABEL_142:
                    if ((*(unsigned char *)(v16 + 158) & 1) == 0)
                    {
                      if (gLogDatapath)
                      {
                        v572 = __nwlog_obj();
                        if (os_log_type_enabled(v572, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v573 = *(void *)(v16 + 488);
                          int v574 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                          int v575 = *(_DWORD *)(v16 + 860);
                          if (v573) {
                            LODWORD(v573) = *(_DWORD *)(v573 + 424);
                          }
                          *(_DWORD *)buf = 136447746;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v16 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v1035 = (uint64_t)" ";
                          *(_WORD *)v1036 = 1024;
                          *(_DWORD *)&v1036[2] = v574;
                          *(_WORD *)&v1036[6] = 1024;
                          *(_DWORD *)&v1036[8] = v575;
                          *(_WORD *)&v1036[12] = 1024;
                          *(_DWORD *)&v1036[14] = v573;
                          *(_WORD *)&v1036[18] = 2048;
                          *(void *)&v1036[20] = v16;
                          _os_log_impl(&dword_1830D4000, v572, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for connection (%p)", buf, 0x3Cu);
                          uint64_t v11 = v1026;
                          p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                        }
                      }
                    }
                    if (((*(unsigned __int16 *)(v16 + 872) | (*(unsigned __int8 *)(v16 + 874) << 16)) & 0x80000) == 0)
                    {
                      uint64_t v87 = (_WORD *)(v16 + 872);
                      int v89 = (uint64_t *)(v11 + 208);
                      uint64_t v88 = *(void *)(v11 + 208);
                      *(void *)(v16 + 592) = v88;
                      if (v88) {
                        int v90 = (void *)(v88 + 600);
                      }
                      else {
                        int v90 = (void *)(v11 + 216);
                      }
                      void *v90 = v16 + 592;
                      uint64_t *v89 = v16;
                      *(void *)(v16 + 600) = v89;
                      uint64_t v91 = *(unsigned int *)(v11 + 340) + 1;
                      uint64_t v92 = v91 << 31 >> 31;
                      *(_DWORD *)(v11 + 340) = v91;
                      if (v92 == v91 && (v92 & 0x8000000000000000) == 0) {
                        goto LABEL_229;
                      }
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      uint64_t v93 = *(unsigned int *)(v11 + 340);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->idle_connections_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v1035 = 1;
                      *(_WORD *)v1036 = 2048;
                      *(void *)&v1036[2] = v93;
                      int v94 = (char *)_os_log_send_and_compose_impl();
                      v1049[0] = 16;
                      aBlock[0] = 0;
                      if (__nwlog_fault(v94, v1049, aBlock))
                      {
                        if (v1049[0] == 17)
                        {
                          char v95 = __nwlog_obj();
                          os_log_type_t v96 = v1049[0];
                          if (os_log_type_enabled(v95, (os_log_type_t)v1049[0]))
                          {
                            uint64_t v97 = *(unsigned int *)(v11 + 340);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->idle_connections_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v97;
                            int v98 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_225:
                            _os_log_impl(&dword_1830D4000, v95, v96, v98, buf, 0x2Au);
                          }
                        }
                        else if (aBlock[0])
                        {
                          int v105 = (char *)__nw_create_backtrace_string();
                          char v95 = __nwlog_obj();
                          os_log_type_t v96 = v1049[0];
                          BOOL v106 = os_log_type_enabled(v95, (os_log_type_t)v1049[0]);
                          if (v105)
                          {
                            if (v106)
                            {
                              uint64_t v107 = *(unsigned int *)(v1026 + 340);
                              *(_DWORD *)buf = 136447234;
                              *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = "http1->idle_connections_count";
                              *(_WORD *)&buf[22] = 2048;
                              uint64_t v1035 = 1;
                              *(_WORD *)v1036 = 2048;
                              *(void *)&v1036[2] = v107;
                              *(_WORD *)&v1036[10] = 2082;
                              *(void *)&v1036[12] = v105;
                              _os_log_impl(&dword_1830D4000, v95, v96, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                            }
                            free(v105);
                            uint64_t v11 = v1026;
                            goto LABEL_226;
                          }
                          uint64_t v11 = v1026;
                          if (v106)
                          {
                            uint64_t v137 = *(unsigned int *)(v1026 + 340);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->idle_connections_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v137;
                            int v98 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                            goto LABEL_225;
                          }
                        }
                        else
                        {
                          char v95 = __nwlog_obj();
                          os_log_type_t v96 = v1049[0];
                          if (os_log_type_enabled(v95, (os_log_type_t)v1049[0]))
                          {
                            uint64_t v117 = *(unsigned int *)(v11 + 340);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->idle_connections_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v117;
                            int v98 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                            goto LABEL_225;
                          }
                        }
                      }
LABEL_226:
                      if (v94) {
                        free(v94);
                      }
                      *(_DWORD *)(v11 + 340) = -1;
                      p_cache = NWConcrete_nw_resolution_report.cache;
LABEL_229:
                      int v138 = (*(unsigned __int16 *)(v16 + 872) | (*(unsigned __int8 *)(v16 + 874) << 16)) & 0xF7FFFA | 0x80000;
                      *v87 &= 0xFFFAu;
                      *(unsigned char *)(v16 + 874) = BYTE2(v138);
                      __int16 v139 = *(void **)(v16 + 800);
                      if (v139)
                      {
                        free(v139);
                        *(void *)(v16 + 800) = 0;
                      }
                      *(_DWORD *)(v16 + 840) = 0;
                      uint64_t v140 = *(void **)(v16 + 808);
                      if (v140)
                      {
                        free(v140);
                        *(void *)(v16 + 808) = 0;
                      }
                      *(_DWORD *)(v16 + 844) = 0;
                      int v141 = *(void **)(v16 + 816);
                      if (v141)
                      {
                        free(v141);
                        *(void *)(v16 + 816) = 0;
                      }
                      *(_DWORD *)(v16 + 848) = 0;
                      os_log_type_t v142 = *(void **)(v16 + 824);
                      if (v142)
                      {
                        free(v142);
                        *(void *)(v16 + 824) = 0;
                      }
                      *(_DWORD *)(v16 + 852) = 0;
                      __int16 v143 = *(void **)(v16 + 832);
                      if (v143)
                      {
                        free(v143);
                        *(void *)(v16 + 832) = 0;
                      }
                      *(_DWORD *)(v16 + 856) = 0;
                      int v144 = (unsigned __int16)*v87;
                      int v145 = v144 | (*(unsigned __int8 *)(v16 + 874) << 16);
                      if ((v144 & 0x10) != 0)
                      {
                        if (*(_DWORD *)(v16 + 224) == 21) {
                          *(_DWORD *)(v16 + 224) = 0;
                        }
                        unsigned int v154 = v145 & 0xFFFFFFEF;
                        *uint64_t v87 = v154;
                        *(unsigned char *)(v16 + 874) = BYTE2(v154);
                        if (*(unsigned char *)(v16 + 158)) {
                          goto LABEL_250;
                        }
                        if (!*((unsigned char *)p_cache + 3665)) {
                          goto LABEL_250;
                        }
                        uint64_t v149 = __nwlog_obj();
                        if (!os_log_type_enabled(v149, OS_LOG_TYPE_DEBUG)) {
                          goto LABEL_250;
                        }
                        uint64_t v768 = *(void *)(v16 + 488);
                        int v769 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                        int v770 = *(_DWORD *)(v16 + 860);
                        if (v768) {
                          LODWORD(v768) = *(_DWORD *)(v768 + 424);
                        }
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_reset_for_new_message";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v16 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v1035 = (uint64_t)" ";
                        *(_WORD *)v1036 = 1024;
                        *(_DWORD *)&v1036[2] = v769;
                        *(_WORD *)&v1036[6] = 1024;
                        *(_DWORD *)&v1036[8] = v770;
                        *(_WORD *)&v1036[12] = 1024;
                        *(_DWORD *)&v1036[14] = v768;
                        os_log_type_t v153 = "%{public}s %{public}s%s<i%u:c%u:s%u> Unpausing parser, input for next stream available";
                      }
                      else
                      {
                        *(_OWORD *)(v16 + 200) = 0u;
                        char v146 = *(unsigned char *)(v16 + 272);
                        uint64_t v147 = *(void *)(v16 + 248);
                        __int16 v148 = *(_WORD *)(v16 + 278);
                        *(_OWORD *)(v16 + 248) = 0u;
                        *(_OWORD *)(v16 + 264) = 0u;
                        *(_OWORD *)(v16 + 216) = 0u;
                        *(_OWORD *)(v16 + 232) = 0u;
                        *(void *)(v16 + 280) = 0;
                        *(unsigned char *)(v16 + 272) = v146;
                        *(void *)(v16 + 248) = v147;
                        *(void *)(v16 + 256) = 238;
                        *(_WORD *)(v16 + 278) = v148;
                        if (*(unsigned char *)(v16 + 158)) {
                          goto LABEL_250;
                        }
                        if (!*((unsigned char *)p_cache + 3665)) {
                          goto LABEL_250;
                        }
                        uint64_t v149 = __nwlog_obj();
                        if (!os_log_type_enabled(v149, OS_LOG_TYPE_DEBUG)) {
                          goto LABEL_250;
                        }
                        uint64_t v150 = *(void *)(v16 + 488);
                        int v151 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                        int v152 = *(_DWORD *)(v16 + 860);
                        if (v150) {
                          LODWORD(v150) = *(_DWORD *)(v150 + 424);
                        }
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_reset_for_new_message";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v16 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v1035 = (uint64_t)" ";
                        *(_WORD *)v1036 = 1024;
                        *(_DWORD *)&v1036[2] = v151;
                        *(_WORD *)&v1036[6] = 1024;
                        *(_DWORD *)&v1036[8] = v152;
                        *(_WORD *)&v1036[12] = 1024;
                        *(_DWORD *)&v1036[14] = v150;
                        os_log_type_t v153 = "%{public}s %{public}s%s<i%u:c%u:s%u> Resetting parser, no current available input for next stream";
                      }
                      _os_log_impl(&dword_1830D4000, v149, OS_LOG_TYPE_DEBUG, v153, buf, 0x32u);
                      uint64_t v11 = v1026;
                      p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
LABEL_250:
                      uint64_t v155 = *(void *)(v16 + 784);
                      if (v155) {
                        nw_queue_cancel_source(v155);
                      }
                      uint64_t v156 = *(void **)(v16 + 192);
                      *(void *)v1049 = MEMORY[0x1E4F143A8];
                      *(void *)&v1049[8] = 0x40000000;
                      *(void *)&v1049[16] = ___ZL28nw_http1_add_idle_connectionP17nw_protocol_http1P19nw_http1_connection_block_invoke;
                      v1050 = (uint64_t (*)(uint64_t, uint64_t))&__block_descriptor_tmp_91_41331;
                      v1051 = (void (*)(uint64_t))v16;
                      v1052 = v156;
                      uint64_t v1053 = v11;
                      BOOL source = nw_queue_context_create_source(0, 2, 3, 0, v1049, 0);
                      *(void *)(v16 + 784) = source;
                      dispatch_time_t v158 = dispatch_time(0x8000000000000000, 1000000 * (void)v156);
                      nw_queue_set_timer_values(source, v158, 0xFFFFFFFFFFFFFFFFLL, 1000 * (void)v156);
                      nw_queue_activate_source(*(void *)(v16 + 784));
                      if ((*(unsigned char *)(v16 + 158) & 1) == 0)
                      {
                        if (*((unsigned char *)p_cache + 3665))
                        {
                          v720 = __nwlog_obj();
                          if (os_log_type_enabled(v720, OS_LOG_TYPE_DEBUG))
                          {
                            uint64_t v721 = *(void *)(v16 + 488);
                            int v722 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                            int v723 = *(_DWORD *)(v16 + 860);
                            if (v721) {
                              LODWORD(v721) = *(_DWORD *)(v721 + 424);
                            }
                            uint64_t v11 = v1026;
                            int v724 = *(_DWORD *)(v1026 + 340);
                            *(_DWORD *)buf = 136448258;
                            *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v16 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            uint64_t v1035 = (uint64_t)" ";
                            *(_WORD *)v1036 = 1024;
                            *(_DWORD *)&v1036[2] = v722;
                            *(_WORD *)&v1036[6] = 1024;
                            *(_DWORD *)&v1036[8] = v723;
                            *(_WORD *)&v1036[12] = 1024;
                            *(_DWORD *)&v1036[14] = v721;
                            *(_WORD *)&v1036[18] = 2048;
                            *(void *)&v1036[20] = v16;
                            *(_WORD *)&v1036[28] = 2048;
                            *(void *)&v1036[30] = v156;
                            *(_WORD *)&v1036[38] = 1024;
                            *(_DWORD *)&v1036[40] = v724;
                            _os_log_impl(&dword_1830D4000, v720, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added idle connection %p and started destroy timer for %lldms, now have %u idle connections", buf, 0x4Cu);
                            p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                          }
                        }
                      }
LABEL_254:
                      int v111 = 1;
                      goto LABEL_317;
                    }
                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                    networkd_settings_init();
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = v16;
                    uint64_t v99 = (char *)_os_log_send_and_compose_impl();
                    v1049[0] = 16;
                    aBlock[0] = 0;
                    if (__nwlog_fault(v99, v1049, aBlock))
                    {
                      if (v1049[0] == 17)
                      {
                        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                        networkd_settings_init();
                        uint32_t v100 = gLogObj;
                        os_log_type_t v101 = v1049[0];
                        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0])) {
                          goto LABEL_181;
                        }
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v16;
                        int v102 = "%{public}s connection %p already in idle list, cannot add twice";
LABEL_180:
                        _os_log_impl(&dword_1830D4000, v100, v101, v102, buf, 0x16u);
                        goto LABEL_181;
                      }
                      if (!aBlock[0])
                      {
                        uint32_t v100 = __nwlog_obj();
                        os_log_type_t v101 = v1049[0];
                        if (!os_log_type_enabled(v100, (os_log_type_t)v1049[0])) {
                          goto LABEL_181;
                        }
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v16;
                        int v102 = "%{public}s connection %p already in idle list, cannot add twice, backtrace limit exceeded";
                        goto LABEL_180;
                      }
                      char v103 = (char *)__nw_create_backtrace_string();
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      uint32_t v100 = gLogObj;
                      os_log_type_t v101 = v1049[0];
                      BOOL v104 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]);
                      if (!v103)
                      {
                        uint64_t v11 = v1026;
                        if (!v104) {
                          goto LABEL_181;
                        }
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v16;
                        int v102 = "%{public}s connection %p already in idle list, cannot add twice, no backtrace";
                        goto LABEL_180;
                      }
                      if (v104)
                      {
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v16;
                        *(_WORD *)&buf[22] = 2082;
                        uint64_t v1035 = (uint64_t)v103;
                        _os_log_impl(&dword_1830D4000, v100, v101, "%{public}s connection %p already in idle list, cannot add twice, dumping backtrace:%{public}s", buf, 0x20u);
                      }
                      free(v103);
                      uint64_t v11 = v1026;
                    }
LABEL_181:
                    p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                    if (v99)
                    {
                      free(v99);
                      int v111 = 1;
                      goto LABEL_317;
                    }
                    goto LABEL_254;
                  }
LABEL_101:
                  nw_http_connection_metadata_closed(*(void **)(v16 + 768));
                  if ((*(unsigned char *)(v16 + 158) & 1) == 0)
                  {
                    if (!gLogDatapath) {
                      goto LABEL_103;
                    }
                    BOOL v583 = __nwlog_obj();
                    if (os_log_type_enabled(v583, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v584 = *(void *)(v16 + 488);
                      int v585 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                      int v586 = *(_DWORD *)(v16 + 860);
                      if (v584) {
                        LODWORD(v584) = *(_DWORD *)(v584 + 424);
                      }
                      *(_DWORD *)buf = 136447490;
                      *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v16 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      uint64_t v1035 = (uint64_t)" ";
                      *(_WORD *)v1036 = 1024;
                      *(_DWORD *)&v1036[2] = v585;
                      *(_WORD *)&v1036[6] = 1024;
                      *(_DWORD *)&v1036[8] = v586;
                      *(_WORD *)&v1036[12] = 1024;
                      *(_DWORD *)&v1036[14] = v584;
                      _os_log_impl(&dword_1830D4000, v583, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing unprocessed_input_frames", buf, 0x32u);
                      uint64_t v11 = v1026;
                      p_cache = NWConcrete_nw_resolution_report.cache;
                    }
                  }
                  if (gLogDatapath)
                  {
                    os_log_type_t v587 = __nwlog_obj();
                    if (os_log_type_enabled(v587, OS_LOG_TYPE_DEBUG))
                    {
                      *(_DWORD *)v1049 = 136446210;
                      *(void *)&v1049[4] = "nw_protocol_finalize_temp_frame_array";
                      _os_log_impl(&dword_1830D4000, v587, OS_LOG_TYPE_DEBUG, "%{public}s called", v1049, 0xCu);
                    }
                  }
LABEL_103:
                  *(void *)buf = MEMORY[0x1E4F143A8];
                  *(void *)&buf[8] = 0x40000000;
                  *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
                  uint64_t v1035 = (uint64_t)&__block_descriptor_tmp_58_40119;
                  *(void *)v1036 = v16 + 616;
                  v1036[8] = 0;
                  uint64_t v63 = *(void *)(v16 + 616);
                  do
                  {
                    if (!v63) {
                      break;
                    }
                    uint64_t v64 = *(void *)(v63 + 32);
                    char v65 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
                    uint64_t v63 = v64;
                  }
                  while ((v65 & 1) != 0);
                  if ((*(unsigned char *)(v16 + 158) & 1) == 0)
                  {
                    if (!gLogDatapath) {
                      goto LABEL_108;
                    }
                    v588 = __nwlog_obj();
                    if (os_log_type_enabled(v588, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v589 = *(void *)(v16 + 488);
                      int v590 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                      int v591 = *(_DWORD *)(v16 + 860);
                      if (v589) {
                        LODWORD(v589) = *(_DWORD *)(v589 + 424);
                      }
                      *(_DWORD *)buf = 136447490;
                      *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v16 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      uint64_t v1035 = (uint64_t)" ";
                      *(_WORD *)v1036 = 1024;
                      *(_DWORD *)&v1036[2] = v590;
                      *(_WORD *)&v1036[6] = 1024;
                      *(_DWORD *)&v1036[8] = v591;
                      *(_WORD *)&v1036[12] = 1024;
                      *(_DWORD *)&v1036[14] = v589;
                      _os_log_impl(&dword_1830D4000, v588, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing processed_input_frames", buf, 0x32u);
                      uint64_t v11 = v1026;
                      p_cache = NWConcrete_nw_resolution_report.cache;
                    }
                  }
                  if (gLogDatapath)
                  {
                    int v592 = __nwlog_obj();
                    if (os_log_type_enabled(v592, OS_LOG_TYPE_DEBUG))
                    {
                      *(_DWORD *)v1049 = 136446210;
                      *(void *)&v1049[4] = "nw_protocol_finalize_temp_frame_array";
                      _os_log_impl(&dword_1830D4000, v592, OS_LOG_TYPE_DEBUG, "%{public}s called", v1049, 0xCu);
                    }
                  }
LABEL_108:
                  *(void *)buf = MEMORY[0x1E4F143A8];
                  *(void *)&buf[8] = 0x40000000;
                  *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
                  uint64_t v1035 = (uint64_t)&__block_descriptor_tmp_58_40119;
                  *(void *)v1036 = v16 + 632;
                  v1036[8] = 0;
                  uint64_t v66 = *(void *)(v16 + 632);
                  do
                  {
                    if (!v66) {
                      break;
                    }
                    uint64_t v67 = *(void *)(v66 + 32);
                    char v68 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
                    uint64_t v66 = v67;
                  }
                  while ((v68 & 1) != 0);
                  if ((*(unsigned char *)(v16 + 158) & 1) == 0)
                  {
                    if (gLogDatapath)
                    {
                      BOOL v563 = __nwlog_obj();
                      if (os_log_type_enabled(v563, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v564 = *(void *)(v16 + 488);
                        int v565 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                        int v566 = *(_DWORD *)(v16 + 860);
                        if (v564) {
                          LODWORD(v564) = *(_DWORD *)(v564 + 424);
                        }
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v16 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v1035 = (uint64_t)" ";
                        *(_WORD *)v1036 = 1024;
                        *(_DWORD *)&v1036[2] = v565;
                        *(_WORD *)&v1036[6] = 1024;
                        *(_DWORD *)&v1036[8] = v566;
                        *(_WORD *)&v1036[12] = 1024;
                        *(_DWORD *)&v1036[14] = v564;
                        _os_log_impl(&dword_1830D4000, v563, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removing pending_output_frames", buf, 0x32u);
                        uint64_t v11 = v1026;
                        p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                      }
                    }
                  }
                  *(void *)v1049 = MEMORY[0x1E4F143A8];
                  *(void *)&v1049[8] = 0x40000000;
                  *(void *)&v1049[16] = ___ZL29nw_http1_tear_down_connectionP17nw_protocol_http1P19nw_http1_connection_block_invoke;
                  v1050 = (uint64_t (*)(uint64_t, uint64_t))&__block_descriptor_tmp_57_40171;
                  v1051 = (void (*)(uint64_t))v16;
                  uint64_t v69 = *(void *)(v16 + 648);
                  do
                  {
                    if (!v69) {
                      break;
                    }
                    uint64_t v70 = *(void *)(v69 + 32);
                    char v71 = (*(uint64_t (**)(unsigned char *))&v1049[16])(v1049);
                    uint64_t v69 = v70;
                  }
                  while ((v71 & 1) != 0);
                  nw_frame_cache_remove_all((uint64_t *)(v16 + 696));
                  if ((*(unsigned char *)(v16 + 158) & 1) == 0)
                  {
                    if (*((unsigned char *)p_cache + 3665))
                    {
                      int v567 = __nwlog_obj();
                      if (os_log_type_enabled(v567, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v568 = *(void *)(v16 + 488);
                        int v569 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                        int v570 = *(_DWORD *)(v16 + 860);
                        if (v568) {
                          LODWORD(v568) = *(_DWORD *)(v568 + 424);
                        }
                        uint64_t v571 = *(void *)(v16 + 32);
                        *(_DWORD *)buf = 136447746;
                        *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v16 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v1035 = (uint64_t)" ";
                        *(_WORD *)v1036 = 1024;
                        *(_DWORD *)&v1036[2] = v569;
                        *(_WORD *)&v1036[6] = 1024;
                        *(_DWORD *)&v1036[8] = v570;
                        *(_WORD *)&v1036[12] = 1024;
                        *(_DWORD *)&v1036[14] = v568;
                        *(_WORD *)&v1036[18] = 2048;
                        *(void *)&v1036[20] = v571;
                        _os_log_impl(&dword_1830D4000, v567, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> calling remove input handler on output handler %p", buf, 0x3Cu);
                        uint64_t v11 = v1026;
                        p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                      }
                    }
                  }
                  int v72 = *(_DWORD *)(v11 + 336);
                  *(_DWORD *)(v11 + 336) = v72 - 1;
                  if (v72)
                  {
LABEL_202:
                    if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                    {
                      if (*((unsigned char *)p_cache + 3665))
                      {
                        os_log_type_t v576 = __nwlog_obj();
                        if (os_log_type_enabled(v576, OS_LOG_TYPE_DEBUG))
                        {
                          int v577 = *(_DWORD *)(v11 + 372);
                          int v578 = *(_DWORD *)(v11 + 336);
                          *(_DWORD *)buf = 136447490;
                          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v11 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v1035 = (uint64_t)" ";
                          *(_WORD *)v1036 = 1024;
                          *(_DWORD *)&v1036[2] = v577;
                          *(_WORD *)&v1036[6] = 2048;
                          *(void *)&v1036[8] = v16;
                          *(_WORD *)&v1036[16] = 1024;
                          *(_DWORD *)&v1036[18] = v578;
                          _os_log_impl(&dword_1830D4000, v576, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> removed connection %p, now have %u connections", buf, 0x36u);
                        }
                      }
                    }
                    if ((*(_WORD *)(v16 + 872) & 0x800) == 0)
                    {
LABEL_265:
                      nw_protocol_remove_input_handler(*(void *)(v16 + 32), v16);
                      nw_protocol_set_output_handler(v16, 0);
                      if ((*(unsigned char *)(v16 + 158) & 1) == 0)
                      {
                        if (*((unsigned char *)p_cache + 3665))
                        {
                          uint64_t v579 = __nwlog_obj();
                          if (os_log_type_enabled(v579, OS_LOG_TYPE_DEBUG))
                          {
                            uint64_t v580 = *(void *)(v16 + 488);
                            int v581 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                            int v582 = *(_DWORD *)(v16 + 860);
                            if (v580) {
                              LODWORD(v580) = *(_DWORD *)(v580 + 424);
                            }
                            *(_DWORD *)buf = 136447746;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_destroy";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v16 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            uint64_t v1035 = (uint64_t)" ";
                            *(_WORD *)v1036 = 1024;
                            *(_DWORD *)&v1036[2] = v581;
                            *(_WORD *)&v1036[6] = 1024;
                            *(_DWORD *)&v1036[8] = v582;
                            *(_WORD *)&v1036[12] = 1024;
                            *(_DWORD *)&v1036[14] = v580;
                            *(_WORD *)&v1036[18] = 2048;
                            *(void *)&v1036[20] = v16;
                            _os_log_impl(&dword_1830D4000, v579, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> destroying %p", buf, 0x3Cu);
                            uint64_t v11 = v1026;
                            p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                          }
                        }
                      }
                      char v160 = *(unsigned char *)(v16 + 760);
                      if (v160)
                      {
                        char v161 = *(void **)(v16 + 752);
                        if (v161)
                        {
                          os_release(v161);
                          char v160 = *(unsigned char *)(v16 + 760);
                        }
                      }
                      *(void *)(v16 + 752) = 0;
                      *(unsigned char *)(v16 + 760) = v160 | 1;
                      char v162 = *(unsigned char *)(v16 + 744);
                      if (v162)
                      {
                        char v163 = *(void **)(v16 + 736);
                        if (v163)
                        {
                          os_release(v163);
                          char v162 = *(unsigned char *)(v16 + 744);
                        }
                      }
                      *(void *)(v16 + 736) = 0;
                      *(unsigned char *)(v16 + 744) = v162 | 1;
                      uint64_t v164 = *(void *)(v16 + 488);
                      if (!v164 || *(void *)(v164 + 256) != v16)
                      {
LABEL_287:
                        *(void *)(v16 + 488) = 0;
                        if ((*(unsigned char *)(v16 + 158) & 1) == 0)
                        {
                          if (!*((unsigned char *)p_cache + 3665)) {
                            goto LABEL_289;
                          }
                          v593 = __nwlog_obj();
                          if (os_log_type_enabled(v593, OS_LOG_TYPE_DEBUG))
                          {
                            uint64_t v594 = *(void *)(v16 + 488);
                            int v595 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                            int v596 = *(_DWORD *)(v16 + 860);
                            if (v594) {
                              LODWORD(v594) = *(_DWORD *)(v594 + 424);
                            }
                            *(_DWORD *)buf = 136447490;
                            *(void *)&uint8_t buf[4] = "nw_http1_connection_destroy";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v16 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            uint64_t v1035 = (uint64_t)" ";
                            *(_WORD *)v1036 = 1024;
                            *(_DWORD *)&v1036[2] = v595;
                            *(_WORD *)&v1036[6] = 1024;
                            *(_DWORD *)&v1036[8] = v596;
                            *(_WORD *)&v1036[12] = 1024;
                            *(_DWORD *)&v1036[14] = v594;
                            _os_log_impl(&dword_1830D4000, v593, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing frame arrays", buf, 0x32u);
                            uint64_t v11 = v1026;
                            p_cache = NWConcrete_nw_resolution_report.cache;
                          }
                        }
                        if (*((unsigned char *)p_cache + 3665))
                        {
                          os_log_type_t v597 = __nwlog_obj();
                          if (os_log_type_enabled(v597, OS_LOG_TYPE_DEBUG))
                          {
                            *(_DWORD *)aBlock = 136446210;
                            *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                            _os_log_impl(&dword_1830D4000, v597, OS_LOG_TYPE_DEBUG, "%{public}s called", aBlock, 0xCu);
                          }
                        }
LABEL_289:
                        *(void *)buf = MEMORY[0x1E4F143A8];
                        *(void *)&buf[8] = 0x40000000;
                        *(void *)&buf[16] = ___ZL39nw_protocol_finalize_master_frame_arrayP16nw_frame_array_sb_block_invoke_40196;
                        uint64_t v1035 = (uint64_t)&__block_descriptor_tmp_60_40197;
                        v1036[0] = 0;
                        uint64_t v172 = *(void *)(v16 + 680);
                        do
                        {
                          if (!v172) {
                            break;
                          }
                          uint64_t v173 = *(void *)(v172 + 16);
                          char v174 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
                          uint64_t v172 = v173;
                        }
                        while ((v174 & 1) != 0);
                        if (!*(void *)(v16 + 680))
                        {
                          if (!*((unsigned char *)p_cache + 3665)) {
                            goto LABEL_294;
                          }
                          goto LABEL_1363;
                        }
                        __nwlog_obj();
                        *(_DWORD *)aBlock = 136446210;
                        *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                        int v555 = (char *)_os_log_send_and_compose_impl();
                        type[0] = 16;
                        LOBYTE(v1029[0]) = 0;
                        if (__nwlog_fault(v555, type, v1029))
                        {
                          if (type[0] == 17)
                          {
                            v556 = __nwlog_obj();
                            os_log_type_t v557 = type[0];
                            if (!os_log_type_enabled(v556, (os_log_type_t)type[0])) {
                              goto LABEL_1360;
                            }
                            *(_DWORD *)aBlock = 136446210;
                            *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                            v558 = "%{public}s frame array is not empty after finalize";
LABEL_1359:
                            _os_log_impl(&dword_1830D4000, v556, v557, v558, aBlock, 0xCu);
                            goto LABEL_1360;
                          }
                          if (!LOBYTE(v1029[0]))
                          {
                            v556 = __nwlog_obj();
                            os_log_type_t v557 = type[0];
                            if (!os_log_type_enabled(v556, (os_log_type_t)type[0])) {
                              goto LABEL_1360;
                            }
                            *(_DWORD *)aBlock = 136446210;
                            *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                            v558 = "%{public}s frame array is not empty after finalize, backtrace limit exceeded";
                            goto LABEL_1359;
                          }
                          v728 = (char *)__nw_create_backtrace_string();
                          v556 = __nwlog_obj();
                          os_log_type_t v557 = type[0];
                          BOOL v729 = os_log_type_enabled(v556, (os_log_type_t)type[0]);
                          if (!v728)
                          {
                            if (!v729) {
                              goto LABEL_1360;
                            }
                            *(_DWORD *)aBlock = 136446210;
                            *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                            v558 = "%{public}s frame array is not empty after finalize, no backtrace";
                            goto LABEL_1359;
                          }
                          if (v729)
                          {
                            *(_DWORD *)aBlock = 136446466;
                            *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                            *(_WORD *)&aBlock[12] = 2082;
                            *(void *)&aBlock[14] = v728;
                            _os_log_impl(&dword_1830D4000, v556, v557, "%{public}s frame array is not empty after finalize, dumping backtrace:%{public}s", aBlock, 0x16u);
                          }
                          free(v728);
                        }
LABEL_1360:
                        if (v555) {
                          free(v555);
                        }
                        uint64_t v11 = v1026;
                        p_cache = NWConcrete_nw_resolution_report.cache;
                        if (!gLogDatapath)
                        {
LABEL_294:
                          *(void *)buf = MEMORY[0x1E4F143A8];
                          *(void *)&buf[8] = 0x40000000;
                          *(void *)&buf[16] = ___ZL39nw_protocol_finalize_master_frame_arrayP16nw_frame_array_sb_block_invoke_40196;
                          uint64_t v1035 = (uint64_t)&__block_descriptor_tmp_60_40197;
                          v1036[0] = 0;
                          uint64_t v175 = *(void *)(v16 + 664);
                          do
                          {
                            if (!v175) {
                              break;
                            }
                            uint64_t v176 = *(void *)(v175 + 16);
                            char v177 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
                            uint64_t v175 = v176;
                          }
                          while ((v177 & 1) != 0);
                          if (!*(void *)(v16 + 664))
                          {
LABEL_298:
                            nw_frame_cache_destroy((uint64_t *)(v16 + 696));
                            uint64_t v178 = *(void **)(v16 + 528);
                            if (v178)
                            {
                              uint64_t v179 = *(void **)(v16 + 544);
                              if (v179) {
                                nw_association_unregister(v178, v179);
                              }
                            }
                            int v180 = *(void **)(v16 + 800);
                            if (v180)
                            {
                              free(v180);
                              *(void *)(v16 + 800) = 0;
                            }
                            *(_DWORD *)(v16 + 840) = 0;
                            int v181 = *(void **)(v16 + 808);
                            if (v181)
                            {
                              free(v181);
                              *(void *)(v16 + 808) = 0;
                            }
                            *(_DWORD *)(v16 + 844) = 0;
                            int v182 = *(void **)(v16 + 816);
                            if (v182)
                            {
                              free(v182);
                              *(void *)(v16 + 816) = 0;
                            }
                            *(_DWORD *)(v16 + 848) = 0;
                            uint64_t v183 = *(void **)(v16 + 824);
                            if (v183)
                            {
                              free(v183);
                              *(void *)(v16 + 824) = 0;
                            }
                            *(_DWORD *)(v16 + 852) = 0;
                            int v184 = *(void **)(v16 + 832);
                            if (v184)
                            {
                              free(v184);
                              *(void *)(v16 + 832) = 0;
                            }
                            *(_DWORD *)(v16 + 856) = 0;
                            (*(void (**)(void, void))(*(void *)(v16 + 608) + 16))(*(void *)(v16 + 608), 0);
                            int v185 = *(const void **)(v16 + 608);
                            if (v185)
                            {
                              _Block_release(v185);
                              *(void *)(v16 + 608) = 0;
                            }
                            nw_http1_connection::~nw_http1_connection((nw_http1_connection *)v16);
                            free(v186);
                            if (!*(_DWORD *)(v11 + 336) && !*(_DWORD *)(v11 + 344)) {
                              nw_protocol_http1_destroy(v11, v11);
                            }
                            goto LABEL_316;
                          }
                          __nwlog_obj();
                          *(_DWORD *)aBlock = 136446210;
                          *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                          uint64_t v559 = (char *)_os_log_send_and_compose_impl();
                          type[0] = 16;
                          LOBYTE(v1029[0]) = 0;
                          if (__nwlog_fault(v559, type, v1029))
                          {
                            if (type[0] == 17)
                            {
                              int v560 = __nwlog_obj();
                              os_log_type_t v561 = type[0];
                              if (os_log_type_enabled(v560, (os_log_type_t)type[0]))
                              {
                                *(_DWORD *)aBlock = 136446210;
                                *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                                v562 = "%{public}s frame array is not empty after finalize";
LABEL_1367:
                                _os_log_impl(&dword_1830D4000, v560, v561, v562, aBlock, 0xCu);
                              }
                            }
                            else if (LOBYTE(v1029[0]))
                            {
                              v730 = (char *)__nw_create_backtrace_string();
                              int v560 = __nwlog_obj();
                              os_log_type_t v561 = type[0];
                              BOOL v731 = os_log_type_enabled(v560, (os_log_type_t)type[0]);
                              if (v730)
                              {
                                if (v731)
                                {
                                  *(_DWORD *)aBlock = 136446466;
                                  *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                                  *(_WORD *)&aBlock[12] = 2082;
                                  *(void *)&aBlock[14] = v730;
                                  _os_log_impl(&dword_1830D4000, v560, v561, "%{public}s frame array is not empty after finalize, dumping backtrace:%{public}s", aBlock, 0x16u);
                                }
                                free(v730);
                                goto LABEL_1368;
                              }
                              if (v731)
                              {
                                *(_DWORD *)aBlock = 136446210;
                                *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                                v562 = "%{public}s frame array is not empty after finalize, no backtrace";
                                goto LABEL_1367;
                              }
                            }
                            else
                            {
                              int v560 = __nwlog_obj();
                              os_log_type_t v561 = type[0];
                              if (os_log_type_enabled(v560, (os_log_type_t)type[0]))
                              {
                                *(_DWORD *)aBlock = 136446210;
                                *(void *)&aBlock[4] = "nw_protocol_finalize_master_frame_array";
                                v562 = "%{public}s frame array is not empty after finalize, backtrace limit exceeded";
                                goto LABEL_1367;
                              }
                            }
                          }
LABEL_1368:
                          if (v559) {
                            free(v559);
                          }
                          uint64_t v11 = v1026;
                          p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                          goto LABEL_298;
                        }
LABEL_1363:
                        v806 = __nwlog_obj();
                        if (os_log_type_enabled(v806, OS_LOG_TYPE_DEBUG))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_protocol_finalize_master_frame_array";
                          _os_log_impl(&dword_1830D4000, v806, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
                        }
                        goto LABEL_294;
                      }
                      if (*(void *)(v164 + 248))
                      {
                        if ((*(unsigned char *)(v164 + 158) & 1) == 0)
                        {
                          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                          networkd_settings_init();
                          char v165 = gLogObj;
                          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
                          {
                            uint64_t v166 = *(void *)(v164 + 256);
                            int v167 = *(_DWORD *)(*(void *)(v164 + 248) + 372);
                            if (v166) {
                              LODWORD(v166) = *(_DWORD *)(v166 + 860);
                            }
                            int v168 = *(_DWORD *)(v164 + 424);
                            *(_DWORD *)buf = 136448002;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v164 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            uint64_t v1035 = (uint64_t)" ";
                            *(_WORD *)v1036 = 1024;
                            *(_DWORD *)&v1036[2] = v167;
                            *(_WORD *)&v1036[6] = 1024;
                            *(_DWORD *)&v1036[8] = v166;
                            *(_WORD *)&v1036[12] = 1024;
                            *(_DWORD *)&v1036[14] = v168;
                            *(_WORD *)&v1036[18] = 2048;
                            *(void *)&v1036[20] = v164;
                            *(_WORD *)&v1036[28] = 2048;
                            *(void *)&v1036[30] = v16;
                            _os_log_impl(&dword_1830D4000, v165, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) finished with connection %p", buf, 0x46u);
                          }
                        }
                        if (gLogDatapath)
                        {
                          v775 = __nwlog_obj();
                          if (os_log_type_enabled(v775, OS_LOG_TYPE_DEBUG))
                          {
                            *(_DWORD *)buf = 136446210;
                            *(void *)&uint8_t buf[4] = "nw_protocol_finalize_temp_frame_array";
                            _os_log_impl(&dword_1830D4000, v775, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
                          }
                        }
                        *(void *)buf = MEMORY[0x1E4F143A8];
                        *(void *)&buf[8] = 0x40000000;
                        *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
                        uint64_t v1035 = (uint64_t)&__block_descriptor_tmp_58_40119;
                        *(void *)v1036 = v16 + 632;
                        v1036[8] = 0;
                        uint64_t v169 = *(void *)(v16 + 632);
                        do
                        {
                          if (!v169) {
                            break;
                          }
                          uint64_t v170 = *(void *)(v169 + 32);
                          char v171 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
                          uint64_t v169 = v170;
                        }
                        while ((v171 & 1) != 0);
                        *(void *)(v164 + 256) = 0;
                        *(void *)(v16 + 488) = 0;
                        nw_protocol_set_output_handler(v164, 0);
                        nw_protocol_set_input_handler(v16, 0);
LABEL_286:
                        p_cache = NWConcrete_nw_resolution_report.cache;
                        goto LABEL_287;
                      }
                      __nwlog_obj();
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                      v771 = (char *)_os_log_send_and_compose_impl();
                      aBlock[0] = 16;
                      type[0] = 0;
                      if (__nwlog_fault(v771, aBlock, type))
                      {
                        if (aBlock[0] == 17)
                        {
                          v772 = __nwlog_obj();
                          os_log_type_t v773 = aBlock[0];
                          if (os_log_type_enabled(v772, (os_log_type_t)aBlock[0]))
                          {
                            *(_DWORD *)buf = 136446210;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                            v774 = "%{public}s called with null http1_stream->protocol_http1";
LABEL_1462:
                            _os_log_impl(&dword_1830D4000, v772, v773, v774, buf, 0xCu);
                          }
                        }
                        else if (type[0])
                        {
                          v807 = (char *)__nw_create_backtrace_string();
                          v772 = __nwlog_obj();
                          os_log_type_t v773 = aBlock[0];
                          BOOL v808 = os_log_type_enabled(v772, (os_log_type_t)aBlock[0]);
                          if (v807)
                          {
                            if (v808)
                            {
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = v807;
                              _os_log_impl(&dword_1830D4000, v772, v773, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                            }
                            free(v807);
                            goto LABEL_1463;
                          }
                          if (v808)
                          {
                            *(_DWORD *)buf = 136446210;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                            v774 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
                            goto LABEL_1462;
                          }
                        }
                        else
                        {
                          v772 = __nwlog_obj();
                          os_log_type_t v773 = aBlock[0];
                          if (os_log_type_enabled(v772, (os_log_type_t)aBlock[0]))
                          {
                            *(_DWORD *)buf = 136446210;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                            v774 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                            goto LABEL_1462;
                          }
                        }
                      }
LABEL_1463:
                      if (v771) {
                        free(v771);
                      }
                      uint64_t v11 = v1026;
                      goto LABEL_286;
                    }
                    int v119 = *(_DWORD *)(v11 + 368);
                    *(_DWORD *)(v11 + 368) = v119 - 1;
                    if (v119)
                    {
LABEL_263:
                      if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                      {
                        if (*((unsigned char *)p_cache + 3665))
                        {
                          v725 = __nwlog_obj();
                          if (os_log_type_enabled(v725, OS_LOG_TYPE_DEBUG))
                          {
                            int v726 = *(_DWORD *)(v11 + 372);
                            int v727 = *(_DWORD *)(v11 + 368) + *(_DWORD *)(v11 + 364);
                            *(_DWORD *)buf = 136447490;
                            *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v11 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            uint64_t v1035 = (uint64_t)" ";
                            *(_WORD *)v1036 = 1024;
                            *(_DWORD *)&v1036[2] = v726;
                            *(_WORD *)&v1036[6] = 1024;
                            *(_DWORD *)&v1036[8] = v727;
                            *(_WORD *)&v1036[12] = 2048;
                            *(void *)&v1036[14] = v16;
                            _os_log_impl(&dword_1830D4000, v725, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> decreased connection pool width to %u after removing non-reusable connection %p", buf, 0x36u);
                          }
                        }
                      }
                      goto LABEL_265;
                    }
                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                    networkd_settings_init();
                    uint64_t v120 = *(unsigned int *)(v11 + 368);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->nonresuable_connections";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = 1;
                    *(_WORD *)v1036 = 2048;
                    *(void *)&v1036[2] = v120;
                    int v121 = (char *)_os_log_send_and_compose_impl();
                    aBlock[0] = 16;
                    type[0] = 0;
                    if (__nwlog_fault(v121, aBlock, type))
                    {
                      if (aBlock[0] == 17)
                      {
                        int v122 = __nwlog_obj();
                        os_log_type_t v123 = aBlock[0];
                        if (os_log_type_enabled(v122, (os_log_type_t)aBlock[0]))
                        {
                          uint64_t v124 = *(unsigned int *)(v1026 + 368);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->nonresuable_connections";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v124;
                          uint64_t v125 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_259:
                          _os_log_impl(&dword_1830D4000, v122, v123, v125, buf, 0x2Au);
                        }
                      }
                      else if (type[0])
                      {
                        uint64_t v126 = (char *)__nw_create_backtrace_string();
                        int v122 = __nwlog_obj();
                        os_log_type_t v123 = aBlock[0];
                        BOOL v127 = os_log_type_enabled(v122, (os_log_type_t)aBlock[0]);
                        if (v126)
                        {
                          if (v127)
                          {
                            uint64_t v128 = *(unsigned int *)(v1026 + 368);
                            *(_DWORD *)buf = 136447234;
                            *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->nonresuable_connections";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v128;
                            *(_WORD *)&v1036[10] = 2082;
                            *(void *)&v1036[12] = v126;
                            _os_log_impl(&dword_1830D4000, v122, v123, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                          }
                          free(v126);
                          goto LABEL_260;
                        }
                        if (v127)
                        {
                          uint64_t v159 = *(unsigned int *)(v1026 + 368);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->nonresuable_connections";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v159;
                          uint64_t v125 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
                          goto LABEL_259;
                        }
                      }
                      else
                      {
                        int v122 = __nwlog_obj();
                        os_log_type_t v123 = aBlock[0];
                        if (os_log_type_enabled(v122, (os_log_type_t)aBlock[0]))
                        {
                          uint64_t v136 = *(unsigned int *)(v1026 + 368);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->nonresuable_connections";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v136;
                          uint64_t v125 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
                          goto LABEL_259;
                        }
                      }
                    }
LABEL_260:
                    if (v121) {
                      free(v121);
                    }
                    uint64_t v11 = v1026;
                    *(_DWORD *)(v1026 + 368) = 0;
                    p_cache = NWConcrete_nw_resolution_report.cache;
                    goto LABEL_263;
                  }
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  uint64_t v73 = *(unsigned int *)(v11 + 336);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->connections_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v1035 = 1;
                  *(_WORD *)v1036 = 2048;
                  *(void *)&v1036[2] = v73;
                  __int16 v74 = (char *)_os_log_send_and_compose_impl();
                  aBlock[0] = 16;
                  type[0] = 0;
                  if (__nwlog_fault(v74, aBlock, type))
                  {
                    if (aBlock[0] == 17)
                    {
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      os_log_type_t v75 = gLogObj;
                      os_log_type_t v76 = aBlock[0];
                      if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]))
                      {
                        uint64_t v77 = *(unsigned int *)(v1026 + 336);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->connections_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v1035 = 1;
                        *(_WORD *)v1036 = 2048;
                        *(void *)&v1036[2] = v77;
                        __int16 v78 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_198:
                        _os_log_impl(&dword_1830D4000, v75, v76, v78, buf, 0x2Au);
                      }
                    }
                    else if (type[0])
                    {
                      int v83 = (char *)__nw_create_backtrace_string();
                      os_log_type_t v75 = __nwlog_obj();
                      os_log_type_t v76 = aBlock[0];
                      BOOL v84 = os_log_type_enabled(v75, (os_log_type_t)aBlock[0]);
                      if (v83)
                      {
                        if (v84)
                        {
                          uint64_t v85 = *(unsigned int *)(v1026 + 336);
                          *(_DWORD *)buf = 136447234;
                          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->connections_count";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v85;
                          *(_WORD *)&v1036[10] = 2082;
                          *(void *)&v1036[12] = v83;
                          _os_log_impl(&dword_1830D4000, v75, v76, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                        }
                        free(v83);
                        goto LABEL_199;
                      }
                      if (v84)
                      {
                        uint64_t v118 = *(unsigned int *)(v1026 + 336);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->connections_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v1035 = 1;
                        *(_WORD *)v1036 = 2048;
                        *(void *)&v1036[2] = v118;
                        __int16 v78 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
                        goto LABEL_198;
                      }
                    }
                    else
                    {
                      os_log_type_t v75 = __nwlog_obj();
                      os_log_type_t v76 = aBlock[0];
                      if (os_log_type_enabled(v75, (os_log_type_t)aBlock[0]))
                      {
                        uint64_t v110 = *(unsigned int *)(v1026 + 336);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->connections_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v1035 = 1;
                        *(_WORD *)v1036 = 2048;
                        *(void *)&v1036[2] = v110;
                        __int16 v78 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
                        goto LABEL_198;
                      }
                    }
                  }
LABEL_199:
                  if (v74) {
                    free(v74);
                  }
                  uint64_t v11 = v1026;
                  *(_DWORD *)(v1026 + 336) = 0;
                  p_cache = NWConcrete_nw_resolution_report.cache;
                  goto LABEL_202;
                }
                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                networkd_settings_init();
                uint64_t v50 = *(void *)(v49 + 488);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v49;
                *(_WORD *)&buf[22] = 2048;
                uint64_t v1035 = v14;
                *(_WORD *)v1036 = 2048;
                *(void *)&v1036[2] = v50;
                char v51 = (char *)_os_log_send_and_compose_impl();
                v1049[0] = 16;
                aBlock[0] = 0;
                if (!__nwlog_fault(v51, v1049, aBlock)) {
                  goto LABEL_138;
                }
                if (v1049[0] == 17)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  os_log_type_t v52 = gLogObj;
                  os_log_type_t v53 = v1049[0];
                  if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]))
                  {
                    uint64_t v54 = *(void *)(v49 + 488);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = v49;
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = v14;
                    *(_WORD *)v1036 = 2048;
                    *(void *)&v1036[2] = v54;
                    BOOL v55 = "%{public}s Connection %p does not already have stream %p, has %p";
LABEL_137:
                    _os_log_impl(&dword_1830D4000, v52, v53, v55, buf, 0x2Au);
                  }
                }
                else if (aBlock[0])
                {
                  uint64_t v79 = (char *)__nw_create_backtrace_string();
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  os_log_type_t v52 = gLogObj;
                  os_log_type_t v53 = v1049[0];
                  BOOL v80 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]);
                  if (v79)
                  {
                    if (v80)
                    {
                      uint64_t v81 = *(void *)(v49 + 488);
                      *(_DWORD *)buf = 136447234;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v49;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v1035 = v14;
                      *(_WORD *)v1036 = 2048;
                      *(void *)&v1036[2] = v81;
                      *(_WORD *)&v1036[10] = 2082;
                      *(void *)&v1036[12] = v79;
                      _os_log_impl(&dword_1830D4000, v52, v53, "%{public}s Connection %p does not already have stream %p, has %p, dumping backtrace:%{public}s", buf, 0x34u);
                    }
                    free(v79);
                    goto LABEL_138;
                  }
                  if (v80)
                  {
                    uint64_t v86 = *(void *)(v49 + 488);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = v49;
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = v14;
                    *(_WORD *)v1036 = 2048;
                    *(void *)&v1036[2] = v86;
                    BOOL v55 = "%{public}s Connection %p does not already have stream %p, has %p, no backtrace";
                    goto LABEL_137;
                  }
                }
                else
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  os_log_type_t v52 = gLogObj;
                  os_log_type_t v53 = v1049[0];
                  if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]))
                  {
                    uint64_t v82 = *(void *)(v49 + 488);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = v49;
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = v14;
                    *(_WORD *)v1036 = 2048;
                    *(void *)&v1036[2] = v82;
                    BOOL v55 = "%{public}s Connection %p does not already have stream %p, has %p, backtrace limit exceeded";
                    goto LABEL_137;
                  }
                }
LABEL_138:
                if (v51) {
                  free(v51);
                }
                uint64_t v11 = v1026;
                goto LABEL_141;
              }
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              v546 = (void *)_os_log_send_and_compose_impl();
              v1049[0] = 16;
              aBlock[0] = 0;
              if (!__nwlog_fault((const char *)v546, v1049, aBlock))
              {
LABEL_1281:
                if (v546) {
                  free(v546);
                }
LABEL_141:
                p_cache = NWConcrete_nw_resolution_report.cache;
                if (v22) {
                  goto LABEL_142;
                }
                goto LABEL_101;
              }
              if (v1049[0] == 17)
              {
                uint64_t v547 = __nwlog_obj();
                os_log_type_t v548 = v1049[0];
                if (!os_log_type_enabled(v547, (os_log_type_t)v1049[0])) {
                  goto LABEL_1281;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                v549 = "%{public}s called with null http1_connection";
                goto LABEL_1280;
              }
              if (!aBlock[0])
              {
                uint64_t v547 = __nwlog_obj();
                os_log_type_t v548 = v1049[0];
                if (!os_log_type_enabled(v547, (os_log_type_t)v1049[0])) {
                  goto LABEL_1281;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                v549 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                goto LABEL_1280;
              }
              BOOL v598 = (char *)__nw_create_backtrace_string();
              uint64_t v547 = __nwlog_obj();
              os_log_type_t v548 = v1049[0];
              BOOL v601 = os_log_type_enabled(v547, (os_log_type_t)v1049[0]);
              if (!v598)
              {
                uint64_t v11 = v1026;
                if (!v601) {
                  goto LABEL_1281;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                v549 = "%{public}s called with null http1_connection, no backtrace";
                goto LABEL_1280;
              }
              if (v601)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v598;
                BOOL v600 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
                goto LABEL_1007;
              }
            }
            else
            {
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              v546 = (void *)_os_log_send_and_compose_impl();
              v1049[0] = 16;
              aBlock[0] = 0;
              if (!__nwlog_fault((const char *)v546, v1049, aBlock)) {
                goto LABEL_1281;
              }
              if (v1049[0] == 17)
              {
                uint64_t v547 = __nwlog_obj();
                os_log_type_t v548 = v1049[0];
                if (!os_log_type_enabled(v547, (os_log_type_t)v1049[0])) {
                  goto LABEL_1281;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                v549 = "%{public}s called with null http1_stream->protocol_http1";
LABEL_1280:
                _os_log_impl(&dword_1830D4000, v547, v548, v549, buf, 0xCu);
                goto LABEL_1281;
              }
              if (!aBlock[0])
              {
                uint64_t v547 = __nwlog_obj();
                os_log_type_t v548 = v1049[0];
                if (!os_log_type_enabled(v547, (os_log_type_t)v1049[0])) {
                  goto LABEL_1281;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                v549 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                goto LABEL_1280;
              }
              BOOL v598 = (char *)__nw_create_backtrace_string();
              uint64_t v547 = __nwlog_obj();
              os_log_type_t v548 = v1049[0];
              BOOL v599 = os_log_type_enabled(v547, (os_log_type_t)v1049[0]);
              if (!v598)
              {
                uint64_t v11 = v1026;
                if (!v599) {
                  goto LABEL_1281;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                v549 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
                goto LABEL_1280;
              }
              if (v599)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v598;
                BOOL v600 = "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s";
LABEL_1007:
                _os_log_impl(&dword_1830D4000, v547, v548, v600, buf, 0x16u);
              }
            }
            free(v598);
            uint64_t v11 = v1026;
            goto LABEL_1281;
          }
          if ((*(_WORD *)(v16 + 872) & 0x100) == 0)
          {
            if (*(_DWORD *)(v16 + 864) == 4)
            {
              if (*(unsigned char *)(v16 + 158) & 1 | (gLogDatapath == 0))
              {
                int v22 = 0;
                goto LABEL_84;
              }
              BOOL v23 = __nwlog_obj();
              if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v915 = *(void *)(v16 + 488);
                int v916 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                int v917 = *(_DWORD *)(v16 + 860);
                if (v915) {
                  LODWORD(v915) = *(_DWORD *)(v915 + 424);
                }
                *(_DWORD *)buf = 136447490;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v16 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v1035 = (uint64_t)" ";
                *(_WORD *)v1036 = 1024;
                *(_DWORD *)&v1036[2] = v916;
                *(_WORD *)&v1036[6] = 1024;
                *(_DWORD *)&v1036[8] = v917;
                *(_WORD *)&v1036[12] = 1024;
                *(_DWORD *)&v1036[14] = v915;
                int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because input has finished from below";
                goto LABEL_1289;
              }
              goto LABEL_1539;
            }
            if (*(unsigned char *)(v16 + 158) & 1 | (gLogDatapath == 0))
            {
              int v22 = 1;
            }
            else
            {
              v918 = __nwlog_obj();
              if (os_log_type_enabled(v918, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v919 = *(void *)(v16 + 488);
                int v920 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                int v921 = *(_DWORD *)(v16 + 860);
                if (v919) {
                  LODWORD(v919) = *(_DWORD *)(v919 + 424);
                }
                *(_DWORD *)buf = 136447490;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v16 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v1035 = (uint64_t)" ";
                *(_WORD *)v1036 = 1024;
                *(_DWORD *)&v1036[2] = v920;
                *(_WORD *)&v1036[6] = 1024;
                *(_DWORD *)&v1036[8] = v921;
                *(_WORD *)&v1036[12] = 1024;
                *(_DWORD *)&v1036[14] = v919;
                _os_log_impl(&dword_1830D4000, v918, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection can be reused", buf, 0x32u);
                int v22 = 1;
              }
              else
              {
                int v22 = 1;
              }
            }
            goto LABEL_84;
          }
          int v22 = 0;
          if ((*(unsigned char *)(v16 + 158) & 1) != 0 || !gLogDatapath) {
            goto LABEL_84;
          }
          BOOL v23 = __nwlog_obj();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v114 = *(void *)(v16 + 488);
            int v115 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
            int v116 = *(_DWORD *)(v16 + 860);
            if (v114) {
              LODWORD(v114) = *(_DWORD *)(v114 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v16 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v1035 = (uint64_t)" ";
            *(_WORD *)v1036 = 1024;
            *(_DWORD *)&v1036[2] = v115;
            *(_WORD *)&v1036[6] = 1024;
            *(_DWORD *)&v1036[8] = v116;
            *(_WORD *)&v1036[12] = 1024;
            *(_DWORD *)&v1036[14] = v114;
            int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because it has been closed";
            goto LABEL_1289;
          }
        }
      }
LABEL_1539:
      int v22 = 0;
      goto LABEL_84;
    }
    if (*(void *)(v14 + 32))
    {
      if ((*(unsigned char *)(v14 + 158) & 1) == 0)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        os_log_type_t v28 = gLogObj;
        if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
        {
          uint64_t v29 = *(void *)(v14 + 256);
          int v30 = *(_DWORD *)(*(void *)(v14 + 248) + 372);
          if (v29) {
            LODWORD(v29) = *(_DWORD *)(v29 + 860);
          }
          int v31 = *(_DWORD *)(v14 + 424);
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v14 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v1035 = (uint64_t)" ";
          *(_WORD *)v1036 = 1024;
          *(_DWORD *)&v1036[2] = v30;
          *(_WORD *)&v1036[6] = 1024;
          *(_DWORD *)&v1036[8] = v29;
          *(_WORD *)&v1036[12] = 1024;
          *(_DWORD *)&v1036[14] = v31;
          _os_log_impl(&dword_1830D4000, v28, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> removing the initial stream without connecting", buf, 0x32u);
        }
      }
      nw_protocol_remove_input_handler(*(void *)(v14 + 32), v14);
      goto LABEL_316;
    }
    if ((*(_WORD *)(v14 + 428) & 0x1000) == 0)
    {
LABEL_316:
      int v111 = 0;
      goto LABEL_317;
    }
    if ((*(unsigned char *)(v11 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        v776 = __nwlog_obj();
        if (os_log_type_enabled(v776, OS_LOG_TYPE_DEBUG))
        {
          int v777 = *(_DWORD *)(v11 + 372);
          int v778 = *(_DWORD *)(v14 + 424);
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v11 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v1035 = (uint64_t)" ";
          *(_WORD *)v1036 = 1024;
          *(_DWORD *)&v1036[2] = v777;
          *(_WORD *)&v1036[6] = 1024;
          *(_DWORD *)&v1036[8] = v778;
          *(_WORD *)&v1036[12] = 2048;
          *(void *)&v1036[14] = v14;
          _os_log_impl(&dword_1830D4000, v776, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream %u (%p)", buf, 0x36u);
        }
      }
    }
    if ((*(_WORD *)(v14 + 428) & 0x1000) == 0)
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v14;
      os_log_type_t v35 = (char *)_os_log_send_and_compose_impl();
      v1049[0] = 16;
      aBlock[0] = 0;
      if (__nwlog_fault(v35, v1049, aBlock))
      {
        if (v1049[0] == 17)
        {
          BOOL v36 = __nwlog_obj();
          os_log_type_t v37 = v1049[0];
          if (os_log_type_enabled(v36, (os_log_type_t)v1049[0]))
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v14;
            BOOL v38 = "%{public}s stream %p not in pending list, cannot remove";
LABEL_620:
            _os_log_impl(&dword_1830D4000, v36, v37, v38, buf, 0x16u);
          }
        }
        else if (aBlock[0])
        {
          id v112 = (char *)__nw_create_backtrace_string();
          BOOL v36 = __nwlog_obj();
          os_log_type_t v37 = v1049[0];
          BOOL v113 = os_log_type_enabled(v36, (os_log_type_t)v1049[0]);
          if (v112)
          {
            if (v113)
            {
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v14;
              *(_WORD *)&buf[22] = 2082;
              uint64_t v1035 = (uint64_t)v112;
              _os_log_impl(&dword_1830D4000, v36, v37, "%{public}s stream %p not in pending list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
            }
            free(v112);
            uint64_t v11 = v1026;
            goto LABEL_621;
          }
          uint64_t v11 = v1026;
          if (v113)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v14;
            BOOL v38 = "%{public}s stream %p not in pending list, cannot remove, no backtrace";
            goto LABEL_620;
          }
        }
        else
        {
          BOOL v36 = __nwlog_obj();
          os_log_type_t v37 = v1049[0];
          if (os_log_type_enabled(v36, (os_log_type_t)v1049[0]))
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v14;
            BOOL v38 = "%{public}s stream %p not in pending list, cannot remove, backtrace limit exceeded";
            goto LABEL_620;
          }
        }
      }
LABEL_621:
      if (v35) {
        free(v35);
      }
      int v111 = 0;
      p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
      goto LABEL_317;
    }
    uint64_t v108 = *(void *)(v14 + 296);
    int v109 = *(void **)(v14 + 304);
    if (v108)
    {
      *(void *)(v108 + 304) = v109;
      int v109 = *(void **)(v14 + 304);
    }
    else
    {
      *(void *)(v11 + 256) = v109;
    }
    *int v109 = v108;
    *(void *)(v14 + 296) = 0;
    *(void *)(v14 + 304) = 0;
    int v129 = *(_DWORD *)(v11 + 348);
    *(_DWORD *)(v11 + 348) = v129 - 1;
    if (v129)
    {
LABEL_740:
      int v111 = 0;
      *(_WORD *)(v14 + 428) &= ~0x1000u;
      if ((*(unsigned char *)(v14 + 158) & 1) == 0 && gLogDatapath)
      {
        os_log_type_t v426 = __nwlog_obj();
        if (os_log_type_enabled(v426, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v427 = *(void *)(v14 + 256);
          int v428 = *(_DWORD *)(*(void *)(v14 + 248) + 372);
          if (v427) {
            LODWORD(v427) = *(_DWORD *)(v427 + 860);
          }
          int v429 = *(_DWORD *)(v14 + 424);
          uint64_t v11 = v1026;
          int v430 = *(_DWORD *)(v1026 + 348);
          *(_DWORD *)buf = 136448258;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v14 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v1035 = (uint64_t)" ";
          *(_WORD *)v1036 = 1024;
          *(_DWORD *)&v1036[2] = v428;
          *(_WORD *)&v1036[6] = 1024;
          *(_DWORD *)&v1036[8] = v427;
          *(_WORD *)&v1036[12] = 1024;
          *(_DWORD *)&v1036[14] = v429;
          *(_WORD *)&v1036[18] = 1024;
          *(_DWORD *)&v1036[20] = v429;
          *(_WORD *)&v1036[24] = 2048;
          *(void *)&v1036[26] = v14;
          *(_WORD *)&v1036[34] = 1024;
          *(_DWORD *)&v1036[36] = v430;
          _os_log_impl(&dword_1830D4000, v426, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed pending stream %u (%p), now have %u pending streams", buf, 0x48u);
          goto LABEL_316;
        }
        int v111 = 0;
        uint64_t v11 = v1026;
      }
LABEL_317:
      if ((*(_WORD *)(v14 + 428) & 0x1000) == 0) {
        goto LABEL_335;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v14;
      int v187 = (char *)_os_log_send_and_compose_impl();
      v1049[0] = 16;
      aBlock[0] = 0;
      if (__nwlog_fault(v187, v1049, aBlock))
      {
        if (v1049[0] == 17)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v188 = gLogObj;
          os_log_type_t v189 = v1049[0];
          if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]))
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v14;
            uint64_t v190 = "%{public}s http1 stream %p still in pending list";
LABEL_331:
            _os_log_impl(&dword_1830D4000, v188, v189, v190, buf, 0x16u);
          }
        }
        else if (aBlock[0])
        {
          int v191 = (char *)__nw_create_backtrace_string();
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v188 = gLogObj;
          os_log_type_t v189 = v1049[0];
          BOOL v192 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]);
          if (v191)
          {
            if (v192)
            {
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v14;
              *(_WORD *)&buf[22] = 2082;
              uint64_t v1035 = (uint64_t)v191;
              _os_log_impl(&dword_1830D4000, v188, v189, "%{public}s http1 stream %p still in pending list, dumping backtrace:%{public}s", buf, 0x20u);
            }
            free(v191);
            uint64_t v11 = v1026;
            goto LABEL_332;
          }
          uint64_t v11 = v1026;
          if (v192)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v14;
            uint64_t v190 = "%{public}s http1 stream %p still in pending list, no backtrace";
            goto LABEL_331;
          }
        }
        else
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v188 = gLogObj;
          os_log_type_t v189 = v1049[0];
          if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]))
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v14;
            uint64_t v190 = "%{public}s http1 stream %p still in pending list, backtrace limit exceeded";
            goto LABEL_331;
          }
        }
      }
LABEL_332:
      if (v187) {
        free(v187);
      }
      p_cache = NWConcrete_nw_resolution_report.cache;
LABEL_335:
      if ((*(unsigned char *)(v11 + 158) & 1) == 0)
      {
        if (*((unsigned char *)p_cache + 3665))
        {
          BOOL v521 = __nwlog_obj();
          if (os_log_type_enabled(v521, OS_LOG_TYPE_DEBUG))
          {
            int v522 = *(_DWORD *)(v11 + 372);
            int v523 = *(_DWORD *)(v14 + 424);
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v11 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v1035 = (uint64_t)" ";
            *(_WORD *)v1036 = 1024;
            *(_DWORD *)&v1036[2] = v522;
            *(_WORD *)&v1036[6] = 1024;
            *(_DWORD *)&v1036[8] = v523;
            *(_WORD *)&v1036[12] = 2048;
            *(void *)&v1036[14] = v14;
            _os_log_impl(&dword_1830D4000, v521, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream %u (%p)", buf, 0x36u);
          }
        }
      }
      uint64_t v193 = *(void *)(v14 + 280);
      int v194 = *(void **)(v14 + 288);
      if (v193)
      {
        *(void *)(v193 + 288) = v194;
        int v194 = *(void **)(v14 + 288);
      }
      else
      {
        *(void *)(v11 + 240) = v194;
      }
      *int v194 = v193;
      *(void *)(v14 + 280) = 0;
      *(void *)(v14 + 288) = 0;
      int v195 = *(_DWORD *)(v11 + 344);
      *(_DWORD *)(v11 + 344) = v195 - 1;
      if (v195)
      {
        if ((*(_WORD *)(v14 + 428) & 8) == 0) {
          goto LABEL_378;
        }
        goto LABEL_360;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v196 = *(unsigned int *)(v11 + 344);
      *(_DWORD *)buf = 136446978;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = "http1->streams_count";
      *(_WORD *)&buf[22] = 2048;
      uint64_t v1035 = 1;
      *(_WORD *)v1036 = 2048;
      *(void *)&v1036[2] = v196;
      int v197 = (char *)_os_log_send_and_compose_impl();
      v1049[0] = 16;
      aBlock[0] = 0;
      if (__nwlog_fault(v197, v1049, aBlock))
      {
        if (v1049[0] == 17)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v198 = gLogObj;
          os_log_type_t v199 = v1049[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0])) {
            goto LABEL_357;
          }
          uint64_t v200 = *(unsigned int *)(v11 + 344);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->streams_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v1035 = 1;
          *(_WORD *)v1036 = 2048;
          *(void *)&v1036[2] = v200;
          int v201 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_356:
          _os_log_impl(&dword_1830D4000, v198, v199, v201, buf, 0x2Au);
          goto LABEL_357;
        }
        if (!aBlock[0])
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v198 = gLogObj;
          os_log_type_t v199 = v1049[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0])) {
            goto LABEL_357;
          }
          uint64_t v205 = *(unsigned int *)(v11 + 344);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->streams_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v1035 = 1;
          *(_WORD *)v1036 = 2048;
          *(void *)&v1036[2] = v205;
          int v201 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
          goto LABEL_356;
        }
        uint64_t v202 = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v198 = gLogObj;
        os_log_type_t v199 = v1049[0];
        BOOL v203 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]);
        if (!v202)
        {
          uint64_t v11 = v1026;
          if (!v203) {
            goto LABEL_357;
          }
          uint64_t v206 = *(unsigned int *)(v1026 + 344);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->streams_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v1035 = 1;
          *(_WORD *)v1036 = 2048;
          *(void *)&v1036[2] = v206;
          int v201 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
          goto LABEL_356;
        }
        if (v203)
        {
          uint64_t v204 = *(unsigned int *)(v1026 + 344);
          *(_DWORD *)buf = 136447234;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->streams_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v1035 = 1;
          *(_WORD *)v1036 = 2048;
          *(void *)&v1036[2] = v204;
          *(_WORD *)&v1036[10] = 2082;
          *(void *)&v1036[12] = v202;
          _os_log_impl(&dword_1830D4000, v198, v199, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
        }
        free(v202);
        uint64_t v11 = v1026;
      }
LABEL_357:
      if (v197) {
        free(v197);
      }
      *(_DWORD *)(v11 + 344) = 0;
      p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
      if ((*(_WORD *)(v14 + 428) & 8) == 0)
      {
LABEL_378:
        if ((*(unsigned char *)(v14 + 158) & 1) == 0)
        {
          if (*((unsigned char *)p_cache + 3665))
          {
            v524 = __nwlog_obj();
            if (os_log_type_enabled(v524, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v525 = *(void *)(v14 + 256);
              int v526 = *(_DWORD *)(*(void *)(v14 + 248) + 372);
              if (v525) {
                LODWORD(v525) = *(_DWORD *)(v525 + 860);
              }
              int v527 = *(_DWORD *)(v14 + 424);
              int v528 = *(_DWORD *)(v11 + 344);
              *(_DWORD *)buf = 136448258;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v14 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v1035 = (uint64_t)" ";
              *(_WORD *)v1036 = 1024;
              *(_DWORD *)&v1036[2] = v526;
              *(_WORD *)&v1036[6] = 1024;
              *(_DWORD *)&v1036[8] = v525;
              *(_WORD *)&v1036[12] = 1024;
              *(_DWORD *)&v1036[14] = v527;
              *(_WORD *)&v1036[18] = 1024;
              *(_DWORD *)&v1036[20] = v527;
              *(_WORD *)&v1036[24] = 2048;
              *(void *)&v1036[26] = v14;
              *(_WORD *)&v1036[34] = 1024;
              *(_DWORD *)&v1036[36] = v528;
              _os_log_impl(&dword_1830D4000, v524, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed stream %u (%p), now have %u streams", buf, 0x48u);
            }
          }
        }
        if (*(nw_protocol **)(v11 + 48) == a2)
        {
          nw_protocol_set_input_handler(v11, 0);
          uint64_t v219 = *(void *)(v11 + 232);
          if (v219) {
            nw_protocol_set_input_handler(v11, *(void *)(v219 + 48));
          }
        }
        if ((*(unsigned char *)(v14 + 158) & 1) == 0)
        {
          if (*((unsigned char *)p_cache + 3665))
          {
            BOOL v529 = __nwlog_obj();
            if (os_log_type_enabled(v529, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v530 = *(void *)(v14 + 256);
              int v531 = *(_DWORD *)(*(void *)(v14 + 248) + 372);
              if (v530) {
                LODWORD(v530) = *(_DWORD *)(v530 + 860);
              }
              int v532 = *(_DWORD *)(v14 + 424);
              *(_DWORD *)buf = 136447746;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_destroy";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v14 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v1035 = (uint64_t)" ";
              *(_WORD *)v1036 = 1024;
              *(_DWORD *)&v1036[2] = v531;
              *(_WORD *)&v1036[6] = 1024;
              *(_DWORD *)&v1036[8] = v530;
              *(_WORD *)&v1036[12] = 1024;
              *(_DWORD *)&v1036[14] = v532;
              *(_WORD *)&v1036[18] = 2048;
              *(void *)&v1036[20] = v14;
              _os_log_impl(&dword_1830D4000, v529, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> destroying %p", buf, 0x3Cu);
            }
          }
        }
        if ((*(_WORD *)(v14 + 428) & 0x4000) != 0) {
          nw_http_transaction_metadata_set_event_handler(*(void **)(v14 + 352), 0);
        }
        char v220 = *(unsigned char *)(v14 + 344);
        if (v220)
        {
          int v221 = *(void **)(v14 + 336);
          if (v221)
          {
            os_release(v221);
            char v220 = *(unsigned char *)(v14 + 344);
          }
        }
        *(void *)(v14 + 336) = 0;
        *(unsigned char *)(v14 + 344) = v220 | 1;
        char v222 = *(unsigned char *)(v14 + 328);
        if (v222)
        {
          unsigned int v223 = *(void **)(v14 + 320);
          if (v223)
          {
            os_release(v223);
            char v222 = *(unsigned char *)(v14 + 328);
          }
        }
        *(void *)(v14 + 320) = 0;
        *(unsigned char *)(v14 + 328) = v222 | 1;
        char v224 = *(unsigned char *)(v14 + 376);
        if (v224)
        {
          os_log_type_t v225 = *(void **)(v14 + 368);
          if (v225)
          {
            os_release(v225);
            char v224 = *(unsigned char *)(v14 + 376);
          }
        }
        *(void *)(v14 + 368) = 0;
        *(unsigned char *)(v14 + 376) = v224 | 1;
        char v226 = *(unsigned char *)(v14 + 392);
        if (v226)
        {
          os_log_type_t v227 = *(void **)(v14 + 384);
          if (v227)
          {
            os_release(v227);
            char v226 = *(unsigned char *)(v14 + 392);
          }
        }
        *(void *)(v14 + 384) = 0;
        *(unsigned char *)(v14 + 392) = v226 | 1;
        uint64_t v228 = *(void *)(v14 + 256);
        if (v228 && *(void *)(v228 + 488) == v14) {
          *(void *)(v228 + 488) = 0;
        }
        *(void *)(v14 + 256) = 0;
        uint64_t v229 = *(void *)(v14 + 48);
        if (v229 && *(void *)(v229 + 56) == v14) {
          *(void *)(v229 + 56) = 0;
        }
        (*(void (**)(void, void))(*(void *)(v14 + 312) + 16))(*(void *)(v14 + 312), 0);
        long long v230 = *(const void **)(v14 + 312);
        if (v230)
        {
          _Block_release(v230);
          *(void *)(v14 + 312) = 0;
        }
        nw_http1_stream::~nw_http1_stream((nw_http1_stream *)v14);
        free(v231);
        if (!v111) {
          goto LABEL_718;
        }
        if ((*(unsigned char *)(v11 + 376) & 1) == 0
          || ((*(unsigned __int16 *)(v16 + 872) | (*(unsigned __int8 *)(v16 + 874) << 16)) & 0x20000) == 0)
        {
          uint64_t v232 = *(void *)(v11 + 248);
          if (v232)
          {
            if ((*(unsigned char *)(v232 + 158) & 1) == 0)
            {
              if (*((unsigned char *)p_cache + 3665))
              {
                v715 = __nwlog_obj();
                if (os_log_type_enabled(v715, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v716 = *(void *)(v232 + 256);
                  int v717 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                  if (v716) {
                    LODWORD(v716) = *(_DWORD *)(v716 + 860);
                  }
                  int v718 = *(_DWORD *)(v232 + 424);
                  *(_DWORD *)buf = 136448002;
                  *(void *)&uint8_t buf[4] = "nw_http1_get_next_pending_stream";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v232 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v1035 = (uint64_t)" ";
                  *(_WORD *)v1036 = 1024;
                  *(_DWORD *)&v1036[2] = v717;
                  *(_WORD *)&v1036[6] = 1024;
                  *(_DWORD *)&v1036[8] = v716;
                  *(_WORD *)&v1036[12] = 1024;
                  *(_DWORD *)&v1036[14] = v718;
                  *(_WORD *)&v1036[18] = 1024;
                  *(_DWORD *)&v1036[20] = v718;
                  *(_WORD *)&v1036[24] = 2048;
                  *(void *)&v1036[26] = v232;
                  _os_log_impl(&dword_1830D4000, v715, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> found stream %u (%p)", buf, 0x42u);
                  uint64_t v11 = v1026;
                  p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                }
              }
            }
            long long v233 = (_OWORD *)(v232 + 64);
            uint64_t v234 = *(void *)(v11 + 208);
            if (v234)
            {
              uint64_t v235 = 0;
              uint64_t v236 = v11 + 74;
              do
              {
                uint64_t v237 = v234;
                uint64_t v234 = *(void *)(v234 + 592);
                if ((*(_WORD *)(v237 + 872) & 0x800) == 0)
                {
                  if ((*(unsigned char *)(v1026 + 158) & 1) != 0 || !gLogDatapath)
                  {
                    uint64_t v235 = v237;
                  }
                  else
                  {
                    uint64_t v1017 = v236;
                    v1021 = v233;
                    int v238 = __nwlog_obj();
                    if (os_log_type_enabled(v238, OS_LOG_TYPE_DEBUG))
                    {
                      int v239 = *(_DWORD *)(v1026 + 372);
                      *(_DWORD *)buf = 136447234;
                      *(void *)&uint8_t buf[4] = "nw_http1_get_next_idle_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v1017;
                      *(_WORD *)&buf[22] = 2080;
                      uint64_t v1035 = (uint64_t)" ";
                      *(_WORD *)v1036 = 1024;
                      *(_DWORD *)&v1036[2] = v239;
                      *(_WORD *)&v1036[6] = 2048;
                      *(void *)&v1036[8] = v237;
                      _os_log_impl(&dword_1830D4000, v238, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> found idle connection connection %p", buf, 0x30u);
                      uint64_t v236 = v1017;
                      uint64_t v235 = v237;
                      long long v233 = v1021;
                    }
                    else
                    {
                      uint64_t v235 = v237;
                      long long v233 = v1021;
                      uint64_t v236 = v1017;
                    }
                  }
                }
              }
              while (v234);
              uint64_t v11 = v1026;
              p_cache = NWConcrete_nw_resolution_report.cache;
              if (v235)
              {
                uint64_t v1018 = v236;
                if ((*(unsigned char *)(v235 + 158) & 1) == 0)
                {
                  if (gLogDatapath)
                  {
                    v744 = v233;
                    v745 = __nwlog_obj();
                    BOOL v746 = os_log_type_enabled(v745, OS_LOG_TYPE_DEBUG);
                    long long v233 = v744;
                    if (v746)
                    {
                      uint64_t v747 = *(void *)(v235 + 488);
                      int v748 = *(_DWORD *)(*(void *)(v235 + 480) + 372);
                      int v749 = *(_DWORD *)(v235 + 860);
                      if (v747) {
                        LODWORD(v747) = *(_DWORD *)(v747 + 424);
                      }
                      *(_DWORD *)buf = 136447746;
                      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v235 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      uint64_t v1035 = (uint64_t)" ";
                      *(_WORD *)v1036 = 1024;
                      *(_DWORD *)&v1036[2] = v748;
                      *(_WORD *)&v1036[6] = 1024;
                      *(_DWORD *)&v1036[8] = v749;
                      *(_WORD *)&v1036[12] = 1024;
                      *(_DWORD *)&v1036[14] = v747;
                      *(_WORD *)&v1036[18] = 2048;
                      *(void *)&v1036[20] = v235;
                      _os_log_impl(&dword_1830D4000, v745, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for connection %p", buf, 0x3Cu);
                      uint64_t v11 = v1026;
                      long long v233 = v744;
                    }
                  }
                }
                v1022 = v233;
                int v240 = (_WORD *)(v235 + 872);
                if (((*(unsigned __int16 *)(v235 + 872) | (*(unsigned __int8 *)(v235 + 874) << 16)) & 0x80000) == 0)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v235;
                  int v241 = (char *)_os_log_send_and_compose_impl();
                  v1049[0] = 16;
                  aBlock[0] = 0;
                  if (!__nwlog_fault(v241, v1049, aBlock)) {
                    goto LABEL_611;
                  }
                  if (v1049[0] == 17)
                  {
                    uint64_t v242 = __nwlog_obj();
                    os_log_type_t v243 = v1049[0];
                    if (!os_log_type_enabled(v242, (os_log_type_t)v1049[0])) {
                      goto LABEL_611;
                    }
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = v235;
                    uint64_t v244 = "%{public}s connection %p not in idle list, cannot remove";
                  }
                  else if (aBlock[0])
                  {
                    uint64_t v325 = (char *)__nw_create_backtrace_string();
                    uint64_t v242 = __nwlog_obj();
                    os_log_type_t v243 = v1049[0];
                    BOOL v326 = os_log_type_enabled(v242, (os_log_type_t)v1049[0]);
                    if (v325)
                    {
                      if (v326)
                      {
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v235;
                        *(_WORD *)&buf[22] = 2082;
                        uint64_t v1035 = (uint64_t)v325;
                        _os_log_impl(&dword_1830D4000, v242, v243, "%{public}s connection %p not in idle list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
                      }
                      free(v325);
                      p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                      goto LABEL_611;
                    }
                    p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                    if (!v326)
                    {
LABEL_611:
                      if (v241) {
                        free(v241);
                      }
                      goto LABEL_647;
                    }
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = v235;
                    uint64_t v244 = "%{public}s connection %p not in idle list, cannot remove, no backtrace";
                  }
                  else
                  {
                    uint64_t v242 = __nwlog_obj();
                    os_log_type_t v243 = v1049[0];
                    if (!os_log_type_enabled(v242, (os_log_type_t)v1049[0])) {
                      goto LABEL_611;
                    }
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = v235;
                    uint64_t v244 = "%{public}s connection %p not in idle list, cannot remove, backtrace limit exceeded";
                  }
                  _os_log_impl(&dword_1830D4000, v242, v243, v244, buf, 0x16u);
                  goto LABEL_611;
                }
                uint64_t v283 = *(void *)(v235 + 592);
                uint64_t v284 = *(void **)(v235 + 600);
                if (v283)
                {
                  *(void *)(v283 + 600) = v284;
                  uint64_t v284 = *(void **)(v235 + 600);
                }
                else
                {
                  *(void *)(v11 + 216) = v284;
                }
                *uint64_t v284 = v283;
                *(void *)(v235 + 592) = 0;
                *(void *)(v235 + 600) = 0;
                int v327 = *(_DWORD *)(v11 + 340);
                *(_DWORD *)(v11 + 340) = v327 - 1;
                if (v327)
                {
LABEL_641:
                  int v375 = (unsigned __int16)*v240;
                  unsigned int v376 = (v375 | (*(unsigned __int8 *)(v235 + 874) << 16)) & 0xFFF7FFFF;
                  *int v240 = v375;
                  *(unsigned char *)(v235 + 874) = BYTE2(v376);
                  if ((*(unsigned char *)(v235 + 158) & 1) == 0)
                  {
                    if (*((unsigned char *)p_cache + 3665))
                    {
                      v790 = __nwlog_obj();
                      if (os_log_type_enabled(v790, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v791 = *(void *)(v235 + 488);
                        int v792 = *(_DWORD *)(*(void *)(v235 + 480) + 372);
                        int v793 = *(_DWORD *)(v235 + 860);
                        if (v791) {
                          LODWORD(v791) = *(_DWORD *)(v791 + 424);
                        }
                        uint64_t v11 = v1026;
                        int v794 = *(_DWORD *)(v1026 + 340);
                        *(_DWORD *)buf = 136448002;
                        *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v235 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v1035 = (uint64_t)" ";
                        *(_WORD *)v1036 = 1024;
                        *(_DWORD *)&v1036[2] = v792;
                        *(_WORD *)&v1036[6] = 1024;
                        *(_DWORD *)&v1036[8] = v793;
                        *(_WORD *)&v1036[12] = 1024;
                        *(_DWORD *)&v1036[14] = v791;
                        *(_WORD *)&v1036[18] = 2048;
                        *(void *)&v1036[20] = v235;
                        *(_WORD *)&v1036[28] = 1024;
                        *(_DWORD *)&v1036[30] = v794;
                        _os_log_impl(&dword_1830D4000, v790, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed idle connection %p, now have %u idle connections", buf, 0x42u);
                      }
                    }
                  }
                  if (*(void *)(v235 + 784))
                  {
                    if ((*(unsigned char *)(v235 + 158) & 1) == 0)
                    {
                      if (*((unsigned char *)p_cache + 3665))
                      {
                        v809 = __nwlog_obj();
                        if (os_log_type_enabled(v809, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v810 = *(void *)(v235 + 488);
                          int v811 = *(_DWORD *)(*(void *)(v235 + 480) + 372);
                          int v812 = *(_DWORD *)(v235 + 860);
                          if (v810) {
                            LODWORD(v810) = *(_DWORD *)(v810 + 424);
                          }
                          *(_DWORD *)buf = 136447746;
                          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v235 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v1035 = (uint64_t)" ";
                          *(_WORD *)v1036 = 1024;
                          *(_DWORD *)&v1036[2] = v811;
                          *(_WORD *)&v1036[6] = 1024;
                          *(_DWORD *)&v1036[8] = v812;
                          *(_WORD *)&v1036[12] = 1024;
                          *(_DWORD *)&v1036[14] = v810;
                          *(_WORD *)&v1036[18] = 2048;
                          *(void *)&v1036[20] = v235;
                          _os_log_impl(&dword_1830D4000, v809, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> deactivating destroy timer for connection %p", buf, 0x3Cu);
                          uint64_t v11 = v1026;
                        }
                      }
                    }
                    nw_queue_cancel_source(*(void *)(v235 + 784));
                    *(void *)(v235 + 784) = 0;
                  }
LABEL_647:
                  if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                  {
                    if (*((unsigned char *)p_cache + 3665))
                    {
                      v750 = __nwlog_obj();
                      if (os_log_type_enabled(v750, OS_LOG_TYPE_DEBUG))
                      {
                        int v751 = *(_DWORD *)(v11 + 372);
                        int v752 = *(_DWORD *)(v232 + 424);
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v1018;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v1035 = (uint64_t)" ";
                        *(_WORD *)v1036 = 1024;
                        *(_DWORD *)&v1036[2] = v751;
                        *(_WORD *)&v1036[6] = 1024;
                        *(_DWORD *)&v1036[8] = v752;
                        *(_WORD *)&v1036[12] = 2048;
                        *(void *)&v1036[14] = v232;
                        _os_log_impl(&dword_1830D4000, v750, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream %u (%p)", buf, 0x36u);
                      }
                    }
                  }
                  if ((*(_WORD *)(v232 + 428) & 0x1000) == 0)
                  {
                    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                    networkd_settings_init();
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = v232;
                    BOOL v377 = (char *)_os_log_send_and_compose_impl();
                    v1049[0] = 16;
                    aBlock[0] = 0;
                    if (!__nwlog_fault(v377, v1049, aBlock)) {
                      goto LABEL_677;
                    }
                    if (v1049[0] == 17)
                    {
                      BOOL v378 = __nwlog_obj();
                      os_log_type_t v379 = v1049[0];
                      if (!os_log_type_enabled(v378, (os_log_type_t)v1049[0])) {
                        goto LABEL_677;
                      }
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v232;
                      int v380 = "%{public}s stream %p not in pending list, cannot remove";
                    }
                    else if (aBlock[0])
                    {
                      char v383 = (char *)__nw_create_backtrace_string();
                      BOOL v378 = __nwlog_obj();
                      os_log_type_t v379 = v1049[0];
                      BOOL v384 = os_log_type_enabled(v378, (os_log_type_t)v1049[0]);
                      if (v383)
                      {
                        if (v384)
                        {
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v232;
                          *(_WORD *)&buf[22] = 2082;
                          uint64_t v1035 = (uint64_t)v383;
                          _os_log_impl(&dword_1830D4000, v378, v379, "%{public}s stream %p not in pending list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
                        }
                        free(v383);
                        goto LABEL_677;
                      }
                      if (!v384)
                      {
LABEL_677:
                        if (v377) {
                          free(v377);
                        }
                        goto LABEL_689;
                      }
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v232;
                      int v380 = "%{public}s stream %p not in pending list, cannot remove, no backtrace";
                    }
                    else
                    {
                      BOOL v378 = __nwlog_obj();
                      os_log_type_t v379 = v1049[0];
                      if (!os_log_type_enabled(v378, (os_log_type_t)v1049[0])) {
                        goto LABEL_677;
                      }
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v232;
                      int v380 = "%{public}s stream %p not in pending list, cannot remove, backtrace limit exceeded";
                    }
                    _os_log_impl(&dword_1830D4000, v378, v379, v380, buf, 0x16u);
                    goto LABEL_677;
                  }
                  uint64_t v381 = *(void *)(v232 + 296);
                  int v382 = *(void **)(v232 + 304);
                  if (v381)
                  {
                    *(void *)(v381 + 304) = v382;
                    int v382 = *(void **)(v232 + 304);
                  }
                  else
                  {
                    *(void *)(v11 + 256) = v382;
                  }
                  *int v382 = v381;
                  *(void *)(v232 + 296) = 0;
                  *(void *)(v232 + 304) = 0;
                  int v385 = *(_DWORD *)(v11 + 348);
                  *(_DWORD *)(v11 + 348) = v385 - 1;
                  if (v385)
                  {
LABEL_687:
                    *(_WORD *)(v232 + 428) &= ~0x1000u;
                    if ((*(unsigned char *)(v232 + 158) & 1) == 0)
                    {
                      if (*((unsigned char *)p_cache + 3665))
                      {
                        v795 = __nwlog_obj();
                        if (os_log_type_enabled(v795, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v796 = *(void *)(v232 + 256);
                          int v797 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                          if (v796) {
                            LODWORD(v796) = *(_DWORD *)(v796 + 860);
                          }
                          int v798 = *(_DWORD *)(v232 + 424);
                          uint64_t v11 = v1026;
                          int v799 = *(_DWORD *)(v1026 + 348);
                          *(_DWORD *)buf = 136448258;
                          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v232 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v1035 = (uint64_t)" ";
                          *(_WORD *)v1036 = 1024;
                          *(_DWORD *)&v1036[2] = v797;
                          *(_WORD *)&v1036[6] = 1024;
                          *(_DWORD *)&v1036[8] = v796;
                          *(_WORD *)&v1036[12] = 1024;
                          *(_DWORD *)&v1036[14] = v798;
                          *(_WORD *)&v1036[18] = 1024;
                          *(_DWORD *)&v1036[20] = v798;
                          *(_WORD *)&v1036[24] = 2048;
                          *(void *)&v1036[26] = v232;
                          *(_WORD *)&v1036[34] = 1024;
                          *(_DWORD *)&v1036[36] = v799;
                          _os_log_impl(&dword_1830D4000, v795, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed pending stream %u (%p), now have %u pending streams", buf, 0x48u);
                        }
                      }
                    }
LABEL_689:
                    if (*(void *)(v232 + 248))
                    {
                      if (!*(void *)(v235 + 488))
                      {
                        *(void *)(v232 + 256) = v235;
                        *(void *)(v235 + 488) = v232;
                        nw_protocol_set_output_handler(v232, *(void *)(v235 + 32));
                        nw_protocol_set_input_handler(v235, *(void *)(v232 + 48));
                        *(_OWORD *)uint64_t v232 = *(_OWORD *)v235;
                        long long v403 = v1022[5];
                        long long v405 = v1022[2];
                        long long v404 = v1022[3];
                        *(_OWORD *)(v235 + 128) = v1022[4];
                        *(_OWORD *)(v235 + 144) = v403;
                        *(_OWORD *)(v235 + 96) = v405;
                        *(_OWORD *)(v235 + 112) = v404;
                        long long v406 = v1022[1];
                        *(_OWORD *)(v235 + 64) = *v1022;
                        *(_OWORD *)(v235 + 80) = v406;
                        nw_http_transaction_metadata_set_connection_metadata(*(void **)(v232 + 352), *(void **)(v235 + 768));
                        *v240 &= 0xFFD7u;
                        *(_DWORD *)(v235 + 864) = 1;
                        if ((*(unsigned char *)(v235 + 158) & 1) == 0)
                        {
                          os_log_type_t v407 = __nwlog_obj();
                          if (os_log_type_enabled(v407, OS_LOG_TYPE_DEBUG))
                          {
                            uint64_t v408 = *(void *)(v235 + 488);
                            int v409 = *(_DWORD *)(*(void *)(v235 + 480) + 372);
                            int v410 = *(_DWORD *)(v235 + 860);
                            if (v408) {
                              LODWORD(v408) = *(_DWORD *)(v408 + 424);
                            }
                            *(_DWORD *)buf = 136447490;
                            *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v235 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            uint64_t v1035 = (uint64_t)" ";
                            *(_WORD *)v1036 = 1024;
                            *(_DWORD *)&v1036[2] = v409;
                            *(_WORD *)&v1036[6] = 1024;
                            *(_DWORD *)&v1036[8] = v410;
                            *(_WORD *)&v1036[12] = 1024;
                            *(_DWORD *)&v1036[14] = v408;
                            _os_log_impl(&dword_1830D4000, v407, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                          }
                        }
                        if ((*(unsigned char *)(v232 + 158) & 1) == 0)
                        {
                          os_log_type_t v411 = __nwlog_obj();
                          if (os_log_type_enabled(v411, OS_LOG_TYPE_INFO))
                          {
                            uint64_t v412 = *(void *)(v232 + 256);
                            int v413 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                            if (v412) {
                              LODWORD(v412) = *(_DWORD *)(v412 + 860);
                            }
                            int v414 = *(_DWORD *)(v232 + 424);
                            *(_DWORD *)buf = 136448002;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v232 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            uint64_t v1035 = (uint64_t)" ";
                            *(_WORD *)v1036 = 1024;
                            *(_DWORD *)&v1036[2] = v413;
                            *(_WORD *)&v1036[6] = 1024;
                            *(_DWORD *)&v1036[8] = v412;
                            *(_WORD *)&v1036[12] = 1024;
                            *(_DWORD *)&v1036[14] = v414;
                            *(_WORD *)&v1036[18] = 2048;
                            *(void *)&v1036[20] = v232;
                            *(_WORD *)&v1036[28] = 2048;
                            *(void *)&v1036[30] = v235;
                            _os_log_impl(&dword_1830D4000, v411, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
                          }
                        }
                        goto LABEL_717;
                      }
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      uint64_t v397 = *(void *)(v235 + 488);
                      *(_DWORD *)buf = 136446722;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v235;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v1035 = v397;
                      long long v398 = (char *)_os_log_send_and_compose_impl();
                      v1049[0] = 16;
                      aBlock[0] = 0;
                      if (__nwlog_fault(v398, v1049, aBlock))
                      {
                        if (v1049[0] == 17)
                        {
                          uint64_t v399 = __nwlog_obj();
                          os_log_type_t v400 = v1049[0];
                          if (!os_log_type_enabled(v399, (os_log_type_t)v1049[0])) {
                            goto LABEL_715;
                          }
                          uint64_t v401 = *(void *)(v235 + 488);
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v235;
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = v401;
                          char v402 = "%{public}s Connection %p already has a stream (%p)";
                          goto LABEL_714;
                        }
                        if (!aBlock[0])
                        {
                          uint64_t v399 = __nwlog_obj();
                          os_log_type_t v400 = v1049[0];
                          if (!os_log_type_enabled(v399, (os_log_type_t)v1049[0])) {
                            goto LABEL_715;
                          }
                          uint64_t v418 = *(void *)(v235 + 488);
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v235;
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = v418;
                          char v402 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                          goto LABEL_714;
                        }
                        os_log_type_t v415 = (char *)__nw_create_backtrace_string();
                        uint64_t v399 = __nwlog_obj();
                        os_log_type_t v400 = v1049[0];
                        BOOL v416 = os_log_type_enabled(v399, (os_log_type_t)v1049[0]);
                        if (v415)
                        {
                          if (v416)
                          {
                            uint64_t v417 = *(void *)(v235 + 488);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                            *(_WORD *)&unsigned char buf[12] = 2048;
                            *(void *)&buf[14] = v235;
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = v417;
                            *(_WORD *)v1036 = 2082;
                            *(void *)&v1036[2] = v415;
                            _os_log_impl(&dword_1830D4000, v399, v400, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
                          }
                          free(v415);
                          goto LABEL_715;
                        }
                        if (v416)
                        {
                          uint64_t v419 = *(void *)(v235 + 488);
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v235;
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = v419;
                          char v402 = "%{public}s Connection %p already has a stream (%p), no backtrace";
LABEL_714:
                          _os_log_impl(&dword_1830D4000, v399, v400, v402, buf, 0x20u);
                        }
                      }
LABEL_715:
                      if (v398) {
                        free(v398);
                      }
LABEL_717:
                      *(_WORD *)(v232 + 428) |= 0x4000u;
                      int v420 = *(void **)(v232 + 352);
                      *(void *)buf = MEMORY[0x1E4F143A8];
                      *(void *)&buf[8] = 0x40000000;
                      *(void *)&buf[16] = ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke;
                      uint64_t v1035 = (uint64_t)&__block_descriptor_tmp_55_40265;
                      *(void *)v1036 = v232;
                      nw_http_transaction_metadata_set_event_handler(v420, buf);
                      nw_protocol_connected(*(void **)(v232 + 48), v232);
                      goto LABEL_718;
                    }
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    v740 = (char *)_os_log_send_and_compose_impl();
                    v1049[0] = 16;
                    aBlock[0] = 0;
                    if (__nwlog_fault(v740, v1049, aBlock))
                    {
                      if (v1049[0] == 17)
                      {
                        v741 = __nwlog_obj();
                        os_log_type_t v742 = v1049[0];
                        if (os_log_type_enabled(v741, (os_log_type_t)v1049[0]))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v743 = "%{public}s called with null http1_stream->protocol_http1";
LABEL_1447:
                          _os_log_impl(&dword_1830D4000, v741, v742, v743, buf, 0xCu);
                        }
                      }
                      else if (aBlock[0])
                      {
                        v800 = (char *)__nw_create_backtrace_string();
                        v741 = __nwlog_obj();
                        os_log_type_t v742 = v1049[0];
                        BOOL v801 = os_log_type_enabled(v741, (os_log_type_t)v1049[0]);
                        if (v800)
                        {
                          if (v801)
                          {
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v800;
                            _os_log_impl(&dword_1830D4000, v741, v742, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                          }
                          free(v800);
                          goto LABEL_1448;
                        }
                        if (v801)
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v743 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
                          goto LABEL_1447;
                        }
                      }
                      else
                      {
                        v741 = __nwlog_obj();
                        os_log_type_t v742 = v1049[0];
                        if (os_log_type_enabled(v741, (os_log_type_t)v1049[0]))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v743 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                          goto LABEL_1447;
                        }
                      }
                    }
LABEL_1448:
                    if (v740) {
                      free(v740);
                    }
                    uint64_t v11 = v1026;
                    goto LABEL_717;
                  }
                  __nwlog_obj();
                  uint64_t v386 = *(unsigned int *)(v11 + 348);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->pending_stream_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v1035 = 1;
                  *(_WORD *)v1036 = 2048;
                  *(void *)&v1036[2] = v386;
                  __int16 v387 = (char *)_os_log_send_and_compose_impl();
                  v1049[0] = 16;
                  aBlock[0] = 0;
                  if (__nwlog_fault(v387, v1049, aBlock))
                  {
                    if (v1049[0] == 17)
                    {
                      uint64_t v388 = __nwlog_obj();
                      os_log_type_t v389 = v1049[0];
                      if (os_log_type_enabled(v388, (os_log_type_t)v1049[0]))
                      {
                        uint64_t v390 = *(unsigned int *)(v1026 + 348);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->pending_stream_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v1035 = 1;
                        *(_WORD *)v1036 = 2048;
                        *(void *)&v1036[2] = v390;
                        v391 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_683:
                        _os_log_impl(&dword_1830D4000, v388, v389, v391, buf, 0x2Au);
                      }
                    }
                    else if (aBlock[0])
                    {
                      uint64_t v392 = (char *)__nw_create_backtrace_string();
                      uint64_t v388 = __nwlog_obj();
                      os_log_type_t v389 = v1049[0];
                      BOOL v393 = os_log_type_enabled(v388, (os_log_type_t)v1049[0]);
                      if (v392)
                      {
                        if (v393)
                        {
                          uint64_t v394 = *(unsigned int *)(v1026 + 348);
                          *(_DWORD *)buf = 136447234;
                          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->pending_stream_count";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v394;
                          *(_WORD *)&v1036[10] = 2082;
                          *(void *)&v1036[12] = v392;
                          _os_log_impl(&dword_1830D4000, v388, v389, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                        }
                        free(v392);
                        p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                        goto LABEL_684;
                      }
                      p_cache = NWConcrete_nw_resolution_report.cache;
                      if (v393)
                      {
                        uint64_t v396 = *(unsigned int *)(v1026 + 348);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->pending_stream_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v1035 = 1;
                        *(_WORD *)v1036 = 2048;
                        *(void *)&v1036[2] = v396;
                        v391 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
                        goto LABEL_683;
                      }
                    }
                    else
                    {
                      uint64_t v388 = __nwlog_obj();
                      os_log_type_t v389 = v1049[0];
                      if (os_log_type_enabled(v388, (os_log_type_t)v1049[0]))
                      {
                        uint64_t v395 = *(unsigned int *)(v1026 + 348);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->pending_stream_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v1035 = 1;
                        *(_WORD *)v1036 = 2048;
                        *(void *)&v1036[2] = v395;
                        v391 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
                        goto LABEL_683;
                      }
                    }
                  }
LABEL_684:
                  if (v387) {
                    free(v387);
                  }
                  uint64_t v11 = v1026;
                  *(_DWORD *)(v1026 + 348) = 0;
                  goto LABEL_687;
                }
                __nwlog_obj();
                uint64_t v328 = *(unsigned int *)(v11 + 340);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->idle_connections_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v1035 = 1;
                *(_WORD *)v1036 = 2048;
                *(void *)&v1036[2] = v328;
                uint64_t v329 = (char *)_os_log_send_and_compose_impl();
                v1049[0] = 16;
                aBlock[0] = 0;
                if (__nwlog_fault(v329, v1049, aBlock))
                {
                  if (v1049[0] == 17)
                  {
                    BOOL v330 = __nwlog_obj();
                    os_log_type_t v331 = v1049[0];
                    if (os_log_type_enabled(v330, (os_log_type_t)v1049[0]))
                    {
                      uint64_t v332 = *(unsigned int *)(v1026 + 340);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->idle_connections_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v1035 = 1;
                      *(_WORD *)v1036 = 2048;
                      *(void *)&v1036[2] = v332;
                      BOOL v333 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_637:
                      _os_log_impl(&dword_1830D4000, v330, v331, v333, buf, 0x2Au);
                    }
                  }
                  else if (aBlock[0])
                  {
                    int v353 = (char *)__nw_create_backtrace_string();
                    BOOL v330 = __nwlog_obj();
                    os_log_type_t v331 = v1049[0];
                    BOOL v354 = os_log_type_enabled(v330, (os_log_type_t)v1049[0]);
                    if (v353)
                    {
                      if (v354)
                      {
                        uint64_t v355 = *(unsigned int *)(v1026 + 340);
                        *(_DWORD *)buf = 136447234;
                        *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->idle_connections_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v1035 = 1;
                        *(_WORD *)v1036 = 2048;
                        *(void *)&v1036[2] = v355;
                        *(_WORD *)&v1036[10] = 2082;
                        *(void *)&v1036[12] = v353;
                        _os_log_impl(&dword_1830D4000, v330, v331, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                      }
                      free(v353);
                      p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                      goto LABEL_638;
                    }
                    p_cache = NWConcrete_nw_resolution_report.cache;
                    if (v354)
                    {
                      uint64_t v374 = *(unsigned int *)(v1026 + 340);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->idle_connections_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v1035 = 1;
                      *(_WORD *)v1036 = 2048;
                      *(void *)&v1036[2] = v374;
                      BOOL v333 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
                      goto LABEL_637;
                    }
                  }
                  else
                  {
                    BOOL v330 = __nwlog_obj();
                    os_log_type_t v331 = v1049[0];
                    if (os_log_type_enabled(v330, (os_log_type_t)v1049[0]))
                    {
                      uint64_t v370 = *(unsigned int *)(v1026 + 340);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->idle_connections_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v1035 = 1;
                      *(_WORD *)v1036 = 2048;
                      *(void *)&v1036[2] = v370;
                      BOOL v333 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
                      goto LABEL_637;
                    }
                  }
                }
LABEL_638:
                if (v329) {
                  free(v329);
                }
                uint64_t v11 = v1026;
                *(_DWORD *)(v1026 + 340) = 0;
                goto LABEL_641;
              }
            }
            if ((*(unsigned char *)(v11 + 158) & 1) == 0)
            {
              if (*((unsigned char *)p_cache + 3665))
              {
                v732 = v233;
                v733 = __nwlog_obj();
                BOOL v734 = os_log_type_enabled(v733, OS_LOG_TYPE_DEBUG);
                long long v233 = v732;
                if (v734)
                {
                  int v735 = *(_DWORD *)(v11 + 372);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_get_next_idle_connection";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v11 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v1035 = (uint64_t)" ";
                  *(_WORD *)v1036 = 1024;
                  *(_DWORD *)&v1036[2] = v735;
                  _os_log_impl(&dword_1830D4000, v733, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> no idle connections", buf, 0x26u);
                  long long v233 = v732;
                }
              }
            }
            if (*(void *)(v232 + 256))
            {
              if (*(unsigned char *)(v232 + 158)) {
                goto LABEL_440;
              }
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              uint64_t v245 = gLogObj;
              if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG)) {
                goto LABEL_440;
              }
              uint64_t v246 = *(void *)(v232 + 256);
              int v247 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
              if (v246) {
                LODWORD(v246) = *(_DWORD *)(v246 + 860);
              }
              int v248 = *(_DWORD *)(v232 + 424);
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v232 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v1035 = (uint64_t)" ";
              *(_WORD *)v1036 = 1024;
              *(_DWORD *)&v1036[2] = v247;
              *(_WORD *)&v1036[6] = 1024;
              *(_DWORD *)&v1036[8] = v246;
              *(_WORD *)&v1036[12] = 1024;
              *(_DWORD *)&v1036[14] = v248;
              int v249 = "%{public}s %{public}s%s<i%u:c%u:s%u> stream already has current connection, ignoring";
              int v250 = v245;
              uint32_t v251 = 50;
LABEL_439:
              _os_log_impl(&dword_1830D4000, v250, OS_LOG_TYPE_DEBUG, v249, buf, v251);
LABEL_440:
              if (*(unsigned char *)(v11 + 158)) {
                goto LABEL_718;
              }
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              int v252 = gLogObj;
              if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG)) {
                goto LABEL_718;
              }
              int v253 = *(_DWORD *)(v11 + 372);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_match_idle_connection_with_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v11 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v1035 = (uint64_t)" ";
              *(_WORD *)v1036 = 1024;
              *(_DWORD *)&v1036[2] = v253;
              uint64_t v254 = "%{public}s %{public}s%s<i%u> cannot make new connection, waiting for other requests to finish";
              goto LABEL_446;
            }
            v1023 = v233;
            if ((*(_WORD *)(v232 + 428) & 8) == 0)
            {
              if (*(_DWORD *)(v11 + 336) + *(_DWORD *)(v11 + 352) >= (*(_DWORD *)(v11 + 368)
                                                                                   + *(_DWORD *)(v11 + 364)))
              {
                if (*(unsigned char *)(v232 + 158)) {
                  goto LABEL_440;
                }
                int v340 = __nwlog_obj();
                if (!os_log_type_enabled(v340, OS_LOG_TYPE_DEBUG)) {
                  goto LABEL_440;
                }
                uint64_t v341 = *(void *)(v232 + 256);
                int v342 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                if (v341) {
                  LODWORD(v341) = *(_DWORD *)(v341 + 860);
                }
                int v343 = *(_DWORD *)(v232 + 424);
                int v344 = *(_DWORD *)(v11 + 364);
                *(_DWORD *)buf = 136447746;
                *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v232 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v1035 = (uint64_t)" ";
                *(_WORD *)v1036 = 1024;
                *(_DWORD *)&v1036[2] = v342;
                *(_WORD *)&v1036[6] = 1024;
                *(_DWORD *)&v1036[8] = v341;
                *(_WORD *)&v1036[12] = 1024;
                *(_DWORD *)&v1036[14] = v343;
                *(_WORD *)&v1036[18] = 1024;
                *(_DWORD *)&v1036[20] = v344;
                int v249 = "%{public}s %{public}s%s<i%u:c%u:s%u> already at max connection width %u, cannot create new connection";
                int v250 = v340;
                uint32_t v251 = 56;
                goto LABEL_439;
              }
              if ((*(unsigned char *)(v232 + 158) & 1) == 0)
              {
                if (*((unsigned char *)p_cache + 3665))
                {
                  v853 = __nwlog_obj();
                  if (os_log_type_enabled(v853, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v854 = *(void *)(v232 + 256);
                    int v855 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                    if (v854) {
                      LODWORD(v854) = *(_DWORD *)(v854 + 860);
                    }
                    int v856 = *(_DWORD *)(v232 + 424);
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v232 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v1035 = (uint64_t)" ";
                    *(_WORD *)v1036 = 1024;
                    *(_DWORD *)&v1036[2] = v855;
                    *(_WORD *)&v1036[6] = 1024;
                    *(_DWORD *)&v1036[8] = v854;
                    *(_WORD *)&v1036[12] = 1024;
                    *(_DWORD *)&v1036[14] = v856;
                    _os_log_impl(&dword_1830D4000, v853, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> width allows new connection, creating", buf, 0x32u);
                    uint64_t v11 = v1026;
                    p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                  }
                }
              }
              if ((*(_WORD *)(v232 + 428) & 0x1000) == 0)
              {
LABEL_1017:
                if (*(void *)(v232 + 32))
                {
                  if ((*(unsigned char *)(v232 + 158) & 1) == 0)
                  {
                    if (*((unsigned char *)p_cache + 3665))
                    {
                      v875 = __nwlog_obj();
                      if (os_log_type_enabled(v875, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v876 = *(void *)(v232 + 256);
                        int v877 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                        if (v876) {
                          LODWORD(v876) = *(_DWORD *)(v876 + 860);
                        }
                        int v878 = *(_DWORD *)(v232 + 424);
                        uint64_t v879 = *(void *)(v232 + 32);
                        *(_DWORD *)buf = 136447746;
                        *(void *)&uint8_t buf[4] = "nw_http1_establish_new_connection_for_stream";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v232 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v1035 = (uint64_t)" ";
                        *(_WORD *)v1036 = 1024;
                        *(_DWORD *)&v1036[2] = v877;
                        *(_WORD *)&v1036[6] = 1024;
                        *(_DWORD *)&v1036[8] = v876;
                        *(_WORD *)&v1036[12] = 1024;
                        *(_DWORD *)&v1036[14] = v878;
                        *(_WORD *)&v1036[18] = 2048;
                        *(void *)&v1036[20] = v879;
                        _os_log_impl(&dword_1830D4000, v875, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using already established output handler %p", buf, 0x3Cu);
                      }
                    }
                  }
                  v1020 = *(_OWORD **)(v232 + 32);
                  if (v1020)
                  {
                    v603 = *(void **)(v232 + 336);
                    if (v603)
                    {
                      os_log_type_t v604 = *(void **)(v232 + 320);
                      if (v604)
                      {
                        v605 = malloc_type_calloc(1uLL, 0x370uLL, 0xEAFB8F1AuLL);
                        if (v605) {
                          goto LABEL_1024;
                        }
                        v885 = __nwlog_obj();
                        os_log_type_enabled(v885, OS_LOG_TYPE_ERROR);
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "strict_calloc";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = 1;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v1035 = 880;
                        v886 = (void *)_os_log_send_and_compose_impl();
                        BOOL result = __nwlog_abort((uint64_t)v886);
                        if (!result)
                        {
                          free(v886);
LABEL_1024:
                          bzero(v605, 0x370uLL);
                          if (nw_protocol_http1_identifier::onceToken != -1) {
                            dispatch_once(&nw_protocol_http1_identifier::onceToken, &__block_literal_global_40283);
                          }
                          *((void *)v605 + 2) = &nw_protocol_http1_identifier::http1_protocol_identifier;
                          if (nw_protocol_http1_get_callbacks(void)::onceToken != -1) {
                            dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
                          }
                          *((void *)v605 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
                          *((_DWORD *)v605 + 46) = 3;
                          *((void *)v605 + 22) = v605;
                          *((void *)v605 + 5) = v605 + 10;
                          *((void *)v605 + 60) = v1026;
                          nw_protocol_set_output_handler((uint64_t)v605, (uint64_t)v1020);
                          *(void *)buf = os_retain(v603);
                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v605 + 47), buf);
                          *(void *)buf = os_retain(v604);
                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v605 + 46), buf);
                          *(void *)buf = nw_parameters_copy_context(v604);
                          uint64_t v11 = v1026;
                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v605 + 31), buf);
                          *((void *)v605 + 24) = *(void *)(v1026 + 192);
                          v606 = (void *)*((void *)v605 + 62);
                          *(void *)v1049 = MEMORY[0x1E4F143A8];
                          *(void *)&v1049[8] = 0x40000000;
                          *(void *)&v1049[16] = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke;
                          v1050 = (uint64_t (*)(uint64_t, uint64_t))&__block_descriptor_tmp_43_40284;
                          v1051 = (void (*)(uint64_t))v605;
                          *(void *)buf = nw_http_connection_create_metadata(v606, v1049, 0);
                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v605 + 48), buf);
                          nw_http_connection_metadata_set_version(*((void **)v605 + 96), 3);
                          nw_http_connection_metadata_set_shared_connection_pool_metadata(*((void **)v605 + 96), *(void **)(v1026 + 312));
                          *((void *)v605 + 77) = 0;
                          *((void *)v605 + 78) = (char *)v605 + 616;
                          *((void *)v605 + 79) = 0;
                          *((void *)v605 + 80) = (char *)v605 + 632;
                          *((void *)v605 + 81) = 0;
                          *((void *)v605 + 82) = (char *)v605 + 648;
                          *((void *)v605 + 83) = 0;
                          *((void *)v605 + 84) = (char *)v605 + 664;
                          *((void *)v605 + 86) = (char *)v605 + 680;
                          *((void *)v605 + 85) = 0;
                          nw_frame_cache_init((uint64_t)v605 + 696, (uint64_t)v605, 256, 0x40000, 16);
                          uint64_t v607 = *((void *)v605 + 60);
                          if (v607)
                          {
                            *(_OWORD *)((char *)v605 + 360) = 0u;
                            *(_OWORD *)((char *)v605 + 376) = 0u;
                            *(_OWORD *)((char *)v605 + 392) = 0u;
                            *(_OWORD *)((char *)v605 + 408) = 0u;
                            *(_OWORD *)((char *)v605 + 424) = 0u;
                            *(_OWORD *)((char *)v605 + 440) = 0u;
                            *(_OWORD *)((char *)v605 + 328) = 0u;
                            *(_OWORD *)((char *)v605 + 344) = 0u;
                            *((void *)v605 + 37) = nw_http1_on_message_begin;
                            *((void *)v605 + 48) = nw_http1_on_message_complete;
                            *((void *)v605 + 46) = nw_http1_on_headers_complete;
                            *((void *)v605 + 59) = nw_http1_on_reset;
                            *((void *)v605 + 40) = nw_http1_on_method;
                            *((void *)v605 + 51) = nw_http1_on_method_complete;
                            *((void *)v605 + 38) = nw_http1_on_url;
                            *((void *)v605 + 49) = nw_http1_on_url_complete;
                            *((void *)v605 + 39) = nw_http1_on_status;
                            *((void *)v605 + 50) = nw_http1_on_status_complete;
                            *((void *)v605 + 42) = nw_http1_on_header_field;
                            *((void *)v605 + 53) = nw_http1_on_header_field_complete;
                            *((void *)v605 + 43) = nw_http1_on_header_value;
                            *((void *)v605 + 54) = nw_http1_on_header_value_complete;
                            *((void *)v605 + 47) = nw_http1_on_body;
                            *((void *)v605 + 57) = nw_http1_on_chunk_header;
                            *((void *)v605 + 58) = nw_http1_on_chunk_complete;
                            char v608 = *(unsigned char *)(v607 + 376);
                            *(_OWORD *)((char *)v605 + 248) = 0u;
                            *(_OWORD *)((char *)v605 + 200) = 0u;
                            *(_OWORD *)((char *)v605 + 264) = 0u;
                            *(_OWORD *)((char *)v605 + 232) = 0u;
                            *(_OWORD *)((char *)v605 + 216) = 0u;
                            if (v608) {
                              char v609 = 1;
                            }
                            else {
                              char v609 = 2;
                            }
                            *((unsigned char *)v605 + 272) = v609;
                            *((void *)v605 + 35) = 0;
                            *((void *)v605 + 36) = (char *)v605 + 296;
                            *((_WORD *)v605 + 139) = 16131;
                            *((void *)v605 + 31) = v605;
                            *((void *)v605 + 32) = 238;
                            v610 = NWConcrete_nw_resolution_report.cache;
                            if ((*((unsigned char *)v605 + 158) & 1) == 0)
                            {
                              v611 = __nwlog_obj();
                              if (os_log_type_enabled(v611, OS_LOG_TYPE_DEBUG))
                              {
                                uint64_t v612 = *((void *)v605 + 61);
                                int v613 = *(_DWORD *)(*((void *)v605 + 60) + 372);
                                int v614 = *((_DWORD *)v605 + 215);
                                if (v612) {
                                  LODWORD(v612) = *(_DWORD *)(v612 + 424);
                                }
                                *(_DWORD *)buf = 136448258;
                                *(void *)&uint8_t buf[4] = "nw_http1_connection_log_parser_version";
                                *(_WORD *)&unsigned char buf[12] = 2082;
                                *(void *)&buf[14] = (char *)v605 + 74;
                                *(_WORD *)&buf[22] = 2080;
                                uint64_t v1035 = (uint64_t)" ";
                                *(_WORD *)v1036 = 1024;
                                *(_DWORD *)&v1036[2] = v613;
                                *(_WORD *)&v1036[6] = 1024;
                                *(_DWORD *)&v1036[8] = v614;
                                *(_WORD *)&v1036[12] = 1024;
                                *(_DWORD *)&v1036[14] = v612;
                                *(_WORD *)&v1036[18] = 1024;
                                *(_DWORD *)&v1036[20] = 9;
                                *(_WORD *)&v1036[24] = 1024;
                                *(_DWORD *)&v1036[26] = 2;
                                *(_WORD *)&v1036[30] = 1024;
                                *(_DWORD *)&v1036[32] = 1;
                                _os_log_impl(&dword_1830D4000, v611, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using http parser v%u.%u.%u", buf, 0x44u);
                              }
                            }
                            goto LABEL_1037;
                          }
                          __nwlog_obj();
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                          v887 = (char *)_os_log_send_and_compose_impl();
                          type[0] = 16;
                          LOBYTE(v1029[0]) = 0;
                          if (__nwlog_fault(v887, type, v1029))
                          {
                            if (type[0] == 17)
                            {
                              v888 = __nwlog_obj();
                              os_log_type_t v889 = type[0];
                              if (os_log_type_enabled(v888, (os_log_type_t)type[0]))
                              {
                                *(_DWORD *)buf = 136446210;
                                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                                v890 = "%{public}s called with null http1_connection->protocol_http1";
LABEL_1801:
                                _os_log_impl(&dword_1830D4000, v888, v889, v890, buf, 0xCu);
                              }
                            }
                            else if (LOBYTE(v1029[0]))
                            {
                              v943 = (char *)__nw_create_backtrace_string();
                              v888 = __nwlog_obj();
                              os_log_type_t v889 = type[0];
                              BOOL v944 = os_log_type_enabled(v888, (os_log_type_t)type[0]);
                              if (v943)
                              {
                                if (v944)
                                {
                                  *(_DWORD *)buf = 136446466;
                                  *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = v943;
                                  _os_log_impl(&dword_1830D4000, v888, v889, "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                                }
                                free(v943);
                                goto LABEL_1802;
                              }
                              if (v944)
                              {
                                *(_DWORD *)buf = 136446210;
                                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                                v890 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
                                goto LABEL_1801;
                              }
                            }
                            else
                            {
                              v888 = __nwlog_obj();
                              os_log_type_t v889 = type[0];
                              if (os_log_type_enabled(v888, (os_log_type_t)type[0]))
                              {
                                *(_DWORD *)buf = 136446210;
                                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                                v890 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
                                goto LABEL_1801;
                              }
                            }
                          }
LABEL_1802:
                          if (v887) {
                            free(v887);
                          }
                          uint64_t v11 = v1026;
                          v610 = (void **)(NWConcrete_nw_resolution_report + 16);
LABEL_1037:
                          *(void *)buf = 0;
                          *(void *)&buf[8] = buf;
                          *(void *)&buf[16] = 0x2000000000;
                          uint64_t v1035 = (uint64_t)v605;
                          *(void *)aBlock = MEMORY[0x1E4F143A8];
                          *(void *)&aBlock[8] = 0x40000000;
                          *(void *)&aBlock[16] = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke_2;
                          v1045 = &unk_1E5241178;
                          v1046 = (uint64_t *)buf;
                          *((void *)v605 + 76) = _Block_copy(aBlock);
                          _Block_object_dispose(buf, 8);
                          if ((*((unsigned char *)v605 + 158) & 1) == 0)
                          {
                            if (*((unsigned char *)v610 + 3665))
                            {
                              v900 = __nwlog_obj();
                              if (os_log_type_enabled(v900, OS_LOG_TYPE_DEBUG))
                              {
                                uint64_t v901 = *((void *)v605 + 61);
                                int v902 = *(_DWORD *)(*((void *)v605 + 60) + 372);
                                int v903 = *((_DWORD *)v605 + 215);
                                if (v901) {
                                  LODWORD(v901) = *(_DWORD *)(v901 + 424);
                                }
                                *(_DWORD *)buf = 136447746;
                                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                                *(_WORD *)&unsigned char buf[12] = 2082;
                                *(void *)&buf[14] = (char *)v605 + 74;
                                *(_WORD *)&buf[22] = 2080;
                                uint64_t v1035 = (uint64_t)" ";
                                *(_WORD *)v1036 = 1024;
                                *(_DWORD *)&v1036[2] = v902;
                                *(_WORD *)&v1036[6] = 1024;
                                *(_DWORD *)&v1036[8] = v903;
                                *(_WORD *)&v1036[12] = 1024;
                                *(_DWORD *)&v1036[14] = v901;
                                *(_WORD *)&v1036[18] = 2048;
                                *(void *)&v1036[20] = v605;
                                _os_log_impl(&dword_1830D4000, v900, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created %p", buf, 0x3Cu);
                                uint64_t v11 = v1026;
                              }
                            }
                          }
                          uint64_t v615 = (NSObject **)(v605 + 32);
                          uint64_t v1025 = v232;
                          nw_protocol_replace_input_handler((uint64_t)v1020, v232, (uint64_t)v605);
                          _OWORD *v605 = *v1020;
                          uint64_t v616 = (void *)*((void *)v605 + 92);
                          if (v616)
                          {
                            if (!*((void *)v605 + 66))
                            {
                              size_t v617 = (void **)(v605 + 35);
                              id v618 = nw_parameters_copy_context(*((void **)v605 + 92));
                              *(void *)buf = nw_path_copy_flow_registration(v618, (uint64_t)v605);
                              nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v605 + 35), buf);
                              uint64_t v619 = (void *)*((void *)v605 + 70);
                              if (v619)
                              {
                                id v620 = nw_path_flow_registration_copy_endpoint(v619);
                                id v621 = nw_path_flow_registration_copy_parameters(*v617);
                                *(void *)buf = nw_endpoint_copy_association_with_evaluator(v620, v621, 0);
                                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v605 + 33), buf);
                                if (*((void *)v605 + 66))
                                {
                                  *(void *)buf = nw_protocol_instance_stub_create((nw_protocol *)v605);
                                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v605 + 34), buf);
                                  nw_association_register_internal(*((void **)v605 + 66), v616, *((void **)v605 + 68), 0, 0, &__block_literal_global_69);
                                  id v622 = nw_association_copy_current_path(*((void **)v605 + 66), v621);
                                  if (v622)
                                  {
                                    uint64_t v623 = v622;
                                    v624 = nw_path_copy_for_flow_registration(v622, *v617);
                                    if (v624)
                                    {
                                      char v625 = v624;
                                      if (*v615 != v624)
                                      {
                                        *(void *)buf = os_retain(v624);
                                        nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v605 + 32), buf);
                                      }
                                      if (nw_path_has_flows(v625)) {
                                        __int16 v626 = 4096;
                                      }
                                      else {
                                        __int16 v626 = 0;
                                      }
                                      int v627 = *((_WORD *)v605 + 436) & 0xEFFF | (*((unsigned __int8 *)v605 + 874) << 16);
                                      *((_WORD *)v605 + 436) = *((_WORD *)v605 + 436) & 0xEFFF | v626;
                                      *((unsigned char *)v605 + 874) = BYTE2(v627);
                                      id v628 = nw_parameters_copy_effective_proxy_config(v616);
                                      if (v628)
                                      {
                                        v629 = v628;
                                        if (nw_path_has_proxy_config(v623, v628))
                                        {
                                          *(void *)buf = os_retain(v629);
                                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v605 + 36), buf);
                                        }
                                        os_release(v629);
                                      }
                                      os_release(v625);
                                    }
                                    os_release(v623);
                                  }
                                }
                                if (v621) {
                                  os_release(v621);
                                }
                                uint64_t v11 = v1026;
                                if (v620) {
                                  os_release(v620);
                                }
                              }
                              v610 = (void **)(NWConcrete_nw_resolution_report + 16);
                              if (v618) {
                                os_release(v618);
                              }
                            }
                            v630 = *v615;
                            if (*v615)
                            {
LABEL_1063:
                              if (nw_path_uses_interface_type(v630, nw_interface_type_cellular)) {
                                *((void *)v605 + 24) = 1000;
                              }
                            }
LABEL_1065:
                            uint64_t v631 = *(unsigned int *)(v11 + 336) + 1;
                            uint64_t v632 = v631 << 31 >> 31;
                            *(_DWORD *)(v11 + 336) = v631;
                            uint64_t v232 = v1025;
                            if (v632 == v631 && (v632 & 0x8000000000000000) == 0) {
                              goto LABEL_1103;
                            }
                            __nwlog_obj();
                            uint64_t v633 = *(unsigned int *)(v11 + 336);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->connections_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v633;
                            v634 = (char *)_os_log_send_and_compose_impl();
                            v1049[0] = 16;
                            aBlock[0] = 0;
                            if (__nwlog_fault(v634, v1049, aBlock))
                            {
                              if (v1049[0] == 17)
                              {
                                size_t v635 = __nwlog_obj();
                                os_log_type_t v636 = v1049[0];
                                if (os_log_type_enabled(v635, (os_log_type_t)v1049[0]))
                                {
                                  uint64_t v637 = *(unsigned int *)(v1026 + 336);
                                  *(_DWORD *)buf = 136446978;
                                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = "http1->connections_count";
                                  *(_WORD *)&buf[22] = 2048;
                                  uint64_t v1035 = 1;
                                  *(_WORD *)v1036 = 2048;
                                  *(void *)&v1036[2] = v637;
                                  v638 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_1099:
                                  _os_log_impl(&dword_1830D4000, v635, v636, v638, buf, 0x2Au);
                                }
                              }
                              else if (aBlock[0])
                              {
                                v654 = (char *)__nw_create_backtrace_string();
                                size_t v635 = __nwlog_obj();
                                os_log_type_t v636 = v1049[0];
                                BOOL v655 = os_log_type_enabled(v635, (os_log_type_t)v1049[0]);
                                if (v654)
                                {
                                  if (v655)
                                  {
                                    uint64_t v656 = *(unsigned int *)(v1026 + 336);
                                    *(_DWORD *)buf = 136447234;
                                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                                    *(_WORD *)&unsigned char buf[12] = 2082;
                                    *(void *)&buf[14] = "http1->connections_count";
                                    *(_WORD *)&buf[22] = 2048;
                                    uint64_t v1035 = 1;
                                    *(_WORD *)v1036 = 2048;
                                    *(void *)&v1036[2] = v656;
                                    *(_WORD *)&v1036[10] = 2082;
                                    *(void *)&v1036[12] = v654;
                                    _os_log_impl(&dword_1830D4000, v635, v636, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                                  }
                                  free(v654);
                                  v610 = (void **)(NWConcrete_nw_resolution_report + 16);
                                  goto LABEL_1100;
                                }
                                v610 = (void **)(NWConcrete_nw_resolution_report + 16);
                                if (v655)
                                {
                                  uint64_t v661 = *(unsigned int *)(v1026 + 336);
                                  *(_DWORD *)buf = 136446978;
                                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = "http1->connections_count";
                                  *(_WORD *)&buf[22] = 2048;
                                  uint64_t v1035 = 1;
                                  *(_WORD *)v1036 = 2048;
                                  *(void *)&v1036[2] = v661;
                                  v638 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                                  goto LABEL_1099;
                                }
                              }
                              else
                              {
                                size_t v635 = __nwlog_obj();
                                os_log_type_t v636 = v1049[0];
                                if (os_log_type_enabled(v635, (os_log_type_t)v1049[0]))
                                {
                                  uint64_t v660 = *(unsigned int *)(v1026 + 336);
                                  *(_DWORD *)buf = 136446978;
                                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = "http1->connections_count";
                                  *(_WORD *)&buf[22] = 2048;
                                  uint64_t v1035 = 1;
                                  *(_WORD *)v1036 = 2048;
                                  *(void *)&v1036[2] = v660;
                                  v638 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                                  goto LABEL_1099;
                                }
                              }
                            }
LABEL_1100:
                            if (v634) {
                              free(v634);
                            }
                            uint64_t v11 = v1026;
                            *(_DWORD *)(v1026 + 336) = -1;
LABEL_1103:
                            uint64_t v662 = *(unsigned int *)(v11 + 360) + 1;
                            uint64_t v663 = v662 << 31 >> 31;
                            *(_DWORD *)(v11 + 360) = v662;
                            if (v663 == v662 && (v663 & 0x8000000000000000) == 0) {
                              goto LABEL_1122;
                            }
                            __nwlog_obj();
                            uint64_t v664 = *(unsigned int *)(v11 + 360);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->next_connection_log_num";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v664;
                            v665 = (char *)_os_log_send_and_compose_impl();
                            v1049[0] = 16;
                            aBlock[0] = 0;
                            if (__nwlog_fault(v665, v1049, aBlock))
                            {
                              if (v1049[0] == 17)
                              {
                                v666 = __nwlog_obj();
                                os_log_type_t v667 = v1049[0];
                                if (os_log_type_enabled(v666, (os_log_type_t)v1049[0]))
                                {
                                  uint64_t v668 = *(unsigned int *)(v1026 + 360);
                                  *(_DWORD *)buf = 136446978;
                                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = "http1->next_connection_log_num";
                                  *(_WORD *)&buf[22] = 2048;
                                  uint64_t v1035 = 1;
                                  *(_WORD *)v1036 = 2048;
                                  *(void *)&v1036[2] = v668;
                                  v669 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_1118:
                                  _os_log_impl(&dword_1830D4000, v666, v667, v669, buf, 0x2Au);
                                }
                              }
                              else if (aBlock[0])
                              {
                                v670 = (char *)__nw_create_backtrace_string();
                                v666 = __nwlog_obj();
                                os_log_type_t v667 = v1049[0];
                                BOOL v671 = os_log_type_enabled(v666, (os_log_type_t)v1049[0]);
                                if (v670)
                                {
                                  if (v671)
                                  {
                                    uint64_t v672 = *(unsigned int *)(v1026 + 360);
                                    *(_DWORD *)buf = 136447234;
                                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                                    *(_WORD *)&unsigned char buf[12] = 2082;
                                    *(void *)&buf[14] = "http1->next_connection_log_num";
                                    *(_WORD *)&buf[22] = 2048;
                                    uint64_t v1035 = 1;
                                    *(_WORD *)v1036 = 2048;
                                    *(void *)&v1036[2] = v672;
                                    *(_WORD *)&v1036[10] = 2082;
                                    *(void *)&v1036[12] = v670;
                                    _os_log_impl(&dword_1830D4000, v666, v667, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                                  }
                                  free(v670);
                                  v610 = (void **)(NWConcrete_nw_resolution_report + 16);
                                  goto LABEL_1119;
                                }
                                v610 = NWConcrete_nw_resolution_report.cache;
                                if (v671)
                                {
                                  uint64_t v674 = *(unsigned int *)(v1026 + 360);
                                  *(_DWORD *)buf = 136446978;
                                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = "http1->next_connection_log_num";
                                  *(_WORD *)&buf[22] = 2048;
                                  uint64_t v1035 = 1;
                                  *(_WORD *)v1036 = 2048;
                                  *(void *)&v1036[2] = v674;
                                  v669 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                                  goto LABEL_1118;
                                }
                              }
                              else
                              {
                                v666 = __nwlog_obj();
                                os_log_type_t v667 = v1049[0];
                                if (os_log_type_enabled(v666, (os_log_type_t)v1049[0]))
                                {
                                  uint64_t v673 = *(unsigned int *)(v1026 + 360);
                                  *(_DWORD *)buf = 136446978;
                                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = "http1->next_connection_log_num";
                                  *(_WORD *)&buf[22] = 2048;
                                  uint64_t v1035 = 1;
                                  *(_WORD *)v1036 = 2048;
                                  *(void *)&v1036[2] = v673;
                                  v669 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                                  goto LABEL_1118;
                                }
                              }
                            }
LABEL_1119:
                            if (v665) {
                              free(v665);
                            }
                            LODWORD(v662) = -1;
                            uint64_t v11 = v1026;
                            *(_DWORD *)(v1026 + 360) = -1;
LABEL_1122:
                            *((_DWORD *)v605 + 215) = v662;
                            if ((*((unsigned char *)v605 + 158) & 1) == 0)
                            {
                              if (*((unsigned char *)v610 + 3665))
                              {
                                v904 = __nwlog_obj();
                                if (os_log_type_enabled(v904, OS_LOG_TYPE_DEBUG))
                                {
                                  uint64_t v905 = *((void *)v605 + 61);
                                  int v906 = *(_DWORD *)(*((void *)v605 + 60) + 372);
                                  int v907 = *((_DWORD *)v605 + 215);
                                  if (v905) {
                                    LODWORD(v905) = *(_DWORD *)(v905 + 424);
                                  }
                                  uint64_t v11 = v1026;
                                  int v908 = *(_DWORD *)(v1026 + 336);
                                  *(_DWORD *)buf = 136448002;
                                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = (char *)v605 + 74;
                                  *(_WORD *)&buf[22] = 2080;
                                  uint64_t v1035 = (uint64_t)" ";
                                  *(_WORD *)v1036 = 1024;
                                  *(_DWORD *)&v1036[2] = v906;
                                  *(_WORD *)&v1036[6] = 1024;
                                  *(_DWORD *)&v1036[8] = v907;
                                  *(_WORD *)&v1036[12] = 1024;
                                  *(_DWORD *)&v1036[14] = v905;
                                  *(_WORD *)&v1036[18] = 2048;
                                  *(void *)&v1036[20] = v605;
                                  *(_WORD *)&v1036[28] = 1024;
                                  *(_DWORD *)&v1036[30] = v908;
                                  _os_log_impl(&dword_1830D4000, v904, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added connection %p, now have %u connections", buf, 0x42u);
                                  uint64_t v232 = v1025;
                                }
                              }
                            }
                            if (*(void *)(v232 + 248))
                            {
                              if (*((void *)v605 + 61))
                              {
                                __nwlog_obj();
                                uint64_t v675 = *((void *)v605 + 61);
                                *(_DWORD *)buf = 136446722;
                                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                *(_WORD *)&unsigned char buf[12] = 2048;
                                *(void *)&buf[14] = v605;
                                *(_WORD *)&buf[22] = 2048;
                                uint64_t v1035 = v675;
                                v676 = (char *)_os_log_send_and_compose_impl();
                                v1049[0] = 16;
                                aBlock[0] = 0;
                                if (!__nwlog_fault(v676, v1049, aBlock)) {
                                  goto LABEL_1150;
                                }
                                if (v1049[0] == 17)
                                {
                                  v677 = __nwlog_obj();
                                  os_log_type_t v678 = v1049[0];
                                  if (!os_log_type_enabled(v677, (os_log_type_t)v1049[0])) {
                                    goto LABEL_1150;
                                  }
                                  uint64_t v679 = *((void *)v605 + 61);
                                  *(_DWORD *)buf = 136446722;
                                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                  *(_WORD *)&unsigned char buf[12] = 2048;
                                  *(void *)&buf[14] = v605;
                                  *(_WORD *)&buf[22] = 2048;
                                  uint64_t v1035 = v679;
                                  v680 = "%{public}s Connection %p already has a stream (%p)";
                                }
                                else if (aBlock[0])
                                {
                                  v693 = (char *)__nw_create_backtrace_string();
                                  v677 = __nwlog_obj();
                                  os_log_type_t v678 = v1049[0];
                                  BOOL v694 = os_log_type_enabled(v677, (os_log_type_t)v1049[0]);
                                  if (v693)
                                  {
                                    if (v694)
                                    {
                                      uint64_t v695 = *((void *)v605 + 61);
                                      *(_DWORD *)buf = 136446978;
                                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                      *(_WORD *)&unsigned char buf[12] = 2048;
                                      *(void *)&buf[14] = v605;
                                      *(_WORD *)&buf[22] = 2048;
                                      uint64_t v1035 = v695;
                                      *(_WORD *)v1036 = 2082;
                                      *(void *)&v1036[2] = v693;
                                      _os_log_impl(&dword_1830D4000, v677, v678, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
                                    }
                                    free(v693);
                                    goto LABEL_1150;
                                  }
                                  if (!v694)
                                  {
LABEL_1150:
                                    if (v676) {
                                      free(v676);
                                    }
                                    goto LABEL_1152;
                                  }
                                  uint64_t v697 = *((void *)v605 + 61);
                                  *(_DWORD *)buf = 136446722;
                                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                  *(_WORD *)&unsigned char buf[12] = 2048;
                                  *(void *)&buf[14] = v605;
                                  *(_WORD *)&buf[22] = 2048;
                                  uint64_t v1035 = v697;
                                  v680 = "%{public}s Connection %p already has a stream (%p), no backtrace";
                                }
                                else
                                {
                                  v677 = __nwlog_obj();
                                  os_log_type_t v678 = v1049[0];
                                  if (!os_log_type_enabled(v677, (os_log_type_t)v1049[0])) {
                                    goto LABEL_1150;
                                  }
                                  uint64_t v696 = *((void *)v605 + 61);
                                  *(_DWORD *)buf = 136446722;
                                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                  *(_WORD *)&unsigned char buf[12] = 2048;
                                  *(void *)&buf[14] = v605;
                                  *(_WORD *)&buf[22] = 2048;
                                  uint64_t v1035 = v696;
                                  v680 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                                }
                                _os_log_impl(&dword_1830D4000, v677, v678, v680, buf, 0x20u);
                                goto LABEL_1150;
                              }
                              *(void *)(v232 + 256) = v605;
                              *((void *)v605 + 61) = v232;
                              nw_protocol_set_output_handler(v232, *((void *)v605 + 4));
                              nw_protocol_set_input_handler((uint64_t)v605, *(void *)(v232 + 48));
                              *(_OWORD *)uint64_t v232 = *v605;
                              long long v681 = v1023[5];
                              long long v683 = v1023[2];
                              long long v682 = v1023[3];
                              v605[8] = v1023[4];
                              v605[9] = v681;
                              v605[6] = v683;
                              v605[7] = v682;
                              long long v684 = v1023[1];
                              v605[4] = *v1023;
                              v605[5] = v684;
                              nw_http_transaction_metadata_set_connection_metadata(*(void **)(v232 + 352), *((void **)v605 + 96));
                              *((_WORD *)v605 + 436) &= 0xFFD7u;
                              *((_DWORD *)v605 + 216) = 1;
                              if ((*((unsigned char *)v605 + 158) & 1) == 0)
                              {
                                v685 = __nwlog_obj();
                                if (os_log_type_enabled(v685, OS_LOG_TYPE_DEBUG))
                                {
                                  uint64_t v686 = *((void *)v605 + 61);
                                  int v687 = *(_DWORD *)(*((void *)v605 + 60) + 372);
                                  int v688 = *((_DWORD *)v605 + 215);
                                  if (v686) {
                                    LODWORD(v686) = *(_DWORD *)(v686 + 424);
                                  }
                                  *(_DWORD *)buf = 136447490;
                                  *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = (char *)v605 + 74;
                                  *(_WORD *)&buf[22] = 2080;
                                  uint64_t v1035 = (uint64_t)" ";
                                  *(_WORD *)v1036 = 1024;
                                  *(_DWORD *)&v1036[2] = v687;
                                  *(_WORD *)&v1036[6] = 1024;
                                  *(_DWORD *)&v1036[8] = v688;
                                  *(_WORD *)&v1036[12] = 1024;
                                  *(_DWORD *)&v1036[14] = v686;
                                  _os_log_impl(&dword_1830D4000, v685, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                                }
                              }
                              if ((*(unsigned char *)(v232 + 158) & 1) == 0)
                              {
                                v689 = __nwlog_obj();
                                if (os_log_type_enabled(v689, OS_LOG_TYPE_INFO))
                                {
                                  uint64_t v690 = *(void *)(v232 + 256);
                                  int v691 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                                  if (v690) {
                                    LODWORD(v690) = *(_DWORD *)(v690 + 860);
                                  }
                                  int v692 = *(_DWORD *)(v232 + 424);
                                  *(_DWORD *)buf = 136448002;
                                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = v232 + 74;
                                  *(_WORD *)&buf[22] = 2080;
                                  uint64_t v1035 = (uint64_t)" ";
                                  *(_WORD *)v1036 = 1024;
                                  *(_DWORD *)&v1036[2] = v691;
                                  *(_WORD *)&v1036[6] = 1024;
                                  *(_DWORD *)&v1036[8] = v690;
                                  *(_WORD *)&v1036[12] = 1024;
                                  *(_DWORD *)&v1036[14] = v692;
                                  *(_WORD *)&v1036[18] = 2048;
                                  *(void *)&v1036[20] = v232;
                                  *(_WORD *)&v1036[28] = 2048;
                                  *(void *)&v1036[30] = v605;
                                  _os_log_impl(&dword_1830D4000, v689, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
                                }
                              }
LABEL_1152:
                              if ((*(unsigned char *)(v232 + 158) & 1) == 0)
                              {
                                v698 = __nwlog_obj();
                                if (os_log_type_enabled(v698, OS_LOG_TYPE_DEBUG))
                                {
                                  uint64_t v699 = *(void *)(v232 + 256);
                                  int v700 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                                  if (v699) {
                                    LODWORD(v699) = *(_DWORD *)(v699 + 860);
                                  }
                                  int v701 = *(_DWORD *)(v232 + 424);
                                  *(_DWORD *)buf = 136448258;
                                  *(void *)&uint8_t buf[4] = "nw_http1_start_new_connection_for_stream";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = v232 + 74;
                                  *(_WORD *)&buf[22] = 2080;
                                  uint64_t v1035 = (uint64_t)" ";
                                  *(_WORD *)v1036 = 1024;
                                  *(_DWORD *)&v1036[2] = v700;
                                  *(_WORD *)&v1036[6] = 1024;
                                  *(_DWORD *)&v1036[8] = v699;
                                  *(_WORD *)&v1036[12] = 1024;
                                  *(_DWORD *)&v1036[14] = v701;
                                  *(_WORD *)&v1036[18] = 2048;
                                  *(void *)&v1036[20] = v605;
                                  *(_WORD *)&v1036[28] = 1024;
                                  *(_DWORD *)&v1036[30] = v701;
                                  *(_WORD *)&v1036[34] = 2048;
                                  *(void *)&v1036[36] = v232;
                                  _os_log_impl(&dword_1830D4000, v698, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created new connection %p for stream %u (%p)", buf, 0x4Cu);
                                }
                              }
                              nw_http_transaction_metadata_set_first_on_connection(*(void **)(v232 + 352));
                              uint64_t v702 = nw_protocol_copy_info((uint64_t)v1020, 255);
                              v639 = v702;
                              if (v702
                                && (uint64_t v703 = *(void *)(v702 + 24), *(void *)(v702 + 16) != v703)
                                && (v704 = *(void **)(v703 - 8)) != 0)
                              {
                                v705 = os_retain(v704);
                                v706 = v705;
                                if (v705 && nw_protocol_metadata_is_tls(v705))
                                {
                                  v706 = v706;
                                  nw_http_connection_metadata_set_sec_metadata(*((void **)v605 + 96), v706);
                                  os_release(v706);
                                  nw_protocol_connect((uint64_t)v1020, (uint64_t)v605);
                                  goto LABEL_1166;
                                }
                              }
                              else
                              {
                                v706 = 0;
                              }
                              if (v605)
                              {
                                nw_protocol_connect((uint64_t)v1020, (uint64_t)v605);
                                if (!v706) {
                                  goto LABEL_1167;
                                }
                                goto LABEL_1166;
                              }
                              __nwlog_obj();
                              *(_DWORD *)buf = 136446210;
                              *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                              v865 = (char *)_os_log_send_and_compose_impl();
                              v1049[0] = 16;
                              aBlock[0] = 0;
                              if (__nwlog_fault(v865, v1049, aBlock))
                              {
                                if (v1049[0] == 17)
                                {
                                  v866 = __nwlog_obj();
                                  os_log_type_t v867 = v1049[0];
                                  if (!os_log_type_enabled(v866, (os_log_type_t)v1049[0])) {
                                    goto LABEL_1749;
                                  }
                                  *(_DWORD *)buf = 136446210;
                                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                                  v868 = "%{public}s called with null connection";
LABEL_1748:
                                  _os_log_impl(&dword_1830D4000, v866, v867, v868, buf, 0xCu);
                                  goto LABEL_1749;
                                }
                                if (!aBlock[0])
                                {
                                  v866 = __nwlog_obj();
                                  os_log_type_t v867 = v1049[0];
                                  if (!os_log_type_enabled(v866, (os_log_type_t)v1049[0])) {
                                    goto LABEL_1749;
                                  }
                                  *(_DWORD *)buf = 136446210;
                                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                                  v868 = "%{public}s called with null connection, backtrace limit exceeded";
                                  goto LABEL_1748;
                                }
                                v935 = (char *)__nw_create_backtrace_string();
                                v866 = __nwlog_obj();
                                os_log_type_t v867 = v1049[0];
                                BOOL v936 = os_log_type_enabled(v866, (os_log_type_t)v1049[0]);
                                if (!v935)
                                {
                                  if (!v936) {
                                    goto LABEL_1749;
                                  }
                                  *(_DWORD *)buf = 136446210;
                                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                                  v868 = "%{public}s called with null connection, no backtrace";
                                  goto LABEL_1748;
                                }
                                if (v936)
                                {
                                  *(_DWORD *)buf = 136446466;
                                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = v935;
                                  _os_log_impl(&dword_1830D4000, v866, v867, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
                                }
                                free(v935);
                              }
LABEL_1749:
                              if (v865) {
                                free(v865);
                              }
                              nw_protocol_connect((uint64_t)v1020, 0);
                              uint64_t v11 = v1026;
                              if (!v706)
                              {
LABEL_1167:
                                if (!v639) {
                                  goto LABEL_718;
                                }
                                goto LABEL_1181;
                              }
LABEL_1166:
                              os_release(v706);
                              goto LABEL_1167;
                            }
                            __nwlog_obj();
                            *(_DWORD *)buf = 136446210;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                            v895 = (char *)_os_log_send_and_compose_impl();
                            v1049[0] = 16;
                            aBlock[0] = 0;
                            if (__nwlog_fault(v895, v1049, aBlock))
                            {
                              if (v1049[0] == 17)
                              {
                                v896 = __nwlog_obj();
                                os_log_type_t v897 = v1049[0];
                                if (os_log_type_enabled(v896, (os_log_type_t)v1049[0]))
                                {
                                  *(_DWORD *)buf = 136446210;
                                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                  v898 = "%{public}s called with null http1_stream->protocol_http1";
LABEL_1814:
                                  _os_log_impl(&dword_1830D4000, v896, v897, v898, buf, 0xCu);
                                }
                              }
                              else if (aBlock[0])
                              {
                                v947 = (char *)__nw_create_backtrace_string();
                                v896 = __nwlog_obj();
                                os_log_type_t v897 = v1049[0];
                                BOOL v948 = os_log_type_enabled(v896, (os_log_type_t)v1049[0]);
                                if (v947)
                                {
                                  if (v948)
                                  {
                                    *(_DWORD *)buf = 136446466;
                                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                    *(_WORD *)&unsigned char buf[12] = 2082;
                                    *(void *)&buf[14] = v947;
                                    _os_log_impl(&dword_1830D4000, v896, v897, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                                  }
                                  free(v947);
                                  goto LABEL_1815;
                                }
                                if (v948)
                                {
                                  *(_DWORD *)buf = 136446210;
                                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                  v898 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
                                  goto LABEL_1814;
                                }
                              }
                              else
                              {
                                v896 = __nwlog_obj();
                                os_log_type_t v897 = v1049[0];
                                if (os_log_type_enabled(v896, (os_log_type_t)v1049[0]))
                                {
                                  *(_DWORD *)buf = 136446210;
                                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                  v898 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                                  goto LABEL_1814;
                                }
                              }
                            }
LABEL_1815:
                            if (v895) {
                              free(v895);
                            }
                            uint64_t v11 = v1026;
                            uint64_t v232 = v1025;
                            goto LABEL_1152;
                          }
                          __nwlog_obj();
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                          v891 = (char *)_os_log_send_and_compose_impl();
                          v1049[0] = 16;
                          aBlock[0] = 0;
                          if (__nwlog_fault(v891, v1049, aBlock))
                          {
                            if (v1049[0] == 17)
                            {
                              v892 = __nwlog_obj();
                              os_log_type_t v893 = v1049[0];
                              if (!os_log_type_enabled(v892, (os_log_type_t)v1049[0])) {
                                goto LABEL_1808;
                              }
                              *(_DWORD *)buf = 136446210;
                              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                              v894 = "%{public}s called with null parameters";
LABEL_1807:
                              _os_log_impl(&dword_1830D4000, v892, v893, v894, buf, 0xCu);
                              goto LABEL_1808;
                            }
                            if (!aBlock[0])
                            {
                              v892 = __nwlog_obj();
                              os_log_type_t v893 = v1049[0];
                              if (!os_log_type_enabled(v892, (os_log_type_t)v1049[0])) {
                                goto LABEL_1808;
                              }
                              *(_DWORD *)buf = 136446210;
                              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                              v894 = "%{public}s called with null parameters, backtrace limit exceeded";
                              goto LABEL_1807;
                            }
                            v945 = (char *)__nw_create_backtrace_string();
                            v892 = __nwlog_obj();
                            os_log_type_t v893 = v1049[0];
                            BOOL v946 = os_log_type_enabled(v892, (os_log_type_t)v1049[0]);
                            if (!v945)
                            {
                              if (!v946) {
                                goto LABEL_1808;
                              }
                              *(_DWORD *)buf = 136446210;
                              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                              v894 = "%{public}s called with null parameters, no backtrace";
                              goto LABEL_1807;
                            }
                            if (v946)
                            {
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = v945;
                              _os_log_impl(&dword_1830D4000, v892, v893, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
                            }
                            free(v945);
                          }
LABEL_1808:
                          if (v891) {
                            free(v891);
                          }
                          uint64_t v11 = v1026;
                          v610 = (void **)(NWConcrete_nw_resolution_report + 16);
                          v630 = *v615;
                          if (*v615) {
                            goto LABEL_1063;
                          }
                          goto LABEL_1065;
                        }
LABEL_1881:
                        __break(1u);
                        return result;
                      }
                      __nwlog_obj();
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                      v871 = (char *)_os_log_send_and_compose_impl();
                      type[0] = 16;
                      LOBYTE(v1029[0]) = 0;
                      if (__nwlog_fault(v871, type, v1029))
                      {
                        if (type[0] == 17)
                        {
                          v872 = __nwlog_obj();
                          os_log_type_t v873 = type[0];
                          if (!os_log_type_enabled(v872, (os_log_type_t)type[0])) {
                            goto LABEL_1764;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                          v874 = "%{public}s called with null parameters";
                          goto LABEL_1763;
                        }
                        if (!LOBYTE(v1029[0]))
                        {
                          v872 = __nwlog_obj();
                          os_log_type_t v873 = type[0];
                          if (!os_log_type_enabled(v872, (os_log_type_t)type[0])) {
                            goto LABEL_1764;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                          v874 = "%{public}s called with null parameters, backtrace limit exceeded";
                          goto LABEL_1763;
                        }
                        v939 = (char *)__nw_create_backtrace_string();
                        v872 = __nwlog_obj();
                        os_log_type_t v873 = type[0];
                        BOOL v942 = os_log_type_enabled(v872, (os_log_type_t)type[0]);
                        if (!v939)
                        {
                          if (!v942) {
                            goto LABEL_1764;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                          v874 = "%{public}s called with null parameters, no backtrace";
                          goto LABEL_1763;
                        }
                        if (v942)
                        {
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v939;
                          v941 = "%{public}s called with null parameters, dumping backtrace:%{public}s";
                          goto LABEL_1586;
                        }
                        goto LABEL_1587;
                      }
LABEL_1764:
                      if (!v871) {
                        goto LABEL_1766;
                      }
                      goto LABEL_1765;
                    }
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                    v871 = (char *)_os_log_send_and_compose_impl();
                    type[0] = 16;
                    LOBYTE(v1029[0]) = 0;
                    if (!__nwlog_fault(v871, type, v1029)) {
                      goto LABEL_1764;
                    }
                    if (type[0] != 17)
                    {
                      if (!LOBYTE(v1029[0]))
                      {
                        v872 = __nwlog_obj();
                        os_log_type_t v873 = type[0];
                        if (!os_log_type_enabled(v872, (os_log_type_t)type[0])) {
                          goto LABEL_1764;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                        v874 = "%{public}s called with null endpoint, backtrace limit exceeded";
                        goto LABEL_1763;
                      }
                      v939 = (char *)__nw_create_backtrace_string();
                      v872 = __nwlog_obj();
                      os_log_type_t v873 = type[0];
                      BOOL v940 = os_log_type_enabled(v872, (os_log_type_t)type[0]);
                      if (!v939)
                      {
                        if (!v940) {
                          goto LABEL_1764;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                        v874 = "%{public}s called with null endpoint, no backtrace";
                        goto LABEL_1763;
                      }
                      if (v940)
                      {
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v939;
                        v941 = "%{public}s called with null endpoint, dumping backtrace:%{public}s";
LABEL_1586:
                        _os_log_impl(&dword_1830D4000, v872, v873, v941, buf, 0x16u);
                      }
LABEL_1587:
                      free(v939);
                      if (!v871)
                      {
LABEL_1766:
                        __nwlog_obj();
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                        v985 = (char *)_os_log_send_and_compose_impl();
                        v1049[0] = 16;
                        aBlock[0] = 0;
                        if (!__nwlog_fault(v985, v1049, aBlock)) {
                          goto LABEL_1780;
                        }
                        if (v1049[0] == 17)
                        {
                          v986 = __nwlog_obj();
                          os_log_type_t v987 = v1049[0];
                          if (!os_log_type_enabled(v986, (os_log_type_t)v1049[0])) {
                            goto LABEL_1780;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          v988 = "%{public}s called with null http1_connection";
                        }
                        else if (aBlock[0])
                        {
                          v989 = (char *)__nw_create_backtrace_string();
                          v986 = __nwlog_obj();
                          os_log_type_t v987 = v1049[0];
                          BOOL v990 = os_log_type_enabled(v986, (os_log_type_t)v1049[0]);
                          if (v989)
                          {
                            if (v990)
                            {
                              *(_DWORD *)buf = 136446466;
                              *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = v989;
                              _os_log_impl(&dword_1830D4000, v986, v987, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                            }
                            free(v989);
LABEL_1780:
                            if (v985) {
                              free(v985);
                            }
                            __nwlog_obj();
                            *(_DWORD *)buf = 136446210;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                            v991 = (char *)_os_log_send_and_compose_impl();
                            v1049[0] = 16;
                            aBlock[0] = 0;
                            if (!__nwlog_fault(v991, v1049, aBlock)) {
                              goto LABEL_1796;
                            }
                            if (v1049[0] == 17)
                            {
                              v992 = __nwlog_obj();
                              os_log_type_t v993 = v1049[0];
                              if (os_log_type_enabled(v992, (os_log_type_t)v1049[0]))
                              {
                                *(_DWORD *)buf = 136446210;
                                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                v994 = "%{public}s called with null http1_connection";
LABEL_1795:
                                _os_log_impl(&dword_1830D4000, v992, v993, v994, buf, 0xCu);
                              }
                            }
                            else if (aBlock[0])
                            {
                              v995 = (char *)__nw_create_backtrace_string();
                              v992 = __nwlog_obj();
                              os_log_type_t v993 = v1049[0];
                              BOOL v996 = os_log_type_enabled(v992, (os_log_type_t)v1049[0]);
                              if (v995)
                              {
                                if (v996)
                                {
                                  *(_DWORD *)buf = 136446466;
                                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                  *(_WORD *)&unsigned char buf[12] = 2082;
                                  *(void *)&buf[14] = v995;
                                  _os_log_impl(&dword_1830D4000, v992, v993, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                                }
                                free(v995);
                                goto LABEL_1796;
                              }
                              if (v996)
                              {
                                *(_DWORD *)buf = 136446210;
                                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                v994 = "%{public}s called with null http1_connection, no backtrace";
                                goto LABEL_1795;
                              }
                            }
                            else
                            {
                              v992 = __nwlog_obj();
                              os_log_type_t v993 = v1049[0];
                              if (os_log_type_enabled(v992, (os_log_type_t)v1049[0]))
                              {
                                *(_DWORD *)buf = 136446210;
                                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                                v994 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                                goto LABEL_1795;
                              }
                            }
LABEL_1796:
                            if (v991) {
                              free(v991);
                            }
                            v605 = 0;
                            uint64_t v11 = v1026;
                            goto LABEL_1152;
                          }
                          if (!v990) {
                            goto LABEL_1780;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          v988 = "%{public}s called with null http1_connection, no backtrace";
                        }
                        else
                        {
                          v986 = __nwlog_obj();
                          os_log_type_t v987 = v1049[0];
                          if (!os_log_type_enabled(v986, (os_log_type_t)v1049[0])) {
                            goto LABEL_1780;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          v988 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                        }
                        _os_log_impl(&dword_1830D4000, v986, v987, v988, buf, 0xCu);
                        goto LABEL_1780;
                      }
LABEL_1765:
                      free(v871);
                      goto LABEL_1766;
                    }
                    v872 = __nwlog_obj();
                    os_log_type_t v873 = type[0];
                    if (!os_log_type_enabled(v872, (os_log_type_t)type[0])) {
                      goto LABEL_1764;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                    v874 = "%{public}s called with null endpoint";
                  }
                  else
                  {
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                    v871 = (char *)_os_log_send_and_compose_impl();
                    type[0] = 16;
                    LOBYTE(v1029[0]) = 0;
                    if (!__nwlog_fault(v871, type, v1029)) {
                      goto LABEL_1764;
                    }
                    if (type[0] != 17)
                    {
                      if (!LOBYTE(v1029[0]))
                      {
                        v872 = __nwlog_obj();
                        os_log_type_t v873 = type[0];
                        if (!os_log_type_enabled(v872, (os_log_type_t)type[0])) {
                          goto LABEL_1764;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                        v874 = "%{public}s called with null output_handler, backtrace limit exceeded";
                        goto LABEL_1763;
                      }
                      v937 = (char *)__nw_create_backtrace_string();
                      v872 = __nwlog_obj();
                      os_log_type_t v873 = type[0];
                      BOOL v938 = os_log_type_enabled(v872, (os_log_type_t)type[0]);
                      if (!v937)
                      {
                        if (!v938) {
                          goto LABEL_1764;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                        v874 = "%{public}s called with null output_handler, no backtrace";
                        goto LABEL_1763;
                      }
                      if (v938)
                      {
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v937;
                        _os_log_impl(&dword_1830D4000, v872, v873, "%{public}s called with null output_handler, dumping backtrace:%{public}s", buf, 0x16u);
                      }
                      free(v937);
                      goto LABEL_1764;
                    }
                    v872 = __nwlog_obj();
                    os_log_type_t v873 = type[0];
                    if (!os_log_type_enabled(v872, (os_log_type_t)type[0])) {
                      goto LABEL_1764;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                    v874 = "%{public}s called with null output_handler";
                  }
LABEL_1763:
                  _os_log_impl(&dword_1830D4000, v872, v873, v874, buf, 0xCu);
                  goto LABEL_1764;
                }
                v639 = nw_parameters_copy_default_protocol_stack(*(nw_parameters_t *)(v232 + 320));
                uint64_t v1030 = 0;
                v1031 = &v1030;
                uint64_t v1032 = 0x2000000000;
                char v1033 = 0;
                *(void *)v1049 = 0;
                *(void *)&v1049[8] = v1049;
                *(void *)&v1049[16] = 0x3802000000;
                v1050 = __Block_byref_object_copy__40335;
                v1051 = __Block_byref_object_dispose__40336;
                v1052 = 0;
                LOBYTE(v1053) = v1053 | 1;
                *(void *)aBlock = MEMORY[0x1E4F143A8];
                *(void *)&aBlock[8] = 0x40000000;
                *(void *)&aBlock[16] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke;
                v1045 = &unk_1E5241318;
                v1046 = &v1030;
                v1047 = v1049;
                uint64_t v1048 = v232;
                nw_protocol_stack_iterate_application_protocols(v639, aBlock);
                if (*(void *)(*(void *)&v1049[8] + 40)) {
                  goto LABEL_1076;
                }
                long long v640 = nw_protocol_stack_copy_transport_protocol(v639);
                BOOL is_quic = nw_protocol_options_is_quic(v640);
                if (v640) {
                  os_release(v640);
                }
                if (!is_quic)
                {
LABEL_1076:
                  *(void *)buf = nw_parameters_shallow_copy(*(void **)(v232 + 320));
                  nw::retained_ptr<nw_endpoint *>::operator=(v232 + 320, buf);
                }
                else
                {
                  int v642 = *(void **)(v232 + 320);
                  *(void *)buf = MEMORY[0x1E4F143A8];
                  *(void *)&buf[8] = 0x40000000;
                  *(void *)&buf[16] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_2;
                  uint64_t v1035 = (uint64_t)&unk_1E5241368;
                  *(void *)v1036 = v1049;
                  *(void *)&v1036[8] = &v1030;
                  *(void *)&v1036[16] = v232;
                  *(void *)&v1036[24] = v11;
                  nw_parameters_enumerate_transformed_parameters(v642, buf);
                }
                uint64_t v643 = *(void **)(*(void *)&v1049[8] + 40);
                if (v643)
                {
                  v644 = v643;
                  sec_protocol_options_clear_tls_application_protocols();
                  sec_protocol_options_add_tls_application_protocol(v644, "http/1.1");
                  os_release(v644);
                }
                *((unsigned char *)v1031 + 24) = 0;
                v645 = *(void **)(v232 + 320);
                v1029[0] = MEMORY[0x1E4F143A8];
                v1029[1] = 0x40000000;
                v1029[2] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_77;
                v1029[3] = &unk_1E5241390;
                v1029[4] = &v1030;
                v1029[5] = v232;
                nw_parameters_remove_application_protocol_options_from_protocol_stack(v645, v1029);
                *(_WORD *)(v232 + 428) |= 8u;
                uint64_t v646 = *(unsigned int *)(v11 + 352) + 1;
                uint64_t v647 = v646 << 31 >> 31;
                *(_DWORD *)(v11 + 352) = v646;
                if (v647 == v646 && (v647 & 0x8000000000000000) == 0)
                {
LABEL_1177:
                  uint64_t v709 = *(void *)(v232 + 312);
                  v710 = *(void **)(v232 + 264);
                  *(void *)os_log_type_t type = MEMORY[0x1E4F143A8];
                  *(void *)&os_log_type_t type[8] = 0x40000000;
                  *(void *)&type[16] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_80;
                  uint64_t v1040 = (uint64_t)&unk_1E52413B8;
                  *(void *)v1041 = v709;
                  nw_queue_context_async(v710, type);
                  _Block_object_dispose(v1049, 8);
                  if ((v1053 & 1) != 0 && v1052) {
                    os_release(v1052);
                  }
                  _Block_object_dispose(&v1030, 8);
                  if (!v639) {
                    goto LABEL_718;
                  }
LABEL_1181:
                  os_release(v639);
                  goto LABEL_718;
                }
                __nwlog_obj();
                uint64_t v648 = *(unsigned int *)(v11 + 352);
                *(_DWORD *)os_log_type_t type = 136446978;
                *(void *)&type[4] = "nw_http1_establish_new_connection_for_stream";
                *(_WORD *)&type[12] = 2082;
                *(void *)&type[14] = "http1->pending_output_handler_count";
                *(_WORD *)&type[22] = 2048;
                uint64_t v1040 = 1;
                *(_WORD *)v1041 = 2048;
                *(void *)&v1041[2] = v648;
                v649 = (char *)_os_log_send_and_compose_impl();
                os_log_type_t v1028 = OS_LOG_TYPE_ERROR;
                char v1027 = 0;
                if (__nwlog_fault(v649, &v1028, &v1027))
                {
                  if (v1028 == OS_LOG_TYPE_FAULT)
                  {
                    v650 = __nwlog_obj();
                    os_log_type_t v651 = v1028;
                    if (os_log_type_enabled(v650, v1028))
                    {
                      uint64_t v652 = *(unsigned int *)(v1026 + 352);
                      *(_DWORD *)os_log_type_t type = 136446978;
                      *(void *)&type[4] = "nw_http1_establish_new_connection_for_stream";
                      *(_WORD *)&type[12] = 2082;
                      *(void *)&type[14] = "http1->pending_output_handler_count";
                      *(_WORD *)&type[22] = 2048;
                      uint64_t v1040 = 1;
                      *(_WORD *)v1041 = 2048;
                      *(void *)&v1041[2] = v652;
                      v653 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_1173:
                      _os_log_impl(&dword_1830D4000, v650, v651, v653, type, 0x2Au);
                    }
                  }
                  else if (v1027)
                  {
                    v657 = (char *)__nw_create_backtrace_string();
                    v650 = __nwlog_obj();
                    os_log_type_t v651 = v1028;
                    BOOL v658 = os_log_type_enabled(v650, v1028);
                    if (v657)
                    {
                      if (v658)
                      {
                        uint64_t v659 = *(unsigned int *)(v1026 + 352);
                        *(_DWORD *)os_log_type_t type = 136447234;
                        *(void *)&type[4] = "nw_http1_establish_new_connection_for_stream";
                        *(_WORD *)&type[12] = 2082;
                        *(void *)&type[14] = "http1->pending_output_handler_count";
                        *(_WORD *)&type[22] = 2048;
                        uint64_t v1040 = 1;
                        *(_WORD *)v1041 = 2048;
                        *(void *)&v1041[2] = v659;
                        __int16 v1042 = 2082;
                        v1043 = v657;
                        _os_log_impl(&dword_1830D4000, v650, v651, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", type, 0x34u);
                      }
                      free(v657);
                      goto LABEL_1174;
                    }
                    if (v658)
                    {
                      uint64_t v708 = *(unsigned int *)(v1026 + 352);
                      *(_DWORD *)os_log_type_t type = 136446978;
                      *(void *)&type[4] = "nw_http1_establish_new_connection_for_stream";
                      *(_WORD *)&type[12] = 2082;
                      *(void *)&type[14] = "http1->pending_output_handler_count";
                      *(_WORD *)&type[22] = 2048;
                      uint64_t v1040 = 1;
                      *(_WORD *)v1041 = 2048;
                      *(void *)&v1041[2] = v708;
                      v653 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                      goto LABEL_1173;
                    }
                  }
                  else
                  {
                    v650 = __nwlog_obj();
                    os_log_type_t v651 = v1028;
                    if (os_log_type_enabled(v650, v1028))
                    {
                      uint64_t v707 = *(unsigned int *)(v1026 + 352);
                      *(_DWORD *)os_log_type_t type = 136446978;
                      *(void *)&type[4] = "nw_http1_establish_new_connection_for_stream";
                      *(_WORD *)&type[12] = 2082;
                      *(void *)&type[14] = "http1->pending_output_handler_count";
                      *(_WORD *)&type[22] = 2048;
                      uint64_t v1040 = 1;
                      *(_WORD *)v1041 = 2048;
                      *(void *)&v1041[2] = v707;
                      v653 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                      goto LABEL_1173;
                    }
                  }
                }
LABEL_1174:
                if (v649) {
                  free(v649);
                }
                uint64_t v11 = v1026;
                *(_DWORD *)(v1026 + 352) = -1;
                goto LABEL_1177;
              }
              if ((*(unsigned char *)(v11 + 158) & 1) == 0)
              {
                if (*((unsigned char *)p_cache + 3665))
                {
                  v922 = __nwlog_obj();
                  if (os_log_type_enabled(v922, OS_LOG_TYPE_DEBUG))
                  {
                    int v923 = *(_DWORD *)(v11 + 372);
                    int v924 = *(_DWORD *)(v232 + 424);
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v11 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v1035 = (uint64_t)" ";
                    *(_WORD *)v1036 = 1024;
                    *(_DWORD *)&v1036[2] = v923;
                    *(_WORD *)&v1036[6] = 1024;
                    *(_DWORD *)&v1036[8] = v924;
                    *(_WORD *)&v1036[12] = 2048;
                    *(void *)&v1036[14] = v232;
                    _os_log_impl(&dword_1830D4000, v922, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream %u (%p)", buf, 0x36u);
                  }
                }
              }
              if ((*(_WORD *)(v232 + 428) & 0x1000) == 0)
              {
                __nwlog_obj();
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v232;
                uint64_t v279 = (char *)_os_log_send_and_compose_impl();
                v1049[0] = 16;
                aBlock[0] = 0;
                if (!__nwlog_fault(v279, v1049, aBlock)) {
                  goto LABEL_897;
                }
                if (v1049[0] == 17)
                {
                  int v280 = __nwlog_obj();
                  os_log_type_t v281 = v1049[0];
                  if (!os_log_type_enabled(v280, (os_log_type_t)v1049[0])) {
                    goto LABEL_897;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v232;
                  int v282 = "%{public}s stream %p not in pending list, cannot remove";
                }
                else if (aBlock[0])
                {
                  os_log_type_t v422 = (char *)__nw_create_backtrace_string();
                  int v280 = __nwlog_obj();
                  os_log_type_t v281 = v1049[0];
                  BOOL v423 = os_log_type_enabled(v280, (os_log_type_t)v1049[0]);
                  if (v422)
                  {
                    if (v423)
                    {
                      *(_DWORD *)buf = 136446722;
                      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v232;
                      *(_WORD *)&buf[22] = 2082;
                      uint64_t v1035 = (uint64_t)v422;
                      _os_log_impl(&dword_1830D4000, v280, v281, "%{public}s stream %p not in pending list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
                    }
                    free(v422);
                    goto LABEL_897;
                  }
                  if (!v423)
                  {
LABEL_897:
                    if (v279) {
                      free(v279);
                    }
                    goto LABEL_1017;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v232;
                  int v282 = "%{public}s stream %p not in pending list, cannot remove, no backtrace";
                }
                else
                {
                  int v280 = __nwlog_obj();
                  os_log_type_t v281 = v1049[0];
                  if (!os_log_type_enabled(v280, (os_log_type_t)v1049[0])) {
                    goto LABEL_897;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v232;
                  int v282 = "%{public}s stream %p not in pending list, cannot remove, backtrace limit exceeded";
                }
                _os_log_impl(&dword_1830D4000, v280, v281, v282, buf, 0x16u);
                goto LABEL_897;
              }
              uint64_t v368 = *(void *)(v232 + 296);
              uint64_t v369 = *(void **)(v232 + 304);
              if (v368)
              {
                *(void *)(v368 + 304) = v369;
                uint64_t v369 = *(void **)(v232 + 304);
              }
              else
              {
                *(void *)(v11 + 256) = v369;
              }
              void *v369 = v368;
              *(void *)(v232 + 296) = 0;
              *(void *)(v232 + 304) = 0;
              int v434 = *(_DWORD *)(v11 + 348);
              *(_DWORD *)(v11 + 348) = v434 - 1;
              if (v434)
              {
LABEL_1015:
                *(_WORD *)(v232 + 428) &= ~0x1000u;
                if ((*(unsigned char *)(v232 + 158) & 1) == 0)
                {
                  if (*((unsigned char *)p_cache + 3665))
                  {
                    v949 = __nwlog_obj();
                    if (os_log_type_enabled(v949, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v950 = *(void *)(v232 + 256);
                      int v951 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                      if (v950) {
                        LODWORD(v950) = *(_DWORD *)(v950 + 860);
                      }
                      int v952 = *(_DWORD *)(v232 + 424);
                      uint64_t v11 = v1026;
                      int v953 = *(_DWORD *)(v1026 + 348);
                      *(_DWORD *)buf = 136448258;
                      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v232 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      uint64_t v1035 = (uint64_t)" ";
                      *(_WORD *)v1036 = 1024;
                      *(_DWORD *)&v1036[2] = v951;
                      *(_WORD *)&v1036[6] = 1024;
                      *(_DWORD *)&v1036[8] = v950;
                      *(_WORD *)&v1036[12] = 1024;
                      *(_DWORD *)&v1036[14] = v952;
                      *(_WORD *)&v1036[18] = 1024;
                      *(_DWORD *)&v1036[20] = v952;
                      *(_WORD *)&v1036[24] = 2048;
                      *(void *)&v1036[26] = v232;
                      *(_WORD *)&v1036[34] = 1024;
                      *(_DWORD *)&v1036[36] = v953;
                      _os_log_impl(&dword_1830D4000, v949, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed pending stream %u (%p), now have %u pending streams", buf, 0x48u);
                      p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                    }
                  }
                }
                goto LABEL_1017;
              }
              __nwlog_obj();
              uint64_t v435 = *(unsigned int *)(v11 + 348);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->pending_stream_count";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v1035 = 1;
              *(_WORD *)v1036 = 2048;
              *(void *)&v1036[2] = v435;
              BOOL v436 = (char *)_os_log_send_and_compose_impl();
              v1049[0] = 16;
              aBlock[0] = 0;
              if (__nwlog_fault(v436, v1049, aBlock))
              {
                if (v1049[0] == 17)
                {
                  v437 = __nwlog_obj();
                  os_log_type_t v438 = v1049[0];
                  if (os_log_type_enabled(v437, (os_log_type_t)v1049[0]))
                  {
                    uint64_t v439 = *(unsigned int *)(v11 + 348);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->pending_stream_count";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = 1;
                    *(_WORD *)v1036 = 2048;
                    *(void *)&v1036[2] = v439;
                    uint64_t v440 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_1011:
                    _os_log_impl(&dword_1830D4000, v437, v438, v440, buf, 0x2Au);
                  }
                }
                else if (aBlock[0])
                {
                  int v508 = (char *)__nw_create_backtrace_string();
                  v437 = __nwlog_obj();
                  os_log_type_t v438 = v1049[0];
                  BOOL v509 = os_log_type_enabled(v437, (os_log_type_t)v1049[0]);
                  if (v508)
                  {
                    if (v509)
                    {
                      uint64_t v510 = *(unsigned int *)(v11 + 348);
                      *(_DWORD *)buf = 136447234;
                      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->pending_stream_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v1035 = 1;
                      *(_WORD *)v1036 = 2048;
                      *(void *)&v1036[2] = v510;
                      *(_WORD *)&v1036[10] = 2082;
                      *(void *)&v1036[12] = v508;
                      _os_log_impl(&dword_1830D4000, v437, v438, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                    }
                    free(v508);
                    goto LABEL_1012;
                  }
                  if (v509)
                  {
                    uint64_t v602 = *(unsigned int *)(v11 + 348);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->pending_stream_count";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = 1;
                    *(_WORD *)v1036 = 2048;
                    *(void *)&v1036[2] = v602;
                    uint64_t v440 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
                    goto LABEL_1011;
                  }
                }
                else
                {
                  v437 = __nwlog_obj();
                  os_log_type_t v438 = v1049[0];
                  if (os_log_type_enabled(v437, (os_log_type_t)v1049[0]))
                  {
                    uint64_t v554 = *(unsigned int *)(v11 + 348);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->pending_stream_count";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = 1;
                    *(_WORD *)v1036 = 2048;
                    *(void *)&v1036[2] = v554;
                    uint64_t v440 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
                    goto LABEL_1011;
                  }
                }
              }
LABEL_1012:
              if (v436) {
                free(v436);
              }
              *(_DWORD *)(v11 + 348) = 0;
              p_cache = NWConcrete_nw_resolution_report.cache;
              goto LABEL_1015;
            }
            if (!*(void *)(v232 + 32))
            {
              if (!(*(unsigned char *)(v232 + 158) & 1 | (*((unsigned char *)p_cache + 3665) == 0)))
              {
                os_log_type_t v349 = __nwlog_obj();
                if (os_log_type_enabled(v349, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v350 = *(void *)(v232 + 256);
                  int v351 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                  if (v350) {
                    LODWORD(v350) = *(_DWORD *)(v350 + 860);
                  }
                  int v352 = *(_DWORD *)(v232 + 424);
                  *(_DWORD *)buf = 136447746;
                  *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v232 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v1035 = (uint64_t)" ";
                  *(_WORD *)v1036 = 1024;
                  *(_DWORD *)&v1036[2] = v351;
                  *(_WORD *)&v1036[6] = 1024;
                  *(_DWORD *)&v1036[8] = v350;
                  *(_WORD *)&v1036[12] = 1024;
                  *(_DWORD *)&v1036[14] = v352;
                  *(_WORD *)&v1036[18] = 2048;
                  *(void *)&v1036[20] = v232;
                  _os_log_impl(&dword_1830D4000, v349, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Stream %p still awaiting new output handler", buf, 0x3Cu);
                  uint64_t v11 = v1026;
                }
              }
              goto LABEL_440;
            }
            if (!(*(unsigned char *)(v232 + 158) & 1 | (*((unsigned char *)p_cache + 3665) == 0)))
            {
              v825 = __nwlog_obj();
              if (os_log_type_enabled(v825, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v826 = *(void *)(v232 + 256);
                int v827 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                if (v826) {
                  LODWORD(v826) = *(_DWORD *)(v826 + 860);
                }
                int v828 = *(_DWORD *)(v232 + 424);
                uint64_t v829 = *(void *)(v232 + 32);
                *(_DWORD *)buf = 136448002;
                *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v232 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v1035 = (uint64_t)" ";
                *(_WORD *)v1036 = 1024;
                *(_DWORD *)&v1036[2] = v827;
                *(_WORD *)&v1036[6] = 1024;
                *(_DWORD *)&v1036[8] = v826;
                *(_WORD *)&v1036[12] = 1024;
                *(_DWORD *)&v1036[14] = v828;
                *(_WORD *)&v1036[18] = 2048;
                *(void *)&v1036[20] = v232;
                *(_WORD *)&v1036[28] = 2048;
                *(void *)&v1036[30] = v829;
                _os_log_impl(&dword_1830D4000, v825, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> creating connection for stream %p with new output_handler %p", buf, 0x46u);
              }
            }
            v1019 = *(_OWORD **)(v232 + 32);
            if (v1019)
            {
              int v285 = *(void **)(v232 + 336);
              if (v285)
              {
                int v286 = *(void **)(v232 + 320);
                if (v286)
                {
                  unsigned int v287 = malloc_type_calloc(1uLL, 0x370uLL, 0xEAFB8F1AuLL);
                  if (!v287)
                  {
                    v830 = __nwlog_obj();
                    os_log_type_enabled(v830, OS_LOG_TYPE_ERROR);
                    *(_DWORD *)buf = 136446722;
                    *(void *)&uint8_t buf[4] = "strict_calloc";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = 1;
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = 880;
                    v831 = (void *)_os_log_send_and_compose_impl();
                    BOOL result = __nwlog_abort((uint64_t)v831);
                    if (result) {
                      goto LABEL_1881;
                    }
                    free(v831);
                  }
                  bzero(v287, 0x370uLL);
                  if (nw_protocol_http1_identifier::onceToken != -1) {
                    dispatch_once(&nw_protocol_http1_identifier::onceToken, &__block_literal_global_40283);
                  }
                  *((void *)v287 + 2) = &nw_protocol_http1_identifier::http1_protocol_identifier;
                  if (nw_protocol_http1_get_callbacks(void)::onceToken != -1) {
                    dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
                  }
                  *((void *)v287 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
                  *((_DWORD *)v287 + 46) = 3;
                  *((void *)v287 + 22) = v287;
                  *((void *)v287 + 5) = v287 + 10;
                  *((void *)v287 + 60) = v1026;
                  nw_protocol_set_output_handler((uint64_t)v287, (uint64_t)v1019);
                  *(void *)buf = os_retain(v285);
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v287 + 47), buf);
                  *(void *)buf = os_retain(v286);
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v287 + 46), buf);
                  *(void *)buf = nw_parameters_copy_context(v286);
                  uint64_t v11 = v1026;
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v287 + 31), buf);
                  *((void *)v287 + 24) = *(void *)(v1026 + 192);
                  BOOL v288 = (void *)*((void *)v287 + 62);
                  *(void *)v1049 = MEMORY[0x1E4F143A8];
                  *(void *)&v1049[8] = 0x40000000;
                  *(void *)&v1049[16] = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke;
                  v1050 = (uint64_t (*)(uint64_t, uint64_t))&__block_descriptor_tmp_43_40284;
                  v1051 = (void (*)(uint64_t))v287;
                  *(void *)buf = nw_http_connection_create_metadata(v288, v1049, 0);
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v287 + 48), buf);
                  nw_http_connection_metadata_set_version(*((void **)v287 + 96), 3);
                  nw_http_connection_metadata_set_shared_connection_pool_metadata(*((void **)v287 + 96), *(void **)(v1026 + 312));
                  *((void *)v287 + 77) = 0;
                  *((void *)v287 + 78) = (char *)v287 + 616;
                  *((void *)v287 + 79) = 0;
                  *((void *)v287 + 80) = (char *)v287 + 632;
                  *((void *)v287 + 81) = 0;
                  *((void *)v287 + 82) = (char *)v287 + 648;
                  *((void *)v287 + 83) = 0;
                  *((void *)v287 + 84) = (char *)v287 + 664;
                  *((void *)v287 + 86) = (char *)v287 + 680;
                  *((void *)v287 + 85) = 0;
                  nw_frame_cache_init((uint64_t)v287 + 696, (uint64_t)v287, 256, 0x40000, 16);
                  uint64_t v289 = *((void *)v287 + 60);
                  if (v289)
                  {
                    *(_OWORD *)((char *)v287 + 360) = 0u;
                    *(_OWORD *)((char *)v287 + 376) = 0u;
                    *(_OWORD *)((char *)v287 + 392) = 0u;
                    *(_OWORD *)((char *)v287 + 408) = 0u;
                    *(_OWORD *)((char *)v287 + 424) = 0u;
                    *(_OWORD *)((char *)v287 + 440) = 0u;
                    *(_OWORD *)((char *)v287 + 328) = 0u;
                    *(_OWORD *)((char *)v287 + 344) = 0u;
                    *((void *)v287 + 37) = nw_http1_on_message_begin;
                    *((void *)v287 + 48) = nw_http1_on_message_complete;
                    *((void *)v287 + 46) = nw_http1_on_headers_complete;
                    *((void *)v287 + 59) = nw_http1_on_reset;
                    *((void *)v287 + 40) = nw_http1_on_method;
                    *((void *)v287 + 51) = nw_http1_on_method_complete;
                    *((void *)v287 + 38) = nw_http1_on_url;
                    *((void *)v287 + 49) = nw_http1_on_url_complete;
                    *((void *)v287 + 39) = nw_http1_on_status;
                    *((void *)v287 + 50) = nw_http1_on_status_complete;
                    *((void *)v287 + 42) = nw_http1_on_header_field;
                    *((void *)v287 + 53) = nw_http1_on_header_field_complete;
                    *((void *)v287 + 43) = nw_http1_on_header_value;
                    *((void *)v287 + 54) = nw_http1_on_header_value_complete;
                    *((void *)v287 + 47) = nw_http1_on_body;
                    *((void *)v287 + 57) = nw_http1_on_chunk_header;
                    *((void *)v287 + 58) = nw_http1_on_chunk_complete;
                    char v290 = *(unsigned char *)(v289 + 376);
                    *(_OWORD *)((char *)v287 + 248) = 0u;
                    *(_OWORD *)((char *)v287 + 200) = 0u;
                    *(_OWORD *)((char *)v287 + 264) = 0u;
                    *(_OWORD *)((char *)v287 + 232) = 0u;
                    *(_OWORD *)((char *)v287 + 216) = 0u;
                    if (v290) {
                      char v291 = 1;
                    }
                    else {
                      char v291 = 2;
                    }
                    *((unsigned char *)v287 + 272) = v291;
                    *((void *)v287 + 35) = 0;
                    *((void *)v287 + 36) = (char *)v287 + 296;
                    *((_WORD *)v287 + 139) = 16131;
                    *((void *)v287 + 31) = v287;
                    *((void *)v287 + 32) = 238;
                    os_log_type_t v292 = NWConcrete_nw_resolution_report.cache;
                    if ((*((unsigned char *)v287 + 158) & 1) == 0)
                    {
                      BOOL v293 = __nwlog_obj();
                      if (os_log_type_enabled(v293, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v294 = *((void *)v287 + 61);
                        int v295 = *(_DWORD *)(*((void *)v287 + 60) + 372);
                        int v296 = *((_DWORD *)v287 + 215);
                        if (v294) {
                          LODWORD(v294) = *(_DWORD *)(v294 + 424);
                        }
                        *(_DWORD *)buf = 136448258;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_log_parser_version";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = (char *)v287 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v1035 = (uint64_t)" ";
                        *(_WORD *)v1036 = 1024;
                        *(_DWORD *)&v1036[2] = v295;
                        *(_WORD *)&v1036[6] = 1024;
                        *(_DWORD *)&v1036[8] = v296;
                        *(_WORD *)&v1036[12] = 1024;
                        *(_DWORD *)&v1036[14] = v294;
                        *(_WORD *)&v1036[18] = 1024;
                        *(_DWORD *)&v1036[20] = 9;
                        *(_WORD *)&v1036[24] = 1024;
                        *(_DWORD *)&v1036[26] = 2;
                        *(_WORD *)&v1036[30] = 1024;
                        *(_DWORD *)&v1036[32] = 1;
                        _os_log_impl(&dword_1830D4000, v293, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using http parser v%u.%u.%u", buf, 0x44u);
                      }
                    }
                    goto LABEL_509;
                  }
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                  v832 = (char *)_os_log_send_and_compose_impl();
                  type[0] = 16;
                  LOBYTE(v1029[0]) = 0;
                  if (__nwlog_fault(v832, type, v1029))
                  {
                    if (type[0] == 17)
                    {
                      v833 = __nwlog_obj();
                      os_log_type_t v834 = type[0];
                      if (os_log_type_enabled(v833, (os_log_type_t)type[0]))
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                        v835 = "%{public}s called with null http1_connection->protocol_http1";
LABEL_1689:
                        _os_log_impl(&dword_1830D4000, v833, v834, v835, buf, 0xCu);
                      }
                    }
                    else if (LOBYTE(v1029[0]))
                    {
                      v909 = (char *)__nw_create_backtrace_string();
                      v833 = __nwlog_obj();
                      os_log_type_t v834 = type[0];
                      BOOL v910 = os_log_type_enabled(v833, (os_log_type_t)type[0]);
                      if (v909)
                      {
                        if (v910)
                        {
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v909;
                          _os_log_impl(&dword_1830D4000, v833, v834, "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                        }
                        free(v909);
                        goto LABEL_1690;
                      }
                      if (v910)
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                        v835 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
                        goto LABEL_1689;
                      }
                    }
                    else
                    {
                      v833 = __nwlog_obj();
                      os_log_type_t v834 = type[0];
                      if (os_log_type_enabled(v833, (os_log_type_t)type[0]))
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                        v835 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
                        goto LABEL_1689;
                      }
                    }
                  }
LABEL_1690:
                  if (v832) {
                    free(v832);
                  }
                  uint64_t v11 = v1026;
                  os_log_type_t v292 = (void **)(NWConcrete_nw_resolution_report + 16);
LABEL_509:
                  *(void *)buf = 0;
                  *(void *)&buf[8] = buf;
                  *(void *)&buf[16] = 0x2000000000;
                  uint64_t v1035 = (uint64_t)v287;
                  *(void *)aBlock = MEMORY[0x1E4F143A8];
                  *(void *)&aBlock[8] = 0x40000000;
                  *(void *)&aBlock[16] = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke_2;
                  v1045 = &unk_1E5241178;
                  v1046 = (uint64_t *)buf;
                  *((void *)v287 + 76) = _Block_copy(aBlock);
                  _Block_object_dispose(buf, 8);
                  if ((*((unsigned char *)v287 + 158) & 1) == 0)
                  {
                    if (*((unsigned char *)v292 + 3665))
                    {
                      v844 = __nwlog_obj();
                      if (os_log_type_enabled(v844, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v845 = *((void *)v287 + 61);
                        int v846 = *(_DWORD *)(*((void *)v287 + 60) + 372);
                        int v847 = *((_DWORD *)v287 + 215);
                        if (v845) {
                          LODWORD(v845) = *(_DWORD *)(v845 + 424);
                        }
                        *(_DWORD *)buf = 136447746;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = (char *)v287 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v1035 = (uint64_t)" ";
                        *(_WORD *)v1036 = 1024;
                        *(_DWORD *)&v1036[2] = v846;
                        *(_WORD *)&v1036[6] = 1024;
                        *(_DWORD *)&v1036[8] = v847;
                        *(_WORD *)&v1036[12] = 1024;
                        *(_DWORD *)&v1036[14] = v845;
                        *(_WORD *)&v1036[18] = 2048;
                        *(void *)&v1036[20] = v287;
                        _os_log_impl(&dword_1830D4000, v844, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created %p", buf, 0x3Cu);
                        uint64_t v11 = v1026;
                      }
                    }
                  }
                  uint64_t v297 = (NSObject **)(v287 + 32);
                  uint64_t v1024 = v232;
                  nw_protocol_replace_input_handler((uint64_t)v1019, v232, (uint64_t)v287);
                  *unsigned int v287 = *v1019;
                  int v298 = (void *)*((void *)v287 + 92);
                  if (v298)
                  {
                    if (!*((void *)v287 + 66))
                    {
                      int v299 = (void **)(v287 + 35);
                      id v300 = nw_parameters_copy_context(*((void **)v287 + 92));
                      *(void *)buf = nw_path_copy_flow_registration(v300, (uint64_t)v287);
                      nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v287 + 35), buf);
                      int v301 = (void *)*((void *)v287 + 70);
                      if (v301)
                      {
                        id v302 = nw_path_flow_registration_copy_endpoint(v301);
                        id v303 = nw_path_flow_registration_copy_parameters(*v299);
                        *(void *)buf = nw_endpoint_copy_association_with_evaluator(v302, v303, 0);
                        nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v287 + 33), buf);
                        if (*((void *)v287 + 66))
                        {
                          *(void *)buf = nw_protocol_instance_stub_create((nw_protocol *)v287);
                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v287 + 34), buf);
                          nw_association_register_internal(*((void **)v287 + 66), v298, *((void **)v287 + 68), 0, 0, &__block_literal_global_69);
                          id v304 = nw_association_copy_current_path(*((void **)v287 + 66), v303);
                          if (v304)
                          {
                            BOOL v305 = v304;
                            uint64_t v306 = nw_path_copy_for_flow_registration(v304, *v299);
                            if (v306)
                            {
                              uint64_t v307 = v306;
                              if (*v297 != v306)
                              {
                                *(void *)buf = os_retain(v306);
                                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v287 + 32), buf);
                              }
                              if (nw_path_has_flows(v307)) {
                                __int16 v308 = 4096;
                              }
                              else {
                                __int16 v308 = 0;
                              }
                              int v309 = *((_WORD *)v287 + 436) & 0xEFFF | (*((unsigned __int8 *)v287 + 874) << 16);
                              *((_WORD *)v287 + 436) = *((_WORD *)v287 + 436) & 0xEFFF | v308;
                              *((unsigned char *)v287 + 874) = BYTE2(v309);
                              id v310 = nw_parameters_copy_effective_proxy_config(v298);
                              if (v310)
                              {
                                uint64_t v311 = v310;
                                if (nw_path_has_proxy_config(v305, v310))
                                {
                                  *(void *)buf = os_retain(v311);
                                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v287 + 36), buf);
                                }
                                os_release(v311);
                              }
                              os_release(v307);
                            }
                            os_release(v305);
                          }
                        }
                        if (v303) {
                          os_release(v303);
                        }
                        uint64_t v11 = v1026;
                        if (v302) {
                          os_release(v302);
                        }
                      }
                      os_log_type_t v292 = (void **)(NWConcrete_nw_resolution_report + 16);
                      if (v300) {
                        os_release(v300);
                      }
                    }
                    int v312 = *v297;
                    if (*v297)
                    {
LABEL_535:
                      if (nw_path_uses_interface_type(v312, nw_interface_type_cellular)) {
                        *((void *)v287 + 24) = 1000;
                      }
                    }
LABEL_537:
                    uint64_t v313 = *(unsigned int *)(v11 + 336) + 1;
                    uint64_t v314 = v313 << 31 >> 31;
                    *(_DWORD *)(v11 + 336) = v313;
                    uint64_t v232 = v1024;
                    if (v314 == v313 && (v314 & 0x8000000000000000) == 0) {
                      goto LABEL_771;
                    }
                    __nwlog_obj();
                    uint64_t v315 = *(unsigned int *)(v11 + 336);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->connections_count";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = 1;
                    *(_WORD *)v1036 = 2048;
                    *(void *)&v1036[2] = v315;
                    int v316 = (char *)_os_log_send_and_compose_impl();
                    v1049[0] = 16;
                    aBlock[0] = 0;
                    if (__nwlog_fault(v316, v1049, aBlock))
                    {
                      if (v1049[0] == 17)
                      {
                        int v317 = __nwlog_obj();
                        os_log_type_t v318 = v1049[0];
                        if (os_log_type_enabled(v317, (os_log_type_t)v1049[0]))
                        {
                          uint64_t v319 = *(unsigned int *)(v1026 + 336);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->connections_count";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v319;
                          os_log_type_t v320 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_767:
                          _os_log_impl(&dword_1830D4000, v317, v318, v320, buf, 0x2Au);
                        }
                      }
                      else if (aBlock[0])
                      {
                        int v365 = (char *)__nw_create_backtrace_string();
                        int v317 = __nwlog_obj();
                        os_log_type_t v318 = v1049[0];
                        BOOL v366 = os_log_type_enabled(v317, (os_log_type_t)v1049[0]);
                        if (v365)
                        {
                          if (v366)
                          {
                            uint64_t v367 = *(unsigned int *)(v1026 + 336);
                            *(_DWORD *)buf = 136447234;
                            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->connections_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v367;
                            *(_WORD *)&v1036[10] = 2082;
                            *(void *)&v1036[12] = v365;
                            _os_log_impl(&dword_1830D4000, v317, v318, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                          }
                          free(v365);
                          os_log_type_t v292 = (void **)(NWConcrete_nw_resolution_report + 16);
                          goto LABEL_768;
                        }
                        os_log_type_t v292 = (void **)(NWConcrete_nw_resolution_report + 16);
                        if (v366)
                        {
                          uint64_t v445 = *(unsigned int *)(v1026 + 336);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->connections_count";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v445;
                          os_log_type_t v320 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                          goto LABEL_767;
                        }
                      }
                      else
                      {
                        int v317 = __nwlog_obj();
                        os_log_type_t v318 = v1049[0];
                        if (os_log_type_enabled(v317, (os_log_type_t)v1049[0]))
                        {
                          uint64_t v424 = *(unsigned int *)(v1026 + 336);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->connections_count";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v424;
                          os_log_type_t v320 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                          goto LABEL_767;
                        }
                      }
                    }
LABEL_768:
                    if (v316) {
                      free(v316);
                    }
                    uint64_t v11 = v1026;
                    *(_DWORD *)(v1026 + 336) = -1;
LABEL_771:
                    uint64_t v446 = *(unsigned int *)(v11 + 360) + 1;
                    uint64_t v447 = v446 << 31 >> 31;
                    *(_DWORD *)(v11 + 360) = v446;
                    if (v447 == v446 && (v447 & 0x8000000000000000) == 0) {
                      goto LABEL_790;
                    }
                    __nwlog_obj();
                    uint64_t v448 = *(unsigned int *)(v11 + 360);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->next_connection_log_num";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = 1;
                    *(_WORD *)v1036 = 2048;
                    *(void *)&v1036[2] = v448;
                    size_t v449 = (char *)_os_log_send_and_compose_impl();
                    v1049[0] = 16;
                    aBlock[0] = 0;
                    if (__nwlog_fault(v449, v1049, aBlock))
                    {
                      if (v1049[0] == 17)
                      {
                        uint64_t v450 = __nwlog_obj();
                        os_log_type_t v451 = v1049[0];
                        if (os_log_type_enabled(v450, (os_log_type_t)v1049[0]))
                        {
                          uint64_t v452 = *(unsigned int *)(v1026 + 360);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->next_connection_log_num";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v452;
                          int v453 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_786:
                          _os_log_impl(&dword_1830D4000, v450, v451, v453, buf, 0x2Au);
                        }
                      }
                      else if (aBlock[0])
                      {
                        uint64_t v454 = (char *)__nw_create_backtrace_string();
                        uint64_t v450 = __nwlog_obj();
                        os_log_type_t v451 = v1049[0];
                        BOOL v455 = os_log_type_enabled(v450, (os_log_type_t)v1049[0]);
                        if (v454)
                        {
                          if (v455)
                          {
                            uint64_t v456 = *(unsigned int *)(v1026 + 360);
                            *(_DWORD *)buf = 136447234;
                            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->next_connection_log_num";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v456;
                            *(_WORD *)&v1036[10] = 2082;
                            *(void *)&v1036[12] = v454;
                            _os_log_impl(&dword_1830D4000, v450, v451, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                          }
                          free(v454);
                          os_log_type_t v292 = (void **)(NWConcrete_nw_resolution_report + 16);
                          goto LABEL_787;
                        }
                        os_log_type_t v292 = NWConcrete_nw_resolution_report.cache;
                        if (v455)
                        {
                          uint64_t v458 = *(unsigned int *)(v1026 + 360);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->next_connection_log_num";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v458;
                          int v453 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                          goto LABEL_786;
                        }
                      }
                      else
                      {
                        uint64_t v450 = __nwlog_obj();
                        os_log_type_t v451 = v1049[0];
                        if (os_log_type_enabled(v450, (os_log_type_t)v1049[0]))
                        {
                          uint64_t v457 = *(unsigned int *)(v1026 + 360);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->next_connection_log_num";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = 1;
                          *(_WORD *)v1036 = 2048;
                          *(void *)&v1036[2] = v457;
                          int v453 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                          goto LABEL_786;
                        }
                      }
                    }
LABEL_787:
                    if (v449) {
                      free(v449);
                    }
                    LODWORD(v446) = -1;
                    uint64_t v11 = v1026;
                    *(_DWORD *)(v1026 + 360) = -1;
LABEL_790:
                    *((_DWORD *)v287 + 215) = v446;
                    if ((*((unsigned char *)v287 + 158) & 1) == 0)
                    {
                      if (*((unsigned char *)v292 + 3665))
                      {
                        v848 = __nwlog_obj();
                        if (os_log_type_enabled(v848, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v849 = *((void *)v287 + 61);
                          int v850 = *(_DWORD *)(*((void *)v287 + 60) + 372);
                          int v851 = *((_DWORD *)v287 + 215);
                          if (v849) {
                            LODWORD(v849) = *(_DWORD *)(v849 + 424);
                          }
                          uint64_t v11 = v1026;
                          int v852 = *(_DWORD *)(v1026 + 336);
                          *(_DWORD *)buf = 136448002;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = (char *)v287 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v1035 = (uint64_t)" ";
                          *(_WORD *)v1036 = 1024;
                          *(_DWORD *)&v1036[2] = v850;
                          *(_WORD *)&v1036[6] = 1024;
                          *(_DWORD *)&v1036[8] = v851;
                          *(_WORD *)&v1036[12] = 1024;
                          *(_DWORD *)&v1036[14] = v849;
                          *(_WORD *)&v1036[18] = 2048;
                          *(void *)&v1036[20] = v287;
                          *(_WORD *)&v1036[28] = 1024;
                          *(_DWORD *)&v1036[30] = v852;
                          _os_log_impl(&dword_1830D4000, v848, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added connection %p, now have %u connections", buf, 0x42u);
                          uint64_t v232 = v1024;
                        }
                      }
                    }
                    if (*(void *)(v232 + 248))
                    {
                      if (*((void *)v287 + 61))
                      {
                        __nwlog_obj();
                        uint64_t v459 = *((void *)v287 + 61);
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v287;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v1035 = v459;
                        uint64_t v460 = (char *)_os_log_send_and_compose_impl();
                        v1049[0] = 16;
                        aBlock[0] = 0;
                        if (!__nwlog_fault(v460, v1049, aBlock)) {
                          goto LABEL_818;
                        }
                        if (v1049[0] == 17)
                        {
                          uint64_t v461 = __nwlog_obj();
                          os_log_type_t v462 = v1049[0];
                          if (!os_log_type_enabled(v461, (os_log_type_t)v1049[0])) {
                            goto LABEL_818;
                          }
                          uint64_t v463 = *((void *)v287 + 61);
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v287;
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = v463;
                          uint64_t v464 = "%{public}s Connection %p already has a stream (%p)";
                        }
                        else if (aBlock[0])
                        {
                          os_log_type_t v477 = (char *)__nw_create_backtrace_string();
                          uint64_t v461 = __nwlog_obj();
                          os_log_type_t v462 = v1049[0];
                          BOOL v478 = os_log_type_enabled(v461, (os_log_type_t)v1049[0]);
                          if (v477)
                          {
                            if (v478)
                            {
                              uint64_t v479 = *((void *)v287 + 61);
                              *(_DWORD *)buf = 136446978;
                              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                              *(_WORD *)&unsigned char buf[12] = 2048;
                              *(void *)&buf[14] = v287;
                              *(_WORD *)&buf[22] = 2048;
                              uint64_t v1035 = v479;
                              *(_WORD *)v1036 = 2082;
                              *(void *)&v1036[2] = v477;
                              _os_log_impl(&dword_1830D4000, v461, v462, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
                            }
                            free(v477);
                            goto LABEL_818;
                          }
                          if (!v478)
                          {
LABEL_818:
                            if (v460) {
                              free(v460);
                            }
                            goto LABEL_820;
                          }
                          uint64_t v481 = *((void *)v287 + 61);
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v287;
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = v481;
                          uint64_t v464 = "%{public}s Connection %p already has a stream (%p), no backtrace";
                        }
                        else
                        {
                          uint64_t v461 = __nwlog_obj();
                          os_log_type_t v462 = v1049[0];
                          if (!os_log_type_enabled(v461, (os_log_type_t)v1049[0])) {
                            goto LABEL_818;
                          }
                          uint64_t v480 = *((void *)v287 + 61);
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v287;
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v1035 = v480;
                          uint64_t v464 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                        }
                        _os_log_impl(&dword_1830D4000, v461, v462, v464, buf, 0x20u);
                        goto LABEL_818;
                      }
                      *(void *)(v232 + 256) = v287;
                      *((void *)v287 + 61) = v232;
                      nw_protocol_set_output_handler(v232, *((void *)v287 + 4));
                      nw_protocol_set_input_handler((uint64_t)v287, *(void *)(v232 + 48));
                      *(_OWORD *)uint64_t v232 = *v287;
                      long long v465 = v1023[5];
                      long long v467 = v1023[2];
                      long long v466 = v1023[3];
                      v287[8] = v1023[4];
                      v287[9] = v465;
                      v287[6] = v467;
                      v287[7] = v466;
                      long long v468 = v1023[1];
                      v287[4] = *v1023;
                      v287[5] = v468;
                      nw_http_transaction_metadata_set_connection_metadata(*(void **)(v232 + 352), *((void **)v287 + 96));
                      *((_WORD *)v287 + 436) &= 0xFFD7u;
                      *((_DWORD *)v287 + 216) = 1;
                      if ((*((unsigned char *)v287 + 158) & 1) == 0)
                      {
                        int v469 = __nwlog_obj();
                        if (os_log_type_enabled(v469, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v470 = *((void *)v287 + 61);
                          int v471 = *(_DWORD *)(*((void *)v287 + 60) + 372);
                          int v472 = *((_DWORD *)v287 + 215);
                          if (v470) {
                            LODWORD(v470) = *(_DWORD *)(v470 + 424);
                          }
                          *(_DWORD *)buf = 136447490;
                          *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = (char *)v287 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v1035 = (uint64_t)" ";
                          *(_WORD *)v1036 = 1024;
                          *(_DWORD *)&v1036[2] = v471;
                          *(_WORD *)&v1036[6] = 1024;
                          *(_DWORD *)&v1036[8] = v472;
                          *(_WORD *)&v1036[12] = 1024;
                          *(_DWORD *)&v1036[14] = v470;
                          _os_log_impl(&dword_1830D4000, v469, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                        }
                      }
                      if ((*(unsigned char *)(v232 + 158) & 1) == 0)
                      {
                        os_log_type_t v473 = __nwlog_obj();
                        if (os_log_type_enabled(v473, OS_LOG_TYPE_INFO))
                        {
                          uint64_t v474 = *(void *)(v232 + 256);
                          int v475 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                          if (v474) {
                            LODWORD(v474) = *(_DWORD *)(v474 + 860);
                          }
                          int v476 = *(_DWORD *)(v232 + 424);
                          *(_DWORD *)buf = 136448002;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v232 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v1035 = (uint64_t)" ";
                          *(_WORD *)v1036 = 1024;
                          *(_DWORD *)&v1036[2] = v475;
                          *(_WORD *)&v1036[6] = 1024;
                          *(_DWORD *)&v1036[8] = v474;
                          *(_WORD *)&v1036[12] = 1024;
                          *(_DWORD *)&v1036[14] = v476;
                          *(_WORD *)&v1036[18] = 2048;
                          *(void *)&v1036[20] = v232;
                          *(_WORD *)&v1036[28] = 2048;
                          *(void *)&v1036[30] = v287;
                          _os_log_impl(&dword_1830D4000, v473, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
                        }
                      }
LABEL_820:
                      if ((*(unsigned char *)(v232 + 158) & 1) == 0)
                      {
                        BOOL v482 = __nwlog_obj();
                        if (os_log_type_enabled(v482, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v483 = *(void *)(v232 + 256);
                          int v484 = *(_DWORD *)(*(void *)(v232 + 248) + 372);
                          if (v483) {
                            LODWORD(v483) = *(_DWORD *)(v483 + 860);
                          }
                          int v485 = *(_DWORD *)(v232 + 424);
                          *(_DWORD *)buf = 136448258;
                          *(void *)&uint8_t buf[4] = "nw_http1_start_new_connection_for_stream";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v232 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v1035 = (uint64_t)" ";
                          *(_WORD *)v1036 = 1024;
                          *(_DWORD *)&v1036[2] = v484;
                          *(_WORD *)&v1036[6] = 1024;
                          *(_DWORD *)&v1036[8] = v483;
                          *(_WORD *)&v1036[12] = 1024;
                          *(_DWORD *)&v1036[14] = v485;
                          *(_WORD *)&v1036[18] = 2048;
                          *(void *)&v1036[20] = v287;
                          *(_WORD *)&v1036[28] = 1024;
                          *(_DWORD *)&v1036[30] = v485;
                          *(_WORD *)&v1036[34] = 2048;
                          *(void *)&v1036[36] = v232;
                          _os_log_impl(&dword_1830D4000, v482, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created new connection %p for stream %u (%p)", buf, 0x4Cu);
                        }
                      }
                      nw_http_transaction_metadata_set_first_on_connection(*(void **)(v232 + 352));
                      uint64_t v486 = nw_protocol_copy_info((uint64_t)v1019, 255);
                      v487 = (void *)v486;
                      if (v486
                        && (uint64_t v488 = *(void *)(v486 + 24), *(void *)(v486 + 16) != v488)
                        && (v489 = *(void **)(v488 - 8)) != 0)
                      {
                        uint64_t v490 = os_retain(v489);
                        int v491 = v490;
                        if (v490 && nw_protocol_metadata_is_tls(v490))
                        {
                          int v491 = v491;
                          nw_http_connection_metadata_set_sec_metadata(*((void **)v287 + 96), v491);
                          os_release(v491);
                          nw_protocol_connect((uint64_t)v1019, (uint64_t)v287);
                          goto LABEL_834;
                        }
                      }
                      else
                      {
                        int v491 = 0;
                      }
                      if (v287)
                      {
                        nw_protocol_connect((uint64_t)v1019, (uint64_t)v287);
                        if (!v491) {
                          goto LABEL_835;
                        }
                        goto LABEL_834;
                      }
                      __nwlog_obj();
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                      v817 = (char *)_os_log_send_and_compose_impl();
                      v1049[0] = 16;
                      aBlock[0] = 0;
                      if (__nwlog_fault(v817, v1049, aBlock))
                      {
                        if (v1049[0] == 17)
                        {
                          v818 = __nwlog_obj();
                          os_log_type_t v819 = v1049[0];
                          if (!os_log_type_enabled(v818, (os_log_type_t)v1049[0])) {
                            goto LABEL_1639;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                          v820 = "%{public}s called with null connection";
LABEL_1638:
                          _os_log_impl(&dword_1830D4000, v818, v819, v820, buf, 0xCu);
                          goto LABEL_1639;
                        }
                        if (!aBlock[0])
                        {
                          v818 = __nwlog_obj();
                          os_log_type_t v819 = v1049[0];
                          if (!os_log_type_enabled(v818, (os_log_type_t)v1049[0])) {
                            goto LABEL_1639;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                          v820 = "%{public}s called with null connection, backtrace limit exceeded";
                          goto LABEL_1638;
                        }
                        v869 = (char *)__nw_create_backtrace_string();
                        v818 = __nwlog_obj();
                        os_log_type_t v819 = v1049[0];
                        BOOL v870 = os_log_type_enabled(v818, (os_log_type_t)v1049[0]);
                        if (!v869)
                        {
                          if (!v870) {
                            goto LABEL_1639;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                          v820 = "%{public}s called with null connection, no backtrace";
                          goto LABEL_1638;
                        }
                        if (v870)
                        {
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v869;
                          _os_log_impl(&dword_1830D4000, v818, v819, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
                        }
                        free(v869);
                      }
LABEL_1639:
                      if (v817) {
                        free(v817);
                      }
                      nw_protocol_connect((uint64_t)v1019, 0);
                      uint64_t v11 = v1026;
                      if (!v491)
                      {
LABEL_835:
                        if (v487) {
                          os_release(v487);
                        }
                        nw_protocol_set_output_handler(v11, 0);
                        *(_WORD *)(v232 + 428) &= ~8u;
                        int v492 = *(_DWORD *)(v11 + 352);
                        *(_DWORD *)(v11 + 352) = v492 - 1;
                        if (v492) {
                          goto LABEL_718;
                        }
                        __nwlog_obj();
                        uint64_t v493 = *(unsigned int *)(v11 + 352);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->pending_output_handler_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v1035 = 1;
                        *(_WORD *)v1036 = 2048;
                        *(void *)&v1036[2] = v493;
                        os_log_type_t v494 = (char *)_os_log_send_and_compose_impl();
                        v1049[0] = 16;
                        aBlock[0] = 0;
                        if (!__nwlog_fault(v494, v1049, aBlock)) {
                          goto LABEL_856;
                        }
                        if (v1049[0] == 17)
                        {
                          BOOL v495 = __nwlog_obj();
                          os_log_type_t v496 = v1049[0];
                          if (os_log_type_enabled(v495, (os_log_type_t)v1049[0]))
                          {
                            uint64_t v497 = *(unsigned int *)(v11 + 352);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->pending_output_handler_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v497;
                            uint64_t v498 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_855:
                            _os_log_impl(&dword_1830D4000, v495, v496, v498, buf, 0x2Au);
                          }
                        }
                        else if (aBlock[0])
                        {
                          int v499 = (char *)__nw_create_backtrace_string();
                          BOOL v495 = __nwlog_obj();
                          os_log_type_t v496 = v1049[0];
                          BOOL v500 = os_log_type_enabled(v495, (os_log_type_t)v1049[0]);
                          if (v499)
                          {
                            if (v500)
                            {
                              uint64_t v501 = *(unsigned int *)(v11 + 352);
                              *(_DWORD *)buf = 136447234;
                              *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = "http1->pending_output_handler_count";
                              *(_WORD *)&buf[22] = 2048;
                              uint64_t v1035 = 1;
                              *(_WORD *)v1036 = 2048;
                              *(void *)&v1036[2] = v501;
                              *(_WORD *)&v1036[10] = 2082;
                              *(void *)&v1036[12] = v499;
                              _os_log_impl(&dword_1830D4000, v495, v496, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                            }
                            free(v499);
                            goto LABEL_856;
                          }
                          if (v500)
                          {
                            uint64_t v507 = *(unsigned int *)(v11 + 352);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->pending_output_handler_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v507;
                            uint64_t v498 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
                            goto LABEL_855;
                          }
                        }
                        else
                        {
                          BOOL v495 = __nwlog_obj();
                          os_log_type_t v496 = v1049[0];
                          if (os_log_type_enabled(v495, (os_log_type_t)v1049[0]))
                          {
                            uint64_t v502 = *(unsigned int *)(v11 + 352);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->pending_output_handler_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v1035 = 1;
                            *(_WORD *)v1036 = 2048;
                            *(void *)&v1036[2] = v502;
                            uint64_t v498 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
                            goto LABEL_855;
                          }
                        }
LABEL_856:
                        if (v494) {
                          free(v494);
                        }
                        *(_DWORD *)(v11 + 352) = 0;
                        goto LABEL_718;
                      }
LABEL_834:
                      os_release(v491);
                      goto LABEL_835;
                    }
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    v840 = (char *)_os_log_send_and_compose_impl();
                    v1049[0] = 16;
                    aBlock[0] = 0;
                    if (__nwlog_fault(v840, v1049, aBlock))
                    {
                      if (v1049[0] == 17)
                      {
                        v841 = __nwlog_obj();
                        os_log_type_t v842 = v1049[0];
                        if (os_log_type_enabled(v841, (os_log_type_t)v1049[0]))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v843 = "%{public}s called with null http1_stream->protocol_http1";
LABEL_1702:
                          _os_log_impl(&dword_1830D4000, v841, v842, v843, buf, 0xCu);
                        }
                      }
                      else if (aBlock[0])
                      {
                        v913 = (char *)__nw_create_backtrace_string();
                        v841 = __nwlog_obj();
                        os_log_type_t v842 = v1049[0];
                        BOOL v914 = os_log_type_enabled(v841, (os_log_type_t)v1049[0]);
                        if (v913)
                        {
                          if (v914)
                          {
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v913;
                            _os_log_impl(&dword_1830D4000, v841, v842, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                          }
                          free(v913);
                          goto LABEL_1703;
                        }
                        if (v914)
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v843 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
                          goto LABEL_1702;
                        }
                      }
                      else
                      {
                        v841 = __nwlog_obj();
                        os_log_type_t v842 = v1049[0];
                        if (os_log_type_enabled(v841, (os_log_type_t)v1049[0]))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v843 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                          goto LABEL_1702;
                        }
                      }
                    }
LABEL_1703:
                    if (v840) {
                      free(v840);
                    }
                    uint64_t v11 = v1026;
                    uint64_t v232 = v1024;
                    goto LABEL_820;
                  }
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                  v836 = (char *)_os_log_send_and_compose_impl();
                  v1049[0] = 16;
                  aBlock[0] = 0;
                  if (__nwlog_fault(v836, v1049, aBlock))
                  {
                    if (v1049[0] == 17)
                    {
                      v837 = __nwlog_obj();
                      os_log_type_t v838 = v1049[0];
                      if (!os_log_type_enabled(v837, (os_log_type_t)v1049[0])) {
                        goto LABEL_1696;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                      v839 = "%{public}s called with null parameters";
LABEL_1695:
                      _os_log_impl(&dword_1830D4000, v837, v838, v839, buf, 0xCu);
                      goto LABEL_1696;
                    }
                    if (!aBlock[0])
                    {
                      v837 = __nwlog_obj();
                      os_log_type_t v838 = v1049[0];
                      if (!os_log_type_enabled(v837, (os_log_type_t)v1049[0])) {
                        goto LABEL_1696;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                      v839 = "%{public}s called with null parameters, backtrace limit exceeded";
                      goto LABEL_1695;
                    }
                    v911 = (char *)__nw_create_backtrace_string();
                    v837 = __nwlog_obj();
                    os_log_type_t v838 = v1049[0];
                    BOOL v912 = os_log_type_enabled(v837, (os_log_type_t)v1049[0]);
                    if (!v911)
                    {
                      if (!v912) {
                        goto LABEL_1696;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                      v839 = "%{public}s called with null parameters, no backtrace";
                      goto LABEL_1695;
                    }
                    if (v912)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v911;
                      _os_log_impl(&dword_1830D4000, v837, v838, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
                    }
                    free(v911);
                  }
LABEL_1696:
                  if (v836) {
                    free(v836);
                  }
                  uint64_t v11 = v1026;
                  os_log_type_t v292 = (void **)(NWConcrete_nw_resolution_report + 16);
                  int v312 = *v297;
                  if (*v297) {
                    goto LABEL_535;
                  }
                  goto LABEL_537;
                }
                __nwlog_obj();
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                v821 = (char *)_os_log_send_and_compose_impl();
                type[0] = 16;
                LOBYTE(v1029[0]) = 0;
                if (__nwlog_fault(v821, type, v1029))
                {
                  if (type[0] == 17)
                  {
                    v822 = __nwlog_obj();
                    os_log_type_t v823 = type[0];
                    if (!os_log_type_enabled(v822, (os_log_type_t)type[0])) {
                      goto LABEL_1652;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                    v824 = "%{public}s called with null parameters";
                    goto LABEL_1651;
                  }
                  if (!LOBYTE(v1029[0]))
                  {
                    v822 = __nwlog_obj();
                    os_log_type_t v823 = type[0];
                    if (!os_log_type_enabled(v822, (os_log_type_t)type[0])) {
                      goto LABEL_1652;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                    v824 = "%{public}s called with null parameters, backtrace limit exceeded";
                    goto LABEL_1651;
                  }
                  v882 = (char *)__nw_create_backtrace_string();
                  v822 = __nwlog_obj();
                  os_log_type_t v823 = type[0];
                  BOOL v899 = os_log_type_enabled(v822, (os_log_type_t)type[0]);
                  if (!v882)
                  {
                    if (!v899) {
                      goto LABEL_1652;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                    v824 = "%{public}s called with null parameters, no backtrace";
                    goto LABEL_1651;
                  }
                  if (v899)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v882;
                    v884 = "%{public}s called with null parameters, dumping backtrace:%{public}s";
                    goto LABEL_1509;
                  }
                  goto LABEL_1510;
                }
LABEL_1652:
                if (!v821) {
                  goto LABEL_1654;
                }
                goto LABEL_1653;
              }
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              v821 = (char *)_os_log_send_and_compose_impl();
              type[0] = 16;
              LOBYTE(v1029[0]) = 0;
              if (!__nwlog_fault(v821, type, v1029)) {
                goto LABEL_1652;
              }
              if (type[0] != 17)
              {
                if (!LOBYTE(v1029[0]))
                {
                  v822 = __nwlog_obj();
                  os_log_type_t v823 = type[0];
                  if (!os_log_type_enabled(v822, (os_log_type_t)type[0])) {
                    goto LABEL_1652;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  v824 = "%{public}s called with null endpoint, backtrace limit exceeded";
                  goto LABEL_1651;
                }
                v882 = (char *)__nw_create_backtrace_string();
                v822 = __nwlog_obj();
                os_log_type_t v823 = type[0];
                BOOL v883 = os_log_type_enabled(v822, (os_log_type_t)type[0]);
                if (!v882)
                {
                  if (!v883) {
                    goto LABEL_1652;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  v824 = "%{public}s called with null endpoint, no backtrace";
                  goto LABEL_1651;
                }
                if (v883)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v882;
                  v884 = "%{public}s called with null endpoint, dumping backtrace:%{public}s";
LABEL_1509:
                  _os_log_impl(&dword_1830D4000, v822, v823, v884, buf, 0x16u);
                }
LABEL_1510:
                free(v882);
                if (!v821)
                {
LABEL_1654:
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  v960 = (char *)_os_log_send_and_compose_impl();
                  v1049[0] = 16;
                  aBlock[0] = 0;
                  if (!__nwlog_fault(v960, v1049, aBlock)) {
                    goto LABEL_1668;
                  }
                  if (v1049[0] == 17)
                  {
                    v961 = __nwlog_obj();
                    os_log_type_t v962 = v1049[0];
                    if (!os_log_type_enabled(v961, (os_log_type_t)v1049[0])) {
                      goto LABEL_1668;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    v963 = "%{public}s called with null http1_connection";
                  }
                  else if (aBlock[0])
                  {
                    v964 = (char *)__nw_create_backtrace_string();
                    v961 = __nwlog_obj();
                    os_log_type_t v962 = v1049[0];
                    BOOL v965 = os_log_type_enabled(v961, (os_log_type_t)v1049[0]);
                    if (v964)
                    {
                      if (v965)
                      {
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v964;
                        _os_log_impl(&dword_1830D4000, v961, v962, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                      }
                      free(v964);
LABEL_1668:
                      if (v960) {
                        free(v960);
                      }
                      __nwlog_obj();
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      v966 = (char *)_os_log_send_and_compose_impl();
                      v1049[0] = 16;
                      aBlock[0] = 0;
                      if (!__nwlog_fault(v966, v1049, aBlock)) {
                        goto LABEL_1684;
                      }
                      if (v1049[0] == 17)
                      {
                        v967 = __nwlog_obj();
                        os_log_type_t v968 = v1049[0];
                        if (os_log_type_enabled(v967, (os_log_type_t)v1049[0]))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v969 = "%{public}s called with null http1_connection";
LABEL_1683:
                          _os_log_impl(&dword_1830D4000, v967, v968, v969, buf, 0xCu);
                        }
                      }
                      else if (aBlock[0])
                      {
                        v970 = (char *)__nw_create_backtrace_string();
                        v967 = __nwlog_obj();
                        os_log_type_t v968 = v1049[0];
                        BOOL v971 = os_log_type_enabled(v967, (os_log_type_t)v1049[0]);
                        if (v970)
                        {
                          if (v971)
                          {
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v970;
                            _os_log_impl(&dword_1830D4000, v967, v968, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                          }
                          free(v970);
                          goto LABEL_1684;
                        }
                        if (v971)
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v969 = "%{public}s called with null http1_connection, no backtrace";
                          goto LABEL_1683;
                        }
                      }
                      else
                      {
                        v967 = __nwlog_obj();
                        os_log_type_t v968 = v1049[0];
                        if (os_log_type_enabled(v967, (os_log_type_t)v1049[0]))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v969 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                          goto LABEL_1683;
                        }
                      }
LABEL_1684:
                      if (v966) {
                        free(v966);
                      }
                      unsigned int v287 = 0;
                      uint64_t v11 = v1026;
                      goto LABEL_820;
                    }
                    if (!v965) {
                      goto LABEL_1668;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    v963 = "%{public}s called with null http1_connection, no backtrace";
                  }
                  else
                  {
                    v961 = __nwlog_obj();
                    os_log_type_t v962 = v1049[0];
                    if (!os_log_type_enabled(v961, (os_log_type_t)v1049[0])) {
                      goto LABEL_1668;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    v963 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                  }
                  _os_log_impl(&dword_1830D4000, v961, v962, v963, buf, 0xCu);
                  goto LABEL_1668;
                }
LABEL_1653:
                free(v821);
                goto LABEL_1654;
              }
              v822 = __nwlog_obj();
              os_log_type_t v823 = type[0];
              if (!os_log_type_enabled(v822, (os_log_type_t)type[0])) {
                goto LABEL_1652;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              v824 = "%{public}s called with null endpoint";
            }
            else
            {
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              v821 = (char *)_os_log_send_and_compose_impl();
              type[0] = 16;
              LOBYTE(v1029[0]) = 0;
              if (!__nwlog_fault(v821, type, v1029)) {
                goto LABEL_1652;
              }
              if (type[0] != 17)
              {
                if (!LOBYTE(v1029[0]))
                {
                  v822 = __nwlog_obj();
                  os_log_type_t v823 = type[0];
                  if (!os_log_type_enabled(v822, (os_log_type_t)type[0])) {
                    goto LABEL_1652;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  v824 = "%{public}s called with null output_handler, backtrace limit exceeded";
                  goto LABEL_1651;
                }
                v880 = (char *)__nw_create_backtrace_string();
                v822 = __nwlog_obj();
                os_log_type_t v823 = type[0];
                BOOL v881 = os_log_type_enabled(v822, (os_log_type_t)type[0]);
                if (!v880)
                {
                  if (!v881) {
                    goto LABEL_1652;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  v824 = "%{public}s called with null output_handler, no backtrace";
                  goto LABEL_1651;
                }
                if (v881)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v880;
                  _os_log_impl(&dword_1830D4000, v822, v823, "%{public}s called with null output_handler, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v880);
                goto LABEL_1652;
              }
              v822 = __nwlog_obj();
              os_log_type_t v823 = type[0];
              if (!os_log_type_enabled(v822, (os_log_type_t)type[0])) {
                goto LABEL_1652;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              v824 = "%{public}s called with null output_handler";
            }
LABEL_1651:
            _os_log_impl(&dword_1830D4000, v822, v823, v824, buf, 0xCu);
            goto LABEL_1652;
          }
          if (*(unsigned char *)(v11 + 158)) {
            goto LABEL_718;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v252 = gLogObj;
          if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_718;
          }
          int v255 = *(_DWORD *)(v11 + 372);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_match_idle_connection_with_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v11 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v1035 = (uint64_t)" ";
          *(_WORD *)v1036 = 1024;
          *(_DWORD *)&v1036[2] = v255;
          uint64_t v254 = "%{public}s %{public}s%s<i%u> no pending streams, nothing to do";
LABEL_446:
          os_log_type_t v256 = v252;
          uint32_t v257 = 38;
LABEL_447:
          _os_log_impl(&dword_1830D4000, v256, OS_LOG_TYPE_DEBUG, v254, buf, v257);
LABEL_718:
          if (!*(_DWORD *)(v11 + 336) && !*(_DWORD *)(v11 + 344)) {
            nw_protocol_http1_destroy(v11, v11);
          }
          return 1;
        }
        if ((*(unsigned char *)(v16 + 158) & 1) == 0)
        {
          if (*((unsigned char *)p_cache + 3665))
          {
            v736 = __nwlog_obj();
            if (os_log_type_enabled(v736, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v737 = *(void *)(v16 + 488);
              int v738 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
              int v739 = *(_DWORD *)(v16 + 860);
              if (v737) {
                LODWORD(v737) = *(_DWORD *)(v737 + 424);
              }
              *(_DWORD *)buf = 136447746;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v16 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v1035 = (uint64_t)" ";
              *(_WORD *)v1036 = 1024;
              *(_DWORD *)&v1036[2] = v738;
              *(_WORD *)&v1036[6] = 1024;
              *(_DWORD *)&v1036[8] = v739;
              *(_WORD *)&v1036[12] = 1024;
              *(_DWORD *)&v1036[14] = v737;
              *(_WORD *)&v1036[18] = 2048;
              *(void *)&v1036[20] = v16;
              _os_log_impl(&dword_1830D4000, v736, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> triggering new flow on server connection %p, more input available", buf, 0x3Cu);
              uint64_t v11 = v1026;
              p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
            }
          }
        }
        if ((*(unsigned char *)(v11 + 376) & 1) == 0)
        {
          if (*(unsigned char *)(v11 + 158)) {
            goto LABEL_718;
          }
          if (!*((unsigned char *)p_cache + 3665)) {
            goto LABEL_718;
          }
          int v252 = __nwlog_obj();
          if (!os_log_type_enabled(v252, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_718;
          }
          int v258 = *(_DWORD *)(v11 + 372);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v11 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v1035 = (uint64_t)" ";
          *(_WORD *)v1036 = 1024;
          *(_DWORD *)&v1036[2] = v258;
          uint64_t v254 = "%{public}s %{public}s%s<i%u> called when not in server mode, ignoring";
          goto LABEL_446;
        }
        uint64_t v259 = *(void ***)(v11 + 328);
        if (!v259)
        {
          if (*(unsigned char *)(v16 + 158)) {
            goto LABEL_718;
          }
          int v321 = __nwlog_obj();
          if (!os_log_type_enabled(v321, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_718;
          }
          uint64_t v322 = *(void *)(v16 + 488);
          int v323 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
          int v324 = *(_DWORD *)(v16 + 860);
          if (v322) {
            LODWORD(v322) = *(_DWORD *)(v322 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v16 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v1035 = (uint64_t)" ";
          *(_WORD *)v1036 = 1024;
          *(_DWORD *)&v1036[2] = v323;
          *(_WORD *)&v1036[6] = 1024;
          *(_DWORD *)&v1036[8] = v324;
          *(_WORD *)&v1036[12] = 1024;
          *(_DWORD *)&v1036[14] = v322;
          uint64_t v254 = "%{public}s %{public}s%s<i%u:c%u:s%u> called without listen handler, ignoring";
          os_log_type_t v256 = v321;
          uint32_t v257 = 50;
          goto LABEL_447;
        }
        os_log_type_t v260 = (unsigned __int16 *)(v16 + 872);
        uint32_t v261 = *v259;
        if (v261 && *v261)
        {
          int v262 = *(NSObject **)(v11 + 264);
          if (v262)
          {
            nw_parameters_t v263 = nw_parameters_copy(v262);
            *(void *)(v11 + 224) = v16;
            if ((***(unsigned int (****)(void, void, nw_parameters_t))(v11 + 328))(*(void *)(v11 + 328), *(void *)(v11 + 280), v263)&& *(void *)(v16 + 488)&& !*(void *)(v11 + 224))
            {
              if ((*(unsigned char *)(v11 + 158) & 1) == 0)
              {
                if (*((unsigned char *)p_cache + 3665))
                {
                  v954 = __nwlog_obj();
                  if (os_log_type_enabled(v954, OS_LOG_TYPE_DEBUG))
                  {
                    int v955 = *(_DWORD *)(v11 + 372);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v11 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v1035 = (uint64_t)" ";
                    *(_WORD *)v1036 = 1024;
                    *(_DWORD *)&v1036[2] = v955;
                    _os_log_impl(&dword_1830D4000, v954, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> sucessfully associated new flow stream with connection, awaiting connected", buf, 0x26u);
                  }
                }
              }
              int v371 = *v260;
              unsigned int v372 = (v371 | (*((unsigned __int8 *)v260 + 2) << 16)) & 0xFFFDFFFF;
              unsigned __int16 *v260 = v371;
              *((unsigned char *)v260 + 2) = BYTE2(v372);
              goto LABEL_924;
            }
            if ((*(unsigned char *)(v11 + 158) & 1) == 0)
            {
              int v264 = __nwlog_obj();
              if (os_log_type_enabled(v264, OS_LOG_TYPE_ERROR))
              {
                int v265 = *(_DWORD *)(v11 + 372);
                *(_DWORD *)buf = 136447234;
                *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v11 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v1035 = (uint64_t)" ";
                *(_WORD *)v1036 = 1024;
                *(_DWORD *)&v1036[2] = v265;
                *(_WORD *)&v1036[6] = 2048;
                *(void *)&v1036[8] = v16;
                _os_log_impl(&dword_1830D4000, v264, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> listen handler didn't accept the new flow, closing connection %p", buf, 0x30u);
              }
            }
            int v266 = *v260;
            int v267 = v266 | (*(unsigned __int8 *)(v16 + 874) << 16);
            if ((v266 & 0x100) != 0)
            {
              if ((*(unsigned char *)(v16 + 158) & 1) == 0)
              {
                if (*((unsigned char *)p_cache + 3665))
                {
                  os_log_type_t v345 = __nwlog_obj();
                  if (os_log_type_enabled(v345, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v346 = *(void *)(v16 + 488);
                    int v347 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                    int v348 = *(_DWORD *)(v16 + 860);
                    if (v346) {
                      LODWORD(v346) = *(_DWORD *)(v346 + 424);
                    }
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v16 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v1035 = (uint64_t)" ";
                    *(_WORD *)v1036 = 1024;
                    *(_DWORD *)&v1036[2] = v347;
                    *(_WORD *)&v1036[6] = 1024;
                    *(_DWORD *)&v1036[8] = v348;
                    *(_WORD *)&v1036[12] = 1024;
                    *(_DWORD *)&v1036[14] = v346;
                    _os_log_impl(&dword_1830D4000, v345, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> already closed", buf, 0x32u);
                    uint64_t v11 = v1026;
                  }
                }
              }
              goto LABEL_924;
            }
            *(unsigned char *)(v16 + 874) = BYTE2(v267);
            unsigned __int16 *v260 = v267 | 0x100;
            if ((*(unsigned char *)(v16 + 158) & 1) == 0)
            {
              if (*((unsigned char *)p_cache + 3665))
              {
                v861 = __nwlog_obj();
                if (os_log_type_enabled(v861, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v862 = *(void *)(v16 + 488);
                  int v863 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                  int v864 = *(_DWORD *)(v16 + 860);
                  if (v862) {
                    LODWORD(v862) = *(_DWORD *)(v862 + 424);
                  }
                  *(_DWORD *)buf = 136447490;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v16 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v1035 = (uint64_t)" ";
                  *(_WORD *)v1036 = 1024;
                  *(_DWORD *)&v1036[2] = v863;
                  *(_WORD *)&v1036[6] = 1024;
                  *(_DWORD *)&v1036[8] = v864;
                  *(_WORD *)&v1036[12] = 1024;
                  *(_DWORD *)&v1036[14] = v862;
                  _os_log_impl(&dword_1830D4000, v861, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
                  p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                }
              }
            }
            uint64_t v268 = *(void *)(v16 + 480);
            if (!v268)
            {
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              v857 = (char *)_os_log_send_and_compose_impl();
              v1049[0] = 16;
              aBlock[0] = 0;
              if (!__nwlog_fault(v857, v1049, aBlock)) {
                goto LABEL_1824;
              }
              if (v1049[0] == 17)
              {
                v858 = __nwlog_obj();
                os_log_type_t v859 = v1049[0];
                if (!os_log_type_enabled(v858, (os_log_type_t)v1049[0])) {
                  goto LABEL_1824;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                v860 = "%{public}s called with null http1";
              }
              else if (aBlock[0])
              {
                v925 = (char *)__nw_create_backtrace_string();
                v858 = __nwlog_obj();
                os_log_type_t v859 = v1049[0];
                BOOL v926 = os_log_type_enabled(v858, (os_log_type_t)v1049[0]);
                if (v925)
                {
                  if (v926)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v925;
                    _os_log_impl(&dword_1830D4000, v858, v859, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v925);
                  goto LABEL_1824;
                }
                if (!v926) {
                  goto LABEL_1824;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                v860 = "%{public}s called with null http1, no backtrace";
              }
              else
              {
                v858 = __nwlog_obj();
                os_log_type_t v859 = v1049[0];
                if (!os_log_type_enabled(v858, (os_log_type_t)v1049[0])) {
                  goto LABEL_1824;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                v860 = "%{public}s called with null http1, backtrace limit exceeded";
              }
              v973 = buf;
LABEL_1823:
              _os_log_impl(&dword_1830D4000, v858, v859, v860, v973, 0xCu);
              goto LABEL_1824;
            }
            int v269 = *v260;
            int v270 = v269 | (*(unsigned __int8 *)(v16 + 874) << 16);
            if ((v269 & 0x800) != 0)
            {
              uint64_t v11 = v1026;
              if ((*(unsigned char *)(v16 + 158) & 1) == 0)
              {
                if (*((unsigned char *)p_cache + 3665))
                {
                  uint64_t v361 = __nwlog_obj();
                  if (os_log_type_enabled(v361, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v362 = *(void *)(v16 + 488);
                    int v363 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                    int v364 = *(_DWORD *)(v16 + 860);
                    if (v362) {
                      LODWORD(v362) = *(_DWORD *)(v362 + 424);
                    }
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v16 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v1035 = (uint64_t)" ";
                    *(_WORD *)v1036 = 1024;
                    *(_DWORD *)&v1036[2] = v363;
                    *(_WORD *)&v1036[6] = 1024;
                    *(_DWORD *)&v1036[8] = v364;
                    *(_WORD *)&v1036[12] = 1024;
                    *(_DWORD *)&v1036[14] = v362;
                    _os_log_impl(&dword_1830D4000, v361, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
                    uint64_t v11 = v1026;
                    if (*(void *)(v16 + 488)) {
                      goto LABEL_924;
                    }
                    goto LABEL_916;
                  }
                }
              }
LABEL_915:
              if (!*(void *)(v16 + 488)) {
                goto LABEL_916;
              }
              goto LABEL_924;
            }
            *(unsigned char *)(v16 + 874) = BYTE2(v270);
            unsigned __int16 *v260 = v270 | 0x800;
            uint64_t v271 = *(unsigned int *)(v268 + 368) + 1;
            uint64_t v272 = v271 << 31 >> 31;
            *(_DWORD *)(v268 + 368) = v271;
            if (v272 == v271 && (v272 & 0x8000000000000000) == 0)
            {
LABEL_910:
              if ((*(unsigned char *)(v16 + 158) & 1) == 0)
              {
                if (*((unsigned char *)p_cache + 3665))
                {
                  v927 = __nwlog_obj();
                  if (os_log_type_enabled(v927, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v928 = *(void *)(v16 + 488);
                    int v929 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                    int v930 = *(_DWORD *)(v16 + 860);
                    if (v928) {
                      LODWORD(v928) = *(_DWORD *)(v928 + 424);
                    }
                    int v931 = *(_DWORD *)(v268 + 368) + *(_DWORD *)(v268 + 364);
                    *(_DWORD *)buf = 136447746;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v16 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v1035 = (uint64_t)" ";
                    *(_WORD *)v1036 = 1024;
                    *(_DWORD *)&v1036[2] = v929;
                    *(_WORD *)&v1036[6] = 1024;
                    *(_DWORD *)&v1036[8] = v930;
                    *(_WORD *)&v1036[12] = 1024;
                    *(_DWORD *)&v1036[14] = v928;
                    *(_WORD *)&v1036[18] = 1024;
                    *(_DWORD *)&v1036[20] = v931;
                    _os_log_impl(&dword_1830D4000, v927, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
                  }
                }
              }
              os_log_type_t v536 = *(void **)(v16 + 496);
              if (!v536)
              {
                __nwlog_obj();
                *(_DWORD *)v1049 = 136446210;
                *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                v857 = (char *)_os_log_send_and_compose_impl();
                aBlock[0] = 16;
                type[0] = 0;
                if (!__nwlog_fault(v857, aBlock, type)) {
                  goto LABEL_1824;
                }
                if (aBlock[0] == 17)
                {
                  v858 = __nwlog_obj();
                  os_log_type_t v859 = aBlock[0];
                  if (!os_log_type_enabled(v858, (os_log_type_t)aBlock[0])) {
                    goto LABEL_1824;
                  }
                  *(_DWORD *)v1049 = 136446210;
                  *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  v860 = "%{public}s called with null http1_connection->context";
LABEL_1822:
                  v973 = v1049;
                  goto LABEL_1823;
                }
                if (!type[0])
                {
                  v858 = __nwlog_obj();
                  os_log_type_t v859 = aBlock[0];
                  if (!os_log_type_enabled(v858, (os_log_type_t)aBlock[0])) {
                    goto LABEL_1824;
                  }
                  *(_DWORD *)v1049 = 136446210;
                  *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  v860 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
                  goto LABEL_1822;
                }
                v956 = (char *)__nw_create_backtrace_string();
                v858 = __nwlog_obj();
                os_log_type_t v859 = aBlock[0];
                BOOL v957 = os_log_type_enabled(v858, (os_log_type_t)aBlock[0]);
                if (!v956)
                {
                  if (!v957) {
                    goto LABEL_1824;
                  }
                  *(_DWORD *)v1049 = 136446210;
                  *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  v860 = "%{public}s called with null http1_connection->context, no backtrace";
                  goto LABEL_1822;
                }
                if (v957)
                {
                  *(_DWORD *)v1049 = 136446466;
                  *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  *(_WORD *)&v1049[12] = 2082;
                  *(void *)&v1049[14] = v956;
                  v958 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
LABEL_1633:
                  _os_log_impl(&dword_1830D4000, v858, v859, v958, v1049, 0x16u);
                }
LABEL_1634:
                free(v956);
                if (!v857)
                {
LABEL_1826:
                  uint64_t v11 = v1026;
                  if (!*(void *)(v16 + 488))
                  {
LABEL_916:
                    uint64_t v539 = *(void *)(v16 + 784);
                    if (v539)
                    {
                      nw_queue_set_timer_values(v539, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
                    }
                    else
                    {
                      if ((*(unsigned char *)(v16 + 158) & 1) == 0)
                      {
                        v540 = __nwlog_obj();
                        if (os_log_type_enabled(v540, OS_LOG_TYPE_ERROR))
                        {
                          uint64_t v541 = *(void *)(v16 + 488);
                          int v542 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                          int v543 = *(_DWORD *)(v16 + 860);
                          if (v541) {
                            LODWORD(v541) = *(_DWORD *)(v541 + 424);
                          }
                          *(_DWORD *)buf = 136447490;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v16 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v1035 = (uint64_t)" ";
                          *(_WORD *)v1036 = 1024;
                          *(_DWORD *)&v1036[2] = v542;
                          *(_WORD *)&v1036[6] = 1024;
                          *(_DWORD *)&v1036[8] = v543;
                          *(_WORD *)&v1036[12] = 1024;
                          *(_DWORD *)&v1036[14] = v541;
                          _os_log_impl(&dword_1830D4000, v540, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
                        }
                      }
                      uint64_t v544 = *(void *)(v16 + 608);
                      uint64_t v545 = *(void **)(v16 + 496);
                      *(void *)buf = MEMORY[0x1E4F143A8];
                      *(void *)&buf[8] = 0x40000000;
                      *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
                      uint64_t v1035 = (uint64_t)&unk_1E52411A0;
                      *(void *)v1036 = v544;
                      nw_queue_context_async(v545, buf);
                    }
                  }
LABEL_924:
                  if (v263) {
                    os_release(v263);
                  }
                  goto LABEL_718;
                }
LABEL_1825:
                free(v857);
                goto LABEL_1826;
              }
              uint64_t v537 = *(void *)(v16 + 480);
              uint64_t v11 = v1026;
              if (v537)
              {
                uint64_t v538 = *(void *)(v537 + 200);
                *(void *)buf = MEMORY[0x1E4F143A8];
                *(void *)&buf[8] = 0x40000000;
                *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
                uint64_t v1035 = (uint64_t)&unk_1E52411C8;
                *(void *)v1036 = v538;
                nw_queue_context_async(v536, buf);
                goto LABEL_915;
              }
              __nwlog_obj();
              *(_DWORD *)v1049 = 136446210;
              *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              v857 = (char *)_os_log_send_and_compose_impl();
              aBlock[0] = 16;
              type[0] = 0;
              if (__nwlog_fault(v857, aBlock, type))
              {
                if (aBlock[0] == 17)
                {
                  v858 = __nwlog_obj();
                  os_log_type_t v859 = aBlock[0];
                  if (!os_log_type_enabled(v858, (os_log_type_t)aBlock[0])) {
                    goto LABEL_1824;
                  }
                  *(_DWORD *)v1049 = 136446210;
                  *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  v860 = "%{public}s called with null http1";
                  goto LABEL_1822;
                }
                if (!type[0])
                {
                  v858 = __nwlog_obj();
                  os_log_type_t v859 = aBlock[0];
                  if (!os_log_type_enabled(v858, (os_log_type_t)aBlock[0])) {
                    goto LABEL_1824;
                  }
                  *(_DWORD *)v1049 = 136446210;
                  *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  v860 = "%{public}s called with null http1, backtrace limit exceeded";
                  goto LABEL_1822;
                }
                v956 = (char *)__nw_create_backtrace_string();
                v858 = __nwlog_obj();
                os_log_type_t v859 = aBlock[0];
                BOOL v959 = os_log_type_enabled(v858, (os_log_type_t)aBlock[0]);
                if (!v956)
                {
                  if (!v959) {
                    goto LABEL_1824;
                  }
                  *(_DWORD *)v1049 = 136446210;
                  *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  v860 = "%{public}s called with null http1, no backtrace";
                  goto LABEL_1822;
                }
                if (v959)
                {
                  *(_DWORD *)v1049 = 136446466;
                  *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  *(_WORD *)&v1049[12] = 2082;
                  *(void *)&v1049[14] = v956;
                  v958 = "%{public}s called with null http1, dumping backtrace:%{public}s";
                  goto LABEL_1633;
                }
                goto LABEL_1634;
              }
LABEL_1824:
              if (!v857) {
                goto LABEL_1826;
              }
              goto LABEL_1825;
            }
            __nwlog_obj();
            uint64_t v273 = *(unsigned int *)(v268 + 368);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v1035 = 1;
            *(_WORD *)v1036 = 2048;
            *(void *)&v1036[2] = v273;
            int v274 = (char *)_os_log_send_and_compose_impl();
            v1049[0] = 16;
            aBlock[0] = 0;
            if (__nwlog_fault(v274, v1049, aBlock))
            {
              if (v1049[0] == 17)
              {
                uint64_t v275 = __nwlog_obj();
                os_log_type_t v276 = v1049[0];
                if (os_log_type_enabled(v275, (os_log_type_t)v1049[0]))
                {
                  uint64_t v277 = *(unsigned int *)(v268 + 368);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->nonresuable_connections";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v1035 = 1;
                  *(_WORD *)v1036 = 2048;
                  *(void *)&v1036[2] = v277;
                  int v278 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_906:
                  _os_log_impl(&dword_1830D4000, v275, v276, v278, buf, 0x2Au);
                }
              }
              else if (aBlock[0])
              {
                os_log_type_t v431 = (char *)__nw_create_backtrace_string();
                uint64_t v275 = __nwlog_obj();
                os_log_type_t v276 = v1049[0];
                BOOL v432 = os_log_type_enabled(v275, (os_log_type_t)v1049[0]);
                if (v431)
                {
                  if (v432)
                  {
                    uint64_t v433 = *(unsigned int *)(v268 + 368);
                    *(_DWORD *)buf = 136447234;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->nonresuable_connections";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v1035 = 1;
                    *(_WORD *)v1036 = 2048;
                    *(void *)&v1036[2] = v433;
                    *(_WORD *)&v1036[10] = 2082;
                    *(void *)&v1036[12] = v431;
                    _os_log_impl(&dword_1830D4000, v275, v276, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                  }
                  free(v431);
                  p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
                  goto LABEL_907;
                }
                p_cache = NWConcrete_nw_resolution_report.cache;
                if (v432)
                {
                  uint64_t v535 = *(unsigned int *)(v268 + 368);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->nonresuable_connections";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v1035 = 1;
                  *(_WORD *)v1036 = 2048;
                  *(void *)&v1036[2] = v535;
                  int v278 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                  goto LABEL_906;
                }
              }
              else
              {
                uint64_t v275 = __nwlog_obj();
                os_log_type_t v276 = v1049[0];
                if (os_log_type_enabled(v275, (os_log_type_t)v1049[0]))
                {
                  uint64_t v511 = *(unsigned int *)(v268 + 368);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->nonresuable_connections";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v1035 = 1;
                  *(_WORD *)v1036 = 2048;
                  *(void *)&v1036[2] = v511;
                  int v278 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                  goto LABEL_906;
                }
              }
            }
LABEL_907:
            if (v274) {
              free(v274);
            }
            *(_DWORD *)(v268 + 368) = -1;
            goto LABEL_910;
          }
          if ((*(unsigned char *)(v11 + 158) & 1) == 0)
          {
            BOOL v334 = __nwlog_obj();
            if (os_log_type_enabled(v334, OS_LOG_TYPE_ERROR))
            {
              int v335 = *(_DWORD *)(v11 + 372);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v11 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v1035 = (uint64_t)" ";
              *(_WORD *)v1036 = 1024;
              *(_DWORD *)&v1036[2] = v335;
              _os_log_impl(&dword_1830D4000, v334, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> http1->parameters is NULL when opening responder stream", buf, 0x26u);
            }
          }
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
          BOOL v336 = (char *)_os_log_send_and_compose_impl();
          v1049[0] = 16;
          aBlock[0] = 0;
          if (__nwlog_fault(v336, v1049, aBlock))
          {
            if (v1049[0] == 17)
            {
              os_log_type_t v337 = __nwlog_obj();
              os_log_type_t v338 = v1049[0];
              if (!os_log_type_enabled(v337, (os_log_type_t)v1049[0])) {
                goto LABEL_725;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
              int v339 = "%{public}s http1->parameters is NULL when opening responder stream";
              goto LABEL_724;
            }
            if (!aBlock[0])
            {
              os_log_type_t v337 = __nwlog_obj();
              os_log_type_t v338 = v1049[0];
              if (!os_log_type_enabled(v337, (os_log_type_t)v1049[0])) {
                goto LABEL_725;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
              int v339 = "%{public}s http1->parameters is NULL when opening responder stream, backtrace limit exceeded";
              goto LABEL_724;
            }
            BOOL v356 = (char *)__nw_create_backtrace_string();
            os_log_type_t v337 = __nwlog_obj();
            os_log_type_t v338 = v1049[0];
            BOOL v357 = os_log_type_enabled(v337, (os_log_type_t)v1049[0]);
            if (v356)
            {
              if (v357)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v356;
                _os_log_impl(&dword_1830D4000, v337, v338, "%{public}s http1->parameters is NULL when opening responder stream, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v356);
              goto LABEL_725;
            }
            if (v357)
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
              int v339 = "%{public}s http1->parameters is NULL when opening responder stream, no backtrace";
LABEL_724:
              _os_log_impl(&dword_1830D4000, v337, v338, v339, buf, 0xCu);
            }
          }
LABEL_725:
          if (v336) {
            free(v336);
          }
          goto LABEL_718;
        }
        if ((*(unsigned char *)(v11 + 158) & 1) == 0)
        {
          v753 = __nwlog_obj();
          if (os_log_type_enabled(v753, OS_LOG_TYPE_ERROR))
          {
            int v754 = *(_DWORD *)(v1026 + 372);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v1026 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v1035 = (uint64_t)" ";
            *(_WORD *)v1036 = 1024;
            *(_DWORD *)&v1036[2] = v754;
            _os_log_impl(&dword_1830D4000, v753, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> listen handler has no new_flow callback, ignoring incoming flow", buf, 0x26u);
          }
        }
        int v755 = *v260;
        int v756 = v755 | (*(unsigned __int8 *)(v16 + 874) << 16);
        if ((v755 & 0x100) != 0)
        {
          if ((*(unsigned char *)(v16 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              v802 = __nwlog_obj();
              if (os_log_type_enabled(v802, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v803 = *(void *)(v16 + 488);
                int v804 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                int v805 = *(_DWORD *)(v16 + 860);
                if (v803) {
                  LODWORD(v803) = *(_DWORD *)(v803 + 424);
                }
                *(_DWORD *)buf = 136447490;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v16 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v1035 = (uint64_t)" ";
                *(_WORD *)v1036 = 1024;
                *(_DWORD *)&v1036[2] = v804;
                *(_WORD *)&v1036[6] = 1024;
                *(_DWORD *)&v1036[8] = v805;
                *(_WORD *)&v1036[12] = 1024;
                *(_DWORD *)&v1036[14] = v803;
                _os_log_impl(&dword_1830D4000, v802, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> already closed", buf, 0x32u);
                uint64_t v11 = v1026;
                goto LABEL_718;
              }
            }
          }
LABEL_1737:
          uint64_t v11 = v1026;
          goto LABEL_718;
        }
        *(unsigned char *)(v16 + 874) = BYTE2(v756);
        unsigned __int16 *v260 = v756 | 0x100;
        if ((*(unsigned char *)(v16 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            v1001 = __nwlog_obj();
            if (os_log_type_enabled(v1001, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v1002 = *(void *)(v16 + 488);
              int v1003 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
              int v1004 = *(_DWORD *)(v16 + 860);
              if (v1002) {
                LODWORD(v1002) = *(_DWORD *)(v1002 + 424);
              }
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v16 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v1035 = (uint64_t)" ";
              *(_WORD *)v1036 = 1024;
              *(_DWORD *)&v1036[2] = v1003;
              *(_WORD *)&v1036[6] = 1024;
              *(_DWORD *)&v1036[8] = v1004;
              *(_WORD *)&v1036[12] = 1024;
              *(_DWORD *)&v1036[14] = v1002;
              _os_log_impl(&dword_1830D4000, v1001, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
            }
          }
        }
        uint64_t v757 = *(void *)(v16 + 480);
        if (!v757)
        {
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          v997 = (char *)_os_log_send_and_compose_impl();
          v1049[0] = 16;
          aBlock[0] = 0;
          if (!__nwlog_fault(v997, v1049, aBlock)) {
            goto LABEL_1879;
          }
          if (v1049[0] == 17)
          {
            v998 = __nwlog_obj();
            os_log_type_t v999 = v1049[0];
            if (!os_log_type_enabled(v998, (os_log_type_t)v1049[0])) {
              goto LABEL_1879;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            v1000 = "%{public}s called with null http1";
          }
          else if (aBlock[0])
          {
            v1005 = (char *)__nw_create_backtrace_string();
            v998 = __nwlog_obj();
            os_log_type_t v999 = v1049[0];
            BOOL v1006 = os_log_type_enabled(v998, (os_log_type_t)v1049[0]);
            if (v1005)
            {
              if (v1006)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v1005;
                _os_log_impl(&dword_1830D4000, v998, v999, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v1005);
              goto LABEL_1879;
            }
            if (!v1006) {
              goto LABEL_1879;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            v1000 = "%{public}s called with null http1, no backtrace";
          }
          else
          {
            v998 = __nwlog_obj();
            os_log_type_t v999 = v1049[0];
            if (!os_log_type_enabled(v998, (os_log_type_t)v1049[0])) {
              goto LABEL_1879;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            v1000 = "%{public}s called with null http1, backtrace limit exceeded";
          }
          v1016 = buf;
LABEL_1878:
          _os_log_impl(&dword_1830D4000, v998, v999, v1000, v1016, 0xCu);
          goto LABEL_1879;
        }
        int v758 = *v260;
        int v759 = v758 | (*(unsigned __int8 *)(v16 + 874) << 16);
        if ((v758 & 0x800) != 0)
        {
          if ((*(unsigned char *)(v16 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              v813 = __nwlog_obj();
              if (os_log_type_enabled(v813, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v814 = *(void *)(v16 + 488);
                int v815 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                int v816 = *(_DWORD *)(v16 + 860);
                if (v814) {
                  LODWORD(v814) = *(_DWORD *)(v814 + 424);
                }
                *(_DWORD *)buf = 136447490;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v16 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v1035 = (uint64_t)" ";
                *(_WORD *)v1036 = 1024;
                *(_DWORD *)&v1036[2] = v815;
                *(_WORD *)&v1036[6] = 1024;
                *(_DWORD *)&v1036[8] = v816;
                *(_WORD *)&v1036[12] = 1024;
                *(_DWORD *)&v1036[14] = v814;
                _os_log_impl(&dword_1830D4000, v813, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
              }
            }
          }
          goto LABEL_1736;
        }
        *(unsigned char *)(v16 + 874) = BYTE2(v759);
        unsigned __int16 *v260 = v759 | 0x800;
        uint64_t v760 = *(unsigned int *)(v757 + 368) + 1;
        uint64_t v761 = v760 << 31 >> 31;
        *(_DWORD *)(v757 + 368) = v760;
        if (v761 == v760 && (v761 & 0x8000000000000000) == 0)
        {
LABEL_1731:
          if ((*(unsigned char *)(v16 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              v1007 = __nwlog_obj();
              if (os_log_type_enabled(v1007, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v1008 = *(void *)(v16 + 488);
                int v1009 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                int v1010 = *(_DWORD *)(v16 + 860);
                if (v1008) {
                  LODWORD(v1008) = *(_DWORD *)(v1008 + 424);
                }
                int v1011 = *(_DWORD *)(v757 + 368) + *(_DWORD *)(v757 + 364);
                *(_DWORD *)buf = 136447746;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v16 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v1035 = (uint64_t)" ";
                *(_WORD *)v1036 = 1024;
                *(_DWORD *)&v1036[2] = v1009;
                *(_WORD *)&v1036[6] = 1024;
                *(_DWORD *)&v1036[8] = v1010;
                *(_WORD *)&v1036[12] = 1024;
                *(_DWORD *)&v1036[14] = v1008;
                *(_WORD *)&v1036[18] = 1024;
                *(_DWORD *)&v1036[20] = v1011;
                _os_log_impl(&dword_1830D4000, v1007, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
              }
            }
          }
          v975 = *(void **)(v16 + 496);
          if (!v975)
          {
            __nwlog_obj();
            *(_DWORD *)v1049 = 136446210;
            *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
            v997 = (char *)_os_log_send_and_compose_impl();
            aBlock[0] = 16;
            type[0] = 0;
            if (!__nwlog_fault(v997, aBlock, type)) {
              goto LABEL_1879;
            }
            if (aBlock[0] == 17)
            {
              v998 = __nwlog_obj();
              os_log_type_t v999 = aBlock[0];
              if (!os_log_type_enabled(v998, (os_log_type_t)aBlock[0])) {
                goto LABEL_1879;
              }
              *(_DWORD *)v1049 = 136446210;
              *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              v1000 = "%{public}s called with null http1_connection->context";
LABEL_1877:
              v1016 = v1049;
              goto LABEL_1878;
            }
            if (!type[0])
            {
              v998 = __nwlog_obj();
              os_log_type_t v999 = aBlock[0];
              if (!os_log_type_enabled(v998, (os_log_type_t)aBlock[0])) {
                goto LABEL_1879;
              }
              *(_DWORD *)v1049 = 136446210;
              *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              v1000 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
              goto LABEL_1877;
            }
            v1012 = (char *)__nw_create_backtrace_string();
            v998 = __nwlog_obj();
            os_log_type_t v999 = aBlock[0];
            BOOL v1013 = os_log_type_enabled(v998, (os_log_type_t)aBlock[0]);
            if (!v1012)
            {
              if (!v1013) {
                goto LABEL_1879;
              }
              *(_DWORD *)v1049 = 136446210;
              *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              v1000 = "%{public}s called with null http1_connection->context, no backtrace";
              goto LABEL_1877;
            }
            if (!v1013) {
              goto LABEL_1862;
            }
            *(_DWORD *)v1049 = 136446466;
            *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
            *(_WORD *)&v1049[12] = 2082;
            *(void *)&v1049[14] = v1012;
            v1014 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
            goto LABEL_1861;
          }
          uint64_t v976 = *(void *)(v16 + 480);
          if (v976)
          {
            uint64_t v977 = *(void *)(v976 + 200);
            *(void *)buf = MEMORY[0x1E4F143A8];
            *(void *)&buf[8] = 0x40000000;
            *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
            uint64_t v1035 = (uint64_t)&unk_1E52411C8;
            *(void *)v1036 = v977;
            nw_queue_context_async(v975, buf);
            goto LABEL_1736;
          }
          __nwlog_obj();
          *(_DWORD *)v1049 = 136446210;
          *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          v997 = (char *)_os_log_send_and_compose_impl();
          aBlock[0] = 16;
          type[0] = 0;
          if (__nwlog_fault(v997, aBlock, type))
          {
            if (aBlock[0] == 17)
            {
              v998 = __nwlog_obj();
              os_log_type_t v999 = aBlock[0];
              if (!os_log_type_enabled(v998, (os_log_type_t)aBlock[0])) {
                goto LABEL_1879;
              }
              *(_DWORD *)v1049 = 136446210;
              *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              v1000 = "%{public}s called with null http1";
              goto LABEL_1877;
            }
            if (!type[0])
            {
              v998 = __nwlog_obj();
              os_log_type_t v999 = aBlock[0];
              if (!os_log_type_enabled(v998, (os_log_type_t)aBlock[0])) {
                goto LABEL_1879;
              }
              *(_DWORD *)v1049 = 136446210;
              *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              v1000 = "%{public}s called with null http1, backtrace limit exceeded";
              goto LABEL_1877;
            }
            v1012 = (char *)__nw_create_backtrace_string();
            v998 = __nwlog_obj();
            os_log_type_t v999 = aBlock[0];
            BOOL v1015 = os_log_type_enabled(v998, (os_log_type_t)aBlock[0]);
            if (!v1012)
            {
              if (!v1015) {
                goto LABEL_1879;
              }
              *(_DWORD *)v1049 = 136446210;
              *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              v1000 = "%{public}s called with null http1, no backtrace";
              goto LABEL_1877;
            }
            if (!v1015) {
              goto LABEL_1862;
            }
            *(_DWORD *)v1049 = 136446466;
            *(void *)&v1049[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
            *(_WORD *)&v1049[12] = 2082;
            *(void *)&v1049[14] = v1012;
            v1014 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_1861:
            _os_log_impl(&dword_1830D4000, v998, v999, v1014, v1049, 0x16u);
LABEL_1862:
            free(v1012);
            if (v997) {
LABEL_1880:
            }
              free(v997);
LABEL_1736:
            if (!*(void *)(v16 + 488))
            {
              uint64_t v978 = *(void *)(v16 + 784);
              if (v978)
              {
                nw_queue_set_timer_values(v978, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
                uint64_t v11 = v1026;
                goto LABEL_718;
              }
              if ((*(unsigned char *)(v16 + 158) & 1) == 0)
              {
                v979 = __nwlog_obj();
                if (os_log_type_enabled(v979, OS_LOG_TYPE_ERROR))
                {
                  uint64_t v980 = *(void *)(v16 + 488);
                  int v981 = *(_DWORD *)(*(void *)(v16 + 480) + 372);
                  int v982 = *(_DWORD *)(v16 + 860);
                  if (v980) {
                    LODWORD(v980) = *(_DWORD *)(v980 + 424);
                  }
                  *(_DWORD *)buf = 136447490;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v16 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v1035 = (uint64_t)" ";
                  *(_WORD *)v1036 = 1024;
                  *(_DWORD *)&v1036[2] = v981;
                  *(_WORD *)&v1036[6] = 1024;
                  *(_DWORD *)&v1036[8] = v982;
                  *(_WORD *)&v1036[12] = 1024;
                  *(_DWORD *)&v1036[14] = v980;
                  _os_log_impl(&dword_1830D4000, v979, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
                }
              }
              uint64_t v983 = *(void *)(v16 + 608);
              v984 = *(void **)(v16 + 496);
              *(void *)buf = MEMORY[0x1E4F143A8];
              *(void *)&buf[8] = 0x40000000;
              *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
              uint64_t v1035 = (uint64_t)&unk_1E52411A0;
              *(void *)v1036 = v983;
              nw_queue_context_async(v984, buf);
            }
            goto LABEL_1737;
          }
LABEL_1879:
          if (!v997) {
            goto LABEL_1736;
          }
          goto LABEL_1880;
        }
        __nwlog_obj();
        uint64_t v762 = *(unsigned int *)(v757 + 368);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->nonresuable_connections";
        *(_WORD *)&buf[22] = 2048;
        uint64_t v1035 = 1;
        *(_WORD *)v1036 = 2048;
        *(void *)&v1036[2] = v762;
        v763 = (char *)_os_log_send_and_compose_impl();
        v1049[0] = 16;
        aBlock[0] = 0;
        if (__nwlog_fault(v763, v1049, aBlock))
        {
          if (v1049[0] == 17)
          {
            v764 = __nwlog_obj();
            os_log_type_t v765 = v1049[0];
            if (os_log_type_enabled(v764, (os_log_type_t)v1049[0]))
            {
              uint64_t v766 = *(unsigned int *)(v757 + 368);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->nonresuable_connections";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v1035 = 1;
              *(_WORD *)v1036 = 2048;
              *(void *)&v1036[2] = v766;
              v767 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_1727:
              _os_log_impl(&dword_1830D4000, v764, v765, v767, buf, 0x2Au);
            }
          }
          else if (aBlock[0])
          {
            v932 = (char *)__nw_create_backtrace_string();
            v764 = __nwlog_obj();
            os_log_type_t v765 = v1049[0];
            BOOL v933 = os_log_type_enabled(v764, (os_log_type_t)v1049[0]);
            if (v932)
            {
              if (v933)
              {
                uint64_t v934 = *(unsigned int *)(v757 + 368);
                *(_DWORD *)buf = 136447234;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v1035 = 1;
                *(_WORD *)v1036 = 2048;
                *(void *)&v1036[2] = v934;
                *(_WORD *)&v1036[10] = 2082;
                *(void *)&v1036[12] = v932;
                _os_log_impl(&dword_1830D4000, v764, v765, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
              }
              free(v932);
              goto LABEL_1728;
            }
            if (v933)
            {
              uint64_t v974 = *(unsigned int *)(v757 + 368);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->nonresuable_connections";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v1035 = 1;
              *(_WORD *)v1036 = 2048;
              *(void *)&v1036[2] = v974;
              v767 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
              goto LABEL_1727;
            }
          }
          else
          {
            v764 = __nwlog_obj();
            os_log_type_t v765 = v1049[0];
            if (os_log_type_enabled(v764, (os_log_type_t)v1049[0]))
            {
              uint64_t v972 = *(unsigned int *)(v757 + 368);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->nonresuable_connections";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v1035 = 1;
              *(_WORD *)v1036 = 2048;
              *(void *)&v1036[2] = v972;
              v767 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
              goto LABEL_1727;
            }
          }
        }
LABEL_1728:
        if (v763) {
          free(v763);
        }
        *(_DWORD *)(v757 + 368) = -1;
        goto LABEL_1731;
      }
LABEL_360:
      int v207 = *(_DWORD *)(v11 + 352);
      *(_DWORD *)(v11 + 352) = v207 - 1;
      if (v207) {
        goto LABEL_378;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v208 = *(unsigned int *)(v11 + 352);
      *(_DWORD *)buf = 136446978;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = "http1->pending_output_handler_count";
      *(_WORD *)&buf[22] = 2048;
      uint64_t v1035 = 1;
      *(_WORD *)v1036 = 2048;
      *(void *)&v1036[2] = v208;
      BOOL v209 = (char *)_os_log_send_and_compose_impl();
      v1049[0] = 16;
      aBlock[0] = 0;
      if (!__nwlog_fault(v209, v1049, aBlock)) {
        goto LABEL_375;
      }
      if (v1049[0] == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v210 = gLogObj;
        os_log_type_t v211 = v1049[0];
        if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]))
        {
          uint64_t v212 = *(unsigned int *)(v11 + 352);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_output_handler_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v1035 = 1;
          *(_WORD *)v1036 = 2048;
          *(void *)&v1036[2] = v212;
          int v213 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_374:
          _os_log_impl(&dword_1830D4000, v210, v211, v213, buf, 0x2Au);
        }
      }
      else if (aBlock[0])
      {
        int v214 = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v210 = gLogObj;
        os_log_type_t v211 = v1049[0];
        BOOL v215 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]);
        if (v214)
        {
          if (v215)
          {
            uint64_t v216 = *(unsigned int *)(v1026 + 352);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_output_handler_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v1035 = 1;
            *(_WORD *)v1036 = 2048;
            *(void *)&v1036[2] = v216;
            *(_WORD *)&v1036[10] = 2082;
            *(void *)&v1036[12] = v214;
            _os_log_impl(&dword_1830D4000, v210, v211, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v214);
          uint64_t v11 = v1026;
          goto LABEL_375;
        }
        uint64_t v11 = v1026;
        if (v215)
        {
          uint64_t v218 = *(unsigned int *)(v1026 + 352);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_output_handler_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v1035 = 1;
          *(_WORD *)v1036 = 2048;
          *(void *)&v1036[2] = v218;
          int v213 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
          goto LABEL_374;
        }
      }
      else
      {
        uint64_t v210 = __nwlog_obj();
        os_log_type_t v211 = v1049[0];
        if (os_log_type_enabled(v210, (os_log_type_t)v1049[0]))
        {
          uint64_t v217 = *(unsigned int *)(v11 + 352);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_output_handler_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v1035 = 1;
          *(_WORD *)v1036 = 2048;
          *(void *)&v1036[2] = v217;
          int v213 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
          goto LABEL_374;
        }
      }
LABEL_375:
      if (v209) {
        free(v209);
      }
      *(_DWORD *)(v11 + 352) = 0;
      p_cache = NWConcrete_nw_resolution_report.cache;
      goto LABEL_378;
    }
    __nwlog_obj();
    uint64_t v130 = *(unsigned int *)(v11 + 348);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->pending_stream_count";
    *(_WORD *)&buf[22] = 2048;
    uint64_t v1035 = 1;
    *(_WORD *)v1036 = 2048;
    *(void *)&v1036[2] = v130;
    os_log_type_t v131 = (char *)_os_log_send_and_compose_impl();
    v1049[0] = 16;
    aBlock[0] = 0;
    if (__nwlog_fault(v131, v1049, aBlock))
    {
      if (v1049[0] == 17)
      {
        nw_parameters_t v132 = __nwlog_obj();
        os_log_type_t v133 = v1049[0];
        if (os_log_type_enabled(v132, (os_log_type_t)v1049[0]))
        {
          uint64_t v134 = *(unsigned int *)(v11 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v1035 = 1;
          *(_WORD *)v1036 = 2048;
          *(void *)&v1036[2] = v134;
          uint64_t v135 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_736:
          _os_log_impl(&dword_1830D4000, v132, v133, v135, buf, 0x2Au);
        }
      }
      else if (aBlock[0])
      {
        BOOL v358 = (char *)__nw_create_backtrace_string();
        nw_parameters_t v132 = __nwlog_obj();
        os_log_type_t v133 = v1049[0];
        BOOL v359 = os_log_type_enabled(v132, (os_log_type_t)v1049[0]);
        if (v358)
        {
          if (v359)
          {
            uint64_t v360 = *(unsigned int *)(v1026 + 348);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_stream_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v1035 = 1;
            *(_WORD *)v1036 = 2048;
            *(void *)&v1036[2] = v360;
            *(_WORD *)&v1036[10] = 2082;
            *(void *)&v1036[12] = v358;
            _os_log_impl(&dword_1830D4000, v132, v133, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v358);
          uint64_t v11 = v1026;
          goto LABEL_737;
        }
        uint64_t v11 = v1026;
        if (v359)
        {
          uint64_t v425 = *(unsigned int *)(v1026 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v1035 = 1;
          *(_WORD *)v1036 = 2048;
          *(void *)&v1036[2] = v425;
          uint64_t v135 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
          goto LABEL_736;
        }
      }
      else
      {
        nw_parameters_t v132 = __nwlog_obj();
        os_log_type_t v133 = v1049[0];
        if (os_log_type_enabled(v132, (os_log_type_t)v1049[0]))
        {
          uint64_t v373 = *(unsigned int *)(v11 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v1035 = 1;
          *(_WORD *)v1036 = 2048;
          *(void *)&v1036[2] = v373;
          uint64_t v135 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
          goto LABEL_736;
        }
      }
    }
LABEL_737:
    if (v131) {
      free(v131);
    }
    *(_DWORD *)(v11 + 348) = 0;
    p_cache = NWConcrete_nw_resolution_report.cache;
    goto LABEL_740;
  }
LABEL_1314:
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
  int v503 = (char *)_os_log_send_and_compose_impl();
  v1049[0] = 16;
  aBlock[0] = 0;
  if (!__nwlog_fault(v503, v1049, aBlock)) {
    goto LABEL_1328;
  }
  if (v1049[0] != 17)
  {
    if (!aBlock[0])
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v504 = gLogObj;
      os_log_type_t v505 = v1049[0];
      if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
        v506 = "%{public}s called with null http1_stream, backtrace limit exceeded";
        goto LABEL_1326;
      }
      goto LABEL_1328;
    }
    v782 = (char *)__nw_create_backtrace_string();
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    v783 = gLogObj;
    os_log_type_t v784 = v1049[0];
    BOOL v787 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]);
    if (v782)
    {
      if (v787)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v782;
        v786 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
        goto LABEL_1322;
      }
      goto LABEL_1323;
    }
    if (!v787) {
      goto LABEL_1328;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
    v506 = "%{public}s called with null http1_stream, no backtrace";
    goto LABEL_1333;
  }
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  int v504 = gLogObj;
  os_log_type_t v505 = v1049[0];
  if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v1049[0]))
  {
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_remove_input_handler";
    v506 = "%{public}s called with null http1_stream";
    goto LABEL_1326;
  }
LABEL_1328:
  if (v503) {
    free(v503);
  }
  return 0;
}

void ___ZL28nw_http1_add_idle_connectionP17nw_protocol_http1P19nw_http1_connection_block_invoke(void *a1)
{
  uint64_t v214 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = a1[4];
  if ((*(unsigned char *)(v2 + 158) & 1) == 0)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v3 = gLogObj;
    if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = a1[4];
      uint64_t v5 = v4 + 74;
      uint64_t v6 = *(void *)(v4 + 488);
      int v7 = *(_DWORD *)(*(void *)(v4 + 480) + 372);
      int v8 = *(_DWORD *)(v4 + 860);
      if (v6) {
        LODWORD(v6) = *(_DWORD *)(v6 + 424);
      }
      uint64_t v9 = a1[5];
      *(_DWORD *)buf = 136447746;
      *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection_block_invoke";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v5;
      *(_WORD *)&buf[22] = 2080;
      uint64_t v206 = (uint64_t)" ";
      *(_WORD *)int v207 = 1024;
      *(_DWORD *)&v207[2] = v7;
      *(_WORD *)&v207[6] = 1024;
      *(_DWORD *)&v207[8] = v8;
      *(_WORD *)&v207[12] = 1024;
      *(_DWORD *)&v207[14] = v6;
      *(_WORD *)&v207[18] = 2048;
      *(void *)&v207[20] = v9;
      _os_log_impl(&dword_1830D4000, v3, OS_LOG_TYPE_DEFAULT, "%{public}s %{public}s%s<i%u:c%u:s%u> idle connection timed out after %lldms, tearing down", buf, 0x3Cu);
    }
    uint64_t v2 = a1[4];
  }
  uint64_t v10 = a1[6];
  if (!v10)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
    uint64_t v11 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(type) = 16;
    LOBYTE(v210) = 0;
    if (__nwlog_fault(v11, &type, &v210))
    {
      if (type == 17)
      {
        uint64_t v107 = __nwlog_obj();
        os_log_type_t v108 = type;
        if (os_log_type_enabled(v107, (os_log_type_t)type))
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          uint64_t v14 = "%{public}s called with null http1";
LABEL_336:
          int v34 = v107;
          os_log_type_t v35 = v108;
          uint32_t v36 = 12;
          goto LABEL_41;
        }
      }
      else if ((_BYTE)v210)
      {
        backtrace_string = (char *)__nw_create_backtrace_string();
        uint64_t v107 = __nwlog_obj();
        os_log_type_t v108 = type;
        BOOL v162 = os_log_type_enabled(v107, (os_log_type_t)type);
        if (backtrace_string)
        {
          if (v162)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = backtrace_string;
            _os_log_impl(&dword_1830D4000, v107, v108, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(backtrace_string);
        }
        else if (v162)
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          uint64_t v14 = "%{public}s called with null http1, no backtrace";
          goto LABEL_336;
        }
      }
      else
      {
        uint64_t v107 = __nwlog_obj();
        os_log_type_t v108 = type;
        if (os_log_type_enabled(v107, (os_log_type_t)type))
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          uint64_t v14 = "%{public}s called with null http1, backtrace limit exceeded";
          goto LABEL_336;
        }
      }
    }
LABEL_42:
    if (!v11) {
      goto LABEL_58;
    }
    goto LABEL_43;
  }
  if (v2)
  {
    if ((*(unsigned char *)(v2 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v126 = __nwlog_obj();
        if (os_log_type_enabled(v126, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v127 = *(void *)(v2 + 488);
          int v128 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
          int v129 = *(_DWORD *)(v2 + 860);
          if (v127) {
            LODWORD(v127) = *(_DWORD *)(v127 + 424);
          }
          *(_DWORD *)buf = 136447746;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v2 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v206 = (uint64_t)" ";
          *(_WORD *)int v207 = 1024;
          *(_DWORD *)&v207[2] = v128;
          *(_WORD *)&v207[6] = 1024;
          *(_DWORD *)&v207[8] = v129;
          *(_WORD *)&v207[12] = 1024;
          *(_DWORD *)&v207[14] = v127;
          *(_WORD *)&v207[18] = 2048;
          *(void *)&v207[20] = v2;
          _os_log_impl(&dword_1830D4000, v126, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for connection %p", buf, 0x3Cu);
        }
      }
    }
    if (((*(unsigned __int16 *)(v2 + 872) | (*(unsigned __int8 *)(v2 + 874) << 16)) & 0x80000) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v2;
      uint64_t v11 = (char *)_os_log_send_and_compose_impl();
      LOBYTE(type) = 16;
      LOBYTE(v210) = 0;
      if (!__nwlog_fault(v11, &type, &v210)) {
        goto LABEL_42;
      }
      if (type == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v12 = gLogObj;
        os_log_type_t v13 = type;
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)type)) {
          goto LABEL_42;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v2;
        uint64_t v14 = "%{public}s connection %p not in idle list, cannot remove";
LABEL_40:
        int v34 = v12;
        os_log_type_t v35 = v13;
        uint32_t v36 = 22;
LABEL_41:
        _os_log_impl(&dword_1830D4000, v34, v35, v14, buf, v36);
        goto LABEL_42;
      }
      if (!(_BYTE)v210)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v12 = gLogObj;
        os_log_type_t v13 = type;
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)type)) {
          goto LABEL_42;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v2;
        uint64_t v14 = "%{public}s connection %p not in idle list, cannot remove, backtrace limit exceeded";
        goto LABEL_40;
      }
      uint64_t v17 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v12 = gLogObj;
      os_log_type_t v13 = type;
      BOOL v18 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)type);
      if (!v17)
      {
        if (!v18) {
          goto LABEL_42;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v2;
        uint64_t v14 = "%{public}s connection %p not in idle list, cannot remove, no backtrace";
        goto LABEL_40;
      }
      if (!v18) {
        goto LABEL_23;
      }
      *(_DWORD *)buf = 136446722;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v2;
      *(_WORD *)&buf[22] = 2082;
      uint64_t v206 = (uint64_t)v17;
      uint64_t v19 = "%{public}s connection %p not in idle list, cannot remove, dumping backtrace:%{public}s";
      int v20 = v12;
      os_log_type_t v21 = v13;
      uint32_t v22 = 32;
      goto LABEL_22;
    }
    uint64_t v15 = *(void *)(v2 + 592);
    uint64_t v16 = *(void **)(v2 + 600);
    if (v15)
    {
      *(void *)(v15 + 600) = v16;
      uint64_t v16 = *(void **)(v2 + 600);
    }
    else
    {
      *(void *)(v10 + 216) = v16;
    }
    BOOL v23 = (_WORD *)(v2 + 872);
    *uint64_t v16 = v15;
    *(void *)(v2 + 592) = 0;
    *(void *)(v2 + 600) = 0;
    int v24 = *(_DWORD *)(v10 + 340);
    *(_DWORD *)(v10 + 340) = v24 - 1;
    if (v24)
    {
LABEL_52:
      int v39 = (unsigned __int16)*v23;
      unsigned int v40 = (v39 | (*(unsigned __int8 *)(v2 + 874) << 16)) & 0xFFF7FFFF;
      _WORD *v23 = v39;
      *(unsigned char *)(v2 + 874) = BYTE2(v40);
      if ((*(unsigned char *)(v2 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          uint64_t v170 = __nwlog_obj();
          if (os_log_type_enabled(v170, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v171 = *(void *)(v2 + 488);
            int v172 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
            int v173 = *(_DWORD *)(v2 + 860);
            if (v171) {
              LODWORD(v171) = *(_DWORD *)(v171 + 424);
            }
            int v174 = *(_DWORD *)(v10 + 340);
            *(_DWORD *)buf = 136448002;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v2 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v206 = (uint64_t)" ";
            *(_WORD *)int v207 = 1024;
            *(_DWORD *)&v207[2] = v172;
            *(_WORD *)&v207[6] = 1024;
            *(_DWORD *)&v207[8] = v173;
            *(_WORD *)&v207[12] = 1024;
            *(_DWORD *)&v207[14] = v171;
            *(_WORD *)&v207[18] = 2048;
            *(void *)&v207[20] = v2;
            __int16 v208 = 1024;
            LODWORD(v209) = v174;
            _os_log_impl(&dword_1830D4000, v170, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed idle connection %p, now have %u idle connections", buf, 0x42u);
          }
        }
      }
      if (*(void *)(v2 + 784))
      {
        if ((*(unsigned char *)(v2 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            int v182 = __nwlog_obj();
            if (os_log_type_enabled(v182, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v183 = *(void *)(v2 + 488);
              int v184 = *(_DWORD *)(*(void *)(v2 + 480) + 372);
              int v185 = *(_DWORD *)(v2 + 860);
              if (v183) {
                LODWORD(v183) = *(_DWORD *)(v183 + 424);
              }
              *(_DWORD *)buf = 136447746;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v2 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v206 = (uint64_t)" ";
              *(_WORD *)int v207 = 1024;
              *(_DWORD *)&v207[2] = v184;
              *(_WORD *)&v207[6] = 1024;
              *(_DWORD *)&v207[8] = v185;
              *(_WORD *)&v207[12] = 1024;
              *(_DWORD *)&v207[14] = v183;
              *(_WORD *)&v207[18] = 2048;
              *(void *)&v207[20] = v2;
              _os_log_impl(&dword_1830D4000, v182, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> deactivating destroy timer for connection %p", buf, 0x3Cu);
            }
          }
        }
        nw_queue_cancel_source(*(void *)(v2 + 784));
        *(void *)(v2 + 784) = 0;
      }
      goto LABEL_58;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v25 = *(unsigned int *)(v10 + 340);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->idle_connections_count";
    *(_WORD *)&buf[22] = 2048;
    uint64_t v206 = 1;
    *(_WORD *)int v207 = 2048;
    *(void *)&v207[2] = v25;
    int v26 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(type) = 16;
    LOBYTE(v210) = 0;
    if (__nwlog_fault(v26, &type, &v210))
    {
      if (type == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v27 = gLogObj;
        os_log_type_t v28 = type;
        if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)type))
        {
          uint64_t v29 = *(unsigned int *)(v10 + 340);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->idle_connections_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v206 = 1;
          *(_WORD *)int v207 = 2048;
          *(void *)&v207[2] = v29;
          int v30 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_48:
          _os_log_impl(&dword_1830D4000, v27, v28, v30, buf, 0x2Au);
        }
      }
      else if ((_BYTE)v210)
      {
        int v31 = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v27 = gLogObj;
        os_log_type_t v28 = type;
        BOOL v32 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)type);
        if (v31)
        {
          if (v32)
          {
            uint64_t v33 = *(unsigned int *)(v10 + 340);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->idle_connections_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v206 = 1;
            *(_WORD *)int v207 = 2048;
            *(void *)&v207[2] = v33;
            *(_WORD *)&v207[10] = 2082;
            *(void *)&v207[12] = v31;
            _os_log_impl(&dword_1830D4000, v27, v28, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v31);
          goto LABEL_49;
        }
        if (v32)
        {
          uint64_t v38 = *(unsigned int *)(v10 + 340);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->idle_connections_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v206 = 1;
          *(_WORD *)int v207 = 2048;
          *(void *)&v207[2] = v38;
          int v30 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
          goto LABEL_48;
        }
      }
      else
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v27 = gLogObj;
        os_log_type_t v28 = type;
        if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)type))
        {
          uint64_t v37 = *(unsigned int *)(v10 + 340);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->idle_connections_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v206 = 1;
          *(_WORD *)int v207 = 2048;
          *(void *)&v207[2] = v37;
          int v30 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
          goto LABEL_48;
        }
      }
    }
LABEL_49:
    if (v26) {
      free(v26);
    }
    *(_DWORD *)(v10 + 340) = 0;
    goto LABEL_52;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
  uint64_t v11 = (char *)_os_log_send_and_compose_impl();
  LOBYTE(type) = 16;
  LOBYTE(v210) = 0;
  if (!__nwlog_fault(v11, &type, &v210)) {
    goto LABEL_42;
  }
  if (type == 17)
  {
    uint64_t v107 = __nwlog_obj();
    os_log_type_t v108 = type;
    if (os_log_type_enabled(v107, (os_log_type_t)type))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
      uint64_t v14 = "%{public}s called with null http1_connection";
      goto LABEL_336;
    }
    goto LABEL_42;
  }
  if (!(_BYTE)v210)
  {
    uint64_t v107 = __nwlog_obj();
    os_log_type_t v108 = type;
    if (os_log_type_enabled(v107, (os_log_type_t)type))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
      uint64_t v14 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      goto LABEL_336;
    }
    goto LABEL_42;
  }
  uint64_t v17 = (char *)__nw_create_backtrace_string();
  uint64_t v107 = __nwlog_obj();
  os_log_type_t v108 = type;
  BOOL v167 = os_log_type_enabled(v107, (os_log_type_t)type);
  if (!v17)
  {
    if (v167)
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
      uint64_t v14 = "%{public}s called with null http1_connection, no backtrace";
      goto LABEL_336;
    }
    goto LABEL_42;
  }
  if (v167)
  {
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v17;
    uint64_t v19 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
    int v20 = v107;
    os_log_type_t v21 = v108;
    uint32_t v22 = 22;
LABEL_22:
    _os_log_impl(&dword_1830D4000, v20, v21, v19, buf, v22);
  }
LABEL_23:
  free(v17);
  if (v11) {
LABEL_43:
  }
    free(v11);
LABEL_58:
  uint64_t v41 = a1[4];
  if (v41)
  {
    __int16 v42 = *(void **)(v41 + 32);
    goto LABEL_60;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_http1_get_output_handler";
  int v109 = (char *)_os_log_send_and_compose_impl();
  LOBYTE(type) = 16;
  LOBYTE(v210) = 0;
  if (__nwlog_fault(v109, &type, &v210))
  {
    if (type == 17)
    {
      uint64_t v110 = __nwlog_obj();
      os_log_type_t v111 = type;
      if (!os_log_type_enabled(v110, (os_log_type_t)type)) {
        goto LABEL_312;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_output_handler";
      id v112 = "%{public}s called with null connection";
LABEL_311:
      _os_log_impl(&dword_1830D4000, v110, v111, v112, buf, 0xCu);
      goto LABEL_312;
    }
    if (!(_BYTE)v210)
    {
      uint64_t v110 = __nwlog_obj();
      os_log_type_t v111 = type;
      if (!os_log_type_enabled(v110, (os_log_type_t)type)) {
        goto LABEL_312;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_output_handler";
      id v112 = "%{public}s called with null connection, backtrace limit exceeded";
      goto LABEL_311;
    }
    char v163 = (char *)__nw_create_backtrace_string();
    uint64_t v110 = __nwlog_obj();
    os_log_type_t v111 = type;
    BOOL v164 = os_log_type_enabled(v110, (os_log_type_t)type);
    if (!v163)
    {
      if (!v164) {
        goto LABEL_312;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_output_handler";
      id v112 = "%{public}s called with null connection, no backtrace";
      goto LABEL_311;
    }
    if (v164)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_output_handler";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v163;
      _os_log_impl(&dword_1830D4000, v110, v111, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v163);
  }
LABEL_312:
  if (v109) {
    free(v109);
  }
  uint64_t v41 = a1[4];
  if (v41)
  {
    __int16 v42 = 0;
    goto LABEL_60;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
  int v191 = (char *)_os_log_send_and_compose_impl();
  LOBYTE(type) = 16;
  LOBYTE(v210) = 0;
  if (__nwlog_fault(v191, &type, &v210))
  {
    if (type == 17)
    {
      BOOL v192 = __nwlog_obj();
      os_log_type_t v193 = type;
      if (os_log_type_enabled(v192, (os_log_type_t)type))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
        int v194 = "%{public}s called with null connection";
LABEL_330:
        _os_log_impl(&dword_1830D4000, v192, v193, v194, buf, 0xCu);
      }
    }
    else if ((_BYTE)v210)
    {
      int v195 = (char *)__nw_create_backtrace_string();
      BOOL v192 = __nwlog_obj();
      os_log_type_t v193 = type;
      BOOL v196 = os_log_type_enabled(v192, (os_log_type_t)type);
      if (v195)
      {
        if (v196)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v195;
          _os_log_impl(&dword_1830D4000, v192, v193, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v195);
        goto LABEL_331;
      }
      if (v196)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
        int v194 = "%{public}s called with null connection, no backtrace";
        goto LABEL_330;
      }
    }
    else
    {
      BOOL v192 = __nwlog_obj();
      os_log_type_t v193 = type;
      if (os_log_type_enabled(v192, (os_log_type_t)type))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
        int v194 = "%{public}s called with null connection, backtrace limit exceeded";
        goto LABEL_330;
      }
    }
  }
LABEL_331:
  if (v191) {
    free(v191);
  }
  __int16 v42 = 0;
  uint64_t v41 = 0;
LABEL_60:
  nw_protocol_output_finished(v42, v41);
  uint64_t v43 = a1[6];
  if (!v43)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
    BOOL v113 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(type) = 16;
    LOBYTE(v210) = 0;
    if (!__nwlog_fault(v113, &type, &v210)) {
      goto LABEL_340;
    }
    if (type == 17)
    {
      uint64_t v114 = __nwlog_obj();
      os_log_type_t v115 = type;
      if (!os_log_type_enabled(v114, (os_log_type_t)type)) {
        goto LABEL_340;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
      int v116 = "%{public}s called with null http1";
    }
    else if ((_BYTE)v210)
    {
      char v165 = (char *)__nw_create_backtrace_string();
      uint64_t v114 = __nwlog_obj();
      os_log_type_t v115 = type;
      BOOL v166 = os_log_type_enabled(v114, (os_log_type_t)type);
      if (v165)
      {
        if (v166)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v165;
          _os_log_impl(&dword_1830D4000, v114, v115, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v165);
LABEL_340:
        if (!v113) {
          return;
        }
LABEL_341:
        free(v113);
        return;
      }
      if (!v166) {
        goto LABEL_340;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
      int v116 = "%{public}s called with null http1, no backtrace";
    }
    else
    {
      uint64_t v114 = __nwlog_obj();
      os_log_type_t v115 = type;
      if (!os_log_type_enabled(v114, (os_log_type_t)type)) {
        goto LABEL_340;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
      int v116 = "%{public}s called with null http1, backtrace limit exceeded";
    }
LABEL_339:
    _os_log_impl(&dword_1830D4000, v114, v115, v116, buf, 0xCu);
    goto LABEL_340;
  }
  uint64_t v44 = a1[4];
  if (v44)
  {
    nw_http_connection_metadata_closed(*(void **)(v44 + 768));
    if ((*(unsigned char *)(v44 + 158) & 1) == 0)
    {
      if (!gLogDatapath) {
        goto LABEL_64;
      }
      char v146 = __nwlog_obj();
      if (os_log_type_enabled(v146, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v147 = *(void *)(v44 + 488);
        int v148 = *(_DWORD *)(*(void *)(v44 + 480) + 372);
        int v149 = *(_DWORD *)(v44 + 860);
        if (v147) {
          LODWORD(v147) = *(_DWORD *)(v147 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v44 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v206 = (uint64_t)" ";
        *(_WORD *)int v207 = 1024;
        *(_DWORD *)&v207[2] = v148;
        *(_WORD *)&v207[6] = 1024;
        *(_DWORD *)&v207[8] = v149;
        *(_WORD *)&v207[12] = 1024;
        *(_DWORD *)&v207[14] = v147;
        _os_log_impl(&dword_1830D4000, v146, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing unprocessed_input_frames", buf, 0x32u);
      }
    }
    if (gLogDatapath)
    {
      uint64_t v150 = __nwlog_obj();
      if (os_log_type_enabled(v150, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(type) = 136446210;
        *(void *)((char *)&type + 4) = "nw_protocol_finalize_temp_frame_array";
        _os_log_impl(&dword_1830D4000, v150, OS_LOG_TYPE_DEBUG, "%{public}s called", (uint8_t *)&type, 0xCu);
      }
    }
LABEL_64:
    *(void *)buf = MEMORY[0x1E4F143A8];
    *(void *)&buf[8] = 0x40000000;
    *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
    uint64_t v206 = (uint64_t)&__block_descriptor_tmp_58_40119;
    *(void *)int v207 = v44 + 616;
    v207[8] = 0;
    uint64_t v45 = *(void *)(v44 + 616);
    do
    {
      if (!v45) {
        break;
      }
      uint64_t v46 = *(void *)(v45 + 32);
      char v47 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
      uint64_t v45 = v46;
    }
    while ((v47 & 1) != 0);
    if ((*(unsigned char *)(v44 + 158) & 1) == 0)
    {
      if (!gLogDatapath) {
        goto LABEL_69;
      }
      int v151 = __nwlog_obj();
      if (os_log_type_enabled(v151, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v152 = *(void *)(v44 + 488);
        int v153 = *(_DWORD *)(*(void *)(v44 + 480) + 372);
        int v154 = *(_DWORD *)(v44 + 860);
        if (v152) {
          LODWORD(v152) = *(_DWORD *)(v152 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v44 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v206 = (uint64_t)" ";
        *(_WORD *)int v207 = 1024;
        *(_DWORD *)&v207[2] = v153;
        *(_WORD *)&v207[6] = 1024;
        *(_DWORD *)&v207[8] = v154;
        *(_WORD *)&v207[12] = 1024;
        *(_DWORD *)&v207[14] = v152;
        _os_log_impl(&dword_1830D4000, v151, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing processed_input_frames", buf, 0x32u);
      }
    }
    if (gLogDatapath)
    {
      uint64_t v155 = __nwlog_obj();
      if (os_log_type_enabled(v155, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(type) = 136446210;
        *(void *)((char *)&type + 4) = "nw_protocol_finalize_temp_frame_array";
        _os_log_impl(&dword_1830D4000, v155, OS_LOG_TYPE_DEBUG, "%{public}s called", (uint8_t *)&type, 0xCu);
      }
    }
LABEL_69:
    int v48 = (uint64_t *)(v44 + 632);
    *(void *)buf = MEMORY[0x1E4F143A8];
    *(void *)&buf[8] = 0x40000000;
    *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
    uint64_t v206 = (uint64_t)&__block_descriptor_tmp_58_40119;
    *(void *)int v207 = v44 + 632;
    v207[8] = 0;
    uint64_t v49 = *(void *)(v44 + 632);
    do
    {
      if (!v49) {
        break;
      }
      uint64_t v50 = *(void *)(v49 + 32);
      char v51 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
      uint64_t v49 = v50;
    }
    while ((v51 & 1) != 0);
    if ((*(unsigned char *)(v44 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v130 = __nwlog_obj();
        if (os_log_type_enabled(v130, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v131 = *(void *)(v44 + 488);
          int v132 = *(_DWORD *)(*(void *)(v44 + 480) + 372);
          int v133 = *(_DWORD *)(v44 + 860);
          if (v131) {
            LODWORD(v131) = *(_DWORD *)(v131 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v44 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v206 = (uint64_t)" ";
          *(_WORD *)int v207 = 1024;
          *(_DWORD *)&v207[2] = v132;
          *(_WORD *)&v207[6] = 1024;
          *(_DWORD *)&v207[8] = v133;
          *(_WORD *)&v207[12] = 1024;
          *(_DWORD *)&v207[14] = v131;
          _os_log_impl(&dword_1830D4000, v130, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removing pending_output_frames", buf, 0x32u);
        }
      }
    }
    *(void *)&long long type = MEMORY[0x1E4F143A8];
    *((void *)&type + 1) = 0x40000000;
    uint64_t v202 = (uint64_t (*)(long long *))___ZL29nw_http1_tear_down_connectionP17nw_protocol_http1P19nw_http1_connection_block_invoke;
    BOOL v203 = &__block_descriptor_tmp_57_40171;
    uint64_t v204 = v44;
    uint64_t v52 = *(void *)(v44 + 648);
    do
    {
      if (!v52) {
        break;
      }
      uint64_t v53 = *(void *)(v52 + 32);
      char v54 = v202(&type);
      uint64_t v52 = v53;
    }
    while ((v54 & 1) != 0);
    BOOL v55 = (uint64_t *)(v44 + 696);
    nw_frame_cache_remove_all((uint64_t *)(v44 + 696));
    if ((*(unsigned char *)(v44 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v134 = __nwlog_obj();
        if (os_log_type_enabled(v134, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v135 = *(void *)(v44 + 488);
          int v136 = *(_DWORD *)(*(void *)(v44 + 480) + 372);
          int v137 = *(_DWORD *)(v44 + 860);
          if (v135) {
            LODWORD(v135) = *(_DWORD *)(v135 + 424);
          }
          uint64_t v138 = *(void *)(v44 + 32);
          *(_DWORD *)buf = 136447746;
          *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v44 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v206 = (uint64_t)" ";
          *(_WORD *)int v207 = 1024;
          *(_DWORD *)&v207[2] = v136;
          *(_WORD *)&v207[6] = 1024;
          *(_DWORD *)&v207[8] = v137;
          *(_WORD *)&v207[12] = 1024;
          *(_DWORD *)&v207[14] = v135;
          *(_WORD *)&v207[18] = 2048;
          *(void *)&v207[20] = v138;
          _os_log_impl(&dword_1830D4000, v134, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> calling remove input handler on output handler %p", buf, 0x3Cu);
        }
      }
    }
    int v56 = *(_DWORD *)(v43 + 336);
    *(_DWORD *)(v43 + 336) = v56 - 1;
    if (v56)
    {
      if (*(unsigned char *)(v43 + 158)) {
        goto LABEL_100;
      }
      goto LABEL_99;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v57 = *(unsigned int *)(v43 + 336);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->connections_count";
    *(_WORD *)&buf[22] = 2048;
    uint64_t v206 = 1;
    *(_WORD *)int v207 = 2048;
    *(void *)&v207[2] = v57;
    int v58 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(v210) = 16;
    os_log_type_t v200 = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v58, &v210, &v200))
    {
      if (v210 == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v59 = gLogObj;
        os_log_type_t v60 = v210;
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v210)) {
          goto LABEL_96;
        }
        uint64_t v61 = *(unsigned int *)(v43 + 336);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->connections_count";
        *(_WORD *)&buf[22] = 2048;
        uint64_t v206 = 1;
        *(_WORD *)int v207 = 2048;
        *(void *)&v207[2] = v61;
        char v62 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_95:
        _os_log_impl(&dword_1830D4000, v59, v60, v62, buf, 0x2Au);
        goto LABEL_96;
      }
      if (v200 == OS_LOG_TYPE_DEFAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v59 = gLogObj;
        os_log_type_t v60 = v210;
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v210)) {
          goto LABEL_96;
        }
        uint64_t v66 = *(unsigned int *)(v43 + 336);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->connections_count";
        *(_WORD *)&buf[22] = 2048;
        uint64_t v206 = 1;
        *(_WORD *)int v207 = 2048;
        *(void *)&v207[2] = v66;
        char v62 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
        goto LABEL_95;
      }
      uint64_t v63 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v59 = gLogObj;
      os_log_type_t v60 = v210;
      BOOL v64 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v210);
      if (!v63)
      {
        if (!v64) {
          goto LABEL_96;
        }
        uint64_t v67 = *(unsigned int *)(v43 + 336);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->connections_count";
        *(_WORD *)&buf[22] = 2048;
        uint64_t v206 = 1;
        *(_WORD *)int v207 = 2048;
        *(void *)&v207[2] = v67;
        char v62 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
        goto LABEL_95;
      }
      if (v64)
      {
        uint64_t v65 = *(unsigned int *)(v43 + 336);
        *(_DWORD *)buf = 136447234;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->connections_count";
        *(_WORD *)&buf[22] = 2048;
        uint64_t v206 = 1;
        *(_WORD *)int v207 = 2048;
        *(void *)&v207[2] = v65;
        *(_WORD *)&v207[10] = 2082;
        *(void *)&v207[12] = v63;
        _os_log_impl(&dword_1830D4000, v59, v60, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
      }
      free(v63);
    }
LABEL_96:
    if (v58) {
      free(v58);
    }
    *(_DWORD *)(v43 + 336) = 0;
    BOOL v55 = (uint64_t *)(v44 + 696);
    int v48 = (uint64_t *)(v44 + 632);
    if (*(unsigned char *)(v43 + 158))
    {
LABEL_100:
      if ((*(_WORD *)(v44 + 872) & 0x800) == 0) {
        goto LABEL_122;
      }
      int v68 = *(_DWORD *)(v43 + 368);
      *(_DWORD *)(v43 + 368) = v68 - 1;
      if (v68)
      {
        if (*(unsigned char *)(v43 + 158)) {
          goto LABEL_122;
        }
        goto LABEL_121;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v69 = *(unsigned int *)(v43 + 368);
      *(_DWORD *)buf = 136446978;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = "http1->nonresuable_connections";
      *(_WORD *)&buf[22] = 2048;
      uint64_t v206 = 1;
      *(_WORD *)int v207 = 2048;
      *(void *)&v207[2] = v69;
      uint64_t v70 = (char *)_os_log_send_and_compose_impl();
      LOBYTE(v210) = 16;
      os_log_type_t v200 = OS_LOG_TYPE_DEFAULT;
      if (__nwlog_fault(v70, &v210, &v200))
      {
        if (v210 == 17)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          char v71 = gLogObj;
          os_log_type_t v72 = v210;
          if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v210)) {
            goto LABEL_118;
          }
          uint64_t v73 = *(unsigned int *)(v43 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v206 = 1;
          *(_WORD *)int v207 = 2048;
          *(void *)&v207[2] = v73;
          __int16 v74 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_117:
          _os_log_impl(&dword_1830D4000, v71, v72, v74, buf, 0x2Au);
          goto LABEL_118;
        }
        if (v200 == OS_LOG_TYPE_DEFAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          char v71 = gLogObj;
          os_log_type_t v72 = v210;
          if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v210)) {
            goto LABEL_118;
          }
          uint64_t v78 = *(unsigned int *)(v43 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v206 = 1;
          *(_WORD *)int v207 = 2048;
          *(void *)&v207[2] = v78;
          __int16 v74 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
          goto LABEL_117;
        }
        os_log_type_t v75 = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        char v71 = gLogObj;
        os_log_type_t v72 = v210;
        BOOL v76 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v210);
        if (!v75)
        {
          if (!v76) {
            goto LABEL_118;
          }
          uint64_t v79 = *(unsigned int *)(v43 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v206 = 1;
          *(_WORD *)int v207 = 2048;
          *(void *)&v207[2] = v79;
          __int16 v74 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
          goto LABEL_117;
        }
        if (v76)
        {
          uint64_t v77 = *(unsigned int *)(v43 + 368);
          *(_DWORD *)buf = 136447234;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v206 = 1;
          *(_WORD *)int v207 = 2048;
          *(void *)&v207[2] = v77;
          *(_WORD *)&v207[10] = 2082;
          *(void *)&v207[12] = v75;
          _os_log_impl(&dword_1830D4000, v71, v72, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
        }
        free(v75);
      }
LABEL_118:
      if (v70) {
        free(v70);
      }
      *(_DWORD *)(v43 + 368) = 0;
      if (*(unsigned char *)(v43 + 158))
      {
LABEL_122:
        nw_protocol_remove_input_handler(*(void *)(v44 + 32), v44);
        nw_protocol_set_output_handler(v44, 0);
        if ((*(unsigned char *)(v44 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            os_log_type_t v142 = __nwlog_obj();
            if (os_log_type_enabled(v142, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v143 = *(void *)(v44 + 488);
              int v144 = *(_DWORD *)(*(void *)(v44 + 480) + 372);
              int v145 = *(_DWORD *)(v44 + 860);
              if (v143) {
                LODWORD(v143) = *(_DWORD *)(v143 + 424);
              }
              *(_DWORD *)buf = 136447746;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_destroy";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v44 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v206 = (uint64_t)" ";
              *(_WORD *)int v207 = 1024;
              *(_DWORD *)&v207[2] = v144;
              *(_WORD *)&v207[6] = 1024;
              *(_DWORD *)&v207[8] = v145;
              *(_WORD *)&v207[12] = 1024;
              *(_DWORD *)&v207[14] = v143;
              *(_WORD *)&v207[18] = 2048;
              *(void *)&v207[20] = v44;
              _os_log_impl(&dword_1830D4000, v142, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> destroying %p", buf, 0x3Cu);
            }
          }
        }
        char v80 = *(unsigned char *)(v44 + 760);
        if (v80)
        {
          uint64_t v81 = *(void **)(v44 + 752);
          if (v81)
          {
            os_release(v81);
            char v80 = *(unsigned char *)(v44 + 760);
          }
        }
        *(void *)(v44 + 752) = 0;
        *(unsigned char *)(v44 + 760) = v80 | 1;
        char v82 = *(unsigned char *)(v44 + 744);
        if (v82)
        {
          int v83 = *(void **)(v44 + 736);
          if (v83)
          {
            os_release(v83);
            char v82 = *(unsigned char *)(v44 + 744);
          }
        }
        *(void *)(v44 + 736) = 0;
        *(unsigned char *)(v44 + 744) = v82 | 1;
        uint64_t v84 = *(void *)(v44 + 488);
        if (!v84 || *(void *)(v84 + 256) != v44)
        {
LABEL_143:
          *(void *)(v44 + 488) = 0;
          if ((*(unsigned char *)(v44 + 158) & 1) == 0)
          {
            if (!gLogDatapath) {
              goto LABEL_145;
            }
            uint64_t v156 = __nwlog_obj();
            if (os_log_type_enabled(v156, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v157 = *(void *)(v44 + 488);
              int v158 = *(_DWORD *)(*(void *)(v44 + 480) + 372);
              int v159 = *(_DWORD *)(v44 + 860);
              if (v157) {
                LODWORD(v157) = *(_DWORD *)(v157 + 424);
              }
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_destroy";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v44 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v206 = (uint64_t)" ";
              *(_WORD *)int v207 = 1024;
              *(_DWORD *)&v207[2] = v158;
              *(_WORD *)&v207[6] = 1024;
              *(_DWORD *)&v207[8] = v159;
              *(_WORD *)&v207[12] = 1024;
              *(_DWORD *)&v207[14] = v157;
              _os_log_impl(&dword_1830D4000, v156, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> finalizing frame arrays", buf, 0x32u);
            }
          }
          if (gLogDatapath)
          {
            char v160 = __nwlog_obj();
            if (os_log_type_enabled(v160, OS_LOG_TYPE_DEBUG))
            {
              int v210 = 136446210;
              os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
              _os_log_impl(&dword_1830D4000, v160, OS_LOG_TYPE_DEBUG, "%{public}s called", (uint8_t *)&v210, 0xCu);
            }
          }
LABEL_145:
          *(void *)buf = MEMORY[0x1E4F143A8];
          *(void *)&buf[8] = 0x40000000;
          *(void *)&buf[16] = ___ZL39nw_protocol_finalize_master_frame_arrayP16nw_frame_array_sb_block_invoke_40196;
          uint64_t v206 = (uint64_t)&__block_descriptor_tmp_60_40197;
          v207[0] = 0;
          uint64_t v92 = *(void *)(v44 + 680);
          do
          {
            if (!v92) {
              break;
            }
            uint64_t v93 = *(void *)(v92 + 16);
            char v94 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
            uint64_t v92 = v93;
          }
          while ((v94 & 1) != 0);
          if (!*(void *)(v44 + 680)) {
            goto LABEL_149;
          }
          __nwlog_obj();
          int v210 = 136446210;
          os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
          uint64_t v117 = (char *)_os_log_send_and_compose_impl();
          os_log_type_t v200 = OS_LOG_TYPE_ERROR;
          char v199 = 0;
          if (__nwlog_fault(v117, &v200, &v199))
          {
            if (v200 == OS_LOG_TYPE_FAULT)
            {
              uint64_t v118 = __nwlog_obj();
              os_log_type_t v119 = v200;
              if (!os_log_type_enabled(v118, v200)) {
                goto LABEL_345;
              }
              int v210 = 136446210;
              os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
              uint64_t v120 = "%{public}s frame array is not empty after finalize";
              goto LABEL_344;
            }
            if (!v199)
            {
              uint64_t v118 = __nwlog_obj();
              os_log_type_t v119 = v200;
              if (!os_log_type_enabled(v118, v200)) {
                goto LABEL_345;
              }
              int v210 = 136446210;
              os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
              uint64_t v120 = "%{public}s frame array is not empty after finalize, backtrace limit exceeded";
              goto LABEL_344;
            }
            uint64_t v178 = (char *)__nw_create_backtrace_string();
            uint64_t v118 = __nwlog_obj();
            os_log_type_t v119 = v200;
            BOOL v179 = os_log_type_enabled(v118, v200);
            if (v178)
            {
              if (v179)
              {
                int v210 = 136446466;
                os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
                __int16 v212 = 2082;
                int v213 = v178;
                _os_log_impl(&dword_1830D4000, v118, v119, "%{public}s frame array is not empty after finalize, dumping backtrace:%{public}s", (uint8_t *)&v210, 0x16u);
              }
              free(v178);
              goto LABEL_345;
            }
            if (v179)
            {
              int v210 = 136446210;
              os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
              uint64_t v120 = "%{public}s frame array is not empty after finalize, no backtrace";
LABEL_344:
              _os_log_impl(&dword_1830D4000, v118, v119, v120, (uint8_t *)&v210, 0xCu);
            }
          }
LABEL_345:
          if (v117) {
            free(v117);
          }
LABEL_149:
          if (gLogDatapath)
          {
            int v121 = __nwlog_obj();
            if (os_log_type_enabled(v121, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_finalize_master_frame_array";
              _os_log_impl(&dword_1830D4000, v121, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
            }
          }
          *(void *)buf = MEMORY[0x1E4F143A8];
          *(void *)&buf[8] = 0x40000000;
          *(void *)&buf[16] = ___ZL39nw_protocol_finalize_master_frame_arrayP16nw_frame_array_sb_block_invoke_40196;
          uint64_t v206 = (uint64_t)&__block_descriptor_tmp_60_40197;
          v207[0] = 0;
          uint64_t v95 = *(void *)(v44 + 664);
          do
          {
            if (!v95) {
              break;
            }
            uint64_t v96 = *(void *)(v95 + 16);
            char v97 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
            uint64_t v95 = v96;
          }
          while ((v97 & 1) != 0);
          if (!*(void *)(v44 + 664)) {
            goto LABEL_154;
          }
          __nwlog_obj();
          int v210 = 136446210;
          os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
          int v122 = (char *)_os_log_send_and_compose_impl();
          os_log_type_t v200 = OS_LOG_TYPE_ERROR;
          char v199 = 0;
          if (__nwlog_fault(v122, &v200, &v199))
          {
            if (v200 == OS_LOG_TYPE_FAULT)
            {
              os_log_type_t v123 = __nwlog_obj();
              os_log_type_t v124 = v200;
              if (!os_log_type_enabled(v123, v200)) {
                goto LABEL_350;
              }
              int v210 = 136446210;
              os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
              uint64_t v125 = "%{public}s frame array is not empty after finalize";
              goto LABEL_349;
            }
            if (!v199)
            {
              os_log_type_t v123 = __nwlog_obj();
              os_log_type_t v124 = v200;
              if (!os_log_type_enabled(v123, v200)) {
                goto LABEL_350;
              }
              int v210 = 136446210;
              os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
              uint64_t v125 = "%{public}s frame array is not empty after finalize, backtrace limit exceeded";
              goto LABEL_349;
            }
            int v180 = (char *)__nw_create_backtrace_string();
            os_log_type_t v123 = __nwlog_obj();
            os_log_type_t v124 = v200;
            BOOL v181 = os_log_type_enabled(v123, v200);
            if (v180)
            {
              if (v181)
              {
                int v210 = 136446466;
                os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
                __int16 v212 = 2082;
                int v213 = v180;
                _os_log_impl(&dword_1830D4000, v123, v124, "%{public}s frame array is not empty after finalize, dumping backtrace:%{public}s", (uint8_t *)&v210, 0x16u);
              }
              free(v180);
              goto LABEL_350;
            }
            if (v181)
            {
              int v210 = 136446210;
              os_log_type_t v211 = "nw_protocol_finalize_master_frame_array";
              uint64_t v125 = "%{public}s frame array is not empty after finalize, no backtrace";
LABEL_349:
              _os_log_impl(&dword_1830D4000, v123, v124, v125, (uint8_t *)&v210, 0xCu);
            }
          }
LABEL_350:
          if (v122) {
            free(v122);
          }
LABEL_154:
          nw_frame_cache_destroy(v55);
          int v98 = *(void **)(v44 + 528);
          if (v98)
          {
            uint64_t v99 = *(void **)(v44 + 544);
            if (v99) {
              nw_association_unregister(v98, v99);
            }
          }
          uint32_t v100 = *(void **)(v44 + 800);
          if (v100)
          {
            free(v100);
            *(void *)(v44 + 800) = 0;
          }
          *(_DWORD *)(v44 + 840) = 0;
          os_log_type_t v101 = *(void **)(v44 + 808);
          if (v101)
          {
            free(v101);
            *(void *)(v44 + 808) = 0;
          }
          *(_DWORD *)(v44 + 844) = 0;
          int v102 = *(void **)(v44 + 816);
          if (v102)
          {
            free(v102);
            *(void *)(v44 + 816) = 0;
          }
          *(_DWORD *)(v44 + 848) = 0;
          char v103 = *(void **)(v44 + 824);
          if (v103)
          {
            free(v103);
            *(void *)(v44 + 824) = 0;
          }
          *(_DWORD *)(v44 + 852) = 0;
          BOOL v104 = *(void **)(v44 + 832);
          if (v104)
          {
            free(v104);
            *(void *)(v44 + 832) = 0;
          }
          *(_DWORD *)(v44 + 856) = 0;
          (*(void (**)(void, void))(*(void *)(v44 + 608) + 16))(*(void *)(v44 + 608), 0);
          int v105 = *(const void **)(v44 + 608);
          if (v105)
          {
            _Block_release(v105);
            *(void *)(v44 + 608) = 0;
          }
          nw_http1_connection::~nw_http1_connection((nw_http1_connection *)v44);
          free(v106);
          if (!*(_DWORD *)(v43 + 336) && !*(_DWORD *)(v43 + 344)) {
            nw_protocol_http1_destroy(v43, v43);
          }
          return;
        }
        if (*(void *)(v84 + 248))
        {
          if ((*(unsigned char *)(v84 + 158) & 1) == 0)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v85 = gLogObj;
            if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
            {
              uint64_t v86 = *(void *)(v84 + 256);
              int v87 = *(_DWORD *)(*(void *)(v84 + 248) + 372);
              if (v86) {
                LODWORD(v86) = *(_DWORD *)(v86 + 860);
              }
              int v88 = *(_DWORD *)(v84 + 424);
              *(_DWORD *)buf = 136448002;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v84 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v206 = (uint64_t)" ";
              *(_WORD *)int v207 = 1024;
              *(_DWORD *)&v207[2] = v87;
              *(_WORD *)&v207[6] = 1024;
              *(_DWORD *)&v207[8] = v86;
              *(_WORD *)&v207[12] = 1024;
              *(_DWORD *)&v207[14] = v88;
              *(_WORD *)&v207[18] = 2048;
              *(void *)&v207[20] = v84;
              __int16 v208 = 2048;
              uint64_t v209 = v44;
              _os_log_impl(&dword_1830D4000, v85, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) finished with connection %p", buf, 0x46u);
            }
          }
          if (gLogDatapath)
          {
            uint64_t v190 = __nwlog_obj();
            if (os_log_type_enabled(v190, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_finalize_temp_frame_array";
              _os_log_impl(&dword_1830D4000, v190, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
            }
          }
          *(void *)buf = MEMORY[0x1E4F143A8];
          *(void *)&buf[8] = 0x40000000;
          *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
          uint64_t v206 = (uint64_t)&__block_descriptor_tmp_58_40119;
          *(void *)int v207 = v48;
          v207[8] = 0;
          uint64_t v89 = *v48;
          do
          {
            if (!v89) {
              break;
            }
            uint64_t v90 = *(void *)(v89 + 32);
            char v91 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
            uint64_t v89 = v90;
          }
          while ((v91 & 1) != 0);
          *(void *)(v84 + 256) = 0;
          *(void *)(v44 + 488) = 0;
          nw_protocol_set_output_handler(v84, 0);
          nw_protocol_set_input_handler(v44, 0);
          goto LABEL_143;
        }
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
        uint64_t v186 = (char *)_os_log_send_and_compose_impl();
        LOBYTE(v210) = 16;
        os_log_type_t v200 = OS_LOG_TYPE_DEFAULT;
        if (__nwlog_fault(v186, &v210, &v200))
        {
          if (v210 == 17)
          {
            int v187 = __nwlog_obj();
            os_log_type_t v188 = v210;
            if (!os_log_type_enabled(v187, (os_log_type_t)v210)) {
              goto LABEL_362;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
            os_log_type_t v189 = "%{public}s called with null http1_stream->protocol_http1";
            goto LABEL_361;
          }
          if (v200 == OS_LOG_TYPE_DEFAULT)
          {
            int v187 = __nwlog_obj();
            os_log_type_t v188 = v210;
            if (!os_log_type_enabled(v187, (os_log_type_t)v210)) {
              goto LABEL_362;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
            os_log_type_t v189 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
            goto LABEL_361;
          }
          int v197 = (char *)__nw_create_backtrace_string();
          int v187 = __nwlog_obj();
          os_log_type_t v188 = v210;
          BOOL v198 = os_log_type_enabled(v187, (os_log_type_t)v210);
          if (v197)
          {
            if (v198)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v197;
              _os_log_impl(&dword_1830D4000, v187, v188, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v197);
            goto LABEL_362;
          }
          if (v198)
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
            os_log_type_t v189 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
LABEL_361:
            _os_log_impl(&dword_1830D4000, v187, v188, v189, buf, 0xCu);
          }
        }
LABEL_362:
        if (v186) {
          free(v186);
        }
        goto LABEL_143;
      }
LABEL_121:
      if (gLogDatapath)
      {
        uint64_t v175 = __nwlog_obj();
        if (os_log_type_enabled(v175, OS_LOG_TYPE_DEBUG))
        {
          int v176 = *(_DWORD *)(v43 + 372);
          int v177 = *(_DWORD *)(v43 + 368) + *(_DWORD *)(v43 + 364);
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v43 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v206 = (uint64_t)" ";
          *(_WORD *)int v207 = 1024;
          *(_DWORD *)&v207[2] = v176;
          *(_WORD *)&v207[6] = 1024;
          *(_DWORD *)&v207[8] = v177;
          *(_WORD *)&v207[12] = 2048;
          *(void *)&v207[14] = v44;
          _os_log_impl(&dword_1830D4000, v175, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> decreased connection pool width to %u after removing non-reusable connection %p", buf, 0x36u);
        }
      }
      goto LABEL_122;
    }
LABEL_99:
    if (gLogDatapath)
    {
      __int16 v139 = __nwlog_obj();
      if (os_log_type_enabled(v139, OS_LOG_TYPE_DEBUG))
      {
        int v140 = *(_DWORD *)(v43 + 372);
        int v141 = *(_DWORD *)(v43 + 336);
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v43 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v206 = (uint64_t)" ";
        *(_WORD *)int v207 = 1024;
        *(_DWORD *)&v207[2] = v140;
        *(_WORD *)&v207[6] = 2048;
        *(void *)&v207[8] = v44;
        *(_WORD *)&v207[16] = 1024;
        *(_DWORD *)&v207[18] = v141;
        _os_log_impl(&dword_1830D4000, v139, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> removed connection %p, now have %u connections", buf, 0x36u);
      }
    }
    goto LABEL_100;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
  BOOL v113 = (char *)_os_log_send_and_compose_impl();
  LOBYTE(type) = 16;
  LOBYTE(v210) = 0;
  if (!__nwlog_fault(v113, &type, &v210)) {
    goto LABEL_340;
  }
  if (type == 17)
  {
    uint64_t v114 = __nwlog_obj();
    os_log_type_t v115 = type;
    if (!os_log_type_enabled(v114, (os_log_type_t)type)) {
      goto LABEL_340;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
    int v116 = "%{public}s called with null http1_connection";
    goto LABEL_339;
  }
  if (!(_BYTE)v210)
  {
    uint64_t v114 = __nwlog_obj();
    os_log_type_t v115 = type;
    if (!os_log_type_enabled(v114, (os_log_type_t)type)) {
      goto LABEL_340;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
    int v116 = "%{public}s called with null http1_connection, backtrace limit exceeded";
    goto LABEL_339;
  }
  int v168 = (char *)__nw_create_backtrace_string();
  uint64_t v114 = __nwlog_obj();
  os_log_type_t v115 = type;
  BOOL v169 = os_log_type_enabled(v114, (os_log_type_t)type);
  if (!v168)
  {
    if (!v169) {
      goto LABEL_340;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
    int v116 = "%{public}s called with null http1_connection, no backtrace";
    goto LABEL_339;
  }
  if (v169)
  {
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_http1_tear_down_connection";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v168;
    _os_log_impl(&dword_1830D4000, v114, v115, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
  }
  free(v168);
  if (v113) {
    goto LABEL_341;
  }
}

BOOL nw_protocol_http1_add_input_handler(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v285 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v57 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v57, aBlock, &type)) {
      goto LABEL_482;
    }
    if (aBlock[0] != 17)
    {
      if (type == OS_LOG_TYPE_DEFAULT)
      {
        int v58 = __nwlog_obj();
        os_log_type_t v59 = aBlock[0];
        if (!os_log_type_enabled(v58, (os_log_type_t)aBlock[0])) {
          goto LABEL_482;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        os_log_type_t v60 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_481;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v58 = __nwlog_obj();
      os_log_type_t v59 = aBlock[0];
      BOOL v80 = os_log_type_enabled(v58, (os_log_type_t)aBlock[0]);
      if (!backtrace_string)
      {
        if (!v80) {
          goto LABEL_482;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        os_log_type_t v60 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_481;
      }
      if (v80)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = backtrace_string;
        _os_log_impl(&dword_1830D4000, v58, v59, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_482;
    }
    int v58 = __nwlog_obj();
    os_log_type_t v59 = aBlock[0];
    if (!os_log_type_enabled(v58, (os_log_type_t)aBlock[0])) {
      goto LABEL_482;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    os_log_type_t v60 = "%{public}s called with null protocol";
LABEL_481:
    _os_log_impl(&dword_1830D4000, v58, v59, v60, buf, 0xCu);
    goto LABEL_482;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v57 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v57, aBlock, &type)) {
      goto LABEL_482;
    }
    if (aBlock[0] != 17)
    {
      if (type == OS_LOG_TYPE_DEFAULT)
      {
        int v58 = __nwlog_obj();
        os_log_type_t v59 = aBlock[0];
        if (!os_log_type_enabled(v58, (os_log_type_t)aBlock[0])) {
          goto LABEL_482;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        os_log_type_t v60 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_481;
      }
      uint64_t v81 = (char *)__nw_create_backtrace_string();
      int v58 = __nwlog_obj();
      os_log_type_t v59 = aBlock[0];
      BOOL v82 = os_log_type_enabled(v58, (os_log_type_t)aBlock[0]);
      if (!v81)
      {
        if (!v82) {
          goto LABEL_482;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        os_log_type_t v60 = "%{public}s called with null handle, no backtrace";
        goto LABEL_481;
      }
      if (v82)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v81;
        int v83 = "%{public}s called with null handle, dumping backtrace:%{public}s";
LABEL_117:
        _os_log_impl(&dword_1830D4000, v58, v59, v83, buf, 0x16u);
      }
LABEL_118:
      free(v81);
      if (!v57)
      {
LABEL_484:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
        uint64_t v61 = (char *)_os_log_send_and_compose_impl();
        aBlock[0] = 16;
        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
        if (__nwlog_fault(v61, aBlock, &type))
        {
          if (aBlock[0] == 17)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            char v62 = gLogObj;
            os_log_type_t v63 = aBlock[0];
            if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]))
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
              BOOL v64 = "%{public}s called with null http1";
              goto LABEL_495;
            }
          }
          else if (type)
          {
            uint64_t v268 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            int v269 = gLogObj;
            os_log_type_t v270 = aBlock[0];
            BOOL v271 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]);
            if (v268)
            {
              if (v271)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v268;
                _os_log_impl(&dword_1830D4000, v269, v270, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v268);
              goto LABEL_497;
            }
            if (v271)
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
              BOOL v64 = "%{public}s called with null http1, no backtrace";
              uint64_t v272 = v269;
              os_log_type_t v273 = v270;
              goto LABEL_496;
            }
          }
          else
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            char v62 = gLogObj;
            os_log_type_t v63 = aBlock[0];
            if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]))
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
              BOOL v64 = "%{public}s called with null http1, backtrace limit exceeded";
              goto LABEL_495;
            }
          }
        }
        goto LABEL_497;
      }
LABEL_483:
      free(v57);
      goto LABEL_484;
    }
    int v58 = __nwlog_obj();
    os_log_type_t v59 = aBlock[0];
    if (!os_log_type_enabled(v58, (os_log_type_t)aBlock[0])) {
      goto LABEL_482;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    os_log_type_t v60 = "%{public}s called with null handle";
    goto LABEL_481;
  }
  uint64_t v4 = a2;
  int v5 = handle[6];
  if (v5 == 1) {
    goto LABEL_10;
  }
  if (v5 != 2)
  {
    if (v5 != 3) {
      goto LABEL_484;
    }
    uint64_t v6 = *((void *)handle + 2);
    if (v6)
    {
      handle = (_DWORD *)(v6 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v57 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v57, aBlock, &type))
    {
      if (aBlock[0] == 17)
      {
        int v58 = __nwlog_obj();
        os_log_type_t v59 = aBlock[0];
        if (!os_log_type_enabled(v58, (os_log_type_t)aBlock[0])) {
          goto LABEL_482;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        os_log_type_t v60 = "%{public}s called with null handle->http1_connection";
        goto LABEL_481;
      }
      if (type == OS_LOG_TYPE_DEFAULT)
      {
        int v58 = __nwlog_obj();
        os_log_type_t v59 = aBlock[0];
        if (!os_log_type_enabled(v58, (os_log_type_t)aBlock[0])) {
          goto LABEL_482;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        os_log_type_t v60 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_481;
      }
      uint64_t v81 = (char *)__nw_create_backtrace_string();
      int v58 = __nwlog_obj();
      os_log_type_t v59 = aBlock[0];
      BOOL v106 = os_log_type_enabled(v58, (os_log_type_t)aBlock[0]);
      if (!v81)
      {
        if (!v106) {
          goto LABEL_482;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        os_log_type_t v60 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_481;
      }
      if (v106)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v81;
        int v83 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
        goto LABEL_117;
      }
      goto LABEL_118;
    }
LABEL_482:
    if (!v57) {
      goto LABEL_484;
    }
    goto LABEL_483;
  }
  uint64_t v7 = *((void *)handle + 1);
  if (!v7)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v57 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v57, aBlock, &type)) {
      goto LABEL_482;
    }
    if (aBlock[0] == 17)
    {
      int v58 = __nwlog_obj();
      os_log_type_t v59 = aBlock[0];
      if (!os_log_type_enabled(v58, (os_log_type_t)aBlock[0])) {
        goto LABEL_482;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      os_log_type_t v60 = "%{public}s called with null handle->http1_stream";
      goto LABEL_481;
    }
    if (type == OS_LOG_TYPE_DEFAULT)
    {
      int v58 = __nwlog_obj();
      os_log_type_t v59 = aBlock[0];
      if (!os_log_type_enabled(v58, (os_log_type_t)aBlock[0])) {
        goto LABEL_482;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      os_log_type_t v60 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_481;
    }
    uint64_t v81 = (char *)__nw_create_backtrace_string();
    int v58 = __nwlog_obj();
    os_log_type_t v59 = aBlock[0];
    BOOL v107 = os_log_type_enabled(v58, (os_log_type_t)aBlock[0]);
    if (!v81)
    {
      if (!v107) {
        goto LABEL_482;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      os_log_type_t v60 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_481;
    }
    if (v107)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v81;
      int v83 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_117;
    }
    goto LABEL_118;
  }
  handle = (_DWORD *)(v7 + 248);
LABEL_10:
  uint64_t v8 = *(void *)handle;
  if (!*(void *)handle) {
    goto LABEL_484;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
    uint64_t v61 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v61, aBlock, &type))
    {
      if (aBlock[0] == 17)
      {
        char v62 = __nwlog_obj();
        os_log_type_t v63 = aBlock[0];
        if (os_log_type_enabled(v62, (os_log_type_t)aBlock[0]))
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
          BOOL v64 = "%{public}s called with null input_protocol";
LABEL_495:
          uint64_t v272 = v62;
          os_log_type_t v273 = v63;
LABEL_496:
          _os_log_impl(&dword_1830D4000, v272, v273, v64, buf, 0xCu);
        }
      }
      else if (type)
      {
        uint64_t v84 = (char *)__nw_create_backtrace_string();
        char v62 = __nwlog_obj();
        os_log_type_t v63 = aBlock[0];
        BOOL v85 = os_log_type_enabled(v62, (os_log_type_t)aBlock[0]);
        if (v84)
        {
          if (v85)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v84;
            _os_log_impl(&dword_1830D4000, v62, v63, "%{public}s called with null input_protocol, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v84);
          goto LABEL_497;
        }
        if (v85)
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
          BOOL v64 = "%{public}s called with null input_protocol, no backtrace";
          goto LABEL_495;
        }
      }
      else
      {
        char v62 = __nwlog_obj();
        os_log_type_t v63 = aBlock[0];
        if (os_log_type_enabled(v62, (os_log_type_t)aBlock[0]))
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
          BOOL v64 = "%{public}s called with null input_protocol, backtrace limit exceeded";
          goto LABEL_495;
        }
      }
    }
LABEL_497:
    if (v61) {
      free(v61);
    }
    return 0;
  }
  p_cache = NWConcrete_nw_resolution_report.cache;
  if ((*(unsigned char *)(v8 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      uint64_t v69 = __nwlog_obj();
      if (os_log_type_enabled(v69, OS_LOG_TYPE_DEBUG))
      {
        int v70 = *(_DWORD *)(v8 + 372);
        *(_DWORD *)buf = 136447234;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v8 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v70;
        *(_WORD *)&buf[38] = 2048;
        *(void *)&buf[40] = v4;
        _os_log_impl(&dword_1830D4000, v69, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called with input_protocol %p", buf, 0x30u);
      }
    }
  }
  parameters = (uint64_t *)nw_protocol_get_parameters((uint64_t)v4);
  uint64_t v11 = *(void *)(v8 + 264);
  uint64_t v12 = (void *)&unk_183D5C000;
  os_log_type_t v13 = (void *)&unk_183D5C000;
  int v274 = v4;
  if (!v11)
  {
    nw_protocol_set_input_handler(v8, (uint64_t)v4);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v4->flow_id;
    nw_protocol_plugin_name_set_name(v8 + 64, (uint64_t)a1, parameters);
    uint64_t v14 = parameters;
    uint64_t v15 = -[NWConcrete_nw_parameters initWithParameters:stripConnected:shallowCopy:]((id *)[NWConcrete_nw_parameters alloc], v14, 0, 1);

    uint64_t v16 = nw_parameters_copy_protocol_options_legacy(v15, (nw_protocol *)v8);
    uint64_t v17 = v16;
    if (v16)
    {
      *(_DWORD *)(v8 + 364) = nw_http1_get_connection_pool_width(v16);
      *(void *)(v8 + 192) = 1000 * nw_http1_get_idle_timeout(v17);
      *(_DWORD *)(v8 + 372) = nw_protocol_get_next_instance_id();
      BOOL v18 = v17;
      int v19 = *((_DWORD *)v18 + 33);

      if ((*(unsigned char *)(v8 + 158) & 1) == 0)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v20 = gLogObj;
        if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
        {
          int v21 = *(_DWORD *)(v8 + 372);
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v8 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v21;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v21;
          *(_WORD *)&unsigned char buf[44] = 1024;
          *(_DWORD *)&buf[46] = v19;
          _os_log_impl(&dword_1830D4000, v20, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u> created HTTP/1 and assigned instance ID: %u from C%u", buf, 0x32u);
        }
      }
      nw_protocol_stack_t v22 = nw_parameters_copy_default_protocol_stack(v15);
      BOOL v23 = nw_protocol_options_copy(v18);
      if (nw_protocol_copy_http1_definition_onceToken != -1) {
        dispatch_once(&nw_protocol_copy_http1_definition_onceToken, &__block_literal_global_73800);
      }
      id v24 = (id)nw_protocol_copy_http1_definition_http1_definition;
      nw_parameters_set_protocol_instance(v23, v25, v8);
      if (v24) {
        os_release(v24);
      }
      nw_protocol_stack_replace_protocol_with_handle(v22, v8, v23);
      *(void *)buf = 0;
      *(void *)&buf[8] = buf;
      *(void *)&buf[16] = 0x2000000000;
      unsigned char buf[24] = 0;
      iterate_block[0] = MEMORY[0x1E4F143A8];
      iterate_block[1] = 0x40000000;
      iterate_block[2] = ___ZL35nw_protocol_http1_add_input_handlerP11nw_protocolS0__block_invoke;
      iterate_block[3] = &unk_1E52414A8;
      void iterate_block[4] = buf;
      iterate_block[5] = v8;
      nw_protocol_stack_iterate_application_protocols(v22, iterate_block);
      _Block_object_dispose(buf, 8);
      p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
      if (v23) {
        os_release(v23);
      }
      if (v22) {
        os_release(v22);
      }
    }
    else if ((*(unsigned char *)(v8 + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v26 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
      {
        int v27 = *(_DWORD *)(v8 + 372);
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v8 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v27;
        *(_WORD *)&buf[38] = 2048;
        *(void *)&buf[40] = v15;
        *(_WORD *)&buf[48] = 2048;
        *(void *)&buf[50] = v14;
        _os_log_impl(&dword_1830D4000, v26, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u> failed to find http1 options in new parameters %p, copy of %p", buf, 0x3Au);
      }
    }
    char v28 = *(unsigned char *)(v8 + 272);
    if (v28)
    {
      uint64_t v29 = *(void **)(v8 + 264);
      uint64_t v4 = v274;
      os_log_type_t v13 = &unk_183D5C000;
      uint64_t v12 = &unk_183D5C000;
      if (v29)
      {
        os_release(v29);
        char v28 = *(unsigned char *)(v8 + 272);
      }
    }
    else
    {
      uint64_t v4 = v274;
      os_log_type_t v13 = (void *)&unk_183D5C000;
      uint64_t v12 = (void *)&unk_183D5C000;
    }
    *(void *)(v8 + 264) = v15;
    *(unsigned char *)(v8 + 272) = v28 | 1;
    if (v17) {
      os_release(v17);
    }
  }
  uint64_t v30 = 296;
  if (!v11) {
    uint64_t v30 = 280;
  }
  int v31 = *(void **)(v8 + v30);
  if (!v31)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
    uint64_t v65 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v65, aBlock, &type)) {
      goto LABEL_195;
    }
    if (aBlock[0] == 17)
    {
      uint64_t v66 = __nwlog_obj();
      os_log_type_t v67 = aBlock[0];
      if (!os_log_type_enabled(v66, (os_log_type_t)aBlock[0])) {
        goto LABEL_195;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
      int v68 = "%{public}s called with null endpoint";
      goto LABEL_194;
    }
    if (type == OS_LOG_TYPE_DEFAULT)
    {
      uint64_t v66 = __nwlog_obj();
      os_log_type_t v67 = aBlock[0];
      if (!os_log_type_enabled(v66, (os_log_type_t)aBlock[0])) {
        goto LABEL_195;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
      int v68 = "%{public}s called with null endpoint, backtrace limit exceeded";
      goto LABEL_194;
    }
    uint64_t v86 = (char *)__nw_create_backtrace_string();
    uint64_t v66 = __nwlog_obj();
    os_log_type_t v67 = aBlock[0];
    BOOL v87 = os_log_type_enabled(v66, (os_log_type_t)aBlock[0]);
    if (!v86)
    {
      if (!v87) {
        goto LABEL_195;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
      int v68 = "%{public}s called with null endpoint, no backtrace";
      goto LABEL_194;
    }
    if (v87)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v86;
      _os_log_impl(&dword_1830D4000, v66, v67, "%{public}s called with null endpoint, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v86);
LABEL_195:
    if (!v65) {
      goto LABEL_197;
    }
    goto LABEL_196;
  }
  if (!parameters)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
    uint64_t v65 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v65, aBlock, &type)) {
      goto LABEL_195;
    }
    if (aBlock[0] == 17)
    {
      uint64_t v66 = __nwlog_obj();
      os_log_type_t v67 = aBlock[0];
      if (!os_log_type_enabled(v66, (os_log_type_t)aBlock[0])) {
        goto LABEL_195;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
      int v68 = "%{public}s called with null parameters";
      goto LABEL_194;
    }
    if (type == OS_LOG_TYPE_DEFAULT)
    {
      uint64_t v66 = __nwlog_obj();
      os_log_type_t v67 = aBlock[0];
      if (!os_log_type_enabled(v66, (os_log_type_t)aBlock[0])) {
        goto LABEL_195;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
      int v68 = "%{public}s called with null parameters, backtrace limit exceeded";
      goto LABEL_194;
    }
    uint64_t v92 = (char *)__nw_create_backtrace_string();
    uint64_t v66 = __nwlog_obj();
    os_log_type_t v67 = aBlock[0];
    BOOL v93 = os_log_type_enabled(v66, (os_log_type_t)aBlock[0]);
    if (v92)
    {
      if (v93)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v92;
        _os_log_impl(&dword_1830D4000, v66, v67, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v92);
      if (!v65)
      {
LABEL_197:
        BOOL v32 = 0;
        uint64_t v45 = (uint64_t)v274;
        uint64_t v52 = a1->handle;
        if (v52) {
          goto LABEL_69;
        }
LABEL_198:
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_handle_type_for_protocol";
        os_log_type_t v108 = (char *)_os_log_send_and_compose_impl();
        aBlock[0] = 16;
        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
        if (!__nwlog_fault(v108, aBlock, &type)) {
          goto LABEL_212;
        }
        if (aBlock[0] == 17)
        {
          int v109 = __nwlog_obj();
          os_log_type_t v110 = aBlock[0];
          if (!os_log_type_enabled(v109, (os_log_type_t)aBlock[0])) {
            goto LABEL_212;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_get_handle_type_for_protocol";
          os_log_type_t v111 = "%{public}s called with null handle";
        }
        else if (type)
        {
          id v112 = (char *)__nw_create_backtrace_string();
          int v109 = __nwlog_obj();
          os_log_type_t v110 = aBlock[0];
          BOOL v113 = os_log_type_enabled(v109, (os_log_type_t)aBlock[0]);
          if (v112)
          {
            if (v113)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_get_handle_type_for_protocol";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v112;
              _os_log_impl(&dword_1830D4000, v109, v110, "%{public}s called with null handle, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v112);
            goto LABEL_212;
          }
          if (!v113)
          {
LABEL_212:
            uint64_t v45 = (uint64_t)v274;
            if (v108) {
              free(v108);
            }
LABEL_214:
            if (v32) {
              goto LABEL_215;
            }
LABEL_454:
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
            int v262 = (char *)_os_log_send_and_compose_impl();
            aBlock[0] = 16;
            os_log_type_t type = OS_LOG_TYPE_DEFAULT;
            if (!__nwlog_fault(v262, aBlock, &type)) {
              goto LABEL_468;
            }
            if (aBlock[0] == 17)
            {
              nw_parameters_t v263 = __nwlog_obj();
              os_log_type_t v264 = aBlock[0];
              if (!os_log_type_enabled(v263, (os_log_type_t)aBlock[0])) {
                goto LABEL_468;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
              int v265 = "%{public}s called with null http1_stream";
            }
            else if (type)
            {
              int v266 = (char *)__nw_create_backtrace_string();
              nw_parameters_t v263 = __nwlog_obj();
              os_log_type_t v264 = aBlock[0];
              BOOL v267 = os_log_type_enabled(v263, (os_log_type_t)aBlock[0]);
              if (v266)
              {
                if (v267)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v266;
                  _os_log_impl(&dword_1830D4000, v263, v264, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v266);
LABEL_468:
                if (v262) {
                  free(v262);
                }
                int v167 = 1;
                uint64_t v168 = *(void *)(v8 + 224);
                if (!v168) {
                  return 1;
                }
                goto LABEL_293;
              }
              if (!v267) {
                goto LABEL_468;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
              int v265 = "%{public}s called with null http1_stream, no backtrace";
            }
            else
            {
              nw_parameters_t v263 = __nwlog_obj();
              os_log_type_t v264 = aBlock[0];
              if (!os_log_type_enabled(v263, (os_log_type_t)aBlock[0])) {
                goto LABEL_468;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
              int v265 = "%{public}s called with null http1_stream, backtrace limit exceeded";
            }
            _os_log_impl(&dword_1830D4000, v263, v264, v265, buf, 0xCu);
            goto LABEL_468;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_get_handle_type_for_protocol";
          os_log_type_t v111 = "%{public}s called with null handle, no backtrace";
        }
        else
        {
          int v109 = __nwlog_obj();
          os_log_type_t v110 = aBlock[0];
          if (!os_log_type_enabled(v109, (os_log_type_t)aBlock[0])) {
            goto LABEL_212;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_get_handle_type_for_protocol";
          os_log_type_t v111 = "%{public}s called with null handle, backtrace limit exceeded";
        }
        _os_log_impl(&dword_1830D4000, v109, v110, v111, buf, 0xCu);
        goto LABEL_212;
      }
LABEL_196:
      free(v65);
      goto LABEL_197;
    }
    if (v93)
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
      int v68 = "%{public}s called with null parameters, no backtrace";
LABEL_194:
      _os_log_impl(&dword_1830D4000, v66, v67, v68, buf, 0xCu);
      goto LABEL_195;
    }
    goto LABEL_195;
  }
  BOOL v32 = (char *)malloc_type_calloc(1uLL, 0x1B0uLL, 0xEAFB8F1AuLL);
  if (!v32)
  {
    char v71 = v12;
    os_log_type_t v72 = __nwlog_obj();
    os_log_type_enabled(v72, OS_LOG_TYPE_ERROR);
    *(_DWORD *)buf = 136446722;
    *(void *)&uint8_t buf[4] = "strict_calloc";
    *(_WORD *)&unsigned char buf[12] = 2048;
    *(void *)&buf[14] = 1;
    *(_WORD *)&buf[22] = 2048;
    *(void *)&unsigned char buf[24] = 432;
    uint64_t v73 = (void *)_os_log_send_and_compose_impl();
    BOOL result = __nwlog_abort((uint64_t)v73);
    if (result)
    {
      __break(1u);
      return result;
    }
    free(v73);
    uint64_t v12 = v71;
  }
  *((_OWORD *)v32 + 25) = 0u;
  *((_OWORD *)v32 + 26) = 0u;
  *((_OWORD *)v32 + 23) = 0u;
  *((_OWORD *)v32 + 24) = 0u;
  *((_OWORD *)v32 + 21) = 0u;
  *((_OWORD *)v32 + 22) = 0u;
  *((_OWORD *)v32 + 19) = 0u;
  *((_OWORD *)v32 + 20) = 0u;
  *((_OWORD *)v32 + 17) = 0u;
  *((_OWORD *)v32 + 18) = 0u;
  *((_OWORD *)v32 + 15) = 0u;
  *((_OWORD *)v32 + 16) = 0u;
  *((_OWORD *)v32 + 13) = 0u;
  *((_OWORD *)v32 + 14) = 0u;
  *((_OWORD *)v32 + 11) = 0u;
  *((_OWORD *)v32 + 12) = 0u;
  *((_OWORD *)v32 + 9) = 0u;
  *((_OWORD *)v32 + 10) = 0u;
  *((_OWORD *)v32 + 7) = 0u;
  *((_OWORD *)v32 + 8) = 0u;
  *((_OWORD *)v32 + 5) = 0u;
  *((_OWORD *)v32 + 6) = 0u;
  *((_OWORD *)v32 + 3) = 0u;
  *((_OWORD *)v32 + 4) = 0u;
  *((_OWORD *)v32 + 1) = 0u;
  *((_OWORD *)v32 + 2) = 0u;
  *(_OWORD *)BOOL v32 = 0u;
  *((void *)v32 + 2) = *(void *)(v8 + 16);
  if (nw_protocol_http1_get_callbacks(void)::onceToken != -1) {
    dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
  }
  *((void *)v32 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
  *((_DWORD *)v32 + 60) = 2;
  *((void *)v32 + 28) = v32;
  *((void *)v32 + 5) = v32 + 216;
  *((void *)v32 + 31) = v8;
  nw_protocol_set_input_handler((uint64_t)v32, (uint64_t)v4);
  nw_protocol_set_output_handler((uint64_t)v32, *(void *)(v8 + 32));
  *(void *)buf = 0;
  *(void *)&buf[8] = buf;
  *(void *)&buf[16] = v12[319];
  *(void *)&unsigned char buf[24] = v32;
  *(void *)aBlock = MEMORY[0x1E4F143A8];
  *(void *)&aBlock[8] = v13[315];
  *(void *)&aBlock[16] = ___ZL22nw_http1_stream_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke;
  uint64_t v283 = (uint64_t)&unk_1E52414D0;
  *(void *)uint64_t v284 = buf;
  *((void *)v32 + 39) = _Block_copy(aBlock);
  _Block_object_dispose(buf, 8);
  uint64_t v33 = os_retain(v31);
  char v34 = v32[344];
  if (v34)
  {
    os_log_type_t v35 = (void *)*((void *)v32 + 42);
    if (v35)
    {
      os_release(v35);
      char v34 = v32[344];
    }
  }
  *((void *)v32 + 42) = v33;
  v32[344] = v34 | 1;
  uint32_t v36 = os_retain(parameters);
  char v37 = v32[328];
  if (v37)
  {
    uint64_t v38 = (void *)*((void *)v32 + 40);
    if (v38)
    {
      os_release(v38);
      char v37 = v32[328];
    }
  }
  *((void *)v32 + 40) = v36;
  v32[328] = v37 | 1;
  if ((v32[158] & 1) == 0)
  {
    if (*((unsigned char *)p_cache + 3665))
    {
      os_log_type_t v75 = __nwlog_obj();
      if (os_log_type_enabled(v75, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v76 = *((void *)v32 + 32);
        int v77 = *(_DWORD *)(*((void *)v32 + 31) + 372);
        if (v76) {
          LODWORD(v76) = *(_DWORD *)(v76 + 860);
        }
        int v78 = *((_DWORD *)v32 + 106);
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_create";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v32 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v77;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v76;
        *(_WORD *)&unsigned char buf[44] = 1024;
        *(_DWORD *)&buf[46] = v78;
        *(_WORD *)&buf[50] = 2048;
        *(void *)&buf[52] = v32;
        _os_log_impl(&dword_1830D4000, v75, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created %p", buf, 0x3Cu);
      }
    }
  }
  v4->output_handler_context = v32;
  int v39 = parameters;
  id v40 = *(id *)(v39[13] + 136);

  char v41 = v32[272];
  if (v41)
  {
    __int16 v42 = (void *)*((void *)v32 + 33);
    if (v42)
    {
      os_release(v42);
      char v41 = v32[272];
    }
  }
  *((void *)v32 + 33) = v40;
  v32[272] = v41 | 1;
  uint64_t v43 = _nw_http_parsed_fields_create();
  char v44 = v32[408];
  if (v44)
  {
    uint64_t v46 = (void *)*((void *)v32 + 50);
    uint64_t v45 = (uint64_t)v274;
    if (v46)
    {
      os_release(v46);
      char v44 = v32[408];
    }
  }
  else
  {
    uint64_t v45 = (uint64_t)v274;
  }
  *((void *)v32 + 50) = v43;
  v32[408] = v44 | 1;
  v32[208] = *(unsigned char *)(v8 + 376) & 1;
  char v47 = nw_parameters_copy_protocol_options_legacy(v39, (nw_protocol *)v8);
  int v48 = v47;
  if (!v47 || (singleton = nw_http_messaging_options_copy_transaction_metadata(v47)) == 0)
  {
    if (nw_protocol_copy_http_transaction_definition_onceToken != -1) {
      dispatch_once(&nw_protocol_copy_http_transaction_definition_onceToken, &__block_literal_global_84_75899);
    }
    singleton = nw_protocol_metadata_create_singleton((void *)nw_protocol_copy_http_transaction_definition_definition);
  }
  char v50 = v32[360];
  if (v50)
  {
    char v51 = (void *)*((void *)v32 + 44);
    if (v51)
    {
      os_release(v51);
      char v50 = v32[360];
    }
  }
  *((void *)v32 + 44) = singleton;
  v32[360] = v50 | 1;
  if (v48) {
    os_release(v48);
  }
  uint64_t v52 = a1->handle;
  if (!v52) {
    goto LABEL_198;
  }
LABEL_69:
  if (v52[6] != 2) {
    goto LABEL_214;
  }
  if (!v32)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
    int v88 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v88, aBlock, &type)) {
      goto LABEL_452;
    }
    if (aBlock[0] == 17)
    {
      uint64_t v89 = __nwlog_obj();
      os_log_type_t v90 = aBlock[0];
      if (!os_log_type_enabled(v89, (os_log_type_t)aBlock[0])) {
        goto LABEL_452;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
      char v91 = "%{public}s called with null http1_stream";
    }
    else if (type)
    {
      int v102 = (char *)__nw_create_backtrace_string();
      uint64_t v89 = __nwlog_obj();
      os_log_type_t v90 = aBlock[0];
      BOOL v103 = os_log_type_enabled(v89, (os_log_type_t)aBlock[0]);
      if (v102)
      {
        if (v103)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v102;
          _os_log_impl(&dword_1830D4000, v89, v90, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v102);
        goto LABEL_452;
      }
      if (!v103)
      {
LABEL_452:
        if (v88) {
          free(v88);
        }
        goto LABEL_454;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
      char v91 = "%{public}s called with null http1_stream, no backtrace";
    }
    else
    {
      uint64_t v89 = __nwlog_obj();
      os_log_type_t v90 = aBlock[0];
      if (!os_log_type_enabled(v89, (os_log_type_t)aBlock[0])) {
        goto LABEL_452;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
      char v91 = "%{public}s called with null http1_stream, backtrace limit exceeded";
    }
    _os_log_impl(&dword_1830D4000, v89, v90, v91, buf, 0xCu);
    goto LABEL_452;
  }
  if (parameters)
  {
    uint64_t v53 = nw_parameters_copy_protocol_options_legacy(parameters, a1);
    if (v53)
    {
      char v54 = v53;
      if ((v32[158] & 1) == 0)
      {
        if (*((unsigned char *)p_cache + 3665))
        {
          int v98 = __nwlog_obj();
          if (os_log_type_enabled(v98, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v99 = *((void *)v32 + 32);
            int v100 = *(_DWORD *)(*((void *)v32 + 31) + 372);
            if (v99) {
              LODWORD(v99) = *(_DWORD *)(v99 + 860);
            }
            int v101 = *((_DWORD *)v32 + 106);
            *(_DWORD *)buf = 136448770;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v32 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v100;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v99;
            *(_WORD *)&unsigned char buf[44] = 1024;
            *(_DWORD *)&buf[46] = v101;
            *(_WORD *)&buf[50] = 2048;
            *(void *)&buf[52] = v32;
            *(_WORD *)&unsigned char buf[60] = 2048;
            *(void *)&buf[62] = v8;
            *(_WORD *)&buf[70] = 2048;
            *(void *)&buf[72] = a1;
            *(_WORD *)uint64_t v279 = 2048;
            *(void *)&v279[2] = parameters;
            __int16 v280 = 2048;
            os_log_type_t v281 = v54;
            _os_log_impl(&dword_1830D4000, v98, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http1_stream protocol %p, set protocol instance to %p instead of %p in parameters %p options %p", buf, 0x64u);
          }
        }
      }
      if (nw_protocol_copy_http1_definition_onceToken != -1) {
        dispatch_once(&nw_protocol_copy_http1_definition_onceToken, &__block_literal_global_73800);
      }
      id v55 = (id)nw_protocol_copy_http1_definition_http1_definition;
      int v56 = v54;
      *((void *)v56 + 2) = v8;

      if (v55) {
        os_release(v55);
      }
      os_release(v56);
      uint64_t v45 = (uint64_t)v274;
    }
    goto LABEL_215;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
  char v94 = (char *)_os_log_send_and_compose_impl();
  aBlock[0] = 16;
  os_log_type_t type = OS_LOG_TYPE_DEFAULT;
  if (__nwlog_fault(v94, aBlock, &type))
  {
    if (aBlock[0] == 17)
    {
      uint64_t v95 = __nwlog_obj();
      os_log_type_t v96 = aBlock[0];
      if (!os_log_type_enabled(v95, (os_log_type_t)aBlock[0])) {
        goto LABEL_475;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
      char v97 = "%{public}s called with null parameters";
      goto LABEL_474;
    }
    if (type == OS_LOG_TYPE_DEFAULT)
    {
      uint64_t v95 = __nwlog_obj();
      os_log_type_t v96 = aBlock[0];
      if (!os_log_type_enabled(v95, (os_log_type_t)aBlock[0])) {
        goto LABEL_475;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
      char v97 = "%{public}s called with null parameters, backtrace limit exceeded";
      goto LABEL_474;
    }
    BOOL v104 = (char *)__nw_create_backtrace_string();
    uint64_t v95 = __nwlog_obj();
    os_log_type_t v96 = aBlock[0];
    BOOL v105 = os_log_type_enabled(v95, (os_log_type_t)aBlock[0]);
    if (v104)
    {
      if (v105)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v104;
        _os_log_impl(&dword_1830D4000, v95, v96, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v104);
      goto LABEL_475;
    }
    if (v105)
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
      char v97 = "%{public}s called with null parameters, no backtrace";
LABEL_474:
      _os_log_impl(&dword_1830D4000, v95, v96, v97, buf, 0xCu);
    }
  }
LABEL_475:
  uint64_t v45 = (uint64_t)v274;
  if (v94) {
    free(v94);
  }
LABEL_215:
  nw_protocol_set_input_handler((uint64_t)v32, v45);
  *(_OWORD *)BOOL v32 = *(_OWORD *)v45;
  if (*(void *)(v45 + 32))
  {
    if ((*(unsigned char *)(v8 + 158) & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v114 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
      {
        int v115 = *(_DWORD *)(v8 + 372);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v8 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v115;
        _os_log_impl(&dword_1830D4000, v114, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> Output handler already exists for protocol being added as input handler", buf, 0x26u);
      }
    }
  }
  else
  {
    nw_protocol_set_output_handler(v45, (uint64_t)v32);
  }
  int v116 = (uint64_t *)*((void *)v32 + 40);
  if (v116)
  {
    uint64_t v117 = nw_parameters_copy_protocol_options_legacy(*((void **)v32 + 40), (nw_protocol *)v8);
    if (v117)
    {
      uint64_t v118 = v117;
      if ((v32[158] & 1) == 0)
      {
        if (*((unsigned char *)p_cache + 3665))
        {
          uint64_t v244 = __nwlog_obj();
          if (os_log_type_enabled(v244, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v245 = *((void *)v32 + 32);
            int v246 = *(_DWORD *)(*((void *)v32 + 31) + 372);
            if (v245) {
              LODWORD(v245) = *(_DWORD *)(v245 + 860);
            }
            int v247 = *((_DWORD *)v32 + 106);
            *(_DWORD *)buf = 136448770;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_replace_protocol_instance";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v32 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v246;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v245;
            *(_WORD *)&unsigned char buf[44] = 1024;
            *(_DWORD *)&buf[46] = v247;
            *(_WORD *)&buf[50] = 2048;
            *(void *)&buf[52] = v32;
            *(_WORD *)&unsigned char buf[60] = 2048;
            *(void *)&buf[62] = v32;
            *(_WORD *)&buf[70] = 2048;
            *(void *)&buf[72] = v8;
            *(_WORD *)uint64_t v279 = 2048;
            *(void *)&v279[2] = v116;
            __int16 v280 = 2048;
            os_log_type_t v281 = v118;
            _os_log_impl(&dword_1830D4000, v244, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http1_stream protocol %p, set protocol instance to %p instead of %p in parameters %p options %p", buf, 0x64u);
          }
        }
      }
      if (nw_protocol_copy_http1_definition_onceToken != -1) {
        dispatch_once(&nw_protocol_copy_http1_definition_onceToken, &__block_literal_global_73800);
      }
      id v119 = (id)nw_protocol_copy_http1_definition_http1_definition;
      uint64_t v120 = v118;
      *((void *)v120 + 2) = v32;

      if (v119) {
        os_release(v119);
      }
      os_release(v120);
    }
    *(_DWORD *)uint64_t v279 = 0;
    memset(buf, 0, sizeof(buf));
    int v121 = nw_parameters_copy_protocol_options_legacy(*((void **)v32 + 40), (nw_protocol *)v32);
    int v122 = v121;
    if (v121)
    {
      os_log_type_t v123 = v121;
      uint64_t v124 = 0;
      buf[0] = 0;
      while (1)
      {
        int v125 = v123[v124 + 48];
        buf[v124] = v125;
        if (!v125) {
          break;
        }
        if (++v124 == 83)
        {
          v279[3] = 0;
          break;
        }
      }
    }
    else if ((v32[158] & 1) == 0)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v126 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
      {
        uint64_t v127 = *((void *)v32 + 32);
        int v128 = *(_DWORD *)(*((void *)v32 + 31) + 372);
        if (v127) {
          LODWORD(v127) = *(_DWORD *)(v127 + 860);
        }
        int v129 = *((_DWORD *)v32 + 106);
        *(_DWORD *)aBlock = 136448002;
        *(void *)&aBlock[4] = "nw_http1_stream_add_input_handler";
        *(_WORD *)&aBlock[12] = 2082;
        *(void *)&aBlock[14] = v32 + 74;
        *(_WORD *)&aBlock[22] = 2080;
        uint64_t v283 = (uint64_t)" ";
        *(_WORD *)uint64_t v284 = 1024;
        *(_DWORD *)&v284[2] = v128;
        *(_WORD *)&v284[6] = 1024;
        *(_DWORD *)&v284[8] = v127;
        *(_WORD *)&v284[12] = 1024;
        *(_DWORD *)&v284[14] = v129;
        *(_WORD *)&v284[18] = 2048;
        *(void *)&v284[20] = v32;
        *(_WORD *)&v284[28] = 2048;
        *(void *)&v284[30] = v116;
        _os_log_impl(&dword_1830D4000, v126, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> Failed to access options for protocol %p, parameters %p", aBlock, 0x46u);
      }
    }
    if ((*(unsigned char *)(v8 + 158) & 1) == 0)
    {
      if (*((unsigned char *)p_cache + 3665))
      {
        long long v231 = __nwlog_obj();
        if (os_log_type_enabled(v231, OS_LOG_TYPE_DEBUG))
        {
          int v232 = *(_DWORD *)(v8 + 372);
          *(_DWORD *)aBlock = 136447234;
          *(void *)&aBlock[4] = "nw_http1_add_stream";
          *(_WORD *)&aBlock[12] = 2082;
          *(void *)&aBlock[14] = v8 + 74;
          *(_WORD *)&aBlock[22] = 2080;
          uint64_t v283 = (uint64_t)" ";
          *(_WORD *)uint64_t v284 = 1024;
          *(_DWORD *)&v284[2] = v232;
          *(_WORD *)&v284[6] = 2048;
          *(void *)&v284[8] = v32;
          _os_log_impl(&dword_1830D4000, v231, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream (%p)", aBlock, 0x30u);
        }
      }
    }
    *((void *)v32 + 35) = 0;
    uint64_t v130 = *(void **)(v8 + 240);
    *((void *)v32 + 36) = v130;
    *uint64_t v130 = v32;
    *(void *)(v8 + 240) = v32 + 280;
    uint64_t v131 = *(unsigned int *)(v8 + 344) + 1;
    uint64_t v132 = v131 << 31 >> 31;
    *(_DWORD *)(v8 + 344) = v131;
    if (v132 == v131 && (v132 & 0x8000000000000000) == 0)
    {
LABEL_261:
      uint64_t v144 = *(unsigned int *)(v8 + 356) + 1;
      uint64_t v145 = v144 << 31 >> 31;
      *(_DWORD *)(v8 + 356) = v144;
      char v146 = v274;
      if (v145 == v144 && (v145 & 0x8000000000000000) == 0) {
        goto LABEL_280;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v147 = *(unsigned int *)(v8 + 356);
      *(_DWORD *)aBlock = 136446978;
      *(void *)&aBlock[4] = "nw_http1_add_stream";
      *(_WORD *)&aBlock[12] = 2082;
      *(void *)&aBlock[14] = "http1->next_stream_log_num";
      *(_WORD *)&aBlock[22] = 2048;
      uint64_t v283 = 1;
      *(_WORD *)uint64_t v284 = 2048;
      *(void *)&v284[2] = v147;
      int v148 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t type = OS_LOG_TYPE_ERROR;
      char v276 = 0;
      if (__nwlog_fault(v148, &type, &v276))
      {
        if (type == OS_LOG_TYPE_FAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v149 = gLogObj;
          os_log_type_t v150 = type;
          if (os_log_type_enabled((os_log_t)gLogObj, type))
          {
            uint64_t v151 = *(unsigned int *)(v8 + 356);
            *(_DWORD *)aBlock = 136446978;
            *(void *)&aBlock[4] = "nw_http1_add_stream";
            *(_WORD *)&aBlock[12] = 2082;
            *(void *)&aBlock[14] = "http1->next_stream_log_num";
            *(_WORD *)&aBlock[22] = 2048;
            uint64_t v283 = 1;
            *(_WORD *)uint64_t v284 = 2048;
            *(void *)&v284[2] = v151;
            uint64_t v152 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_276:
            _os_log_impl(&dword_1830D4000, v149, v150, v152, aBlock, 0x2Au);
          }
        }
        else if (v276)
        {
          int v153 = (char *)__nw_create_backtrace_string();
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v149 = gLogObj;
          os_log_type_t v150 = type;
          BOOL v154 = os_log_type_enabled((os_log_t)gLogObj, type);
          if (v153)
          {
            if (v154)
            {
              uint64_t v155 = *(unsigned int *)(v8 + 356);
              *(_DWORD *)aBlock = 136447234;
              *(void *)&aBlock[4] = "nw_http1_add_stream";
              *(_WORD *)&aBlock[12] = 2082;
              *(void *)&aBlock[14] = "http1->next_stream_log_num";
              *(_WORD *)&aBlock[22] = 2048;
              uint64_t v283 = 1;
              *(_WORD *)uint64_t v284 = 2048;
              *(void *)&v284[2] = v155;
              *(_WORD *)&v284[10] = 2082;
              *(void *)&v284[12] = v153;
              _os_log_impl(&dword_1830D4000, v149, v150, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", aBlock, 0x34u);
            }
            free(v153);
            p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
            goto LABEL_277;
          }
          p_cache = NWConcrete_nw_resolution_report.cache;
          if (v154)
          {
            uint64_t v157 = *(unsigned int *)(v8 + 356);
            *(_DWORD *)aBlock = 136446978;
            *(void *)&aBlock[4] = "nw_http1_add_stream";
            *(_WORD *)&aBlock[12] = 2082;
            *(void *)&aBlock[14] = "http1->next_stream_log_num";
            *(_WORD *)&aBlock[22] = 2048;
            uint64_t v283 = 1;
            *(_WORD *)uint64_t v284 = 2048;
            *(void *)&v284[2] = v157;
            uint64_t v152 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
            goto LABEL_276;
          }
        }
        else
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v149 = gLogObj;
          os_log_type_t v150 = type;
          if (os_log_type_enabled((os_log_t)gLogObj, type))
          {
            uint64_t v156 = *(unsigned int *)(v8 + 356);
            *(_DWORD *)aBlock = 136446978;
            *(void *)&aBlock[4] = "nw_http1_add_stream";
            *(_WORD *)&aBlock[12] = 2082;
            *(void *)&aBlock[14] = "http1->next_stream_log_num";
            *(_WORD *)&aBlock[22] = 2048;
            uint64_t v283 = 1;
            *(_WORD *)uint64_t v284 = 2048;
            *(void *)&v284[2] = v156;
            uint64_t v152 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
            goto LABEL_276;
          }
        }
      }
LABEL_277:
      if (v148) {
        free(v148);
      }
      LODWORD(v144) = -1;
      *(_DWORD *)(v8 + 356) = -1;
      char v146 = v274;
LABEL_280:
      *((_DWORD *)v32 + 106) = v144;
      if ((v32[158] & 1) == 0)
      {
        if (*((unsigned char *)p_cache + 3665))
        {
          long long v233 = __nwlog_obj();
          if (os_log_type_enabled(v233, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v234 = *((void *)v32 + 32);
            int v235 = *(_DWORD *)(*((void *)v32 + 31) + 372);
            if (v234) {
              LODWORD(v234) = *(_DWORD *)(v234 + 860);
            }
            int v236 = *((_DWORD *)v32 + 106);
            int v237 = *(_DWORD *)(v8 + 344);
            *(_DWORD *)aBlock = 136448258;
            *(void *)&aBlock[4] = "nw_http1_add_stream";
            *(_WORD *)&aBlock[12] = 2082;
            *(void *)&aBlock[14] = v32 + 74;
            *(_WORD *)&aBlock[22] = 2080;
            uint64_t v283 = (uint64_t)" ";
            *(_WORD *)uint64_t v284 = 1024;
            *(_DWORD *)&v284[2] = v235;
            *(_WORD *)&v284[6] = 1024;
            *(_DWORD *)&v284[8] = v234;
            *(_WORD *)&v284[12] = 1024;
            *(_DWORD *)&v284[14] = v236;
            *(_WORD *)&v284[18] = 1024;
            *(_DWORD *)&v284[20] = v236;
            *(_WORD *)&v284[24] = 2048;
            *(void *)&v284[26] = v32;
            *(_WORD *)&v284[34] = 1024;
            *(_DWORD *)&v284[36] = v237;
            _os_log_impl(&dword_1830D4000, v233, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added stream %u (%p), now have %u streams", aBlock, 0x48u);
          }
        }
      }
      nw_protocol_plugin_name_set_name((uint64_t)(v32 + 64), (uint64_t)v32, v116);
      if (buf[0])
      {
        if ((*(unsigned char *)(v8 + 158) & 1) == 0)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v158 = gLogObj;
          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEFAULT))
          {
            int v159 = *(_DWORD *)(v8 + 372);
            int v160 = *(_DWORD *)(v8 + 344);
            *(_DWORD *)aBlock = 136447746;
            *(void *)&aBlock[4] = "nw_http1_stream_add_input_handler";
            *(void *)&aBlock[14] = v8 + 74;
            *(_WORD *)&aBlock[22] = 2080;
            *(_WORD *)&aBlock[12] = 2082;
            uint64_t v283 = (uint64_t)" ";
            *(_WORD *)uint64_t v284 = 1024;
            *(_DWORD *)&v284[2] = v159;
            *(_WORD *)&v284[6] = 2048;
            *(void *)&v284[8] = v146;
            *(_WORD *)&v284[16] = 2082;
            *(void *)&v284[18] = buf;
            *(_WORD *)&v284[26] = 1024;
            *(_DWORD *)&v284[28] = v160;
            char v161 = "%{public}s %{public}s%s<i%u> added input handler %p from %{public}s, now have %u input handlers";
            BOOL v162 = v158;
            uint32_t v163 = 64;
LABEL_289:
            _os_log_impl(&dword_1830D4000, v162, OS_LOG_TYPE_DEFAULT, v161, aBlock, v163);
          }
        }
      }
      else if ((*(unsigned char *)(v8 + 158) & 1) == 0)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v164 = gLogObj;
        if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEFAULT))
        {
          int v165 = *(_DWORD *)(v8 + 372);
          int v166 = *(_DWORD *)(v8 + 344);
          *(_DWORD *)aBlock = 136447490;
          *(void *)&aBlock[4] = "nw_http1_stream_add_input_handler";
          *(_WORD *)&aBlock[12] = 2082;
          *(void *)&aBlock[14] = v8 + 74;
          *(_WORD *)&aBlock[22] = 2080;
          uint64_t v283 = (uint64_t)" ";
          *(_WORD *)uint64_t v284 = 1024;
          *(_DWORD *)&v284[2] = v165;
          *(_WORD *)&v284[6] = 2048;
          *(void *)&v284[8] = v146;
          *(_WORD *)&v284[16] = 1024;
          *(_DWORD *)&v284[18] = v166;
          char v161 = "%{public}s %{public}s%s<i%u> added input handler %p, now have %u input handlers";
          BOOL v162 = v164;
          uint32_t v163 = 54;
          goto LABEL_289;
        }
      }
      if (v122) {
        os_release(v122);
      }
      goto LABEL_292;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v133 = *(unsigned int *)(v8 + 344);
    *(_DWORD *)aBlock = 136446978;
    *(void *)&aBlock[4] = "nw_http1_add_stream";
    *(_WORD *)&aBlock[12] = 2082;
    *(void *)&aBlock[14] = "http1->streams_count";
    *(_WORD *)&aBlock[22] = 2048;
    uint64_t v283 = 1;
    *(_WORD *)uint64_t v284 = 2048;
    *(void *)&v284[2] = v133;
    uint64_t v134 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v276 = 0;
    if (__nwlog_fault(v134, &type, &v276))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v135 = gLogObj;
        os_log_type_t v136 = type;
        if (os_log_type_enabled((os_log_t)gLogObj, type))
        {
          uint64_t v137 = *(unsigned int *)(v8 + 344);
          *(_DWORD *)aBlock = 136446978;
          *(void *)&aBlock[4] = "nw_http1_add_stream";
          *(_WORD *)&aBlock[12] = 2082;
          *(void *)&aBlock[14] = "http1->streams_count";
          *(_WORD *)&aBlock[22] = 2048;
          uint64_t v283 = 1;
          *(_WORD *)uint64_t v284 = 2048;
          *(void *)&v284[2] = v137;
          uint64_t v138 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_257:
          _os_log_impl(&dword_1830D4000, v135, v136, v138, aBlock, 0x2Au);
        }
      }
      else if (v276)
      {
        __int16 v139 = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v135 = gLogObj;
        os_log_type_t v136 = type;
        BOOL v140 = os_log_type_enabled((os_log_t)gLogObj, type);
        if (v139)
        {
          if (v140)
          {
            uint64_t v141 = *(unsigned int *)(v8 + 344);
            *(_DWORD *)aBlock = 136447234;
            *(void *)&aBlock[4] = "nw_http1_add_stream";
            *(_WORD *)&aBlock[12] = 2082;
            *(void *)&aBlock[14] = "http1->streams_count";
            *(_WORD *)&aBlock[22] = 2048;
            uint64_t v283 = 1;
            *(_WORD *)uint64_t v284 = 2048;
            *(void *)&v284[2] = v141;
            *(_WORD *)&v284[10] = 2082;
            *(void *)&v284[12] = v139;
            _os_log_impl(&dword_1830D4000, v135, v136, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", aBlock, 0x34u);
          }
          free(v139);
          p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
          goto LABEL_258;
        }
        p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
        if (v140)
        {
          uint64_t v143 = *(unsigned int *)(v8 + 344);
          *(_DWORD *)aBlock = 136446978;
          *(void *)&aBlock[4] = "nw_http1_add_stream";
          *(_WORD *)&aBlock[12] = 2082;
          *(void *)&aBlock[14] = "http1->streams_count";
          *(_WORD *)&aBlock[22] = 2048;
          uint64_t v283 = 1;
          *(_WORD *)uint64_t v284 = 2048;
          *(void *)&v284[2] = v143;
          uint64_t v138 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
          goto LABEL_257;
        }
      }
      else
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v135 = gLogObj;
        os_log_type_t v136 = type;
        if (os_log_type_enabled((os_log_t)gLogObj, type))
        {
          uint64_t v142 = *(unsigned int *)(v8 + 344);
          *(_DWORD *)aBlock = 136446978;
          *(void *)&aBlock[4] = "nw_http1_add_stream";
          *(_WORD *)&aBlock[12] = 2082;
          *(void *)&aBlock[14] = "http1->streams_count";
          *(_WORD *)&aBlock[22] = 2048;
          uint64_t v283 = 1;
          *(_WORD *)uint64_t v284 = 2048;
          *(void *)&v284[2] = v142;
          uint64_t v138 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
          goto LABEL_257;
        }
      }
    }
LABEL_258:
    if (v134) {
      free(v134);
    }
    *(_DWORD *)(v8 + 344) = -1;
    goto LABEL_261;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
  os_log_type_t v227 = (char *)_os_log_send_and_compose_impl();
  aBlock[0] = 16;
  os_log_type_t type = OS_LOG_TYPE_DEFAULT;
  if (__nwlog_fault(v227, aBlock, &type))
  {
    if (aBlock[0] == 17)
    {
      uint64_t v228 = __nwlog_obj();
      os_log_type_t v229 = aBlock[0];
      if (!os_log_type_enabled(v228, (os_log_type_t)aBlock[0])) {
        goto LABEL_432;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
      long long v230 = "%{public}s called with null http1_stream->parameters";
      goto LABEL_431;
    }
    if (type == OS_LOG_TYPE_DEFAULT)
    {
      uint64_t v228 = __nwlog_obj();
      os_log_type_t v229 = aBlock[0];
      if (!os_log_type_enabled(v228, (os_log_type_t)aBlock[0])) {
        goto LABEL_432;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
      long long v230 = "%{public}s called with null http1_stream->parameters, backtrace limit exceeded";
      goto LABEL_431;
    }
    int v248 = (char *)__nw_create_backtrace_string();
    uint64_t v228 = __nwlog_obj();
    os_log_type_t v229 = aBlock[0];
    BOOL v249 = os_log_type_enabled(v228, (os_log_type_t)aBlock[0]);
    if (v248)
    {
      if (v249)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v248;
        _os_log_impl(&dword_1830D4000, v228, v229, "%{public}s called with null http1_stream->parameters, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v248);
      goto LABEL_432;
    }
    if (v249)
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_add_input_handler";
      long long v230 = "%{public}s called with null http1_stream->parameters, no backtrace";
LABEL_431:
      _os_log_impl(&dword_1830D4000, v228, v229, v230, buf, 0xCu);
    }
  }
LABEL_432:
  if (v227) {
    free(v227);
  }
LABEL_292:
  int v167 = 0;
  uint64_t v168 = *(void *)(v8 + 224);
  if (!v168) {
    return 1;
  }
LABEL_293:
  if ((*(unsigned char *)(v168 + 158) & 1) == 0)
  {
    if (*((unsigned char *)p_cache + 3665))
    {
      int v240 = __nwlog_obj();
      if (os_log_type_enabled(v240, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v241 = *(void *)(v168 + 488);
        int v242 = *(_DWORD *)(*(void *)(v168 + 480) + 372);
        int v243 = *(_DWORD *)(v168 + 860);
        if (v241) {
          LODWORD(v241) = *(_DWORD *)(v241 + 424);
        }
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v168 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v242;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v243;
        *(_WORD *)&unsigned char buf[44] = 1024;
        *(_DWORD *)&buf[46] = v241;
        *(_WORD *)&buf[50] = 2048;
        *(void *)&buf[52] = v168;
        _os_log_impl(&dword_1830D4000, v240, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for connection %p", buf, 0x3Cu);
      }
    }
  }
  BOOL v169 = (_WORD *)(v168 + 872);
  if (((*(unsigned __int16 *)(v168 + 872) | (*(unsigned __int8 *)(v168 + 874) << 16)) & 0x80000) == 0)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
    *(_WORD *)&unsigned char buf[12] = 2048;
    *(void *)&buf[14] = v168;
    uint64_t v170 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v170, aBlock, &type)) {
      goto LABEL_323;
    }
    if (aBlock[0] == 17)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v171 = gLogObj;
      os_log_type_t v172 = aBlock[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
        goto LABEL_323;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v168;
      int v173 = "%{public}s connection %p not in idle list, cannot remove";
    }
    else if (type)
    {
      int v176 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v171 = gLogObj;
      os_log_type_t v172 = aBlock[0];
      BOOL v177 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]);
      if (v176)
      {
        if (v177)
        {
          *(_DWORD *)buf = 136446722;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v168;
          *(_WORD *)&buf[22] = 2082;
          *(void *)&unsigned char buf[24] = v176;
          _os_log_impl(&dword_1830D4000, v171, v172, "%{public}s connection %p not in idle list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
        }
        free(v176);
        goto LABEL_323;
      }
      if (!v177)
      {
LABEL_323:
        if (v170) {
          free(v170);
        }
        goto LABEL_339;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v168;
      int v173 = "%{public}s connection %p not in idle list, cannot remove, no backtrace";
    }
    else
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v171 = gLogObj;
      os_log_type_t v172 = aBlock[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
        goto LABEL_323;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v168;
      int v173 = "%{public}s connection %p not in idle list, cannot remove, backtrace limit exceeded";
    }
    _os_log_impl(&dword_1830D4000, v171, v172, v173, buf, 0x16u);
    goto LABEL_323;
  }
  uint64_t v174 = *(void *)(v168 + 592);
  uint64_t v175 = *(void **)(v168 + 600);
  if (v174)
  {
    *(void *)(v174 + 600) = v175;
    uint64_t v175 = *(void **)(v168 + 600);
  }
  else
  {
    *(void *)(v8 + 216) = v175;
  }
  void *v175 = v174;
  *(void *)(v168 + 592) = 0;
  *(void *)(v168 + 600) = 0;
  int v178 = *(_DWORD *)(v8 + 340);
  *(_DWORD *)(v8 + 340) = v178 - 1;
  if (!v178)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v179 = *(unsigned int *)(v8 + 340);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->idle_connections_count";
    *(_WORD *)&buf[22] = 2048;
    *(void *)&unsigned char buf[24] = 1;
    *(_WORD *)&buf[32] = 2048;
    *(void *)&buf[34] = v179;
    int v180 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v180, aBlock, &type))
    {
      if (aBlock[0] == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v181 = gLogObj;
        os_log_type_t v182 = aBlock[0];
        if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]))
        {
          uint64_t v183 = *(unsigned int *)(v8 + 340);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->idle_connections_count";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v183;
          int v184 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_329:
          _os_log_impl(&dword_1830D4000, v181, v182, v184, buf, 0x2Au);
        }
      }
      else if (type)
      {
        int v185 = (char *)__nw_create_backtrace_string();
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v181 = gLogObj;
        os_log_type_t v182 = aBlock[0];
        BOOL v186 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]);
        if (v185)
        {
          if (v186)
          {
            uint64_t v187 = *(unsigned int *)(v8 + 340);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->idle_connections_count";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v187;
            *(_WORD *)&buf[42] = 2082;
            *(void *)&unsigned char buf[44] = v185;
            _os_log_impl(&dword_1830D4000, v181, v182, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v185);
          goto LABEL_330;
        }
        if (v186)
        {
          uint64_t v189 = *(unsigned int *)(v8 + 340);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->idle_connections_count";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v189;
          int v184 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
          goto LABEL_329;
        }
      }
      else
      {
        BOOL v181 = __nwlog_obj();
        os_log_type_t v182 = aBlock[0];
        if (os_log_type_enabled(v181, (os_log_type_t)aBlock[0]))
        {
          uint64_t v188 = *(unsigned int *)(v8 + 340);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->idle_connections_count";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v188;
          int v184 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
          goto LABEL_329;
        }
      }
    }
LABEL_330:
    if (v180) {
      free(v180);
    }
    *(_DWORD *)(v8 + 340) = 0;
  }
  int v190 = (unsigned __int16)*v169;
  unsigned int v191 = (v190 | (*(unsigned __int8 *)(v168 + 874) << 16)) & 0xFFF7FFFF;
  _WORD *v169 = v190;
  *(unsigned char *)(v168 + 874) = BYTE2(v191);
  if ((*(unsigned char *)(v168 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      int v250 = __nwlog_obj();
      if (os_log_type_enabled(v250, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v251 = *(void *)(v168 + 488);
        int v252 = *(_DWORD *)(*(void *)(v168 + 480) + 372);
        int v253 = *(_DWORD *)(v168 + 860);
        if (v251) {
          LODWORD(v251) = *(_DWORD *)(v251 + 424);
        }
        int v254 = *(_DWORD *)(v8 + 340);
        *(_DWORD *)buf = 136448002;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v168 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v252;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v253;
        *(_WORD *)&unsigned char buf[44] = 1024;
        *(_DWORD *)&buf[46] = v251;
        *(_WORD *)&buf[50] = 2048;
        *(void *)&buf[52] = v168;
        *(_WORD *)&unsigned char buf[60] = 1024;
        *(_DWORD *)&buf[62] = v254;
        _os_log_impl(&dword_1830D4000, v250, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed idle connection %p, now have %u idle connections", buf, 0x42u);
      }
    }
  }
  if (*(void *)(v168 + 784))
  {
    if ((*(unsigned char *)(v168 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        int v258 = __nwlog_obj();
        if (os_log_type_enabled(v258, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v259 = *(void *)(v168 + 488);
          int v260 = *(_DWORD *)(*(void *)(v168 + 480) + 372);
          int v261 = *(_DWORD *)(v168 + 860);
          if (v259) {
            LODWORD(v259) = *(_DWORD *)(v259 + 424);
          }
          *(_DWORD *)buf = 136447746;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v168 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v260;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v261;
          *(_WORD *)&unsigned char buf[44] = 1024;
          *(_DWORD *)&buf[46] = v259;
          *(_WORD *)&buf[50] = 2048;
          *(void *)&buf[52] = v168;
          _os_log_impl(&dword_1830D4000, v258, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> deactivating destroy timer for connection %p", buf, 0x3Cu);
        }
      }
    }
    nw_queue_cancel_source(*(void *)(v168 + 784));
    *(void *)(v168 + 784) = 0;
  }
LABEL_339:
  if (v167)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
    os_log_type_t v193 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    int v194 = (void **)(NWConcrete_nw_resolution_report + 16);
    if (!__nwlog_fault(v193, aBlock, &type)) {
      goto LABEL_369;
    }
    if (aBlock[0] == 17)
    {
      int v238 = __nwlog_obj();
      os_log_type_t v239 = aBlock[0];
      if (!os_log_type_enabled(v238, (os_log_type_t)aBlock[0])) {
        goto LABEL_369;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
      BOOL v198 = "%{public}s called with null http1_stream";
    }
    else if (type)
    {
      int v255 = (char *)__nw_create_backtrace_string();
      int v238 = __nwlog_obj();
      os_log_type_t v239 = aBlock[0];
      BOOL v256 = os_log_type_enabled(v238, (os_log_type_t)aBlock[0]);
      if (v255)
      {
        if (v256)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v255;
          _os_log_impl(&dword_1830D4000, v238, v239, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v255);
        goto LABEL_369;
      }
      if (!v256) {
        goto LABEL_369;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
      BOOL v198 = "%{public}s called with null http1_stream, no backtrace";
    }
    else
    {
      int v238 = __nwlog_obj();
      os_log_type_t v239 = aBlock[0];
      if (!os_log_type_enabled(v238, (os_log_type_t)aBlock[0])) {
        goto LABEL_369;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
      BOOL v198 = "%{public}s called with null http1_stream, backtrace limit exceeded";
    }
LABEL_444:
    char v220 = v238;
    os_log_type_t v221 = v239;
    uint32_t v222 = 12;
    goto LABEL_368;
  }
  if (*((void *)v32 + 31))
  {
    if (!*(void *)(v168 + 488))
    {
      *((void *)v32 + 32) = v168;
      *(void *)(v168 + 488) = v32;
      nw_protocol_set_output_handler((uint64_t)v32, *(void *)(v168 + 32));
      nw_protocol_set_input_handler(v168, *((void *)v32 + 6));
      *(_OWORD *)BOOL v32 = *(_OWORD *)v168;
      long long v199 = *((_OWORD *)v32 + 9);
      long long v201 = *((_OWORD *)v32 + 6);
      long long v200 = *((_OWORD *)v32 + 7);
      *(_OWORD *)(v168 + 128) = *((_OWORD *)v32 + 8);
      *(_OWORD *)(v168 + 144) = v199;
      *(_OWORD *)(v168 + 96) = v201;
      *(_OWORD *)(v168 + 112) = v200;
      long long v202 = *((_OWORD *)v32 + 5);
      *(_OWORD *)(v168 + 64) = *((_OWORD *)v32 + 4);
      *(_OWORD *)(v168 + 80) = v202;
      nw_http_transaction_metadata_set_connection_metadata(*((void **)v32 + 44), *(void **)(v168 + 768));
      *v169 &= 0xFFD7u;
      *(_DWORD *)(v168 + 864) = 1;
      int v194 = (void **)(NWConcrete_nw_resolution_report + 16);
      if ((*(unsigned char *)(v168 + 158) & 1) == 0)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        BOOL v203 = gLogObj;
        if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v204 = *(void *)(v168 + 488);
          int v205 = *(_DWORD *)(*(void *)(v168 + 480) + 372);
          int v206 = *(_DWORD *)(v168 + 860);
          if (v204) {
            LODWORD(v204) = *(_DWORD *)(v204 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v168 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v205;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v206;
          *(_WORD *)&unsigned char buf[44] = 1024;
          *(_DWORD *)&buf[46] = v204;
          _os_log_impl(&dword_1830D4000, v203, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
        }
      }
      if ((v32[158] & 1) == 0)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v207 = gLogObj;
        if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
        {
          uint64_t v208 = *((void *)v32 + 32);
          int v209 = *(_DWORD *)(*((void *)v32 + 31) + 372);
          if (v208) {
            LODWORD(v208) = *(_DWORD *)(v208 + 860);
          }
          int v210 = *((_DWORD *)v32 + 106);
          *(_DWORD *)buf = 136448002;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v32 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v209;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v208;
          *(_WORD *)&unsigned char buf[44] = 1024;
          *(_DWORD *)&buf[46] = v210;
          *(_WORD *)&buf[50] = 2048;
          *(void *)&buf[52] = v32;
          *(_WORD *)&unsigned char buf[60] = 2048;
          *(void *)&buf[62] = v168;
          _os_log_impl(&dword_1830D4000, v207, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
        }
      }
      goto LABEL_371;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v192 = *(void *)(v168 + 488);
    *(_DWORD *)buf = 136446722;
    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
    *(_WORD *)&unsigned char buf[12] = 2048;
    *(void *)&buf[14] = v168;
    *(_WORD *)&buf[22] = 2048;
    *(void *)&unsigned char buf[24] = v192;
    os_log_type_t v193 = (char *)_os_log_send_and_compose_impl();
    aBlock[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    int v194 = NWConcrete_nw_resolution_report.cache;
    if (__nwlog_fault(v193, aBlock, &type))
    {
      if (aBlock[0] == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v195 = gLogObj;
        os_log_type_t v196 = aBlock[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
          goto LABEL_369;
        }
        uint64_t v197 = *(void *)(v168 + 488);
        *(_DWORD *)buf = 136446722;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v168;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = v197;
        BOOL v198 = "%{public}s Connection %p already has a stream (%p)";
LABEL_367:
        char v220 = v195;
        os_log_type_t v221 = v196;
        uint32_t v222 = 32;
LABEL_368:
        _os_log_impl(&dword_1830D4000, v220, v221, v198, buf, v222);
        goto LABEL_369;
      }
      if (type == OS_LOG_TYPE_DEFAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v195 = gLogObj;
        os_log_type_t v196 = aBlock[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0])) {
          goto LABEL_369;
        }
        uint64_t v218 = *(void *)(v168 + 488);
        *(_DWORD *)buf = 136446722;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v168;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = v218;
        BOOL v198 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
        goto LABEL_367;
      }
      os_log_type_t v211 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v195 = gLogObj;
      os_log_type_t v196 = aBlock[0];
      BOOL v212 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)aBlock[0]);
      if (!v211)
      {
        if (!v212) {
          goto LABEL_369;
        }
        uint64_t v219 = *(void *)(v168 + 488);
        *(_DWORD *)buf = 136446722;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v168;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = v219;
        BOOL v198 = "%{public}s Connection %p already has a stream (%p), no backtrace";
        goto LABEL_367;
      }
      if (v212)
      {
        uint64_t v213 = *(void *)(v168 + 488);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v168;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = v213;
        *(_WORD *)&buf[32] = 2082;
        *(void *)&buf[34] = v211;
        uint64_t v214 = "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s";
        BOOL v215 = v195;
        os_log_type_t v216 = v196;
        uint32_t v217 = 42;
LABEL_360:
        _os_log_impl(&dword_1830D4000, v215, v216, v214, buf, v217);
        goto LABEL_361;
      }
      goto LABEL_361;
    }
    goto LABEL_369;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
  os_log_type_t v193 = (char *)_os_log_send_and_compose_impl();
  aBlock[0] = 16;
  os_log_type_t type = OS_LOG_TYPE_DEFAULT;
  int v194 = (void **)(NWConcrete_nw_resolution_report + 16);
  if (!__nwlog_fault(v193, aBlock, &type)) {
    goto LABEL_369;
  }
  if (aBlock[0] == 17)
  {
    int v238 = __nwlog_obj();
    os_log_type_t v239 = aBlock[0];
    if (!os_log_type_enabled(v238, (os_log_type_t)aBlock[0])) {
      goto LABEL_369;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
    BOOL v198 = "%{public}s called with null http1_stream->protocol_http1";
    goto LABEL_444;
  }
  if (type == OS_LOG_TYPE_DEFAULT)
  {
    int v238 = __nwlog_obj();
    os_log_type_t v239 = aBlock[0];
    if (!os_log_type_enabled(v238, (os_log_type_t)aBlock[0])) {
      goto LABEL_369;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
    BOOL v198 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
    goto LABEL_444;
  }
  os_log_type_t v211 = (char *)__nw_create_backtrace_string();
  int v238 = __nwlog_obj();
  os_log_type_t v239 = aBlock[0];
  BOOL v257 = os_log_type_enabled(v238, (os_log_type_t)aBlock[0]);
  if (v211)
  {
    if (v257)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v211;
      uint64_t v214 = "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s";
      BOOL v215 = v238;
      os_log_type_t v216 = v239;
      uint32_t v217 = 22;
      goto LABEL_360;
    }
LABEL_361:
    free(v211);
    if (!v193) {
      goto LABEL_371;
    }
    goto LABEL_370;
  }
  if (v257)
  {
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
    BOOL v198 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
    goto LABEL_444;
  }
LABEL_369:
  if (v193) {
LABEL_370:
  }
    free(v193);
LABEL_371:
  *(void *)(v8 + 224) = 0;
  *((_WORD *)v32 + 214) |= 4u;
  BOOL result = 1;
  if ((v32[158] & 1) == 0 && *((unsigned char *)v194 + 3665))
  {
    unsigned int v223 = __nwlog_obj();
    if (os_log_type_enabled(v223, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v224 = *((void *)v32 + 32);
      int v225 = *(_DWORD *)(*((void *)v32 + 31) + 372);
      if (v224) {
        LODWORD(v224) = *(_DWORD *)(v224 + 860);
      }
      int v226 = *((_DWORD *)v32 + 106);
      *(_DWORD *)buf = 136447746;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_add_input_handler";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v32 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v225;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v224;
      *(_WORD *)&unsigned char buf[44] = 1024;
      *(_DWORD *)&buf[46] = v226;
      *(_WORD *)&buf[50] = 2048;
      *(void *)&buf[52] = v168;
      _os_log_impl(&dword_1830D4000, v223, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> attached to connection %p which triggered new flow, pending connected", buf, 0x3Cu);
    }
    return 1;
  }
  return result;
}

void sub_1839BEAC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ___ZL35nw_protocol_http1_add_input_handlerP11nw_protocolS0__block_invoke(uint64_t a1, void *a2)
{
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t result = nw_protocol_options_is_tls(a2);
    if (result) {
      *(unsigned char *)(*(void *)(a1 + 40) + 376) |= 2u;
    }
  }
  else
  {
    uint64_t result = nw_protocol_options_get_protocol_handle(a2);
    if (result == *(void *)(a1 + 40)) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    }
  }
  return result;
}

void nw_protocol_http1_disconnected(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v273 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v165 = (char *)_os_log_send_and_compose_impl();
    v272[0] = 16;
    v264[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v165, v272, v264)) {
      goto LABEL_423;
    }
    if (v272[0] == 17)
    {
      int v166 = __nwlog_obj();
      os_log_type_t v167 = v272[0];
      if (!os_log_type_enabled(v166, (os_log_type_t)v272[0])) {
        goto LABEL_423;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v168 = "%{public}s called with null protocol";
    }
    else if (v264[0])
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v166 = __nwlog_obj();
      os_log_type_t v167 = v272[0];
      BOOL v173 = os_log_type_enabled(v166, (os_log_type_t)v272[0]);
      if (backtrace_string)
      {
        if (v173)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = backtrace_string;
          _os_log_impl(&dword_1830D4000, v166, v167, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_423:
        if (!v165) {
          goto LABEL_425;
        }
LABEL_424:
        free(v165);
        goto LABEL_425;
      }
      if (!v173) {
        goto LABEL_423;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v168 = "%{public}s called with null protocol, no backtrace";
    }
    else
    {
      int v166 = __nwlog_obj();
      os_log_type_t v167 = v272[0];
      if (!os_log_type_enabled(v166, (os_log_type_t)v272[0])) {
        goto LABEL_423;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v168 = "%{public}s called with null protocol, backtrace limit exceeded";
    }
    goto LABEL_422;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v165 = (char *)_os_log_send_and_compose_impl();
    v272[0] = 16;
    v264[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v165, v272, v264)) {
      goto LABEL_423;
    }
    if (v272[0] != 17)
    {
      if (v264[0] == OS_LOG_TYPE_DEFAULT)
      {
        int v166 = __nwlog_obj();
        os_log_type_t v167 = v272[0];
        if (!os_log_type_enabled(v166, (os_log_type_t)v272[0])) {
          goto LABEL_423;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v168 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_422;
      }
      uint64_t v174 = (char *)__nw_create_backtrace_string();
      int v166 = __nwlog_obj();
      os_log_type_t v167 = v272[0];
      BOOL v175 = os_log_type_enabled(v166, (os_log_type_t)v272[0]);
      if (!v174)
      {
        if (!v175) {
          goto LABEL_423;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v168 = "%{public}s called with null handle, no backtrace";
        goto LABEL_422;
      }
      if (!v175) {
        goto LABEL_301;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v174;
      int v176 = "%{public}s called with null handle, dumping backtrace:%{public}s";
      goto LABEL_300;
    }
    int v166 = __nwlog_obj();
    os_log_type_t v167 = v272[0];
    if (!os_log_type_enabled(v166, (os_log_type_t)v272[0])) {
      goto LABEL_423;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v168 = "%{public}s called with null handle";
LABEL_422:
    _os_log_impl(&dword_1830D4000, v166, v167, v168, buf, 0xCu);
    goto LABEL_423;
  }
  int v3 = *((_DWORD *)handle + 6);
  uint64_t v4 = a1->handle;
  if (v3 == 1) {
    goto LABEL_10;
  }
  if (v3 != 2)
  {
    if (v3 != 3)
    {
LABEL_425:
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
      uint64_t v52 = (char *)_os_log_send_and_compose_impl();
      v272[0] = 16;
      v264[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v52, v272, v264)) {
        goto LABEL_438;
      }
      if (v272[0] == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v53 = gLogObj;
        os_log_type_t v54 = v272[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v272[0])) {
          goto LABEL_438;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
        id v55 = "%{public}s called with null http1";
        goto LABEL_436;
      }
      if (v264[0] == OS_LOG_TYPE_DEFAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v53 = gLogObj;
        os_log_type_t v54 = v272[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v272[0])) {
          goto LABEL_438;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
        id v55 = "%{public}s called with null http1, backtrace limit exceeded";
        goto LABEL_436;
      }
      int v225 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      char v62 = gLogObj;
      os_log_type_t v63 = v272[0];
      BOOL v226 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v272[0]);
      if (v225)
      {
        if (v226)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v225;
          _os_log_impl(&dword_1830D4000, v62, v63, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v225);
        goto LABEL_438;
      }
      if (!v226) {
        goto LABEL_438;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
      id v55 = "%{public}s called with null http1, no backtrace";
      goto LABEL_443;
    }
    uint64_t v5 = *((void *)handle + 2);
    if (v5)
    {
      uint64_t v4 = (void *)(v5 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v165 = (char *)_os_log_send_and_compose_impl();
    v272[0] = 16;
    v264[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v165, v272, v264)) {
      goto LABEL_423;
    }
    if (v272[0] == 17)
    {
      int v166 = __nwlog_obj();
      os_log_type_t v167 = v272[0];
      if (!os_log_type_enabled(v166, (os_log_type_t)v272[0])) {
        goto LABEL_423;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v168 = "%{public}s called with null handle->http1_connection";
      goto LABEL_422;
    }
    if (v264[0] == OS_LOG_TYPE_DEFAULT)
    {
      int v166 = __nwlog_obj();
      os_log_type_t v167 = v272[0];
      if (!os_log_type_enabled(v166, (os_log_type_t)v272[0])) {
        goto LABEL_423;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v168 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
      goto LABEL_422;
    }
    uint64_t v174 = (char *)__nw_create_backtrace_string();
    int v166 = __nwlog_obj();
    os_log_type_t v167 = v272[0];
    BOOL v193 = os_log_type_enabled(v166, (os_log_type_t)v272[0]);
    if (!v174)
    {
      if (!v193) {
        goto LABEL_423;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v168 = "%{public}s called with null handle->http1_connection, no backtrace";
      goto LABEL_422;
    }
    if (v193)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v174;
      int v176 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
      goto LABEL_300;
    }
LABEL_301:
    free(v174);
    if (!v165) {
      goto LABEL_425;
    }
    goto LABEL_424;
  }
  uint64_t v6 = *((void *)handle + 1);
  if (!v6)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v165 = (char *)_os_log_send_and_compose_impl();
    v272[0] = 16;
    v264[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v165, v272, v264)) {
      goto LABEL_423;
    }
    if (v272[0] == 17)
    {
      int v166 = __nwlog_obj();
      os_log_type_t v167 = v272[0];
      if (!os_log_type_enabled(v166, (os_log_type_t)v272[0])) {
        goto LABEL_423;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v168 = "%{public}s called with null handle->http1_stream";
      goto LABEL_422;
    }
    if (v264[0] == OS_LOG_TYPE_DEFAULT)
    {
      int v166 = __nwlog_obj();
      os_log_type_t v167 = v272[0];
      if (!os_log_type_enabled(v166, (os_log_type_t)v272[0])) {
        goto LABEL_423;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v168 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_422;
    }
    uint64_t v174 = (char *)__nw_create_backtrace_string();
    int v166 = __nwlog_obj();
    os_log_type_t v167 = v272[0];
    BOOL v192 = os_log_type_enabled(v166, (os_log_type_t)v272[0]);
    if (!v174)
    {
      if (!v192) {
        goto LABEL_423;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v168 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_422;
    }
    if (!v192) {
      goto LABEL_301;
    }
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v174;
    int v176 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
LABEL_300:
    _os_log_impl(&dword_1830D4000, v166, v167, v176, buf, 0x16u);
    goto LABEL_301;
  }
  uint64_t v4 = (void *)(v6 + 248);
LABEL_10:
  if (!*v4) {
    goto LABEL_425;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
    uint64_t v52 = (char *)_os_log_send_and_compose_impl();
    v272[0] = 16;
    v264[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v52, v272, v264)) {
      goto LABEL_438;
    }
    if (v272[0] == 17)
    {
      uint64_t v53 = __nwlog_obj();
      os_log_type_t v54 = v272[0];
      if (!os_log_type_enabled(v53, (os_log_type_t)v272[0])) {
        goto LABEL_438;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
      id v55 = "%{public}s called with null other_protocol";
      goto LABEL_436;
    }
    if (v264[0] == OS_LOG_TYPE_DEFAULT)
    {
      uint64_t v53 = __nwlog_obj();
      os_log_type_t v54 = v272[0];
      if (!os_log_type_enabled(v53, (os_log_type_t)v272[0])) {
        goto LABEL_438;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
      id v55 = "%{public}s called with null other_protocol, backtrace limit exceeded";
      goto LABEL_436;
    }
    BOOL v177 = (char *)__nw_create_backtrace_string();
    uint64_t v53 = __nwlog_obj();
    os_log_type_t v54 = v272[0];
    BOOL v178 = os_log_type_enabled(v53, (os_log_type_t)v272[0]);
    if (!v177)
    {
      if (!v178) {
        goto LABEL_438;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
      id v55 = "%{public}s called with null other_protocol, no backtrace";
      goto LABEL_436;
    }
    if (!v178) {
      goto LABEL_308;
    }
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v177;
    uint64_t v179 = "%{public}s called with null other_protocol, dumping backtrace:%{public}s";
LABEL_307:
    _os_log_impl(&dword_1830D4000, v53, v54, v179, buf, 0x16u);
LABEL_308:
    free(v177);
    if (!v52) {
      return;
    }
    goto LABEL_439;
  }
  if (v3 != 3)
  {
    if (v3 == 2)
    {
      uint64_t v7 = *((void *)handle + 1);
      if (v7)
      {
        if ((*(unsigned char *)(v7 + 158) & 1) == 0)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v8 = gLogObj;
          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
          {
            uint64_t v9 = *(void *)(v7 + 256);
            int v10 = *(_DWORD *)(*(void *)(v7 + 248) + 372);
            if (v9) {
              LODWORD(v9) = *(_DWORD *)(v9 + 860);
            }
            int v11 = *(_DWORD *)(v7 + 424);
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v7 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v10;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v9;
            LOWORD(v269) = 1024;
            *(_DWORD *)((char *)&v269 + 2) = v11;
            _os_log_impl(&dword_1830D4000, v8, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> initial stream disconnected", buf, 0x32u);
          }
        }
        nw_protocol_disconnected(*(void **)(v7 + 48), v7);
        return;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
      uint64_t v52 = (char *)_os_log_send_and_compose_impl();
      v272[0] = 16;
      v264[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v52, v272, v264)) {
        goto LABEL_438;
      }
      if (v272[0] == 17)
      {
        uint64_t v53 = __nwlog_obj();
        os_log_type_t v54 = v272[0];
        if (os_log_type_enabled(v53, (os_log_type_t)v272[0]))
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
          id v55 = "%{public}s called with null http1_stream";
LABEL_436:
          os_log_type_t v227 = v53;
          os_log_type_t v228 = v54;
LABEL_437:
          _os_log_impl(&dword_1830D4000, v227, v228, v55, buf, 0xCu);
          goto LABEL_438;
        }
        goto LABEL_438;
      }
      if (v264[0] == OS_LOG_TYPE_DEFAULT)
      {
        uint64_t v53 = __nwlog_obj();
        os_log_type_t v54 = v272[0];
        if (os_log_type_enabled(v53, (os_log_type_t)v272[0]))
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
          id v55 = "%{public}s called with null http1_stream, backtrace limit exceeded";
          goto LABEL_436;
        }
LABEL_438:
        if (!v52) {
          return;
        }
        goto LABEL_439;
      }
      BOOL v177 = (char *)__nw_create_backtrace_string();
      uint64_t v53 = __nwlog_obj();
      os_log_type_t v54 = v272[0];
      BOOL v262 = os_log_type_enabled(v53, (os_log_type_t)v272[0]);
      if (!v177)
      {
        if (v262)
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
          id v55 = "%{public}s called with null http1_stream, no backtrace";
          goto LABEL_436;
        }
        goto LABEL_438;
      }
      if (!v262) {
        goto LABEL_308;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v177;
      uint64_t v179 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
      goto LABEL_307;
    }
    goto LABEL_89;
  }
  uint64_t v12 = *((void *)handle + 2);
  if (!v12)
  {
LABEL_89:
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
    uint64_t v52 = (char *)_os_log_send_and_compose_impl();
    v272[0] = 16;
    v264[0] = OS_LOG_TYPE_DEFAULT;
    if (!__nwlog_fault(v52, v272, v264)) {
      goto LABEL_438;
    }
    if (v272[0] == 17)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v53 = gLogObj;
      os_log_type_t v54 = v272[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v272[0])) {
        goto LABEL_438;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
      id v55 = "%{public}s called with null http1_connection";
      goto LABEL_436;
    }
    if (v264[0] == OS_LOG_TYPE_DEFAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v53 = gLogObj;
      os_log_type_t v54 = v272[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v272[0])) {
        goto LABEL_438;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
      id v55 = "%{public}s called with null http1_connection, backtrace limit exceeded";
      goto LABEL_436;
    }
    uint64_t v61 = (char *)__nw_create_backtrace_string();
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    char v62 = gLogObj;
    os_log_type_t v63 = v272[0];
    BOOL v64 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v272[0]);
    if (v61)
    {
      if (v64)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v61;
        _os_log_impl(&dword_1830D4000, v62, v63, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v61);
      if (!v52) {
        return;
      }
LABEL_439:
      free(v52);
      return;
    }
    if (!v64) {
      goto LABEL_438;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
    id v55 = "%{public}s called with null http1_connection, no backtrace";
LABEL_443:
    os_log_type_t v227 = v62;
    os_log_type_t v228 = v63;
    goto LABEL_437;
  }
  os_log_type_t v13 = (unsigned __int16 *)(v12 + 872);
  int v14 = *(unsigned __int16 *)(v12 + 872);
  int v15 = v14 | (*(unsigned __int8 *)(v12 + 874) << 16);
  if ((v14 & 0x2000) != 0)
  {
    if (*(unsigned char *)(v12 + 158)) {
      goto LABEL_110;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v56 = gLogObj;
    if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO)) {
      goto LABEL_110;
    }
    uint64_t v57 = *(void *)(v12 + 488);
    int v58 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
    int v59 = *(_DWORD *)(v12 + 860);
    if (v57) {
      LODWORD(v57) = *(_DWORD *)(v57 + 424);
    }
    *(_DWORD *)buf = 136447490;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_finish_input";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v12 + 74;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&unsigned char buf[24] = " ";
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v58;
    *(_WORD *)&buf[38] = 1024;
    *(_DWORD *)&buf[40] = v59;
    LOWORD(v269) = 1024;
    *(_DWORD *)((char *)&v269 + 2) = v57;
    os_log_type_t v60 = "%{public}s %{public}s%s<i%u:c%u:s%u> input already finished, returning";
LABEL_109:
    _os_log_impl(&dword_1830D4000, v56, OS_LOG_TYPE_INFO, v60, buf, 0x32u);
    goto LABEL_110;
  }
  *(unsigned char *)(v12 + 874) = BYTE2(v15);
  *os_log_type_t v13 = v15 | 0x2000;
  if ((v15 & 0x40000) != 0)
  {
    if (*(unsigned char *)(v12 + 158)) {
      goto LABEL_110;
    }
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v56 = gLogObj;
    if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO)) {
      goto LABEL_110;
    }
    uint64_t v65 = *(void *)(v12 + 488);
    int v66 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
    int v67 = *(_DWORD *)(v12 + 860);
    if (v65) {
      LODWORD(v65) = *(_DWORD *)(v65 + 424);
    }
    *(_DWORD *)buf = 136447490;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_finish_input";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v12 + 74;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&unsigned char buf[24] = " ";
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v66;
    *(_WORD *)&buf[38] = 1024;
    *(_DWORD *)&buf[40] = v67;
    LOWORD(v269) = 1024;
    *(_DWORD *)((char *)&v269 + 2) = v65;
    os_log_type_t v60 = "%{public}s %{public}s%s<i%u:c%u:s%u> already getting input frames, returning";
    goto LABEL_109;
  }
  nw_parameters_t v263 = (_WORD *)(v12 + 872);
  int v16 = 0;
  *(void *)os_log_type_t v264 = 0;
  int v265 = v264;
  do
  {
    int input_frames = nw_protocol_get_input_frames(*(void *)(v12 + 32), v12, 1, 0xFFFFFFFFLL, 0xFFFFFFFFLL, (uint64_t)v264);
    BOOL v18 = *(_DWORD **)v264;
    if (!*(void *)v264) {
      goto LABEL_26;
    }
    if (gLogDatapath)
    {
      char v50 = __nwlog_obj();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v18;
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = v264;
        *(_WORD *)&buf[32] = 2048;
        *(void *)&buf[34] = v12 + 616;
        *(_WORD *)&buf[42] = 1024;
        LODWORD(v269) = 1;
        WORD2(v269) = 1024;
        *(_DWORD *)((char *)&v269 + 6) = 1;
        WORD5(v269) = 1024;
        HIDWORD(v269) = 1;
        _os_log_impl(&dword_1830D4000, v50, OS_LOG_TYPE_DEBUG, "%{public}s called: initial frame %p, source %p, destination %p, temp %u, forwards %u, append %u", buf, 0x3Cu);
      }
    }
    int v19 = 0;
    *(void *)uint64_t v272 = 0;
    *(void *)&v272[8] = v272;
    do
    {
      int v21 = (_DWORD *)*((void *)v18 + 4);
      if (!v21 && !*((void *)v18 + 5)) {
        int v21 = 0;
      }
      if (gLogDatapath)
      {
        id v24 = __nwlog_obj();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
        {
          int v25 = v18[13];
          if (v25) {
            v25 -= v18[14] + v18[15];
          }
          if (v21)
          {
            int v26 = v21[13];
            if (v26) {
              v26 -= v21[14] + v21[15];
            }
          }
          else
          {
            int v26 = 0;
          }
          *(_DWORD *)buf = 136447234;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v18;
          *(_WORD *)&buf[22] = 1024;
          *(_DWORD *)&unsigned char buf[24] = v25;
          *(_WORD *)&buf[28] = 2048;
          *(void *)&buf[30] = v21;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v26;
          _os_log_impl(&dword_1830D4000, v24, OS_LOG_TYPE_DEBUG, "%{public}s current frame: (%p, %u bytes), next frame: (%p, %u bytes)", buf, 0x2Cu);
        }
      }
      uint64_t v22 = *((void *)v18 + 4);
      BOOL v23 = (void *)*((void *)v18 + 5);
      if (v22)
      {
        *(void *)(v22 + 40) = v23;
        BOOL v23 = (void *)*((void *)v18 + 5);
      }
      else
      {
        int v265 = (os_log_type_t *)*((void *)v18 + 5);
      }
      void *v23 = v22;
      int v20 = *(void **)&v272[8];
      *((void *)v18 + 4) = 0;
      *((void *)v18 + 5) = v20;
      void *v20 = v18;
      *(void *)&v272[8] = v18 + 8;
      ++v19;
      BOOL v18 = v21;
    }
    while (v21);
    if (v19)
    {
      if (gLogDatapath)
      {
        char v51 = __nwlog_obj();
        if (os_log_type_enabled(v51, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 1024;
          *(_DWORD *)&buf[14] = v19;
          _os_log_impl(&dword_1830D4000, v51, OS_LOG_TYPE_DEBUG, "%{public}s moving %u frames from temp array to destination array", buf, 0x12u);
        }
      }
      int v27 = *(_DWORD **)v272;
      int v28 = v19;
      if (!*(void *)v272) {
        goto LABEL_67;
      }
      int v28 = v19;
      do
      {
        uint64_t v30 = v27 + 8;
        int v31 = (_DWORD *)*((void *)v27 + 4);
        if (!v31 && !*((void *)v27 + 5)) {
          int v31 = 0;
        }
        if (gLogDatapath)
        {
          char v34 = __nwlog_obj();
          if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
          {
            int v35 = v27[13];
            if (v35) {
              v35 -= v27[14] + v27[15];
            }
            if (v31)
            {
              int v36 = v31[13];
              if (v36) {
                v36 -= v31[14] + v31[15];
              }
            }
            else
            {
              int v36 = 0;
            }
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v27;
            *(_WORD *)&buf[22] = 1024;
            *(_DWORD *)&unsigned char buf[24] = v35;
            *(_WORD *)&buf[28] = 2048;
            *(void *)&buf[30] = v31;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v36;
            _os_log_impl(&dword_1830D4000, v34, OS_LOG_TYPE_DEBUG, "%{public}s current frame: (%p, %u bytes), next frame: (%p, %u bytes)", buf, 0x2Cu);
          }
        }
        uint64_t v32 = *((void *)v27 + 4);
        uint64_t v33 = (void *)*((void *)v27 + 5);
        if (v32)
        {
          *(void *)(v32 + 40) = v33;
          uint64_t v33 = (void *)*((void *)v27 + 5);
        }
        else
        {
          *(void *)&v272[8] = *((void *)v27 + 5);
        }
        void *v33 = v32;
        void *v30 = 0;
        *((void *)v27 + 5) = 0;
        uint64_t v29 = *(void **)(v12 + 624);
        *((void *)v27 + 5) = v29;
        void *v29 = v27;
        *(void *)(v12 + 624) = v30;
        --v28;
        int v27 = v31;
      }
      while (v31);
      if (v28)
      {
LABEL_67:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v28;
        char v37 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v266 = 0;
        if (!__nwlog_fault(v37, &type, &v266)) {
          goto LABEL_81;
        }
        if (type == OS_LOG_TYPE_FAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v38 = gLogObj;
          os_log_type_t v39 = type;
          if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
            goto LABEL_81;
          }
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 1024;
          *(_DWORD *)&buf[14] = v28;
          id v40 = v38;
          os_log_type_t v41 = v39;
          __int16 v42 = "%{public}s failed to deliver all temp frames, remaining %u frames";
        }
        else if (v266)
        {
          uint64_t v43 = (char *)__nw_create_backtrace_string();
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          char v44 = gLogObj;
          os_log_type_t v45 = type;
          BOOL v46 = os_log_type_enabled((os_log_t)gLogObj, type);
          if (v43)
          {
            if (v46)
            {
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
              *(_WORD *)&unsigned char buf[12] = 1024;
              *(_DWORD *)&buf[14] = v28;
              *(_WORD *)&buf[18] = 2082;
              *(void *)&buf[20] = v43;
              _os_log_impl(&dword_1830D4000, v44, v45, "%{public}s failed to deliver all temp frames, remaining %u frames, dumping backtrace:%{public}s", buf, 0x1Cu);
            }
            free(v43);
            goto LABEL_81;
          }
          if (!v46)
          {
LABEL_81:
            if (v37) {
              free(v37);
            }
            goto LABEL_25;
          }
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 1024;
          *(_DWORD *)&buf[14] = v28;
          id v40 = v44;
          os_log_type_t v41 = v45;
          __int16 v42 = "%{public}s failed to deliver all temp frames, remaining %u frames, no backtrace";
        }
        else
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v47 = gLogObj;
          os_log_type_t v48 = type;
          if (!os_log_type_enabled((os_log_t)gLogObj, type)) {
            goto LABEL_81;
          }
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
          *(_WORD *)&unsigned char buf[12] = 1024;
          *(_DWORD *)&buf[14] = v28;
          id v40 = v47;
          os_log_type_t v41 = v48;
          __int16 v42 = "%{public}s failed to deliver all temp frames, remaining %u frames, backtrace limit exceeded";
        }
        _os_log_impl(&dword_1830D4000, v40, v41, v42, buf, 0x12u);
        goto LABEL_81;
      }
    }
LABEL_25:
    if (gLogDatapath)
    {
      uint64_t v49 = __nwlog_obj();
      if (os_log_type_enabled(v49, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_move_frame_array";
        *(_WORD *)&unsigned char buf[12] = 1024;
        *(_DWORD *)&buf[14] = v19;
        *(_WORD *)&buf[18] = 2048;
        *(void *)&buf[20] = v264;
        *(_WORD *)&buf[28] = 2048;
        *(void *)&buf[30] = v12 + 616;
        _os_log_impl(&dword_1830D4000, v49, OS_LOG_TYPE_DEBUG, "%{public}s moved %u frames from %p to %p", buf, 0x26u);
      }
    }
LABEL_26:
    v16 += input_frames;
  }
  while (input_frames);
  if (gLogDatapath)
  {
    int v207 = __nwlog_obj();
    if (os_log_type_enabled(v207, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_finalize_temp_frame_array";
      _os_log_impl(&dword_1830D4000, v207, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
    }
  }
  *(void *)buf = MEMORY[0x1E4F143A8];
  *(void *)&buf[8] = 0x40000000;
  *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
  *(void *)&unsigned char buf[24] = &__block_descriptor_tmp_58_40119;
  *(void *)&buf[32] = v264;
  buf[40] = 0;
  BOOL v85 = *(_DWORD **)v264;
  os_log_type_t v13 = (unsigned __int16 *)(v12 + 872);
  do
  {
    if (!v85) {
      break;
    }
    uint64_t v86 = (_DWORD *)*((void *)v85 + 4);
    char v87 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
    BOOL v85 = v86;
  }
  while ((v87 & 1) != 0);
  int v88 = (unsigned __int16)*v263;
  int v89 = v88 | (*(unsigned __int8 *)(v12 + 874) << 16);
  if ((v88 & 0x6000) == 0x2000 && !*(void *)(v12 + 616))
  {
    *(unsigned char *)(v12 + 874) = BYTE2(v89);
    _WORD *v263 = v89 | 0x4000;
    if (*(void *)(v12 + 488))
    {
      if (*(_DWORD *)(v12 + 868) && llhttp_message_needs_eof(v12 + 200))
      {
        if ((v89 & 4) == 0)
        {
          unsigned int v118 = 5;
          if (*(unsigned char *)(v12 + 158)) {
            goto LABEL_133;
          }
          goto LABEL_207;
        }
LABEL_397:
        if ((*(unsigned char *)(v12 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            long long v230 = __nwlog_obj();
            if (os_log_type_enabled(v230, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v231 = *(void *)(v12 + 488);
              int v232 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
              int v233 = *(_DWORD *)(v12 + 860);
              if (v231) {
                LODWORD(v231) = *(_DWORD *)(v231 + 424);
              }
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_parser_signal_eof_if_needed";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v12 + 74;
              *(_WORD *)&buf[22] = 2080;
              *(void *)&unsigned char buf[24] = " ";
              *(_WORD *)&buf[32] = 1024;
              *(_DWORD *)&buf[34] = v232;
              *(_WORD *)&buf[38] = 1024;
              *(_DWORD *)&buf[40] = v233;
              LOWORD(v269) = 1024;
              *(_DWORD *)((char *)&v269 + 2) = v231;
              _os_log_impl(&dword_1830D4000, v230, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> signaled eof and terminated message successfully", buf, 0x32u);
              os_log_type_t v13 = (unsigned __int16 *)(v12 + 872);
            }
          }
        }
        *((unsigned char *)v13 + 2) = (*v13 | (*((unsigned __int8 *)v13 + 2) << 16) | 0x10000u) >> 16;
        goto LABEL_133;
      }
      unsigned int v123 = llhttp_finish(v12 + 200);
      if ((*v263 & 4) != 0) {
        goto LABEL_397;
      }
      unsigned int v118 = v123;
      if (!v123) {
        goto LABEL_397;
      }
      if (v123 != 14) {
        goto LABEL_206;
      }
      uint64_t v124 = *(void *)(v12 + 488);
      if (v124)
      {
        unsigned int v118 = 14;
        if ((*v263 & 1) != 0
          && (*(_WORD *)(v124 + 428) & 1) == 0
          && !*(_DWORD *)(v12 + 848)
          && !*(_DWORD *)(v12 + 852)
          && !*(_DWORD *)(v12 + 856))
        {
          if ((*v263 & 2) != 0 && *(void *)(v12 + 800))
          {
            if (!*(void *)(v12 + 808))
            {
              BOOL v215 = strdup("");
              if (!v215)
              {
                int v260 = __nwlog_obj();
                os_log_type_enabled(v260, OS_LOG_TYPE_ERROR);
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "strict_strdup";
                int v261 = (void *)_os_log_send_and_compose_impl();
                if (__nwlog_abort((uint64_t)v261))
                {
                  __break(1u);
                  return;
                }
                free(v261);
              }
              *(void *)(v12 + 808) = v215;
            }
            nw_http1_on_header_value_complete(v12 + 200);
          }
          nw_http1_on_headers_complete(v12 + 200);
          nw_http1_on_message_complete(v12 + 200);
          os_log_type_t v13 = (unsigned __int16 *)(v12 + 872);
          goto LABEL_397;
        }
LABEL_206:
        if (*(unsigned char *)(v12 + 158)) {
          goto LABEL_133;
        }
        goto LABEL_207;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_recover_incomplete_header";
      int v242 = (char *)_os_log_send_and_compose_impl();
      v272[0] = 16;
      os_log_type_t type = OS_LOG_TYPE_DEFAULT;
      if (__nwlog_fault(v242, v272, &type))
      {
        if (v272[0] == 17)
        {
          int v243 = __nwlog_obj();
          os_log_type_t v244 = v272[0];
          if (!os_log_type_enabled(v243, (os_log_type_t)v272[0])) {
            goto LABEL_530;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_recover_incomplete_header";
          uint64_t v245 = "%{public}s called with null http1_stream";
LABEL_529:
          _os_log_impl(&dword_1830D4000, v243, v244, v245, buf, 0xCu);
          goto LABEL_530;
        }
        if (type == OS_LOG_TYPE_DEFAULT)
        {
          int v243 = __nwlog_obj();
          os_log_type_t v244 = v272[0];
          if (!os_log_type_enabled(v243, (os_log_type_t)v272[0])) {
            goto LABEL_530;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_recover_incomplete_header";
          uint64_t v245 = "%{public}s called with null http1_stream, backtrace limit exceeded";
          goto LABEL_529;
        }
        int v253 = (char *)__nw_create_backtrace_string();
        int v243 = __nwlog_obj();
        os_log_type_t v244 = v272[0];
        BOOL v254 = os_log_type_enabled(v243, (os_log_type_t)v272[0]);
        if (!v253)
        {
          if (!v254) {
            goto LABEL_530;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_recover_incomplete_header";
          uint64_t v245 = "%{public}s called with null http1_stream, no backtrace";
          goto LABEL_529;
        }
        if (v254)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_recover_incomplete_header";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v253;
          _os_log_impl(&dword_1830D4000, v243, v244, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v253);
      }
LABEL_530:
      if (v242) {
        free(v242);
      }
      unsigned int v118 = 14;
      os_log_type_t v13 = (unsigned __int16 *)(v12 + 872);
      if (*(unsigned char *)(v12 + 158)) {
        goto LABEL_133;
      }
LABEL_207:
      int v125 = __nwlog_obj();
      if (os_log_type_enabled(v125, OS_LOG_TYPE_ERROR))
      {
        uint64_t v126 = *(void *)(v12 + 488);
        if (v126) {
          LODWORD(v126) = *(_DWORD *)(v126 + 424);
        }
        if (v118 >= 0x24) {
          abort();
        }
        int v127 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
        int v128 = *(_DWORD *)(v12 + 860);
        int v129 = off_1E52441B8[v118];
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_http1_parser_signal_eof_if_needed";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v12 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v127;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v128;
        LOWORD(v269) = 1024;
        *(_DWORD *)((char *)&v269 + 2) = v126;
        WORD3(v269) = 2080;
        *((void *)&v269 + 1) = v129;
        _os_log_impl(&dword_1830D4000, v125, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> parser eof did not terminate full message with errno: %s, deferring input error", buf, 0x3Cu);
      }
      goto LABEL_133;
    }
    if ((v89 & 0x100) != 0)
    {
      if ((*(unsigned char *)(v12 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          uint64_t v157 = __nwlog_obj();
          if (os_log_type_enabled(v157, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v158 = *(void *)(v12 + 488);
            int v159 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
            int v160 = *(_DWORD *)(v12 + 860);
            if (v158) {
              LODWORD(v158) = *(_DWORD *)(v158 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v12 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v159;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v160;
            LOWORD(v269) = 1024;
            *(_DWORD *)((char *)&v269 + 2) = v158;
            _os_log_impl(&dword_1830D4000, v157, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> already closed", buf, 0x32u);
            os_log_type_t v13 = (unsigned __int16 *)(v12 + 872);
          }
        }
      }
      goto LABEL_133;
    }
    *(unsigned char *)(v12 + 874) = BYTE2(v89);
    _WORD *v263 = v89 | 0x4100;
    if ((*(unsigned char *)(v12 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        int v238 = __nwlog_obj();
        if (os_log_type_enabled(v238, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v239 = *(void *)(v12 + 488);
          int v240 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
          int v241 = *(_DWORD *)(v12 + 860);
          if (v239) {
            LODWORD(v239) = *(_DWORD *)(v239 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v12 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v240;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v241;
          LOWORD(v269) = 1024;
          *(_DWORD *)((char *)&v269 + 2) = v239;
          _os_log_impl(&dword_1830D4000, v238, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
          os_log_type_t v13 = (unsigned __int16 *)(v12 + 872);
        }
      }
    }
    uint64_t v130 = *(void *)(v12 + 480);
    if (!v130)
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
      uint64_t v234 = (char *)_os_log_send_and_compose_impl();
      v272[0] = 16;
      os_log_type_t type = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v234, v272, &type)) {
        goto LABEL_540;
      }
      if (v272[0] == 17)
      {
        int v235 = __nwlog_obj();
        os_log_type_t v236 = v272[0];
        if (!os_log_type_enabled(v235, (os_log_type_t)v272[0])) {
          goto LABEL_540;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        int v237 = "%{public}s called with null http1";
      }
      else if (type)
      {
        int v246 = (char *)__nw_create_backtrace_string();
        int v235 = __nwlog_obj();
        os_log_type_t v236 = v272[0];
        BOOL v247 = os_log_type_enabled(v235, (os_log_type_t)v272[0]);
        if (v246)
        {
          if (v247)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v246;
            _os_log_impl(&dword_1830D4000, v235, v236, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v246);
          goto LABEL_540;
        }
        if (!v247) {
          goto LABEL_540;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        int v237 = "%{public}s called with null http1, no backtrace";
      }
      else
      {
        int v235 = __nwlog_obj();
        os_log_type_t v236 = v272[0];
        if (!os_log_type_enabled(v235, (os_log_type_t)v272[0])) {
          goto LABEL_540;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        int v237 = "%{public}s called with null http1, backtrace limit exceeded";
      }
      uint64_t v259 = buf;
LABEL_539:
      _os_log_impl(&dword_1830D4000, v235, v236, v237, v259, 0xCu);
      goto LABEL_540;
    }
    int v131 = *v13;
    int v132 = v131 | (*((unsigned __int8 *)v13 + 2) << 16);
    if ((v131 & 0x800) != 0)
    {
      if ((*(unsigned char *)(v12 + 158) & 1) != 0
        || !gLogDatapath
        || (char v161 = __nwlog_obj(), !os_log_type_enabled(v161, OS_LOG_TYPE_DEBUG)))
      {
LABEL_337:
        if (*(void *)(v12 + 488)) {
          goto LABEL_133;
        }
LABEL_338:
        uint64_t v185 = *(void *)(v12 + 784);
        if (v185)
        {
          nw_queue_set_timer_values(v185, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
        }
        else
        {
          if ((*(unsigned char *)(v12 + 158) & 1) == 0)
          {
            BOOL v186 = __nwlog_obj();
            if (os_log_type_enabled(v186, OS_LOG_TYPE_ERROR))
            {
              uint64_t v187 = *(void *)(v12 + 488);
              int v188 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
              int v189 = *(_DWORD *)(v12 + 860);
              if (v187) {
                LODWORD(v187) = *(_DWORD *)(v187 + 424);
              }
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v12 + 74;
              *(_WORD *)&buf[22] = 2080;
              *(void *)&unsigned char buf[24] = " ";
              *(_WORD *)&buf[32] = 1024;
              *(_DWORD *)&buf[34] = v188;
              *(_WORD *)&buf[38] = 1024;
              *(_DWORD *)&buf[40] = v189;
              LOWORD(v269) = 1024;
              *(_DWORD *)((char *)&v269 + 2) = v187;
              _os_log_impl(&dword_1830D4000, v186, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
            }
          }
          uint64_t v190 = *(void *)(v12 + 608);
          unsigned int v191 = *(void **)(v12 + 496);
          *(void *)buf = MEMORY[0x1E4F143A8];
          *(void *)&buf[8] = 0x40000000;
          *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
          *(void *)&unsigned char buf[24] = &unk_1E52411A0;
          *(void *)&buf[32] = v190;
          nw_queue_context_async(v191, buf);
        }
        goto LABEL_133;
      }
      uint64_t v162 = *(void *)(v12 + 488);
      int v163 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
      int v164 = *(_DWORD *)(v12 + 860);
      if (v162) {
        LODWORD(v162) = *(_DWORD *)(v162 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v12 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v163;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v164;
      LOWORD(v269) = 1024;
      *(_DWORD *)((char *)&v269 + 2) = v162;
      _os_log_impl(&dword_1830D4000, v161, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
      goto LABEL_542;
    }
    *((unsigned char *)v13 + 2) = BYTE2(v132);
    *os_log_type_t v13 = v132 | 0x800;
    uint64_t v133 = *(unsigned int *)(v130 + 368) + 1;
    uint64_t v134 = v133 << 31 >> 31;
    *(_DWORD *)(v130 + 368) = v133;
    if (v134 == v133 && (v134 & 0x8000000000000000) == 0)
    {
LABEL_332:
      if ((*(unsigned char *)(v12 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          int v248 = __nwlog_obj();
          if (os_log_type_enabled(v248, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v249 = *(void *)(v12 + 488);
            int v250 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
            int v251 = *(_DWORD *)(v12 + 860);
            if (v249) {
              LODWORD(v249) = *(_DWORD *)(v249 + 424);
            }
            int v252 = *(_DWORD *)(v130 + 368) + *(_DWORD *)(v130 + 364);
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v12 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v250;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v251;
            LOWORD(v269) = 1024;
            *(_DWORD *)((char *)&v269 + 2) = v249;
            WORD3(v269) = 1024;
            DWORD2(v269) = v252;
            _os_log_impl(&dword_1830D4000, v248, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
            os_log_type_t v13 = (unsigned __int16 *)(v12 + 872);
          }
        }
      }
      os_log_type_t v182 = *(void **)(v12 + 496);
      if (!v182)
      {
        __nwlog_obj();
        *(_DWORD *)uint64_t v272 = 136446210;
        *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        uint64_t v234 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v266 = 0;
        if (!__nwlog_fault(v234, &type, &v266)) {
          goto LABEL_540;
        }
        if (type == OS_LOG_TYPE_FAULT)
        {
          int v235 = __nwlog_obj();
          os_log_type_t v236 = type;
          if (!os_log_type_enabled(v235, type)) {
            goto LABEL_540;
          }
          *(_DWORD *)uint64_t v272 = 136446210;
          *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          int v237 = "%{public}s called with null http1_connection->context";
LABEL_538:
          uint64_t v259 = v272;
          goto LABEL_539;
        }
        if (!v266)
        {
          int v235 = __nwlog_obj();
          os_log_type_t v236 = type;
          if (!os_log_type_enabled(v235, type)) {
            goto LABEL_540;
          }
          *(_DWORD *)uint64_t v272 = 136446210;
          *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          int v237 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
          goto LABEL_538;
        }
        int v255 = (char *)__nw_create_backtrace_string();
        int v235 = __nwlog_obj();
        os_log_type_t v236 = type;
        BOOL v256 = os_log_type_enabled(v235, type);
        if (!v255)
        {
          if (!v256) {
            goto LABEL_540;
          }
          *(_DWORD *)uint64_t v272 = 136446210;
          *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          int v237 = "%{public}s called with null http1_connection->context, no backtrace";
          goto LABEL_538;
        }
        if (!v256) {
          goto LABEL_514;
        }
        *(_DWORD *)uint64_t v272 = 136446466;
        *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        *(_WORD *)&v272[12] = 2082;
        *(void *)&v272[14] = v255;
        BOOL v257 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
        goto LABEL_513;
      }
      uint64_t v183 = *(void *)(v12 + 480);
      if (v183)
      {
        uint64_t v184 = *(void *)(v183 + 200);
        *(void *)buf = MEMORY[0x1E4F143A8];
        *(void *)&buf[8] = 0x40000000;
        *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
        *(void *)&unsigned char buf[24] = &unk_1E52411C8;
        *(void *)&buf[32] = v184;
        nw_queue_context_async(v182, buf);
        goto LABEL_337;
      }
      __nwlog_obj();
      *(_DWORD *)uint64_t v272 = 136446210;
      *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
      uint64_t v234 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t type = OS_LOG_TYPE_ERROR;
      char v266 = 0;
      if (__nwlog_fault(v234, &type, &v266))
      {
        if (type == OS_LOG_TYPE_FAULT)
        {
          int v235 = __nwlog_obj();
          os_log_type_t v236 = type;
          if (!os_log_type_enabled(v235, type)) {
            goto LABEL_540;
          }
          *(_DWORD *)uint64_t v272 = 136446210;
          *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          int v237 = "%{public}s called with null http1";
          goto LABEL_538;
        }
        if (!v266)
        {
          int v235 = __nwlog_obj();
          os_log_type_t v236 = type;
          if (!os_log_type_enabled(v235, type)) {
            goto LABEL_540;
          }
          *(_DWORD *)uint64_t v272 = 136446210;
          *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          int v237 = "%{public}s called with null http1, backtrace limit exceeded";
          goto LABEL_538;
        }
        int v255 = (char *)__nw_create_backtrace_string();
        int v235 = __nwlog_obj();
        os_log_type_t v236 = type;
        BOOL v258 = os_log_type_enabled(v235, type);
        if (!v255)
        {
          if (!v258) {
            goto LABEL_540;
          }
          *(_DWORD *)uint64_t v272 = 136446210;
          *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          int v237 = "%{public}s called with null http1, no backtrace";
          goto LABEL_538;
        }
        if (!v258) {
          goto LABEL_514;
        }
        *(_DWORD *)uint64_t v272 = 136446466;
        *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        *(_WORD *)&v272[12] = 2082;
        *(void *)&v272[14] = v255;
        BOOL v257 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_513:
        _os_log_impl(&dword_1830D4000, v235, v236, v257, v272, 0x16u);
LABEL_514:
        free(v255);
        if (v234) {
LABEL_541:
        }
          free(v234);
LABEL_542:
        os_log_type_t v13 = (unsigned __int16 *)(v12 + 872);
        if (*(void *)(v12 + 488)) {
          goto LABEL_133;
        }
        goto LABEL_338;
      }
LABEL_540:
      if (!v234) {
        goto LABEL_542;
      }
      goto LABEL_541;
    }
    __nwlog_obj();
    uint64_t v135 = *(unsigned int *)(v130 + 368);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->nonresuable_connections";
    *(_WORD *)&buf[22] = 2048;
    *(void *)&unsigned char buf[24] = 1;
    *(_WORD *)&buf[32] = 2048;
    *(void *)&buf[34] = v135;
    os_log_type_t v136 = (char *)_os_log_send_and_compose_impl();
    v272[0] = 16;
    os_log_type_t type = OS_LOG_TYPE_DEFAULT;
    if (__nwlog_fault(v136, v272, &type))
    {
      if (v272[0] == 17)
      {
        uint64_t v137 = __nwlog_obj();
        os_log_type_t v138 = v272[0];
        if (os_log_type_enabled(v137, (os_log_type_t)v272[0]))
        {
          uint64_t v139 = *(unsigned int *)(v130 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v139;
          BOOL v140 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_328:
          _os_log_impl(&dword_1830D4000, v137, v138, v140, buf, 0x2Au);
        }
      }
      else if (type)
      {
        BOOL v169 = (char *)__nw_create_backtrace_string();
        uint64_t v137 = __nwlog_obj();
        os_log_type_t v138 = v272[0];
        BOOL v170 = os_log_type_enabled(v137, (os_log_type_t)v272[0]);
        if (v169)
        {
          if (v170)
          {
            uint64_t v171 = *(unsigned int *)(v130 + 368);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v171;
            *(_WORD *)&buf[42] = 2082;
            *(void *)&long long v269 = v169;
            _os_log_impl(&dword_1830D4000, v137, v138, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v169);
          goto LABEL_329;
        }
        if (v170)
        {
          uint64_t v181 = *(unsigned int *)(v130 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v181;
          BOOL v140 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
          goto LABEL_328;
        }
      }
      else
      {
        uint64_t v137 = __nwlog_obj();
        os_log_type_t v138 = v272[0];
        if (os_log_type_enabled(v137, (os_log_type_t)v272[0]))
        {
          uint64_t v180 = *(unsigned int *)(v130 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v180;
          BOOL v140 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
          goto LABEL_328;
        }
      }
    }
LABEL_329:
    if (v136) {
      free(v136);
    }
    *(_DWORD *)(v130 + 368) = -1;
    os_log_type_t v13 = (unsigned __int16 *)(v12 + 872);
    goto LABEL_332;
  }
LABEL_133:
  uint64_t v90 = *(void *)(v12 + 616);
  uint64_t v91 = *(void *)(v12 + 632);
  int v92 = *v13 & 0x204;
  if ((*v13 & 0x2000) != 0)
  {
    uint64_t v102 = v90 | v91;
    BOOL v103 = (v90 | v91) == 0;
    unsigned int v104 = ((*v13 | (*((unsigned __int8 *)v13 + 2) << 16)) >> 9) & 1;
    if (v92 == 4) {
      unsigned int v104 = 1;
    }
    if (v102 || !v104)
    {
      if (v92 == 4) {
        goto LABEL_173;
      }
      if (!v103) {
        goto LABEL_173;
      }
      *(_DWORD *)(v12 + 864) = 5;
      if (*(unsigned char *)(v12 + 158)) {
        goto LABEL_173;
      }
      BOOL v93 = __nwlog_obj();
      if (!os_log_type_enabled(v93, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_173;
      }
      uint64_t v108 = *(void *)(v12 + 488);
      int v109 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
      int v110 = *(_DWORD *)(v12 + 860);
      if (v108) {
        LODWORD(v108) = *(_DWORD *)(v108 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v12 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v109;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v110;
      LOWORD(v269) = 1024;
      *(_DWORD *)((char *)&v269 + 2) = v108;
      char v97 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: connection error";
    }
    else
    {
      *(_DWORD *)(v12 + 864) = 4;
      if (*(unsigned char *)(v12 + 158)) {
        goto LABEL_173;
      }
      BOOL v93 = __nwlog_obj();
      if (!os_log_type_enabled(v93, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_173;
      }
      uint64_t v105 = *(void *)(v12 + 488);
      int v106 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
      int v107 = *(_DWORD *)(v12 + 860);
      if (v105) {
        LODWORD(v105) = *(_DWORD *)(v105 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v12 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v106;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v107;
      LOWORD(v269) = 1024;
      *(_DWORD *)((char *)&v269 + 2) = v105;
      char v97 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: connection complete";
    }
LABEL_172:
    _os_log_impl(&dword_1830D4000, v93, OS_LOG_TYPE_DEBUG, v97, buf, 0x32u);
    goto LABEL_173;
  }
  if (v92 != 4)
  {
    if (*(unsigned char *)(v12 + 158)) {
      goto LABEL_173;
    }
    BOOL v93 = __nwlog_obj();
    if (!os_log_type_enabled(v93, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_173;
    }
    uint64_t v111 = *(void *)(v12 + 488);
    int v112 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
    int v113 = *(_DWORD *)(v12 + 860);
    if (v111) {
      LODWORD(v111) = *(_DWORD *)(v111 + 424);
    }
    *(_DWORD *)buf = 136447490;
    *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v12 + 74;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&unsigned char buf[24] = " ";
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v112;
    *(_WORD *)&buf[38] = 1024;
    *(_DWORD *)&buf[40] = v113;
    LOWORD(v269) = 1024;
    *(_DWORD *)((char *)&v269 + 2) = v111;
    char v97 = "%{public}s %{public}s%s<i%u:c%u:s%u> no change to http1 connection state";
    goto LABEL_172;
  }
  if (v90 | v91)
  {
    if (!v90) {
      goto LABEL_173;
    }
    if (v91) {
      goto LABEL_173;
    }
    *(_DWORD *)(v12 + 864) = 3;
    if (*(unsigned char *)(v12 + 158)) {
      goto LABEL_173;
    }
    BOOL v93 = __nwlog_obj();
    if (!os_log_type_enabled(v93, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_173;
    }
    uint64_t v119 = *(void *)(v12 + 488);
    int v120 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
    int v121 = *(_DWORD *)(v12 + 860);
    if (v119) {
      LODWORD(v119) = *(_DWORD *)(v119 + 424);
    }
    *(_DWORD *)buf = 136447490;
    *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v12 + 74;
    *(_WORD *)&buf[22] = 2080;
    *(void *)&unsigned char buf[24] = " ";
    *(_WORD *)&buf[32] = 1024;
    *(_DWORD *)&buf[34] = v120;
    *(_WORD *)&buf[38] = 1024;
    *(_DWORD *)&buf[40] = v121;
    LOWORD(v269) = 1024;
    *(_DWORD *)((char *)&v269 + 2) = v119;
    char v97 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: stream pending";
    goto LABEL_172;
  }
  *(_DWORD *)(v12 + 864) = 2;
  if ((*(unsigned char *)(v12 + 158) & 1) == 0)
  {
    BOOL v93 = __nwlog_obj();
    if (os_log_type_enabled(v93, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v94 = *(void *)(v12 + 488);
      int v95 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
      int v96 = *(_DWORD *)(v12 + 860);
      if (v94) {
        LODWORD(v94) = *(_DWORD *)(v94 + 424);
      }
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v12 + 74;
      *(_WORD *)&buf[22] = 2080;
      *(void *)&unsigned char buf[24] = " ";
      *(_WORD *)&buf[32] = 1024;
      *(_DWORD *)&buf[34] = v95;
      *(_WORD *)&buf[38] = 1024;
      *(_DWORD *)&buf[40] = v96;
      LOWORD(v269) = 1024;
      *(_DWORD *)((char *)&v269 + 2) = v94;
      char v97 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: stream complete";
      goto LABEL_172;
    }
  }
LABEL_173:
  if (*(_DWORD *)(v12 + 864) == 1)
  {
    if (v16)
    {
      uint64_t v114 = *(void *)(v12 + 488);
      if (v114) {
        nw_protocol_input_available(*(void **)(v114 + 48), v114);
      }
    }
  }
LABEL_110:
  int v68 = *v13;
  int v69 = v68 | (*((unsigned __int8 *)v13 + 2) << 16);
  if ((v68 & 0x100) != 0)
  {
    if ((*(unsigned char *)(v12 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v81 = __nwlog_obj();
        if (os_log_type_enabled(v81, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v82 = *(void *)(v12 + 488);
          int v83 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
          int v84 = *(_DWORD *)(v12 + 860);
          if (v82) {
            LODWORD(v82) = *(_DWORD *)(v82 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v12 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v83;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v84;
          LOWORD(v269) = 1024;
          *(_DWORD *)((char *)&v269 + 2) = v82;
          _os_log_impl(&dword_1830D4000, v81, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> already closed", buf, 0x32u);
        }
      }
    }
  }
  else
  {
    *((unsigned char *)v13 + 2) = BYTE2(v69);
    *os_log_type_t v13 = v69 | 0x100;
    if ((*(unsigned char *)(v12 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        BOOL v198 = __nwlog_obj();
        if (os_log_type_enabled(v198, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v199 = *(void *)(v12 + 488);
          int v200 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
          int v201 = *(_DWORD *)(v12 + 860);
          if (v199) {
            LODWORD(v199) = *(_DWORD *)(v199 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v12 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v200;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v201;
          LOWORD(v269) = 1024;
          *(_DWORD *)((char *)&v269 + 2) = v199;
          _os_log_impl(&dword_1830D4000, v198, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
        }
      }
    }
    uint64_t v70 = *(void *)(v12 + 480);
    if (!v70)
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
      int v194 = (char *)_os_log_send_and_compose_impl();
      v272[0] = 16;
      v264[0] = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v194, v272, v264)) {
        goto LABEL_465;
      }
      if (v272[0] == 17)
      {
        uint64_t v195 = __nwlog_obj();
        os_log_type_t v196 = v272[0];
        if (!os_log_type_enabled(v195, (os_log_type_t)v272[0])) {
          goto LABEL_465;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        uint64_t v197 = "%{public}s called with null http1";
      }
      else if (v264[0])
      {
        uint64_t v208 = (char *)__nw_create_backtrace_string();
        uint64_t v195 = __nwlog_obj();
        os_log_type_t v196 = v272[0];
        BOOL v209 = os_log_type_enabled(v195, (os_log_type_t)v272[0]);
        if (v208)
        {
          if (v209)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v208;
            _os_log_impl(&dword_1830D4000, v195, v196, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v208);
          goto LABEL_465;
        }
        if (!v209)
        {
LABEL_465:
          if (!v194) {
            goto LABEL_234;
          }
          goto LABEL_466;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        uint64_t v197 = "%{public}s called with null http1, no backtrace";
      }
      else
      {
        uint64_t v195 = __nwlog_obj();
        os_log_type_t v196 = v272[0];
        if (!os_log_type_enabled(v195, (os_log_type_t)v272[0])) {
          goto LABEL_465;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        uint64_t v197 = "%{public}s called with null http1, backtrace limit exceeded";
      }
      os_log_type_t v229 = buf;
      goto LABEL_464;
    }
    int v71 = *v13;
    int v72 = v71 | (*((unsigned __int8 *)v13 + 2) << 16);
    if ((v71 & 0x800) == 0)
    {
      *((unsigned char *)v13 + 2) = BYTE2(v72);
      *os_log_type_t v13 = v72 | 0x800;
      uint64_t v73 = *(unsigned int *)(v70 + 368) + 1;
      uint64_t v74 = v73 << 31 >> 31;
      *(_DWORD *)(v70 + 368) = v73;
      if (v74 != v73 || v74 < 0)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v75 = *(unsigned int *)(v70 + 368);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->nonresuable_connections";
        *(_WORD *)&buf[22] = 2048;
        *(void *)&unsigned char buf[24] = 1;
        *(_WORD *)&buf[32] = 2048;
        *(void *)&buf[34] = v75;
        uint64_t v76 = (char *)_os_log_send_and_compose_impl();
        v272[0] = 16;
        v264[0] = OS_LOG_TYPE_DEFAULT;
        if (!__nwlog_fault(v76, v272, v264)) {
          goto LABEL_226;
        }
        if (v272[0] != 17)
        {
          if (v264[0])
          {
            int v115 = (char *)__nw_create_backtrace_string();
            int v77 = __nwlog_obj();
            os_log_type_t v78 = v272[0];
            BOOL v116 = os_log_type_enabled(v77, (os_log_type_t)v272[0]);
            if (v115)
            {
              if (v116)
              {
                uint64_t v117 = *(unsigned int *)(v70 + 368);
                *(_DWORD *)buf = 136447234;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                *(void *)&unsigned char buf[24] = 1;
                *(_WORD *)&buf[32] = 2048;
                *(void *)&buf[34] = v117;
                *(_WORD *)&buf[42] = 2082;
                *(void *)&long long v269 = v115;
                _os_log_impl(&dword_1830D4000, v77, v78, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
              }
              free(v115);
              goto LABEL_226;
            }
            if (!v116) {
              goto LABEL_226;
            }
            uint64_t v141 = *(unsigned int *)(v70 + 368);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v141;
            BOOL v80 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
          }
          else
          {
            int v77 = __nwlog_obj();
            os_log_type_t v78 = v272[0];
            if (!os_log_type_enabled(v77, (os_log_type_t)v272[0])) {
              goto LABEL_226;
            }
            uint64_t v122 = *(unsigned int *)(v70 + 368);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            *(void *)&unsigned char buf[24] = 1;
            *(_WORD *)&buf[32] = 2048;
            *(void *)&buf[34] = v122;
            BOOL v80 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
          }
LABEL_225:
          _os_log_impl(&dword_1830D4000, v77, v78, v80, buf, 0x2Au);
          goto LABEL_226;
        }
        int v77 = __nwlog_obj();
        os_log_type_t v78 = v272[0];
        if (os_log_type_enabled(v77, (os_log_type_t)v272[0]))
        {
          uint64_t v79 = *(unsigned int *)(v70 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          *(void *)&unsigned char buf[24] = 1;
          *(_WORD *)&buf[32] = 2048;
          *(void *)&buf[34] = v79;
          BOOL v80 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
          goto LABEL_225;
        }
LABEL_226:
        if (v76) {
          free(v76);
        }
        *(_DWORD *)(v70 + 368) = -1;
      }
      if ((*(unsigned char *)(v12 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          int v210 = __nwlog_obj();
          if (os_log_type_enabled(v210, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v211 = *(void *)(v12 + 488);
            int v212 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
            int v213 = *(_DWORD *)(v12 + 860);
            if (v211) {
              LODWORD(v211) = *(_DWORD *)(v211 + 424);
            }
            int v214 = *(_DWORD *)(v70 + 368) + *(_DWORD *)(v70 + 364);
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v12 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v212;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v213;
            LOWORD(v269) = 1024;
            *(_DWORD *)((char *)&v269 + 2) = v211;
            WORD3(v269) = 1024;
            DWORD2(v269) = v214;
            _os_log_impl(&dword_1830D4000, v210, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
          }
        }
      }
      uint64_t v142 = *(void **)(v12 + 496);
      if (v142)
      {
        uint64_t v143 = *(void *)(v12 + 480);
        if (v143)
        {
          uint64_t v144 = *(void *)(v143 + 200);
          *(void *)buf = MEMORY[0x1E4F143A8];
          *(void *)&buf[8] = 0x40000000;
          *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
          *(void *)&unsigned char buf[24] = &unk_1E52411C8;
          *(void *)&buf[32] = v144;
          nw_queue_context_async(v142, buf);
          goto LABEL_234;
        }
        __nwlog_obj();
        *(_DWORD *)uint64_t v272 = 136446210;
        *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        int v194 = (char *)_os_log_send_and_compose_impl();
        v264[0] = OS_LOG_TYPE_ERROR;
        os_log_type_t type = OS_LOG_TYPE_DEFAULT;
        if (!__nwlog_fault(v194, v264, &type)) {
          goto LABEL_465;
        }
        if (v264[0] == OS_LOG_TYPE_FAULT)
        {
          uint64_t v195 = __nwlog_obj();
          os_log_type_t v196 = v264[0];
          if (os_log_type_enabled(v195, v264[0]))
          {
            *(_DWORD *)uint64_t v272 = 136446210;
            *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
            uint64_t v197 = "%{public}s called with null http1";
            goto LABEL_463;
          }
          goto LABEL_465;
        }
        if (type)
        {
          os_log_type_t v221 = (char *)__nw_create_backtrace_string();
          uint64_t v195 = __nwlog_obj();
          os_log_type_t v196 = v264[0];
          BOOL v224 = os_log_type_enabled(v195, v264[0]);
          if (v221)
          {
            if (v224)
            {
              *(_DWORD *)uint64_t v272 = 136446466;
              *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              *(_WORD *)&v272[12] = 2082;
              *(void *)&v272[14] = v221;
              unsigned int v223 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_415:
              _os_log_impl(&dword_1830D4000, v195, v196, v223, v272, 0x16u);
            }
            goto LABEL_416;
          }
          if (!v224) {
            goto LABEL_465;
          }
          *(_DWORD *)uint64_t v272 = 136446210;
          *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          uint64_t v197 = "%{public}s called with null http1, no backtrace";
        }
        else
        {
          uint64_t v195 = __nwlog_obj();
          os_log_type_t v196 = v264[0];
          if (!os_log_type_enabled(v195, v264[0])) {
            goto LABEL_465;
          }
          *(_DWORD *)uint64_t v272 = 136446210;
          *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          uint64_t v197 = "%{public}s called with null http1, backtrace limit exceeded";
        }
LABEL_463:
        os_log_type_t v229 = v272;
LABEL_464:
        _os_log_impl(&dword_1830D4000, v195, v196, v197, v229, 0xCu);
        goto LABEL_465;
      }
      __nwlog_obj();
      *(_DWORD *)uint64_t v272 = 136446210;
      *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
      int v194 = (char *)_os_log_send_and_compose_impl();
      v264[0] = OS_LOG_TYPE_ERROR;
      os_log_type_t type = OS_LOG_TYPE_DEFAULT;
      if (!__nwlog_fault(v194, v264, &type)) {
        goto LABEL_465;
      }
      if (v264[0] == OS_LOG_TYPE_FAULT)
      {
        uint64_t v195 = __nwlog_obj();
        os_log_type_t v196 = v264[0];
        if (os_log_type_enabled(v195, v264[0]))
        {
          *(_DWORD *)uint64_t v272 = 136446210;
          *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
          uint64_t v197 = "%{public}s called with null http1_connection->context";
          goto LABEL_463;
        }
        goto LABEL_465;
      }
      if (type == OS_LOG_TYPE_DEFAULT)
      {
        uint64_t v195 = __nwlog_obj();
        os_log_type_t v196 = v264[0];
        if (!os_log_type_enabled(v195, v264[0])) {
          goto LABEL_465;
        }
        *(_DWORD *)uint64_t v272 = 136446210;
        *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        uint64_t v197 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
        goto LABEL_463;
      }
      os_log_type_t v221 = (char *)__nw_create_backtrace_string();
      uint64_t v195 = __nwlog_obj();
      os_log_type_t v196 = v264[0];
      BOOL v222 = os_log_type_enabled(v195, v264[0]);
      if (!v221)
      {
        if (!v222) {
          goto LABEL_465;
        }
        *(_DWORD *)uint64_t v272 = 136446210;
        *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        uint64_t v197 = "%{public}s called with null http1_connection->context, no backtrace";
        goto LABEL_463;
      }
      if (v222)
      {
        *(_DWORD *)uint64_t v272 = 136446466;
        *(void *)&v272[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
        *(_WORD *)&v272[12] = 2082;
        *(void *)&v272[14] = v221;
        unsigned int v223 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
        goto LABEL_415;
      }
LABEL_416:
      free(v221);
      if (!v194) {
        goto LABEL_234;
      }
LABEL_466:
      free(v194);
      goto LABEL_234;
    }
    if ((*(unsigned char *)(v12 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        int v98 = __nwlog_obj();
        if (os_log_type_enabled(v98, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v99 = *(void *)(v12 + 488);
          int v100 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
          int v101 = *(_DWORD *)(v12 + 860);
          if (v99) {
            LODWORD(v99) = *(_DWORD *)(v99 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v12 + 74;
          *(_WORD *)&buf[22] = 2080;
          *(void *)&unsigned char buf[24] = " ";
          *(_WORD *)&buf[32] = 1024;
          *(_DWORD *)&buf[34] = v100;
          *(_WORD *)&buf[38] = 1024;
          *(_DWORD *)&buf[40] = v101;
          LOWORD(v269) = 1024;
          *(_DWORD *)((char *)&v269 + 2) = v99;
          _os_log_impl(&dword_1830D4000, v98, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
        }
      }
    }
LABEL_234:
    if (!*(void *)(v12 + 488))
    {
      uint64_t v150 = *(void *)(v12 + 784);
      if (v150)
      {
        if (*(void *)v150)
        {
          dispatch_source_set_timer(*(dispatch_source_t *)v150, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
        }
        else
        {
          *(_OWORD *)(v150 + 32) = xmmword_183D5CD50;
          if (*(unsigned char *)(v150 + 48) && *(unsigned char *)(v150 + 49)) {
            nw_queue_source_run_timer(v150);
          }
        }
      }
      else
      {
        if ((*(unsigned char *)(v12 + 158) & 1) == 0)
        {
          uint64_t v151 = __nwlog_obj();
          if (os_log_type_enabled(v151, OS_LOG_TYPE_ERROR))
          {
            uint64_t v152 = *(void *)(v12 + 488);
            int v153 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
            int v154 = *(_DWORD *)(v12 + 860);
            if (v152) {
              LODWORD(v152) = *(_DWORD *)(v152 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v12 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v153;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v154;
            LOWORD(v269) = 1024;
            *(_DWORD *)((char *)&v269 + 2) = v152;
            _os_log_impl(&dword_1830D4000, v151, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
          }
        }
        uint64_t v155 = *(void *)(v12 + 608);
        uint64_t v156 = *(void **)(v12 + 496);
        *(void *)buf = MEMORY[0x1E4F143A8];
        *(void *)&buf[8] = 0x40000000;
        *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
        *(void *)&unsigned char buf[24] = &unk_1E52411A0;
        *(void *)&buf[32] = v155;
        nw_queue_context_async(v156, buf);
      }
    }
  }
  uint64_t v145 = *(void *)(v12 + 488);
  if (v145)
  {
    if ((*(_DWORD *)(v12 + 864) & 0xFFFFFFFE) == 4 || (*(_WORD *)(v145 + 428) & 0x10) != 0)
    {
      if ((*(unsigned char *)(v12 + 158) & 1) != 0 || !gLogDatapath) {
        goto LABEL_243;
      }
      long long v202 = __nwlog_obj();
      BOOL v203 = os_log_type_enabled(v202, OS_LOG_TYPE_DEBUG);
      uint64_t v145 = *(void *)(v12 + 488);
      if (v203)
      {
        int v204 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
        int v205 = *(_DWORD *)(v12 + 860);
        if (v145) {
          int v206 = *(_DWORD *)(v145 + 424);
        }
        else {
          int v206 = 0;
        }
        *(_DWORD *)buf = 136448002;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v12 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v204;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v205;
        LOWORD(v269) = 1024;
        *(_DWORD *)((char *)&v269 + 2) = v206;
        WORD3(v269) = 2048;
        *((void *)&v269 + 1) = v12;
        __int16 v270 = 2048;
        uint64_t v271 = v145;
        _os_log_impl(&dword_1830D4000, v202, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection %p sending disconnected to current stream (%p)", buf, 0x46u);
        uint64_t v145 = *(void *)(v12 + 488);
      }
      if (v145) {
LABEL_243:
      }
        nw_protocol_disconnected(*(void **)(v145 + 48), v145);
      else {
        nw_protocol_disconnected(0, 0);
      }
    }
    else
    {
      if ((*(unsigned char *)(v12 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          os_log_type_t v216 = __nwlog_obj();
          if (os_log_type_enabled(v216, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v217 = *(void *)(v12 + 488);
            int v218 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
            int v219 = *(_DWORD *)(v12 + 860);
            if (v217) {
              int v220 = *(_DWORD *)(v217 + 424);
            }
            else {
              int v220 = 0;
            }
            *(_DWORD *)buf = 136448002;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v12 + 74;
            *(_WORD *)&buf[22] = 2080;
            *(void *)&unsigned char buf[24] = " ";
            *(_WORD *)&buf[32] = 1024;
            *(_DWORD *)&buf[34] = v218;
            *(_WORD *)&buf[38] = 1024;
            *(_DWORD *)&buf[40] = v219;
            LOWORD(v269) = 1024;
            *(_DWORD *)((char *)&v269 + 2) = v220;
            WORD3(v269) = 2048;
            *((void *)&v269 + 1) = v12;
            __int16 v270 = 2048;
            uint64_t v271 = v217;
            _os_log_impl(&dword_1830D4000, v216, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection %p not sending disconnected up to current stream (%p), input still available", buf, 0x46u);
          }
        }
      }
      *v13 |= 0x80u;
    }
  }
  else if ((*(unsigned char *)(v12 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      char v146 = __nwlog_obj();
      if (os_log_type_enabled(v146, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v147 = *(void *)(v12 + 488);
        int v148 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
        int v149 = *(_DWORD *)(v12 + 860);
        if (v147) {
          LODWORD(v147) = *(_DWORD *)(v147 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnected";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v12 + 74;
        *(_WORD *)&buf[22] = 2080;
        *(void *)&unsigned char buf[24] = " ";
        *(_WORD *)&buf[32] = 1024;
        *(_DWORD *)&buf[34] = v148;
        *(_WORD *)&buf[38] = 1024;
        *(_DWORD *)&buf[40] = v149;
        LOWORD(v269) = 1024;
        *(_DWORD *)((char *)&v269 + 2) = v147;
        _os_log_impl(&dword_1830D4000, v146, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> no stream on http connection, just closing", buf, 0x32u);
      }
    }
  }
}

void nw_protocol_http1_disconnect(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v966 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v66 = (char *)_os_log_send_and_compose_impl();
    v961[0] = 16;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v66, v961, &aBlock)) {
      goto LABEL_1061;
    }
    if (v961[0] == 17)
    {
      int v67 = __nwlog_obj();
      os_log_type_t v68 = v961[0];
      if (!os_log_type_enabled(v67, (os_log_type_t)v961[0])) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null protocol";
      goto LABEL_1060;
    }
    if (!(_BYTE)aBlock)
    {
      int v67 = __nwlog_obj();
      os_log_type_t v68 = v961[0];
      if (!os_log_type_enabled(v67, (os_log_type_t)v961[0])) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null protocol, backtrace limit exceeded";
      goto LABEL_1060;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    int v67 = __nwlog_obj();
    os_log_type_t v68 = v961[0];
    BOOL v75 = os_log_type_enabled(v67, (os_log_type_t)v961[0]);
    if (!backtrace_string)
    {
      if (!v75) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null protocol, no backtrace";
      goto LABEL_1060;
    }
    if (v75)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = backtrace_string;
      _os_log_impl(&dword_1830D4000, v67, v68, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(backtrace_string);
LABEL_1061:
    if (!v66) {
      goto LABEL_1063;
    }
LABEL_1062:
    free(v66);
    goto LABEL_1063;
  }
  handle = (char *)a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v66 = (char *)_os_log_send_and_compose_impl();
    v961[0] = 16;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v66, v961, &aBlock)) {
      goto LABEL_1061;
    }
    if (v961[0] == 17)
    {
      int v67 = __nwlog_obj();
      os_log_type_t v68 = v961[0];
      if (!os_log_type_enabled(v67, (os_log_type_t)v961[0])) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null handle";
      goto LABEL_1060;
    }
    if (!(_BYTE)aBlock)
    {
      int v67 = __nwlog_obj();
      os_log_type_t v68 = v961[0];
      if (!os_log_type_enabled(v67, (os_log_type_t)v961[0])) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null handle, backtrace limit exceeded";
      goto LABEL_1060;
    }
    uint64_t v76 = (char *)__nw_create_backtrace_string();
    int v67 = __nwlog_obj();
    os_log_type_t v68 = v961[0];
    BOOL v77 = os_log_type_enabled(v67, (os_log_type_t)v961[0]);
    if (v76)
    {
      if (v77)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v76;
        _os_log_impl(&dword_1830D4000, v67, v68, "%{public}s called with null handle, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v76);
      if (!v66) {
        goto LABEL_1063;
      }
      goto LABEL_1062;
    }
    if (v77)
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null handle, no backtrace";
LABEL_1060:
      _os_log_impl(&dword_1830D4000, v67, v68, v69, buf, 0xCu);
      goto LABEL_1061;
    }
    goto LABEL_1061;
  }
  int v3 = *((_DWORD *)handle + 6);
  uint64_t v4 = (uint64_t *)a1->handle;
  if (v3 == 1) {
    goto LABEL_10;
  }
  if (v3 != 2)
  {
    if (v3 != 3)
    {
LABEL_1063:
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
      uint64_t v70 = (char *)_os_log_send_and_compose_impl();
      v961[0] = 16;
      LOBYTE(aBlock) = 0;
      if (!__nwlog_fault(v70, v961, &aBlock)) {
        goto LABEL_1095;
      }
      if (v961[0] == 17)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v71 = gLogObj;
        os_log_type_t v72 = v961[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v961[0])) {
          goto LABEL_1095;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
        uint64_t v73 = "%{public}s called with null http1";
        goto LABEL_1093;
      }
      if (!(_BYTE)aBlock)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v71 = gLogObj;
        os_log_type_t v72 = v961[0];
        if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v961[0])) {
          goto LABEL_1095;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
        uint64_t v73 = "%{public}s called with null http1, backtrace limit exceeded";
        goto LABEL_1093;
      }
      uint64_t v686 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v687 = gLogObj;
      os_log_type_t v688 = v961[0];
      BOOL v689 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v961[0]);
      if (!v686)
      {
        if (!v689) {
          goto LABEL_1095;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
        uint64_t v73 = "%{public}s called with null http1, no backtrace";
        goto LABEL_1100;
      }
      if (v689)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v686;
        _os_log_impl(&dword_1830D4000, v687, v688, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v686);
LABEL_1095:
      if (!v70) {
        return;
      }
      goto LABEL_1096;
    }
    uint64_t v5 = *((void *)handle + 2);
    if (v5)
    {
      uint64_t v4 = (uint64_t *)(v5 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v66 = (char *)_os_log_send_and_compose_impl();
    v961[0] = 16;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v66, v961, &aBlock)) {
      goto LABEL_1061;
    }
    if (v961[0] == 17)
    {
      int v67 = __nwlog_obj();
      os_log_type_t v68 = v961[0];
      if (!os_log_type_enabled(v67, (os_log_type_t)v961[0])) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null handle->http1_connection";
      goto LABEL_1060;
    }
    if (!(_BYTE)aBlock)
    {
      int v67 = __nwlog_obj();
      os_log_type_t v68 = v961[0];
      if (!os_log_type_enabled(v67, (os_log_type_t)v961[0])) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
      goto LABEL_1060;
    }
    int v92 = (char *)__nw_create_backtrace_string();
    int v67 = __nwlog_obj();
    os_log_type_t v68 = v961[0];
    BOOL v93 = os_log_type_enabled(v67, (os_log_type_t)v961[0]);
    if (!v92)
    {
      if (!v93) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null handle->http1_connection, no backtrace";
      goto LABEL_1060;
    }
    if (v93)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v92;
      uint64_t v94 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
LABEL_184:
      _os_log_impl(&dword_1830D4000, v67, v68, v94, buf, 0x16u);
      goto LABEL_185;
    }
    goto LABEL_185;
  }
  uint64_t v6 = *((void *)handle + 1);
  if (!v6)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    int v66 = (char *)_os_log_send_and_compose_impl();
    v961[0] = 16;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v66, v961, &aBlock)) {
      goto LABEL_1061;
    }
    if (v961[0] == 17)
    {
      int v67 = __nwlog_obj();
      os_log_type_t v68 = v961[0];
      if (!os_log_type_enabled(v67, (os_log_type_t)v961[0])) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null handle->http1_stream";
      goto LABEL_1060;
    }
    if (!(_BYTE)aBlock)
    {
      int v67 = __nwlog_obj();
      os_log_type_t v68 = v961[0];
      if (!os_log_type_enabled(v67, (os_log_type_t)v961[0])) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_1060;
    }
    int v92 = (char *)__nw_create_backtrace_string();
    int v67 = __nwlog_obj();
    os_log_type_t v68 = v961[0];
    BOOL v95 = os_log_type_enabled(v67, (os_log_type_t)v961[0]);
    if (!v92)
    {
      if (!v95) {
        goto LABEL_1061;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      int v69 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_1060;
    }
    if (v95)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v92;
      uint64_t v94 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_184;
    }
LABEL_185:
    free(v92);
    if (!v66) {
      goto LABEL_1063;
    }
    goto LABEL_1062;
  }
  uint64_t v4 = (uint64_t *)(v6 + 248);
LABEL_10:
  uint64_t v7 = *v4;
  if (!*v4) {
    goto LABEL_1063;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
    uint64_t v70 = (char *)_os_log_send_and_compose_impl();
    v961[0] = 16;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v70, v961, &aBlock)) {
      goto LABEL_1095;
    }
    if (v961[0] == 17)
    {
      int v71 = __nwlog_obj();
      os_log_type_t v72 = v961[0];
      if (!os_log_type_enabled(v71, (os_log_type_t)v961[0])) {
        goto LABEL_1095;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
      uint64_t v73 = "%{public}s called with null other_protocol";
    }
    else if ((_BYTE)aBlock)
    {
      os_log_type_t v78 = (char *)__nw_create_backtrace_string();
      int v71 = __nwlog_obj();
      os_log_type_t v72 = v961[0];
      BOOL v79 = os_log_type_enabled(v71, (os_log_type_t)v961[0]);
      if (v78)
      {
        if (!v79) {
          goto LABEL_437;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v78;
        BOOL v80 = "%{public}s called with null other_protocol, dumping backtrace:%{public}s";
LABEL_436:
        _os_log_impl(&dword_1830D4000, v71, v72, v80, buf, 0x16u);
LABEL_437:
        free(v78);
        if (!v70) {
          return;
        }
        goto LABEL_1096;
      }
      if (!v79) {
        goto LABEL_1095;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
      uint64_t v73 = "%{public}s called with null other_protocol, no backtrace";
    }
    else
    {
      int v71 = __nwlog_obj();
      os_log_type_t v72 = v961[0];
      if (!os_log_type_enabled(v71, (os_log_type_t)v961[0])) {
        goto LABEL_1095;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
      uint64_t v73 = "%{public}s called with null other_protocol, backtrace limit exceeded";
    }
LABEL_1093:
    int v692 = v71;
    os_log_type_t v693 = v72;
LABEL_1094:
    _os_log_impl(&dword_1830D4000, v692, v693, v73, buf, 0xCu);
    goto LABEL_1095;
  }
  if (v3 != 2)
  {
    if (v3 != 3) {
      goto LABEL_1081;
    }
    uint64_t v8 = *((void *)handle + 2);
    if (v8)
    {
      uint64_t v9 = (uint64_t *)(v8 + 488);
      goto LABEL_17;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
    int v83 = (char *)_os_log_send_and_compose_impl();
    v961[0] = 16;
    LOBYTE(aBlock) = 0;
    if (__nwlog_fault(v83, v961, &aBlock))
    {
      if (v961[0] == 17)
      {
        int v84 = __nwlog_obj();
        os_log_type_t v85 = v961[0];
        if (!os_log_type_enabled(v84, (os_log_type_t)v961[0])) {
          goto LABEL_1079;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        uint64_t v86 = "%{public}s called with null handle->http1_connection";
        goto LABEL_1078;
      }
      if (!(_BYTE)aBlock)
      {
        int v84 = __nwlog_obj();
        os_log_type_t v85 = v961[0];
        if (!os_log_type_enabled(v84, (os_log_type_t)v961[0])) {
          goto LABEL_1079;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        uint64_t v86 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_1078;
      }
      int v96 = (char *)__nw_create_backtrace_string();
      int v84 = __nwlog_obj();
      os_log_type_t v85 = v961[0];
      BOOL v97 = os_log_type_enabled(v84, (os_log_type_t)v961[0]);
      if (v96)
      {
        if (v97)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v96;
          _os_log_impl(&dword_1830D4000, v84, v85, "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v96);
        goto LABEL_1079;
      }
      if (v97)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        uint64_t v86 = "%{public}s called with null handle->http1_connection, no backtrace";
LABEL_1078:
        _os_log_impl(&dword_1830D4000, v84, v85, v86, buf, 0xCu);
      }
    }
LABEL_1079:
    if (v83) {
      free(v83);
    }
LABEL_1081:
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
    uint64_t v70 = (char *)_os_log_send_and_compose_impl();
    v961[0] = 16;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v70, v961, &aBlock)) {
      goto LABEL_1095;
    }
    if (v961[0] == 17)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v71 = gLogObj;
      os_log_type_t v72 = v961[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v961[0])) {
        goto LABEL_1095;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
      uint64_t v73 = "%{public}s called with null http1_stream";
      goto LABEL_1093;
    }
    if (!(_BYTE)aBlock)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v71 = gLogObj;
      os_log_type_t v72 = v961[0];
      if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v961[0])) {
        goto LABEL_1095;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
      uint64_t v73 = "%{public}s called with null http1_stream, backtrace limit exceeded";
      goto LABEL_1093;
    }
    uint64_t v690 = (char *)__nw_create_backtrace_string();
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v687 = gLogObj;
    os_log_type_t v688 = v961[0];
    BOOL v691 = os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v961[0]);
    if (v690)
    {
      if (v691)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v690;
        _os_log_impl(&dword_1830D4000, v687, v688, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v690);
      if (!v70) {
        return;
      }
LABEL_1096:
      free(v70);
      return;
    }
    if (v691)
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
      uint64_t v73 = "%{public}s called with null http1_stream, no backtrace";
LABEL_1100:
      int v692 = v687;
      os_log_type_t v693 = v688;
      goto LABEL_1094;
    }
    goto LABEL_1095;
  }
  uint64_t v9 = (uint64_t *)(handle + 8);
LABEL_17:
  uint64_t v10 = *v9;
  if (!*v9) {
    goto LABEL_1081;
  }
  if (!*(void *)(v10 + 248))
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
    uint64_t v70 = (char *)_os_log_send_and_compose_impl();
    v961[0] = 16;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v70, v961, &aBlock)) {
      goto LABEL_1095;
    }
    if (v961[0] == 17)
    {
      int v71 = __nwlog_obj();
      os_log_type_t v72 = v961[0];
      if (!os_log_type_enabled(v71, (os_log_type_t)v961[0])) {
        goto LABEL_1095;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
      uint64_t v73 = "%{public}s called with null http1_stream->protocol_http1";
    }
    else
    {
      if ((_BYTE)aBlock)
      {
        os_log_type_t v78 = (char *)__nw_create_backtrace_string();
        int v71 = __nwlog_obj();
        os_log_type_t v72 = v961[0];
        BOOL v87 = os_log_type_enabled(v71, (os_log_type_t)v961[0]);
        if (!v78)
        {
          if (!v87) {
            goto LABEL_1095;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
          uint64_t v73 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
          goto LABEL_1093;
        }
        if (!v87) {
          goto LABEL_437;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v78;
        BOOL v80 = "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s";
        goto LABEL_436;
      }
      int v71 = __nwlog_obj();
      os_log_type_t v72 = v961[0];
      if (!os_log_type_enabled(v71, (os_log_type_t)v961[0])) {
        goto LABEL_1095;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
      uint64_t v73 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
    }
    goto LABEL_1093;
  }
  __int16 v11 = *(_WORD *)(v10 + 428);
  *(_WORD *)(v10 + 428) = v11 | 0x10;
  uint64_t v12 = *(void *)(v10 + 256);
  uint64_t v938 = v7;
  if (v12)
  {
    uint64_t v13 = *(void *)(v12 + 480);
    if (v13)
    {
      uint64_t v14 = *(void *)(v12 + 488);
      if (v14)
      {
        if ((*(_WORD *)(v14 + 428) & 0x2000) != 0)
        {
          if ((*(_WORD *)(v12 + 872) & 4) == 0)
          {
            if (*(unsigned char *)(v12 + 158)) {
              goto LABEL_217;
            }
            if (!gLogDatapath) {
              goto LABEL_217;
            }
            int v25 = __nwlog_obj();
            if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG)) {
              goto LABEL_217;
            }
            uint64_t v26 = *(void *)(v12 + 488);
            int v27 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
            int v28 = *(_DWORD *)(v12 + 860);
            if (v26) {
              LODWORD(v26) = *(_DWORD *)(v26 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v12 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v27;
            *(_WORD *)&v960[6] = 1024;
            *(_DWORD *)&v960[8] = v28;
            *(_WORD *)&v960[12] = 1024;
            *(_DWORD *)&v960[14] = v26;
            uint64_t v29 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because the message is not complete";
            goto LABEL_1038;
          }
          if ((*(_WORD *)(v12 + 872) & 0x20) == 0)
          {
            if (*(unsigned char *)(v12 + 158)) {
              goto LABEL_217;
            }
            if (!gLogDatapath) {
              goto LABEL_217;
            }
            int v25 = __nwlog_obj();
            if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG)) {
              goto LABEL_217;
            }
            uint64_t v30 = *(void *)(v12 + 488);
            int v31 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
            int v32 = *(_DWORD *)(v12 + 860);
            if (v30) {
              LODWORD(v30) = *(_DWORD *)(v30 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v12 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v31;
            *(_WORD *)&v960[6] = 1024;
            *(_DWORD *)&v960[8] = v32;
            *(_WORD *)&v960[12] = 1024;
            *(_DWORD *)&v960[14] = v30;
            uint64_t v29 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because the outbound message is not complete";
            goto LABEL_1038;
          }
          if ((*(_WORD *)(v12 + 872) & 8) == 0)
          {
            if (*(unsigned char *)(v12 + 158)) {
              goto LABEL_217;
            }
            if (!gLogDatapath) {
              goto LABEL_217;
            }
            int v25 = __nwlog_obj();
            if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG)) {
              goto LABEL_217;
            }
            uint64_t v37 = *(void *)(v12 + 488);
            int v38 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
            int v39 = *(_DWORD *)(v12 + 860);
            if (v37) {
              LODWORD(v37) = *(_DWORD *)(v37 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v12 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v38;
            *(_WORD *)&v960[6] = 1024;
            *(_DWORD *)&v960[8] = v39;
            *(_WORD *)&v960[12] = 1024;
            *(_DWORD *)&v960[14] = v37;
            uint64_t v29 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because keep alive is false";
            goto LABEL_1038;
          }
        }
        else if ((*(unsigned char *)(v12 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            int v15 = __nwlog_obj();
            BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG);
            uint64_t v13 = *(void *)(v12 + 480);
            if (v16)
            {
              int v17 = *(_DWORD *)(v13 + 372);
              int v18 = *(_DWORD *)(v12 + 860);
              uint64_t v19 = *(void *)(v12 + 488);
              if (v19) {
                LODWORD(v19) = *(_DWORD *)(v19 + 424);
              }
              *(_DWORD *)buf = 136447490;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v12 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v959 = (uint64_t)" ";
              *(_WORD *)v960 = 1024;
              *(_DWORD *)&v960[2] = v17;
              *(_WORD *)&v960[6] = 1024;
              *(_DWORD *)&v960[8] = v18;
              *(_WORD *)&v960[12] = 1024;
              *(_DWORD *)&v960[14] = v19;
              _os_log_impl(&dword_1830D4000, v15, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection may be reusable because the current stream didn't use it", buf, 0x32u);
              uint64_t v13 = *(void *)(v12 + 480);
            }
          }
        }
        if ((*(unsigned char *)(v13 + 376) & 8) != 0)
        {
          if (*(unsigned char *)(v12 + 158)) {
            goto LABEL_217;
          }
          if (!gLogDatapath) {
            goto LABEL_217;
          }
          int v25 = __nwlog_obj();
          if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_217;
          }
          uint64_t v102 = *(void *)(v12 + 488);
          int v103 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
          int v104 = *(_DWORD *)(v12 + 860);
          if (v102) {
            LODWORD(v102) = *(_DWORD *)(v102 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v12 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v959 = (uint64_t)" ";
          *(_WORD *)v960 = 1024;
          *(_DWORD *)&v960[2] = v103;
          *(_WORD *)&v960[6] = 1024;
          *(_DWORD *)&v960[8] = v104;
          *(_WORD *)&v960[12] = 1024;
          *(_DWORD *)&v960[14] = v102;
          uint64_t v29 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because pool is closed for new connections";
          goto LABEL_1038;
        }
        __int16 v98 = *(_WORD *)(v12 + 872);
        if ((v98 & 0x200) != 0)
        {
          if (*(unsigned char *)(v12 + 158)) {
            goto LABEL_217;
          }
          if (!gLogDatapath) {
            goto LABEL_217;
          }
          int v25 = __nwlog_obj();
          if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_217;
          }
          uint64_t v670 = *(void *)(v12 + 488);
          int v671 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
          int v672 = *(_DWORD *)(v12 + 860);
          if (v670) {
            LODWORD(v670) = *(_DWORD *)(v670 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v12 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v959 = (uint64_t)" ";
          *(_WORD *)v960 = 1024;
          *(_DWORD *)&v960[2] = v671;
          *(_WORD *)&v960[6] = 1024;
          *(_DWORD *)&v960[8] = v672;
          *(_WORD *)&v960[12] = 1024;
          *(_DWORD *)&v960[14] = v670;
          uint64_t v29 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because it was upgraded";
          goto LABEL_1038;
        }
        if ((v98 & 0x40) == 0)
        {
          if (*(unsigned char *)(v12 + 158)) {
            goto LABEL_217;
          }
          if (!gLogDatapath) {
            goto LABEL_217;
          }
          int v25 = __nwlog_obj();
          if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_217;
          }
          uint64_t v99 = *(void *)(v12 + 488);
          int v100 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
          int v101 = *(_DWORD *)(v12 + 860);
          if (v99) {
            LODWORD(v99) = *(_DWORD *)(v99 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v12 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v959 = (uint64_t)" ";
          *(_WORD *)v960 = 1024;
          *(_DWORD *)&v960[2] = v100;
          *(_WORD *)&v960[6] = 1024;
          *(_DWORD *)&v960[8] = v101;
          *(_WORD *)&v960[12] = 1024;
          *(_DWORD *)&v960[14] = v99;
          uint64_t v29 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because it was never connected";
LABEL_1038:
          _os_log_impl(&dword_1830D4000, v25, OS_LOG_TYPE_DEBUG, v29, buf, 0x32u);
LABEL_217:
          nw_protocol_disconnect(*(void **)(v12 + 32), v12);
          uint64_t v24 = v938;
          goto LABEL_218;
        }
        if ((*(_WORD *)(v12 + 872) & 0x100) != 0)
        {
          if (*(unsigned char *)(v12 + 158)) {
            goto LABEL_217;
          }
          if (!gLogDatapath) {
            goto LABEL_217;
          }
          int v25 = __nwlog_obj();
          if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_217;
          }
          uint64_t v202 = *(void *)(v12 + 488);
          int v203 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
          int v204 = *(_DWORD *)(v12 + 860);
          if (v202) {
            LODWORD(v202) = *(_DWORD *)(v202 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v12 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v959 = (uint64_t)" ";
          *(_WORD *)v960 = 1024;
          *(_DWORD *)&v960[2] = v203;
          *(_WORD *)&v960[6] = 1024;
          *(_DWORD *)&v960[8] = v204;
          *(_WORD *)&v960[12] = 1024;
          *(_DWORD *)&v960[14] = v202;
          uint64_t v29 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because it has been closed";
          goto LABEL_1038;
        }
        if (*(_DWORD *)(v12 + 864) == 4)
        {
          if (*(unsigned char *)(v12 + 158) & 1 | (gLogDatapath == 0)) {
            goto LABEL_217;
          }
          int v25 = __nwlog_obj();
          if (!os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG)) {
            goto LABEL_217;
          }
          uint64_t v178 = *(void *)(v12 + 488);
          int v179 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
          int v180 = *(_DWORD *)(v12 + 860);
          if (v178) {
            LODWORD(v178) = *(_DWORD *)(v178 + 424);
          }
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v12 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v959 = (uint64_t)" ";
          *(_WORD *)v960 = 1024;
          *(_DWORD *)&v960[2] = v179;
          *(_WORD *)&v960[6] = 1024;
          *(_DWORD *)&v960[8] = v180;
          *(_WORD *)&v960[12] = 1024;
          *(_DWORD *)&v960[14] = v178;
          uint64_t v29 = "%{public}s %{public}s%s<i%u:c%u:s%u> connection cannot be reused because input has finished from below";
          goto LABEL_1038;
        }
        if (!(*(unsigned char *)(v12 + 158) & 1 | (gLogDatapath == 0)))
        {
          v817 = __nwlog_obj();
          if (os_log_type_enabled(v817, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v818 = *(void *)(v12 + 488);
            int v819 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
            int v820 = *(_DWORD *)(v12 + 860);
            if (v818) {
              LODWORD(v818) = *(_DWORD *)(v818 + 424);
            }
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_can_be_reused";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v12 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v819;
            *(_WORD *)&v960[6] = 1024;
            *(_DWORD *)&v960[8] = v820;
            *(_WORD *)&v960[12] = 1024;
            *(_DWORD *)&v960[14] = v818;
            _os_log_impl(&dword_1830D4000, v817, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection can be reused", buf, 0x32u);
          }
        }
        uint64_t v259 = *(void *)(v12 + 488);
        if (v259)
        {
          if (*(void *)(v259 + 248))
          {
            uint64_t v260 = *(void *)(v259 + 256);
            if (v260)
            {
              if (*(void *)(v260 + 488) == v259)
              {
                if ((*(unsigned char *)(v259 + 158) & 1) == 0)
                {
                  BOOL v330 = __nwlog_obj();
                  if (os_log_type_enabled(v330, OS_LOG_TYPE_INFO))
                  {
                    uint64_t v331 = *(void *)(v259 + 256);
                    int v332 = *(_DWORD *)(*(void *)(v259 + 248) + 372);
                    if (v331) {
                      LODWORD(v331) = *(_DWORD *)(v331 + 860);
                    }
                    int v333 = *(_DWORD *)(v259 + 424);
                    *(_DWORD *)buf = 136448002;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v259 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v959 = (uint64_t)" ";
                    *(_WORD *)v960 = 1024;
                    *(_DWORD *)&v960[2] = v332;
                    *(_WORD *)&v960[6] = 1024;
                    *(_DWORD *)&v960[8] = v331;
                    *(_WORD *)&v960[12] = 1024;
                    *(_DWORD *)&v960[14] = v333;
                    *(_WORD *)&v960[18] = 2048;
                    *(void *)&v960[20] = v259;
                    *(_WORD *)&v960[28] = 2048;
                    *(void *)&v960[30] = v260;
                    _os_log_impl(&dword_1830D4000, v330, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) finished with connection %p", buf, 0x46u);
                  }
                }
                if (gLogDatapath)
                {
                  BOOL v883 = __nwlog_obj();
                  if (os_log_type_enabled(v883, OS_LOG_TYPE_DEBUG))
                  {
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_protocol_finalize_temp_frame_array";
                    _os_log_impl(&dword_1830D4000, v883, OS_LOG_TYPE_DEBUG, "%{public}s called", buf, 0xCu);
                  }
                }
                *(void *)buf = MEMORY[0x1E4F143A8];
                *(void *)&buf[8] = 0x40000000;
                *(void *)&buf[16] = ___ZL37nw_protocol_finalize_temp_frame_arrayP16nw_frame_array_sb_block_invoke_40118;
                uint64_t v959 = (uint64_t)&__block_descriptor_tmp_58_40119;
                *(void *)v960 = v260 + 632;
                v960[8] = 0;
                uint64_t v334 = *(void *)(v260 + 632);
                do
                {
                  if (!v334) {
                    break;
                  }
                  uint64_t v335 = *(void *)(v334 + 32);
                  char v336 = (*(uint64_t (**)(unsigned char *))&buf[16])(buf);
                  uint64_t v334 = v335;
                }
                while ((v336 & 1) != 0);
                *(void *)(v259 + 256) = 0;
                *(void *)(v260 + 488) = 0;
                nw_protocol_set_output_handler(v259, 0);
                nw_protocol_set_input_handler(v260, 0);
                uint64_t v337 = *(void *)(v12 + 480);
                if (v337) {
                  goto LABEL_696;
                }
                goto LABEL_562;
              }
              __nwlog_obj();
              uint64_t v261 = *(void *)(v260 + 488);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v260;
              *(_WORD *)&buf[22] = 2048;
              uint64_t v959 = v259;
              *(_WORD *)v960 = 2048;
              *(void *)&v960[2] = v261;
              BOOL v262 = (char *)_os_log_send_and_compose_impl();
              v961[0] = 16;
              LOBYTE(aBlock) = 0;
              if (!__nwlog_fault(v262, v961, &aBlock)) {
                goto LABEL_693;
              }
              if (v961[0] == 17)
              {
                nw_parameters_t v263 = __nwlog_obj();
                os_log_type_t v264 = v961[0];
                if (!os_log_type_enabled(v263, (os_log_type_t)v961[0])) {
                  goto LABEL_693;
                }
                uint64_t v265 = *(void *)(v260 + 488);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v260;
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = v259;
                *(_WORD *)v960 = 2048;
                *(void *)&v960[2] = v265;
                char v266 = "%{public}s Connection %p does not already have stream %p, has %p";
              }
              else
              {
                if ((_BYTE)aBlock)
                {
                  int v344 = (char *)__nw_create_backtrace_string();
                  os_log_type_t v345 = __nwlog_obj();
                  os_log_type_t v346 = v961[0];
                  BOOL v347 = os_log_type_enabled(v345, (os_log_type_t)v961[0]);
                  if (v344)
                  {
                    if (v347)
                    {
                      uint64_t v348 = *(void *)(v260 + 488);
                      *(_DWORD *)buf = 136447234;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v260;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v959 = v259;
                      *(_WORD *)v960 = 2048;
                      *(void *)&v960[2] = v348;
                      *(_WORD *)&v960[10] = 2082;
                      *(void *)&v960[12] = v344;
                      _os_log_impl(&dword_1830D4000, v345, v346, "%{public}s Connection %p does not already have stream %p, has %p, dumping backtrace:%{public}s", buf, 0x34u);
                    }
                    free(v344);
                  }
                  else if (v347)
                  {
                    uint64_t v446 = *(void *)(v260 + 488);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = v260;
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v959 = v259;
                    *(_WORD *)v960 = 2048;
                    *(void *)&v960[2] = v446;
                    char v266 = "%{public}s Connection %p does not already have stream %p, has %p, no backtrace";
                    int v428 = v345;
                    os_log_type_t v429 = v346;
                    goto LABEL_692;
                  }
LABEL_693:
                  if (v262) {
                    free(v262);
                  }
                  uint64_t v337 = *(void *)(v12 + 480);
                  if (v337) {
                    goto LABEL_696;
                  }
                  goto LABEL_562;
                }
                nw_parameters_t v263 = __nwlog_obj();
                os_log_type_t v264 = v961[0];
                if (!os_log_type_enabled(v263, (os_log_type_t)v961[0])) {
                  goto LABEL_693;
                }
                uint64_t v427 = *(void *)(v260 + 488);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v260;
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = v259;
                *(_WORD *)v960 = 2048;
                *(void *)&v960[2] = v427;
                char v266 = "%{public}s Connection %p does not already have stream %p, has %p, backtrace limit exceeded";
              }
              int v428 = v263;
              os_log_type_t v429 = v264;
LABEL_692:
              _os_log_impl(&dword_1830D4000, v428, v429, v266, buf, 0x2Au);
              goto LABEL_693;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
            v813 = (char *)_os_log_send_and_compose_impl();
            v961[0] = 16;
            LOBYTE(aBlock) = 0;
            if (__nwlog_fault(v813, v961, &aBlock))
            {
              if (v961[0] == 17)
              {
                uint64_t v814 = __nwlog_obj();
                os_log_type_t v815 = v961[0];
                if (!os_log_type_enabled(v814, (os_log_type_t)v961[0])) {
                  goto LABEL_1587;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                int v816 = "%{public}s called with null http1_connection";
                goto LABEL_1586;
              }
              if (!(_BYTE)aBlock)
              {
                uint64_t v814 = __nwlog_obj();
                os_log_type_t v815 = v961[0];
                if (!os_log_type_enabled(v814, (os_log_type_t)v961[0])) {
                  goto LABEL_1587;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                int v816 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                goto LABEL_1586;
              }
              int v863 = (char *)__nw_create_backtrace_string();
              uint64_t v814 = __nwlog_obj();
              os_log_type_t v815 = v961[0];
              BOOL v866 = os_log_type_enabled(v814, (os_log_type_t)v961[0]);
              if (!v863)
              {
                if (!v866) {
                  goto LABEL_1587;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                int v816 = "%{public}s called with null http1_connection, no backtrace";
                goto LABEL_1586;
              }
              if (v866)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v863;
                v865 = "%{public}s called with null http1_connection, dumping backtrace:%{public}s";
                goto LABEL_1362;
              }
              goto LABEL_1363;
            }
LABEL_1587:
            if (!v813) {
              goto LABEL_1589;
            }
            goto LABEL_1588;
          }
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
          v813 = (char *)_os_log_send_and_compose_impl();
          v961[0] = 16;
          LOBYTE(aBlock) = 0;
          if (!__nwlog_fault(v813, v961, &aBlock)) {
            goto LABEL_1587;
          }
          if (v961[0] != 17)
          {
            if (!(_BYTE)aBlock)
            {
              uint64_t v814 = __nwlog_obj();
              os_log_type_t v815 = v961[0];
              if (!os_log_type_enabled(v814, (os_log_type_t)v961[0])) {
                goto LABEL_1587;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              int v816 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
              goto LABEL_1586;
            }
            int v863 = (char *)__nw_create_backtrace_string();
            uint64_t v814 = __nwlog_obj();
            os_log_type_t v815 = v961[0];
            BOOL v864 = os_log_type_enabled(v814, (os_log_type_t)v961[0]);
            if (!v863)
            {
              if (!v864) {
                goto LABEL_1587;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              int v816 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
              goto LABEL_1586;
            }
            if (v864)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v863;
              v865 = "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s";
LABEL_1362:
              _os_log_impl(&dword_1830D4000, v814, v815, v865, buf, 0x16u);
            }
LABEL_1363:
            free(v863);
            if (!v813)
            {
LABEL_1589:
              uint64_t v337 = *(void *)(v12 + 480);
              if (v337)
              {
LABEL_696:
                int v430 = (_WORD *)(v12 + 872);
                if ((*(unsigned char *)(v12 + 158) & 1) == 0)
                {
                  if (gLogDatapath)
                  {
                    v821 = __nwlog_obj();
                    if (os_log_type_enabled(v821, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v822 = *(void *)(v12 + 488);
                      int v823 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                      int v824 = *(_DWORD *)(v12 + 860);
                      if (v822) {
                        LODWORD(v822) = *(_DWORD *)(v822 + 424);
                      }
                      *(_DWORD *)buf = 136447746;
                      *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v12 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      uint64_t v959 = (uint64_t)" ";
                      *(_WORD *)v960 = 1024;
                      *(_DWORD *)&v960[2] = v823;
                      *(_WORD *)&v960[6] = 1024;
                      *(_DWORD *)&v960[8] = v824;
                      *(_WORD *)&v960[12] = 1024;
                      *(_DWORD *)&v960[14] = v822;
                      *(_WORD *)&v960[18] = 2048;
                      *(void *)&v960[20] = v12;
                      _os_log_impl(&dword_1830D4000, v821, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for connection (%p)", buf, 0x3Cu);
                    }
                  }
                }
                if ((((unsigned __int16)*v430 | (*(unsigned __int8 *)(v12 + 874) << 16)) & 0x80000) == 0)
                {
                  BOOL v432 = (uint64_t *)(v337 + 208);
                  uint64_t v431 = *(void *)(v337 + 208);
                  *(void *)(v12 + 592) = v431;
                  if (v431) {
                    uint64_t v433 = (void *)(v431 + 600);
                  }
                  else {
                    uint64_t v433 = (void *)(v337 + 216);
                  }
                  void *v433 = v12 + 592;
                  uint64_t *v432 = v12;
                  *(void *)(v12 + 600) = v432;
                  uint64_t v434 = *(unsigned int *)(v337 + 340) + 1;
                  uint64_t v435 = v434 << 31 >> 31;
                  *(_DWORD *)(v337 + 340) = v434;
                  if (v435 == v434 && (v435 & 0x8000000000000000) == 0) {
                    goto LABEL_773;
                  }
                  __nwlog_obj();
                  uint64_t v436 = *(unsigned int *)(v337 + 340);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->idle_connections_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v436;
                  v437 = (char *)_os_log_send_and_compose_impl();
                  v961[0] = 16;
                  LOBYTE(aBlock) = 0;
                  if (__nwlog_fault(v437, v961, &aBlock))
                  {
                    if (v961[0] == 17)
                    {
                      os_log_type_t v438 = __nwlog_obj();
                      os_log_type_t v439 = v961[0];
                      if (os_log_type_enabled(v438, (os_log_type_t)v961[0]))
                      {
                        uint64_t v440 = *(unsigned int *)(v337 + 340);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->idle_connections_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v959 = 1;
                        *(_WORD *)v960 = 2048;
                        *(void *)&v960[2] = v440;
                        int v441 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_769:
                        _os_log_impl(&dword_1830D4000, v438, v439, v441, buf, 0x2Au);
                      }
                    }
                    else if ((_BYTE)aBlock)
                    {
                      os_log_type_t v443 = (char *)__nw_create_backtrace_string();
                      os_log_type_t v438 = __nwlog_obj();
                      os_log_type_t v439 = v961[0];
                      BOOL v444 = os_log_type_enabled(v438, (os_log_type_t)v961[0]);
                      if (v443)
                      {
                        if (v444)
                        {
                          uint64_t v445 = *(unsigned int *)(v337 + 340);
                          *(_DWORD *)buf = 136447234;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->idle_connections_count";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v959 = 1;
                          *(_WORD *)v960 = 2048;
                          *(void *)&v960[2] = v445;
                          *(_WORD *)&v960[10] = 2082;
                          *(void *)&v960[12] = v443;
                          _os_log_impl(&dword_1830D4000, v438, v439, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                        }
                        free(v443);
                        goto LABEL_770;
                      }
                      if (v444)
                      {
                        uint64_t v464 = *(unsigned int *)(v337 + 340);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->idle_connections_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v959 = 1;
                        *(_WORD *)v960 = 2048;
                        *(void *)&v960[2] = v464;
                        int v441 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                        goto LABEL_769;
                      }
                    }
                    else
                    {
                      os_log_type_t v438 = __nwlog_obj();
                      os_log_type_t v439 = v961[0];
                      if (os_log_type_enabled(v438, (os_log_type_t)v961[0]))
                      {
                        uint64_t v451 = *(unsigned int *)(v337 + 340);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->idle_connections_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v959 = 1;
                        *(_WORD *)v960 = 2048;
                        *(void *)&v960[2] = v451;
                        int v441 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                        goto LABEL_769;
                      }
                    }
                  }
LABEL_770:
                  if (v437) {
                    free(v437);
                  }
                  *(_DWORD *)(v337 + 340) = -1;
LABEL_773:
                  int v465 = (*(unsigned __int16 *)(v12 + 872) | (*(unsigned __int8 *)(v12 + 874) << 16)) & 0xF7FFFA | 0x80000;
                  *v430 &= 0xFFFAu;
                  *(unsigned char *)(v12 + 874) = BYTE2(v465);
                  long long v466 = *(void **)(v12 + 800);
                  if (v466)
                  {
                    free(v466);
                    *(void *)(v12 + 800) = 0;
                  }
                  *(_DWORD *)(v12 + 840) = 0;
                  long long v467 = *(void **)(v12 + 808);
                  if (v467)
                  {
                    free(v467);
                    *(void *)(v12 + 808) = 0;
                  }
                  *(_DWORD *)(v12 + 844) = 0;
                  long long v468 = *(void **)(v12 + 816);
                  if (v468)
                  {
                    free(v468);
                    *(void *)(v12 + 816) = 0;
                  }
                  *(_DWORD *)(v12 + 848) = 0;
                  int v469 = *(void **)(v12 + 824);
                  if (v469)
                  {
                    free(v469);
                    *(void *)(v12 + 824) = 0;
                  }
                  *(_DWORD *)(v12 + 852) = 0;
                  uint64_t v470 = *(void **)(v12 + 832);
                  if (v470)
                  {
                    free(v470);
                    *(void *)(v12 + 832) = 0;
                  }
                  *(_DWORD *)(v12 + 856) = 0;
                  int v471 = (unsigned __int16)*v430;
                  int v472 = v471 | (*(unsigned __int8 *)(v12 + 874) << 16);
                  if ((v471 & 0x10) != 0)
                  {
                    if (*(_DWORD *)(v12 + 224) == 21) {
                      *(_DWORD *)(v12 + 224) = 0;
                    }
                    unsigned int v481 = v472 & 0xFFFFFFEF;
                    _WORD *v430 = v481;
                    *(unsigned char *)(v12 + 874) = BYTE2(v481);
                    if ((*(unsigned char *)(v12 + 158) & 1) == 0)
                    {
                      if (gLogDatapath)
                      {
                        int v476 = __nwlog_obj();
                        if (os_log_type_enabled(v476, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v885 = *(void *)(v12 + 488);
                          int v886 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                          int v887 = *(_DWORD *)(v12 + 860);
                          if (v885) {
                            LODWORD(v885) = *(_DWORD *)(v885 + 424);
                          }
                          *(_DWORD *)buf = 136447490;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_reset_for_new_message";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v12 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v959 = (uint64_t)" ";
                          *(_WORD *)v960 = 1024;
                          *(_DWORD *)&v960[2] = v886;
                          *(_WORD *)&v960[6] = 1024;
                          *(_DWORD *)&v960[8] = v887;
                          *(_WORD *)&v960[12] = 1024;
                          *(_DWORD *)&v960[14] = v885;
                          uint64_t v480 = "%{public}s %{public}s%s<i%u:c%u:s%u> Unpausing parser, input for next stream available";
                          goto LABEL_1470;
                        }
                      }
                    }
                  }
                  else
                  {
                    *(_OWORD *)(v12 + 200) = 0u;
                    char v473 = *(unsigned char *)(v12 + 272);
                    uint64_t v474 = *(void *)(v12 + 248);
                    __int16 v475 = *(_WORD *)(v12 + 278);
                    *(_OWORD *)(v12 + 248) = 0u;
                    *(_OWORD *)(v12 + 264) = 0u;
                    *(_OWORD *)(v12 + 216) = 0u;
                    *(_OWORD *)(v12 + 232) = 0u;
                    *(void *)(v12 + 280) = 0;
                    *(unsigned char *)(v12 + 272) = v473;
                    *(void *)(v12 + 248) = v474;
                    *(void *)(v12 + 256) = 238;
                    *(_WORD *)(v12 + 278) = v475;
                    if ((*(unsigned char *)(v12 + 158) & 1) == 0)
                    {
                      if (gLogDatapath)
                      {
                        int v476 = __nwlog_obj();
                        if (os_log_type_enabled(v476, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v477 = *(void *)(v12 + 488);
                          int v478 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                          int v479 = *(_DWORD *)(v12 + 860);
                          if (v477) {
                            LODWORD(v477) = *(_DWORD *)(v477 + 424);
                          }
                          *(_DWORD *)buf = 136447490;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_reset_for_new_message";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v12 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v959 = (uint64_t)" ";
                          *(_WORD *)v960 = 1024;
                          *(_DWORD *)&v960[2] = v478;
                          *(_WORD *)&v960[6] = 1024;
                          *(_DWORD *)&v960[8] = v479;
                          *(_WORD *)&v960[12] = 1024;
                          *(_DWORD *)&v960[14] = v477;
                          uint64_t v480 = "%{public}s %{public}s%s<i%u:c%u:s%u> Resetting parser, no current available input for next stream";
LABEL_1470:
                          _os_log_impl(&dword_1830D4000, v476, OS_LOG_TYPE_DEBUG, v480, buf, 0x32u);
                        }
                      }
                    }
                  }
                  uint64_t v482 = *(void *)(v12 + 784);
                  if (v482) {
                    nw_queue_cancel_source(v482);
                  }
                  uint64_t v483 = *(void **)(v12 + 192);
                  *(void *)v961 = MEMORY[0x1E4F143A8];
                  *(void *)&v961[8] = 0x40000000;
                  *(void *)&v961[16] = ___ZL28nw_http1_add_idle_connectionP17nw_protocol_http1P19nw_http1_connection_block_invoke;
                  os_log_type_t v962 = (uint64_t (*)(uint64_t, uint64_t))&__block_descriptor_tmp_91_41331;
                  v963 = (void (*)(uint64_t))v12;
                  v964 = v483;
                  uint64_t v965 = v337;
                  BOOL source = nw_queue_context_create_source(0, 2, 3, 0, v961, 0);
                  *(void *)(v12 + 784) = source;
                  dispatch_time_t v485 = dispatch_time(0x8000000000000000, 1000000 * (void)v483);
                  nw_queue_set_timer_values(source, v485, 0xFFFFFFFFFFFFFFFFLL, 1000 * (void)v483);
                  nw_queue_activate_source(*(void *)(v12 + 784));
                  if ((*(unsigned char *)(v12 + 158) & 1) == 0)
                  {
                    if (gLogDatapath)
                    {
                      uint64_t v486 = __nwlog_obj();
                      if (os_log_type_enabled(v486, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v487 = *(void *)(v12 + 488);
                        int v488 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                        int v489 = *(_DWORD *)(v12 + 860);
                        if (v487) {
                          LODWORD(v487) = *(_DWORD *)(v487 + 424);
                        }
                        int v490 = *(_DWORD *)(v337 + 340);
                        *(_DWORD *)buf = 136448258;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v12 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v959 = (uint64_t)" ";
                        *(_WORD *)v960 = 1024;
                        *(_DWORD *)&v960[2] = v488;
                        *(_WORD *)&v960[6] = 1024;
                        *(_DWORD *)&v960[8] = v489;
                        *(_WORD *)&v960[12] = 1024;
                        *(_DWORD *)&v960[14] = v487;
                        *(_WORD *)&v960[18] = 2048;
                        *(void *)&v960[20] = v12;
                        *(_WORD *)&v960[28] = 2048;
                        *(void *)&v960[30] = v483;
                        *(_WORD *)&v960[38] = 1024;
                        *(_DWORD *)&v960[40] = v490;
                        os_log_type_t v63 = "%{public}s %{public}s%s<i%u:c%u:s%u> added idle connection %p and started destroy timer fo"
                              "r %lldms, now have %u idle connections";
                        BOOL v64 = v486;
                        uint32_t v65 = 76;
LABEL_103:
                        _os_log_impl(&dword_1830D4000, v64, OS_LOG_TYPE_DEBUG, v63, buf, v65);
                        goto LABEL_739;
                      }
                    }
                  }
                  goto LABEL_739;
                }
                __nwlog_obj();
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v12;
                uint64_t v33 = (char *)_os_log_send_and_compose_impl();
                v961[0] = 16;
                LOBYTE(aBlock) = 0;
                if (!__nwlog_fault(v33, v961, &aBlock)) {
                  goto LABEL_737;
                }
                if (v961[0] == 17)
                {
                  char v34 = __nwlog_obj();
                  os_log_type_t v35 = v961[0];
                  if (!os_log_type_enabled(v34, (os_log_type_t)v961[0])) {
                    goto LABEL_737;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v12;
                  int v36 = "%{public}s connection %p already in idle list, cannot add twice";
                  goto LABEL_735;
                }
                if (!(_BYTE)aBlock)
                {
                  char v34 = __nwlog_obj();
                  os_log_type_t v35 = v961[0];
                  if (!os_log_type_enabled(v34, (os_log_type_t)v961[0])) {
                    goto LABEL_737;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v12;
                  int v36 = "%{public}s connection %p already in idle list, cannot add twice, backtrace limit exceeded";
                  goto LABEL_735;
                }
                __int16 v42 = (char *)__nw_create_backtrace_string();
                char v34 = __nwlog_obj();
                os_log_type_t v35 = v961[0];
                BOOL v442 = os_log_type_enabled(v34, (os_log_type_t)v961[0]);
                if (!v42)
                {
                  if (!v442) {
                    goto LABEL_737;
                  }
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v12;
                  int v36 = "%{public}s connection %p already in idle list, cannot add twice, no backtrace";
                  goto LABEL_735;
                }
                if (!v442) {
                  goto LABEL_72;
                }
                *(_DWORD *)buf = 136446722;
                *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v12;
                *(_WORD *)&buf[22] = 2082;
                uint64_t v959 = (uint64_t)v42;
                char v44 = "%{public}s connection %p already in idle list, cannot add twice, dumping backtrace:%{public}s";
                goto LABEL_71;
              }
LABEL_562:
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
              os_log_type_t v338 = (char *)_os_log_send_and_compose_impl();
              v961[0] = 16;
              LOBYTE(aBlock) = 0;
              if (!__nwlog_fault(v338, v961, &aBlock)) {
                goto LABEL_1577;
              }
              if (v961[0] == 17)
              {
                int v339 = __nwlog_obj();
                os_log_type_t v340 = v961[0];
                if (!os_log_type_enabled(v339, (os_log_type_t)v961[0])) {
                  goto LABEL_1577;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                uint64_t v341 = "%{public}s called with null http1";
              }
              else if ((_BYTE)aBlock)
              {
                os_log_type_t v859 = (char *)__nw_create_backtrace_string();
                int v339 = __nwlog_obj();
                os_log_type_t v340 = v961[0];
                BOOL v860 = os_log_type_enabled(v339, (os_log_type_t)v961[0]);
                if (v859)
                {
                  if (v860)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v859;
                    _os_log_impl(&dword_1830D4000, v339, v340, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v859);
                  goto LABEL_1577;
                }
                if (!v860)
                {
LABEL_1577:
                  if (v338) {
                    free(v338);
                  }
                  goto LABEL_739;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                uint64_t v341 = "%{public}s called with null http1, no backtrace";
              }
              else
              {
                int v339 = __nwlog_obj();
                os_log_type_t v340 = v961[0];
                if (!os_log_type_enabled(v339, (os_log_type_t)v961[0])) {
                  goto LABEL_1577;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_add_idle_connection";
                uint64_t v341 = "%{public}s called with null http1, backtrace limit exceeded";
              }
              _os_log_impl(&dword_1830D4000, v339, v340, v341, buf, 0xCu);
              goto LABEL_1577;
            }
LABEL_1588:
            free(v813);
            goto LABEL_1589;
          }
          uint64_t v814 = __nwlog_obj();
          os_log_type_t v815 = v961[0];
          if (!os_log_type_enabled(v814, (os_log_type_t)v961[0])) {
            goto LABEL_1587;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
          int v816 = "%{public}s called with null http1_stream->protocol_http1";
        }
        else
        {
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
          v813 = (char *)_os_log_send_and_compose_impl();
          v961[0] = 16;
          LOBYTE(aBlock) = 0;
          if (!__nwlog_fault(v813, v961, &aBlock)) {
            goto LABEL_1587;
          }
          if (v961[0] != 17)
          {
            if (!(_BYTE)aBlock)
            {
              uint64_t v814 = __nwlog_obj();
              os_log_type_t v815 = v961[0];
              if (!os_log_type_enabled(v814, (os_log_type_t)v961[0])) {
                goto LABEL_1587;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              int v816 = "%{public}s called with null http1_stream, backtrace limit exceeded";
              goto LABEL_1586;
            }
            v861 = (char *)__nw_create_backtrace_string();
            uint64_t v814 = __nwlog_obj();
            os_log_type_t v815 = v961[0];
            BOOL v862 = os_log_type_enabled(v814, (os_log_type_t)v961[0]);
            if (!v861)
            {
              if (!v862) {
                goto LABEL_1587;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              int v816 = "%{public}s called with null http1_stream, no backtrace";
              goto LABEL_1586;
            }
            if (v862)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v861;
              _os_log_impl(&dword_1830D4000, v814, v815, "%{public}s called with null http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v861);
            goto LABEL_1587;
          }
          uint64_t v814 = __nwlog_obj();
          os_log_type_t v815 = v961[0];
          if (!os_log_type_enabled(v814, (os_log_type_t)v961[0])) {
            goto LABEL_1587;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_disassociate_from_connection";
          int v816 = "%{public}s called with null http1_stream";
        }
LABEL_1586:
        _os_log_impl(&dword_1830D4000, v814, v815, v816, buf, 0xCu);
        goto LABEL_1587;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_disconnect";
      uint64_t v33 = (char *)_os_log_send_and_compose_impl();
      v961[0] = 16;
      LOBYTE(aBlock) = 0;
      if (!__nwlog_fault(v33, v961, &aBlock)) {
        goto LABEL_737;
      }
      if (v961[0] == 17)
      {
        uint64_t v81 = __nwlog_obj();
        os_log_type_t v82 = v961[0];
        if (!os_log_type_enabled(v81, (os_log_type_t)v961[0])) {
          goto LABEL_737;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_disconnect";
        int v36 = "%{public}s called with null http1_connection->current_stream";
        goto LABEL_1043;
      }
      if ((_BYTE)aBlock)
      {
        uint64_t v90 = (char *)__nw_create_backtrace_string();
        uint64_t v81 = __nwlog_obj();
        os_log_type_t v82 = v961[0];
        BOOL v91 = os_log_type_enabled(v81, (os_log_type_t)v961[0]);
        if (v90)
        {
          if (v91)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_disconnect";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v90;
            _os_log_impl(&dword_1830D4000, v81, v82, "%{public}s called with null http1_connection->current_stream, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v90);
          if (!v33) {
            goto LABEL_739;
          }
LABEL_738:
          free(v33);
          goto LABEL_739;
        }
        if (v91)
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_disconnect";
          int v36 = "%{public}s called with null http1_connection->current_stream, no backtrace";
          goto LABEL_1043;
        }
LABEL_737:
        if (!v33) {
          goto LABEL_739;
        }
        goto LABEL_738;
      }
      uint64_t v81 = __nwlog_obj();
      os_log_type_t v82 = v961[0];
      if (!os_log_type_enabled(v81, (os_log_type_t)v961[0])) {
        goto LABEL_737;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_disconnect";
      int v36 = "%{public}s called with null http1_connection->current_stream, backtrace limit exceeded";
    }
    else
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_disconnect";
      uint64_t v33 = (char *)_os_log_send_and_compose_impl();
      v961[0] = 16;
      LOBYTE(aBlock) = 0;
      if (!__nwlog_fault(v33, v961, &aBlock)) {
        goto LABEL_737;
      }
      if (v961[0] == 17)
      {
        uint64_t v81 = __nwlog_obj();
        os_log_type_t v82 = v961[0];
        if (!os_log_type_enabled(v81, (os_log_type_t)v961[0])) {
          goto LABEL_737;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_disconnect";
        int v36 = "%{public}s called with null http1_connection->protocol_http1";
        goto LABEL_1043;
      }
      if ((_BYTE)aBlock)
      {
        int v88 = (char *)__nw_create_backtrace_string();
        uint64_t v81 = __nwlog_obj();
        os_log_type_t v82 = v961[0];
        BOOL v89 = os_log_type_enabled(v81, (os_log_type_t)v961[0]);
        if (v88)
        {
          if (v89)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_disconnect";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v88;
            _os_log_impl(&dword_1830D4000, v81, v82, "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v88);
          goto LABEL_737;
        }
        if (!v89) {
          goto LABEL_737;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_disconnect";
        int v36 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
      }
      else
      {
        uint64_t v81 = __nwlog_obj();
        os_log_type_t v82 = v961[0];
        if (!os_log_type_enabled(v81, (os_log_type_t)v961[0])) {
          goto LABEL_737;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_disconnect";
        int v36 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
      }
    }
LABEL_1043:
    uint64_t v448 = v81;
    os_log_type_t v449 = v82;
    uint32_t v450 = 12;
    goto LABEL_736;
  }
  if (!*(void *)(v10 + 32))
  {
    if ((v11 & 0x1000) == 0) {
      goto LABEL_739;
    }
    if ((*(unsigned char *)(v7 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        uint64_t v673 = __nwlog_obj();
        BOOL v674 = os_log_type_enabled(v673, OS_LOG_TYPE_DEBUG);
        uint64_t v7 = v938;
        if (v674)
        {
          int v675 = *(_DWORD *)(v938 + 372);
          int v676 = *(_DWORD *)(v10 + 424);
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v938 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v959 = (uint64_t)" ";
          *(_WORD *)v960 = 1024;
          *(_DWORD *)&v960[2] = v675;
          *(_WORD *)&v960[6] = 1024;
          *(_DWORD *)&v960[8] = v676;
          *(_WORD *)&v960[12] = 2048;
          *(void *)&v960[14] = v10;
          _os_log_impl(&dword_1830D4000, v673, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream %u (%p)", buf, 0x36u);
          uint64_t v7 = v938;
        }
      }
    }
    if ((*(_WORD *)(v10 + 428) & 0x1000) == 0)
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v10;
      uint64_t v33 = (char *)_os_log_send_and_compose_impl();
      v961[0] = 16;
      LOBYTE(aBlock) = 0;
      if (!__nwlog_fault(v33, v961, &aBlock)) {
        goto LABEL_737;
      }
      if (v961[0] == 17)
      {
        char v34 = __nwlog_obj();
        os_log_type_t v35 = v961[0];
        if (!os_log_type_enabled(v34, (os_log_type_t)v961[0])) {
          goto LABEL_737;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v10;
        int v36 = "%{public}s stream %p not in pending list, cannot remove";
      }
      else if ((_BYTE)aBlock)
      {
        __int16 v42 = (char *)__nw_create_backtrace_string();
        char v34 = __nwlog_obj();
        os_log_type_t v35 = v961[0];
        BOOL v43 = os_log_type_enabled(v34, (os_log_type_t)v961[0]);
        if (v42)
        {
          if (!v43) {
            goto LABEL_72;
          }
          *(_DWORD *)buf = 136446722;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v10;
          *(_WORD *)&buf[22] = 2082;
          uint64_t v959 = (uint64_t)v42;
          char v44 = "%{public}s stream %p not in pending list, cannot remove, dumping backtrace:%{public}s";
LABEL_71:
          _os_log_impl(&dword_1830D4000, v34, v35, v44, buf, 0x20u);
LABEL_72:
          free(v42);
          if (!v33) {
            goto LABEL_739;
          }
          goto LABEL_738;
        }
        if (!v43) {
          goto LABEL_737;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v10;
        int v36 = "%{public}s stream %p not in pending list, cannot remove, no backtrace";
      }
      else
      {
        char v34 = __nwlog_obj();
        os_log_type_t v35 = v961[0];
        if (!os_log_type_enabled(v34, (os_log_type_t)v961[0])) {
          goto LABEL_737;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v10;
        int v36 = "%{public}s stream %p not in pending list, cannot remove, backtrace limit exceeded";
      }
LABEL_735:
      uint64_t v448 = v34;
      os_log_type_t v449 = v35;
      uint32_t v450 = 22;
LABEL_736:
      _os_log_impl(&dword_1830D4000, v448, v449, v36, buf, v450);
      goto LABEL_737;
    }
    uint64_t v40 = *(void *)(v10 + 296);
    os_log_type_t v41 = *(void **)(v10 + 304);
    if (v40)
    {
      *(void *)(v40 + 304) = v41;
      os_log_type_t v41 = *(void **)(v10 + 304);
    }
    else
    {
      *(void *)(v7 + 256) = v41;
    }
    *os_log_type_t v41 = v40;
    *(void *)(v10 + 296) = 0;
    *(void *)(v10 + 304) = 0;
    int v45 = *(_DWORD *)(v7 + 348);
    *(_DWORD *)(v7 + 348) = v45 - 1;
    if (v45)
    {
LABEL_97:
      *(_WORD *)(v10 + 428) &= ~0x1000u;
      if ((*(unsigned char *)(v10 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          int v58 = __nwlog_obj();
          if (os_log_type_enabled(v58, OS_LOG_TYPE_DEBUG))
          {
            uint64_t v59 = *(void *)(v10 + 256);
            int v60 = *(_DWORD *)(*(void *)(v10 + 248) + 372);
            if (v59) {
              LODWORD(v59) = *(_DWORD *)(v59 + 860);
            }
            int v61 = *(_DWORD *)(v10 + 424);
            int v62 = *(_DWORD *)(v938 + 348);
            *(_DWORD *)buf = 136448258;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v10 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v60;
            *(_WORD *)&v960[6] = 1024;
            *(_DWORD *)&v960[8] = v59;
            *(_WORD *)&v960[12] = 1024;
            *(_DWORD *)&v960[14] = v61;
            *(_WORD *)&v960[18] = 1024;
            *(_DWORD *)&v960[20] = v61;
            *(_WORD *)&v960[24] = 2048;
            *(void *)&v960[26] = v10;
            *(_WORD *)&v960[34] = 1024;
            *(_DWORD *)&v960[36] = v62;
            os_log_type_t v63 = "%{public}s %{public}s%s<i%u:c%u:s%u> removed pending stream %u (%p), now have %u pending streams";
            BOOL v64 = v58;
            uint32_t v65 = 72;
            goto LABEL_103;
          }
        }
      }
LABEL_739:
      nw_protocol_disconnected(*(void **)(v10 + 48), v10);
      uint64_t v24 = v938;
      if (!v12) {
        goto LABEL_220;
      }
LABEL_218:
      if ((*(unsigned char *)(v24 + 376) & 1) == 0
        || ((*(unsigned __int16 *)(v12 + 872) | (*(unsigned __int8 *)(v12 + 874) << 16)) & 0x20000) == 0)
      {
        goto LABEL_220;
      }
      if ((*(unsigned char *)(v12 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          size_t v635 = __nwlog_obj();
          BOOL v636 = os_log_type_enabled(v635, OS_LOG_TYPE_DEBUG);
          uint64_t v24 = v938;
          if (v636)
          {
            uint64_t v637 = *(void *)(v12 + 488);
            int v638 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
            int v639 = *(_DWORD *)(v12 + 860);
            if (v637) {
              LODWORD(v637) = *(_DWORD *)(v637 + 424);
            }
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v12 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v638;
            *(_WORD *)&v960[6] = 1024;
            *(_DWORD *)&v960[8] = v639;
            *(_WORD *)&v960[12] = 1024;
            *(_DWORD *)&v960[14] = v637;
            *(_WORD *)&v960[18] = 2048;
            *(void *)&v960[20] = v12;
            _os_log_impl(&dword_1830D4000, v635, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> triggering new flow on server connection %p, more input available", buf, 0x3Cu);
            uint64_t v24 = v938;
          }
        }
      }
      if ((*(unsigned char *)(v24 + 376) & 1) == 0)
      {
        if ((*(unsigned char *)(v24 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            int v128 = __nwlog_obj();
            if (os_log_type_enabled(v128, OS_LOG_TYPE_DEBUG))
            {
              int v134 = *(_DWORD *)(v938 + 372);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v938 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v959 = (uint64_t)" ";
              *(_WORD *)v960 = 1024;
              *(_DWORD *)&v960[2] = v134;
              uint64_t v130 = "%{public}s %{public}s%s<i%u> called when not in server mode, ignoring";
              goto LABEL_256;
            }
          }
        }
        return;
      }
      uint64_t v142 = *(void ***)(v24 + 328);
      if (v142)
      {
        uint64_t v143 = (unsigned __int16 *)(v12 + 872);
        uint64_t v144 = *v142;
        if (v144 && *v144)
        {
          uint64_t v145 = *(NSObject **)(v24 + 264);
          if (v145)
          {
            nw_parameters_t v146 = nw_parameters_copy(v145);
            *(void *)(v938 + 224) = v12;
            if ((***(unsigned int (****)(void, void, nw_parameters_t))(v938 + 328))(*(void *)(v938 + 328), *(void *)(v938 + 280), v146)&& *(void *)(v12 + 488)&& !*(void *)(v938 + 224))
            {
              if ((*(unsigned char *)(v938 + 158) & 1) == 0)
              {
                if (gLogDatapath)
                {
                  os_log_type_t v867 = __nwlog_obj();
                  if (os_log_type_enabled(v867, OS_LOG_TYPE_DEBUG))
                  {
                    int v868 = *(_DWORD *)(v938 + 372);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v938 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v959 = (uint64_t)" ";
                    *(_WORD *)v960 = 1024;
                    *(_DWORD *)&v960[2] = v868;
                    _os_log_impl(&dword_1830D4000, v867, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> sucessfully associated new flow stream with connection, awaiting connected", buf, 0x26u);
                  }
                }
              }
              int v278 = *v143;
              unsigned int v279 = (v278 | (*((unsigned __int8 *)v143 + 2) << 16)) & 0xFFFDFFFF;
              *uint64_t v143 = v278;
              *((unsigned char *)v143 + 2) = BYTE2(v279);
              goto LABEL_765;
            }
            if ((*(unsigned char *)(v938 + 158) & 1) == 0)
            {
              uint64_t v147 = __nwlog_obj();
              if (os_log_type_enabled(v147, OS_LOG_TYPE_ERROR))
              {
                int v148 = *(_DWORD *)(v938 + 372);
                *(_DWORD *)buf = 136447234;
                *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v938 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v959 = (uint64_t)" ";
                *(_WORD *)v960 = 1024;
                *(_DWORD *)&v960[2] = v148;
                *(_WORD *)&v960[6] = 2048;
                *(void *)&v960[8] = v12;
                _os_log_impl(&dword_1830D4000, v147, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> listen handler didn't accept the new flow, closing connection %p", buf, 0x30u);
              }
            }
            int v149 = *v143;
            int v150 = v149 | (*(unsigned __int8 *)(v12 + 874) << 16);
            if ((v149 & 0x100) != 0)
            {
              if ((*(unsigned char *)(v12 + 158) & 1) == 0)
              {
                if (gLogDatapath)
                {
                  BOOL v254 = __nwlog_obj();
                  if (os_log_type_enabled(v254, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v255 = *(void *)(v12 + 488);
                    int v256 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                    int v257 = *(_DWORD *)(v12 + 860);
                    if (v255) {
                      LODWORD(v255) = *(_DWORD *)(v255 + 424);
                    }
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v12 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v959 = (uint64_t)" ";
                    *(_WORD *)v960 = 1024;
                    *(_DWORD *)&v960[2] = v256;
                    *(_WORD *)&v960[6] = 1024;
                    *(_DWORD *)&v960[8] = v257;
                    *(_WORD *)&v960[12] = 1024;
                    *(_DWORD *)&v960[14] = v255;
                    _os_log_impl(&dword_1830D4000, v254, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> already closed", buf, 0x32u);
                  }
                }
              }
              goto LABEL_765;
            }
            *(unsigned char *)(v12 + 874) = BYTE2(v150);
            *uint64_t v143 = v150 | 0x100;
            if ((*(unsigned char *)(v12 + 158) & 1) == 0)
            {
              if (gLogDatapath)
              {
                int v804 = __nwlog_obj();
                if (os_log_type_enabled(v804, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v805 = *(void *)(v12 + 488);
                  int v806 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                  int v807 = *(_DWORD *)(v12 + 860);
                  if (v805) {
                    LODWORD(v805) = *(_DWORD *)(v805 + 424);
                  }
                  *(_DWORD *)buf = 136447490;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v12 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v959 = (uint64_t)" ";
                  *(_WORD *)v960 = 1024;
                  *(_DWORD *)&v960[2] = v806;
                  *(_WORD *)&v960[6] = 1024;
                  *(_DWORD *)&v960[8] = v807;
                  *(_WORD *)&v960[12] = 1024;
                  *(_DWORD *)&v960[14] = v805;
                  _os_log_impl(&dword_1830D4000, v804, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
                }
              }
            }
            uint64_t v151 = *(void *)(v12 + 480);
            if (!v151)
            {
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              v800 = (char *)_os_log_send_and_compose_impl();
              v961[0] = 16;
              LOBYTE(aBlock) = 0;
              if (!__nwlog_fault(v800, v961, &aBlock)) {
                goto LABEL_1597;
              }
              if (v961[0] == 17)
              {
                BOOL v801 = __nwlog_obj();
                os_log_type_t v802 = v961[0];
                if (!os_log_type_enabled(v801, (os_log_type_t)v961[0])) {
                  goto LABEL_1597;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                uint64_t v803 = "%{public}s called with null http1";
              }
              else if ((_BYTE)aBlock)
              {
                v839 = (char *)__nw_create_backtrace_string();
                BOOL v801 = __nwlog_obj();
                os_log_type_t v802 = v961[0];
                BOOL v840 = os_log_type_enabled(v801, (os_log_type_t)v961[0]);
                if (v839)
                {
                  if (v840)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v839;
                    v841 = "%{public}s called with null http1, dumping backtrace:%{public}s";
                    os_log_type_t v842 = buf;
LABEL_1444:
                    _os_log_impl(&dword_1830D4000, v801, v802, v841, v842, 0x16u);
                    goto LABEL_1445;
                  }
                  goto LABEL_1445;
                }
                if (!v840) {
                  goto LABEL_1597;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                uint64_t v803 = "%{public}s called with null http1, no backtrace";
              }
              else
              {
                BOOL v801 = __nwlog_obj();
                os_log_type_t v802 = v961[0];
                if (!os_log_type_enabled(v801, (os_log_type_t)v961[0])) {
                  goto LABEL_1597;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                uint64_t v803 = "%{public}s called with null http1, backtrace limit exceeded";
              }
              v900 = buf;
LABEL_1596:
              _os_log_impl(&dword_1830D4000, v801, v802, v803, v900, 0xCu);
              goto LABEL_1597;
            }
            int v152 = *v143;
            int v153 = v152 | (*(unsigned __int8 *)(v12 + 874) << 16);
            if ((v152 & 0x800) != 0)
            {
              if ((*(unsigned char *)(v12 + 158) & 1) == 0)
              {
                if (gLogDatapath)
                {
                  uint64_t v271 = __nwlog_obj();
                  if (os_log_type_enabled(v271, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v272 = *(void *)(v12 + 488);
                    int v273 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                    int v274 = *(_DWORD *)(v12 + 860);
                    if (v272) {
                      LODWORD(v272) = *(_DWORD *)(v272 + 424);
                    }
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v12 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v959 = (uint64_t)" ";
                    *(_WORD *)v960 = 1024;
                    *(_DWORD *)&v960[2] = v273;
                    *(_WORD *)&v960[6] = 1024;
                    *(_DWORD *)&v960[8] = v274;
                    *(_WORD *)&v960[12] = 1024;
                    *(_DWORD *)&v960[14] = v272;
                    _os_log_impl(&dword_1830D4000, v271, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
                    if (*(void *)(v12 + 488)) {
                      goto LABEL_765;
                    }
                    goto LABEL_757;
                  }
                }
              }
LABEL_756:
              if (*(void *)(v12 + 488))
              {
LABEL_765:
                if (v146) {
                  os_release(v146);
                }
                return;
              }
LABEL_757:
              uint64_t v457 = *(void *)(v12 + 784);
              if (v457)
              {
                nw_queue_set_timer_values(v457, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
              }
              else
              {
                if ((*(unsigned char *)(v12 + 158) & 1) == 0)
                {
                  uint64_t v458 = __nwlog_obj();
                  if (os_log_type_enabled(v458, OS_LOG_TYPE_ERROR))
                  {
                    uint64_t v459 = *(void *)(v12 + 488);
                    int v460 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                    int v461 = *(_DWORD *)(v12 + 860);
                    if (v459) {
                      LODWORD(v459) = *(_DWORD *)(v459 + 424);
                    }
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v12 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v959 = (uint64_t)" ";
                    *(_WORD *)v960 = 1024;
                    *(_DWORD *)&v960[2] = v460;
                    *(_WORD *)&v960[6] = 1024;
                    *(_DWORD *)&v960[8] = v461;
                    *(_WORD *)&v960[12] = 1024;
                    *(_DWORD *)&v960[14] = v459;
                    _os_log_impl(&dword_1830D4000, v458, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
                  }
                }
                uint64_t v462 = *(void *)(v12 + 608);
                uint64_t v463 = *(void **)(v12 + 496);
                *(void *)buf = MEMORY[0x1E4F143A8];
                *(void *)&buf[8] = 0x40000000;
                *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
                uint64_t v959 = (uint64_t)&unk_1E52411A0;
                *(void *)v960 = v462;
                nw_queue_context_async(v463, buf);
              }
              goto LABEL_765;
            }
            *(unsigned char *)(v12 + 874) = BYTE2(v153);
            *uint64_t v143 = v153 | 0x800;
            uint64_t v154 = *(unsigned int *)(v151 + 368) + 1;
            uint64_t v155 = v154 << 31 >> 31;
            *(_DWORD *)(v151 + 368) = v154;
            if (v155 == v154 && (v155 & 0x8000000000000000) == 0)
            {
LABEL_751:
              if ((*(unsigned char *)(v12 + 158) & 1) == 0)
              {
                if (gLogDatapath)
                {
                  v843 = __nwlog_obj();
                  if (os_log_type_enabled(v843, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v844 = *(void *)(v12 + 488);
                    int v845 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                    int v846 = *(_DWORD *)(v12 + 860);
                    if (v844) {
                      LODWORD(v844) = *(_DWORD *)(v844 + 424);
                    }
                    int v847 = *(_DWORD *)(v151 + 368) + *(_DWORD *)(v151 + 364);
                    *(_DWORD *)buf = 136447746;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v12 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v959 = (uint64_t)" ";
                    *(_WORD *)v960 = 1024;
                    *(_DWORD *)&v960[2] = v845;
                    *(_WORD *)&v960[6] = 1024;
                    *(_DWORD *)&v960[8] = v846;
                    *(_WORD *)&v960[12] = 1024;
                    *(_DWORD *)&v960[14] = v844;
                    *(_WORD *)&v960[18] = 1024;
                    *(_DWORD *)&v960[20] = v847;
                    _os_log_impl(&dword_1830D4000, v843, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
                  }
                }
              }
              uint64_t v454 = *(void **)(v12 + 496);
              if (v454)
              {
                uint64_t v455 = *(void *)(v12 + 480);
                if (v455)
                {
                  uint64_t v456 = *(void *)(v455 + 200);
                  *(void *)buf = MEMORY[0x1E4F143A8];
                  *(void *)&buf[8] = 0x40000000;
                  *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
                  uint64_t v959 = (uint64_t)&unk_1E52411C8;
                  *(void *)v960 = v456;
                  nw_queue_context_async(v454, buf);
                  goto LABEL_756;
                }
                __nwlog_obj();
                *(_DWORD *)v961 = 136446210;
                *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                v800 = (char *)_os_log_send_and_compose_impl();
                LOBYTE(aBlock) = 16;
                v953[0] = 0;
                if (!__nwlog_fault(v800, &aBlock, v953))
                {
LABEL_1597:
                  if (v800) {
                    free(v800);
                  }
                  if (*(void *)(v12 + 488)) {
                    goto LABEL_765;
                  }
                  goto LABEL_757;
                }
                if (aBlock == 17)
                {
                  BOOL v801 = __nwlog_obj();
                  os_log_type_t v802 = aBlock;
                  if (!os_log_type_enabled(v801, (os_log_type_t)aBlock)) {
                    goto LABEL_1597;
                  }
                  *(_DWORD *)v961 = 136446210;
                  *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  uint64_t v803 = "%{public}s called with null http1";
                  goto LABEL_1595;
                }
                if (!v953[0])
                {
                  BOOL v801 = __nwlog_obj();
                  os_log_type_t v802 = aBlock;
                  if (!os_log_type_enabled(v801, (os_log_type_t)aBlock)) {
                    goto LABEL_1597;
                  }
                  *(_DWORD *)v961 = 136446210;
                  *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  uint64_t v803 = "%{public}s called with null http1, backtrace limit exceeded";
                  goto LABEL_1595;
                }
                v839 = (char *)__nw_create_backtrace_string();
                BOOL v801 = __nwlog_obj();
                os_log_type_t v802 = aBlock;
                BOOL v882 = os_log_type_enabled(v801, (os_log_type_t)aBlock);
                if (!v839)
                {
                  if (!v882) {
                    goto LABEL_1597;
                  }
                  *(_DWORD *)v961 = 136446210;
                  *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  uint64_t v803 = "%{public}s called with null http1, no backtrace";
                  goto LABEL_1595;
                }
                if (v882)
                {
                  *(_DWORD *)v961 = 136446466;
                  *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  *(_WORD *)&v961[12] = 2082;
                  *(void *)&v961[14] = v839;
                  v841 = "%{public}s called with null http1, dumping backtrace:%{public}s";
                  goto LABEL_1443;
                }
              }
              else
              {
                __nwlog_obj();
                *(_DWORD *)v961 = 136446210;
                *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                v800 = (char *)_os_log_send_and_compose_impl();
                LOBYTE(aBlock) = 16;
                v953[0] = 0;
                if (!__nwlog_fault(v800, &aBlock, v953)) {
                  goto LABEL_1597;
                }
                if (aBlock == 17)
                {
                  BOOL v801 = __nwlog_obj();
                  os_log_type_t v802 = aBlock;
                  if (!os_log_type_enabled(v801, (os_log_type_t)aBlock)) {
                    goto LABEL_1597;
                  }
                  *(_DWORD *)v961 = 136446210;
                  *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  uint64_t v803 = "%{public}s called with null http1_connection->context";
LABEL_1595:
                  v900 = v961;
                  goto LABEL_1596;
                }
                if (!v953[0])
                {
                  BOOL v801 = __nwlog_obj();
                  os_log_type_t v802 = aBlock;
                  if (!os_log_type_enabled(v801, (os_log_type_t)aBlock)) {
                    goto LABEL_1597;
                  }
                  *(_DWORD *)v961 = 136446210;
                  *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  uint64_t v803 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
                  goto LABEL_1595;
                }
                v839 = (char *)__nw_create_backtrace_string();
                BOOL v801 = __nwlog_obj();
                os_log_type_t v802 = aBlock;
                BOOL v881 = os_log_type_enabled(v801, (os_log_type_t)aBlock);
                if (!v839)
                {
                  if (!v881) {
                    goto LABEL_1597;
                  }
                  *(_DWORD *)v961 = 136446210;
                  *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  uint64_t v803 = "%{public}s called with null http1_connection->context, no backtrace";
                  goto LABEL_1595;
                }
                if (v881)
                {
                  *(_DWORD *)v961 = 136446466;
                  *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                  *(_WORD *)&v961[12] = 2082;
                  *(void *)&v961[14] = v839;
                  v841 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
LABEL_1443:
                  os_log_type_t v842 = v961;
                  goto LABEL_1444;
                }
              }
LABEL_1445:
              free(v839);
              goto LABEL_1597;
            }
            __nwlog_obj();
            uint64_t v156 = *(unsigned int *)(v151 + 368);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->nonresuable_connections";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v959 = 1;
            *(_WORD *)v960 = 2048;
            *(void *)&v960[2] = v156;
            uint64_t v157 = (char *)_os_log_send_and_compose_impl();
            v961[0] = 16;
            LOBYTE(aBlock) = 0;
            if (__nwlog_fault(v157, v961, &aBlock))
            {
              if (v961[0] == 17)
              {
                uint64_t v158 = __nwlog_obj();
                os_log_type_t v159 = v961[0];
                if (os_log_type_enabled(v158, (os_log_type_t)v961[0]))
                {
                  uint64_t v160 = *(unsigned int *)(v151 + 368);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->nonresuable_connections";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v160;
                  char v161 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_747:
                  _os_log_impl(&dword_1830D4000, v158, v159, v161, buf, 0x2Au);
                }
              }
              else if ((_BYTE)aBlock)
              {
                int v420 = (char *)__nw_create_backtrace_string();
                uint64_t v158 = __nwlog_obj();
                os_log_type_t v159 = v961[0];
                BOOL v421 = os_log_type_enabled(v158, (os_log_type_t)v961[0]);
                if (v420)
                {
                  if (v421)
                  {
                    uint64_t v422 = *(unsigned int *)(v151 + 368);
                    *(_DWORD *)buf = 136447234;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->nonresuable_connections";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v959 = 1;
                    *(_WORD *)v960 = 2048;
                    *(void *)&v960[2] = v422;
                    *(_WORD *)&v960[10] = 2082;
                    *(void *)&v960[12] = v420;
                    _os_log_impl(&dword_1830D4000, v158, v159, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                  }
                  free(v420);
                  goto LABEL_748;
                }
                if (v421)
                {
                  uint64_t v453 = *(unsigned int *)(v151 + 368);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->nonresuable_connections";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v453;
                  char v161 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                  goto LABEL_747;
                }
              }
              else
              {
                uint64_t v158 = __nwlog_obj();
                os_log_type_t v159 = v961[0];
                if (os_log_type_enabled(v158, (os_log_type_t)v961[0]))
                {
                  uint64_t v447 = *(unsigned int *)(v151 + 368);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->nonresuable_connections";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v447;
                  char v161 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                  goto LABEL_747;
                }
              }
            }
LABEL_748:
            if (v157) {
              free(v157);
            }
            *(_DWORD *)(v151 + 368) = -1;
            goto LABEL_751;
          }
          if ((*(unsigned char *)(v24 + 158) & 1) == 0)
          {
            int v200 = __nwlog_obj();
            if (os_log_type_enabled(v200, OS_LOG_TYPE_ERROR))
            {
              int v201 = *(_DWORD *)(v938 + 372);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v938 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v959 = (uint64_t)" ";
              *(_WORD *)v960 = 1024;
              *(_DWORD *)&v960[2] = v201;
              _os_log_impl(&dword_1830D4000, v200, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> http1->parameters is NULL when opening responder stream", buf, 0x26u);
            }
          }
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
          uint64_t v70 = (char *)_os_log_send_and_compose_impl();
          v961[0] = 16;
          LOBYTE(aBlock) = 0;
          if (!__nwlog_fault(v70, v961, &aBlock)) {
            goto LABEL_1095;
          }
          if (v961[0] == 17)
          {
            int v71 = __nwlog_obj();
            os_log_type_t v72 = v961[0];
            if (!os_log_type_enabled(v71, (os_log_type_t)v961[0])) {
              goto LABEL_1095;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
            uint64_t v73 = "%{public}s http1->parameters is NULL when opening responder stream";
            goto LABEL_1093;
          }
          if (!(_BYTE)aBlock)
          {
            int v71 = __nwlog_obj();
            os_log_type_t v72 = v961[0];
            if (!os_log_type_enabled(v71, (os_log_type_t)v961[0])) {
              goto LABEL_1095;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
            uint64_t v73 = "%{public}s http1->parameters is NULL when opening responder stream, backtrace limit exceeded";
            goto LABEL_1093;
          }
          os_log_type_t v78 = (char *)__nw_create_backtrace_string();
          int v71 = __nwlog_obj();
          os_log_type_t v72 = v961[0];
          BOOL v258 = os_log_type_enabled(v71, (os_log_type_t)v961[0]);
          if (!v78)
          {
            if (!v258) {
              goto LABEL_1095;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
            uint64_t v73 = "%{public}s http1->parameters is NULL when opening responder stream, no backtrace";
            goto LABEL_1093;
          }
          if (!v258) {
            goto LABEL_437;
          }
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_attempt_trigger_new_flow";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v78;
          BOOL v80 = "%{public}s http1->parameters is NULL when opening responder stream, dumping backtrace:%{public}s";
          goto LABEL_436;
        }
        if ((*(unsigned char *)(v24 + 158) & 1) == 0)
        {
          long long v640 = __nwlog_obj();
          if (os_log_type_enabled(v640, OS_LOG_TYPE_ERROR))
          {
            int v641 = *(_DWORD *)(v938 + 372);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v938 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v641;
            _os_log_impl(&dword_1830D4000, v640, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u> listen handler has no new_flow callback, ignoring incoming flow", buf, 0x26u);
          }
        }
        int v642 = *v143;
        int v643 = v642 | (*(unsigned __int8 *)(v12 + 874) << 16);
        if ((v642 & 0x100) == 0)
        {
          *(unsigned char *)(v12 + 874) = BYTE2(v643);
          *uint64_t v143 = v643 | 0x100;
          if ((*(unsigned char *)(v12 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              int v916 = __nwlog_obj();
              if (os_log_type_enabled(v916, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v917 = *(void *)(v12 + 488);
                int v918 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                int v919 = *(_DWORD *)(v12 + 860);
                if (v917) {
                  LODWORD(v917) = *(_DWORD *)(v917 + 424);
                }
                *(_DWORD *)buf = 136447490;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v12 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v959 = (uint64_t)" ";
                *(_WORD *)v960 = 1024;
                *(_DWORD *)&v960[2] = v918;
                *(_WORD *)&v960[6] = 1024;
                *(_DWORD *)&v960[8] = v919;
                *(_WORD *)&v960[12] = 1024;
                *(_DWORD *)&v960[14] = v917;
                _os_log_impl(&dword_1830D4000, v916, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> http connection closed, increasing pool width", buf, 0x32u);
              }
            }
          }
          uint64_t v644 = *(void *)(v12 + 480);
          if (!v644)
          {
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
            BOOL v912 = (char *)_os_log_send_and_compose_impl();
            v961[0] = 16;
            LOBYTE(aBlock) = 0;
            if (!__nwlog_fault(v912, v961, &aBlock)) {
              goto LABEL_1652;
            }
            if (v961[0] == 17)
            {
              v913 = __nwlog_obj();
              os_log_type_t v914 = v961[0];
              if (!os_log_type_enabled(v913, (os_log_type_t)v961[0])) {
                goto LABEL_1652;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              uint64_t v915 = "%{public}s called with null http1";
            }
            else if ((_BYTE)aBlock)
            {
              int v920 = (char *)__nw_create_backtrace_string();
              v913 = __nwlog_obj();
              os_log_type_t v914 = v961[0];
              BOOL v921 = os_log_type_enabled(v913, (os_log_type_t)v961[0]);
              if (v920)
              {
                if (v921)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v920;
                  _os_log_impl(&dword_1830D4000, v913, v914, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v920);
                goto LABEL_1652;
              }
              if (!v921) {
                goto LABEL_1652;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              uint64_t v915 = "%{public}s called with null http1, no backtrace";
            }
            else
            {
              v913 = __nwlog_obj();
              os_log_type_t v914 = v961[0];
              if (!os_log_type_enabled(v913, (os_log_type_t)v961[0])) {
                goto LABEL_1652;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
              uint64_t v915 = "%{public}s called with null http1, backtrace limit exceeded";
            }
            int v931 = buf;
LABEL_1651:
            _os_log_impl(&dword_1830D4000, v913, v914, v915, v931, 0xCu);
            goto LABEL_1652;
          }
          int v645 = *v143;
          int v646 = v645 | (*(unsigned __int8 *)(v12 + 874) << 16);
          if ((v645 & 0x800) != 0)
          {
            if ((*(unsigned char *)(v12 + 158) & 1) == 0)
            {
              if (gLogDatapath)
              {
                v736 = __nwlog_obj();
                if (os_log_type_enabled(v736, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v737 = *(void *)(v12 + 488);
                  int v738 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                  int v739 = *(_DWORD *)(v12 + 860);
                  if (v737) {
                    LODWORD(v737) = *(_DWORD *)(v737 + 424);
                  }
                  *(_DWORD *)buf = 136447490;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v12 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v959 = (uint64_t)" ";
                  *(_WORD *)v960 = 1024;
                  *(_DWORD *)&v960[2] = v738;
                  *(_WORD *)&v960[6] = 1024;
                  *(_DWORD *)&v960[8] = v739;
                  *(_WORD *)&v960[12] = 1024;
                  *(_DWORD *)&v960[14] = v737;
                  _os_log_impl(&dword_1830D4000, v736, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> Connection already marked as not-reusable, ignoring", buf, 0x32u);
                }
              }
            }
            goto LABEL_1561;
          }
          *(unsigned char *)(v12 + 874) = BYTE2(v646);
          *uint64_t v143 = v646 | 0x800;
          uint64_t v647 = *(unsigned int *)(v644 + 368) + 1;
          uint64_t v648 = v647 << 31 >> 31;
          *(_DWORD *)(v644 + 368) = v647;
          if (v648 == v647 && (v648 & 0x8000000000000000) == 0)
          {
LABEL_1556:
            if ((*(unsigned char *)(v12 + 158) & 1) == 0)
            {
              if (gLogDatapath)
              {
                v922 = __nwlog_obj();
                if (os_log_type_enabled(v922, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v923 = *(void *)(v12 + 488);
                  int v924 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                  int v925 = *(_DWORD *)(v12 + 860);
                  if (v923) {
                    LODWORD(v923) = *(_DWORD *)(v923 + 424);
                  }
                  int v926 = *(_DWORD *)(v644 + 368) + *(_DWORD *)(v644 + 364);
                  *(_DWORD *)buf = 136447746;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v12 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v959 = (uint64_t)" ";
                  *(_WORD *)v960 = 1024;
                  *(_DWORD *)&v960[2] = v924;
                  *(_WORD *)&v960[6] = 1024;
                  *(_DWORD *)&v960[8] = v925;
                  *(_WORD *)&v960[12] = 1024;
                  *(_DWORD *)&v960[14] = v923;
                  *(_WORD *)&v960[18] = 1024;
                  *(_DWORD *)&v960[20] = v926;
                  _os_log_impl(&dword_1830D4000, v922, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection marked as not-reusable, increased pool width to %u", buf, 0x38u);
                }
              }
            }
            int v902 = *(void **)(v12 + 496);
            if (!v902)
            {
              __nwlog_obj();
              *(_DWORD *)v961 = 136446210;
              *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
              BOOL v912 = (char *)_os_log_send_and_compose_impl();
              LOBYTE(aBlock) = 16;
              v953[0] = 0;
              if (!__nwlog_fault(v912, &aBlock, v953)) {
                goto LABEL_1652;
              }
              if (aBlock == 17)
              {
                v913 = __nwlog_obj();
                os_log_type_t v914 = aBlock;
                if (!os_log_type_enabled(v913, (os_log_type_t)aBlock)) {
                  goto LABEL_1652;
                }
                *(_DWORD *)v961 = 136446210;
                *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                uint64_t v915 = "%{public}s called with null http1_connection->context";
LABEL_1650:
                int v931 = v961;
                goto LABEL_1651;
              }
              if (!v953[0])
              {
                v913 = __nwlog_obj();
                os_log_type_t v914 = aBlock;
                if (!os_log_type_enabled(v913, (os_log_type_t)aBlock)) {
                  goto LABEL_1652;
                }
                *(_DWORD *)v961 = 136446210;
                *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                uint64_t v915 = "%{public}s called with null http1_connection->context, backtrace limit exceeded";
                goto LABEL_1650;
              }
              v927 = (char *)__nw_create_backtrace_string();
              v913 = __nwlog_obj();
              os_log_type_t v914 = aBlock;
              BOOL v928 = os_log_type_enabled(v913, (os_log_type_t)aBlock);
              if (!v927)
              {
                if (!v928) {
                  goto LABEL_1652;
                }
                *(_DWORD *)v961 = 136446210;
                *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                uint64_t v915 = "%{public}s called with null http1_connection->context, no backtrace";
                goto LABEL_1650;
              }
              if (v928)
              {
                *(_DWORD *)v961 = 136446466;
                *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                *(_WORD *)&v961[12] = 2082;
                *(void *)&v961[14] = v927;
                int v929 = "%{public}s called with null http1_connection->context, dumping backtrace:%{public}s";
LABEL_1634:
                _os_log_impl(&dword_1830D4000, v913, v914, v929, v961, 0x16u);
              }
LABEL_1635:
              free(v927);
              if (!v912)
              {
LABEL_1561:
                if (!*(void *)(v12 + 488))
                {
                  uint64_t v905 = *(void *)(v12 + 784);
                  if (v905)
                  {
                    nw_queue_set_timer_values(v905, 0x8000000000000000, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
                  }
                  else
                  {
                    if ((*(unsigned char *)(v12 + 158) & 1) == 0)
                    {
                      int v906 = __nwlog_obj();
                      if (os_log_type_enabled(v906, OS_LOG_TYPE_ERROR))
                      {
                        uint64_t v907 = *(void *)(v12 + 488);
                        int v908 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
                        int v909 = *(_DWORD *)(v12 + 860);
                        if (v907) {
                          LODWORD(v907) = *(_DWORD *)(v907 + 424);
                        }
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v12 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v959 = (uint64_t)" ";
                        *(_WORD *)v960 = 1024;
                        *(_DWORD *)&v960[2] = v908;
                        *(_WORD *)&v960[6] = 1024;
                        *(_DWORD *)&v960[8] = v909;
                        *(_WORD *)&v960[12] = 1024;
                        *(_DWORD *)&v960[14] = v907;
                        _os_log_impl(&dword_1830D4000, v906, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> No destroy timer on HTTP/1 connection when closing", buf, 0x32u);
                      }
                    }
                    uint64_t v910 = *(void *)(v12 + 608);
                    v911 = *(void **)(v12 + 496);
                    *(void *)buf = MEMORY[0x1E4F143A8];
                    *(void *)&buf[8] = 0x40000000;
                    *(void *)&buf[16] = ___ZL25nw_http1_connection_closeP19nw_http1_connection_block_invoke;
                    uint64_t v959 = (uint64_t)&unk_1E52411A0;
                    *(void *)v960 = v910;
                    nw_queue_context_async(v911, buf);
                  }
                }
                return;
              }
LABEL_1653:
              free(v912);
              goto LABEL_1561;
            }
            uint64_t v903 = *(void *)(v12 + 480);
            if (v903)
            {
              uint64_t v904 = *(void *)(v903 + 200);
              *(void *)buf = MEMORY[0x1E4F143A8];
              *(void *)&buf[8] = 0x40000000;
              *(void *)&buf[16] = ___ZL56nw_http1_match_idle_connection_with_pending_stream_asyncP19nw_http1_connection_block_invoke;
              uint64_t v959 = (uint64_t)&unk_1E52411C8;
              *(void *)v960 = v904;
              nw_queue_context_async(v902, buf);
              goto LABEL_1561;
            }
            __nwlog_obj();
            *(_DWORD *)v961 = 136446210;
            *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
            BOOL v912 = (char *)_os_log_send_and_compose_impl();
            LOBYTE(aBlock) = 16;
            v953[0] = 0;
            if (__nwlog_fault(v912, &aBlock, v953))
            {
              if (aBlock == 17)
              {
                v913 = __nwlog_obj();
                os_log_type_t v914 = aBlock;
                if (!os_log_type_enabled(v913, (os_log_type_t)aBlock)) {
                  goto LABEL_1652;
                }
                *(_DWORD *)v961 = 136446210;
                *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                uint64_t v915 = "%{public}s called with null http1";
                goto LABEL_1650;
              }
              if (!v953[0])
              {
                v913 = __nwlog_obj();
                os_log_type_t v914 = aBlock;
                if (!os_log_type_enabled(v913, (os_log_type_t)aBlock)) {
                  goto LABEL_1652;
                }
                *(_DWORD *)v961 = 136446210;
                *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                uint64_t v915 = "%{public}s called with null http1, backtrace limit exceeded";
                goto LABEL_1650;
              }
              v927 = (char *)__nw_create_backtrace_string();
              v913 = __nwlog_obj();
              os_log_type_t v914 = aBlock;
              BOOL v930 = os_log_type_enabled(v913, (os_log_type_t)aBlock);
              if (!v927)
              {
                if (!v930) {
                  goto LABEL_1652;
                }
                *(_DWORD *)v961 = 136446210;
                *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                uint64_t v915 = "%{public}s called with null http1, no backtrace";
                goto LABEL_1650;
              }
              if (v930)
              {
                *(_DWORD *)v961 = 136446466;
                *(void *)&v961[4] = "nw_http1_match_idle_connection_with_pending_stream_async";
                *(_WORD *)&v961[12] = 2082;
                *(void *)&v961[14] = v927;
                int v929 = "%{public}s called with null http1, dumping backtrace:%{public}s";
                goto LABEL_1634;
              }
              goto LABEL_1635;
            }
LABEL_1652:
            if (!v912) {
              goto LABEL_1561;
            }
            goto LABEL_1653;
          }
          __nwlog_obj();
          uint64_t v649 = *(unsigned int *)(v644 + 368);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->nonresuable_connections";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v959 = 1;
          *(_WORD *)v960 = 2048;
          *(void *)&v960[2] = v649;
          v650 = (char *)_os_log_send_and_compose_impl();
          v961[0] = 16;
          LOBYTE(aBlock) = 0;
          if (__nwlog_fault(v650, v961, &aBlock))
          {
            if (v961[0] == 17)
            {
              os_log_type_t v651 = __nwlog_obj();
              os_log_type_t v652 = v961[0];
              if (os_log_type_enabled(v651, (os_log_type_t)v961[0]))
              {
                uint64_t v653 = *(unsigned int *)(v644 + 368);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = 1;
                *(_WORD *)v960 = 2048;
                *(void *)&v960[2] = v653;
                v654 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_1552:
                _os_log_impl(&dword_1830D4000, v651, v652, v654, buf, 0x2Au);
              }
            }
            else if ((_BYTE)aBlock)
            {
              v848 = (char *)__nw_create_backtrace_string();
              os_log_type_t v651 = __nwlog_obj();
              os_log_type_t v652 = v961[0];
              BOOL v849 = os_log_type_enabled(v651, (os_log_type_t)v961[0]);
              if (v848)
              {
                if (v849)
                {
                  uint64_t v850 = *(unsigned int *)(v644 + 368);
                  *(_DWORD *)buf = 136447234;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->nonresuable_connections";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v850;
                  *(_WORD *)&v960[10] = 2082;
                  *(void *)&v960[12] = v848;
                  _os_log_impl(&dword_1830D4000, v651, v652, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                }
                free(v848);
                goto LABEL_1553;
              }
              if (v849)
              {
                uint64_t v901 = *(unsigned int *)(v644 + 368);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = 1;
                *(_WORD *)v960 = 2048;
                *(void *)&v960[2] = v901;
                v654 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                goto LABEL_1552;
              }
            }
            else
            {
              os_log_type_t v651 = __nwlog_obj();
              os_log_type_t v652 = v961[0];
              if (os_log_type_enabled(v651, (os_log_type_t)v961[0]))
              {
                uint64_t v884 = *(unsigned int *)(v644 + 368);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_mark_do_not_reuse";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->nonresuable_connections";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = 1;
                *(_WORD *)v960 = 2048;
                *(void *)&v960[2] = v884;
                v654 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                goto LABEL_1552;
              }
            }
          }
LABEL_1553:
          if (v650) {
            free(v650);
          }
          *(_DWORD *)(v644 + 368) = -1;
          goto LABEL_1556;
        }
        if (*(unsigned char *)(v12 + 158)) {
          return;
        }
        if (!gLogDatapath) {
          return;
        }
        uint64_t v190 = __nwlog_obj();
        if (!os_log_type_enabled(v190, OS_LOG_TYPE_DEBUG)) {
          return;
        }
        uint64_t v683 = *(void *)(v12 + 488);
        int v684 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
        int v685 = *(_DWORD *)(v12 + 860);
        if (v683) {
          LODWORD(v683) = *(_DWORD *)(v683 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_close";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v12 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v959 = (uint64_t)" ";
        *(_WORD *)v960 = 1024;
        *(_DWORD *)&v960[2] = v684;
        *(_WORD *)&v960[6] = 1024;
        *(_DWORD *)&v960[8] = v685;
        *(_WORD *)&v960[12] = 1024;
        *(_DWORD *)&v960[14] = v683;
        uint64_t v130 = "%{public}s %{public}s%s<i%u:c%u:s%u> already closed";
      }
      else
      {
        if (*(unsigned char *)(v12 + 158)) {
          return;
        }
        uint64_t v190 = __nwlog_obj();
        if (!os_log_type_enabled(v190, OS_LOG_TYPE_DEBUG)) {
          return;
        }
        uint64_t v191 = *(void *)(v12 + 488);
        int v192 = *(_DWORD *)(*(void *)(v12 + 480) + 372);
        int v193 = *(_DWORD *)(v12 + 860);
        if (v191) {
          LODWORD(v191) = *(_DWORD *)(v191 + 424);
        }
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_new_flow_valid";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v12 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v959 = (uint64_t)" ";
        *(_WORD *)v960 = 1024;
        *(_DWORD *)&v960[2] = v192;
        *(_WORD *)&v960[6] = 1024;
        *(_DWORD *)&v960[8] = v193;
        *(_WORD *)&v960[12] = 1024;
        *(_DWORD *)&v960[14] = v191;
        uint64_t v130 = "%{public}s %{public}s%s<i%u:c%u:s%u> called without listen handler, ignoring";
      }
      int v132 = v190;
      uint32_t v133 = 50;
      goto LABEL_257;
    }
    uint64_t v46 = v7;
    __nwlog_obj();
    uint64_t v47 = *(unsigned int *)(v46 + 348);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->pending_stream_count";
    *(_WORD *)&buf[22] = 2048;
    uint64_t v959 = 1;
    *(_WORD *)v960 = 2048;
    *(void *)&v960[2] = v47;
    os_log_type_t v48 = (char *)_os_log_send_and_compose_impl();
    v961[0] = 16;
    LOBYTE(aBlock) = 0;
    if (__nwlog_fault(v48, v961, &aBlock))
    {
      if (v961[0] == 17)
      {
        uint64_t v49 = __nwlog_obj();
        os_log_type_t v50 = v961[0];
        if (os_log_type_enabled(v49, (os_log_type_t)v961[0]))
        {
          uint64_t v51 = *(unsigned int *)(v938 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v959 = 1;
          *(_WORD *)v960 = 2048;
          *(void *)&v960[2] = v51;
          uint64_t v52 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_93:
          _os_log_impl(&dword_1830D4000, v49, v50, v52, buf, 0x2Au);
        }
      }
      else if ((_BYTE)aBlock)
      {
        uint64_t v53 = (char *)__nw_create_backtrace_string();
        uint64_t v49 = __nwlog_obj();
        os_log_type_t v50 = v961[0];
        BOOL v54 = os_log_type_enabled(v49, (os_log_type_t)v961[0]);
        if (v53)
        {
          if (v54)
          {
            uint64_t v55 = *(unsigned int *)(v938 + 348);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_stream_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v959 = 1;
            *(_WORD *)v960 = 2048;
            *(void *)&v960[2] = v55;
            *(_WORD *)&v960[10] = 2082;
            *(void *)&v960[12] = v53;
            _os_log_impl(&dword_1830D4000, v49, v50, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v53);
          goto LABEL_94;
        }
        if (v54)
        {
          uint64_t v57 = *(unsigned int *)(v938 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v959 = 1;
          *(_WORD *)v960 = 2048;
          *(void *)&v960[2] = v57;
          uint64_t v52 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
          goto LABEL_93;
        }
      }
      else
      {
        uint64_t v49 = __nwlog_obj();
        os_log_type_t v50 = v961[0];
        if (os_log_type_enabled(v49, (os_log_type_t)v961[0]))
        {
          uint64_t v56 = *(unsigned int *)(v938 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v959 = 1;
          *(_WORD *)v960 = 2048;
          *(void *)&v960[2] = v56;
          uint64_t v52 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
          goto LABEL_93;
        }
      }
    }
LABEL_94:
    if (v48) {
      free(v48);
    }
    *(_DWORD *)(v938 + 348) = 0;
    goto LABEL_97;
  }
  if ((*(unsigned char *)(v10 + 158) & 1) == 0)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v20 = gLogObj;
    if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
    {
      uint64_t v21 = *(void *)(v10 + 256);
      int v22 = *(_DWORD *)(*(void *)(v10 + 248) + 372);
      if (v21) {
        LODWORD(v21) = *(_DWORD *)(v21 + 860);
      }
      int v23 = *(_DWORD *)(v10 + 424);
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_disconnect";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v10 + 74;
      *(_WORD *)&buf[22] = 2080;
      uint64_t v959 = (uint64_t)" ";
      *(_WORD *)v960 = 1024;
      *(_DWORD *)&v960[2] = v22;
      *(_WORD *)&v960[6] = 1024;
      *(_DWORD *)&v960[8] = v21;
      *(_WORD *)&v960[12] = 1024;
      *(_DWORD *)&v960[14] = v23;
      _os_log_impl(&dword_1830D4000, v20, OS_LOG_TYPE_ERROR, "%{public}s %{public}s%s<i%u:c%u:s%u> disconnecting the initial stream without connecting", buf, 0x32u);
    }
  }
  nw_protocol_disconnect(*(void **)(v10 + 32), v10);
  uint64_t v24 = v938;
LABEL_220:
  uint64_t v105 = *(void *)(v24 + 248);
  if (v105)
  {
    p_cache = NWConcrete_nw_resolution_report.cache;
    uint64_t v937 = *(void *)(v24 + 248);
    if ((*(unsigned char *)(v105 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        char v608 = __nwlog_obj();
        BOOL v609 = os_log_type_enabled(v608, OS_LOG_TYPE_DEBUG);
        p_cache = NWConcrete_nw_resolution_report.cache;
        uint64_t v24 = v938;
        if (v609)
        {
          uint64_t v610 = v105 + 74;
          uint64_t v611 = *(void *)(v105 + 256);
          int v612 = *(_DWORD *)(*(void *)(v105 + 248) + 372);
          if (v611) {
            LODWORD(v611) = *(_DWORD *)(v611 + 860);
          }
          uint64_t v105 = v937;
          int v613 = *(_DWORD *)(v937 + 424);
          *(_DWORD *)buf = 136448002;
          *(void *)&uint8_t buf[4] = "nw_http1_get_next_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v610;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v959 = (uint64_t)" ";
          *(_WORD *)v960 = 1024;
          *(_DWORD *)&v960[2] = v612;
          *(_WORD *)&v960[6] = 1024;
          *(_DWORD *)&v960[8] = v611;
          *(_WORD *)&v960[12] = 1024;
          *(_DWORD *)&v960[14] = v613;
          *(_WORD *)&v960[18] = 1024;
          *(_DWORD *)&v960[20] = v613;
          *(_WORD *)&v960[24] = 2048;
          *(void *)&v960[26] = v937;
          _os_log_impl(&dword_1830D4000, v608, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> found stream %u (%p)", buf, 0x42u);
          uint64_t v24 = v938;
          p_cache = NWConcrete_nw_resolution_report.cache;
        }
      }
    }
    int v107 = (_OWORD *)(v105 + 64);
    uint64_t v108 = *(void *)(v24 + 208);
    if (v108)
    {
      uint64_t v109 = 0;
      uint64_t v110 = v24 + 74;
      do
      {
        uint64_t v111 = v108;
        uint64_t v108 = *(void *)(v108 + 592);
        if ((*(_WORD *)(v111 + 872) & 0x800) == 0)
        {
          if ((*(unsigned char *)(v24 + 158) & 1) != 0 || !*((unsigned char *)p_cache + 3665))
          {
            uint64_t v109 = v111;
          }
          else
          {
            uint64_t v932 = v110;
            uint64_t v934 = v107;
            int v112 = __nwlog_obj();
            if (os_log_type_enabled(v112, OS_LOG_TYPE_DEBUG))
            {
              int v113 = *(_DWORD *)(v938 + 372);
              *(_DWORD *)buf = 136447234;
              *(void *)&uint8_t buf[4] = "nw_http1_get_next_idle_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v932;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v959 = (uint64_t)" ";
              *(_WORD *)v960 = 1024;
              *(_DWORD *)&v960[2] = v113;
              *(_WORD *)&v960[6] = 2048;
              *(void *)&v960[8] = v111;
              _os_log_impl(&dword_1830D4000, v112, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> found idle connection connection %p", buf, 0x30u);
              uint64_t v110 = v932;
              uint64_t v24 = v938;
              uint64_t v109 = v111;
              int v107 = v934;
              p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
            }
            else
            {
              uint64_t v109 = v111;
              uint64_t v24 = v938;
              int v107 = v934;
              p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
              uint64_t v110 = v932;
            }
          }
        }
      }
      while (v108);
      uint64_t v105 = v937;
      if (v109)
      {
        uint64_t v933 = v110;
        if ((*(unsigned char *)(v109 + 158) & 1) == 0)
        {
          if (*((unsigned char *)p_cache + 3665))
          {
            uint64_t v623 = v107;
            v624 = p_cache;
            char v625 = __nwlog_obj();
            BOOL v626 = os_log_type_enabled(v625, OS_LOG_TYPE_DEBUG);
            p_cache = v624;
            int v107 = v623;
            uint64_t v24 = v938;
            if (v626)
            {
              uint64_t v627 = *(void *)(v109 + 488);
              int v628 = *(_DWORD *)(*(void *)(v109 + 480) + 372);
              int v629 = *(_DWORD *)(v109 + 860);
              if (v627) {
                LODWORD(v627) = *(_DWORD *)(v627 + 424);
              }
              *(_DWORD *)buf = 136447746;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v109 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v959 = (uint64_t)" ";
              *(_WORD *)v960 = 1024;
              *(_DWORD *)&v960[2] = v628;
              *(_WORD *)&v960[6] = 1024;
              *(_DWORD *)&v960[8] = v629;
              *(_WORD *)&v960[12] = 1024;
              *(_DWORD *)&v960[14] = v627;
              *(_WORD *)&v960[18] = 2048;
              *(void *)&v960[20] = v109;
              _os_log_impl(&dword_1830D4000, v625, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for connection %p", buf, 0x3Cu);
              uint64_t v24 = v938;
              uint64_t v105 = v937;
              int v107 = v623;
              p_cache = v624;
            }
          }
        }
        v935 = v107;
        uint64_t v114 = (_WORD *)(v109 + 872);
        if (((*(unsigned __int16 *)(v109 + 872) | (*(unsigned __int8 *)(v109 + 874) << 16)) & 0x80000) == 0)
        {
          int v115 = p_cache;
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v109;
          BOOL v116 = (char *)_os_log_send_and_compose_impl();
          v961[0] = 16;
          LOBYTE(aBlock) = 0;
          if (__nwlog_fault(v116, v961, &aBlock))
          {
            if (v961[0] == 17)
            {
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              uint64_t v117 = gLogObj;
              os_log_type_t v118 = v961[0];
              if (os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v961[0]))
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v109;
                uint64_t v119 = "%{public}s connection %p not in idle list, cannot remove";
LABEL_428:
                _os_log_impl(&dword_1830D4000, v117, v118, v119, buf, 0x16u);
              }
            }
            else if ((_BYTE)aBlock)
            {
              int v176 = (char *)__nw_create_backtrace_string();
              uint64_t v117 = __nwlog_obj();
              os_log_type_t v118 = v961[0];
              BOOL v177 = os_log_type_enabled(v117, (os_log_type_t)v961[0]);
              if (v176)
              {
                if (v177)
                {
                  *(_DWORD *)buf = 136446722;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v109;
                  *(_WORD *)&buf[22] = 2082;
                  uint64_t v959 = (uint64_t)v176;
                  _os_log_impl(&dword_1830D4000, v117, v118, "%{public}s connection %p not in idle list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
                }
                free(v176);
                goto LABEL_429;
              }
              if (v177)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v109;
                uint64_t v119 = "%{public}s connection %p not in idle list, cannot remove, no backtrace";
                goto LABEL_428;
              }
            }
            else
            {
              uint64_t v117 = __nwlog_obj();
              os_log_type_t v118 = v961[0];
              if (os_log_type_enabled(v117, (os_log_type_t)v961[0]))
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v109;
                uint64_t v119 = "%{public}s connection %p not in idle list, cannot remove, backtrace limit exceeded";
                goto LABEL_428;
              }
            }
          }
LABEL_429:
          uint64_t v105 = v937;
          if (v116) {
            free(v116);
          }
          uint64_t v24 = v938;
          p_cache = v115;
          uint64_t v114 = (_WORD *)(v109 + 872);
          goto LABEL_479;
        }
        uint64_t v140 = *(void *)(v109 + 592);
        uint64_t v141 = *(void **)(v109 + 600);
        if (v140)
        {
          *(void *)(v140 + 600) = v141;
          uint64_t v141 = *(void **)(v109 + 600);
        }
        else
        {
          *(void *)(v24 + 216) = v141;
        }
        *uint64_t v141 = v140;
        *(void *)(v109 + 592) = 0;
        *(void *)(v109 + 600) = 0;
        int v181 = *(_DWORD *)(v24 + 340);
        *(_DWORD *)(v24 + 340) = v181 - 1;
        if (v181)
        {
LABEL_473:
          int v281 = (unsigned __int16)*v114;
          unsigned int v282 = (v281 | (*(unsigned __int8 *)(v109 + 874) << 16)) & 0xFFF7FFFF;
          *uint64_t v114 = v281;
          *(unsigned char *)(v109 + 874) = BYTE2(v282);
          if ((*(unsigned char *)(v109 + 158) & 1) == 0)
          {
            if (*((unsigned char *)p_cache + 3665))
            {
              BOOL v655 = p_cache;
              uint64_t v656 = __nwlog_obj();
              BOOL v657 = os_log_type_enabled(v656, OS_LOG_TYPE_DEBUG);
              p_cache = v655;
              uint64_t v24 = v938;
              if (v657)
              {
                uint64_t v658 = *(void *)(v109 + 488);
                int v659 = *(_DWORD *)(*(void *)(v109 + 480) + 372);
                int v660 = *(_DWORD *)(v109 + 860);
                if (v658) {
                  LODWORD(v658) = *(_DWORD *)(v658 + 424);
                }
                int v661 = *(_DWORD *)(v938 + 340);
                *(_DWORD *)buf = 136448002;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v109 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v959 = (uint64_t)" ";
                *(_WORD *)v960 = 1024;
                *(_DWORD *)&v960[2] = v659;
                *(_WORD *)&v960[6] = 1024;
                *(_DWORD *)&v960[8] = v660;
                *(_WORD *)&v960[12] = 1024;
                *(_DWORD *)&v960[14] = v658;
                *(_WORD *)&v960[18] = 2048;
                *(void *)&v960[20] = v109;
                *(_WORD *)&v960[28] = 1024;
                *(_DWORD *)&v960[30] = v661;
                _os_log_impl(&dword_1830D4000, v656, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed idle connection %p, now have %u idle connections", buf, 0x42u);
                uint64_t v24 = v938;
                uint64_t v105 = v937;
                p_cache = v655;
              }
            }
          }
          if (*(void *)(v109 + 784))
          {
            if ((*(unsigned char *)(v109 + 158) & 1) == 0)
            {
              if (*((unsigned char *)p_cache + 3665))
              {
                v677 = p_cache;
                os_log_type_t v678 = __nwlog_obj();
                BOOL v679 = os_log_type_enabled(v678, OS_LOG_TYPE_DEBUG);
                p_cache = v677;
                if (v679)
                {
                  uint64_t v680 = *(void *)(v109 + 488);
                  int v681 = *(_DWORD *)(*(void *)(v109 + 480) + 372);
                  int v682 = *(_DWORD *)(v109 + 860);
                  if (v680) {
                    LODWORD(v680) = *(_DWORD *)(v680 + 424);
                  }
                  *(_DWORD *)buf = 136447746;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v109 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v959 = (uint64_t)" ";
                  *(_WORD *)v960 = 1024;
                  *(_DWORD *)&v960[2] = v681;
                  *(_WORD *)&v960[6] = 1024;
                  *(_DWORD *)&v960[8] = v682;
                  *(_WORD *)&v960[12] = 1024;
                  *(_DWORD *)&v960[14] = v680;
                  *(_WORD *)&v960[18] = 2048;
                  *(void *)&v960[20] = v109;
                  _os_log_impl(&dword_1830D4000, v678, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> deactivating destroy timer for connection %p", buf, 0x3Cu);
                  uint64_t v105 = v937;
                  p_cache = v677;
                }
              }
            }
            uint64_t v283 = p_cache;
            nw_queue_cancel_source(*(void *)(v109 + 784));
            p_cache = v283;
            *(void *)(v109 + 784) = 0;
            uint64_t v24 = v938;
          }
LABEL_479:
          if ((*(unsigned char *)(v24 + 158) & 1) == 0)
          {
            if (*((unsigned char *)p_cache + 3665))
            {
              v630 = p_cache;
              uint64_t v631 = __nwlog_obj();
              BOOL v632 = os_log_type_enabled(v631, OS_LOG_TYPE_DEBUG);
              p_cache = v630;
              uint64_t v24 = v938;
              if (v632)
              {
                int v633 = *(_DWORD *)(v938 + 372);
                int v634 = *(_DWORD *)(v105 + 424);
                *(_DWORD *)buf = 136447490;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v933;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v959 = (uint64_t)" ";
                *(_WORD *)v960 = 1024;
                *(_DWORD *)&v960[2] = v633;
                *(_WORD *)&v960[6] = 1024;
                *(_DWORD *)&v960[8] = v634;
                *(_WORD *)&v960[12] = 2048;
                *(void *)&v960[14] = v105;
                _os_log_impl(&dword_1830D4000, v631, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream %u (%p)", buf, 0x36u);
                p_cache = v630;
                uint64_t v24 = v938;
              }
            }
          }
          if ((*(_WORD *)(v105 + 428) & 0x1000) == 0)
          {
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v105;
            uint64_t v284 = (char *)_os_log_send_and_compose_impl();
            v961[0] = 16;
            LOBYTE(aBlock) = 0;
            if (!__nwlog_fault(v284, v961, &aBlock)) {
              goto LABEL_509;
            }
            if (v961[0] == 17)
            {
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              uint64_t v285 = gLogObj;
              os_log_type_t v286 = v961[0];
              if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v961[0])) {
                goto LABEL_509;
              }
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v105;
              unsigned int v287 = "%{public}s stream %p not in pending list, cannot remove";
            }
            else if ((_BYTE)aBlock)
            {
              char v290 = (char *)__nw_create_backtrace_string();
              uint64_t v285 = __nwlog_obj();
              os_log_type_t v286 = v961[0];
              BOOL v291 = os_log_type_enabled(v285, (os_log_type_t)v961[0]);
              if (v290)
              {
                if (v291)
                {
                  *(_DWORD *)buf = 136446722;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v105;
                  *(_WORD *)&buf[22] = 2082;
                  uint64_t v959 = (uint64_t)v290;
                  _os_log_impl(&dword_1830D4000, v285, v286, "%{public}s stream %p not in pending list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
                }
                free(v290);
                goto LABEL_509;
              }
              if (!v291)
              {
LABEL_509:
                if (v284) {
                  free(v284);
                }
                goto LABEL_521;
              }
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v105;
              unsigned int v287 = "%{public}s stream %p not in pending list, cannot remove, no backtrace";
            }
            else
            {
              uint64_t v285 = __nwlog_obj();
              os_log_type_t v286 = v961[0];
              if (!os_log_type_enabled(v285, (os_log_type_t)v961[0])) {
                goto LABEL_509;
              }
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v105;
              unsigned int v287 = "%{public}s stream %p not in pending list, cannot remove, backtrace limit exceeded";
            }
            _os_log_impl(&dword_1830D4000, v285, v286, v287, buf, 0x16u);
            goto LABEL_509;
          }
          uint64_t v288 = *(void *)(v105 + 296);
          uint64_t v289 = *(void **)(v105 + 304);
          if (v288)
          {
            *(void *)(v288 + 304) = v289;
            uint64_t v289 = *(void **)(v105 + 304);
          }
          else
          {
            *(void *)(v24 + 256) = v289;
          }
          *uint64_t v289 = v288;
          *(void *)(v105 + 296) = 0;
          *(void *)(v105 + 304) = 0;
          int v292 = *(_DWORD *)(v24 + 348);
          *(_DWORD *)(v24 + 348) = v292 - 1;
          if (v292)
          {
LABEL_519:
            *(_WORD *)(v105 + 428) &= ~0x1000u;
            if ((*(unsigned char *)(v105 + 158) & 1) == 0)
            {
              if (*((unsigned char *)p_cache + 3665))
              {
                uint64_t v662 = __nwlog_obj();
                if (os_log_type_enabled(v662, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v663 = v105 + 74;
                  uint64_t v664 = *(void *)(v105 + 256);
                  int v665 = *(_DWORD *)(*(void *)(v105 + 248) + 372);
                  if (v664) {
                    LODWORD(v664) = *(_DWORD *)(v664 + 860);
                  }
                  uint64_t v105 = v937;
                  int v666 = *(_DWORD *)(v937 + 424);
                  int v667 = *(_DWORD *)(v938 + 348);
                  *(_DWORD *)buf = 136448258;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v663;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v959 = (uint64_t)" ";
                  *(_WORD *)v960 = 1024;
                  *(_DWORD *)&v960[2] = v665;
                  *(_WORD *)&v960[6] = 1024;
                  *(_DWORD *)&v960[8] = v664;
                  *(_WORD *)&v960[12] = 1024;
                  *(_DWORD *)&v960[14] = v666;
                  *(_WORD *)&v960[18] = 1024;
                  *(_DWORD *)&v960[20] = v666;
                  *(_WORD *)&v960[24] = 2048;
                  *(void *)&v960[26] = v937;
                  *(_WORD *)&v960[34] = 1024;
                  *(_DWORD *)&v960[36] = v667;
                  _os_log_impl(&dword_1830D4000, v662, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed pending stream %u (%p), now have %u pending streams", buf, 0x48u);
                }
              }
            }
LABEL_521:
            if (*(void *)(v105 + 248))
            {
              if (!*(void *)(v109 + 488))
              {
                *(void *)(v105 + 256) = v109;
                *(void *)(v109 + 488) = v105;
                nw_protocol_set_output_handler(v105, *(void *)(v109 + 32));
                nw_protocol_set_input_handler(v109, *(void *)(v105 + 48));
                *(_OWORD *)uint64_t v105 = *(_OWORD *)v109;
                long long v312 = v935[5];
                long long v314 = v935[2];
                long long v313 = v935[3];
                *(_OWORD *)(v109 + 128) = v935[4];
                *(_OWORD *)(v109 + 144) = v312;
                *(_OWORD *)(v109 + 96) = v314;
                *(_OWORD *)(v109 + 112) = v313;
                long long v315 = v935[1];
                *(_OWORD *)(v109 + 64) = *v935;
                *(_OWORD *)(v109 + 80) = v315;
                nw_http_transaction_metadata_set_connection_metadata(*(void **)(v105 + 352), *(void **)(v109 + 768));
                *v114 &= 0xFFD7u;
                *(_DWORD *)(v109 + 864) = 1;
                if ((*(unsigned char *)(v109 + 158) & 1) == 0)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  int v316 = gLogObj;
                  if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v317 = *(void *)(v109 + 488);
                    int v318 = *(_DWORD *)(*(void *)(v109 + 480) + 372);
                    int v319 = *(_DWORD *)(v109 + 860);
                    if (v317) {
                      LODWORD(v317) = *(_DWORD *)(v317 + 424);
                    }
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v109 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v959 = (uint64_t)" ";
                    *(_WORD *)v960 = 1024;
                    *(_DWORD *)&v960[2] = v318;
                    *(_WORD *)&v960[6] = 1024;
                    *(_DWORD *)&v960[8] = v319;
                    *(_WORD *)&v960[12] = 1024;
                    *(_DWORD *)&v960[14] = v317;
                    _os_log_impl(&dword_1830D4000, v316, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                  }
                }
                if ((*(unsigned char *)(v105 + 158) & 1) == 0)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  os_log_type_t v320 = gLogObj;
                  if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
                  {
                    uint64_t v321 = *(void *)(v105 + 256);
                    int v322 = *(_DWORD *)(*(void *)(v105 + 248) + 372);
                    if (v321) {
                      LODWORD(v321) = *(_DWORD *)(v321 + 860);
                    }
                    int v323 = *(_DWORD *)(v105 + 424);
                    *(_DWORD *)buf = 136448002;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v105 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v959 = (uint64_t)" ";
                    *(_WORD *)v960 = 1024;
                    *(_DWORD *)&v960[2] = v322;
                    *(_WORD *)&v960[6] = 1024;
                    *(_DWORD *)&v960[8] = v321;
                    *(_WORD *)&v960[12] = 1024;
                    *(_DWORD *)&v960[14] = v323;
                    *(_WORD *)&v960[18] = 2048;
                    *(void *)&v960[20] = v105;
                    *(_WORD *)&v960[28] = 2048;
                    *(void *)&v960[30] = v109;
                    _os_log_impl(&dword_1830D4000, v320, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
                  }
                }
                goto LABEL_549;
              }
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              uint64_t v306 = *(void *)(v109 + 488);
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v109;
              *(_WORD *)&buf[22] = 2048;
              uint64_t v959 = v306;
              uint64_t v307 = (char *)_os_log_send_and_compose_impl();
              v961[0] = 16;
              LOBYTE(aBlock) = 0;
              if (__nwlog_fault(v307, v961, &aBlock))
              {
                if (v961[0] == 17)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  __int16 v308 = gLogObj;
                  os_log_type_t v309 = v961[0];
                  if (!os_log_type_enabled((os_log_t)gLogObj, (os_log_type_t)v961[0])) {
                    goto LABEL_547;
                  }
                  uint64_t v310 = *(void *)(v109 + 488);
                  *(_DWORD *)buf = 136446722;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v109;
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = v310;
                  uint64_t v311 = "%{public}s Connection %p already has a stream (%p)";
                  goto LABEL_546;
                }
                if (!(_BYTE)aBlock)
                {
                  __int16 v308 = __nwlog_obj();
                  os_log_type_t v309 = v961[0];
                  if (!os_log_type_enabled(v308, (os_log_type_t)v961[0])) {
                    goto LABEL_547;
                  }
                  uint64_t v327 = *(void *)(v109 + 488);
                  *(_DWORD *)buf = 136446722;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v109;
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = v327;
                  uint64_t v311 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                  goto LABEL_546;
                }
                int v324 = (char *)__nw_create_backtrace_string();
                __int16 v308 = __nwlog_obj();
                os_log_type_t v309 = v961[0];
                BOOL v325 = os_log_type_enabled(v308, (os_log_type_t)v961[0]);
                if (v324)
                {
                  if (v325)
                  {
                    uint64_t v326 = *(void *)(v109 + 488);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    *(_WORD *)&unsigned char buf[12] = 2048;
                    *(void *)&buf[14] = v109;
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v959 = v326;
                    *(_WORD *)v960 = 2082;
                    *(void *)&v960[2] = v324;
                    _os_log_impl(&dword_1830D4000, v308, v309, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
                  }
                  free(v324);
                  goto LABEL_547;
                }
                if (v325)
                {
                  uint64_t v328 = *(void *)(v109 + 488);
                  *(_DWORD *)buf = 136446722;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v109;
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = v328;
                  uint64_t v311 = "%{public}s Connection %p already has a stream (%p), no backtrace";
LABEL_546:
                  _os_log_impl(&dword_1830D4000, v308, v309, v311, buf, 0x20u);
                }
              }
LABEL_547:
              if (v307) {
                free(v307);
              }
LABEL_549:
              *(_WORD *)(v105 + 428) |= 0x4000u;
              uint64_t v329 = *(void **)(v105 + 352);
              *(void *)buf = MEMORY[0x1E4F143A8];
              *(void *)&buf[8] = 0x40000000;
              *(void *)&buf[16] = ___ZL50nw_http1_match_idle_connection_with_pending_streamP17nw_protocol_http1_block_invoke;
              uint64_t v959 = (uint64_t)&__block_descriptor_tmp_55_40265;
              *(void *)v960 = v105;
              nw_http_transaction_metadata_set_event_handler(v329, buf);
              nw_protocol_connected(*(void **)(v105 + 48), v105);
              return;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
            uint64_t v619 = (char *)_os_log_send_and_compose_impl();
            v961[0] = 16;
            LOBYTE(aBlock) = 0;
            if (__nwlog_fault(v619, v961, &aBlock))
            {
              if (v961[0] == 17)
              {
                id v620 = __nwlog_obj();
                os_log_type_t v621 = v961[0];
                if (os_log_type_enabled(v620, (os_log_type_t)v961[0]))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  id v622 = "%{public}s called with null http1_stream->protocol_http1";
LABEL_1157:
                  _os_log_impl(&dword_1830D4000, v620, v621, v622, buf, 0xCu);
                }
              }
              else if ((_BYTE)aBlock)
              {
                uint64_t v668 = (char *)__nw_create_backtrace_string();
                id v620 = __nwlog_obj();
                os_log_type_t v621 = v961[0];
                BOOL v669 = os_log_type_enabled(v620, (os_log_type_t)v961[0]);
                if (v668)
                {
                  if (v669)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v668;
                    _os_log_impl(&dword_1830D4000, v620, v621, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v668);
                  goto LABEL_1158;
                }
                if (v669)
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  id v622 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
                  goto LABEL_1157;
                }
              }
              else
              {
                id v620 = __nwlog_obj();
                os_log_type_t v621 = v961[0];
                if (os_log_type_enabled(v620, (os_log_type_t)v961[0]))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  id v622 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                  goto LABEL_1157;
                }
              }
            }
LABEL_1158:
            if (v619) {
              free(v619);
            }
            uint64_t v105 = v937;
            goto LABEL_549;
          }
          BOOL v293 = p_cache;
          uint64_t v294 = v24;
          __nwlog_obj();
          uint64_t v295 = *(unsigned int *)(v294 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v959 = 1;
          *(_WORD *)v960 = 2048;
          *(void *)&v960[2] = v295;
          int v296 = (char *)_os_log_send_and_compose_impl();
          v961[0] = 16;
          LOBYTE(aBlock) = 0;
          if (__nwlog_fault(v296, v961, &aBlock))
          {
            if (v961[0] == 17)
            {
              uint64_t v297 = __nwlog_obj();
              os_log_type_t v298 = v961[0];
              if (os_log_type_enabled(v297, (os_log_type_t)v961[0]))
              {
                uint64_t v299 = *(unsigned int *)(v938 + 348);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->pending_stream_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = 1;
                *(_WORD *)v960 = 2048;
                *(void *)&v960[2] = v299;
                id v300 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_515:
                _os_log_impl(&dword_1830D4000, v297, v298, v300, buf, 0x2Au);
              }
            }
            else if ((_BYTE)aBlock)
            {
              int v301 = (char *)__nw_create_backtrace_string();
              uint64_t v297 = __nwlog_obj();
              os_log_type_t v298 = v961[0];
              BOOL v302 = os_log_type_enabled(v297, (os_log_type_t)v961[0]);
              if (v301)
              {
                if (v302)
                {
                  uint64_t v303 = *(unsigned int *)(v938 + 348);
                  *(_DWORD *)buf = 136447234;
                  *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->pending_stream_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v303;
                  *(_WORD *)&v960[10] = 2082;
                  *(void *)&v960[12] = v301;
                  _os_log_impl(&dword_1830D4000, v297, v298, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                }
                free(v301);
                goto LABEL_516;
              }
              if (v302)
              {
                uint64_t v305 = *(unsigned int *)(v938 + 348);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->pending_stream_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = 1;
                *(_WORD *)v960 = 2048;
                *(void *)&v960[2] = v305;
                id v300 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
                goto LABEL_515;
              }
            }
            else
            {
              uint64_t v297 = __nwlog_obj();
              os_log_type_t v298 = v961[0];
              if (os_log_type_enabled(v297, (os_log_type_t)v961[0]))
              {
                uint64_t v304 = *(unsigned int *)(v938 + 348);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->pending_stream_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = 1;
                *(_WORD *)v960 = 2048;
                *(void *)&v960[2] = v304;
                id v300 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
                goto LABEL_515;
              }
            }
          }
LABEL_516:
          if (v296) {
            free(v296);
          }
          *(_DWORD *)(v938 + 348) = 0;
          uint64_t v105 = v937;
          p_cache = v293;
          goto LABEL_519;
        }
        os_log_type_t v182 = p_cache;
        uint64_t v183 = v24;
        __nwlog_obj();
        uint64_t v184 = *(unsigned int *)(v183 + 340);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->idle_connections_count";
        *(_WORD *)&buf[22] = 2048;
        uint64_t v959 = 1;
        *(_WORD *)v960 = 2048;
        *(void *)&v960[2] = v184;
        uint64_t v185 = (char *)_os_log_send_and_compose_impl();
        v961[0] = 16;
        LOBYTE(aBlock) = 0;
        if (__nwlog_fault(v185, v961, &aBlock))
        {
          if (v961[0] == 17)
          {
            BOOL v186 = __nwlog_obj();
            os_log_type_t v187 = v961[0];
            if (os_log_type_enabled(v186, (os_log_type_t)v961[0]))
            {
              uint64_t v188 = *(unsigned int *)(v938 + 340);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->idle_connections_count";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v959 = 1;
              *(_WORD *)v960 = 2048;
              *(void *)&v960[2] = v188;
              int v189 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_469:
              _os_log_impl(&dword_1830D4000, v186, v187, v189, buf, 0x2Au);
            }
          }
          else if ((_BYTE)aBlock)
          {
            int v210 = (char *)__nw_create_backtrace_string();
            BOOL v186 = __nwlog_obj();
            os_log_type_t v187 = v961[0];
            BOOL v211 = os_log_type_enabled(v186, (os_log_type_t)v961[0]);
            if (v210)
            {
              if (v211)
              {
                uint64_t v212 = *(unsigned int *)(v938 + 340);
                *(_DWORD *)buf = 136447234;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->idle_connections_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = 1;
                *(_WORD *)v960 = 2048;
                *(void *)&v960[2] = v212;
                *(_WORD *)&v960[10] = 2082;
                *(void *)&v960[12] = v210;
                _os_log_impl(&dword_1830D4000, v186, v187, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
              }
              free(v210);
              goto LABEL_470;
            }
            if (v211)
            {
              uint64_t v280 = *(unsigned int *)(v938 + 340);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->idle_connections_count";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v959 = 1;
              *(_WORD *)v960 = 2048;
              *(void *)&v960[2] = v280;
              int v189 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
              goto LABEL_469;
            }
          }
          else
          {
            BOOL v186 = __nwlog_obj();
            os_log_type_t v187 = v961[0];
            if (os_log_type_enabled(v186, (os_log_type_t)v961[0]))
            {
              uint64_t v277 = *(unsigned int *)(v938 + 340);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->idle_connections_count";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v959 = 1;
              *(_WORD *)v960 = 2048;
              *(void *)&v960[2] = v277;
              int v189 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
              goto LABEL_469;
            }
          }
        }
LABEL_470:
        if (v185) {
          free(v185);
        }
        uint64_t v24 = v938;
        *(_DWORD *)(v938 + 340) = 0;
        p_cache = v182;
        goto LABEL_473;
      }
    }
    if ((*(unsigned char *)(v24 + 158) & 1) == 0)
    {
      if (*((unsigned char *)p_cache + 3665))
      {
        int v614 = v107;
        uint64_t v615 = p_cache;
        uint64_t v616 = __nwlog_obj();
        BOOL v617 = os_log_type_enabled(v616, OS_LOG_TYPE_DEBUG);
        p_cache = v615;
        int v107 = v614;
        uint64_t v24 = v938;
        if (v617)
        {
          int v618 = *(_DWORD *)(v938 + 372);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_get_next_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v938 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v959 = (uint64_t)" ";
          *(_WORD *)v960 = 1024;
          *(_DWORD *)&v960[2] = v618;
          _os_log_impl(&dword_1830D4000, v616, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> no idle connections", buf, 0x26u);
          p_cache = v615;
          int v107 = v614;
          uint64_t v24 = v938;
        }
      }
    }
    if (*(void *)(v105 + 256))
    {
      if ((*(unsigned char *)(v105 + 158) & 1) == 0)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v120 = gLogObj;
        BOOL v121 = os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG);
        uint64_t v24 = v938;
        if (v121)
        {
          uint64_t v122 = *(void *)(v105 + 256);
          int v123 = *(_DWORD *)(*(void *)(v105 + 248) + 372);
          if (v122) {
            LODWORD(v122) = *(_DWORD *)(v122 + 860);
          }
          int v124 = *(_DWORD *)(v105 + 424);
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v105 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v959 = (uint64_t)" ";
          *(_WORD *)v960 = 1024;
          *(_DWORD *)&v960[2] = v123;
          *(_WORD *)&v960[6] = 1024;
          *(_DWORD *)&v960[8] = v122;
          *(_WORD *)&v960[12] = 1024;
          *(_DWORD *)&v960[14] = v124;
          int v125 = "%{public}s %{public}s%s<i%u:c%u:s%u> stream already has current connection, ignoring";
          uint64_t v126 = v120;
          uint32_t v127 = 50;
LABEL_249:
          _os_log_impl(&dword_1830D4000, v126, OS_LOG_TYPE_DEBUG, v125, buf, v127);
          uint64_t v24 = v938;
          goto LABEL_250;
        }
      }
      goto LABEL_250;
    }
    BOOL v936 = v107;
    if ((*(_WORD *)(v105 + 428) & 8) == 0)
    {
      if (*(_DWORD *)(v24 + 336) + *(_DWORD *)(v24 + 352) >= (*(_DWORD *)(v24 + 368)
                                                                           + *(_DWORD *)(v24 + 364)))
      {
        if ((*(unsigned char *)(v105 + 158) & 1) == 0)
        {
          int v194 = __nwlog_obj();
          BOOL v195 = os_log_type_enabled(v194, OS_LOG_TYPE_DEBUG);
          uint64_t v24 = v938;
          if (v195)
          {
            uint64_t v196 = *(void *)(v105 + 256);
            int v197 = *(_DWORD *)(*(void *)(v105 + 248) + 372);
            if (v196) {
              LODWORD(v196) = *(_DWORD *)(v196 + 860);
            }
            int v198 = *(_DWORD *)(v105 + 424);
            int v199 = *(_DWORD *)(v938 + 364);
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v105 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v197;
            *(_WORD *)&v960[6] = 1024;
            *(_DWORD *)&v960[8] = v196;
            *(_WORD *)&v960[12] = 1024;
            *(_DWORD *)&v960[14] = v198;
            *(_WORD *)&v960[18] = 1024;
            *(_DWORD *)&v960[20] = v199;
            int v125 = "%{public}s %{public}s%s<i%u:c%u:s%u> already at max connection width %u, cannot create new connection";
            uint64_t v126 = v194;
            uint32_t v127 = 56;
            goto LABEL_249;
          }
        }
LABEL_250:
        if ((*(unsigned char *)(v24 + 158) & 1) == 0)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v128 = gLogObj;
          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
          {
            int v129 = *(_DWORD *)(v938 + 372);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_match_idle_connection_with_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v938 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v129;
            uint64_t v130 = "%{public}s %{public}s%s<i%u> cannot make new connection, waiting for other requests to finish";
LABEL_256:
            int v132 = v128;
            uint32_t v133 = 38;
LABEL_257:
            _os_log_impl(&dword_1830D4000, v132, OS_LOG_TYPE_DEBUG, v130, buf, v133);
            return;
          }
        }
        return;
      }
      if ((*(unsigned char *)(v105 + 158) & 1) == 0)
      {
        if (*((unsigned char *)p_cache + 3665))
        {
          v740 = p_cache;
          v741 = __nwlog_obj();
          BOOL v742 = os_log_type_enabled(v741, OS_LOG_TYPE_DEBUG);
          p_cache = v740;
          uint64_t v24 = v938;
          if (v742)
          {
            uint64_t v743 = v105 + 74;
            uint64_t v744 = *(void *)(v105 + 256);
            int v745 = *(_DWORD *)(*(void *)(v105 + 248) + 372);
            if (v744) {
              LODWORD(v744) = *(_DWORD *)(v744 + 860);
            }
            uint64_t v105 = v937;
            int v746 = *(_DWORD *)(v937 + 424);
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v743;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v745;
            *(_WORD *)&v960[6] = 1024;
            *(_DWORD *)&v960[8] = v744;
            *(_WORD *)&v960[12] = 1024;
            *(_DWORD *)&v960[14] = v746;
            _os_log_impl(&dword_1830D4000, v741, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> width allows new connection, creating", buf, 0x32u);
            uint64_t v24 = v938;
            p_cache = v740;
          }
        }
      }
      if ((*(_WORD *)(v105 + 428) & 0x1000) == 0)
      {
LABEL_810:
        if (*(void *)(v105 + 32))
        {
          if ((*(unsigned char *)(v105 + 158) & 1) == 0)
          {
            if (*((unsigned char *)p_cache + 3665))
            {
              int v759 = __nwlog_obj();
              if (os_log_type_enabled(v759, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v760 = v105 + 74;
                uint64_t v761 = *(void *)(v105 + 256);
                int v762 = *(_DWORD *)(*(void *)(v105 + 248) + 372);
                if (v761) {
                  LODWORD(v761) = *(_DWORD *)(v761 + 860);
                }
                uint64_t v105 = v937;
                int v763 = *(_DWORD *)(v937 + 424);
                uint64_t v764 = *(void *)(v937 + 32);
                *(_DWORD *)buf = 136447746;
                *(void *)&uint8_t buf[4] = "nw_http1_establish_new_connection_for_stream";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v760;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v959 = (uint64_t)" ";
                *(_WORD *)v960 = 1024;
                *(_DWORD *)&v960[2] = v762;
                *(_WORD *)&v960[6] = 1024;
                *(_DWORD *)&v960[8] = v761;
                *(_WORD *)&v960[12] = 1024;
                *(_DWORD *)&v960[14] = v763;
                *(_WORD *)&v960[18] = 2048;
                *(void *)&v960[20] = v764;
                _os_log_impl(&dword_1830D4000, v759, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using already established output handler %p", buf, 0x3Cu);
              }
            }
          }
          int v492 = *(_OWORD **)(v105 + 32);
          if (v492)
          {
            uint64_t v493 = *(void **)(v105 + 336);
            if (v493)
            {
              os_log_type_t v494 = *(void **)(v105 + 320);
              if (v494)
              {
                BOOL v495 = malloc_type_calloc(1uLL, 0x370uLL, 0xEAFB8F1AuLL);
                if (v495) {
                  goto LABEL_817;
                }
                int v770 = __nwlog_obj();
                os_log_type_enabled(v770, OS_LOG_TYPE_ERROR);
                *(_DWORD *)buf = 136446722;
                *(void *)&uint8_t buf[4] = "strict_calloc";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = 1;
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = 880;
                v771 = (void *)_os_log_send_and_compose_impl();
                if (!__nwlog_abort((uint64_t)v771))
                {
                  free(v771);
LABEL_817:
                  bzero(v495, 0x370uLL);
                  if (nw_protocol_http1_identifier::onceToken != -1) {
                    dispatch_once(&nw_protocol_http1_identifier::onceToken, &__block_literal_global_40283);
                  }
                  uint64_t v496 = v938;
                  *((void *)v495 + 2) = &nw_protocol_http1_identifier::http1_protocol_identifier;
                  if (nw_protocol_http1_get_callbacks(void)::onceToken != -1)
                  {
                    dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
                    uint64_t v496 = v938;
                  }
                  *((void *)v495 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
                  *((_DWORD *)v495 + 46) = 3;
                  *((void *)v495 + 22) = v495;
                  *((void *)v495 + 5) = v495 + 10;
                  *((void *)v495 + 60) = v496;
                  nw_protocol_set_output_handler((uint64_t)v495, (uint64_t)v492);
                  *(void *)buf = os_retain(v493);
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v495 + 47), buf);
                  *(void *)buf = os_retain(v494);
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v495 + 46), buf);
                  *(void *)buf = nw_parameters_copy_context(v494);
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v495 + 31), buf);
                  *((void *)v495 + 24) = *(void *)(v496 + 192);
                  uint64_t v497 = (void *)*((void *)v495 + 62);
                  *(void *)v961 = MEMORY[0x1E4F143A8];
                  *(void *)&v961[8] = 0x40000000;
                  *(void *)&v961[16] = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke;
                  os_log_type_t v962 = (uint64_t (*)(uint64_t, uint64_t))&__block_descriptor_tmp_43_40284;
                  v963 = (void (*)(uint64_t))v495;
                  *(void *)buf = nw_http_connection_create_metadata(v497, v961, 0);
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v495 + 48), buf);
                  nw_http_connection_metadata_set_version(*((void **)v495 + 96), 3);
                  nw_http_connection_metadata_set_shared_connection_pool_metadata(*((void **)v495 + 96), *(void **)(v496 + 312));
                  *((void *)v495 + 77) = 0;
                  *((void *)v495 + 78) = (char *)v495 + 616;
                  *((void *)v495 + 79) = 0;
                  *((void *)v495 + 80) = (char *)v495 + 632;
                  *((void *)v495 + 81) = 0;
                  *((void *)v495 + 82) = (char *)v495 + 648;
                  *((void *)v495 + 83) = 0;
                  *((void *)v495 + 84) = (char *)v495 + 664;
                  *((void *)v495 + 86) = (char *)v495 + 680;
                  *((void *)v495 + 85) = 0;
                  nw_frame_cache_init((uint64_t)v495 + 696, (uint64_t)v495, 256, 0x40000, 16);
                  uint64_t v498 = *((void *)v495 + 60);
                  if (v498)
                  {
                    *(_OWORD *)((char *)v495 + 360) = 0u;
                    *(_OWORD *)((char *)v495 + 376) = 0u;
                    *(_OWORD *)((char *)v495 + 392) = 0u;
                    *(_OWORD *)((char *)v495 + 408) = 0u;
                    *(_OWORD *)((char *)v495 + 424) = 0u;
                    *(_OWORD *)((char *)v495 + 440) = 0u;
                    *(_OWORD *)((char *)v495 + 328) = 0u;
                    *(_OWORD *)((char *)v495 + 344) = 0u;
                    *((void *)v495 + 37) = nw_http1_on_message_begin;
                    *((void *)v495 + 48) = nw_http1_on_message_complete;
                    *((void *)v495 + 46) = nw_http1_on_headers_complete;
                    *((void *)v495 + 59) = nw_http1_on_reset;
                    *((void *)v495 + 40) = nw_http1_on_method;
                    *((void *)v495 + 51) = nw_http1_on_method_complete;
                    *((void *)v495 + 38) = nw_http1_on_url;
                    *((void *)v495 + 49) = nw_http1_on_url_complete;
                    *((void *)v495 + 39) = nw_http1_on_status;
                    *((void *)v495 + 50) = nw_http1_on_status_complete;
                    *((void *)v495 + 42) = nw_http1_on_header_field;
                    *((void *)v495 + 53) = nw_http1_on_header_field_complete;
                    *((void *)v495 + 43) = nw_http1_on_header_value;
                    *((void *)v495 + 54) = nw_http1_on_header_value_complete;
                    *((void *)v495 + 47) = nw_http1_on_body;
                    *((void *)v495 + 57) = nw_http1_on_chunk_header;
                    *((void *)v495 + 58) = nw_http1_on_chunk_complete;
                    char v499 = *(unsigned char *)(v498 + 376);
                    *(_OWORD *)((char *)v495 + 248) = 0u;
                    *(_OWORD *)((char *)v495 + 200) = 0u;
                    *(_OWORD *)((char *)v495 + 264) = 0u;
                    *(_OWORD *)((char *)v495 + 232) = 0u;
                    *(_OWORD *)((char *)v495 + 216) = 0u;
                    if (v499) {
                      char v500 = 1;
                    }
                    else {
                      char v500 = 2;
                    }
                    *((unsigned char *)v495 + 272) = v500;
                    *((void *)v495 + 35) = 0;
                    *((void *)v495 + 36) = (char *)v495 + 296;
                    *((_WORD *)v495 + 139) = 16131;
                    *((void *)v495 + 31) = v495;
                    *((void *)v495 + 32) = 238;
                    uint64_t v501 = v937;
                    if ((*((unsigned char *)v495 + 158) & 1) == 0)
                    {
                      uint64_t v502 = __nwlog_obj();
                      if (os_log_type_enabled(v502, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v503 = *((void *)v495 + 61);
                        int v504 = *(_DWORD *)(*((void *)v495 + 60) + 372);
                        int v505 = *((_DWORD *)v495 + 215);
                        if (v503) {
                          LODWORD(v503) = *(_DWORD *)(v503 + 424);
                        }
                        *(_DWORD *)buf = 136448258;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_log_parser_version";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = (char *)v495 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v959 = (uint64_t)" ";
                        *(_WORD *)v960 = 1024;
                        *(_DWORD *)&v960[2] = v504;
                        *(_WORD *)&v960[6] = 1024;
                        *(_DWORD *)&v960[8] = v505;
                        *(_WORD *)&v960[12] = 1024;
                        *(_DWORD *)&v960[14] = v503;
                        *(_WORD *)&v960[18] = 1024;
                        *(_DWORD *)&v960[20] = 9;
                        *(_WORD *)&v960[24] = 1024;
                        *(_DWORD *)&v960[26] = 2;
                        *(_WORD *)&v960[30] = 1024;
                        *(_DWORD *)&v960[32] = 1;
                        _os_log_impl(&dword_1830D4000, v502, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using http parser v%u.%u.%u", buf, 0x44u);
                      }
                    }
                    goto LABEL_830;
                  }
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                  v772 = (char *)_os_log_send_and_compose_impl();
                  v953[0] = 16;
                  LOBYTE(v941[0]) = 0;
                  if (__nwlog_fault(v772, v953, v941))
                  {
                    if (v953[0] == 17)
                    {
                      os_log_type_t v773 = __nwlog_obj();
                      os_log_type_t v774 = v953[0];
                      if (os_log_type_enabled(v773, (os_log_type_t)v953[0]))
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                        v775 = "%{public}s called with null http1_connection->protocol_http1";
LABEL_1522:
                        _os_log_impl(&dword_1830D4000, v773, v774, v775, buf, 0xCu);
                      }
                    }
                    else if (LOBYTE(v941[0]))
                    {
                      v833 = (char *)__nw_create_backtrace_string();
                      os_log_type_t v773 = __nwlog_obj();
                      os_log_type_t v774 = v953[0];
                      BOOL v834 = os_log_type_enabled(v773, (os_log_type_t)v953[0]);
                      if (v833)
                      {
                        if (v834)
                        {
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v833;
                          _os_log_impl(&dword_1830D4000, v773, v774, "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                        }
                        free(v833);
                        goto LABEL_1523;
                      }
                      if (v834)
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                        v775 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
                        goto LABEL_1522;
                      }
                    }
                    else
                    {
                      os_log_type_t v773 = __nwlog_obj();
                      os_log_type_t v774 = v953[0];
                      if (os_log_type_enabled(v773, (os_log_type_t)v953[0]))
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                        v775 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
                        goto LABEL_1522;
                      }
                    }
                  }
LABEL_1523:
                  if (v772) {
                    free(v772);
                  }
                  uint64_t v501 = v937;
LABEL_830:
                  *(void *)buf = 0;
                  *(void *)&buf[8] = buf;
                  *(void *)&buf[16] = 0x2000000000;
                  uint64_t v959 = (uint64_t)v495;
                  uint64_t aBlock = MEMORY[0x1E4F143A8];
                  uint64_t v943 = 0x40000000;
                  BOOL v944 = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke_2;
                  v945 = &unk_1E5241178;
                  BOOL v946 = (uint64_t *)buf;
                  *((void *)v495 + 76) = _Block_copy(&aBlock);
                  _Block_object_dispose(buf, 8);
                  if ((*((unsigned char *)v495 + 158) & 1) == 0)
                  {
                    if (gLogDatapath)
                    {
                      BOOL v785 = __nwlog_obj();
                      if (os_log_type_enabled(v785, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v786 = *((void *)v495 + 61);
                        int v787 = *(_DWORD *)(*((void *)v495 + 60) + 372);
                        int v788 = *((_DWORD *)v495 + 215);
                        if (v786) {
                          LODWORD(v786) = *(_DWORD *)(v786 + 424);
                        }
                        *(_DWORD *)buf = 136447746;
                        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = (char *)v495 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v959 = (uint64_t)" ";
                        *(_WORD *)v960 = 1024;
                        *(_DWORD *)&v960[2] = v787;
                        *(_WORD *)&v960[6] = 1024;
                        *(_DWORD *)&v960[8] = v788;
                        *(_WORD *)&v960[12] = 1024;
                        *(_DWORD *)&v960[14] = v786;
                        *(_WORD *)&v960[18] = 2048;
                        *(void *)&v960[20] = v495;
                        _os_log_impl(&dword_1830D4000, v785, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created %p", buf, 0x3Cu);
                        uint64_t v501 = v937;
                      }
                    }
                  }
                  v506 = (NSObject **)(v495 + 32);
                  nw_protocol_replace_input_handler((uint64_t)v492, v501, (uint64_t)v495);
                  *BOOL v495 = *v492;
                  uint64_t v507 = (void *)*((void *)v495 + 92);
                  if (v507)
                  {
                    uint64_t v508 = v938;
                    BOOL v509 = (void **)(NWConcrete_nw_resolution_report + 16);
                    if (!*((void *)v495 + 66))
                    {
                      uint64_t v510 = (void **)(v495 + 35);
                      id v511 = nw_parameters_copy_context(*((void **)v495 + 92));
                      *(void *)buf = nw_path_copy_flow_registration(v511, (uint64_t)v495);
                      nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v495 + 35), buf);
                      os_log_type_t v512 = (void *)*((void *)v495 + 70);
                      if (v512)
                      {
                        id v513 = nw_path_flow_registration_copy_endpoint(v512);
                        id v514 = nw_path_flow_registration_copy_parameters(*v510);
                        *(void *)buf = nw_endpoint_copy_association_with_evaluator(v513, v514, 0);
                        nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v495 + 33), buf);
                        if (*((void *)v495 + 66))
                        {
                          *(void *)buf = nw_protocol_instance_stub_create((nw_protocol *)v495);
                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v495 + 34), buf);
                          nw_association_register_internal(*((void **)v495 + 66), v507, *((void **)v495 + 68), 0, 0, &__block_literal_global_69);
                          id v515 = nw_association_copy_current_path(*((void **)v495 + 66), v514);
                          if (v515)
                          {
                            int v516 = v515;
                            int v517 = nw_path_copy_for_flow_registration(v515, *v510);
                            if (v517)
                            {
                              uint64_t v518 = v517;
                              if (*v506 != v517)
                              {
                                *(void *)buf = os_retain(v517);
                                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v495 + 32), buf);
                              }
                              if (nw_path_has_flows(v518)) {
                                __int16 v519 = 4096;
                              }
                              else {
                                __int16 v519 = 0;
                              }
                              int v520 = *((_WORD *)v495 + 436) & 0xEFFF | (*((unsigned __int8 *)v495 + 874) << 16);
                              *((_WORD *)v495 + 436) = *((_WORD *)v495 + 436) & 0xEFFF | v519;
                              *((unsigned char *)v495 + 874) = BYTE2(v520);
                              id v521 = nw_parameters_copy_effective_proxy_config(v507);
                              if (v521)
                              {
                                int v522 = v521;
                                if (nw_path_has_proxy_config(v516, v521))
                                {
                                  *(void *)buf = os_retain(v522);
                                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v495 + 36), buf);
                                }
                                os_release(v522);
                              }
                              os_release(v518);
                            }
                            os_release(v516);
                          }
                        }
                        if (v514) {
                          os_release(v514);
                        }
                        if (v513) {
                          os_release(v513);
                        }
                      }
                      uint64_t v508 = v938;
                      BOOL v509 = (void **)(NWConcrete_nw_resolution_report + 16);
                      if (v511)
                      {
                        os_release(v511);
                        BOOL v509 = (void **)(NWConcrete_nw_resolution_report + 16);
                        uint64_t v508 = v938;
                      }
                    }
                    int v523 = *v506;
                    if (*v506)
                    {
LABEL_856:
                      BOOL v524 = nw_path_uses_interface_type(v523, nw_interface_type_cellular);
                      BOOL v509 = (void **)(NWConcrete_nw_resolution_report + 16);
                      uint64_t v508 = v938;
                      if (v524) {
                        *((void *)v495 + 24) = 1000;
                      }
                    }
LABEL_858:
                    uint64_t v525 = *(unsigned int *)(v508 + 336) + 1;
                    uint64_t v526 = v525 << 31 >> 31;
                    *(_DWORD *)(v508 + 336) = v525;
                    uint64_t v527 = v937;
                    if (v526 == v525 && (v526 & 0x8000000000000000) == 0) {
                      goto LABEL_896;
                    }
                    uint64_t v528 = v508;
                    __nwlog_obj();
                    uint64_t v529 = *(unsigned int *)(v528 + 336);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->connections_count";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v959 = 1;
                    *(_WORD *)v960 = 2048;
                    *(void *)&v960[2] = v529;
                    uint64_t v530 = (char *)_os_log_send_and_compose_impl();
                    v961[0] = 16;
                    LOBYTE(aBlock) = 0;
                    if (__nwlog_fault(v530, v961, &aBlock))
                    {
                      if (v961[0] == 17)
                      {
                        int v531 = __nwlog_obj();
                        os_log_type_t v532 = v961[0];
                        if (os_log_type_enabled(v531, (os_log_type_t)v961[0]))
                        {
                          uint64_t v533 = *(unsigned int *)(v938 + 336);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->connections_count";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v959 = 1;
                          *(_WORD *)v960 = 2048;
                          *(void *)&v960[2] = v533;
                          BOOL v534 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_892:
                          _os_log_impl(&dword_1830D4000, v531, v532, v534, buf, 0x2Au);
                        }
                      }
                      else if ((_BYTE)aBlock)
                      {
                        os_log_type_t v550 = (char *)__nw_create_backtrace_string();
                        int v531 = __nwlog_obj();
                        os_log_type_t v532 = v961[0];
                        BOOL v551 = os_log_type_enabled(v531, (os_log_type_t)v961[0]);
                        if (v550)
                        {
                          if (v551)
                          {
                            uint64_t v552 = *(unsigned int *)(v938 + 336);
                            *(_DWORD *)buf = 136447234;
                            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->connections_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v959 = 1;
                            *(_WORD *)v960 = 2048;
                            *(void *)&v960[2] = v552;
                            *(_WORD *)&v960[10] = 2082;
                            *(void *)&v960[12] = v550;
                            _os_log_impl(&dword_1830D4000, v531, v532, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                          }
                          free(v550);
                          goto LABEL_893;
                        }
                        if (v551)
                        {
                          uint64_t v557 = *(unsigned int *)(v938 + 336);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->connections_count";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v959 = 1;
                          *(_WORD *)v960 = 2048;
                          *(void *)&v960[2] = v557;
                          BOOL v534 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                          goto LABEL_892;
                        }
                      }
                      else
                      {
                        int v531 = __nwlog_obj();
                        os_log_type_t v532 = v961[0];
                        if (os_log_type_enabled(v531, (os_log_type_t)v961[0]))
                        {
                          uint64_t v556 = *(unsigned int *)(v938 + 336);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->connections_count";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v959 = 1;
                          *(_WORD *)v960 = 2048;
                          *(void *)&v960[2] = v556;
                          BOOL v534 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                          goto LABEL_892;
                        }
                      }
                    }
LABEL_893:
                    if (v530) {
                      free(v530);
                    }
                    uint64_t v508 = v938;
                    *(_DWORD *)(v938 + 336) = -1;
                    uint64_t v527 = v937;
                    BOOL v509 = (void **)(NWConcrete_nw_resolution_report + 16);
LABEL_896:
                    uint64_t v558 = *(unsigned int *)(v508 + 360) + 1;
                    uint64_t v559 = v558 << 31 >> 31;
                    *(_DWORD *)(v508 + 360) = v558;
                    if (v559 == v558 && (v559 & 0x8000000000000000) == 0) {
                      goto LABEL_915;
                    }
                    uint64_t v560 = v508;
                    __nwlog_obj();
                    uint64_t v561 = *(unsigned int *)(v560 + 360);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->next_connection_log_num";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v959 = 1;
                    *(_WORD *)v960 = 2048;
                    *(void *)&v960[2] = v561;
                    v562 = (char *)_os_log_send_and_compose_impl();
                    v961[0] = 16;
                    LOBYTE(aBlock) = 0;
                    if (__nwlog_fault(v562, v961, &aBlock))
                    {
                      if (v961[0] == 17)
                      {
                        BOOL v563 = __nwlog_obj();
                        os_log_type_t v564 = v961[0];
                        if (os_log_type_enabled(v563, (os_log_type_t)v961[0]))
                        {
                          uint64_t v565 = *(unsigned int *)(v938 + 360);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->next_connection_log_num";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v959 = 1;
                          *(_WORD *)v960 = 2048;
                          *(void *)&v960[2] = v565;
                          int v566 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_911:
                          _os_log_impl(&dword_1830D4000, v563, v564, v566, buf, 0x2Au);
                        }
                      }
                      else if ((_BYTE)aBlock)
                      {
                        int v567 = (char *)__nw_create_backtrace_string();
                        BOOL v563 = __nwlog_obj();
                        os_log_type_t v564 = v961[0];
                        BOOL v568 = os_log_type_enabled(v563, (os_log_type_t)v961[0]);
                        if (v567)
                        {
                          if (v568)
                          {
                            uint64_t v569 = *(unsigned int *)(v938 + 360);
                            *(_DWORD *)buf = 136447234;
                            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->next_connection_log_num";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v959 = 1;
                            *(_WORD *)v960 = 2048;
                            *(void *)&v960[2] = v569;
                            *(_WORD *)&v960[10] = 2082;
                            *(void *)&v960[12] = v567;
                            _os_log_impl(&dword_1830D4000, v563, v564, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                          }
                          free(v567);
                          goto LABEL_912;
                        }
                        if (v568)
                        {
                          uint64_t v571 = *(unsigned int *)(v938 + 360);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->next_connection_log_num";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v959 = 1;
                          *(_WORD *)v960 = 2048;
                          *(void *)&v960[2] = v571;
                          int v566 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                          goto LABEL_911;
                        }
                      }
                      else
                      {
                        BOOL v563 = __nwlog_obj();
                        os_log_type_t v564 = v961[0];
                        if (os_log_type_enabled(v563, (os_log_type_t)v961[0]))
                        {
                          uint64_t v570 = *(unsigned int *)(v938 + 360);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->next_connection_log_num";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v959 = 1;
                          *(_WORD *)v960 = 2048;
                          *(void *)&v960[2] = v570;
                          int v566 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                          goto LABEL_911;
                        }
                      }
                    }
LABEL_912:
                    if (v562) {
                      free(v562);
                    }
                    LODWORD(v558) = -1;
                    *(_DWORD *)(v938 + 360) = -1;
                    uint64_t v527 = v937;
                    BOOL v509 = NWConcrete_nw_resolution_report.cache;
LABEL_915:
                    *((_DWORD *)v495 + 215) = v558;
                    if ((*((unsigned char *)v495 + 158) & 1) == 0)
                    {
                      if (*((unsigned char *)v509 + 3665))
                      {
                        os_log_type_t v789 = __nwlog_obj();
                        if (os_log_type_enabled(v789, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v790 = *((void *)v495 + 61);
                          int v791 = *(_DWORD *)(*((void *)v495 + 60) + 372);
                          int v792 = *((_DWORD *)v495 + 215);
                          if (v790) {
                            LODWORD(v790) = *(_DWORD *)(v790 + 424);
                          }
                          int v793 = *(_DWORD *)(v938 + 336);
                          *(_DWORD *)buf = 136448002;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = (char *)v495 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v959 = (uint64_t)" ";
                          *(_WORD *)v960 = 1024;
                          *(_DWORD *)&v960[2] = v791;
                          *(_WORD *)&v960[6] = 1024;
                          *(_DWORD *)&v960[8] = v792;
                          *(_WORD *)&v960[12] = 1024;
                          *(_DWORD *)&v960[14] = v790;
                          *(_WORD *)&v960[18] = 2048;
                          *(void *)&v960[20] = v495;
                          *(_WORD *)&v960[28] = 1024;
                          *(_DWORD *)&v960[30] = v793;
                          _os_log_impl(&dword_1830D4000, v789, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added connection %p, now have %u connections", buf, 0x42u);
                          uint64_t v527 = v937;
                        }
                      }
                    }
                    if (*(void *)(v527 + 248))
                    {
                      if (*((void *)v495 + 61))
                      {
                        __nwlog_obj();
                        uint64_t v572 = *((void *)v495 + 61);
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v495;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v959 = v572;
                        uint64_t v573 = (char *)_os_log_send_and_compose_impl();
                        v961[0] = 16;
                        LOBYTE(aBlock) = 0;
                        if (!__nwlog_fault(v573, v961, &aBlock)) {
                          goto LABEL_943;
                        }
                        if (v961[0] == 17)
                        {
                          int v574 = __nwlog_obj();
                          os_log_type_t v575 = v961[0];
                          if (!os_log_type_enabled(v574, (os_log_type_t)v961[0])) {
                            goto LABEL_943;
                          }
                          uint64_t v576 = *((void *)v495 + 61);
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v495;
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v959 = v576;
                          int v577 = "%{public}s Connection %p already has a stream (%p)";
                        }
                        else if ((_BYTE)aBlock)
                        {
                          int v590 = (char *)__nw_create_backtrace_string();
                          int v574 = __nwlog_obj();
                          os_log_type_t v575 = v961[0];
                          BOOL v591 = os_log_type_enabled(v574, (os_log_type_t)v961[0]);
                          if (v590)
                          {
                            if (v591)
                            {
                              uint64_t v592 = *((void *)v495 + 61);
                              *(_DWORD *)buf = 136446978;
                              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                              *(_WORD *)&unsigned char buf[12] = 2048;
                              *(void *)&buf[14] = v495;
                              *(_WORD *)&buf[22] = 2048;
                              uint64_t v959 = v592;
                              *(_WORD *)v960 = 2082;
                              *(void *)&v960[2] = v590;
                              _os_log_impl(&dword_1830D4000, v574, v575, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
                            }
                            free(v590);
                            goto LABEL_943;
                          }
                          if (!v591)
                          {
LABEL_943:
                            if (v573) {
                              free(v573);
                            }
                            goto LABEL_945;
                          }
                          uint64_t v594 = *((void *)v495 + 61);
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v495;
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v959 = v594;
                          int v577 = "%{public}s Connection %p already has a stream (%p), no backtrace";
                        }
                        else
                        {
                          int v574 = __nwlog_obj();
                          os_log_type_t v575 = v961[0];
                          if (!os_log_type_enabled(v574, (os_log_type_t)v961[0])) {
                            goto LABEL_943;
                          }
                          uint64_t v593 = *((void *)v495 + 61);
                          *(_DWORD *)buf = 136446722;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v495;
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v959 = v593;
                          int v577 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                        }
                        _os_log_impl(&dword_1830D4000, v574, v575, v577, buf, 0x20u);
                        goto LABEL_943;
                      }
                      *(void *)(v527 + 256) = v495;
                      *((void *)v495 + 61) = v527;
                      nw_protocol_set_output_handler(v527, *((void *)v495 + 4));
                      nw_protocol_set_input_handler((uint64_t)v495, *(void *)(v527 + 48));
                      *(_OWORD *)uint64_t v527 = *v495;
                      long long v578 = v936[5];
                      long long v580 = v936[2];
                      long long v579 = v936[3];
                      v495[8] = v936[4];
                      v495[9] = v578;
                      v495[6] = v580;
                      v495[7] = v579;
                      long long v581 = v936[1];
                      v495[4] = *v936;
                      v495[5] = v581;
                      nw_http_transaction_metadata_set_connection_metadata(*(void **)(v527 + 352), *((void **)v495 + 96));
                      *((_WORD *)v495 + 436) &= 0xFFD7u;
                      *((_DWORD *)v495 + 216) = 1;
                      if ((*((unsigned char *)v495 + 158) & 1) == 0)
                      {
                        int v582 = __nwlog_obj();
                        if (os_log_type_enabled(v582, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v583 = *((void *)v495 + 61);
                          int v584 = *(_DWORD *)(*((void *)v495 + 60) + 372);
                          int v585 = *((_DWORD *)v495 + 215);
                          if (v583) {
                            LODWORD(v583) = *(_DWORD *)(v583 + 424);
                          }
                          *(_DWORD *)buf = 136447490;
                          *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = (char *)v495 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v959 = (uint64_t)" ";
                          *(_WORD *)v960 = 1024;
                          *(_DWORD *)&v960[2] = v584;
                          *(_WORD *)&v960[6] = 1024;
                          *(_DWORD *)&v960[8] = v585;
                          *(_WORD *)&v960[12] = 1024;
                          *(_DWORD *)&v960[14] = v583;
                          _os_log_impl(&dword_1830D4000, v582, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                        }
                      }
                      if ((*(unsigned char *)(v527 + 158) & 1) == 0)
                      {
                        int v586 = __nwlog_obj();
                        if (os_log_type_enabled(v586, OS_LOG_TYPE_INFO))
                        {
                          uint64_t v587 = *(void *)(v527 + 256);
                          int v588 = *(_DWORD *)(*(void *)(v527 + 248) + 372);
                          if (v587) {
                            LODWORD(v587) = *(_DWORD *)(v587 + 860);
                          }
                          int v589 = *(_DWORD *)(v527 + 424);
                          *(_DWORD *)buf = 136448002;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v527 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v959 = (uint64_t)" ";
                          *(_WORD *)v960 = 1024;
                          *(_DWORD *)&v960[2] = v588;
                          *(_WORD *)&v960[6] = 1024;
                          *(_DWORD *)&v960[8] = v587;
                          *(_WORD *)&v960[12] = 1024;
                          *(_DWORD *)&v960[14] = v589;
                          *(_WORD *)&v960[18] = 2048;
                          *(void *)&v960[20] = v527;
                          *(_WORD *)&v960[28] = 2048;
                          *(void *)&v960[30] = v495;
                          _os_log_impl(&dword_1830D4000, v586, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
                        }
                      }
LABEL_945:
                      if ((*(unsigned char *)(v527 + 158) & 1) == 0)
                      {
                        int v595 = __nwlog_obj();
                        if (os_log_type_enabled(v595, OS_LOG_TYPE_DEBUG))
                        {
                          uint64_t v596 = *(void *)(v527 + 256);
                          int v597 = *(_DWORD *)(*(void *)(v527 + 248) + 372);
                          if (v596) {
                            LODWORD(v596) = *(_DWORD *)(v596 + 860);
                          }
                          int v598 = *(_DWORD *)(v527 + 424);
                          *(_DWORD *)buf = 136448258;
                          *(void *)&uint8_t buf[4] = "nw_http1_start_new_connection_for_stream";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v527 + 74;
                          *(_WORD *)&buf[22] = 2080;
                          uint64_t v959 = (uint64_t)" ";
                          *(_WORD *)v960 = 1024;
                          *(_DWORD *)&v960[2] = v597;
                          *(_WORD *)&v960[6] = 1024;
                          *(_DWORD *)&v960[8] = v596;
                          *(_WORD *)&v960[12] = 1024;
                          *(_DWORD *)&v960[14] = v598;
                          *(_WORD *)&v960[18] = 2048;
                          *(void *)&v960[20] = v495;
                          *(_WORD *)&v960[28] = 1024;
                          *(_DWORD *)&v960[30] = v598;
                          *(_WORD *)&v960[34] = 2048;
                          *(void *)&v960[36] = v527;
                          _os_log_impl(&dword_1830D4000, v595, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created new connection %p for stream %u (%p)", buf, 0x4Cu);
                        }
                      }
                      nw_http_transaction_metadata_set_first_on_connection(*(void **)(v527 + 352));
                      uint64_t v599 = nw_protocol_copy_info((uint64_t)v492, 255);
                      uint64_t v535 = v599;
                      if (v599
                        && (uint64_t v600 = *(void *)(v599 + 24), *(void *)(v599 + 16) != v600)
                        && (BOOL v601 = *(void **)(v600 - 8)) != 0)
                      {
                        uint64_t v602 = os_retain(v601);
                        v603 = v602;
                        if (v602 && nw_protocol_metadata_is_tls(v602))
                        {
                          v603 = v603;
                          nw_http_connection_metadata_set_sec_metadata(*((void **)v495 + 96), v603);
                          os_release(v603);
                          nw_protocol_connect((uint64_t)v492, (uint64_t)v495);
                          goto LABEL_959;
                        }
                      }
                      else
                      {
                        v603 = 0;
                      }
                      if (v495)
                      {
                        nw_protocol_connect((uint64_t)v492, (uint64_t)v495);
                        if (!v603) {
                          goto LABEL_960;
                        }
                        goto LABEL_959;
                      }
                      uint64_t v747 = (uint64_t)v492;
                      __nwlog_obj();
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                      int v748 = (char *)_os_log_send_and_compose_impl();
                      v961[0] = 16;
                      LOBYTE(aBlock) = 0;
                      if (__nwlog_fault(v748, v961, &aBlock))
                      {
                        if (v961[0] == 17)
                        {
                          int v749 = __nwlog_obj();
                          os_log_type_t v750 = v961[0];
                          if (!os_log_type_enabled(v749, (os_log_type_t)v961[0])) {
                            goto LABEL_1474;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                          int v751 = "%{public}s called with null connection";
LABEL_1473:
                          _os_log_impl(&dword_1830D4000, v749, v750, v751, buf, 0xCu);
                          goto LABEL_1474;
                        }
                        if (!(_BYTE)aBlock)
                        {
                          int v749 = __nwlog_obj();
                          os_log_type_t v750 = v961[0];
                          if (!os_log_type_enabled(v749, (os_log_type_t)v961[0])) {
                            goto LABEL_1474;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                          int v751 = "%{public}s called with null connection, backtrace limit exceeded";
                          goto LABEL_1473;
                        }
                        v825 = (char *)__nw_create_backtrace_string();
                        int v749 = __nwlog_obj();
                        os_log_type_t v750 = v961[0];
                        BOOL v826 = os_log_type_enabled(v749, (os_log_type_t)v961[0]);
                        if (!v825)
                        {
                          if (!v826) {
                            goto LABEL_1474;
                          }
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                          int v751 = "%{public}s called with null connection, no backtrace";
                          goto LABEL_1473;
                        }
                        if (v826)
                        {
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v825;
                          _os_log_impl(&dword_1830D4000, v749, v750, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
                        }
                        free(v825);
                      }
LABEL_1474:
                      if (v748) {
                        free(v748);
                      }
                      nw_protocol_connect(v747, 0);
                      if (!v603)
                      {
LABEL_960:
                        if (!v535) {
                          return;
                        }
                        goto LABEL_974;
                      }
LABEL_959:
                      os_release(v603);
                      goto LABEL_960;
                    }
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    int v780 = (char *)_os_log_send_and_compose_impl();
                    v961[0] = 16;
                    LOBYTE(aBlock) = 0;
                    if (__nwlog_fault(v780, v961, &aBlock))
                    {
                      if (v961[0] == 17)
                      {
                        int v781 = __nwlog_obj();
                        os_log_type_t v782 = v961[0];
                        if (os_log_type_enabled(v781, (os_log_type_t)v961[0]))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v783 = "%{public}s called with null http1_stream->protocol_http1";
LABEL_1535:
                          _os_log_impl(&dword_1830D4000, v781, v782, v783, buf, 0xCu);
                        }
                      }
                      else if ((_BYTE)aBlock)
                      {
                        v837 = (char *)__nw_create_backtrace_string();
                        int v781 = __nwlog_obj();
                        os_log_type_t v782 = v961[0];
                        BOOL v838 = os_log_type_enabled(v781, (os_log_type_t)v961[0]);
                        if (v837)
                        {
                          if (v838)
                          {
                            *(_DWORD *)buf = 136446466;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v837;
                            _os_log_impl(&dword_1830D4000, v781, v782, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                          }
                          free(v837);
                          goto LABEL_1536;
                        }
                        if (v838)
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v783 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
                          goto LABEL_1535;
                        }
                      }
                      else
                      {
                        int v781 = __nwlog_obj();
                        os_log_type_t v782 = v961[0];
                        if (os_log_type_enabled(v781, (os_log_type_t)v961[0]))
                        {
                          *(_DWORD *)buf = 136446210;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          v783 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                          goto LABEL_1535;
                        }
                      }
                    }
LABEL_1536:
                    if (v780) {
                      free(v780);
                    }
                    uint64_t v527 = v937;
                    goto LABEL_945;
                  }
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                  v776 = (char *)_os_log_send_and_compose_impl();
                  v961[0] = 16;
                  LOBYTE(aBlock) = 0;
                  if (__nwlog_fault(v776, v961, &aBlock))
                  {
                    if (v961[0] == 17)
                    {
                      int v777 = __nwlog_obj();
                      os_log_type_t v778 = v961[0];
                      if (!os_log_type_enabled(v777, (os_log_type_t)v961[0])) {
                        goto LABEL_1529;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                      uint64_t v779 = "%{public}s called with null parameters";
LABEL_1528:
                      _os_log_impl(&dword_1830D4000, v777, v778, v779, buf, 0xCu);
                      goto LABEL_1529;
                    }
                    if (!(_BYTE)aBlock)
                    {
                      int v777 = __nwlog_obj();
                      os_log_type_t v778 = v961[0];
                      if (!os_log_type_enabled(v777, (os_log_type_t)v961[0])) {
                        goto LABEL_1529;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                      uint64_t v779 = "%{public}s called with null parameters, backtrace limit exceeded";
                      goto LABEL_1528;
                    }
                    v835 = (char *)__nw_create_backtrace_string();
                    int v777 = __nwlog_obj();
                    os_log_type_t v778 = v961[0];
                    BOOL v836 = os_log_type_enabled(v777, (os_log_type_t)v961[0]);
                    if (!v835)
                    {
                      if (!v836) {
                        goto LABEL_1529;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                      uint64_t v779 = "%{public}s called with null parameters, no backtrace";
                      goto LABEL_1528;
                    }
                    if (v836)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v835;
                      _os_log_impl(&dword_1830D4000, v777, v778, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
                    }
                    free(v835);
                  }
LABEL_1529:
                  if (v776) {
                    free(v776);
                  }
                  uint64_t v508 = v938;
                  BOOL v509 = (void **)(NWConcrete_nw_resolution_report + 16);
                  int v523 = *v506;
                  if (*v506) {
                    goto LABEL_856;
                  }
                  goto LABEL_858;
                }
LABEL_1654:
                __break(1u);
                return;
              }
              int v754 = *(_OWORD **)(v105 + 32);
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              int v755 = (char *)_os_log_send_and_compose_impl();
              v953[0] = 16;
              LOBYTE(v941[0]) = 0;
              if (__nwlog_fault(v755, v953, v941))
              {
                if (v953[0] == 17)
                {
                  int v756 = __nwlog_obj();
                  os_log_type_t v757 = v953[0];
                  if (!os_log_type_enabled(v756, (os_log_type_t)v953[0])) {
                    goto LABEL_1485;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  int v758 = "%{public}s called with null parameters";
                  goto LABEL_1484;
                }
                if (!LOBYTE(v941[0]))
                {
                  int v756 = __nwlog_obj();
                  os_log_type_t v757 = v953[0];
                  if (!os_log_type_enabled(v756, (os_log_type_t)v953[0])) {
                    goto LABEL_1485;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  int v758 = "%{public}s called with null parameters, backtrace limit exceeded";
                  goto LABEL_1484;
                }
                uint64_t v829 = (char *)__nw_create_backtrace_string();
                int v756 = __nwlog_obj();
                os_log_type_t v757 = v953[0];
                BOOL v832 = os_log_type_enabled(v756, (os_log_type_t)v953[0]);
                if (!v829)
                {
                  if (!v832) {
                    goto LABEL_1485;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  int v758 = "%{public}s called with null parameters, no backtrace";
                  goto LABEL_1484;
                }
                if (v832)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v829;
                  v831 = "%{public}s called with null parameters, dumping backtrace:%{public}s";
                  goto LABEL_1287;
                }
                goto LABEL_1288;
              }
LABEL_1485:
              if (!v755) {
                goto LABEL_1487;
              }
              goto LABEL_1486;
            }
            int v754 = *(_OWORD **)(v105 + 32);
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            int v755 = (char *)_os_log_send_and_compose_impl();
            v953[0] = 16;
            LOBYTE(v941[0]) = 0;
            if (!__nwlog_fault(v755, v953, v941)) {
              goto LABEL_1485;
            }
            if (v953[0] != 17)
            {
              if (!LOBYTE(v941[0]))
              {
                int v756 = __nwlog_obj();
                os_log_type_t v757 = v953[0];
                if (!os_log_type_enabled(v756, (os_log_type_t)v953[0])) {
                  goto LABEL_1485;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                int v758 = "%{public}s called with null endpoint, backtrace limit exceeded";
                goto LABEL_1484;
              }
              uint64_t v829 = (char *)__nw_create_backtrace_string();
              int v756 = __nwlog_obj();
              os_log_type_t v757 = v953[0];
              BOOL v830 = os_log_type_enabled(v756, (os_log_type_t)v953[0]);
              if (!v829)
              {
                if (!v830) {
                  goto LABEL_1485;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                int v758 = "%{public}s called with null endpoint, no backtrace";
                goto LABEL_1484;
              }
              if (v830)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v829;
                v831 = "%{public}s called with null endpoint, dumping backtrace:%{public}s";
LABEL_1287:
                _os_log_impl(&dword_1830D4000, v756, v757, v831, buf, 0x16u);
              }
LABEL_1288:
              free(v829);
              if (!v755)
              {
LABEL_1487:
                __nwlog_obj();
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                v888 = (char *)_os_log_send_and_compose_impl();
                v961[0] = 16;
                LOBYTE(aBlock) = 0;
                if (!__nwlog_fault(v888, v961, &aBlock)) {
                  goto LABEL_1501;
                }
                if (v961[0] == 17)
                {
                  os_log_type_t v889 = __nwlog_obj();
                  os_log_type_t v890 = v961[0];
                  if (!os_log_type_enabled(v889, (os_log_type_t)v961[0])) {
                    goto LABEL_1501;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  v891 = "%{public}s called with null http1_connection";
                }
                else if ((_BYTE)aBlock)
                {
                  v892 = (char *)__nw_create_backtrace_string();
                  os_log_type_t v889 = __nwlog_obj();
                  os_log_type_t v890 = v961[0];
                  BOOL v893 = os_log_type_enabled(v889, (os_log_type_t)v961[0]);
                  if (v892)
                  {
                    if (v893)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v892;
                      _os_log_impl(&dword_1830D4000, v889, v890, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                    }
                    free(v892);
LABEL_1501:
                    if (v888) {
                      free(v888);
                    }
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    v894 = (char *)_os_log_send_and_compose_impl();
                    v961[0] = 16;
                    LOBYTE(aBlock) = 0;
                    if (!__nwlog_fault(v894, v961, &aBlock)) {
                      goto LABEL_1517;
                    }
                    if (v961[0] == 17)
                    {
                      v895 = __nwlog_obj();
                      os_log_type_t v896 = v961[0];
                      if (os_log_type_enabled(v895, (os_log_type_t)v961[0]))
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        os_log_type_t v897 = "%{public}s called with null http1_connection";
LABEL_1516:
                        _os_log_impl(&dword_1830D4000, v895, v896, v897, buf, 0xCu);
                      }
                    }
                    else if ((_BYTE)aBlock)
                    {
                      v898 = (char *)__nw_create_backtrace_string();
                      v895 = __nwlog_obj();
                      os_log_type_t v896 = v961[0];
                      BOOL v899 = os_log_type_enabled(v895, (os_log_type_t)v961[0]);
                      if (v898)
                      {
                        if (v899)
                        {
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v898;
                          _os_log_impl(&dword_1830D4000, v895, v896, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                        }
                        free(v898);
                        goto LABEL_1517;
                      }
                      if (v899)
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        os_log_type_t v897 = "%{public}s called with null http1_connection, no backtrace";
                        goto LABEL_1516;
                      }
                    }
                    else
                    {
                      v895 = __nwlog_obj();
                      os_log_type_t v896 = v961[0];
                      if (os_log_type_enabled(v895, (os_log_type_t)v961[0]))
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        os_log_type_t v897 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                        goto LABEL_1516;
                      }
                    }
LABEL_1517:
                    if (v894) {
                      free(v894);
                    }
                    BOOL v495 = 0;
                    uint64_t v527 = v937;
                    int v492 = v754;
                    goto LABEL_945;
                  }
                  if (!v893) {
                    goto LABEL_1501;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  v891 = "%{public}s called with null http1_connection, no backtrace";
                }
                else
                {
                  os_log_type_t v889 = __nwlog_obj();
                  os_log_type_t v890 = v961[0];
                  if (!os_log_type_enabled(v889, (os_log_type_t)v961[0])) {
                    goto LABEL_1501;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  v891 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                }
                _os_log_impl(&dword_1830D4000, v889, v890, v891, buf, 0xCu);
                goto LABEL_1501;
              }
LABEL_1486:
              free(v755);
              goto LABEL_1487;
            }
            int v756 = __nwlog_obj();
            os_log_type_t v757 = v953[0];
            if (!os_log_type_enabled(v756, (os_log_type_t)v953[0])) {
              goto LABEL_1485;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            int v758 = "%{public}s called with null endpoint";
          }
          else
          {
            int v754 = 0;
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            int v755 = (char *)_os_log_send_and_compose_impl();
            v953[0] = 16;
            LOBYTE(v941[0]) = 0;
            if (!__nwlog_fault(v755, v953, v941)) {
              goto LABEL_1485;
            }
            if (v953[0] != 17)
            {
              if (!LOBYTE(v941[0]))
              {
                int v756 = __nwlog_obj();
                os_log_type_t v757 = v953[0];
                if (!os_log_type_enabled(v756, (os_log_type_t)v953[0])) {
                  goto LABEL_1485;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                int v758 = "%{public}s called with null output_handler, backtrace limit exceeded";
                goto LABEL_1484;
              }
              int v827 = (char *)__nw_create_backtrace_string();
              int v756 = __nwlog_obj();
              os_log_type_t v757 = v953[0];
              BOOL v828 = os_log_type_enabled(v756, (os_log_type_t)v953[0]);
              if (!v827)
              {
                if (!v828) {
                  goto LABEL_1485;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                int v758 = "%{public}s called with null output_handler, no backtrace";
                goto LABEL_1484;
              }
              if (v828)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v827;
                _os_log_impl(&dword_1830D4000, v756, v757, "%{public}s called with null output_handler, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v827);
              goto LABEL_1485;
            }
            int v756 = __nwlog_obj();
            os_log_type_t v757 = v953[0];
            if (!os_log_type_enabled(v756, (os_log_type_t)v953[0])) {
              goto LABEL_1485;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            int v758 = "%{public}s called with null output_handler";
          }
LABEL_1484:
          _os_log_impl(&dword_1830D4000, v756, v757, v758, buf, 0xCu);
          goto LABEL_1485;
        }
        uint64_t v535 = nw_parameters_copy_default_protocol_stack(*(nw_parameters_t *)(v105 + 320));
        uint64_t v949 = 0;
        uint64_t v950 = &v949;
        uint64_t v951 = 0x2000000000;
        char v952 = 0;
        *(void *)v961 = 0;
        *(void *)&v961[8] = v961;
        *(void *)&v961[16] = 0x3802000000;
        os_log_type_t v962 = __Block_byref_object_copy__40335;
        v963 = __Block_byref_object_dispose__40336;
        v964 = 0;
        LOBYTE(v965) = v965 | 1;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v943 = 0x40000000;
        BOOL v944 = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke;
        v945 = &unk_1E5241318;
        BOOL v946 = &v949;
        v947 = v961;
        uint64_t v948 = v105;
        nw_protocol_stack_iterate_application_protocols(v535, &aBlock);
        if (*(void *)(*(void *)&v961[8] + 40)) {
          goto LABEL_869;
        }
        os_log_type_t v536 = nw_protocol_stack_copy_transport_protocol(v535);
        BOOL is_quic = nw_protocol_options_is_quic(v536);
        if (v536) {
          os_release(v536);
        }
        if (!is_quic)
        {
LABEL_869:
          *(void *)buf = nw_parameters_shallow_copy(*(void **)(v105 + 320));
          nw::retained_ptr<nw_endpoint *>::operator=(v105 + 320, buf);
        }
        else
        {
          uint64_t v538 = *(void **)(v105 + 320);
          *(void *)buf = MEMORY[0x1E4F143A8];
          *(void *)&buf[8] = 0x40000000;
          *(void *)&buf[16] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_2;
          uint64_t v959 = (uint64_t)&unk_1E5241368;
          *(void *)v960 = v961;
          *(void *)&v960[8] = &v949;
          *(void *)&v960[16] = v105;
          *(void *)&v960[24] = v938;
          nw_parameters_enumerate_transformed_parameters(v538, buf);
        }
        uint64_t v539 = *(void **)(*(void *)&v961[8] + 40);
        if (v539)
        {
          v540 = v539;
          sec_protocol_options_clear_tls_application_protocols();
          sec_protocol_options_add_tls_application_protocol(v540, "http/1.1");
          os_release(v540);
        }
        *((unsigned char *)v950 + 24) = 0;
        uint64_t v541 = *(void **)(v105 + 320);
        v941[0] = MEMORY[0x1E4F143A8];
        v941[1] = 0x40000000;
        v941[2] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_77;
        v941[3] = &unk_1E5241390;
        v941[4] = &v949;
        v941[5] = v105;
        nw_parameters_remove_application_protocol_options_from_protocol_stack(v541, v941);
        *(_WORD *)(v105 + 428) |= 8u;
        uint64_t v542 = *(unsigned int *)(v938 + 352) + 1;
        uint64_t v543 = v542 << 31 >> 31;
        *(_DWORD *)(v938 + 352) = v542;
        if (v543 == v542 && (v543 & 0x8000000000000000) == 0)
        {
LABEL_970:
          uint64_t v606 = *(void *)(v105 + 312);
          uint64_t v607 = *(void **)(v105 + 264);
          *(void *)int v953 = MEMORY[0x1E4F143A8];
          *(void *)&v953[8] = 0x40000000;
          *(void *)&v953[16] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_80;
          uint64_t v954 = (uint64_t)&unk_1E52413B8;
          *(void *)int v955 = v606;
          nw_queue_context_async(v607, v953);
          _Block_object_dispose(v961, 8);
          if ((v965 & 1) != 0 && v964) {
            os_release(v964);
          }
          _Block_object_dispose(&v949, 8);
          if (!v535) {
            return;
          }
LABEL_974:
          os_release(v535);
          return;
        }
        __nwlog_obj();
        uint64_t v544 = *(unsigned int *)(v938 + 352);
        *(_DWORD *)int v953 = 136446978;
        *(void *)&v953[4] = "nw_http1_establish_new_connection_for_stream";
        *(_WORD *)&v953[12] = 2082;
        *(void *)&v953[14] = "http1->pending_output_handler_count";
        *(_WORD *)&v953[22] = 2048;
        uint64_t v954 = 1;
        *(_WORD *)int v955 = 2048;
        *(void *)&v955[2] = v544;
        uint64_t v545 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v939 = 0;
        if (__nwlog_fault(v545, &type, &v939))
        {
          if (type == OS_LOG_TYPE_FAULT)
          {
            v546 = __nwlog_obj();
            os_log_type_t v547 = type;
            if (os_log_type_enabled(v546, type))
            {
              uint64_t v548 = *(unsigned int *)(v938 + 352);
              *(_DWORD *)int v953 = 136446978;
              *(void *)&v953[4] = "nw_http1_establish_new_connection_for_stream";
              *(_WORD *)&v953[12] = 2082;
              *(void *)&v953[14] = "http1->pending_output_handler_count";
              *(_WORD *)&v953[22] = 2048;
              uint64_t v954 = 1;
              *(_WORD *)int v955 = 2048;
              *(void *)&v955[2] = v548;
              v549 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_966:
              _os_log_impl(&dword_1830D4000, v546, v547, v549, v953, 0x2Au);
            }
          }
          else if (v939)
          {
            uint64_t v553 = (char *)__nw_create_backtrace_string();
            v546 = __nwlog_obj();
            os_log_type_t v547 = type;
            BOOL v554 = os_log_type_enabled(v546, type);
            if (v553)
            {
              if (v554)
              {
                uint64_t v555 = *(unsigned int *)(v938 + 352);
                *(_DWORD *)int v953 = 136447234;
                *(void *)&v953[4] = "nw_http1_establish_new_connection_for_stream";
                *(_WORD *)&v953[12] = 2082;
                *(void *)&v953[14] = "http1->pending_output_handler_count";
                *(_WORD *)&v953[22] = 2048;
                uint64_t v954 = 1;
                *(_WORD *)int v955 = 2048;
                *(void *)&v955[2] = v555;
                __int16 v956 = 2082;
                BOOL v957 = v553;
                _os_log_impl(&dword_1830D4000, v546, v547, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", v953, 0x34u);
              }
              free(v553);
              goto LABEL_967;
            }
            if (v554)
            {
              uint64_t v605 = *(unsigned int *)(v938 + 352);
              *(_DWORD *)int v953 = 136446978;
              *(void *)&v953[4] = "nw_http1_establish_new_connection_for_stream";
              *(_WORD *)&v953[12] = 2082;
              *(void *)&v953[14] = "http1->pending_output_handler_count";
              *(_WORD *)&v953[22] = 2048;
              uint64_t v954 = 1;
              *(_WORD *)int v955 = 2048;
              *(void *)&v955[2] = v605;
              v549 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
              goto LABEL_966;
            }
          }
          else
          {
            v546 = __nwlog_obj();
            os_log_type_t v547 = type;
            if (os_log_type_enabled(v546, type))
            {
              uint64_t v604 = *(unsigned int *)(v938 + 352);
              *(_DWORD *)int v953 = 136446978;
              *(void *)&v953[4] = "nw_http1_establish_new_connection_for_stream";
              *(_WORD *)&v953[12] = 2082;
              *(void *)&v953[14] = "http1->pending_output_handler_count";
              *(_WORD *)&v953[22] = 2048;
              uint64_t v954 = 1;
              *(_WORD *)int v955 = 2048;
              *(void *)&v955[2] = v604;
              v549 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
              goto LABEL_966;
            }
          }
        }
LABEL_967:
        if (v545) {
          free(v545);
        }
        *(_DWORD *)(v938 + 352) = -1;
        uint64_t v105 = v937;
        goto LABEL_970;
      }
      if ((*(unsigned char *)(v24 + 158) & 1) == 0)
      {
        if (*((unsigned char *)p_cache + 3665))
        {
          BOOL v808 = p_cache;
          v809 = __nwlog_obj();
          BOOL v810 = os_log_type_enabled(v809, OS_LOG_TYPE_DEBUG);
          p_cache = v808;
          uint64_t v24 = v938;
          if (v810)
          {
            int v811 = *(_DWORD *)(v938 + 372);
            int v812 = *(_DWORD *)(v105 + 424);
            *(_DWORD *)buf = 136447490;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v938 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v959 = (uint64_t)" ";
            *(_WORD *)v960 = 1024;
            *(_DWORD *)&v960[2] = v811;
            *(_WORD *)&v960[6] = 1024;
            *(_DWORD *)&v960[8] = v812;
            *(_WORD *)&v960[12] = 2048;
            *(void *)&v960[14] = v105;
            _os_log_impl(&dword_1830D4000, v809, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream %u (%p)", buf, 0x36u);
            p_cache = v808;
            uint64_t v24 = v938;
          }
        }
      }
      if ((*(_WORD *)(v105 + 428) & 0x1000) == 0)
      {
        uint64_t v135 = p_cache;
        __nwlog_obj();
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v105;
        os_log_type_t v136 = (char *)_os_log_send_and_compose_impl();
        v961[0] = 16;
        LOBYTE(aBlock) = 0;
        if (__nwlog_fault(v136, v961, &aBlock))
        {
          if (v961[0] == 17)
          {
            uint64_t v137 = __nwlog_obj();
            os_log_type_t v138 = v961[0];
            if (os_log_type_enabled(v137, (os_log_type_t)v961[0]))
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v105;
              uint64_t v139 = "%{public}s stream %p not in pending list, cannot remove";
LABEL_725:
              _os_log_impl(&dword_1830D4000, v137, v138, v139, buf, 0x16u);
            }
          }
          else if ((_BYTE)aBlock)
          {
            int v342 = (char *)__nw_create_backtrace_string();
            uint64_t v137 = __nwlog_obj();
            os_log_type_t v138 = v961[0];
            BOOL v343 = os_log_type_enabled(v137, (os_log_type_t)v961[0]);
            if (v342)
            {
              if (v343)
              {
                *(_DWORD *)buf = 136446722;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v105;
                *(_WORD *)&buf[22] = 2082;
                uint64_t v959 = (uint64_t)v342;
                _os_log_impl(&dword_1830D4000, v137, v138, "%{public}s stream %p not in pending list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
              }
              free(v342);
              goto LABEL_726;
            }
            if (v343)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v105;
              uint64_t v139 = "%{public}s stream %p not in pending list, cannot remove, no backtrace";
              goto LABEL_725;
            }
          }
          else
          {
            uint64_t v137 = __nwlog_obj();
            os_log_type_t v138 = v961[0];
            if (os_log_type_enabled(v137, (os_log_type_t)v961[0]))
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v105;
              uint64_t v139 = "%{public}s stream %p not in pending list, cannot remove, backtrace limit exceeded";
              goto LABEL_725;
            }
          }
        }
LABEL_726:
        if (v136) {
          free(v136);
        }
        p_cache = v135;
        goto LABEL_810;
      }
      uint64_t v275 = *(void *)(v105 + 296);
      char v276 = *(void **)(v105 + 304);
      if (v275)
      {
        *(void *)(v275 + 304) = v276;
        char v276 = *(void **)(v105 + 304);
      }
      else
      {
        *(void *)(v24 + 256) = v276;
      }
      *char v276 = v275;
      *(void *)(v105 + 296) = 0;
      *(void *)(v105 + 304) = 0;
      int v350 = *(_DWORD *)(v24 + 348);
      *(_DWORD *)(v24 + 348) = v350 - 1;
      if (v350)
      {
LABEL_808:
        *(_WORD *)(v105 + 428) &= ~0x1000u;
        if ((*(unsigned char *)(v105 + 158) & 1) == 0)
        {
          if (*((unsigned char *)p_cache + 3665))
          {
            int v851 = p_cache;
            int v852 = __nwlog_obj();
            BOOL v853 = os_log_type_enabled(v852, OS_LOG_TYPE_DEBUG);
            p_cache = v851;
            if (v853)
            {
              uint64_t v854 = v105 + 74;
              uint64_t v855 = *(void *)(v105 + 256);
              int v856 = *(_DWORD *)(*(void *)(v105 + 248) + 372);
              if (v855) {
                LODWORD(v855) = *(_DWORD *)(v855 + 860);
              }
              uint64_t v105 = v937;
              int v857 = *(_DWORD *)(v937 + 424);
              int v858 = *(_DWORD *)(v938 + 348);
              *(_DWORD *)buf = 136448258;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v854;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v959 = (uint64_t)" ";
              *(_WORD *)v960 = 1024;
              *(_DWORD *)&v960[2] = v856;
              *(_WORD *)&v960[6] = 1024;
              *(_DWORD *)&v960[8] = v855;
              *(_WORD *)&v960[12] = 1024;
              *(_DWORD *)&v960[14] = v857;
              *(_WORD *)&v960[18] = 1024;
              *(_DWORD *)&v960[20] = v857;
              *(_WORD *)&v960[24] = 2048;
              *(void *)&v960[26] = v937;
              *(_WORD *)&v960[34] = 1024;
              *(_DWORD *)&v960[36] = v858;
              _os_log_impl(&dword_1830D4000, v852, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed pending stream %u (%p), now have %u pending streams", buf, 0x48u);
              p_cache = v851;
            }
          }
        }
        goto LABEL_810;
      }
      int v351 = p_cache;
      uint64_t v352 = v24;
      __nwlog_obj();
      uint64_t v353 = *(unsigned int *)(v352 + 348);
      *(_DWORD *)buf = 136446978;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = "http1->pending_stream_count";
      *(_WORD *)&buf[22] = 2048;
      uint64_t v959 = 1;
      *(_WORD *)v960 = 2048;
      *(void *)&v960[2] = v353;
      BOOL v354 = (char *)_os_log_send_and_compose_impl();
      v961[0] = 16;
      LOBYTE(aBlock) = 0;
      if (__nwlog_fault(v354, v961, &aBlock))
      {
        if (v961[0] == 17)
        {
          uint64_t v355 = __nwlog_obj();
          os_log_type_t v356 = v961[0];
          if (os_log_type_enabled(v355, (os_log_type_t)v961[0]))
          {
            uint64_t v357 = *(unsigned int *)(v938 + 348);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_stream_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v959 = 1;
            *(_WORD *)v960 = 2048;
            *(void *)&v960[2] = v357;
            BOOL v358 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_804:
            _os_log_impl(&dword_1830D4000, v355, v356, v358, buf, 0x2Au);
          }
        }
        else if ((_BYTE)aBlock)
        {
          uint64_t v424 = (char *)__nw_create_backtrace_string();
          uint64_t v355 = __nwlog_obj();
          os_log_type_t v356 = v961[0];
          BOOL v425 = os_log_type_enabled(v355, (os_log_type_t)v961[0]);
          if (v424)
          {
            if (v425)
            {
              uint64_t v426 = *(unsigned int *)(v938 + 348);
              *(_DWORD *)buf = 136447234;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->pending_stream_count";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v959 = 1;
              *(_WORD *)v960 = 2048;
              *(void *)&v960[2] = v426;
              *(_WORD *)&v960[10] = 2082;
              *(void *)&v960[12] = v424;
              _os_log_impl(&dword_1830D4000, v355, v356, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
            }
            free(v424);
            goto LABEL_805;
          }
          if (v425)
          {
            uint64_t v491 = *(unsigned int *)(v938 + 348);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_stream_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v959 = 1;
            *(_WORD *)v960 = 2048;
            *(void *)&v960[2] = v491;
            BOOL v358 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
            goto LABEL_804;
          }
        }
        else
        {
          uint64_t v355 = __nwlog_obj();
          os_log_type_t v356 = v961[0];
          if (os_log_type_enabled(v355, (os_log_type_t)v961[0]))
          {
            uint64_t v452 = *(unsigned int *)(v938 + 348);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_stream_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v959 = 1;
            *(_WORD *)v960 = 2048;
            *(void *)&v960[2] = v452;
            BOOL v358 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
            goto LABEL_804;
          }
        }
      }
LABEL_805:
      if (v354) {
        free(v354);
      }
      *(_DWORD *)(v938 + 348) = 0;
      uint64_t v105 = v937;
      p_cache = v351;
      goto LABEL_808;
    }
    if (!*(void *)(v105 + 32))
    {
      if (!(*(unsigned char *)(v105 + 158) & 1 | (*((unsigned char *)p_cache + 3665) == 0)))
      {
        int v205 = __nwlog_obj();
        BOOL v206 = os_log_type_enabled(v205, OS_LOG_TYPE_DEBUG);
        uint64_t v24 = v938;
        if (v206)
        {
          uint64_t v207 = *(void *)(v105 + 256);
          int v208 = *(_DWORD *)(*(void *)(v105 + 248) + 372);
          if (v207) {
            LODWORD(v207) = *(_DWORD *)(v207 + 860);
          }
          int v209 = *(_DWORD *)(v937 + 424);
          *(_DWORD *)buf = 136447746;
          *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v105 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v959 = (uint64_t)" ";
          *(_WORD *)v960 = 1024;
          *(_DWORD *)&v960[2] = v208;
          *(_WORD *)&v960[6] = 1024;
          *(_DWORD *)&v960[8] = v207;
          *(_WORD *)&v960[12] = 1024;
          *(_DWORD *)&v960[14] = v209;
          *(_WORD *)&v960[18] = 2048;
          *(void *)&v960[20] = v937;
          int v125 = "%{public}s %{public}s%s<i%u:c%u:s%u> Stream %p still awaiting new output handler";
          uint64_t v126 = v205;
          uint32_t v127 = 60;
          goto LABEL_249;
        }
      }
      goto LABEL_250;
    }
    if (!(*(unsigned char *)(v105 + 158) & 1 | (*((unsigned char *)p_cache + 3665) == 0)))
    {
      v704 = __nwlog_obj();
      if (os_log_type_enabled(v704, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v705 = v105 + 74;
        uint64_t v706 = *(void *)(v105 + 256);
        int v707 = *(_DWORD *)(*(void *)(v105 + 248) + 372);
        if (v706) {
          LODWORD(v706) = *(_DWORD *)(v706 + 860);
        }
        uint64_t v105 = v937;
        int v708 = *(_DWORD *)(v937 + 424);
        uint64_t v709 = *(void *)(v937 + 32);
        *(_DWORD *)buf = 136448002;
        *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v705;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v959 = (uint64_t)" ";
        *(_WORD *)v960 = 1024;
        *(_DWORD *)&v960[2] = v707;
        *(_WORD *)&v960[6] = 1024;
        *(_DWORD *)&v960[8] = v706;
        *(_WORD *)&v960[12] = 1024;
        *(_DWORD *)&v960[14] = v708;
        *(_WORD *)&v960[18] = 2048;
        *(void *)&v960[20] = v937;
        *(_WORD *)&v960[28] = 2048;
        *(void *)&v960[30] = v709;
        _os_log_impl(&dword_1830D4000, v704, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> creating connection for stream %p with new output_handler %p", buf, 0x46u);
      }
    }
    uint64_t v162 = *(_OWORD **)(v105 + 32);
    if (v162)
    {
      int v163 = *(void **)(v105 + 336);
      if (v163)
      {
        int v164 = *(void **)(v105 + 320);
        if (v164)
        {
          int v165 = malloc_type_calloc(1uLL, 0x370uLL, 0xEAFB8F1AuLL);
          if (!v165)
          {
            v710 = __nwlog_obj();
            os_log_type_enabled(v710, OS_LOG_TYPE_ERROR);
            *(_DWORD *)buf = 136446722;
            *(void *)&uint8_t buf[4] = "strict_calloc";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = 1;
            *(_WORD *)&buf[22] = 2048;
            uint64_t v959 = 880;
            BOOL v711 = (void *)_os_log_send_and_compose_impl();
            if (__nwlog_abort((uint64_t)v711)) {
              goto LABEL_1654;
            }
            free(v711);
            uint64_t v105 = v937;
          }
          bzero(v165, 0x370uLL);
          if (nw_protocol_http1_identifier::onceToken != -1) {
            dispatch_once(&nw_protocol_http1_identifier::onceToken, &__block_literal_global_40283);
          }
          uint64_t v166 = v938;
          *((void *)v165 + 2) = &nw_protocol_http1_identifier::http1_protocol_identifier;
          if (nw_protocol_http1_get_callbacks(void)::onceToken != -1)
          {
            dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
            uint64_t v166 = v938;
          }
          *((void *)v165 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
          *((_DWORD *)v165 + 46) = 3;
          *((void *)v165 + 22) = v165;
          *((void *)v165 + 5) = v165 + 10;
          *((void *)v165 + 60) = v166;
          nw_protocol_set_output_handler((uint64_t)v165, (uint64_t)v162);
          os_log_type_t v167 = os_retain(v163);
          char v168 = *((unsigned char *)v165 + 760);
          if (v168)
          {
            BOOL v169 = (void *)*((void *)v165 + 94);
            if (v169)
            {
              os_release(v169);
              char v168 = *((unsigned char *)v165 + 760);
            }
          }
          *((void *)v165 + 94) = v167;
          *((unsigned char *)v165 + 760) = v168 | 1;
          BOOL v170 = os_retain(v164);
          char v171 = *((unsigned char *)v165 + 744);
          if (v171)
          {
            os_log_type_t v172 = (void *)*((void *)v165 + 92);
            if (v172)
            {
              os_release(v172);
              char v171 = *((unsigned char *)v165 + 744);
            }
          }
          *((void *)v165 + 92) = v170;
          *((unsigned char *)v165 + 744) = v171 | 1;
          id v173 = nw_parameters_copy_context(v164);
          char v174 = *((unsigned char *)v165 + 504);
          if (v174)
          {
            int v213 = (void *)*((void *)v165 + 62);
            uint64_t v175 = v938;
            if (v213)
            {
              os_release(v213);
              uint64_t v175 = v938;
              char v174 = *((unsigned char *)v165 + 504);
            }
          }
          else
          {
            uint64_t v175 = v938;
          }
          *((void *)v165 + 62) = v173;
          *((unsigned char *)v165 + 504) = v174 | 1;
          *((void *)v165 + 24) = *(void *)(v175 + 192);
          *(void *)v961 = MEMORY[0x1E4F143A8];
          *(void *)&v961[8] = 0x40000000;
          *(void *)&v961[16] = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke;
          os_log_type_t v962 = (uint64_t (*)(uint64_t, uint64_t))&__block_descriptor_tmp_43_40284;
          v963 = (void (*)(uint64_t))v165;
          metadata = nw_http_connection_create_metadata(v173, v961, 0);
          char v215 = *((unsigned char *)v165 + 776);
          if (v215)
          {
            os_log_type_t v216 = (void *)*((void *)v165 + 96);
            if (v216)
            {
              os_release(v216);
              char v215 = *((unsigned char *)v165 + 776);
            }
          }
          *((void *)v165 + 96) = metadata;
          *((unsigned char *)v165 + 776) = v215 | 1;
          nw_http_connection_metadata_set_version(metadata, 3);
          nw_http_connection_metadata_set_shared_connection_pool_metadata(*((void **)v165 + 96), *(void **)(v938 + 312));
          *((void *)v165 + 77) = 0;
          *((void *)v165 + 78) = (char *)v165 + 616;
          *((void *)v165 + 79) = 0;
          *((void *)v165 + 80) = (char *)v165 + 632;
          *((void *)v165 + 81) = 0;
          *((void *)v165 + 82) = (char *)v165 + 648;
          *((void *)v165 + 83) = 0;
          *((void *)v165 + 84) = (char *)v165 + 664;
          *((void *)v165 + 86) = (char *)v165 + 680;
          *((void *)v165 + 85) = 0;
          nw_frame_cache_init((uint64_t)v165 + 696, (uint64_t)v165, 256, 0x40000, 16);
          uint64_t v217 = *((void *)v165 + 60);
          if (v217)
          {
            *(_OWORD *)((char *)v165 + 360) = 0u;
            *(_OWORD *)((char *)v165 + 376) = 0u;
            *(_OWORD *)((char *)v165 + 392) = 0u;
            *(_OWORD *)((char *)v165 + 408) = 0u;
            *(_OWORD *)((char *)v165 + 424) = 0u;
            *(_OWORD *)((char *)v165 + 440) = 0u;
            *(_OWORD *)((char *)v165 + 328) = 0u;
            *(_OWORD *)((char *)v165 + 344) = 0u;
            *((void *)v165 + 37) = nw_http1_on_message_begin;
            *((void *)v165 + 48) = nw_http1_on_message_complete;
            *((void *)v165 + 46) = nw_http1_on_headers_complete;
            *((void *)v165 + 59) = nw_http1_on_reset;
            *((void *)v165 + 40) = nw_http1_on_method;
            *((void *)v165 + 51) = nw_http1_on_method_complete;
            *((void *)v165 + 38) = nw_http1_on_url;
            *((void *)v165 + 49) = nw_http1_on_url_complete;
            *((void *)v165 + 39) = nw_http1_on_status;
            *((void *)v165 + 50) = nw_http1_on_status_complete;
            *((void *)v165 + 42) = nw_http1_on_header_field;
            *((void *)v165 + 53) = nw_http1_on_header_field_complete;
            *((void *)v165 + 43) = nw_http1_on_header_value;
            *((void *)v165 + 54) = nw_http1_on_header_value_complete;
            *((void *)v165 + 47) = nw_http1_on_body;
            *((void *)v165 + 57) = nw_http1_on_chunk_header;
            *((void *)v165 + 58) = nw_http1_on_chunk_complete;
            char v218 = *(unsigned char *)(v217 + 376);
            *(_OWORD *)((char *)v165 + 248) = 0u;
            *(_OWORD *)((char *)v165 + 200) = 0u;
            *(_OWORD *)((char *)v165 + 264) = 0u;
            *(_OWORD *)((char *)v165 + 232) = 0u;
            *(_OWORD *)((char *)v165 + 216) = 0u;
            if (v218) {
              char v219 = 1;
            }
            else {
              char v219 = 2;
            }
            *((unsigned char *)v165 + 272) = v219;
            *((void *)v165 + 35) = 0;
            *((void *)v165 + 36) = (char *)v165 + 296;
            *((_WORD *)v165 + 139) = 16131;
            *((void *)v165 + 31) = v165;
            *((void *)v165 + 32) = 238;
            if ((*((unsigned char *)v165 + 158) & 1) == 0)
            {
              int v220 = __nwlog_obj();
              if (os_log_type_enabled(v220, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v221 = *((void *)v165 + 61);
                int v222 = *(_DWORD *)(*((void *)v165 + 60) + 372);
                int v223 = *((_DWORD *)v165 + 215);
                if (v221) {
                  LODWORD(v221) = *(_DWORD *)(v221 + 424);
                }
                *(_DWORD *)buf = 136448258;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_log_parser_version";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = (char *)v165 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v959 = (uint64_t)" ";
                *(_WORD *)v960 = 1024;
                *(_DWORD *)&v960[2] = v222;
                *(_WORD *)&v960[6] = 1024;
                *(_DWORD *)&v960[8] = v223;
                *(_WORD *)&v960[12] = 1024;
                *(_DWORD *)&v960[14] = v221;
                *(_WORD *)&v960[18] = 1024;
                *(_DWORD *)&v960[20] = 9;
                *(_WORD *)&v960[24] = 1024;
                *(_DWORD *)&v960[26] = 2;
                *(_WORD *)&v960[30] = 1024;
                *(_DWORD *)&v960[32] = 1;
                _os_log_impl(&dword_1830D4000, v220, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using http parser v%u.%u.%u", buf, 0x44u);
              }
            }
            goto LABEL_386;
          }
          BOOL v712 = v162;
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
          v713 = (char *)_os_log_send_and_compose_impl();
          v953[0] = 16;
          LOBYTE(v941[0]) = 0;
          if (__nwlog_fault(v713, v953, v941))
          {
            if (v953[0] == 17)
            {
              BOOL v714 = __nwlog_obj();
              os_log_type_t v715 = v953[0];
              if (os_log_type_enabled(v714, (os_log_type_t)v953[0]))
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                uint64_t v716 = "%{public}s called with null http1_connection->protocol_http1";
LABEL_1418:
                _os_log_impl(&dword_1830D4000, v714, v715, v716, buf, 0xCu);
              }
            }
            else if (LOBYTE(v941[0]))
            {
              int v794 = (char *)__nw_create_backtrace_string();
              BOOL v714 = __nwlog_obj();
              os_log_type_t v715 = v953[0];
              BOOL v795 = os_log_type_enabled(v714, (os_log_type_t)v953[0]);
              if (v794)
              {
                if (v795)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v794;
                  _os_log_impl(&dword_1830D4000, v714, v715, "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v794);
                goto LABEL_1419;
              }
              if (v795)
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                uint64_t v716 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
                goto LABEL_1418;
              }
            }
            else
            {
              BOOL v714 = __nwlog_obj();
              os_log_type_t v715 = v953[0];
              if (os_log_type_enabled(v714, (os_log_type_t)v953[0]))
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                uint64_t v716 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
                goto LABEL_1418;
              }
            }
          }
LABEL_1419:
          if (v713) {
            free(v713);
          }
          uint64_t v105 = v937;
          uint64_t v162 = v712;
LABEL_386:
          *(void *)buf = 0;
          *(void *)&buf[8] = buf;
          *(void *)&buf[16] = 0x2000000000;
          uint64_t v959 = (uint64_t)v165;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v943 = 0x40000000;
          BOOL v944 = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke_2;
          v945 = &unk_1E5241178;
          BOOL v946 = (uint64_t *)buf;
          *((void *)v165 + 76) = _Block_copy(&aBlock);
          _Block_object_dispose(buf, 8);
          if ((*((unsigned char *)v165 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              int v727 = __nwlog_obj();
              if (os_log_type_enabled(v727, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v728 = *((void *)v165 + 61);
                int v729 = *(_DWORD *)(*((void *)v165 + 60) + 372);
                int v730 = *((_DWORD *)v165 + 215);
                if (v728) {
                  LODWORD(v728) = *(_DWORD *)(v728 + 424);
                }
                *(_DWORD *)buf = 136447746;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = (char *)v165 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v959 = (uint64_t)" ";
                *(_WORD *)v960 = 1024;
                *(_DWORD *)&v960[2] = v729;
                *(_WORD *)&v960[6] = 1024;
                *(_DWORD *)&v960[8] = v730;
                *(_WORD *)&v960[12] = 1024;
                *(_DWORD *)&v960[14] = v728;
                *(_WORD *)&v960[18] = 2048;
                *(void *)&v960[20] = v165;
                _os_log_impl(&dword_1830D4000, v727, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created %p", buf, 0x3Cu);
                uint64_t v105 = v937;
              }
            }
          }
          BOOL v224 = (NSObject **)(v165 + 32);
          nw_protocol_replace_input_handler((uint64_t)v162, v105, (uint64_t)v165);
          _OWORD *v165 = *v162;
          int v225 = (void *)*((void *)v165 + 92);
          if (v225)
          {
            uint64_t v226 = v938;
            os_log_type_t v227 = (void **)(NWConcrete_nw_resolution_report + 16);
            if (!*((void *)v165 + 66))
            {
              os_log_type_t v228 = (void **)(v165 + 35);
              id v229 = nw_parameters_copy_context(*((void **)v165 + 92));
              *(void *)buf = nw_path_copy_flow_registration(v229, (uint64_t)v165);
              nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v165 + 35), buf);
              long long v230 = (void *)*((void *)v165 + 70);
              if (v230)
              {
                uint64_t v231 = v162;
                id v232 = nw_path_flow_registration_copy_endpoint(v230);
                id v233 = nw_path_flow_registration_copy_parameters(*v228);
                *(void *)buf = nw_endpoint_copy_association_with_evaluator(v232, v233, 0);
                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v165 + 33), buf);
                if (*((void *)v165 + 66))
                {
                  *(void *)buf = nw_protocol_instance_stub_create((nw_protocol *)v165);
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v165 + 34), buf);
                  nw_association_register_internal(*((void **)v165 + 66), v225, *((void **)v165 + 68), 0, 0, &__block_literal_global_69);
                  id v234 = nw_association_copy_current_path(*((void **)v165 + 66), v233);
                  if (v234)
                  {
                    int v235 = v234;
                    os_log_type_t v236 = nw_path_copy_for_flow_registration(v234, *v228);
                    if (v236)
                    {
                      int v237 = v236;
                      if (*v224 != v236)
                      {
                        *(void *)buf = os_retain(v236);
                        nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v165 + 32), buf);
                      }
                      if (nw_path_has_flows(v237)) {
                        __int16 v238 = 4096;
                      }
                      else {
                        __int16 v238 = 0;
                      }
                      int v239 = *((_WORD *)v165 + 436) & 0xEFFF | (*((unsigned __int8 *)v165 + 874) << 16);
                      *((_WORD *)v165 + 436) = *((_WORD *)v165 + 436) & 0xEFFF | v238;
                      *((unsigned char *)v165 + 874) = BYTE2(v239);
                      id v240 = nw_parameters_copy_effective_proxy_config(v225);
                      if (v240)
                      {
                        int v241 = v240;
                        if (nw_path_has_proxy_config(v235, v240))
                        {
                          *(void *)buf = os_retain(v241);
                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v165 + 36), buf);
                        }
                        os_release(v241);
                      }
                      os_release(v237);
                    }
                    os_release(v235);
                  }
                }
                if (v233) {
                  os_release(v233);
                }
                uint64_t v162 = v231;
                if (v232) {
                  os_release(v232);
                }
              }
              uint64_t v226 = v938;
              os_log_type_t v227 = (void **)(NWConcrete_nw_resolution_report + 16);
              if (v229)
              {
                os_release(v229);
                os_log_type_t v227 = (void **)(NWConcrete_nw_resolution_report + 16);
                uint64_t v226 = v938;
              }
            }
            int v242 = *v224;
            if (*v224)
            {
LABEL_412:
              BOOL v243 = nw_path_uses_interface_type(v242, nw_interface_type_cellular);
              os_log_type_t v227 = (void **)(NWConcrete_nw_resolution_report + 16);
              uint64_t v226 = v938;
              if (v243) {
                *((void *)v165 + 24) = 1000;
              }
            }
LABEL_414:
            uint64_t v244 = *(unsigned int *)(v226 + 336) + 1;
            uint64_t v245 = v244 << 31 >> 31;
            *(_DWORD *)(v226 + 336) = v244;
            uint64_t v246 = v937;
            if (v245 == v244 && (v245 & 0x8000000000000000) == 0) {
              goto LABEL_592;
            }
            uint64_t v247 = v226;
            __nwlog_obj();
            uint64_t v248 = *(unsigned int *)(v247 + 336);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->connections_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v959 = 1;
            *(_WORD *)v960 = 2048;
            *(void *)&v960[2] = v248;
            uint64_t v249 = (char *)_os_log_send_and_compose_impl();
            v961[0] = 16;
            LOBYTE(aBlock) = 0;
            if (__nwlog_fault(v249, v961, &aBlock))
            {
              if (v961[0] == 17)
              {
                int v250 = __nwlog_obj();
                os_log_type_t v251 = v961[0];
                if (os_log_type_enabled(v250, (os_log_type_t)v961[0]))
                {
                  uint64_t v252 = *(unsigned int *)(v938 + 336);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->connections_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v252;
                  int v253 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_588:
                  _os_log_impl(&dword_1830D4000, v250, v251, v253, buf, 0x2Au);
                }
              }
              else if ((_BYTE)aBlock)
              {
                BOOL v267 = v162;
                uint64_t v268 = (char *)__nw_create_backtrace_string();
                int v250 = __nwlog_obj();
                os_log_type_t v251 = v961[0];
                BOOL v269 = os_log_type_enabled(v250, (os_log_type_t)v961[0]);
                if (v268)
                {
                  if (v269)
                  {
                    uint64_t v270 = *(unsigned int *)(v938 + 336);
                    *(_DWORD *)buf = 136447234;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->connections_count";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v959 = 1;
                    *(_WORD *)v960 = 2048;
                    *(void *)&v960[2] = v270;
                    *(_WORD *)&v960[10] = 2082;
                    *(void *)&v960[12] = v268;
                    _os_log_impl(&dword_1830D4000, v250, v251, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                  }
                  free(v268);
                  uint64_t v162 = v267;
                  goto LABEL_589;
                }
                uint64_t v162 = v267;
                if (v269)
                {
                  uint64_t v359 = *(unsigned int *)(v938 + 336);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->connections_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v359;
                  int v253 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                  goto LABEL_588;
                }
              }
              else
              {
                int v250 = __nwlog_obj();
                os_log_type_t v251 = v961[0];
                if (os_log_type_enabled(v250, (os_log_type_t)v961[0]))
                {
                  uint64_t v349 = *(unsigned int *)(v938 + 336);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->connections_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v349;
                  int v253 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                  goto LABEL_588;
                }
              }
            }
LABEL_589:
            if (v249) {
              free(v249);
            }
            uint64_t v226 = v938;
            *(_DWORD *)(v938 + 336) = -1;
            uint64_t v246 = v937;
            os_log_type_t v227 = (void **)(NWConcrete_nw_resolution_report + 16);
LABEL_592:
            uint64_t v360 = *(unsigned int *)(v226 + 360) + 1;
            uint64_t v361 = v360 << 31 >> 31;
            *(_DWORD *)(v226 + 360) = v360;
            if (v361 == v360 && (v361 & 0x8000000000000000) == 0) {
              goto LABEL_611;
            }
            uint64_t v362 = v226;
            __nwlog_obj();
            uint64_t v363 = *(unsigned int *)(v362 + 360);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->next_connection_log_num";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v959 = 1;
            *(_WORD *)v960 = 2048;
            *(void *)&v960[2] = v363;
            int v364 = (char *)_os_log_send_and_compose_impl();
            v961[0] = 16;
            LOBYTE(aBlock) = 0;
            if (__nwlog_fault(v364, v961, &aBlock))
            {
              if (v961[0] == 17)
              {
                int v365 = __nwlog_obj();
                os_log_type_t v366 = v961[0];
                if (os_log_type_enabled(v365, (os_log_type_t)v961[0]))
                {
                  uint64_t v367 = *(unsigned int *)(v938 + 360);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->next_connection_log_num";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v367;
                  uint64_t v368 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_607:
                  _os_log_impl(&dword_1830D4000, v365, v366, v368, buf, 0x2Au);
                }
              }
              else if ((_BYTE)aBlock)
              {
                uint64_t v369 = v162;
                uint64_t v370 = (char *)__nw_create_backtrace_string();
                int v365 = __nwlog_obj();
                os_log_type_t v366 = v961[0];
                BOOL v371 = os_log_type_enabled(v365, (os_log_type_t)v961[0]);
                if (v370)
                {
                  if (v371)
                  {
                    uint64_t v372 = *(unsigned int *)(v938 + 360);
                    *(_DWORD *)buf = 136447234;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->next_connection_log_num";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v959 = 1;
                    *(_WORD *)v960 = 2048;
                    *(void *)&v960[2] = v372;
                    *(_WORD *)&v960[10] = 2082;
                    *(void *)&v960[12] = v370;
                    _os_log_impl(&dword_1830D4000, v365, v366, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                  }
                  free(v370);
                  uint64_t v162 = v369;
                  goto LABEL_608;
                }
                uint64_t v162 = v369;
                if (v371)
                {
                  uint64_t v374 = *(unsigned int *)(v938 + 360);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->next_connection_log_num";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v374;
                  uint64_t v368 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                  goto LABEL_607;
                }
              }
              else
              {
                int v365 = __nwlog_obj();
                os_log_type_t v366 = v961[0];
                if (os_log_type_enabled(v365, (os_log_type_t)v961[0]))
                {
                  uint64_t v373 = *(unsigned int *)(v938 + 360);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->next_connection_log_num";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v959 = 1;
                  *(_WORD *)v960 = 2048;
                  *(void *)&v960[2] = v373;
                  uint64_t v368 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                  goto LABEL_607;
                }
              }
            }
LABEL_608:
            if (v364) {
              free(v364);
            }
            LODWORD(v360) = -1;
            *(_DWORD *)(v938 + 360) = -1;
            uint64_t v246 = v937;
            os_log_type_t v227 = NWConcrete_nw_resolution_report.cache;
LABEL_611:
            *((_DWORD *)v165 + 215) = v360;
            if ((*((unsigned char *)v165 + 158) & 1) == 0)
            {
              if (*((unsigned char *)v227 + 3665))
              {
                BOOL v731 = __nwlog_obj();
                if (os_log_type_enabled(v731, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v732 = *((void *)v165 + 61);
                  int v733 = *(_DWORD *)(*((void *)v165 + 60) + 372);
                  int v734 = *((_DWORD *)v165 + 215);
                  if (v732) {
                    LODWORD(v732) = *(_DWORD *)(v732 + 424);
                  }
                  int v735 = *(_DWORD *)(v938 + 336);
                  *(_DWORD *)buf = 136448002;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = (char *)v165 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v959 = (uint64_t)" ";
                  *(_WORD *)v960 = 1024;
                  *(_DWORD *)&v960[2] = v733;
                  *(_WORD *)&v960[6] = 1024;
                  *(_DWORD *)&v960[8] = v734;
                  *(_WORD *)&v960[12] = 1024;
                  *(_DWORD *)&v960[14] = v732;
                  *(_WORD *)&v960[18] = 2048;
                  *(void *)&v960[20] = v165;
                  *(_WORD *)&v960[28] = 1024;
                  *(_DWORD *)&v960[30] = v735;
                  _os_log_impl(&dword_1830D4000, v731, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added connection %p, now have %u connections", buf, 0x42u);
                  uint64_t v246 = v937;
                }
              }
            }
            if (*(void *)(v246 + 248))
            {
              if (*((void *)v165 + 61))
              {
                __nwlog_obj();
                uint64_t v375 = *((void *)v165 + 61);
                *(_DWORD *)buf = 136446722;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v165;
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = v375;
                unsigned int v376 = (char *)_os_log_send_and_compose_impl();
                v961[0] = 16;
                LOBYTE(aBlock) = 0;
                if (__nwlog_fault(v376, v961, &aBlock))
                {
                  if (v961[0] == 17)
                  {
                    BOOL v377 = __nwlog_obj();
                    os_log_type_t v378 = v961[0];
                    if (os_log_type_enabled(v377, (os_log_type_t)v961[0]))
                    {
                      uint64_t v379 = *((void *)v165 + 61);
                      *(_DWORD *)buf = 136446722;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v165;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v959 = v379;
                      int v380 = "%{public}s Connection %p already has a stream (%p)";
LABEL_638:
                      _os_log_impl(&dword_1830D4000, v377, v378, v380, buf, 0x20u);
                    }
                  }
                  else if ((_BYTE)aBlock)
                  {
                    BOOL v393 = v162;
                    uint64_t v394 = (char *)__nw_create_backtrace_string();
                    BOOL v377 = __nwlog_obj();
                    os_log_type_t v378 = v961[0];
                    BOOL v395 = os_log_type_enabled(v377, (os_log_type_t)v961[0]);
                    if (v394)
                    {
                      if (v395)
                      {
                        uint64_t v396 = *((void *)v165 + 61);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v165;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v959 = v396;
                        *(_WORD *)v960 = 2082;
                        *(void *)&v960[2] = v394;
                        _os_log_impl(&dword_1830D4000, v377, v378, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
                      }
                      free(v394);
                      uint64_t v162 = v393;
                      goto LABEL_639;
                    }
                    uint64_t v162 = v393;
                    if (v395)
                    {
                      uint64_t v398 = *((void *)v165 + 61);
                      *(_DWORD *)buf = 136446722;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v165;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v959 = v398;
                      int v380 = "%{public}s Connection %p already has a stream (%p), no backtrace";
                      goto LABEL_638;
                    }
                  }
                  else
                  {
                    BOOL v377 = __nwlog_obj();
                    os_log_type_t v378 = v961[0];
                    if (os_log_type_enabled(v377, (os_log_type_t)v961[0]))
                    {
                      uint64_t v397 = *((void *)v165 + 61);
                      *(_DWORD *)buf = 136446722;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v165;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v959 = v397;
                      int v380 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                      goto LABEL_638;
                    }
                  }
                }
LABEL_639:
                if (v376) {
                  free(v376);
                }
                uint64_t v246 = v937;
                goto LABEL_642;
              }
              *(void *)(v246 + 256) = v165;
              *((void *)v165 + 61) = v246;
              nw_protocol_set_output_handler(v246, *((void *)v165 + 4));
              nw_protocol_set_input_handler((uint64_t)v165, *(void *)(v246 + 48));
              *(_OWORD *)uint64_t v246 = *v165;
              long long v381 = v936[5];
              long long v383 = v936[2];
              long long v382 = v936[3];
              v165[8] = v936[4];
              v165[9] = v381;
              v165[6] = v383;
              v165[7] = v382;
              long long v384 = v936[1];
              v165[4] = *v936;
              v165[5] = v384;
              nw_http_transaction_metadata_set_connection_metadata(*(void **)(v246 + 352), *((void **)v165 + 96));
              *((_WORD *)v165 + 436) &= 0xFFD7u;
              *((_DWORD *)v165 + 216) = 1;
              if ((*((unsigned char *)v165 + 158) & 1) == 0)
              {
                int v385 = __nwlog_obj();
                if (os_log_type_enabled(v385, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v386 = *((void *)v165 + 61);
                  int v387 = *(_DWORD *)(*((void *)v165 + 60) + 372);
                  int v388 = *((_DWORD *)v165 + 215);
                  if (v386) {
                    LODWORD(v386) = *(_DWORD *)(v386 + 424);
                  }
                  *(_DWORD *)buf = 136447490;
                  *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = (char *)v165 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v959 = (uint64_t)" ";
                  *(_WORD *)v960 = 1024;
                  *(_DWORD *)&v960[2] = v387;
                  *(_WORD *)&v960[6] = 1024;
                  *(_DWORD *)&v960[8] = v388;
                  *(_WORD *)&v960[12] = 1024;
                  *(_DWORD *)&v960[14] = v386;
                  _os_log_impl(&dword_1830D4000, v385, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                }
              }
              if ((*(unsigned char *)(v246 + 158) & 1) == 0)
              {
                os_log_type_t v389 = __nwlog_obj();
                if (os_log_type_enabled(v389, OS_LOG_TYPE_INFO))
                {
                  uint64_t v390 = *(void *)(v246 + 256);
                  int v391 = *(_DWORD *)(*(void *)(v246 + 248) + 372);
                  if (v390) {
                    LODWORD(v390) = *(_DWORD *)(v390 + 860);
                  }
                  int v392 = *(_DWORD *)(v246 + 424);
                  *(_DWORD *)buf = 136448002;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v246 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v959 = (uint64_t)" ";
                  *(_WORD *)v960 = 1024;
                  *(_DWORD *)&v960[2] = v391;
                  *(_WORD *)&v960[6] = 1024;
                  *(_DWORD *)&v960[8] = v390;
                  *(_WORD *)&v960[12] = 1024;
                  *(_DWORD *)&v960[14] = v392;
                  *(_WORD *)&v960[18] = 2048;
                  *(void *)&v960[20] = v246;
                  *(_WORD *)&v960[28] = 2048;
                  *(void *)&v960[30] = v165;
                  _os_log_impl(&dword_1830D4000, v389, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
                }
              }
LABEL_642:
              if ((*(unsigned char *)(v246 + 158) & 1) == 0)
              {
                uint64_t v399 = __nwlog_obj();
                if (os_log_type_enabled(v399, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v400 = *(void *)(v246 + 256);
                  int v401 = *(_DWORD *)(*(void *)(v246 + 248) + 372);
                  if (v400) {
                    LODWORD(v400) = *(_DWORD *)(v400 + 860);
                  }
                  int v402 = *(_DWORD *)(v246 + 424);
                  *(_DWORD *)buf = 136448258;
                  *(void *)&uint8_t buf[4] = "nw_http1_start_new_connection_for_stream";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v246 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v959 = (uint64_t)" ";
                  *(_WORD *)v960 = 1024;
                  *(_DWORD *)&v960[2] = v401;
                  *(_WORD *)&v960[6] = 1024;
                  *(_DWORD *)&v960[8] = v400;
                  *(_WORD *)&v960[12] = 1024;
                  *(_DWORD *)&v960[14] = v402;
                  *(_WORD *)&v960[18] = 2048;
                  *(void *)&v960[20] = v165;
                  *(_WORD *)&v960[28] = 1024;
                  *(_DWORD *)&v960[30] = v402;
                  *(_WORD *)&v960[34] = 2048;
                  *(void *)&v960[36] = v246;
                  _os_log_impl(&dword_1830D4000, v399, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created new connection %p for stream %u (%p)", buf, 0x4Cu);
                }
              }
              nw_http_transaction_metadata_set_first_on_connection(*(void **)(v246 + 352));
              uint64_t v403 = nw_protocol_copy_info((uint64_t)v162, 255);
              long long v404 = (void *)v403;
              if (v403
                && (uint64_t v405 = *(void *)(v403 + 24), *(void *)(v403 + 16) != v405)
                && (long long v406 = *(void **)(v405 - 8)) != 0)
              {
                os_log_type_t v407 = os_retain(v406);
                uint64_t v408 = v407;
                if (v407 && nw_protocol_metadata_is_tls(v407))
                {
                  uint64_t v408 = v408;
                  nw_http_connection_metadata_set_sec_metadata(*((void **)v165 + 96), v408);
                  os_release(v408);
                  nw_protocol_connect((uint64_t)v162, (uint64_t)v165);
                  goto LABEL_656;
                }
              }
              else
              {
                uint64_t v408 = 0;
              }
              if (v165)
              {
                nw_protocol_connect((uint64_t)v162, (uint64_t)v165);
                if (!v408) {
                  goto LABEL_657;
                }
                goto LABEL_656;
              }
              uint64_t v694 = (uint64_t)v162;
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
              uint64_t v695 = (char *)_os_log_send_and_compose_impl();
              v961[0] = 16;
              LOBYTE(aBlock) = 0;
              if (__nwlog_fault(v695, v961, &aBlock))
              {
                if (v961[0] == 17)
                {
                  uint64_t v696 = __nwlog_obj();
                  os_log_type_t v697 = v961[0];
                  if (!os_log_type_enabled(v696, (os_log_type_t)v961[0])) {
                    goto LABEL_1368;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                  v698 = "%{public}s called with null connection";
LABEL_1367:
                  _os_log_impl(&dword_1830D4000, v696, v697, v698, buf, 0xCu);
                  goto LABEL_1368;
                }
                if (!(_BYTE)aBlock)
                {
                  uint64_t v696 = __nwlog_obj();
                  os_log_type_t v697 = v961[0];
                  if (!os_log_type_enabled(v696, (os_log_type_t)v961[0])) {
                    goto LABEL_1368;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                  v698 = "%{public}s called with null connection, backtrace limit exceeded";
                  goto LABEL_1367;
                }
                int v752 = (char *)__nw_create_backtrace_string();
                uint64_t v696 = __nwlog_obj();
                os_log_type_t v697 = v961[0];
                BOOL v753 = os_log_type_enabled(v696, (os_log_type_t)v961[0]);
                if (!v752)
                {
                  if (!v753) {
                    goto LABEL_1368;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                  v698 = "%{public}s called with null connection, no backtrace";
                  goto LABEL_1367;
                }
                if (v753)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v752;
                  _os_log_impl(&dword_1830D4000, v696, v697, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v752);
              }
LABEL_1368:
              if (v695) {
                free(v695);
              }
              nw_protocol_connect(v694, 0);
              uint64_t v246 = v937;
              if (!v408)
              {
LABEL_657:
                if (v404) {
                  os_release(v404);
                }
                nw_protocol_set_output_handler(v938, 0);
                *(_WORD *)(v246 + 428) &= ~8u;
                int v409 = *(_DWORD *)(v938 + 352);
                *(_DWORD *)(v938 + 352) = v409 - 1;
                if (v409) {
                  return;
                }
                __nwlog_obj();
                uint64_t v410 = *(unsigned int *)(v938 + 352);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->pending_output_handler_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v959 = 1;
                *(_WORD *)v960 = 2048;
                *(void *)&v960[2] = v410;
                os_log_type_t v411 = (char *)_os_log_send_and_compose_impl();
                v961[0] = 16;
                LOBYTE(aBlock) = 0;
                if (__nwlog_fault(v411, v961, &aBlock))
                {
                  if (v961[0] == 17)
                  {
                    uint64_t v412 = __nwlog_obj();
                    os_log_type_t v413 = v961[0];
                    if (os_log_type_enabled(v412, (os_log_type_t)v961[0]))
                    {
                      uint64_t v414 = *(unsigned int *)(v938 + 352);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->pending_output_handler_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v959 = 1;
                      *(_WORD *)v960 = 2048;
                      *(void *)&v960[2] = v414;
                      os_log_type_t v415 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_678:
                      _os_log_impl(&dword_1830D4000, v412, v413, v415, buf, 0x2Au);
                    }
                  }
                  else if ((_BYTE)aBlock)
                  {
                    BOOL v416 = (char *)__nw_create_backtrace_string();
                    uint64_t v412 = __nwlog_obj();
                    os_log_type_t v413 = v961[0];
                    BOOL v417 = os_log_type_enabled(v412, (os_log_type_t)v961[0]);
                    if (v416)
                    {
                      if (v417)
                      {
                        uint64_t v418 = *(unsigned int *)(v938 + 352);
                        *(_DWORD *)buf = 136447234;
                        *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->pending_output_handler_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v959 = 1;
                        *(_WORD *)v960 = 2048;
                        *(void *)&v960[2] = v418;
                        *(_WORD *)&v960[10] = 2082;
                        *(void *)&v960[12] = v416;
                        _os_log_impl(&dword_1830D4000, v412, v413, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                      }
                      free(v416);
                      goto LABEL_679;
                    }
                    if (v417)
                    {
                      uint64_t v423 = *(unsigned int *)(v938 + 352);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->pending_output_handler_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v959 = 1;
                      *(_WORD *)v960 = 2048;
                      *(void *)&v960[2] = v423;
                      os_log_type_t v415 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
                      goto LABEL_678;
                    }
                  }
                  else
                  {
                    uint64_t v412 = __nwlog_obj();
                    os_log_type_t v413 = v961[0];
                    if (os_log_type_enabled(v412, (os_log_type_t)v961[0]))
                    {
                      uint64_t v419 = *(unsigned int *)(v938 + 352);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->pending_output_handler_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v959 = 1;
                      *(_WORD *)v960 = 2048;
                      *(void *)&v960[2] = v419;
                      os_log_type_t v415 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
                      goto LABEL_678;
                    }
                  }
                }
LABEL_679:
                if (v411) {
                  free(v411);
                }
                *(_DWORD *)(v938 + 352) = 0;
                return;
              }
LABEL_656:
              os_release(v408);
              goto LABEL_657;
            }
            int v722 = v162;
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
            int v723 = (char *)_os_log_send_and_compose_impl();
            v961[0] = 16;
            LOBYTE(aBlock) = 0;
            if (__nwlog_fault(v723, v961, &aBlock))
            {
              if (v961[0] == 17)
              {
                int v724 = __nwlog_obj();
                os_log_type_t v725 = v961[0];
                if (os_log_type_enabled(v724, (os_log_type_t)v961[0]))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v726 = "%{public}s called with null http1_stream->protocol_http1";
LABEL_1431:
                  _os_log_impl(&dword_1830D4000, v724, v725, v726, buf, 0xCu);
                }
              }
              else if ((_BYTE)aBlock)
              {
                int v798 = (char *)__nw_create_backtrace_string();
                int v724 = __nwlog_obj();
                os_log_type_t v725 = v961[0];
                BOOL v799 = os_log_type_enabled(v724, (os_log_type_t)v961[0]);
                if (v798)
                {
                  if (v799)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v798;
                    _os_log_impl(&dword_1830D4000, v724, v725, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v798);
                  goto LABEL_1432;
                }
                if (v799)
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v726 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
                  goto LABEL_1431;
                }
              }
              else
              {
                int v724 = __nwlog_obj();
                os_log_type_t v725 = v961[0];
                if (os_log_type_enabled(v724, (os_log_type_t)v961[0]))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v726 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                  goto LABEL_1431;
                }
              }
            }
LABEL_1432:
            if (v723) {
              free(v723);
            }
            uint64_t v246 = v937;
            uint64_t v162 = v722;
            goto LABEL_642;
          }
          int v717 = v162;
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
          int v718 = (char *)_os_log_send_and_compose_impl();
          v961[0] = 16;
          LOBYTE(aBlock) = 0;
          if (__nwlog_fault(v718, v961, &aBlock))
          {
            if (v961[0] == 17)
            {
              v719 = __nwlog_obj();
              os_log_type_t v720 = v961[0];
              if (!os_log_type_enabled(v719, (os_log_type_t)v961[0])) {
                goto LABEL_1425;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              uint64_t v721 = "%{public}s called with null parameters";
LABEL_1424:
              _os_log_impl(&dword_1830D4000, v719, v720, v721, buf, 0xCu);
              goto LABEL_1425;
            }
            if (!(_BYTE)aBlock)
            {
              v719 = __nwlog_obj();
              os_log_type_t v720 = v961[0];
              if (!os_log_type_enabled(v719, (os_log_type_t)v961[0])) {
                goto LABEL_1425;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              uint64_t v721 = "%{public}s called with null parameters, backtrace limit exceeded";
              goto LABEL_1424;
            }
            uint64_t v796 = (char *)__nw_create_backtrace_string();
            v719 = __nwlog_obj();
            os_log_type_t v720 = v961[0];
            BOOL v797 = os_log_type_enabled(v719, (os_log_type_t)v961[0]);
            if (!v796)
            {
              if (!v797) {
                goto LABEL_1425;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              uint64_t v721 = "%{public}s called with null parameters, no backtrace";
              goto LABEL_1424;
            }
            if (v797)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v796;
              _os_log_impl(&dword_1830D4000, v719, v720, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v796);
          }
LABEL_1425:
          if (v718) {
            free(v718);
          }
          uint64_t v226 = v938;
          os_log_type_t v227 = (void **)(NWConcrete_nw_resolution_report + 16);
          uint64_t v162 = v717;
          int v242 = *v224;
          if (*v224) {
            goto LABEL_412;
          }
          goto LABEL_414;
        }
        uint64_t v699 = *(_OWORD **)(v105 + 32);
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
        int v700 = (char *)_os_log_send_and_compose_impl();
        v953[0] = 16;
        LOBYTE(v941[0]) = 0;
        if (__nwlog_fault(v700, v953, v941))
        {
          if (v953[0] == 17)
          {
            int v701 = __nwlog_obj();
            os_log_type_t v702 = v953[0];
            if (!os_log_type_enabled(v701, (os_log_type_t)v953[0])) {
              goto LABEL_1381;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            uint64_t v703 = "%{public}s called with null parameters";
            goto LABEL_1380;
          }
          if (!LOBYTE(v941[0]))
          {
            int v701 = __nwlog_obj();
            os_log_type_t v702 = v953[0];
            if (!os_log_type_enabled(v701, (os_log_type_t)v953[0])) {
              goto LABEL_1381;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            uint64_t v703 = "%{public}s called with null parameters, backtrace limit exceeded";
            goto LABEL_1380;
          }
          v767 = (char *)__nw_create_backtrace_string();
          int v701 = __nwlog_obj();
          os_log_type_t v702 = v953[0];
          BOOL v784 = os_log_type_enabled(v701, (os_log_type_t)v953[0]);
          if (!v767)
          {
            if (!v784) {
              goto LABEL_1381;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            uint64_t v703 = "%{public}s called with null parameters, no backtrace";
            goto LABEL_1380;
          }
          if (v784)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v767;
            int v769 = "%{public}s called with null parameters, dumping backtrace:%{public}s";
            goto LABEL_1213;
          }
          goto LABEL_1214;
        }
LABEL_1381:
        if (!v700) {
          goto LABEL_1383;
        }
        goto LABEL_1382;
      }
      uint64_t v699 = *(_OWORD **)(v105 + 32);
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      int v700 = (char *)_os_log_send_and_compose_impl();
      v953[0] = 16;
      LOBYTE(v941[0]) = 0;
      if (!__nwlog_fault(v700, v953, v941)) {
        goto LABEL_1381;
      }
      if (v953[0] != 17)
      {
        if (!LOBYTE(v941[0]))
        {
          int v701 = __nwlog_obj();
          os_log_type_t v702 = v953[0];
          if (!os_log_type_enabled(v701, (os_log_type_t)v953[0])) {
            goto LABEL_1381;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          uint64_t v703 = "%{public}s called with null endpoint, backtrace limit exceeded";
          goto LABEL_1380;
        }
        v767 = (char *)__nw_create_backtrace_string();
        int v701 = __nwlog_obj();
        os_log_type_t v702 = v953[0];
        BOOL v768 = os_log_type_enabled(v701, (os_log_type_t)v953[0]);
        if (!v767)
        {
          if (!v768) {
            goto LABEL_1381;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          uint64_t v703 = "%{public}s called with null endpoint, no backtrace";
          goto LABEL_1380;
        }
        if (v768)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v767;
          int v769 = "%{public}s called with null endpoint, dumping backtrace:%{public}s";
LABEL_1213:
          _os_log_impl(&dword_1830D4000, v701, v702, v769, buf, 0x16u);
        }
LABEL_1214:
        free(v767);
        if (!v700)
        {
LABEL_1383:
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
          v869 = (char *)_os_log_send_and_compose_impl();
          v961[0] = 16;
          LOBYTE(aBlock) = 0;
          if (!__nwlog_fault(v869, v961, &aBlock)) {
            goto LABEL_1397;
          }
          if (v961[0] == 17)
          {
            BOOL v870 = __nwlog_obj();
            os_log_type_t v871 = v961[0];
            if (!os_log_type_enabled(v870, (os_log_type_t)v961[0])) {
              goto LABEL_1397;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            v872 = "%{public}s called with null http1_connection";
          }
          else if ((_BYTE)aBlock)
          {
            os_log_type_t v873 = (char *)__nw_create_backtrace_string();
            BOOL v870 = __nwlog_obj();
            os_log_type_t v871 = v961[0];
            BOOL v874 = os_log_type_enabled(v870, (os_log_type_t)v961[0]);
            if (v873)
            {
              if (v874)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v873;
                _os_log_impl(&dword_1830D4000, v870, v871, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v873);
LABEL_1397:
              if (v869) {
                free(v869);
              }
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              v875 = (char *)_os_log_send_and_compose_impl();
              v961[0] = 16;
              LOBYTE(aBlock) = 0;
              if (!__nwlog_fault(v875, v961, &aBlock)) {
                goto LABEL_1413;
              }
              if (v961[0] == 17)
              {
                uint64_t v876 = __nwlog_obj();
                os_log_type_t v877 = v961[0];
                if (os_log_type_enabled(v876, (os_log_type_t)v961[0]))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v878 = "%{public}s called with null http1_connection";
LABEL_1412:
                  _os_log_impl(&dword_1830D4000, v876, v877, v878, buf, 0xCu);
                }
              }
              else if ((_BYTE)aBlock)
              {
                uint64_t v879 = (char *)__nw_create_backtrace_string();
                uint64_t v876 = __nwlog_obj();
                os_log_type_t v877 = v961[0];
                BOOL v880 = os_log_type_enabled(v876, (os_log_type_t)v961[0]);
                if (v879)
                {
                  if (v880)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v879;
                    _os_log_impl(&dword_1830D4000, v876, v877, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v879);
                  goto LABEL_1413;
                }
                if (v880)
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v878 = "%{public}s called with null http1_connection, no backtrace";
                  goto LABEL_1412;
                }
              }
              else
              {
                uint64_t v876 = __nwlog_obj();
                os_log_type_t v877 = v961[0];
                if (os_log_type_enabled(v876, (os_log_type_t)v961[0]))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v878 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                  goto LABEL_1412;
                }
              }
LABEL_1413:
              if (v875) {
                free(v875);
              }
              int v165 = 0;
              uint64_t v246 = v937;
              uint64_t v162 = v699;
              goto LABEL_642;
            }
            if (!v874) {
              goto LABEL_1397;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            v872 = "%{public}s called with null http1_connection, no backtrace";
          }
          else
          {
            BOOL v870 = __nwlog_obj();
            os_log_type_t v871 = v961[0];
            if (!os_log_type_enabled(v870, (os_log_type_t)v961[0])) {
              goto LABEL_1397;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            v872 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          }
          _os_log_impl(&dword_1830D4000, v870, v871, v872, buf, 0xCu);
          goto LABEL_1397;
        }
LABEL_1382:
        free(v700);
        goto LABEL_1383;
      }
      int v701 = __nwlog_obj();
      os_log_type_t v702 = v953[0];
      if (!os_log_type_enabled(v701, (os_log_type_t)v953[0])) {
        goto LABEL_1381;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      uint64_t v703 = "%{public}s called with null endpoint";
    }
    else
    {
      uint64_t v699 = 0;
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      int v700 = (char *)_os_log_send_and_compose_impl();
      v953[0] = 16;
      LOBYTE(v941[0]) = 0;
      if (!__nwlog_fault(v700, v953, v941)) {
        goto LABEL_1381;
      }
      if (v953[0] != 17)
      {
        if (!LOBYTE(v941[0]))
        {
          int v701 = __nwlog_obj();
          os_log_type_t v702 = v953[0];
          if (!os_log_type_enabled(v701, (os_log_type_t)v953[0])) {
            goto LABEL_1381;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          uint64_t v703 = "%{public}s called with null output_handler, backtrace limit exceeded";
          goto LABEL_1380;
        }
        os_log_type_t v765 = (char *)__nw_create_backtrace_string();
        int v701 = __nwlog_obj();
        os_log_type_t v702 = v953[0];
        BOOL v766 = os_log_type_enabled(v701, (os_log_type_t)v953[0]);
        if (!v765)
        {
          if (!v766) {
            goto LABEL_1381;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          uint64_t v703 = "%{public}s called with null output_handler, no backtrace";
          goto LABEL_1380;
        }
        if (v766)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v765;
          _os_log_impl(&dword_1830D4000, v701, v702, "%{public}s called with null output_handler, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v765);
        goto LABEL_1381;
      }
      int v701 = __nwlog_obj();
      os_log_type_t v702 = v953[0];
      if (!os_log_type_enabled(v701, (os_log_type_t)v953[0])) {
        goto LABEL_1381;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      uint64_t v703 = "%{public}s called with null output_handler";
    }
LABEL_1380:
    _os_log_impl(&dword_1830D4000, v701, v702, v703, buf, 0xCu);
    goto LABEL_1381;
  }
  if ((*(unsigned char *)(v24 + 158) & 1) == 0)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v128 = gLogObj;
    if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
    {
      int v131 = *(_DWORD *)(v938 + 372);
      *(_DWORD *)buf = 136446978;
      *(void *)&uint8_t buf[4] = "nw_http1_match_idle_connection_with_pending_stream";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v938 + 74;
      *(_WORD *)&buf[22] = 2080;
      uint64_t v959 = (uint64_t)" ";
      *(_WORD *)v960 = 1024;
      *(_DWORD *)&v960[2] = v131;
      uint64_t v130 = "%{public}s %{public}s%s<i%u> no pending streams, nothing to do";
      goto LABEL_256;
    }
  }
}

void nw_protocol_http1_connected(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v277 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v144 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock[0]) = 0;
    if (!__nwlog_fault(v144, type, aBlock)) {
      goto LABEL_401;
    }
    if (type[0] != OS_LOG_TYPE_FAULT)
    {
      if (!LOBYTE(aBlock[0]))
      {
        uint64_t v145 = __nwlog_obj();
        os_log_type_t v146 = type[0];
        if (!os_log_type_enabled(v145, type[0])) {
          goto LABEL_401;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v147 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_400;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v145 = __nwlog_obj();
      os_log_type_t v146 = type[0];
      BOOL v157 = os_log_type_enabled(v145, type[0]);
      if (!backtrace_string)
      {
        if (!v157) {
          goto LABEL_401;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v147 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_400;
      }
      if (v157)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = backtrace_string;
        _os_log_impl(&dword_1830D4000, v145, v146, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_401;
    }
    uint64_t v145 = __nwlog_obj();
    os_log_type_t v146 = type[0];
    if (!os_log_type_enabled(v145, type[0])) {
      goto LABEL_401;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v147 = "%{public}s called with null protocol";
LABEL_400:
    _os_log_impl(&dword_1830D4000, v145, v146, v147, buf, 0xCu);
    goto LABEL_401;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v144 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock[0]) = 0;
    if (!__nwlog_fault(v144, type, aBlock)) {
      goto LABEL_401;
    }
    if (type[0] != OS_LOG_TYPE_FAULT)
    {
      if (!LOBYTE(aBlock[0]))
      {
        uint64_t v145 = __nwlog_obj();
        os_log_type_t v146 = type[0];
        if (!os_log_type_enabled(v145, type[0])) {
          goto LABEL_401;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v147 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_400;
      }
      uint64_t v158 = (char *)__nw_create_backtrace_string();
      uint64_t v145 = __nwlog_obj();
      os_log_type_t v146 = type[0];
      BOOL v159 = os_log_type_enabled(v145, type[0]);
      if (!v158)
      {
        if (!v159) {
          goto LABEL_401;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v147 = "%{public}s called with null handle, no backtrace";
        goto LABEL_400;
      }
      if (v159)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v158;
        _os_log_impl(&dword_1830D4000, v145, v146, "%{public}s called with null handle, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v158);
      if (!v144)
      {
LABEL_403:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
        int v148 = (char *)_os_log_send_and_compose_impl();
        type[0] = OS_LOG_TYPE_ERROR;
        LOBYTE(aBlock[0]) = 0;
        if (!__nwlog_fault(v148, type, aBlock)) {
          goto LABEL_440;
        }
        if (type[0] == OS_LOG_TYPE_FAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v149 = gLogObj;
          os_log_type_t v150 = type[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
            goto LABEL_440;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
          uint64_t v151 = "%{public}s called with null http1";
        }
        else
        {
          if (LOBYTE(aBlock[0]))
          {
            __int16 v238 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            int v239 = gLogObj;
            os_log_type_t v240 = type[0];
            BOOL v241 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
            if (!v238)
            {
              if (!v241) {
                goto LABEL_440;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
              uint64_t v151 = "%{public}s called with null http1, no backtrace";
              goto LABEL_445;
            }
            if (v241)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v238;
              _os_log_impl(&dword_1830D4000, v239, v240, "%{public}s called with null http1, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v238);
LABEL_440:
            if (!v148) {
              return;
            }
            goto LABEL_441;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v149 = gLogObj;
          os_log_type_t v150 = type[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
            goto LABEL_440;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
          uint64_t v151 = "%{public}s called with null http1, backtrace limit exceeded";
        }
LABEL_438:
        uint64_t v244 = v149;
        os_log_type_t v245 = v150;
LABEL_439:
        _os_log_impl(&dword_1830D4000, v244, v245, v151, buf, 0xCu);
        goto LABEL_440;
      }
LABEL_402:
      free(v144);
      goto LABEL_403;
    }
    uint64_t v145 = __nwlog_obj();
    os_log_type_t v146 = type[0];
    if (!os_log_type_enabled(v145, type[0])) {
      goto LABEL_401;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v147 = "%{public}s called with null handle";
    goto LABEL_400;
  }
  uint64_t v4 = a2;
  int v5 = *((_DWORD *)handle + 6);
  uint64_t v6 = (uint64_t *)a1->handle;
  if (v5 == 1) {
    goto LABEL_10;
  }
  if (v5 != 2)
  {
    if (v5 != 3) {
      goto LABEL_403;
    }
    uint64_t v7 = *((void *)handle + 2);
    if (v7)
    {
      uint64_t v6 = (uint64_t *)(v7 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v144 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock[0]) = 0;
    if (__nwlog_fault(v144, type, aBlock))
    {
      if (type[0] == OS_LOG_TYPE_FAULT)
      {
        uint64_t v145 = __nwlog_obj();
        os_log_type_t v146 = type[0];
        if (!os_log_type_enabled(v145, type[0])) {
          goto LABEL_401;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v147 = "%{public}s called with null handle->http1_connection";
        goto LABEL_400;
      }
      if (!LOBYTE(aBlock[0]))
      {
        uint64_t v145 = __nwlog_obj();
        os_log_type_t v146 = type[0];
        if (!os_log_type_enabled(v145, type[0])) {
          goto LABEL_401;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v147 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_400;
      }
      uint64_t v178 = (char *)__nw_create_backtrace_string();
      uint64_t v145 = __nwlog_obj();
      os_log_type_t v146 = type[0];
      BOOL v179 = os_log_type_enabled(v145, type[0]);
      if (!v178)
      {
        if (!v179) {
          goto LABEL_401;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        uint64_t v147 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_400;
      }
      if (v179)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v178;
        int v180 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
LABEL_292:
        _os_log_impl(&dword_1830D4000, v145, v146, v180, buf, 0x16u);
        goto LABEL_293;
      }
      goto LABEL_293;
    }
LABEL_401:
    if (!v144) {
      goto LABEL_403;
    }
    goto LABEL_402;
  }
  uint64_t v8 = *((void *)handle + 1);
  if (!v8)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    uint64_t v144 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock[0]) = 0;
    if (!__nwlog_fault(v144, type, aBlock)) {
      goto LABEL_401;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      uint64_t v145 = __nwlog_obj();
      os_log_type_t v146 = type[0];
      if (!os_log_type_enabled(v145, type[0])) {
        goto LABEL_401;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v147 = "%{public}s called with null handle->http1_stream";
      goto LABEL_400;
    }
    if (!LOBYTE(aBlock[0]))
    {
      uint64_t v145 = __nwlog_obj();
      os_log_type_t v146 = type[0];
      if (!os_log_type_enabled(v145, type[0])) {
        goto LABEL_401;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v147 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_400;
    }
    uint64_t v178 = (char *)__nw_create_backtrace_string();
    uint64_t v145 = __nwlog_obj();
    os_log_type_t v146 = type[0];
    BOOL v181 = os_log_type_enabled(v145, type[0]);
    if (!v178)
    {
      if (!v181) {
        goto LABEL_401;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      uint64_t v147 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_400;
    }
    if (v181)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v178;
      int v180 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_292;
    }
LABEL_293:
    free(v178);
    if (!v144) {
      goto LABEL_403;
    }
    goto LABEL_402;
  }
  uint64_t v6 = (uint64_t *)(v8 + 248);
LABEL_10:
  uint64_t v9 = *v6;
  if (!*v6) {
    goto LABEL_403;
  }
  if (a2)
  {
    if (v5 == 2)
    {
      uint64_t v11 = *((void *)handle + 1);
      if (!v11) {
        goto LABEL_193;
      }
      goto LABEL_18;
    }
    if (v5 != 3) {
      goto LABEL_193;
    }
    uint64_t v10 = *((void *)handle + 2);
    if (v10)
    {
      uint64_t v11 = *(void *)(v10 + 488);
      if (!v11) {
        goto LABEL_193;
      }
LABEL_18:
      if (v5 != 2)
      {
        if (*((void *)handle + 2)) {
          goto LABEL_193;
        }
        goto LABEL_23;
      }
      uint64_t v12 = *((void *)handle + 1);
      if (v12)
      {
        if (*(void *)(v12 + 256)) {
          goto LABEL_193;
        }
LABEL_23:
        if ((*(unsigned char *)(v11 + 158) & 1) == 0)
        {
          if (gLogDatapath)
          {
            id v173 = __nwlog_obj();
            if (os_log_type_enabled(v173, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v174 = *(void *)(v11 + 256);
              int v175 = *(_DWORD *)(*(void *)(v11 + 248) + 372);
              if (v174) {
                LODWORD(v174) = *(_DWORD *)(v174 + 860);
              }
              int v176 = *(_DWORD *)(v11 + 424);
              output_handler = a1->output_handler;
              *(_DWORD *)buf = 136447746;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v11 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v271 = (uint64_t)" ";
              __int16 v272 = 1024;
              *(_DWORD *)int v273 = v175;
              *(_WORD *)&v273[4] = 1024;
              *(_DWORD *)&v273[6] = v174;
              LOWORD(v274) = 1024;
              *(_DWORD *)((char *)&v274 + 2) = v176;
              HIWORD(v274) = 2048;
              *(void *)uint64_t v275 = output_handler;
              _os_log_impl(&dword_1830D4000, v173, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> associating connected output handler %p", buf, 0x3Cu);
            }
          }
        }
        uint64_t v13 = a1->output_handler;
        if (!v13) {
          goto LABEL_193;
        }
        uint64_t v14 = *(void **)(v11 + 336);
        uint64_t v260 = a1->output_handler;
        if (v14)
        {
          int v15 = *(void **)(v11 + 320);
          if (v15)
          {
            BOOL v16 = malloc_type_calloc(1uLL, 0x370uLL, 0xEAFB8F1AuLL);
            if (!v16)
            {
              uint64_t v196 = __nwlog_obj();
              os_log_type_enabled(v196, OS_LOG_TYPE_ERROR);
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "strict_calloc";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = 1;
              *(_WORD *)&buf[22] = 2048;
              uint64_t v271 = 880;
              int v197 = (void *)_os_log_send_and_compose_impl();
              if (__nwlog_abort((uint64_t)v197))
              {
                __break(1u);
                return;
              }
              free(v197);
              uint64_t v13 = v260;
            }
            bzero(v16, 0x370uLL);
            if (nw_protocol_http1_identifier::onceToken != -1) {
              dispatch_once(&nw_protocol_http1_identifier::onceToken, &__block_literal_global_40283);
            }
            *((void *)v16 + 2) = &nw_protocol_http1_identifier::http1_protocol_identifier;
            if (nw_protocol_http1_get_callbacks(void)::onceToken != -1) {
              dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
            }
            *((void *)v16 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
            *((_DWORD *)v16 + 46) = 3;
            *((void *)v16 + 22) = v16;
            *((void *)v16 + 5) = v16 + 10;
            *((void *)v16 + 60) = v9;
            nw_protocol_set_output_handler((uint64_t)v16, (uint64_t)v13);
            int v17 = os_retain(v14);
            char v18 = *((unsigned char *)v16 + 760);
            if (v18)
            {
              uint64_t v19 = (void *)*((void *)v16 + 94);
              if (v19)
              {
                os_release(v19);
                char v18 = *((unsigned char *)v16 + 760);
              }
            }
            *((void *)v16 + 94) = v17;
            *((unsigned char *)v16 + 760) = v18 | 1;
            int v20 = os_retain(v15);
            char v21 = *((unsigned char *)v16 + 744);
            uint64_t v259 = v4;
            if (v21)
            {
              int v22 = (void *)*((void *)v16 + 92);
              if (v22)
              {
                os_release(v22);
                char v21 = *((unsigned char *)v16 + 744);
              }
            }
            *((void *)v16 + 92) = v20;
            *((unsigned char *)v16 + 744) = v21 | 1;
            int v23 = v15;
            id v24 = *(id *)(v23[13] + 136);

            char v25 = *((unsigned char *)v16 + 504);
            if (v25)
            {
              uint64_t v26 = (void *)*((void *)v16 + 62);
              if (v26)
              {
                os_release(v26);
                char v25 = *((unsigned char *)v16 + 504);
              }
            }
            *((void *)v16 + 62) = v24;
            *((unsigned char *)v16 + 504) = v25 | 1;
            *((void *)v16 + 24) = *(void *)(v9 + 192);
            *(void *)os_log_type_t type = MEMORY[0x1E4F143A8];
            uint64_t v264 = 0x40000000;
            uint64_t v265 = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke;
            char v266 = &__block_descriptor_tmp_43_40284;
            BOOL v267 = v16;
            metadata = nw_http_connection_create_metadata(v24, type, 0);
            char v28 = *((unsigned char *)v16 + 776);
            if (v28)
            {
              uint64_t v29 = (void *)*((void *)v16 + 96);
              if (v29)
              {
                os_release(v29);
                char v28 = *((unsigned char *)v16 + 776);
              }
            }
            *((void *)v16 + 96) = metadata;
            *((unsigned char *)v16 + 776) = v28 | 1;
            nw_http_connection_metadata_set_version(metadata, 3);
            nw_http_connection_metadata_set_shared_connection_pool_metadata(*((void **)v16 + 96), *(void **)(v9 + 312));
            *((void *)v16 + 77) = 0;
            *((void *)v16 + 78) = (char *)v16 + 616;
            *((void *)v16 + 79) = 0;
            *((void *)v16 + 80) = (char *)v16 + 632;
            *((void *)v16 + 81) = 0;
            *((void *)v16 + 82) = (char *)v16 + 648;
            *((void *)v16 + 83) = 0;
            *((void *)v16 + 84) = (char *)v16 + 664;
            *((void *)v16 + 86) = (char *)v16 + 680;
            *((void *)v16 + 85) = 0;
            nw_frame_cache_init((uint64_t)v16 + 696, (uint64_t)v16, 256, 0x40000, 16);
            uint64_t v30 = *((void *)v16 + 60);
            if (v30)
            {
              *(_OWORD *)((char *)v16 + 360) = 0u;
              *(_OWORD *)((char *)v16 + 376) = 0u;
              *(_OWORD *)((char *)v16 + 392) = 0u;
              *(_OWORD *)((char *)v16 + 408) = 0u;
              *(_OWORD *)((char *)v16 + 424) = 0u;
              *(_OWORD *)((char *)v16 + 440) = 0u;
              *(_OWORD *)((char *)v16 + 328) = 0u;
              *(_OWORD *)((char *)v16 + 344) = 0u;
              *((void *)v16 + 37) = nw_http1_on_message_begin;
              *((void *)v16 + 48) = nw_http1_on_message_complete;
              *((void *)v16 + 46) = nw_http1_on_headers_complete;
              *((void *)v16 + 59) = nw_http1_on_reset;
              *((void *)v16 + 40) = nw_http1_on_method;
              *((void *)v16 + 51) = nw_http1_on_method_complete;
              *((void *)v16 + 38) = nw_http1_on_url;
              *((void *)v16 + 49) = nw_http1_on_url_complete;
              *((void *)v16 + 39) = nw_http1_on_status;
              *((void *)v16 + 50) = nw_http1_on_status_complete;
              *((void *)v16 + 42) = nw_http1_on_header_field;
              *((void *)v16 + 53) = nw_http1_on_header_field_complete;
              *((void *)v16 + 43) = nw_http1_on_header_value;
              *((void *)v16 + 54) = nw_http1_on_header_value_complete;
              *((void *)v16 + 47) = nw_http1_on_body;
              *((void *)v16 + 57) = nw_http1_on_chunk_header;
              *((void *)v16 + 58) = nw_http1_on_chunk_complete;
              char v31 = *(unsigned char *)(v30 + 376);
              *(_OWORD *)((char *)v16 + 248) = 0u;
              *(_OWORD *)((char *)v16 + 200) = 0u;
              *(_OWORD *)((char *)v16 + 264) = 0u;
              *(_OWORD *)((char *)v16 + 232) = 0u;
              *(_OWORD *)((char *)v16 + 216) = 0u;
              if (v31) {
                char v32 = 1;
              }
              else {
                char v32 = 2;
              }
              *((unsigned char *)v16 + 272) = v32;
              *((void *)v16 + 35) = 0;
              *((void *)v16 + 36) = (char *)v16 + 296;
              *((_WORD *)v16 + 139) = 16131;
              *((void *)v16 + 31) = v16;
              *((void *)v16 + 32) = 238;
              if ((*((unsigned char *)v16 + 158) & 1) == 0)
              {
                pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                networkd_settings_init();
                uint64_t v33 = gLogObj;
                if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v34 = *((void *)v16 + 61);
                  int v35 = *(_DWORD *)(*((void *)v16 + 60) + 372);
                  int v36 = *((_DWORD *)v16 + 215);
                  if (v34) {
                    LODWORD(v34) = *(_DWORD *)(v34 + 424);
                  }
                  *(_DWORD *)buf = 136448258;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_log_parser_version";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = (char *)v16 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v271 = (uint64_t)" ";
                  __int16 v272 = 1024;
                  *(_DWORD *)int v273 = v35;
                  *(_WORD *)&v273[4] = 1024;
                  *(_DWORD *)&v273[6] = v36;
                  LOWORD(v274) = 1024;
                  *(_DWORD *)((char *)&v274 + 2) = v34;
                  HIWORD(v274) = 1024;
                  *(_DWORD *)uint64_t v275 = 9;
                  *(_WORD *)&v275[4] = 1024;
                  *(_DWORD *)&v275[6] = 2;
                  *(_WORD *)char v276 = 1024;
                  *(_DWORD *)&v276[2] = 1;
                  _os_log_impl(&dword_1830D4000, v33, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using http parser v%u.%u.%u", buf, 0x44u);
                }
              }
              goto LABEL_54;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
            int v198 = (char *)_os_log_send_and_compose_impl();
            os_log_type_t v269 = OS_LOG_TYPE_ERROR;
            char v268 = 0;
            if (__nwlog_fault(v198, &v269, &v268))
            {
              if (v269 == OS_LOG_TYPE_FAULT)
              {
                int v199 = __nwlog_obj();
                os_log_type_t v200 = v269;
                if (os_log_type_enabled(v199, v269))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                  int v201 = "%{public}s called with null http1_connection->protocol_http1";
LABEL_509:
                  _os_log_impl(&dword_1830D4000, v199, v200, v201, buf, 0xCu);
                }
              }
              else if (v268)
              {
                long long v230 = (char *)__nw_create_backtrace_string();
                int v199 = __nwlog_obj();
                os_log_type_t v200 = v269;
                BOOL v231 = os_log_type_enabled(v199, v269);
                if (v230)
                {
                  if (v231)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v230;
                    _os_log_impl(&dword_1830D4000, v199, v200, "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v230);
                  goto LABEL_510;
                }
                if (v231)
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                  int v201 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
                  goto LABEL_509;
                }
              }
              else
              {
                int v199 = __nwlog_obj();
                os_log_type_t v200 = v269;
                if (os_log_type_enabled(v199, v269))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                  int v201 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
                  goto LABEL_509;
                }
              }
            }
LABEL_510:
            if (v198) {
              free(v198);
            }
            uint64_t v13 = v260;
LABEL_54:
            *(void *)buf = 0;
            *(void *)&buf[8] = buf;
            *(void *)&buf[16] = 0x2000000000;
            uint64_t v271 = (uint64_t)v16;
            aBlock[0] = MEMORY[0x1E4F143A8];
            aBlock[1] = 0x40000000;
            aBlock[2] = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke_2;
            aBlock[3] = &unk_1E5241178;
            aBlock[4] = buf;
            *((void *)v16 + 76) = _Block_copy(aBlock);
            _Block_object_dispose(buf, 8);
            if ((*((unsigned char *)v16 + 158) & 1) == 0)
            {
              if (gLogDatapath)
              {
                int v210 = __nwlog_obj();
                if (os_log_type_enabled(v210, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v211 = *((void *)v16 + 61);
                  int v212 = *(_DWORD *)(*((void *)v16 + 60) + 372);
                  int v213 = *((_DWORD *)v16 + 215);
                  if (v211) {
                    LODWORD(v211) = *(_DWORD *)(v211 + 424);
                  }
                  *(_DWORD *)buf = 136447746;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = (char *)v16 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v271 = (uint64_t)" ";
                  __int16 v272 = 1024;
                  *(_DWORD *)int v273 = v212;
                  *(_WORD *)&v273[4] = 1024;
                  *(_DWORD *)&v273[6] = v213;
                  LOWORD(v274) = 1024;
                  *(_DWORD *)((char *)&v274 + 2) = v211;
                  HIWORD(v274) = 2048;
                  *(void *)uint64_t v275 = v16;
                  _os_log_impl(&dword_1830D4000, v210, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created %p", buf, 0x3Cu);
                  uint64_t v13 = v260;
                }
              }
            }
            uint64_t v37 = (NSObject **)(v16 + 32);
            nw_protocol_replace_input_handler((uint64_t)v13, v11, (uint64_t)v16);
            *BOOL v16 = *(_OWORD *)v13->flow_id;
            int v38 = (void *)*((void *)v16 + 92);
            if (v38)
            {
              if (!*((void *)v16 + 66))
              {
                int v39 = v38;
                id v40 = *(id *)(v39[13] + 136);

                id v41 = nw_path_copy_flow_registration(v40, (uint64_t)v16);
                char v42 = *((unsigned char *)v16 + 568);
                if (v42)
                {
                  BOOL v43 = (void *)*((void *)v16 + 70);
                  if (v43)
                  {
                    os_release(v43);
                    char v42 = *((unsigned char *)v16 + 568);
                  }
                }
                *((void *)v16 + 70) = v41;
                *((unsigned char *)v16 + 568) = v42 | 1;
                if (v41)
                {
                  id v44 = nw_path_flow_registration_copy_endpoint(v41);
                  id v45 = nw_path_flow_registration_copy_parameters(*((void **)v16 + 70));
                  uint64_t v46 = nw_endpoint_copy_association_with_evaluator(v44, v45, 0);
                  char v47 = *((unsigned char *)v16 + 536);
                  if (v47)
                  {
                    os_log_type_t v48 = (void *)*((void *)v16 + 66);
                    if (v48)
                    {
                      os_release(v48);
                      char v47 = *((unsigned char *)v16 + 536);
                    }
                  }
                  *((void *)v16 + 66) = v46;
                  *((unsigned char *)v16 + 536) = v47 | 1;
                  if (v46)
                  {
                    *(void *)buf = nw_protocol_instance_stub_create((nw_protocol *)v16);
                    nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v16 + 34), buf);
                    nw_association_register_internal(*((void **)v16 + 66), v39, *((void **)v16 + 68), 0, 0, &__block_literal_global_69);
                    id v49 = nw_association_copy_current_path(*((void **)v16 + 66), v45);
                    if (v49)
                    {
                      os_log_type_t v50 = v49;
                      uint64_t v51 = nw_path_copy_for_flow_registration(v49, *((void **)v16 + 70));
                      if (v51)
                      {
                        object = v51;
                        if (*v37 != v51)
                        {
                          *(void *)buf = os_retain(v51);
                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v16 + 32), buf);
                          uint64_t v51 = object;
                        }
                        if (nw_path_has_flows(v51)) {
                          __int16 v52 = 4096;
                        }
                        else {
                          __int16 v52 = 0;
                        }
                        int v53 = *((_WORD *)v16 + 436) & 0xEFFF | (*((unsigned __int8 *)v16 + 874) << 16);
                        *((_WORD *)v16 + 436) = *((_WORD *)v16 + 436) & 0xEFFF | v52;
                        *((unsigned char *)v16 + 874) = BYTE2(v53);
                        id v54 = nw_parameters_copy_effective_proxy_config(v39);
                        if (v54)
                        {
                          uint64_t v55 = v54;
                          if (nw_path_has_proxy_config(v50, v54))
                          {
                            *(void *)buf = os_retain(v55);
                            nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v16 + 36), buf);
                          }
                          os_release(v55);
                        }
                        os_release(object);
                      }
                      os_release(v50);
                    }
                  }
                  if (v45) {
                    os_release(v45);
                  }
                  uint64_t v13 = v260;
                  if (v44) {
                    os_release(v44);
                  }
                }
                if (v40) {
                  os_release(v40);
                }
              }
              uint64_t v56 = *v37;
              if (*v37)
              {
LABEL_86:
                if (nw_path_uses_interface_type(v56, nw_interface_type_cellular)) {
                  *((void *)v16 + 24) = 1000;
                }
              }
LABEL_88:
              uint64_t v57 = *(unsigned int *)(v9 + 336) + 1;
              uint64_t v58 = v57 << 31 >> 31;
              *(_DWORD *)(v9 + 336) = v57;
              if (v58 == v57 && (v58 & 0x8000000000000000) == 0) {
                goto LABEL_107;
              }
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              uint64_t v59 = *(unsigned int *)(v9 + 336);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->connections_count";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v271 = 1;
              __int16 v272 = 2048;
              *(void *)int v273 = v59;
              int v60 = (char *)_os_log_send_and_compose_impl();
              type[0] = OS_LOG_TYPE_ERROR;
              LOBYTE(aBlock[0]) = 0;
              if (__nwlog_fault(v60, type, aBlock))
              {
                if (type[0] == OS_LOG_TYPE_FAULT)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  int v61 = gLogObj;
                  os_log_type_t v62 = type[0];
                  if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
                  {
                    uint64_t v63 = *(unsigned int *)(v9 + 336);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->connections_count";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v271 = 1;
                    __int16 v272 = 2048;
                    *(void *)int v273 = v63;
                    BOOL v64 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_103:
                    _os_log_impl(&dword_1830D4000, v61, v62, v64, buf, 0x2Au);
                  }
                }
                else if (LOBYTE(aBlock[0]))
                {
                  uint32_t v65 = (char *)__nw_create_backtrace_string();
                  int v61 = __nwlog_obj();
                  os_log_type_t v62 = type[0];
                  BOOL v66 = os_log_type_enabled(v61, type[0]);
                  if (v65)
                  {
                    if (v66)
                    {
                      uint64_t v67 = *(unsigned int *)(v9 + 336);
                      *(_DWORD *)buf = 136447234;
                      *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->connections_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v271 = 1;
                      __int16 v272 = 2048;
                      *(void *)int v273 = v67;
                      *(_WORD *)&v273[8] = 2082;
                      int v274 = v65;
                      _os_log_impl(&dword_1830D4000, v61, v62, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                    }
                    free(v65);
                    goto LABEL_104;
                  }
                  if (v66)
                  {
                    uint64_t v69 = *(unsigned int *)(v9 + 336);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->connections_count";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v271 = 1;
                    __int16 v272 = 2048;
                    *(void *)int v273 = v69;
                    BOOL v64 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                    goto LABEL_103;
                  }
                }
                else
                {
                  int v61 = __nwlog_obj();
                  os_log_type_t v62 = type[0];
                  if (os_log_type_enabled(v61, type[0]))
                  {
                    uint64_t v68 = *(unsigned int *)(v9 + 336);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->connections_count";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v271 = 1;
                    __int16 v272 = 2048;
                    *(void *)int v273 = v68;
                    BOOL v64 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                    goto LABEL_103;
                  }
                }
              }
LABEL_104:
              if (v60) {
                free(v60);
              }
              *(_DWORD *)(v9 + 336) = -1;
              uint64_t v13 = v260;
LABEL_107:
              uint64_t v70 = *(unsigned int *)(v9 + 360) + 1;
              uint64_t v71 = v70 << 31 >> 31;
              *(_DWORD *)(v9 + 360) = v70;
              if (v71 == v70 && (v71 & 0x8000000000000000) == 0) {
                goto LABEL_126;
              }
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              uint64_t v72 = *(unsigned int *)(v9 + 360);
              *(_DWORD *)buf = 136446978;
              *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->next_connection_log_num";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v271 = 1;
              __int16 v272 = 2048;
              *(void *)int v273 = v72;
              uint64_t v73 = (char *)_os_log_send_and_compose_impl();
              type[0] = OS_LOG_TYPE_ERROR;
              LOBYTE(aBlock[0]) = 0;
              if (__nwlog_fault(v73, type, aBlock))
              {
                if (type[0] == OS_LOG_TYPE_FAULT)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  uint64_t v74 = gLogObj;
                  os_log_type_t v75 = type[0];
                  if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
                  {
                    uint64_t v76 = *(unsigned int *)(v9 + 360);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->next_connection_log_num";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v271 = 1;
                    __int16 v272 = 2048;
                    *(void *)int v273 = v76;
                    BOOL v77 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_122:
                    _os_log_impl(&dword_1830D4000, v74, v75, v77, buf, 0x2Au);
                  }
                }
                else if (LOBYTE(aBlock[0]))
                {
                  os_log_type_t v78 = (char *)__nw_create_backtrace_string();
                  uint64_t v74 = __nwlog_obj();
                  os_log_type_t v75 = type[0];
                  BOOL v79 = os_log_type_enabled(v74, type[0]);
                  if (v78)
                  {
                    if (v79)
                    {
                      uint64_t v80 = *(unsigned int *)(v9 + 360);
                      *(_DWORD *)buf = 136447234;
                      *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->next_connection_log_num";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v271 = 1;
                      __int16 v272 = 2048;
                      *(void *)int v273 = v80;
                      *(_WORD *)&v273[8] = 2082;
                      int v274 = v78;
                      _os_log_impl(&dword_1830D4000, v74, v75, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                    }
                    free(v78);
                    goto LABEL_123;
                  }
                  if (v79)
                  {
                    uint64_t v82 = *(unsigned int *)(v9 + 360);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->next_connection_log_num";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v271 = 1;
                    __int16 v272 = 2048;
                    *(void *)int v273 = v82;
                    BOOL v77 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                    goto LABEL_122;
                  }
                }
                else
                {
                  uint64_t v74 = __nwlog_obj();
                  os_log_type_t v75 = type[0];
                  if (os_log_type_enabled(v74, type[0]))
                  {
                    uint64_t v81 = *(unsigned int *)(v9 + 360);
                    *(_DWORD *)buf = 136446978;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->next_connection_log_num";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v271 = 1;
                    __int16 v272 = 2048;
                    *(void *)int v273 = v81;
                    BOOL v77 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                    goto LABEL_122;
                  }
                }
              }
LABEL_123:
              if (v73) {
                free(v73);
              }
              LODWORD(v70) = -1;
              *(_DWORD *)(v9 + 360) = -1;
              uint64_t v13 = v260;
LABEL_126:
              *((_DWORD *)v16 + 215) = v70;
              if ((*((unsigned char *)v16 + 158) & 1) == 0)
              {
                if (gLogDatapath)
                {
                  int v214 = __nwlog_obj();
                  if (os_log_type_enabled(v214, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v215 = *((void *)v16 + 61);
                    int v216 = *(_DWORD *)(*((void *)v16 + 60) + 372);
                    int v217 = *((_DWORD *)v16 + 215);
                    if (v215) {
                      LODWORD(v215) = *(_DWORD *)(v215 + 424);
                    }
                    int v218 = *(_DWORD *)(v9 + 336);
                    *(_DWORD *)buf = 136448002;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = (char *)v16 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v271 = (uint64_t)" ";
                    __int16 v272 = 1024;
                    *(_DWORD *)int v273 = v216;
                    *(_WORD *)&v273[4] = 1024;
                    *(_DWORD *)&v273[6] = v217;
                    LOWORD(v274) = 1024;
                    *(_DWORD *)((char *)&v274 + 2) = v215;
                    HIWORD(v274) = 2048;
                    *(void *)uint64_t v275 = v16;
                    *(_WORD *)&v275[8] = 1024;
                    *(_DWORD *)char v276 = v218;
                    _os_log_impl(&dword_1830D4000, v214, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added connection %p, now have %u connections", buf, 0x42u);
                    uint64_t v13 = v260;
                  }
                }
              }
              if (*(void *)(v11 + 248))
              {
                if (*((void *)v16 + 61))
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  uint64_t v83 = *((void *)v16 + 61);
                  *(_DWORD *)buf = 136446722;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v16;
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v271 = v83;
                  int v84 = (char *)_os_log_send_and_compose_impl();
                  type[0] = OS_LOG_TYPE_ERROR;
                  LOBYTE(aBlock[0]) = 0;
                  if (__nwlog_fault(v84, type, aBlock))
                  {
                    if (type[0] == OS_LOG_TYPE_FAULT)
                    {
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      os_log_type_t v85 = gLogObj;
                      os_log_type_t v86 = type[0];
                      if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
                      {
                        uint64_t v87 = *((void *)v16 + 61);
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v16;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v271 = v87;
                        int v88 = "%{public}s Connection %p already has a stream (%p)";
LABEL_153:
                        _os_log_impl(&dword_1830D4000, v85, v86, v88, buf, 0x20u);
                      }
                    }
                    else if (LOBYTE(aBlock[0]))
                    {
                      int v101 = (char *)__nw_create_backtrace_string();
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      os_log_type_t v85 = gLogObj;
                      os_log_type_t v86 = type[0];
                      BOOL v102 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
                      if (v101)
                      {
                        if (v102)
                        {
                          uint64_t v103 = *((void *)v16 + 61);
                          *(_DWORD *)buf = 136446978;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2048;
                          *(void *)&buf[14] = v16;
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v271 = v103;
                          __int16 v272 = 2082;
                          *(void *)int v273 = v101;
                          _os_log_impl(&dword_1830D4000, v85, v86, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
                        }
                        free(v101);
                        goto LABEL_154;
                      }
                      if (v102)
                      {
                        uint64_t v105 = *((void *)v16 + 61);
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v16;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v271 = v105;
                        int v88 = "%{public}s Connection %p already has a stream (%p), no backtrace";
                        goto LABEL_153;
                      }
                    }
                    else
                    {
                      os_log_type_t v85 = __nwlog_obj();
                      os_log_type_t v86 = type[0];
                      if (os_log_type_enabled(v85, type[0]))
                      {
                        uint64_t v104 = *((void *)v16 + 61);
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v16;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v271 = v104;
                        int v88 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                        goto LABEL_153;
                      }
                    }
                  }
LABEL_154:
                  if (v84) {
                    free(v84);
                  }
                  uint64_t v4 = v259;
                  goto LABEL_157;
                }
                *(void *)(v11 + 256) = v16;
                *((void *)v16 + 61) = v11;
                nw_protocol_set_output_handler(v11, *((void *)v16 + 4));
                nw_protocol_set_input_handler((uint64_t)v16, *(void *)(v11 + 48));
                *(_OWORD *)uint64_t v11 = *v16;
                long long v89 = *(_OWORD *)(v11 + 144);
                long long v91 = *(_OWORD *)(v11 + 96);
                long long v90 = *(_OWORD *)(v11 + 112);
                v16[8] = *(_OWORD *)(v11 + 128);
                v16[9] = v89;
                v16[6] = v91;
                v16[7] = v90;
                long long v92 = *(_OWORD *)(v11 + 80);
                v16[4] = *(_OWORD *)(v11 + 64);
                v16[5] = v92;
                nw_http_transaction_metadata_set_connection_metadata(*(void **)(v11 + 352), *((void **)v16 + 96));
                *((_WORD *)v16 + 436) &= 0xFFD7u;
                *((_DWORD *)v16 + 216) = 1;
                uint64_t v4 = v259;
                if ((*((unsigned char *)v16 + 158) & 1) == 0)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  BOOL v93 = gLogObj;
                  if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v94 = *((void *)v16 + 61);
                    int v95 = *(_DWORD *)(*((void *)v16 + 60) + 372);
                    int v96 = *((_DWORD *)v16 + 215);
                    if (v94) {
                      LODWORD(v94) = *(_DWORD *)(v94 + 424);
                    }
                    *(_DWORD *)buf = 136447490;
                    *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = (char *)v16 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v271 = (uint64_t)" ";
                    __int16 v272 = 1024;
                    *(_DWORD *)int v273 = v95;
                    *(_WORD *)&v273[4] = 1024;
                    *(_DWORD *)&v273[6] = v96;
                    LOWORD(v274) = 1024;
                    *(_DWORD *)((char *)&v274 + 2) = v94;
                    _os_log_impl(&dword_1830D4000, v93, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                  }
                }
                if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  BOOL v97 = gLogObj;
                  if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
                  {
                    uint64_t v98 = *(void *)(v11 + 256);
                    int v99 = *(_DWORD *)(*(void *)(v11 + 248) + 372);
                    if (v98) {
                      LODWORD(v98) = *(_DWORD *)(v98 + 860);
                    }
                    int v100 = *(_DWORD *)(v11 + 424);
                    *(_DWORD *)buf = 136448002;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v11 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v271 = (uint64_t)" ";
                    __int16 v272 = 1024;
                    *(_DWORD *)int v273 = v99;
                    *(_WORD *)&v273[4] = 1024;
                    *(_DWORD *)&v273[6] = v98;
                    LOWORD(v274) = 1024;
                    *(_DWORD *)((char *)&v274 + 2) = v100;
                    HIWORD(v274) = 2048;
                    *(void *)uint64_t v275 = v11;
                    *(_WORD *)&v275[8] = 2048;
                    *(void *)char v276 = v16;
                    _os_log_impl(&dword_1830D4000, v97, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
                  }
                }
LABEL_157:
                if ((*(unsigned char *)(v11 + 158) & 1) == 0)
                {
                  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                  networkd_settings_init();
                  int v106 = gLogObj;
                  if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
                  {
                    uint64_t v107 = *(void *)(v11 + 256);
                    int v108 = *(_DWORD *)(*(void *)(v11 + 248) + 372);
                    if (v107) {
                      LODWORD(v107) = *(_DWORD *)(v107 + 860);
                    }
                    int v109 = *(_DWORD *)(v11 + 424);
                    *(_DWORD *)buf = 136448258;
                    *(void *)&uint8_t buf[4] = "nw_http1_start_new_connection_for_stream";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v11 + 74;
                    *(_WORD *)&buf[22] = 2080;
                    uint64_t v271 = (uint64_t)" ";
                    __int16 v272 = 1024;
                    *(_DWORD *)int v273 = v108;
                    *(_WORD *)&v273[4] = 1024;
                    *(_DWORD *)&v273[6] = v107;
                    LOWORD(v274) = 1024;
                    *(_DWORD *)((char *)&v274 + 2) = v109;
                    HIWORD(v274) = 2048;
                    *(void *)uint64_t v275 = v16;
                    *(_WORD *)&v275[8] = 1024;
                    *(_DWORD *)char v276 = v109;
                    *(_WORD *)&v276[4] = 2048;
                    *(void *)&v276[6] = v11;
                    _os_log_impl(&dword_1830D4000, v106, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created new connection %p for stream %u (%p)", buf, 0x4Cu);
                  }
                }
                nw_http_transaction_metadata_set_first_on_connection(*(void **)(v11 + 352));
                uint64_t v110 = nw_protocol_copy_info((uint64_t)v13, 255);
                uint64_t v111 = (void *)v110;
                if (v110
                  && (uint64_t v112 = *(void *)(v110 + 24), *(void *)(v110 + 16) != v112)
                  && (int v113 = *(void **)(v112 - 8)) != 0)
                {
                  uint64_t v114 = os_retain(v113);
                  int v115 = v114;
                  if (v114 && nw_protocol_metadata_is_tls(v114))
                  {
                    int v115 = v115;
                    nw_http_connection_metadata_set_sec_metadata(*((void **)v16 + 96), v115);
                    os_release(v115);
                    nw_protocol_connect((uint64_t)v13, (uint64_t)v16);
                    goto LABEL_171;
                  }
                }
                else
                {
                  int v115 = 0;
                }
                if (v16)
                {
                  nw_protocol_connect((uint64_t)v13, (uint64_t)v16);
                  if (!v115) {
                    goto LABEL_172;
                  }
                  goto LABEL_171;
                }
                BOOL v186 = v4;
                __nwlog_obj();
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                os_log_type_t v187 = (char *)_os_log_send_and_compose_impl();
                type[0] = OS_LOG_TYPE_ERROR;
                LOBYTE(aBlock[0]) = 0;
                if (__nwlog_fault(v187, type, aBlock))
                {
                  if (type[0] == OS_LOG_TYPE_FAULT)
                  {
                    uint64_t v188 = __nwlog_obj();
                    os_log_type_t v189 = type[0];
                    if (!os_log_type_enabled(v188, type[0])) {
                      goto LABEL_463;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                    uint64_t v190 = "%{public}s called with null connection";
LABEL_462:
                    _os_log_impl(&dword_1830D4000, v188, v189, v190, buf, 0xCu);
                    goto LABEL_463;
                  }
                  if (!LOBYTE(aBlock[0]))
                  {
                    uint64_t v188 = __nwlog_obj();
                    os_log_type_t v189 = type[0];
                    if (!os_log_type_enabled(v188, type[0])) {
                      goto LABEL_463;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                    uint64_t v190 = "%{public}s called with null connection, backtrace limit exceeded";
                    goto LABEL_462;
                  }
                  BOOL v224 = (char *)__nw_create_backtrace_string();
                  uint64_t v188 = __nwlog_obj();
                  os_log_type_t v189 = type[0];
                  BOOL v225 = os_log_type_enabled(v188, type[0]);
                  if (!v224)
                  {
                    if (!v225) {
                      goto LABEL_463;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                    uint64_t v190 = "%{public}s called with null connection, no backtrace";
                    goto LABEL_462;
                  }
                  if (v225)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v224;
                    _os_log_impl(&dword_1830D4000, v188, v189, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v224);
                }
LABEL_463:
                if (v187) {
                  free(v187);
                }
                nw_protocol_connect((uint64_t)v260, 0);
                uint64_t v4 = v186;
                if (!v115)
                {
LABEL_172:
                  if (v111) {
                    os_release(v111);
                  }
                  __int16 v116 = *(_WORD *)(v11 + 428);
                  if ((v116 & 8) != 0)
                  {
                    *(_WORD *)(v11 + 428) = v116 & 0xFFF7;
                    int v117 = *(_DWORD *)(v9 + 352);
                    *(_DWORD *)(v9 + 352) = v117 - 1;
                    if (!v117)
                    {
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      uint64_t v118 = *(unsigned int *)(v9 + 352);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->pending_output_handler_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v271 = 1;
                      __int16 v272 = 2048;
                      *(void *)int v273 = v118;
                      uint64_t v119 = (char *)_os_log_send_and_compose_impl();
                      type[0] = OS_LOG_TYPE_ERROR;
                      LOBYTE(aBlock[0]) = 0;
                      if (__nwlog_fault(v119, type, aBlock))
                      {
                        if (type[0] == OS_LOG_TYPE_FAULT)
                        {
                          uint64_t v120 = __nwlog_obj();
                          os_log_type_t v121 = type[0];
                          if (os_log_type_enabled(v120, type[0]))
                          {
                            uint64_t v122 = *(unsigned int *)(v9 + 352);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->pending_output_handler_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v271 = 1;
                            __int16 v272 = 2048;
                            *(void *)int v273 = v122;
                            int v123 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_189:
                            _os_log_impl(&dword_1830D4000, v120, v121, v123, buf, 0x2Au);
                          }
                        }
                        else if (LOBYTE(aBlock[0]))
                        {
                          int v124 = (char *)__nw_create_backtrace_string();
                          uint64_t v120 = __nwlog_obj();
                          os_log_type_t v121 = type[0];
                          BOOL v125 = os_log_type_enabled(v120, type[0]);
                          if (v124)
                          {
                            if (v125)
                            {
                              uint64_t v126 = *(unsigned int *)(v9 + 352);
                              *(_DWORD *)buf = 136447234;
                              *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = "http1->pending_output_handler_count";
                              *(_WORD *)&buf[22] = 2048;
                              uint64_t v271 = 1;
                              __int16 v272 = 2048;
                              *(void *)int v273 = v126;
                              *(_WORD *)&v273[8] = 2082;
                              int v274 = v124;
                              _os_log_impl(&dword_1830D4000, v120, v121, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                            }
                            free(v124);
                            goto LABEL_190;
                          }
                          if (v125)
                          {
                            uint64_t v128 = *(unsigned int *)(v9 + 352);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->pending_output_handler_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v271 = 1;
                            __int16 v272 = 2048;
                            *(void *)int v273 = v128;
                            int v123 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
                            goto LABEL_189;
                          }
                        }
                        else
                        {
                          uint64_t v120 = __nwlog_obj();
                          os_log_type_t v121 = type[0];
                          if (os_log_type_enabled(v120, type[0]))
                          {
                            uint64_t v127 = *(unsigned int *)(v9 + 352);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = "http1->pending_output_handler_count";
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v271 = 1;
                            __int16 v272 = 2048;
                            *(void *)int v273 = v127;
                            int v123 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
                            goto LABEL_189;
                          }
                        }
                      }
LABEL_190:
                      if (v119) {
                        free(v119);
                      }
                      *(_DWORD *)(v9 + 352) = 0;
                    }
                  }
LABEL_193:
                  int v129 = (char *)a1->handle;
                  if (v129)
                  {
                    int v130 = *((_DWORD *)v129 + 6);
                    if (v130 != 2)
                    {
                      if (v130 != 3) {
                        goto LABEL_426;
                      }
                      int v131 = (uint64_t *)(v129 + 16);
                      goto LABEL_199;
                    }
                    uint64_t v132 = *((void *)v129 + 1);
                    if (v132)
                    {
                      int v131 = (uint64_t *)(v132 + 256);
LABEL_199:
                      uint64_t v133 = *v131;
                      if (*v131)
                      {
                        uint64_t v134 = *(void *)(v133 + 488);
                        if (v134) {
                          nw_protocol_connected(*(void **)(v134 + 48), (uint64_t)v4);
                        }
                        if (*(nw_protocol **)(v133 + 32) == v4)
                        {
                          if (!(*(unsigned char *)(v133 + 158) & 1 | (gLogDatapath == 0)))
                          {
                            char v168 = __nwlog_obj();
                            if (os_log_type_enabled(v168, OS_LOG_TYPE_DEBUG))
                            {
                              uint64_t v169 = *(void *)(v133 + 488);
                              int v170 = *(_DWORD *)(*(void *)(v133 + 480) + 372);
                              int v171 = *(_DWORD *)(v133 + 860);
                              if (v169) {
                                LODWORD(v169) = *(_DWORD *)(v169 + 424);
                              }
                              identifier = v4->identifier;
                              *(_DWORD *)buf = 136447746;
                              *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                              *(_WORD *)&unsigned char buf[12] = 2082;
                              *(void *)&buf[14] = v133 + 74;
                              *(_WORD *)&buf[22] = 2080;
                              uint64_t v271 = (uint64_t)" ";
                              __int16 v272 = 1024;
                              *(_DWORD *)int v273 = v170;
                              *(_WORD *)&v273[4] = 1024;
                              *(_DWORD *)&v273[6] = v171;
                              LOWORD(v274) = 1024;
                              *(_DWORD *)((char *)&v274 + 2) = v169;
                              HIWORD(v274) = 2080;
                              *(void *)uint64_t v275 = identifier;
                              _os_log_impl(&dword_1830D4000, v168, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connected protocol %s is our output_handler, forwarding", buf, 0x3Cu);
                            }
                          }
                          *(_WORD *)(v133 + 872) |= 0x40u;
                          uint64_t v140 = *(void *)(v133 + 488);
                          if (v140)
                          {
                            *(_WORD *)(v140 + 428) |= 0x4000u;
                            uint64_t v141 = *(void **)(v140 + 352);
                            v261[0] = MEMORY[0x1E4F143A8];
                            v261[1] = 0x40000000;
                            v261[2] = ___ZL27nw_protocol_http1_connectedP11nw_protocolS0__block_invoke;
                            v261[3] = &__block_descriptor_tmp_90;
                            v261[4] = v140;
                            nw_http_transaction_metadata_set_event_handler(v141, v261);
                            uint64_t v142 = *(void *)(v133 + 488);
                            if (v142) {
                              uint64_t v143 = *(void **)(v142 + 48);
                            }
                            else {
                              uint64_t v143 = 0;
                            }
                            nw_protocol_connected(v143, v142);
                          }
                        }
                        else if (!(*(unsigned char *)(v133 + 158) & 1 | (gLogDatapath == 0)))
                        {
                          uint64_t v135 = __nwlog_obj();
                          if (os_log_type_enabled(v135, OS_LOG_TYPE_DEBUG))
                          {
                            uint64_t v136 = *(void *)(v133 + 488);
                            int v137 = *(_DWORD *)(*(void *)(v133 + 480) + 372);
                            int v138 = *(_DWORD *)(v133 + 860);
                            if (v136) {
                              LODWORD(v136) = *(_DWORD *)(v136 + 424);
                            }
                            uint64_t v139 = v4->identifier;
                            *(_DWORD *)buf = 136447746;
                            *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                            *(_WORD *)&unsigned char buf[12] = 2082;
                            *(void *)&buf[14] = v133 + 74;
                            *(_WORD *)&buf[22] = 2080;
                            uint64_t v271 = (uint64_t)" ";
                            __int16 v272 = 1024;
                            *(_DWORD *)int v273 = v137;
                            *(_WORD *)&v273[4] = 1024;
                            *(_DWORD *)&v273[6] = v138;
                            LOWORD(v274) = 1024;
                            *(_DWORD *)((char *)&v274 + 2) = v136;
                            HIWORD(v274) = 2080;
                            *(void *)uint64_t v275 = v139;
                            _os_log_impl(&dword_1830D4000, v135, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connected protocol %s is not our output_handler, ignoring", buf, 0x3Cu);
                          }
                        }
                        return;
                      }
LABEL_426:
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                      int v148 = (char *)_os_log_send_and_compose_impl();
                      type[0] = OS_LOG_TYPE_ERROR;
                      LOBYTE(aBlock[0]) = 0;
                      if (!__nwlog_fault(v148, type, aBlock)) {
                        goto LABEL_440;
                      }
                      if (type[0] == OS_LOG_TYPE_FAULT)
                      {
                        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                        networkd_settings_init();
                        int v149 = gLogObj;
                        os_log_type_t v150 = type[0];
                        if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
                          goto LABEL_440;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                        uint64_t v151 = "%{public}s called with null http1_connection";
                        goto LABEL_438;
                      }
                      if (!LOBYTE(aBlock[0]))
                      {
                        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                        networkd_settings_init();
                        int v149 = gLogObj;
                        os_log_type_t v150 = type[0];
                        if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
                          goto LABEL_440;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                        uint64_t v151 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                        goto LABEL_438;
                      }
                      int v242 = (char *)__nw_create_backtrace_string();
                      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
                      networkd_settings_init();
                      int v239 = gLogObj;
                      os_log_type_t v240 = type[0];
                      BOOL v243 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
                      if (v242)
                      {
                        if (v243)
                        {
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v242;
                          _os_log_impl(&dword_1830D4000, v239, v240, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                        }
                        free(v242);
                        if (!v148) {
                          return;
                        }
LABEL_441:
                        free(v148);
                        return;
                      }
                      if (v243)
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
                        uint64_t v151 = "%{public}s called with null http1_connection, no backtrace";
LABEL_445:
                        uint64_t v244 = v239;
                        os_log_type_t v245 = v240;
                        goto LABEL_439;
                      }
                      goto LABEL_440;
                    }
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
                    int v152 = (char *)_os_log_send_and_compose_impl();
                    type[0] = OS_LOG_TYPE_ERROR;
                    LOBYTE(aBlock[0]) = 0;
                    if (!__nwlog_fault(v152, type, aBlock)) {
                      goto LABEL_424;
                    }
                    if (type[0] == OS_LOG_TYPE_FAULT)
                    {
                      int v153 = __nwlog_obj();
                      os_log_type_t v154 = type[0];
                      if (!os_log_type_enabled(v153, type[0])) {
                        goto LABEL_424;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
                      uint64_t v155 = "%{public}s called with null handle->http1_stream";
                      goto LABEL_423;
                    }
                    if (!LOBYTE(aBlock[0]))
                    {
                      int v153 = __nwlog_obj();
                      os_log_type_t v154 = type[0];
                      if (!os_log_type_enabled(v153, type[0])) {
                        goto LABEL_424;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
                      uint64_t v155 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
                      goto LABEL_423;
                    }
                    uint64_t v184 = (char *)__nw_create_backtrace_string();
                    int v153 = __nwlog_obj();
                    os_log_type_t v154 = type[0];
                    BOOL v185 = os_log_type_enabled(v153, type[0]);
                    if (v184)
                    {
                      if (v185)
                      {
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v184;
                        _os_log_impl(&dword_1830D4000, v153, v154, "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
                      }
                      free(v184);
                      if (!v152) {
                        goto LABEL_426;
                      }
LABEL_425:
                      free(v152);
                      goto LABEL_426;
                    }
                    if (v185)
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
                      uint64_t v155 = "%{public}s called with null handle->http1_stream, no backtrace";
LABEL_423:
                      _os_log_impl(&dword_1830D4000, v153, v154, v155, buf, 0xCu);
                    }
                  }
                  else
                  {
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
                    int v152 = (char *)_os_log_send_and_compose_impl();
                    type[0] = OS_LOG_TYPE_ERROR;
                    LOBYTE(aBlock[0]) = 0;
                    if (!__nwlog_fault(v152, type, aBlock)) {
                      goto LABEL_424;
                    }
                    if (type[0] == OS_LOG_TYPE_FAULT)
                    {
                      int v153 = __nwlog_obj();
                      os_log_type_t v154 = type[0];
                      if (!os_log_type_enabled(v153, type[0])) {
                        goto LABEL_424;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
                      uint64_t v155 = "%{public}s called with null handle";
                      goto LABEL_423;
                    }
                    if (!LOBYTE(aBlock[0]))
                    {
                      int v153 = __nwlog_obj();
                      os_log_type_t v154 = type[0];
                      if (!os_log_type_enabled(v153, type[0])) {
                        goto LABEL_424;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
                      uint64_t v155 = "%{public}s called with null handle, backtrace limit exceeded";
                      goto LABEL_423;
                    }
                    uint64_t v162 = (char *)__nw_create_backtrace_string();
                    int v153 = __nwlog_obj();
                    os_log_type_t v154 = type[0];
                    BOOL v163 = os_log_type_enabled(v153, type[0]);
                    if (!v162)
                    {
                      if (!v163) {
                        goto LABEL_424;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
                      uint64_t v155 = "%{public}s called with null handle, no backtrace";
                      goto LABEL_423;
                    }
                    if (v163)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v162;
                      _os_log_impl(&dword_1830D4000, v153, v154, "%{public}s called with null handle, dumping backtrace:%{public}s", buf, 0x16u);
                    }
                    free(v162);
                  }
LABEL_424:
                  if (!v152) {
                    goto LABEL_426;
                  }
                  goto LABEL_425;
                }
LABEL_171:
                os_release(v115);
                goto LABEL_172;
              }
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              BOOL v206 = (char *)_os_log_send_and_compose_impl();
              type[0] = OS_LOG_TYPE_ERROR;
              LOBYTE(aBlock[0]) = 0;
              if (__nwlog_fault(v206, type, aBlock))
              {
                if (type[0] == OS_LOG_TYPE_FAULT)
                {
                  uint64_t v207 = __nwlog_obj();
                  os_log_type_t v208 = type[0];
                  if (os_log_type_enabled(v207, type[0]))
                  {
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    int v209 = "%{public}s called with null http1_stream->protocol_http1";
LABEL_522:
                    _os_log_impl(&dword_1830D4000, v207, v208, v209, buf, 0xCu);
                  }
                }
                else if (LOBYTE(aBlock[0]))
                {
                  id v234 = (char *)__nw_create_backtrace_string();
                  uint64_t v207 = __nwlog_obj();
                  os_log_type_t v208 = type[0];
                  BOOL v235 = os_log_type_enabled(v207, type[0]);
                  if (v234)
                  {
                    if (v235)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v234;
                      _os_log_impl(&dword_1830D4000, v207, v208, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                    }
                    free(v234);
                    goto LABEL_523;
                  }
                  if (v235)
                  {
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    int v209 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
                    goto LABEL_522;
                  }
                }
                else
                {
                  uint64_t v207 = __nwlog_obj();
                  os_log_type_t v208 = type[0];
                  if (os_log_type_enabled(v207, type[0]))
                  {
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    int v209 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                    goto LABEL_522;
                  }
                }
              }
LABEL_523:
              if (v206) {
                free(v206);
              }
              uint64_t v4 = v259;
              uint64_t v13 = v260;
              goto LABEL_157;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
            uint64_t v202 = (char *)_os_log_send_and_compose_impl();
            type[0] = OS_LOG_TYPE_ERROR;
            LOBYTE(aBlock[0]) = 0;
            if (__nwlog_fault(v202, type, aBlock))
            {
              if (type[0] == OS_LOG_TYPE_FAULT)
              {
                int v203 = __nwlog_obj();
                os_log_type_t v204 = type[0];
                if (!os_log_type_enabled(v203, type[0])) {
                  goto LABEL_516;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                int v205 = "%{public}s called with null parameters";
LABEL_515:
                _os_log_impl(&dword_1830D4000, v203, v204, v205, buf, 0xCu);
                goto LABEL_516;
              }
              if (!LOBYTE(aBlock[0]))
              {
                int v203 = __nwlog_obj();
                os_log_type_t v204 = type[0];
                if (!os_log_type_enabled(v203, type[0])) {
                  goto LABEL_516;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                int v205 = "%{public}s called with null parameters, backtrace limit exceeded";
                goto LABEL_515;
              }
              id v232 = (char *)__nw_create_backtrace_string();
              int v203 = __nwlog_obj();
              os_log_type_t v204 = type[0];
              BOOL v233 = os_log_type_enabled(v203, type[0]);
              if (!v232)
              {
                if (!v233) {
                  goto LABEL_516;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                int v205 = "%{public}s called with null parameters, no backtrace";
                goto LABEL_515;
              }
              if (v233)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v232;
                _os_log_impl(&dword_1830D4000, v203, v204, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v232);
            }
LABEL_516:
            if (v202) {
              free(v202);
            }
            uint64_t v13 = v260;
            uint64_t v56 = *v37;
            if (*v37) {
              goto LABEL_86;
            }
            goto LABEL_88;
          }
          uint64_t v191 = v4;
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          int v192 = (void *)_os_log_send_and_compose_impl();
          os_log_type_t v269 = OS_LOG_TYPE_ERROR;
          char v268 = 0;
          if (__nwlog_fault((const char *)v192, &v269, &v268))
          {
            if (v269 == OS_LOG_TYPE_FAULT)
            {
              int v193 = __nwlog_obj();
              os_log_type_t v194 = v269;
              if (!os_log_type_enabled(v193, v269)) {
                goto LABEL_472;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              BOOL v195 = "%{public}s called with null parameters";
              goto LABEL_471;
            }
            if (!v268)
            {
              int v193 = __nwlog_obj();
              os_log_type_t v194 = v269;
              if (!os_log_type_enabled(v193, v269)) {
                goto LABEL_472;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              BOOL v195 = "%{public}s called with null parameters, backtrace limit exceeded";
              goto LABEL_471;
            }
            os_log_type_t v228 = (char *)__nw_create_backtrace_string();
            int v193 = __nwlog_obj();
            os_log_type_t v194 = v269;
            BOOL v229 = os_log_type_enabled(v193, v269);
            if (v228)
            {
              if (v229)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v228;
                _os_log_impl(&dword_1830D4000, v193, v194, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v228);
              if (!v192)
              {
LABEL_474:
                __nwlog_obj();
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                uint64_t v246 = (char *)_os_log_send_and_compose_impl();
                type[0] = OS_LOG_TYPE_ERROR;
                LOBYTE(aBlock[0]) = 0;
                if (!__nwlog_fault(v246, type, aBlock)) {
                  goto LABEL_488;
                }
                if (type[0] == OS_LOG_TYPE_FAULT)
                {
                  uint64_t v247 = __nwlog_obj();
                  os_log_type_t v248 = type[0];
                  if (!os_log_type_enabled(v247, type[0])) {
                    goto LABEL_488;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  uint64_t v249 = "%{public}s called with null http1_connection";
                }
                else if (LOBYTE(aBlock[0]))
                {
                  int v250 = (char *)__nw_create_backtrace_string();
                  uint64_t v247 = __nwlog_obj();
                  os_log_type_t v248 = type[0];
                  BOOL v251 = os_log_type_enabled(v247, type[0]);
                  if (v250)
                  {
                    if (v251)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v250;
                      _os_log_impl(&dword_1830D4000, v247, v248, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                    }
                    free(v250);
LABEL_488:
                    if (v246) {
                      free(v246);
                    }
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    uint64_t v252 = (char *)_os_log_send_and_compose_impl();
                    type[0] = OS_LOG_TYPE_ERROR;
                    LOBYTE(aBlock[0]) = 0;
                    if (!__nwlog_fault(v252, type, aBlock)) {
                      goto LABEL_504;
                    }
                    if (type[0] == OS_LOG_TYPE_FAULT)
                    {
                      int v253 = __nwlog_obj();
                      os_log_type_t v254 = type[0];
                      if (os_log_type_enabled(v253, type[0]))
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        uint64_t v255 = "%{public}s called with null http1_connection";
LABEL_503:
                        _os_log_impl(&dword_1830D4000, v253, v254, v255, buf, 0xCu);
                      }
                    }
                    else if (LOBYTE(aBlock[0]))
                    {
                      int v256 = (char *)__nw_create_backtrace_string();
                      int v253 = __nwlog_obj();
                      os_log_type_t v254 = type[0];
                      BOOL v257 = os_log_type_enabled(v253, type[0]);
                      if (v256)
                      {
                        if (v257)
                        {
                          *(_DWORD *)buf = 136446466;
                          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = v256;
                          _os_log_impl(&dword_1830D4000, v253, v254, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                        }
                        free(v256);
                        goto LABEL_504;
                      }
                      if (v257)
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        uint64_t v255 = "%{public}s called with null http1_connection, no backtrace";
                        goto LABEL_503;
                      }
                    }
                    else
                    {
                      int v253 = __nwlog_obj();
                      os_log_type_t v254 = type[0];
                      if (os_log_type_enabled(v253, type[0]))
                      {
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        uint64_t v255 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                        goto LABEL_503;
                      }
                    }
LABEL_504:
                    if (v252) {
                      free(v252);
                    }
                    BOOL v16 = 0;
                    uint64_t v4 = v191;
                    uint64_t v13 = v260;
                    goto LABEL_157;
                  }
                  if (!v251) {
                    goto LABEL_488;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  uint64_t v249 = "%{public}s called with null http1_connection, no backtrace";
                }
                else
                {
                  uint64_t v247 = __nwlog_obj();
                  os_log_type_t v248 = type[0];
                  if (!os_log_type_enabled(v247, type[0])) {
                    goto LABEL_488;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  uint64_t v249 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                }
                _os_log_impl(&dword_1830D4000, v247, v248, v249, buf, 0xCu);
                goto LABEL_488;
              }
LABEL_473:
              free(v192);
              goto LABEL_474;
            }
            if (v229)
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              BOOL v195 = "%{public}s called with null parameters, no backtrace";
LABEL_471:
              _os_log_impl(&dword_1830D4000, v193, v194, v195, buf, 0xCu);
            }
          }
        }
        else
        {
          uint64_t v191 = v4;
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          int v192 = (void *)_os_log_send_and_compose_impl();
          os_log_type_t v269 = OS_LOG_TYPE_ERROR;
          char v268 = 0;
          if (!__nwlog_fault((const char *)v192, &v269, &v268)) {
            goto LABEL_472;
          }
          if (v269 == OS_LOG_TYPE_FAULT)
          {
            int v193 = __nwlog_obj();
            os_log_type_t v194 = v269;
            if (!os_log_type_enabled(v193, v269)) {
              goto LABEL_472;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            BOOL v195 = "%{public}s called with null endpoint";
            goto LABEL_471;
          }
          if (!v268)
          {
            int v193 = __nwlog_obj();
            os_log_type_t v194 = v269;
            if (!os_log_type_enabled(v193, v269)) {
              goto LABEL_472;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            BOOL v195 = "%{public}s called with null endpoint, backtrace limit exceeded";
            goto LABEL_471;
          }
          uint64_t v226 = (char *)__nw_create_backtrace_string();
          int v193 = __nwlog_obj();
          os_log_type_t v194 = v269;
          BOOL v227 = os_log_type_enabled(v193, v269);
          if (!v226)
          {
            if (!v227) {
              goto LABEL_472;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            BOOL v195 = "%{public}s called with null endpoint, no backtrace";
            goto LABEL_471;
          }
          if (v227)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v226;
            _os_log_impl(&dword_1830D4000, v193, v194, "%{public}s called with null endpoint, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v226);
        }
LABEL_472:
        if (!v192) {
          goto LABEL_474;
        }
        goto LABEL_473;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
      int v220 = (char *)_os_log_send_and_compose_impl();
      type[0] = OS_LOG_TYPE_ERROR;
      LOBYTE(aBlock[0]) = 0;
      if (__nwlog_fault(v220, type, aBlock))
      {
        if (type[0] == OS_LOG_TYPE_FAULT)
        {
          uint64_t v221 = __nwlog_obj();
          os_log_type_t v222 = type[0];
          if (os_log_type_enabled(v221, type[0]))
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
            int v223 = "%{public}s called with null handle->http1_stream";
LABEL_528:
            _os_log_impl(&dword_1830D4000, v221, v222, v223, buf, 0xCu);
          }
        }
        else if (LOBYTE(aBlock[0]))
        {
          os_log_type_t v236 = (char *)__nw_create_backtrace_string();
          uint64_t v221 = __nwlog_obj();
          os_log_type_t v222 = type[0];
          BOOL v237 = os_log_type_enabled(v221, type[0]);
          if (v236)
          {
            if (v237)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v236;
              _os_log_impl(&dword_1830D4000, v221, v222, "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v236);
            goto LABEL_529;
          }
          if (v237)
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
            int v223 = "%{public}s called with null handle->http1_stream, no backtrace";
            goto LABEL_528;
          }
        }
        else
        {
          uint64_t v221 = __nwlog_obj();
          os_log_type_t v222 = type[0];
          if (os_log_type_enabled(v221, type[0]))
          {
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_get_connection_for_protocol";
            int v223 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
            goto LABEL_528;
          }
        }
      }
LABEL_529:
      if (v220) {
        free(v220);
      }
      uint64_t v4 = a2;
      goto LABEL_23;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
    int v164 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock[0]) = 0;
    if (__nwlog_fault(v164, type, aBlock))
    {
      if (type[0] == OS_LOG_TYPE_FAULT)
      {
        int v165 = __nwlog_obj();
        os_log_type_t v166 = type[0];
        if (!os_log_type_enabled(v165, type[0])) {
          goto LABEL_419;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        os_log_type_t v167 = "%{public}s called with null handle->http1_connection";
        goto LABEL_418;
      }
      if (!LOBYTE(aBlock[0]))
      {
        int v165 = __nwlog_obj();
        os_log_type_t v166 = type[0];
        if (!os_log_type_enabled(v165, type[0])) {
          goto LABEL_419;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        os_log_type_t v167 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_418;
      }
      os_log_type_t v182 = (char *)__nw_create_backtrace_string();
      int v165 = __nwlog_obj();
      os_log_type_t v166 = type[0];
      BOOL v183 = os_log_type_enabled(v165, type[0]);
      if (v182)
      {
        if (v183)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v182;
          _os_log_impl(&dword_1830D4000, v165, v166, "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v182);
        goto LABEL_419;
      }
      if (v183)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        os_log_type_t v167 = "%{public}s called with null handle->http1_connection, no backtrace";
LABEL_418:
        _os_log_impl(&dword_1830D4000, v165, v166, v167, buf, 0xCu);
      }
    }
LABEL_419:
    if (v164) {
      free(v164);
    }
    goto LABEL_193;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
  int v148 = (char *)_os_log_send_and_compose_impl();
  type[0] = OS_LOG_TYPE_ERROR;
  LOBYTE(aBlock[0]) = 0;
  if (!__nwlog_fault(v148, type, aBlock)) {
    goto LABEL_440;
  }
  if (type[0] == OS_LOG_TYPE_FAULT)
  {
    int v149 = __nwlog_obj();
    os_log_type_t v150 = type[0];
    if (!os_log_type_enabled(v149, type[0])) {
      goto LABEL_440;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
    uint64_t v151 = "%{public}s called with null other_protocol";
    goto LABEL_438;
  }
  if (!LOBYTE(aBlock[0]))
  {
    int v149 = __nwlog_obj();
    os_log_type_t v150 = type[0];
    if (!os_log_type_enabled(v149, type[0])) {
      goto LABEL_440;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
    uint64_t v151 = "%{public}s called with null other_protocol, backtrace limit exceeded";
    goto LABEL_438;
  }
  uint64_t v160 = (char *)__nw_create_backtrace_string();
  int v149 = __nwlog_obj();
  os_log_type_t v150 = type[0];
  BOOL v161 = os_log_type_enabled(v149, type[0]);
  if (!v160)
  {
    if (!v161) {
      goto LABEL_440;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
    uint64_t v151 = "%{public}s called with null other_protocol, no backtrace";
    goto LABEL_438;
  }
  if (v161)
  {
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_connected";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v160;
    _os_log_impl(&dword_1830D4000, v149, v150, "%{public}s called with null other_protocol, dumping backtrace:%{public}s", buf, 0x16u);
  }
  free(v160);
  if (v148) {
    goto LABEL_441;
  }
}

void ___ZL27nw_protocol_http1_connectedP11nw_protocolS0__block_invoke(uint64_t a1, void *a2, int a3)
{
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  switch(a3)
  {
    case 0:
      id outbound_message = nw_http_transaction_metadata_get_outbound_message(a2);
      id v6 = nw_http_metadata_copy_request(outbound_message);
      id v7 = nw_http_metadata_copy_response(outbound_message);
      if (v6)
      {
        v63[0] = MEMORY[0x1E4F143A8];
        v63[1] = 0x40000000;
        v63[2] = ___ZL27nw_protocol_http1_connectedP11nw_protocolS0__block_invoke_2;
        v63[3] = &__block_descriptor_tmp_83;
        v63[4] = *(void *)(a1 + 32);
        id v8 = v6;
        uint64_t v9 = v63;
        _nw_http_request_access_method((uint64_t)v8, v9);
      }
      if (!v7) {
        goto LABEL_31;
      }
      id v10 = v7;
      int status_code = _nw_http_response_get_status_code();

      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        goto LABEL_30;
      }
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      uint64_t v12 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        goto LABEL_30;
      }
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = v13 + 74;
      uint64_t v15 = *(void *)(v13 + 256);
      int v16 = *(_DWORD *)(*(void *)(v13 + 248) + 372);
      if (v15) {
        LODWORD(v15) = *(_DWORD *)(v15 + 860);
      }
      int v17 = *(_DWORD *)(v13 + 424);
      *(_DWORD *)buf = 136447746;
      uint32_t v65 = "nw_protocol_http1_connected_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v14;
      __int16 v68 = 2080;
      uint64_t v69 = " ";
      __int16 v70 = 1024;
      int v71 = v16;
      __int16 v72 = 1024;
      int v73 = v15;
      __int16 v74 = 1024;
      int v75 = v17;
      __int16 v76 = 1024;
      LODWORD(v77) = status_code;
      char v18 = "%{public}s %{public}s%s<i%u:c%u:s%u> sending response header {status=%hu}";
      goto LABEL_29;
    case 1:
      uint64_t outbound_body_size = nw_http_transaction_metadata_get_outbound_body_size(a2);
      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        return;
      }
      uint64_t v20 = outbound_body_size;
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      char v21 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        return;
      }
      uint64_t v22 = *(void *)(a1 + 32);
      uint64_t v23 = v22 + 74;
      uint64_t v24 = *(void *)(v22 + 256);
      int v25 = *(_DWORD *)(*(void *)(v22 + 248) + 372);
      if (v24) {
        LODWORD(v24) = *(_DWORD *)(v24 + 860);
      }
      int v26 = *(_DWORD *)(v22 + 424);
      *(_DWORD *)buf = 136447746;
      uint32_t v65 = "nw_protocol_http1_connected_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v23;
      __int16 v68 = 2080;
      uint64_t v69 = " ";
      __int16 v70 = 1024;
      int v71 = v25;
      __int16 v72 = 1024;
      int v73 = v24;
      __int16 v74 = 1024;
      int v75 = v26;
      __int16 v76 = 2048;
      uint64_t v77 = v20;
      int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> finished sending {body_bytes=%llu}";
      goto LABEL_42;
    case 2:
      id outbound_message = nw_http_transaction_metadata_get_inbound_message(a2);
      id v6 = nw_http_metadata_copy_request(outbound_message);
      id v28 = nw_http_metadata_copy_response(outbound_message);
      if (v6)
      {
        v62[0] = MEMORY[0x1E4F143A8];
        v62[1] = 0x40000000;
        v62[2] = ___ZL27nw_protocol_http1_connectedP11nw_protocolS0__block_invoke_84;
        v62[3] = &__block_descriptor_tmp_85;
        v62[4] = *(void *)(a1 + 32);
        id v29 = v6;
        uint64_t v30 = v62;
        _nw_http_request_access_method((uint64_t)v29, v30);
      }
      if (v28)
      {
        id v10 = v28;
        int v31 = _nw_http_response_get_status_code();

        if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
        {
          if (__nwlog_http_log::onceToken != -1) {
            dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
          }
          uint64_t v12 = ghttpLogObj;
          if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
          {
            uint64_t v32 = *(void *)(a1 + 32);
            uint64_t v33 = v32 + 74;
            uint64_t v34 = *(void *)(v32 + 256);
            int v35 = *(_DWORD *)(*(void *)(v32 + 248) + 372);
            if (v34) {
              LODWORD(v34) = *(_DWORD *)(v34 + 860);
            }
            int v36 = *(_DWORD *)(v32 + 424);
            *(_DWORD *)buf = 136447746;
            uint32_t v65 = "nw_protocol_http1_connected_block_invoke";
            __int16 v66 = 2082;
            uint64_t v67 = v33;
            __int16 v68 = 2080;
            uint64_t v69 = " ";
            __int16 v70 = 1024;
            int v71 = v35;
            __int16 v72 = 1024;
            int v73 = v34;
            __int16 v74 = 1024;
            int v75 = v36;
            __int16 v76 = 1024;
            LODWORD(v77) = v31;
            char v18 = "%{public}s %{public}s%s<i%u:c%u:s%u> receiving response header {status=%hu}";
LABEL_29:
            _os_log_impl(&dword_1830D4000, v12, OS_LOG_TYPE_INFO, v18, buf, 0x38u);
          }
        }
LABEL_30:
        os_release(v10);
      }
LABEL_31:
      if (v6) {
        os_release(v6);
      }
      if (!outbound_message) {
        return;
      }
      uint64_t v37 = outbound_message;
      goto LABEL_64;
    case 3:
      uint64_t inbound_body_size = nw_http_transaction_metadata_get_inbound_body_size(a2);
      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        return;
      }
      uint64_t v39 = inbound_body_size;
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      char v21 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        return;
      }
      uint64_t v40 = *(void *)(a1 + 32);
      uint64_t v41 = v40 + 74;
      uint64_t v42 = *(void *)(v40 + 256);
      int v43 = *(_DWORD *)(*(void *)(v40 + 248) + 372);
      if (v42) {
        LODWORD(v42) = *(_DWORD *)(v42 + 860);
      }
      int v44 = *(_DWORD *)(v40 + 424);
      *(_DWORD *)buf = 136447746;
      uint32_t v65 = "nw_protocol_http1_connected_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v41;
      __int16 v68 = 2080;
      uint64_t v69 = " ";
      __int16 v70 = 1024;
      int v71 = v43;
      __int16 v72 = 1024;
      int v73 = v42;
      __int16 v74 = 1024;
      int v75 = v44;
      __int16 v76 = 2048;
      uint64_t v77 = v39;
      int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> finished receiving {body_bytes=%llu}";
LABEL_42:
      _os_log_impl(&dword_1830D4000, v21, OS_LOG_TYPE_INFO, v27, buf, 0x3Cu);
      return;
    case 4:
      v57[0] = MEMORY[0x1E4F143A8];
      v57[1] = 0x40000000;
      uint64_t v58 = ___ZL27nw_protocol_http1_connectedP11nw_protocolS0__block_invoke_86;
      uint64_t v59 = &__block_descriptor_tmp_87;
      uint64_t v45 = *(void *)(a1 + 32);
      int v60 = a2;
      uint64_t v61 = v45;
      id v46 = nw_http_transaction_metadata_get_outbound_message(a2);
      char v47 = v46;
      if (v46)
      {
        id v48 = nw_http_metadata_copy_request(v46);
        id v49 = nw_http_metadata_copy_response(v47);
        id inbound_message = nw_http_transaction_metadata_get_inbound_message(a2);
        if (!inbound_message) {
          goto LABEL_52;
        }
        if (v48)
        {
          if (v49) {
            goto LABEL_53;
          }
          goto LABEL_51;
        }
      }
      else
      {
        id v51 = nw_http_transaction_metadata_get_inbound_message(a2);
        id v49 = 0;
        if (!v51)
        {
          uint64_t v52 = 0;
          id inbound_message = 0;
          goto LABEL_67;
        }
        id inbound_message = v51;
      }
      id v48 = nw_http_metadata_copy_request(inbound_message);
      if (v49) {
        goto LABEL_53;
      }
LABEL_51:
      id v49 = nw_http_metadata_copy_response(inbound_message);
LABEL_52:
      if (!v49)
      {
        uint64_t v52 = 0;
        if (!v48) {
          goto LABEL_67;
        }
LABEL_56:
        v55[0] = MEMORY[0x1E4F143A8];
        v55[1] = 0x40000000;
        v55[2] = ___ZL27nw_protocol_http1_connectedP11nw_protocolS0__block_invoke_88;
        v55[3] = &unk_1E5241440;
        v55[4] = v57;
        __int16 v56 = v52;
        id v53 = v48;
        id v54 = v55;
        _nw_http_request_access_method((uint64_t)v53, v54);

        if (!inbound_message) {
          goto LABEL_58;
        }
        goto LABEL_57;
      }
LABEL_53:
      id v49 = v49;
      uint64_t v52 = _nw_http_response_get_status_code();

      if (v48) {
        goto LABEL_56;
      }
LABEL_67:
      v58((uint64_t)v57, (uint64_t)"", v52);
      id v53 = 0;
      if (inbound_message) {
LABEL_57:
      }
        os_release(inbound_message);
LABEL_58:
      if (v47) {
        os_release(v47);
      }
      if (v49) {
        os_release(v49);
      }
      if (v53)
      {
        uint64_t v37 = v53;
LABEL_64:
        os_release(v37);
      }
      return;
    default:
      return;
  }
}

void ___ZL27nw_protocol_http1_connectedP11nw_protocolS0__block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    uint64_t v4 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = v5 + 74;
      uint64_t v7 = *(void *)(v5 + 256);
      int v8 = *(_DWORD *)(*(void *)(v5 + 248) + 372);
      if (v7) {
        LODWORD(v7) = *(_DWORD *)(v7 + 860);
      }
      int v9 = *(_DWORD *)(v5 + 424);
      int v10 = 136447746;
      uint64_t v11 = "nw_protocol_http1_connected_block_invoke_2";
      __int16 v12 = 2082;
      uint64_t v13 = v6;
      __int16 v14 = 2080;
      uint64_t v15 = " ";
      __int16 v16 = 1024;
      int v17 = v8;
      __int16 v18 = 1024;
      int v19 = v7;
      __int16 v20 = 1024;
      int v21 = v9;
      __int16 v22 = 2082;
      uint64_t v23 = a2;
      _os_log_impl(&dword_1830D4000, v4, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> sending request header {method=\"%{public}s\"}", (uint8_t *)&v10, 0x3Cu);
    }
  }
}

void ___ZL27nw_protocol_http1_connectedP11nw_protocolS0__block_invoke_84(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    uint64_t v4 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = v5 + 74;
      uint64_t v7 = *(void *)(v5 + 256);
      int v8 = *(_DWORD *)(*(void *)(v5 + 248) + 372);
      if (v7) {
        LODWORD(v7) = *(_DWORD *)(v7 + 860);
      }
      int v9 = *(_DWORD *)(v5 + 424);
      int v10 = 136447746;
      uint64_t v11 = "nw_protocol_http1_connected_block_invoke";
      __int16 v12 = 2082;
      uint64_t v13 = v6;
      __int16 v14 = 2080;
      uint64_t v15 = " ";
      __int16 v16 = 1024;
      int v17 = v8;
      __int16 v18 = 1024;
      int v19 = v7;
      __int16 v20 = 1024;
      int v21 = v9;
      __int16 v22 = 2082;
      uint64_t v23 = a2;
      _os_log_impl(&dword_1830D4000, v4, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> receiving request header {method=\"%{public}s\"}", (uint8_t *)&v10, 0x3Cu);
    }
  }
}

void ___ZL27nw_protocol_http1_connectedP11nw_protocolS0__block_invoke_86(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v75 = *MEMORY[0x1E4F143B8];
  int start_reason = nw_http_transaction_metadata_get_start_reason(*(void **)(a1 + 32));
  uint64_t start_time = nw_http_transaction_metadata_get_start_time(*(void **)(a1 + 32));
  uint64_t end_time = nw_http_transaction_metadata_get_end_time(*(void **)(a1 + 32));
  outbound_message_uint64_t start_time = nw_http_transaction_metadata_get_outbound_message_start_time(*(void **)(a1 + 32));
  outbound_message_uint64_t end_time = nw_http_transaction_metadata_get_outbound_message_end_time(*(void **)(a1 + 32));
  inbound_message_uint64_t start_time = nw_http_transaction_metadata_get_inbound_message_start_time(*(void **)(a1 + 32));
  inbound_message_uint64_t end_time = nw_http_transaction_metadata_get_inbound_message_end_time(*(void **)(a1 + 32));
  uint64_t outbound_body_size = nw_http_transaction_metadata_get_outbound_body_size(*(void **)(a1 + 32));
  uint64_t inbound_body_size = nw_http_transaction_metadata_get_inbound_body_size(*(void **)(a1 + 32));
  if ((*(unsigned char *)(*(void *)(a1 + 40) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    __int16 v12 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_DEFAULT))
    {
      int v39 = a3;
      uint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = *(void *)(v13 + 256);
      if (v14) {
        int v34 = *(_DWORD *)(v14 + 860);
      }
      else {
        int v34 = 0;
      }
      uint64_t v15 = inbound_message_end_time;
      if ((start_reason - 1) > 2) {
        __int16 v16 = "initial";
      }
      else {
        __int16 v16 = off_1E52492C0[start_reason - 1];
      }
      int v35 = v16;
      int v37 = *(_DWORD *)(*(void *)(v13 + 248) + 372);
      int v17 = *(_DWORD *)(v13 + 424);
      int v18 = -1;
      if (start_time && end_time)
      {
        unint64_t v19 = nw_delta_nanos(start_time, end_time);
        uint64_t v15 = inbound_message_end_time;
        if (v19 > 0xF423FFFFFFFFFLL) {
          int v18 = -1;
        }
        else {
          int v18 = v19 / 0xF4240;
        }
      }
      LODWORD(v20) = -1;
      int v38 = v17;
      if (start_time)
      {
        if (outbound_message_start_time)
        {
          unint64_t v21 = nw_delta_nanos(start_time, outbound_message_start_time);
          uint64_t v15 = inbound_message_end_time;
          unint64_t v20 = v21 / 0xF4240;
          if (v21 > 0xF423FFFFFFFFFLL) {
            LODWORD(v20) = -1;
          }
        }
      }
      int v22 = -1;
      int v36 = v20;
      if (outbound_message_start_time && outbound_message_end_time)
      {
        unint64_t v23 = nw_delta_nanos(outbound_message_start_time, outbound_message_end_time);
        uint64_t v15 = inbound_message_end_time;
        if (v23 > 0xF423FFFFFFFFFLL) {
          int v22 = -1;
        }
        else {
          int v22 = v23 / 0xF4240;
        }
      }
      int v24 = v18;
      uint64_t v25 = v13 + 74;
      int v26 = -1;
      if (start_time)
      {
        uint64_t v28 = outbound_body_size;
        uint64_t v27 = inbound_body_size;
        if (inbound_message_start_time)
        {
          unint64_t v29 = nw_delta_nanos(start_time, inbound_message_start_time);
          uint64_t v15 = inbound_message_end_time;
          if (v29 > 0xF423FFFFFFFFFLL) {
            int v26 = -1;
          }
          else {
            int v26 = v29 / 0xF4240;
          }
        }
        LODWORD(v30) = -1;
        if (inbound_message_start_time) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v28 = outbound_body_size;
        uint64_t v27 = inbound_body_size;
        LODWORD(v30) = -1;
        if (inbound_message_start_time)
        {
LABEL_31:
          uint64_t v31 = a2;
          int v32 = v34;
          if (v15)
          {
            unint64_t v33 = nw_delta_nanos(inbound_message_start_time, v15);
            unint64_t v30 = v33 / 0xF4240;
            if (v33 > 0xF423FFFFFFFFFLL) {
              LODWORD(v30) = -1;
            }
          }
          goto LABEL_36;
        }
      }
      uint64_t v31 = a2;
      int v32 = v34;
LABEL_36:
      *(_DWORD *)buf = 136450050;
      int v44 = "nw_protocol_http1_connected_block_invoke";
      __int16 v45 = 2082;
      uint64_t v46 = v25;
      __int16 v47 = 2080;
      id v48 = " ";
      __int16 v49 = 1024;
      int v50 = v37;
      __int16 v51 = 1024;
      int v52 = v32;
      __int16 v53 = 1024;
      int v54 = v38;
      __int16 v55 = 2080;
      __int16 v56 = v35;
      __int16 v57 = 1024;
      int v58 = v24;
      __int16 v59 = 2082;
      uint64_t v60 = v31;
      __int16 v61 = 1024;
      int v62 = v39;
      __int16 v63 = 1024;
      int v64 = v36;
      __int16 v65 = 1024;
      int v66 = v22;
      __int16 v67 = 1024;
      int v68 = v26;
      __int16 v69 = 1024;
      int v70 = v30;
      __int16 v71 = 2048;
      uint64_t v72 = v28;
      __int16 v73 = 2048;
      uint64_t v74 = v27;
      _os_log_impl(&dword_1830D4000, v12, OS_LOG_TYPE_DEFAULT, "%{public}s %{public}s%s<i%u:c%u:s%u> transaction summary {start_reason=\"%s\", duration_ms=%d, request_method=\"%{public}s\", response_status=%hu, outbound_start_ms=%d, outbound_duration_ms=%d, inbound_start_ms=%d, inbound_duration_ms=%d, outbound_body_bytes=%llu, inbound_body_bytes=%llu}", buf, 0x7Eu);
    }
  }
}

uint64_t ___ZL27nw_protocol_http1_connectedP11nw_protocolS0__block_invoke_88(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2, *(unsigned __int16 *)(a1 + 40));
}

BOOL nw_protocol_http1_connect(nw_protocol *a1, nw_protocol *a2, __n128 a3)
{
  uint64_t v781 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    os_log_type_t v248 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v248, type, &aBlock)) {
      goto LABEL_838;
    }
    if (type[0] != OS_LOG_TYPE_FAULT)
    {
      if (!(_BYTE)aBlock)
      {
        uint64_t v249 = __nwlog_obj();
        os_log_type_t v250 = type[0];
        if (!os_log_type_enabled(v249, type[0])) {
          goto LABEL_838;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v251 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_837;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v249 = __nwlog_obj();
      os_log_type_t v250 = type[0];
      BOOL v276 = os_log_type_enabled(v249, type[0]);
      if (!backtrace_string)
      {
        if (!v276) {
          goto LABEL_838;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v251 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_837;
      }
      if (v276)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = backtrace_string;
        _os_log_impl(&dword_1830D4000, v249, v250, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_838;
    }
    uint64_t v249 = __nwlog_obj();
    os_log_type_t v250 = type[0];
    if (!os_log_type_enabled(v249, type[0])) {
      goto LABEL_838;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    BOOL v251 = "%{public}s called with null protocol";
LABEL_837:
    _os_log_impl(&dword_1830D4000, v249, v250, v251, buf, 0xCu);
    goto LABEL_838;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    os_log_type_t v248 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v248, type, &aBlock)) {
      goto LABEL_838;
    }
    if (type[0] != OS_LOG_TYPE_FAULT)
    {
      if (!(_BYTE)aBlock)
      {
        uint64_t v249 = __nwlog_obj();
        os_log_type_t v250 = type[0];
        if (!os_log_type_enabled(v249, type[0])) {
          goto LABEL_838;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v251 = "%{public}s called with null handle, backtrace limit exceeded";
        goto LABEL_837;
      }
      uint64_t v277 = (char *)__nw_create_backtrace_string();
      uint64_t v249 = __nwlog_obj();
      os_log_type_t v250 = type[0];
      BOOL v278 = os_log_type_enabled(v249, type[0]);
      if (!v277)
      {
        if (!v278) {
          goto LABEL_838;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v251 = "%{public}s called with null handle, no backtrace";
        goto LABEL_837;
      }
      if (v278)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v277;
        _os_log_impl(&dword_1830D4000, v249, v250, "%{public}s called with null handle, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v277);
      if (!v248)
      {
LABEL_840:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
        uint64_t v255 = (char *)_os_log_send_and_compose_impl();
        type[0] = OS_LOG_TYPE_ERROR;
        LOBYTE(aBlock) = 0;
        if (!__nwlog_fault(v255, type, &aBlock)) {
          goto LABEL_875;
        }
        if (type[0] == OS_LOG_TYPE_FAULT)
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v256 = gLogObj;
          os_log_type_t v257 = type[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
            goto LABEL_875;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
          BOOL v258 = "%{public}s called with null http1";
        }
        else
        {
          if ((_BYTE)aBlock)
          {
            BOOL v509 = (char *)__nw_create_backtrace_string();
            pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
            networkd_settings_init();
            uint64_t v510 = gLogObj;
            os_log_type_t v511 = type[0];
            BOOL v512 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
            if (v509)
            {
              if (v512)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v509;
                id v513 = "%{public}s called with null http1, dumping backtrace:%{public}s";
LABEL_869:
                _os_log_impl(&dword_1830D4000, v510, v511, v513, buf, 0x16u);
              }
LABEL_870:
              free(v509);
              goto LABEL_875;
            }
            if (!v512) {
              goto LABEL_875;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
            BOOL v258 = "%{public}s called with null http1, no backtrace";
LABEL_881:
            __int16 v519 = v510;
            os_log_type_t v520 = v511;
            goto LABEL_874;
          }
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          int v256 = gLogObj;
          os_log_type_t v257 = type[0];
          if (!os_log_type_enabled((os_log_t)gLogObj, type[0])) {
            goto LABEL_875;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
          BOOL v258 = "%{public}s called with null http1, backtrace limit exceeded";
        }
LABEL_873:
        __int16 v519 = v256;
        os_log_type_t v520 = v257;
LABEL_874:
        _os_log_impl(&dword_1830D4000, v519, v520, v258, buf, 0xCu);
        goto LABEL_875;
      }
LABEL_839:
      free(v248);
      goto LABEL_840;
    }
    uint64_t v249 = __nwlog_obj();
    os_log_type_t v250 = type[0];
    if (!os_log_type_enabled(v249, type[0])) {
      goto LABEL_838;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    BOOL v251 = "%{public}s called with null handle";
    goto LABEL_837;
  }
  int v6 = handle[6];
  if (v6 == 1) {
    goto LABEL_10;
  }
  if (v6 != 2)
  {
    if (v6 != 3) {
      goto LABEL_840;
    }
    uint64_t v7 = *((void *)handle + 2);
    if (v7)
    {
      handle = (_DWORD *)(v7 + 480);
      goto LABEL_10;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    os_log_type_t v248 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock) = 0;
    if (__nwlog_fault(v248, type, &aBlock))
    {
      if (type[0] == OS_LOG_TYPE_FAULT)
      {
        uint64_t v249 = __nwlog_obj();
        os_log_type_t v250 = type[0];
        if (!os_log_type_enabled(v249, type[0])) {
          goto LABEL_838;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v251 = "%{public}s called with null handle->http1_connection";
        goto LABEL_837;
      }
      if (!(_BYTE)aBlock)
      {
        uint64_t v249 = __nwlog_obj();
        os_log_type_t v250 = type[0];
        if (!os_log_type_enabled(v249, type[0])) {
          goto LABEL_838;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v251 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
        goto LABEL_837;
      }
      long long v383 = (char *)__nw_create_backtrace_string();
      uint64_t v249 = __nwlog_obj();
      os_log_type_t v250 = type[0];
      BOOL v384 = os_log_type_enabled(v249, type[0]);
      if (!v383)
      {
        if (!v384) {
          goto LABEL_838;
        }
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        BOOL v251 = "%{public}s called with null handle->http1_connection, no backtrace";
        goto LABEL_837;
      }
      if (v384)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v383;
        int v385 = "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s";
LABEL_618:
        _os_log_impl(&dword_1830D4000, v249, v250, v385, buf, 0x16u);
        goto LABEL_619;
      }
      goto LABEL_619;
    }
LABEL_838:
    if (!v248) {
      goto LABEL_840;
    }
    goto LABEL_839;
  }
  uint64_t v8 = *((void *)handle + 1);
  if (!v8)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
    os_log_type_t v248 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v248, type, &aBlock)) {
      goto LABEL_838;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      uint64_t v249 = __nwlog_obj();
      os_log_type_t v250 = type[0];
      if (!os_log_type_enabled(v249, type[0])) {
        goto LABEL_838;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      BOOL v251 = "%{public}s called with null handle->http1_stream";
      goto LABEL_837;
    }
    if (!(_BYTE)aBlock)
    {
      uint64_t v249 = __nwlog_obj();
      os_log_type_t v250 = type[0];
      if (!os_log_type_enabled(v249, type[0])) {
        goto LABEL_838;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      BOOL v251 = "%{public}s called with null handle->http1_stream, backtrace limit exceeded";
      goto LABEL_837;
    }
    long long v383 = (char *)__nw_create_backtrace_string();
    uint64_t v249 = __nwlog_obj();
    os_log_type_t v250 = type[0];
    BOOL v386 = os_log_type_enabled(v249, type[0]);
    if (!v383)
    {
      if (!v386) {
        goto LABEL_838;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      BOOL v251 = "%{public}s called with null handle->http1_stream, no backtrace";
      goto LABEL_837;
    }
    if (v386)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_http1_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v383;
      int v385 = "%{public}s called with null handle->http1_stream, dumping backtrace:%{public}s";
      goto LABEL_618;
    }
LABEL_619:
    free(v383);
    if (!v248) {
      goto LABEL_840;
    }
    goto LABEL_839;
  }
  handle = (_DWORD *)(v8 + 248);
LABEL_10:
  uint64_t v9 = *(void *)handle;
  if (!*(void *)handle) {
    goto LABEL_840;
  }
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
    uint64_t v255 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v255, type, &aBlock)) {
      goto LABEL_875;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      int v256 = __nwlog_obj();
      os_log_type_t v257 = type[0];
      if (!os_log_type_enabled(v256, type[0])) {
        goto LABEL_875;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
      BOOL v258 = "%{public}s called with null other_protocol";
    }
    else if ((_BYTE)aBlock)
    {
      long long v313 = (char *)__nw_create_backtrace_string();
      int v256 = __nwlog_obj();
      os_log_type_t v257 = type[0];
      BOOL v314 = os_log_type_enabled(v256, type[0]);
      if (v313)
      {
        if (v314)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v313;
          _os_log_impl(&dword_1830D4000, v256, v257, "%{public}s called with null other_protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v313);
        goto LABEL_875;
      }
      if (!v314) {
        goto LABEL_875;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
      BOOL v258 = "%{public}s called with null other_protocol, no backtrace";
    }
    else
    {
      int v256 = __nwlog_obj();
      os_log_type_t v257 = type[0];
      if (!os_log_type_enabled(v256, type[0])) {
        goto LABEL_875;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
      BOOL v258 = "%{public}s called with null other_protocol, backtrace limit exceeded";
    }
    goto LABEL_873;
  }
  p_cache = NWConcrete_nw_resolution_report.cache;
  if ((*(unsigned char *)(v9 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      nw_parameters_t v263 = __nwlog_obj();
      BOOL v264 = os_log_type_enabled(v263, OS_LOG_TYPE_DEBUG);
      p_cache = NWConcrete_nw_resolution_report.cache;
      if (v264)
      {
        int v265 = *(_DWORD *)(v9 + 372);
        *(_DWORD *)buf = 136447234;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v9 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v779 = (uint64_t)" ";
        *(_WORD *)int v780 = 1024;
        *(_DWORD *)&v780[2] = v265;
        *(_WORD *)&v780[6] = 2048;
        *(void *)&v780[8] = a2;
        _os_log_impl(&dword_1830D4000, v263, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called by protocol %p", buf, 0x30u);
        p_cache = NWConcrete_nw_resolution_report.cache;
      }
    }
  }
  uint64_t v11 = (char *)a1->handle;
  if (!v11)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
    uint64_t v259 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v259, type, &aBlock)) {
      goto LABEL_859;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      uint64_t v260 = __nwlog_obj();
      os_log_type_t v261 = type[0];
      if (!os_log_type_enabled(v260, type[0])) {
        goto LABEL_859;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
      BOOL v262 = "%{public}s called with null handle";
      goto LABEL_858;
    }
    if (!(_BYTE)aBlock)
    {
      uint64_t v260 = __nwlog_obj();
      os_log_type_t v261 = type[0];
      if (!os_log_type_enabled(v260, type[0])) {
        goto LABEL_859;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
      BOOL v262 = "%{public}s called with null handle, backtrace limit exceeded";
      goto LABEL_858;
    }
    long long v315 = (char *)__nw_create_backtrace_string();
    uint64_t v260 = __nwlog_obj();
    os_log_type_t v261 = type[0];
    BOOL v316 = os_log_type_enabled(v260, type[0]);
    if (!v315)
    {
      if (!v316) {
        goto LABEL_859;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
      BOOL v262 = "%{public}s called with null handle, no backtrace";
      goto LABEL_858;
    }
    if (v316)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v315;
      _os_log_impl(&dword_1830D4000, v260, v261, "%{public}s called with null handle, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v315);
LABEL_859:
    if (!v259) {
      goto LABEL_861;
    }
LABEL_860:
    free(v259);
    goto LABEL_861;
  }
  int v12 = *((_DWORD *)v11 + 6);
  if (v12 != 2)
  {
    if (v12 != 3)
    {
LABEL_861:
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
      uint64_t v255 = (char *)_os_log_send_and_compose_impl();
      type[0] = OS_LOG_TYPE_ERROR;
      LOBYTE(aBlock) = 0;
      if (!__nwlog_fault(v255, type, &aBlock)) {
        goto LABEL_875;
      }
      if (type[0] == OS_LOG_TYPE_FAULT)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v256 = gLogObj;
        os_log_type_t v257 = type[0];
        if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
          BOOL v258 = "%{public}s called with null http1_stream";
          goto LABEL_873;
        }
LABEL_875:
        if (v255) {
          free(v255);
        }
        return 0;
      }
      if (!(_BYTE)aBlock)
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        int v256 = gLogObj;
        os_log_type_t v257 = type[0];
        if (os_log_type_enabled((os_log_t)gLogObj, type[0]))
        {
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
          BOOL v258 = "%{public}s called with null http1_stream, backtrace limit exceeded";
          goto LABEL_873;
        }
        goto LABEL_875;
      }
      BOOL v509 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      uint64_t v510 = gLogObj;
      os_log_type_t v511 = type[0];
      BOOL v518 = os_log_type_enabled((os_log_t)gLogObj, type[0]);
      if (v509)
      {
        if (v518)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v509;
          id v513 = "%{public}s called with null http1_stream, dumping backtrace:%{public}s";
          goto LABEL_869;
        }
        goto LABEL_870;
      }
      if (!v518) {
        goto LABEL_875;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
      BOOL v258 = "%{public}s called with null http1_stream, no backtrace";
      goto LABEL_881;
    }
    uint64_t v13 = *((void *)v11 + 2);
    if (v13)
    {
      uint64_t v14 = (uint64_t *)(v13 + 488);
      goto LABEL_20;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
    uint64_t v259 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v259, type, &aBlock)) {
      goto LABEL_859;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      uint64_t v260 = __nwlog_obj();
      os_log_type_t v261 = type[0];
      if (!os_log_type_enabled(v260, type[0])) {
        goto LABEL_859;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
      BOOL v262 = "%{public}s called with null handle->http1_connection";
      goto LABEL_858;
    }
    if (!(_BYTE)aBlock)
    {
      uint64_t v260 = __nwlog_obj();
      os_log_type_t v261 = type[0];
      if (!os_log_type_enabled(v260, type[0])) {
        goto LABEL_859;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
      BOOL v262 = "%{public}s called with null handle->http1_connection, backtrace limit exceeded";
      goto LABEL_858;
    }
    int v387 = (char *)__nw_create_backtrace_string();
    uint64_t v260 = __nwlog_obj();
    os_log_type_t v261 = type[0];
    BOOL v388 = os_log_type_enabled(v260, type[0]);
    if (v387)
    {
      if (v388)
      {
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v387;
        _os_log_impl(&dword_1830D4000, v260, v261, "%{public}s called with null handle->http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v387);
      if (!v259) {
        goto LABEL_861;
      }
      goto LABEL_860;
    }
    if (v388)
    {
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_get_stream_for_protocol";
      BOOL v262 = "%{public}s called with null handle->http1_connection, no backtrace";
LABEL_858:
      _os_log_impl(&dword_1830D4000, v260, v261, v262, buf, 0xCu);
      goto LABEL_859;
    }
    goto LABEL_859;
  }
  uint64_t v14 = (uint64_t *)(v11 + 8);
LABEL_20:
  uint64_t v15 = *v14;
  if (!*v14) {
    goto LABEL_861;
  }
  if ((*(unsigned char *)(v15 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      unsigned int v279 = __nwlog_obj();
      BOOL v280 = os_log_type_enabled(v279, OS_LOG_TYPE_DEBUG);
      p_cache = NWConcrete_nw_resolution_report.cache;
      if (v280)
      {
        uint64_t v281 = *(void *)(v15 + 256);
        int v282 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
        if (v281) {
          LODWORD(v281) = *(_DWORD *)(v281 + 860);
        }
        int v283 = *(_DWORD *)(v15 + 424);
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v15 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v779 = (uint64_t)" ";
        *(_WORD *)int v780 = 1024;
        *(_DWORD *)&v780[2] = v282;
        *(_WORD *)&v780[6] = 1024;
        *(_DWORD *)&v780[8] = v281;
        *(_WORD *)&v780[12] = 1024;
        *(_DWORD *)&v780[14] = v283;
        *(_WORD *)&v780[18] = 2048;
        *(void *)&v780[20] = v15;
        _os_log_impl(&dword_1830D4000, v279, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for stream %p", buf, 0x3Cu);
        p_cache = NWConcrete_nw_resolution_report.cache;
      }
    }
  }
  __int16 v16 = *(_WORD *)(v15 + 428);
  if ((v16 & 0x1000) != 0)
  {
    BOOL result = 1;
    if ((*(unsigned char *)(v15 + 158) & 1) != 0 || !gLogDatapath) {
      return result;
    }
    unint64_t v20 = __nwlog_obj();
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG)) {
      return 1;
    }
    uint64_t v21 = *(void *)(v15 + 256);
    int v22 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
    if (v21) {
      LODWORD(v21) = *(_DWORD *)(v21 + 860);
    }
    int v23 = *(_DWORD *)(v15 + 424);
    *(_DWORD *)buf = 136447490;
    *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v15 + 74;
    *(_WORD *)&buf[22] = 2080;
    uint64_t v779 = (uint64_t)" ";
    *(_WORD *)int v780 = 1024;
    *(_DWORD *)&v780[2] = v22;
    *(_WORD *)&v780[6] = 1024;
    *(_DWORD *)&v780[8] = v21;
    *(_WORD *)&v780[12] = 1024;
    *(_DWORD *)&v780[14] = v23;
    int v24 = "%{public}s %{public}s%s<i%u:c%u:s%u> ignoring duplicate call to connect";
    goto LABEL_42;
  }
  int v17 = (_OWORD *)(v15 + 64);
  if ((v16 & 8) != 0)
  {
    if (*(void *)(v15 + 256))
    {
      if (*(unsigned char *)(v15 + 158)) {
        return 1;
      }
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      unint64_t v20 = gLogObj;
      if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG)) {
        return 1;
      }
      uint64_t v25 = *(void *)(v15 + 256);
      int v26 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
      if (v25) {
        LODWORD(v25) = *(_DWORD *)(v25 + 860);
      }
      int v27 = *(_DWORD *)(v15 + 424);
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v15 + 74;
      *(_WORD *)&buf[22] = 2080;
      uint64_t v779 = (uint64_t)" ";
      *(_WORD *)int v780 = 1024;
      *(_DWORD *)&v780[2] = v26;
      *(_WORD *)&v780[6] = 1024;
      *(_DWORD *)&v780[8] = v25;
      *(_WORD *)&v780[12] = 1024;
      *(_DWORD *)&v780[14] = v27;
      int v24 = "%{public}s %{public}s%s<i%u:c%u:s%u> stream already has current connection, ignoring";
LABEL_42:
      uint64_t v28 = v20;
      uint32_t v29 = 50;
LABEL_43:
      _os_log_impl(&dword_1830D4000, v28, OS_LOG_TYPE_DEBUG, v24, buf, v29);
      return 1;
    }
    if (!*(void *)(v15 + 32))
    {
      if (*(unsigned char *)(v15 + 158) & 1 | (gLogDatapath == 0)) {
        return 1;
      }
      os_log_type_t v85 = __nwlog_obj();
      if (!os_log_type_enabled(v85, OS_LOG_TYPE_DEBUG)) {
        return 1;
      }
      uint64_t v86 = *(void *)(v15 + 256);
      int v87 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
      if (v86) {
        LODWORD(v86) = *(_DWORD *)(v86 + 860);
      }
      int v88 = *(_DWORD *)(v15 + 424);
      *(_DWORD *)buf = 136447746;
      *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v15 + 74;
      *(_WORD *)&buf[22] = 2080;
      uint64_t v779 = (uint64_t)" ";
      *(_WORD *)int v780 = 1024;
      *(_DWORD *)&v780[2] = v87;
      *(_WORD *)&v780[6] = 1024;
      *(_DWORD *)&v780[8] = v86;
      *(_WORD *)&v780[12] = 1024;
      *(_DWORD *)&v780[14] = v88;
      *(_WORD *)&v780[18] = 2048;
      *(void *)&v780[20] = v15;
      int v24 = "%{public}s %{public}s%s<i%u:c%u:s%u> Stream %p still awaiting new output handler";
      uint64_t v28 = v85;
      uint32_t v29 = 60;
      goto LABEL_43;
    }
    if (!(*(unsigned char *)(v15 + 158) & 1 | (gLogDatapath == 0)))
    {
      id v521 = __nwlog_obj();
      if (os_log_type_enabled(v521, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v522 = *(void *)(v15 + 256);
        int v523 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
        if (v522) {
          LODWORD(v522) = *(_DWORD *)(v522 + 860);
        }
        int v524 = *(_DWORD *)(v15 + 424);
        uint64_t v525 = *(void *)(v15 + 32);
        *(_DWORD *)buf = 136448002;
        *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v15 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v779 = (uint64_t)" ";
        *(_WORD *)int v780 = 1024;
        *(_DWORD *)&v780[2] = v523;
        *(_WORD *)&v780[6] = 1024;
        *(_DWORD *)&v780[8] = v522;
        *(_WORD *)&v780[12] = 1024;
        *(_DWORD *)&v780[14] = v524;
        *(_WORD *)&v780[18] = 2048;
        *(void *)&v780[20] = v15;
        *(_WORD *)&v780[28] = 2048;
        *(void *)&v780[30] = v525;
        _os_log_impl(&dword_1830D4000, v521, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> creating connection for stream %p with new output_handler %p", buf, 0x46u);
      }
    }
    int v32 = *(_OWORD **)(v15 + 32);
    uint64_t v747 = (uint64_t)v32;
    if (v32)
    {
      unint64_t v33 = *(void **)(v15 + 336);
      if (v33)
      {
        int v34 = *(void **)(v15 + 320);
        if (v34)
        {
          int v35 = malloc_type_calloc(1uLL, 0x370uLL, 0xEAFB8F1AuLL);
          if (!v35)
          {
            uint64_t v526 = __nwlog_obj();
            os_log_type_enabled(v526, OS_LOG_TYPE_ERROR);
            *(_DWORD *)buf = 136446722;
            *(void *)&uint8_t buf[4] = "strict_calloc";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = 1;
            *(_WORD *)&buf[22] = 2048;
            uint64_t v779 = 880;
            uint64_t v527 = (void *)_os_log_send_and_compose_impl();
            BOOL result = __nwlog_abort((uint64_t)v527);
            if (result) {
              goto LABEL_1395;
            }
            free(v527);
          }
          bzero(v35, 0x370uLL);
          if (nw_protocol_http1_identifier::onceToken != -1) {
            dispatch_once(&nw_protocol_http1_identifier::onceToken, &__block_literal_global_40283);
          }
          *((void *)v35 + 2) = &nw_protocol_http1_identifier::http1_protocol_identifier;
          if (nw_protocol_http1_get_callbacks(void)::onceToken != -1) {
            dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
          }
          *((void *)v35 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
          *((_DWORD *)v35 + 46) = 3;
          *((void *)v35 + 22) = v35;
          *((void *)v35 + 5) = v35 + 10;
          *((void *)v35 + 60) = v9;
          nw_protocol_set_output_handler((uint64_t)v35, (uint64_t)v32);
          int v36 = os_retain(v33);
          char v37 = *((unsigned char *)v35 + 760);
          if (v37)
          {
            int v38 = (void *)*((void *)v35 + 94);
            if (v38)
            {
              os_release(v38);
              char v37 = *((unsigned char *)v35 + 760);
            }
          }
          *((void *)v35 + 94) = v36;
          *((unsigned char *)v35 + 760) = v37 | 1;
          int v39 = os_retain(v34);
          char v40 = *((unsigned char *)v35 + 744);
          if (v40)
          {
            uint64_t v41 = (void *)*((void *)v35 + 92);
            if (v41)
            {
              os_release(v41);
              char v40 = *((unsigned char *)v35 + 744);
            }
          }
          *((void *)v35 + 92) = v39;
          *((unsigned char *)v35 + 744) = v40 | 1;
          uint64_t v42 = v34;
          id v43 = *(id *)(v42[13] + 136);

          char v44 = *((unsigned char *)v35 + 504);
          if (v44)
          {
            __int16 v45 = (void *)*((void *)v35 + 62);
            if (v45)
            {
              os_release(v45);
              char v44 = *((unsigned char *)v35 + 504);
            }
          }
          *((void *)v35 + 62) = v43;
          *((unsigned char *)v35 + 504) = v44 | 1;
          *((void *)v35 + 24) = *(void *)(v9 + 192);
          *(void *)os_log_type_t type = MEMORY[0x1E4F143A8];
          uint64_t v763 = 0x40000000;
          uint64_t v764 = (uint64_t)___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke;
          os_log_type_t v765 = (uint64_t (*)(uint64_t, uint64_t))&__block_descriptor_tmp_43_40284;
          BOOL v766 = (void (*)(uint64_t))v35;
          metadata = nw_http_connection_create_metadata(v43, type, 0);
          char v47 = *((unsigned char *)v35 + 776);
          if (v47)
          {
            id v48 = (void *)*((void *)v35 + 96);
            if (v48)
            {
              os_release(v48);
              char v47 = *((unsigned char *)v35 + 776);
            }
          }
          *((void *)v35 + 96) = metadata;
          *((unsigned char *)v35 + 776) = v47 | 1;
          nw_http_connection_metadata_set_version(metadata, 3);
          nw_http_connection_metadata_set_shared_connection_pool_metadata(*((void **)v35 + 96), *(void **)(v9 + 312));
          *((void *)v35 + 77) = 0;
          *((void *)v35 + 78) = (char *)v35 + 616;
          *((void *)v35 + 79) = 0;
          *((void *)v35 + 80) = (char *)v35 + 632;
          *((void *)v35 + 81) = 0;
          *((void *)v35 + 82) = (char *)v35 + 648;
          *((void *)v35 + 83) = 0;
          *((void *)v35 + 84) = (char *)v35 + 664;
          *((void *)v35 + 86) = (char *)v35 + 680;
          *((void *)v35 + 85) = 0;
          nw_frame_cache_init((uint64_t)v35 + 696, (uint64_t)v35, 256, 0x40000, 16);
          uint64_t v49 = *((void *)v35 + 60);
          if (v49)
          {
            *(_OWORD *)((char *)v35 + 360) = 0u;
            *(_OWORD *)((char *)v35 + 376) = 0u;
            *(_OWORD *)((char *)v35 + 392) = 0u;
            *(_OWORD *)((char *)v35 + 408) = 0u;
            *(_OWORD *)((char *)v35 + 424) = 0u;
            *(_OWORD *)((char *)v35 + 440) = 0u;
            *(_OWORD *)((char *)v35 + 328) = 0u;
            *(_OWORD *)((char *)v35 + 344) = 0u;
            *((void *)v35 + 37) = nw_http1_on_message_begin;
            *((void *)v35 + 48) = nw_http1_on_message_complete;
            *((void *)v35 + 46) = nw_http1_on_headers_complete;
            *((void *)v35 + 59) = nw_http1_on_reset;
            *((void *)v35 + 40) = nw_http1_on_method;
            *((void *)v35 + 51) = nw_http1_on_method_complete;
            *((void *)v35 + 38) = nw_http1_on_url;
            *((void *)v35 + 49) = nw_http1_on_url_complete;
            *((void *)v35 + 39) = nw_http1_on_status;
            *((void *)v35 + 50) = nw_http1_on_status_complete;
            *((void *)v35 + 42) = nw_http1_on_header_field;
            *((void *)v35 + 53) = nw_http1_on_header_field_complete;
            *((void *)v35 + 43) = nw_http1_on_header_value;
            *((void *)v35 + 54) = nw_http1_on_header_value_complete;
            *((void *)v35 + 47) = nw_http1_on_body;
            *((void *)v35 + 57) = nw_http1_on_chunk_header;
            *((void *)v35 + 58) = nw_http1_on_chunk_complete;
            char v50 = *(unsigned char *)(v49 + 376);
            *(_OWORD *)((char *)v35 + 248) = 0u;
            *(_OWORD *)((char *)v35 + 200) = 0u;
            *(_OWORD *)((char *)v35 + 264) = 0u;
            *(_OWORD *)((char *)v35 + 232) = 0u;
            *(_OWORD *)((char *)v35 + 216) = 0u;
            if (v50) {
              char v51 = 1;
            }
            else {
              char v51 = 2;
            }
            *((unsigned char *)v35 + 272) = v51;
            *((void *)v35 + 35) = 0;
            *((void *)v35 + 36) = (char *)v35 + 296;
            *((_WORD *)v35 + 139) = 16131;
            *((void *)v35 + 31) = v35;
            *((void *)v35 + 32) = 238;
            if ((*((unsigned char *)v35 + 158) & 1) == 0)
            {
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              int v52 = gLogObj;
              if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v53 = *((void *)v35 + 61);
                int v54 = *(_DWORD *)(*((void *)v35 + 60) + 372);
                int v55 = *((_DWORD *)v35 + 215);
                if (v53) {
                  LODWORD(v53) = *(_DWORD *)(v53 + 424);
                }
                *(_DWORD *)buf = 136448258;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_log_parser_version";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = (char *)v35 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v779 = (uint64_t)" ";
                *(_WORD *)int v780 = 1024;
                *(_DWORD *)&v780[2] = v54;
                *(_WORD *)&v780[6] = 1024;
                *(_DWORD *)&v780[8] = v55;
                *(_WORD *)&v780[12] = 1024;
                *(_DWORD *)&v780[14] = v53;
                *(_WORD *)&v780[18] = 1024;
                *(_DWORD *)&v780[20] = 9;
                *(_WORD *)&v780[24] = 1024;
                *(_DWORD *)&v780[26] = 2;
                *(_WORD *)&v780[30] = 1024;
                *(_DWORD *)&v780[32] = 1;
                _os_log_impl(&dword_1830D4000, v52, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using http parser v%u.%u.%u", buf, 0x44u);
              }
            }
            goto LABEL_79;
          }
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
          uint64_t v528 = (char *)_os_log_send_and_compose_impl();
          v773[0] = 16;
          LOBYTE(v754[0]) = 0;
          if (__nwlog_fault(v528, v773, v754))
          {
            if (v773[0] == 17)
            {
              uint64_t v529 = __nwlog_obj();
              os_log_type_t v530 = v773[0];
              if (os_log_type_enabled(v529, (os_log_type_t)v773[0]))
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                int v531 = "%{public}s called with null http1_connection->protocol_http1";
LABEL_1046:
                _os_log_impl(&dword_1830D4000, v529, v530, v531, buf, 0xCu);
              }
            }
            else if (LOBYTE(v754[0]))
            {
              uint64_t v557 = (char *)__nw_create_backtrace_string();
              uint64_t v529 = __nwlog_obj();
              os_log_type_t v530 = v773[0];
              BOOL v558 = os_log_type_enabled(v529, (os_log_type_t)v773[0]);
              if (v557)
              {
                if (v558)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v557;
                  _os_log_impl(&dword_1830D4000, v529, v530, "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v557);
                goto LABEL_1047;
              }
              if (v558)
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                int v531 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
                goto LABEL_1046;
              }
            }
            else
            {
              uint64_t v529 = __nwlog_obj();
              os_log_type_t v530 = v773[0];
              if (os_log_type_enabled(v529, (os_log_type_t)v773[0]))
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                int v531 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
                goto LABEL_1046;
              }
            }
          }
LABEL_1047:
          if (v528) {
            free(v528);
          }
          int v17 = (_OWORD *)(v15 + 64);
LABEL_79:
          int v745 = v17;
          *(void *)buf = 0;
          *(void *)&buf[8] = buf;
          *(void *)&buf[16] = 0x2000000000;
          uint64_t v779 = (uint64_t)v35;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v756 = 0x40000000;
          os_log_type_t v757 = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke_2;
          int v758 = &unk_1E5241178;
          int v759 = (uint64_t *)buf;
          *((void *)v35 + 76) = _Block_copy(&aBlock);
          _Block_object_dispose(buf, 8);
          if ((*((unsigned char *)v35 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              v540 = __nwlog_obj();
              if (os_log_type_enabled(v540, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v541 = *((void *)v35 + 61);
                int v542 = *(_DWORD *)(*((void *)v35 + 60) + 372);
                int v543 = *((_DWORD *)v35 + 215);
                if (v541) {
                  LODWORD(v541) = *(_DWORD *)(v541 + 424);
                }
                *(_DWORD *)buf = 136447746;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = (char *)v35 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v779 = (uint64_t)" ";
                *(_WORD *)int v780 = 1024;
                *(_DWORD *)&v780[2] = v542;
                *(_WORD *)&v780[6] = 1024;
                *(_DWORD *)&v780[8] = v543;
                *(_WORD *)&v780[12] = 1024;
                *(_DWORD *)&v780[14] = v541;
                *(_WORD *)&v780[18] = 2048;
                *(void *)&v780[20] = v35;
                _os_log_impl(&dword_1830D4000, v540, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created %p", buf, 0x3Cu);
              }
            }
          }
          __int16 v56 = (NSObject **)(v35 + 32);
          nw_protocol_replace_input_handler((uint64_t)v32, v15, (uint64_t)v35);
          _OWORD *v35 = *v32;
          __int16 v57 = (void *)*((void *)v35 + 92);
          if (v57)
          {
            if (!*((void *)v35 + 66))
            {
              int v58 = (void **)(v35 + 35);
              id v59 = nw_parameters_copy_context(*((void **)v35 + 92));
              *(void *)buf = nw_path_copy_flow_registration(v59, (uint64_t)v35);
              nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v35 + 35), buf);
              uint64_t v60 = (void *)*((void *)v35 + 70);
              if (v60)
              {
                id v61 = nw_path_flow_registration_copy_endpoint(v60);
                id v62 = nw_path_flow_registration_copy_parameters(*v58);
                *(void *)buf = nw_endpoint_copy_association_with_evaluator(v61, v62, 0);
                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v35 + 33), buf);
                if (*((void *)v35 + 66))
                {
                  *(void *)buf = nw_protocol_instance_stub_create((nw_protocol *)v35);
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v35 + 34), buf);
                  nw_association_register_internal(*((void **)v35 + 66), v57, *((void **)v35 + 68), 0, 0, &__block_literal_global_69);
                  id v63 = nw_association_copy_current_path(*((void **)v35 + 66), v62);
                  if (v63)
                  {
                    int v64 = v63;
                    __int16 v65 = nw_path_copy_for_flow_registration(v63, *v58);
                    if (v65)
                    {
                      int v66 = v65;
                      if (*v56 != v65)
                      {
                        *(void *)buf = os_retain(v65);
                        nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v35 + 32), buf);
                      }
                      if (nw_path_has_flows(v66)) {
                        __int16 v67 = 4096;
                      }
                      else {
                        __int16 v67 = 0;
                      }
                      int v68 = *((_WORD *)v35 + 436) & 0xEFFF | (*((unsigned __int8 *)v35 + 874) << 16);
                      *((_WORD *)v35 + 436) = *((_WORD *)v35 + 436) & 0xEFFF | v67;
                      *((unsigned char *)v35 + 874) = BYTE2(v68);
                      id v69 = nw_parameters_copy_effective_proxy_config(v57);
                      if (v69)
                      {
                        int v70 = v69;
                        if (nw_path_has_proxy_config(v64, v69))
                        {
                          *(void *)buf = os_retain(v70);
                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v35 + 36), buf);
                        }
                        os_release(v70);
                      }
                      os_release(v66);
                    }
                    os_release(v64);
                  }
                }
                if (v62) {
                  os_release(v62);
                }
                int v32 = (_OWORD *)v747;
                if (v61) {
                  os_release(v61);
                }
              }
              if (v59) {
                os_release(v59);
              }
            }
            __int16 v71 = *v56;
            if (*v56)
            {
LABEL_105:
              if (nw_path_uses_interface_type(v71, nw_interface_type_cellular)) {
                *((void *)v35 + 24) = 1000;
              }
            }
LABEL_107:
            uint64_t v72 = *(unsigned int *)(v9 + 336) + 1;
            uint64_t v73 = v72 << 31 >> 31;
            *(_DWORD *)(v9 + 336) = v72;
            if (v73 == v72 && (v73 & 0x8000000000000000) == 0) {
              goto LABEL_259;
            }
            __nwlog_obj();
            uint64_t v74 = *(unsigned int *)(v9 + 336);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->connections_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v779 = 1;
            *(_WORD *)int v780 = 2048;
            *(void *)&v780[2] = v74;
            uint64_t v75 = (char *)_os_log_send_and_compose_impl();
            type[0] = OS_LOG_TYPE_ERROR;
            LOBYTE(aBlock) = 0;
            if (__nwlog_fault(v75, type, &aBlock))
            {
              if (type[0] == OS_LOG_TYPE_FAULT)
              {
                __int16 v76 = __nwlog_obj();
                os_log_type_t v77 = type[0];
                if (os_log_type_enabled(v76, type[0]))
                {
                  uint64_t v78 = *(unsigned int *)(v9 + 336);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->connections_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v78;
                  BOOL v79 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_255:
                  _os_log_impl(&dword_1830D4000, v76, v77, v79, buf, 0x2Au);
                }
              }
              else if ((_BYTE)aBlock)
              {
                uint64_t v114 = (char *)__nw_create_backtrace_string();
                __int16 v76 = __nwlog_obj();
                os_log_type_t v77 = type[0];
                BOOL v115 = os_log_type_enabled(v76, type[0]);
                if (v114)
                {
                  if (v115)
                  {
                    uint64_t v116 = *(unsigned int *)(v9 + 336);
                    *(_DWORD *)buf = 136447234;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->connections_count";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v779 = 1;
                    *(_WORD *)int v780 = 2048;
                    *(void *)&v780[2] = v116;
                    *(_WORD *)&v780[10] = 2082;
                    *(void *)&v780[12] = v114;
                    _os_log_impl(&dword_1830D4000, v76, v77, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                  }
                  free(v114);
                  goto LABEL_256;
                }
                if (v115)
                {
                  uint64_t v175 = *(unsigned int *)(v9 + 336);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->connections_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v175;
                  BOOL v79 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                  goto LABEL_255;
                }
              }
              else
              {
                __int16 v76 = __nwlog_obj();
                os_log_type_t v77 = type[0];
                if (os_log_type_enabled(v76, type[0]))
                {
                  uint64_t v131 = *(unsigned int *)(v9 + 336);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->connections_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v131;
                  BOOL v79 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                  goto LABEL_255;
                }
              }
            }
LABEL_256:
            if (v75) {
              free(v75);
            }
            *(_DWORD *)(v9 + 336) = -1;
            int v32 = (_OWORD *)v747;
LABEL_259:
            uint64_t v176 = *(unsigned int *)(v9 + 360) + 1;
            uint64_t v177 = v176 << 31 >> 31;
            *(_DWORD *)(v9 + 360) = v176;
            if (v177 == v176 && (v177 & 0x8000000000000000) == 0) {
              goto LABEL_278;
            }
            __nwlog_obj();
            uint64_t v178 = *(unsigned int *)(v9 + 360);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->next_connection_log_num";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v779 = 1;
            *(_WORD *)int v780 = 2048;
            *(void *)&v780[2] = v178;
            BOOL v179 = (char *)_os_log_send_and_compose_impl();
            type[0] = OS_LOG_TYPE_ERROR;
            LOBYTE(aBlock) = 0;
            if (__nwlog_fault(v179, type, &aBlock))
            {
              if (type[0] == OS_LOG_TYPE_FAULT)
              {
                int v180 = __nwlog_obj();
                os_log_type_t v181 = type[0];
                if (os_log_type_enabled(v180, type[0]))
                {
                  uint64_t v182 = *(unsigned int *)(v9 + 360);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->next_connection_log_num";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v182;
                  BOOL v183 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_274:
                  _os_log_impl(&dword_1830D4000, v180, v181, v183, buf, 0x2Au);
                }
              }
              else if ((_BYTE)aBlock)
              {
                uint64_t v184 = (char *)__nw_create_backtrace_string();
                int v180 = __nwlog_obj();
                os_log_type_t v181 = type[0];
                BOOL v185 = os_log_type_enabled(v180, type[0]);
                if (v184)
                {
                  if (v185)
                  {
                    uint64_t v186 = *(unsigned int *)(v9 + 360);
                    *(_DWORD *)buf = 136447234;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->next_connection_log_num";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v779 = 1;
                    *(_WORD *)int v780 = 2048;
                    *(void *)&v780[2] = v186;
                    *(_WORD *)&v780[10] = 2082;
                    *(void *)&v780[12] = v184;
                    _os_log_impl(&dword_1830D4000, v180, v181, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                  }
                  free(v184);
                  goto LABEL_275;
                }
                if (v185)
                {
                  uint64_t v188 = *(unsigned int *)(v9 + 360);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->next_connection_log_num";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v188;
                  BOOL v183 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                  goto LABEL_274;
                }
              }
              else
              {
                int v180 = __nwlog_obj();
                os_log_type_t v181 = type[0];
                if (os_log_type_enabled(v180, type[0]))
                {
                  uint64_t v187 = *(unsigned int *)(v9 + 360);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->next_connection_log_num";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v187;
                  BOOL v183 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                  goto LABEL_274;
                }
              }
            }
LABEL_275:
            if (v179) {
              free(v179);
            }
            LODWORD(v176) = -1;
            *(_DWORD *)(v9 + 360) = -1;
            int v32 = (_OWORD *)v747;
LABEL_278:
            *((_DWORD *)v35 + 215) = v176;
            if ((*((unsigned char *)v35 + 158) & 1) == 0)
            {
              if (gLogDatapath)
              {
                uint64_t v544 = __nwlog_obj();
                if (os_log_type_enabled(v544, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v545 = *((void *)v35 + 61);
                  int v546 = *(_DWORD *)(*((void *)v35 + 60) + 372);
                  int v547 = *((_DWORD *)v35 + 215);
                  if (v545) {
                    LODWORD(v545) = *(_DWORD *)(v545 + 424);
                  }
                  int v548 = *(_DWORD *)(v9 + 336);
                  *(_DWORD *)buf = 136448002;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = (char *)v35 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v779 = (uint64_t)" ";
                  *(_WORD *)int v780 = 1024;
                  *(_DWORD *)&v780[2] = v546;
                  *(_WORD *)&v780[6] = 1024;
                  *(_DWORD *)&v780[8] = v547;
                  *(_WORD *)&v780[12] = 1024;
                  *(_DWORD *)&v780[14] = v545;
                  *(_WORD *)&v780[18] = 2048;
                  *(void *)&v780[20] = v35;
                  *(_WORD *)&v780[28] = 1024;
                  *(_DWORD *)&v780[30] = v548;
                  _os_log_impl(&dword_1830D4000, v544, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added connection %p, now have %u connections", buf, 0x42u);
                  int v32 = (_OWORD *)v747;
                }
              }
            }
            if (*(void *)(v15 + 248))
            {
              if (*((void *)v35 + 61))
              {
                __nwlog_obj();
                uint64_t v189 = *((void *)v35 + 61);
                *(_DWORD *)buf = 136446722;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v35;
                *(_WORD *)&buf[22] = 2048;
                uint64_t v779 = v189;
                uint64_t v190 = (char *)_os_log_send_and_compose_impl();
                type[0] = OS_LOG_TYPE_ERROR;
                LOBYTE(aBlock) = 0;
                if (__nwlog_fault(v190, type, &aBlock))
                {
                  if (type[0] == OS_LOG_TYPE_FAULT)
                  {
                    uint64_t v191 = __nwlog_obj();
                    os_log_type_t v192 = type[0];
                    if (os_log_type_enabled(v191, type[0]))
                    {
                      uint64_t v193 = *((void *)v35 + 61);
                      *(_DWORD *)buf = 136446722;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v35;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = v193;
                      os_log_type_t v194 = "%{public}s Connection %p already has a stream (%p)";
LABEL_306:
                      _os_log_impl(&dword_1830D4000, v191, v192, v194, buf, 0x20u);
                    }
                  }
                  else if ((_BYTE)aBlock)
                  {
                    uint64_t v207 = (char *)__nw_create_backtrace_string();
                    uint64_t v191 = __nwlog_obj();
                    os_log_type_t v192 = type[0];
                    BOOL v208 = os_log_type_enabled(v191, type[0]);
                    if (v207)
                    {
                      if (v208)
                      {
                        uint64_t v209 = *((void *)v35 + 61);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v35;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v779 = v209;
                        *(_WORD *)int v780 = 2082;
                        *(void *)&v780[2] = v207;
                        _os_log_impl(&dword_1830D4000, v191, v192, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
                      }
                      free(v207);
                      goto LABEL_307;
                    }
                    if (v208)
                    {
                      uint64_t v211 = *((void *)v35 + 61);
                      *(_DWORD *)buf = 136446722;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v35;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = v211;
                      os_log_type_t v194 = "%{public}s Connection %p already has a stream (%p), no backtrace";
                      goto LABEL_306;
                    }
                  }
                  else
                  {
                    uint64_t v191 = __nwlog_obj();
                    os_log_type_t v192 = type[0];
                    if (os_log_type_enabled(v191, type[0]))
                    {
                      uint64_t v210 = *((void *)v35 + 61);
                      *(_DWORD *)buf = 136446722;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v35;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = v210;
                      os_log_type_t v194 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                      goto LABEL_306;
                    }
                  }
                }
LABEL_307:
                if (v190) {
                  free(v190);
                }
                int v32 = (_OWORD *)v747;
                goto LABEL_310;
              }
              *(void *)(v15 + 256) = v35;
              *((void *)v35 + 61) = v15;
              nw_protocol_set_output_handler(v15, *((void *)v35 + 4));
              nw_protocol_set_input_handler((uint64_t)v35, *(void *)(v15 + 48));
              *(_OWORD *)uint64_t v15 = *v35;
              long long v195 = v745[5];
              long long v197 = v745[2];
              long long v196 = v745[3];
              v35[8] = v745[4];
              v35[9] = v195;
              v35[6] = v197;
              v35[7] = v196;
              long long v198 = v745[1];
              v35[4] = *v745;
              v35[5] = v198;
              nw_http_transaction_metadata_set_connection_metadata(*(void **)(v15 + 352), *((void **)v35 + 96));
              *((_WORD *)v35 + 436) &= 0xFFD7u;
              *((_DWORD *)v35 + 216) = 1;
              if ((*((unsigned char *)v35 + 158) & 1) == 0)
              {
                int v199 = __nwlog_obj();
                if (os_log_type_enabled(v199, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v200 = *((void *)v35 + 61);
                  int v201 = *(_DWORD *)(*((void *)v35 + 60) + 372);
                  int v202 = *((_DWORD *)v35 + 215);
                  if (v200) {
                    LODWORD(v200) = *(_DWORD *)(v200 + 424);
                  }
                  *(_DWORD *)buf = 136447490;
                  *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = (char *)v35 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v779 = (uint64_t)" ";
                  *(_WORD *)int v780 = 1024;
                  *(_DWORD *)&v780[2] = v201;
                  *(_WORD *)&v780[6] = 1024;
                  *(_DWORD *)&v780[8] = v202;
                  *(_WORD *)&v780[12] = 1024;
                  *(_DWORD *)&v780[14] = v200;
                  _os_log_impl(&dword_1830D4000, v199, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                }
              }
              if ((*(unsigned char *)(v15 + 158) & 1) != 0
                || (int v203 = __nwlog_obj(), !os_log_type_enabled(v203, OS_LOG_TYPE_INFO)))
              {
LABEL_310:
                if (*(unsigned char *)(v15 + 158)) {
                  goto LABEL_315;
                }
                goto LABEL_311;
              }
              uint64_t v204 = *(void *)(v15 + 256);
              int v205 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
              if (v204) {
                LODWORD(v204) = *(_DWORD *)(v204 + 860);
              }
              int v206 = *(_DWORD *)(v15 + 424);
              *(_DWORD *)buf = 136448002;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v15 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v779 = (uint64_t)" ";
              *(_WORD *)int v780 = 1024;
              *(_DWORD *)&v780[2] = v205;
              *(_WORD *)&v780[6] = 1024;
              *(_DWORD *)&v780[8] = v204;
              *(_WORD *)&v780[12] = 1024;
              *(_DWORD *)&v780[14] = v206;
              *(_WORD *)&v780[18] = 2048;
              *(void *)&v780[20] = v15;
              *(_WORD *)&v780[28] = 2048;
              *(void *)&v780[30] = v35;
              _os_log_impl(&dword_1830D4000, v203, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
              if (*(unsigned char *)(v15 + 158))
              {
LABEL_315:
                nw_http_transaction_metadata_set_first_on_connection(*(void **)(v15 + 352));
                uint64_t v216 = nw_protocol_copy_info((uint64_t)v32, 255);
                int v217 = (void *)v216;
                if (v216
                  && (uint64_t v218 = *(void *)(v216 + 24), *(void *)(v216 + 16) != v218)
                  && (char v219 = *(void **)(v218 - 8)) != 0)
                {
                  int v220 = os_retain(v219);
                  uint64_t v221 = v220;
                  if (v220 && nw_protocol_metadata_is_tls(v220))
                  {
                    uint64_t v221 = v221;
                    nw_http_connection_metadata_set_sec_metadata(*((void **)v35 + 96), v221);
                    os_release(v221);
                    nw_protocol_connect((uint64_t)v32, (uint64_t)v35);
                    goto LABEL_324;
                  }
                }
                else
                {
                  uint64_t v221 = 0;
                }
                if (v35)
                {
                  nw_protocol_connect((uint64_t)v32, (uint64_t)v35);
                  if (!v221) {
                    goto LABEL_325;
                  }
                  goto LABEL_324;
                }
                __nwlog_obj();
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                uint64_t v398 = (char *)_os_log_send_and_compose_impl();
                type[0] = OS_LOG_TYPE_ERROR;
                LOBYTE(aBlock) = 0;
                if (__nwlog_fault(v398, type, &aBlock))
                {
                  if (type[0] == OS_LOG_TYPE_FAULT)
                  {
                    uint64_t v399 = __nwlog_obj();
                    os_log_type_t v400 = type[0];
                    if (!os_log_type_enabled(v399, type[0])) {
                      goto LABEL_996;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                    int v401 = "%{public}s called with null connection";
LABEL_995:
                    _os_log_impl(&dword_1830D4000, v399, v400, v401, buf, 0xCu);
                    goto LABEL_996;
                  }
                  if (!(_BYTE)aBlock)
                  {
                    uint64_t v399 = __nwlog_obj();
                    os_log_type_t v400 = type[0];
                    if (!os_log_type_enabled(v399, type[0])) {
                      goto LABEL_996;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                    int v401 = "%{public}s called with null connection, backtrace limit exceeded";
                    goto LABEL_995;
                  }
                  v549 = (char *)__nw_create_backtrace_string();
                  uint64_t v399 = __nwlog_obj();
                  os_log_type_t v400 = type[0];
                  BOOL v550 = os_log_type_enabled(v399, type[0]);
                  if (!v549)
                  {
                    if (!v550) {
                      goto LABEL_996;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                    int v401 = "%{public}s called with null connection, no backtrace";
                    goto LABEL_995;
                  }
                  if (v550)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v549;
                    _os_log_impl(&dword_1830D4000, v399, v400, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v549);
                }
LABEL_996:
                if (v398) {
                  free(v398);
                }
                nw_protocol_connect(v747, 0);
                if (!v221)
                {
LABEL_325:
                  if (v217) {
                    os_release(v217);
                  }
                  nw_protocol_set_output_handler(v9, 0);
                  *(_WORD *)(v15 + 428) &= ~8u;
                  int v222 = *(_DWORD *)(v9 + 352);
                  *(_DWORD *)(v9 + 352) = v222 - 1;
                  if (v222) {
                    return 1;
                  }
                  __nwlog_obj();
                  uint64_t v223 = *(unsigned int *)(v9 + 352);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->pending_output_handler_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v223;
                  BOOL v224 = (char *)_os_log_send_and_compose_impl();
                  type[0] = OS_LOG_TYPE_ERROR;
                  LOBYTE(aBlock) = 0;
                  if (__nwlog_fault(v224, type, &aBlock))
                  {
                    if (type[0] == OS_LOG_TYPE_FAULT) {
                      goto LABEL_330;
                    }
                    if (!(_BYTE)aBlock)
                    {
LABEL_586:
                      BOOL v225 = __nwlog_obj();
                      os_log_type_t v226 = type[0];
                      if (!os_log_type_enabled(v225, type[0])) {
                        goto LABEL_591;
                      }
                      uint64_t v378 = *(unsigned int *)(v9 + 352);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->pending_output_handler_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = 1;
                      *(_WORD *)int v780 = 2048;
                      *(void *)&v780[2] = v378;
                      os_log_type_t v228 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
                      goto LABEL_590;
                    }
                    BOOL v229 = (char *)__nw_create_backtrace_string();
                    BOOL v225 = __nwlog_obj();
                    os_log_type_t v226 = type[0];
                    BOOL v230 = os_log_type_enabled(v225, type[0]);
                    if (!v229)
                    {
LABEL_588:
                      if (!v230) {
                        goto LABEL_591;
                      }
                      uint64_t v379 = *(unsigned int *)(v9 + 352);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->pending_output_handler_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = 1;
                      *(_WORD *)int v780 = 2048;
                      *(void *)&v780[2] = v379;
                      os_log_type_t v228 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
                      goto LABEL_590;
                    }
                    if (v230)
                    {
                      uint64_t v231 = *(unsigned int *)(v9 + 352);
                      *(_DWORD *)buf = 136447234;
                      *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->pending_output_handler_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = 1;
                      *(_WORD *)int v780 = 2048;
                      *(void *)&v780[2] = v231;
                      *(_WORD *)&v780[10] = 2082;
                      *(void *)&v780[12] = v229;
                      _os_log_impl(&dword_1830D4000, v225, v226, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                    }
                    free(v229);
                  }
LABEL_591:
                  if (!v224)
                  {
LABEL_593:
                    *(_DWORD *)(v9 + 352) = 0;
                    return 1;
                  }
LABEL_592:
                  free(v224);
                  goto LABEL_593;
                }
LABEL_324:
                os_release(v221);
                goto LABEL_325;
              }
LABEL_311:
              pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
              networkd_settings_init();
              int v212 = gLogObj;
              if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v213 = *(void *)(v15 + 256);
                int v214 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
                if (v213) {
                  LODWORD(v213) = *(_DWORD *)(v213 + 860);
                }
                int v215 = *(_DWORD *)(v15 + 424);
                *(_DWORD *)buf = 136448258;
                *(void *)&uint8_t buf[4] = "nw_http1_start_new_connection_for_stream";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v15 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v779 = (uint64_t)" ";
                *(_WORD *)int v780 = 1024;
                *(_DWORD *)&v780[2] = v214;
                *(_WORD *)&v780[6] = 1024;
                *(_DWORD *)&v780[8] = v213;
                *(_WORD *)&v780[12] = 1024;
                *(_DWORD *)&v780[14] = v215;
                *(_WORD *)&v780[18] = 2048;
                *(void *)&v780[20] = v35;
                *(_WORD *)&v780[28] = 1024;
                *(_DWORD *)&v780[30] = v215;
                *(_WORD *)&v780[34] = 2048;
                *(void *)&v780[36] = v15;
                _os_log_impl(&dword_1830D4000, v212, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created new connection %p for stream %u (%p)", buf, 0x4Cu);
              }
              goto LABEL_315;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
            os_log_type_t v536 = (char *)_os_log_send_and_compose_impl();
            type[0] = OS_LOG_TYPE_ERROR;
            LOBYTE(aBlock) = 0;
            if (!__nwlog_fault(v536, type, &aBlock)) {
              goto LABEL_1060;
            }
            if (type[0] == OS_LOG_TYPE_FAULT)
            {
              uint64_t v537 = __nwlog_obj();
              os_log_type_t v538 = type[0];
              if (!os_log_type_enabled(v537, type[0])) {
                goto LABEL_1060;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              uint64_t v539 = "%{public}s called with null http1_stream->protocol_http1";
            }
            else if ((_BYTE)aBlock)
            {
              uint64_t v561 = (char *)__nw_create_backtrace_string();
              uint64_t v537 = __nwlog_obj();
              os_log_type_t v538 = type[0];
              BOOL v562 = os_log_type_enabled(v537, type[0]);
              if (v561)
              {
                if (v562)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v561;
                  _os_log_impl(&dword_1830D4000, v537, v538, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v561);
                goto LABEL_1060;
              }
              if (!v562)
              {
LABEL_1060:
                if (v536) {
                  free(v536);
                }
                goto LABEL_1042;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              uint64_t v539 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
            }
            else
            {
              uint64_t v537 = __nwlog_obj();
              os_log_type_t v538 = type[0];
              if (!os_log_type_enabled(v537, type[0])) {
                goto LABEL_1060;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              uint64_t v539 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
            }
            _os_log_impl(&dword_1830D4000, v537, v538, v539, buf, 0xCu);
            goto LABEL_1060;
          }
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
          os_log_type_t v532 = (char *)_os_log_send_and_compose_impl();
          type[0] = OS_LOG_TYPE_ERROR;
          LOBYTE(aBlock) = 0;
          if (__nwlog_fault(v532, type, &aBlock))
          {
            if (type[0] == OS_LOG_TYPE_FAULT)
            {
              uint64_t v533 = __nwlog_obj();
              os_log_type_t v534 = type[0];
              if (!os_log_type_enabled(v533, type[0])) {
                goto LABEL_1053;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              uint64_t v535 = "%{public}s called with null parameters";
LABEL_1052:
              _os_log_impl(&dword_1830D4000, v533, v534, v535, buf, 0xCu);
              goto LABEL_1053;
            }
            if (!(_BYTE)aBlock)
            {
              uint64_t v533 = __nwlog_obj();
              os_log_type_t v534 = type[0];
              if (!os_log_type_enabled(v533, type[0])) {
                goto LABEL_1053;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              uint64_t v535 = "%{public}s called with null parameters, backtrace limit exceeded";
              goto LABEL_1052;
            }
            uint64_t v559 = (char *)__nw_create_backtrace_string();
            uint64_t v533 = __nwlog_obj();
            os_log_type_t v534 = type[0];
            BOOL v560 = os_log_type_enabled(v533, type[0]);
            if (!v559)
            {
              if (!v560) {
                goto LABEL_1053;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              uint64_t v535 = "%{public}s called with null parameters, no backtrace";
              goto LABEL_1052;
            }
            if (v560)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v559;
              _os_log_impl(&dword_1830D4000, v533, v534, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v559);
          }
LABEL_1053:
          if (v532) {
            free(v532);
          }
          int v32 = (_OWORD *)v747;
          __int16 v71 = *v56;
          if (*v56) {
            goto LABEL_105;
          }
          goto LABEL_107;
        }
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
        id v514 = (char *)_os_log_send_and_compose_impl();
        v773[0] = 16;
        LOBYTE(v754[0]) = 0;
        if (__nwlog_fault(v514, v773, v754))
        {
          if (v773[0] == 17)
          {
            id v515 = __nwlog_obj();
            os_log_type_t v516 = v773[0];
            if (!os_log_type_enabled(v515, (os_log_type_t)v773[0])) {
              goto LABEL_1007;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            int v517 = "%{public}s called with null parameters";
            goto LABEL_1006;
          }
          if (!LOBYTE(v754[0]))
          {
            id v515 = __nwlog_obj();
            os_log_type_t v516 = v773[0];
            if (!os_log_type_enabled(v515, (os_log_type_t)v773[0])) {
              goto LABEL_1007;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            int v517 = "%{public}s called with null parameters, backtrace limit exceeded";
            goto LABEL_1006;
          }
          uint64_t v553 = (char *)__nw_create_backtrace_string();
          id v515 = __nwlog_obj();
          os_log_type_t v516 = v773[0];
          BOOL v556 = os_log_type_enabled(v515, (os_log_type_t)v773[0]);
          if (!v553)
          {
            if (!v556) {
              goto LABEL_1007;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            int v517 = "%{public}s called with null parameters, no backtrace";
            goto LABEL_1006;
          }
          if (v556)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v553;
            uint64_t v555 = "%{public}s called with null parameters, dumping backtrace:%{public}s";
            goto LABEL_934;
          }
          goto LABEL_935;
        }
LABEL_1007:
        if (!v514) {
          goto LABEL_1009;
        }
        goto LABEL_1008;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      id v514 = (char *)_os_log_send_and_compose_impl();
      v773[0] = 16;
      LOBYTE(v754[0]) = 0;
      if (!__nwlog_fault(v514, v773, v754)) {
        goto LABEL_1007;
      }
      if (v773[0] != 17)
      {
        if (!LOBYTE(v754[0]))
        {
          id v515 = __nwlog_obj();
          os_log_type_t v516 = v773[0];
          if (!os_log_type_enabled(v515, (os_log_type_t)v773[0])) {
            goto LABEL_1007;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          int v517 = "%{public}s called with null endpoint, backtrace limit exceeded";
          goto LABEL_1006;
        }
        uint64_t v553 = (char *)__nw_create_backtrace_string();
        id v515 = __nwlog_obj();
        os_log_type_t v516 = v773[0];
        BOOL v554 = os_log_type_enabled(v515, (os_log_type_t)v773[0]);
        if (!v553)
        {
          if (!v554) {
            goto LABEL_1007;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          int v517 = "%{public}s called with null endpoint, no backtrace";
          goto LABEL_1006;
        }
        if (v554)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v553;
          uint64_t v555 = "%{public}s called with null endpoint, dumping backtrace:%{public}s";
LABEL_934:
          _os_log_impl(&dword_1830D4000, v515, v516, v555, buf, 0x16u);
        }
LABEL_935:
        free(v553);
        if (!v514)
        {
LABEL_1009:
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
          int v588 = (char *)_os_log_send_and_compose_impl();
          type[0] = OS_LOG_TYPE_ERROR;
          LOBYTE(aBlock) = 0;
          if (!__nwlog_fault(v588, type, &aBlock)) {
            goto LABEL_1023;
          }
          if (type[0] == OS_LOG_TYPE_FAULT)
          {
            int v589 = __nwlog_obj();
            os_log_type_t v590 = type[0];
            if (!os_log_type_enabled(v589, type[0])) {
              goto LABEL_1023;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            BOOL v591 = "%{public}s called with null http1_connection";
          }
          else if ((_BYTE)aBlock)
          {
            uint64_t v592 = (char *)__nw_create_backtrace_string();
            int v589 = __nwlog_obj();
            os_log_type_t v590 = type[0];
            BOOL v593 = os_log_type_enabled(v589, type[0]);
            if (v592)
            {
              if (v593)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v592;
                _os_log_impl(&dword_1830D4000, v589, v590, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v592);
LABEL_1023:
              if (v588) {
                free(v588);
              }
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              uint64_t v594 = (char *)_os_log_send_and_compose_impl();
              type[0] = OS_LOG_TYPE_ERROR;
              LOBYTE(aBlock) = 0;
              if (!__nwlog_fault(v594, type, &aBlock)) {
                goto LABEL_1039;
              }
              if (type[0] == OS_LOG_TYPE_FAULT)
              {
                int v595 = __nwlog_obj();
                os_log_type_t v596 = type[0];
                if (os_log_type_enabled(v595, type[0]))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v597 = "%{public}s called with null http1_connection";
LABEL_1038:
                  _os_log_impl(&dword_1830D4000, v595, v596, v597, buf, 0xCu);
                }
              }
              else if ((_BYTE)aBlock)
              {
                int v598 = (char *)__nw_create_backtrace_string();
                int v595 = __nwlog_obj();
                os_log_type_t v596 = type[0];
                BOOL v599 = os_log_type_enabled(v595, type[0]);
                if (v598)
                {
                  if (v599)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v598;
                    _os_log_impl(&dword_1830D4000, v595, v596, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v598);
                  goto LABEL_1039;
                }
                if (v599)
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v597 = "%{public}s called with null http1_connection, no backtrace";
                  goto LABEL_1038;
                }
              }
              else
              {
                int v595 = __nwlog_obj();
                os_log_type_t v596 = type[0];
                if (os_log_type_enabled(v595, type[0]))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v597 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                  goto LABEL_1038;
                }
              }
LABEL_1039:
              if (v594) {
                free(v594);
              }
              int v35 = 0;
LABEL_1042:
              int v32 = (_OWORD *)v747;
              if (*(unsigned char *)(v15 + 158)) {
                goto LABEL_315;
              }
              goto LABEL_311;
            }
            if (!v593) {
              goto LABEL_1023;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            BOOL v591 = "%{public}s called with null http1_connection, no backtrace";
          }
          else
          {
            int v589 = __nwlog_obj();
            os_log_type_t v590 = type[0];
            if (!os_log_type_enabled(v589, type[0])) {
              goto LABEL_1023;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            BOOL v591 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          }
          _os_log_impl(&dword_1830D4000, v589, v590, v591, buf, 0xCu);
          goto LABEL_1023;
        }
LABEL_1008:
        free(v514);
        goto LABEL_1009;
      }
      id v515 = __nwlog_obj();
      os_log_type_t v516 = v773[0];
      if (!os_log_type_enabled(v515, (os_log_type_t)v773[0])) {
        goto LABEL_1007;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      int v517 = "%{public}s called with null endpoint";
    }
    else
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      id v514 = (char *)_os_log_send_and_compose_impl();
      v773[0] = 16;
      LOBYTE(v754[0]) = 0;
      if (!__nwlog_fault(v514, v773, v754)) {
        goto LABEL_1007;
      }
      if (v773[0] != 17)
      {
        if (!LOBYTE(v754[0]))
        {
          id v515 = __nwlog_obj();
          os_log_type_t v516 = v773[0];
          if (!os_log_type_enabled(v515, (os_log_type_t)v773[0])) {
            goto LABEL_1007;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          int v517 = "%{public}s called with null output_handler, backtrace limit exceeded";
          goto LABEL_1006;
        }
        BOOL v551 = (char *)__nw_create_backtrace_string();
        id v515 = __nwlog_obj();
        os_log_type_t v516 = v773[0];
        BOOL v552 = os_log_type_enabled(v515, (os_log_type_t)v773[0]);
        if (!v551)
        {
          if (!v552) {
            goto LABEL_1007;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          int v517 = "%{public}s called with null output_handler, no backtrace";
          goto LABEL_1006;
        }
        if (v552)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v551;
          _os_log_impl(&dword_1830D4000, v515, v516, "%{public}s called with null output_handler, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v551);
        goto LABEL_1007;
      }
      id v515 = __nwlog_obj();
      os_log_type_t v516 = v773[0];
      if (!os_log_type_enabled(v515, (os_log_type_t)v773[0])) {
        goto LABEL_1007;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      int v517 = "%{public}s called with null output_handler";
    }
LABEL_1006:
    _os_log_impl(&dword_1830D4000, v515, v516, v517, buf, 0xCu);
    goto LABEL_1007;
  }
  if ((v16 & 4) != 0)
  {
    if ((*(unsigned char *)(v15 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        os_log_type_t v389 = __nwlog_obj();
        if (os_log_type_enabled(v389, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v390 = *(void *)(v15 + 256);
          int v391 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
          if (v390) {
            LODWORD(v390) = *(_DWORD *)(v390 + 860);
          }
          int v392 = *(_DWORD *)(v15 + 424);
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v15 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v779 = (uint64_t)" ";
          *(_WORD *)int v780 = 1024;
          *(_DWORD *)&v780[2] = v391;
          *(_WORD *)&v780[6] = 1024;
          *(_DWORD *)&v780[8] = v390;
          *(_WORD *)&v780[12] = 1024;
          *(_DWORD *)&v780[14] = v392;
          _os_log_impl(&dword_1830D4000, v389, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> new flow stream already attached, sending connected immediately", buf, 0x32u);
        }
      }
    }
    *(_WORD *)(v15 + 428) = *(_WORD *)(v15 + 428) & 0xBFFB | 0x4000;
    unint64_t v30 = *(void **)(v15 + 352);
    v751[0] = MEMORY[0x1E4F143A8];
    v751[1] = 0x40000000;
    v751[2] = ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke;
    v751[3] = &__block_descriptor_tmp_31_41502;
    v751[4] = v15;
    uint64_t v31 = v751;
    goto LABEL_47;
  }
  uint64_t v18 = *(void *)(v15 + 256);
  if (v18)
  {
    if ((*(unsigned char *)(v15 + 158) & 1) != 0 || !gLogDatapath) {
      goto LABEL_29;
    }
    uint64_t v394 = __nwlog_obj();
    BOOL v395 = os_log_type_enabled(v394, OS_LOG_TYPE_DEBUG);
    uint64_t v18 = *(void *)(v15 + 256);
    if (v395)
    {
      int v396 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
      if (v18) {
        int v397 = *(_DWORD *)(v18 + 860);
      }
      else {
        int v397 = 0;
      }
      int v579 = *(_DWORD *)(v15 + 424);
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v15 + 74;
      *(_WORD *)&buf[22] = 2080;
      uint64_t v779 = (uint64_t)" ";
      *(_WORD *)int v780 = 1024;
      *(_DWORD *)&v780[2] = v396;
      *(_WORD *)&v780[6] = 1024;
      *(_DWORD *)&v780[8] = v397;
      *(_WORD *)&v780[12] = 1024;
      *(_DWORD *)&v780[14] = v579;
      _os_log_impl(&dword_1830D4000, v394, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> already associated with connection, forwarding connect", buf, 0x32u);
      uint64_t v18 = *(void *)(v15 + 256);
    }
    if (v18) {
LABEL_29:
    }
      nw_protocol_connect(*(void *)(v18 + 32), v18);
    else {
      nw_protocol_connect(0, 0);
    }
    return 1;
  }
  int v746 = (_OWORD *)(v15 + 64);
  uint64_t v80 = *(void *)(v9 + 208);
  if (v80)
  {
    uint64_t v81 = 0;
    a3.n128_u64[0] = 136447234;
    do
    {
      uint64_t v82 = v80;
      uint64_t v80 = *(void *)(v80 + 592);
      if ((*(_WORD *)(v82 + 872) & 0x800) == 0)
      {
        if ((*(unsigned char *)(v9 + 158) & 1) != 0 || !*((unsigned char *)p_cache + 3665))
        {
          uint64_t v81 = v82;
        }
        else
        {
          __n128 v742 = a3;
          uint64_t v83 = __nwlog_obj();
          if (os_log_type_enabled(v83, OS_LOG_TYPE_DEBUG))
          {
            int v84 = *(_DWORD *)(v9 + 372);
            *(_DWORD *)buf = v742.n128_u32[0];
            *(void *)&uint8_t buf[4] = "nw_http1_get_next_idle_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v9 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v779 = (uint64_t)" ";
            *(_WORD *)int v780 = 1024;
            *(_DWORD *)&v780[2] = v84;
            *(_WORD *)&v780[6] = 2048;
            *(void *)&v780[8] = v82;
            _os_log_impl(&dword_1830D4000, v83, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> found idle connection connection %p", buf, 0x30u);
            a3 = v742;
            uint64_t v81 = v82;
            p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
          }
          else
          {
            uint64_t v81 = v82;
            p_cache = (void **)(NWConcrete_nw_resolution_report + 16);
            a3 = v742;
          }
        }
      }
    }
    while (v80);
    if (v81)
    {
      if ((*(unsigned char *)(v81 + 158) & 1) == 0)
      {
        if (*((unsigned char *)p_cache + 3665))
        {
          uint64_t v573 = p_cache;
          unsigned __int32 v744 = a3.n128_u32[0];
          int v574 = __nwlog_obj();
          BOOL v575 = os_log_type_enabled(v574, OS_LOG_TYPE_DEBUG);
          a3.n128_u32[0] = v744;
          p_cache = v573;
          if (v575)
          {
            uint64_t v576 = *(void *)(v81 + 488);
            int v577 = *(_DWORD *)(*(void *)(v81 + 480) + 372);
            int v578 = *(_DWORD *)(v81 + 860);
            if (v576) {
              LODWORD(v576) = *(_DWORD *)(v576 + 424);
            }
            *(_DWORD *)buf = 136447746;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v81 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v779 = (uint64_t)" ";
            *(_WORD *)int v780 = 1024;
            *(_DWORD *)&v780[2] = v577;
            *(_WORD *)&v780[6] = 1024;
            *(_DWORD *)&v780[8] = v578;
            *(_WORD *)&v780[12] = 1024;
            *(_DWORD *)&v780[14] = v576;
            *(_WORD *)&v780[18] = 2048;
            *(void *)&v780[20] = v81;
            _os_log_impl(&dword_1830D4000, v574, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for connection %p", buf, 0x3Cu);
            p_cache = v573;
            a3.n128_u32[0] = v744;
          }
        }
      }
      long long v89 = (_WORD *)(v81 + 872);
      if (((*(unsigned __int16 *)(v81 + 872) | (*(unsigned __int8 *)(v81 + 874) << 16)) & 0x80000) == 0)
      {
        __nwlog_obj();
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v81;
        long long v90 = (char *)_os_log_send_and_compose_impl();
        type[0] = OS_LOG_TYPE_ERROR;
        LOBYTE(aBlock) = 0;
        if (!__nwlog_fault(v90, type, &aBlock)) {
          goto LABEL_369;
        }
        if (type[0] == OS_LOG_TYPE_FAULT)
        {
          long long v91 = __nwlog_obj();
          os_log_type_t v92 = type[0];
          if (!os_log_type_enabled(v91, type[0])) {
            goto LABEL_369;
          }
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v81;
          BOOL v93 = "%{public}s connection %p not in idle list, cannot remove";
        }
        else if ((_BYTE)aBlock)
        {
          os_log_type_t v166 = (char *)__nw_create_backtrace_string();
          long long v91 = __nwlog_obj();
          os_log_type_t v92 = type[0];
          BOOL v167 = os_log_type_enabled(v91, type[0]);
          if (v166)
          {
            if (v167)
            {
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v81;
              *(_WORD *)&buf[22] = 2082;
              uint64_t v779 = (uint64_t)v166;
              _os_log_impl(&dword_1830D4000, v91, v92, "%{public}s connection %p not in idle list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
            }
            free(v166);
            goto LABEL_369;
          }
          if (!v167)
          {
LABEL_369:
            if (v90) {
              free(v90);
            }
            goto LABEL_439;
          }
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v81;
          BOOL v93 = "%{public}s connection %p not in idle list, cannot remove, no backtrace";
        }
        else
        {
          long long v91 = __nwlog_obj();
          os_log_type_t v92 = type[0];
          if (!os_log_type_enabled(v91, type[0])) {
            goto LABEL_369;
          }
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v81;
          BOOL v93 = "%{public}s connection %p not in idle list, cannot remove, backtrace limit exceeded";
        }
        _os_log_impl(&dword_1830D4000, v91, v92, v93, buf, 0x16u);
        goto LABEL_369;
      }
      uint64_t v126 = p_cache;
      uint64_t v127 = *(void *)(v81 + 592);
      uint64_t v128 = *(void **)(v81 + 600);
      if (v127)
      {
        *(void *)(v127 + 600) = v128;
        uint64_t v128 = *(void **)(v81 + 600);
      }
      else
      {
        *(void *)(v9 + 216) = v128;
      }
      void *v128 = v127;
      *(void *)(v81 + 592) = 0;
      *(void *)(v81 + 600) = 0;
      int v168 = *(_DWORD *)(v9 + 340);
      *(_DWORD *)(v9 + 340) = v168 - 1;
      if (v168)
      {
LABEL_433:
        unsigned int v285 = (*(unsigned __int16 *)(v81 + 872) | (*(unsigned __int8 *)(v81 + 874) << 16)) & 0xFFF7FFFF;
        _WORD *v89 = *v89;
        *(unsigned char *)(v81 + 874) = BYTE2(v285);
        os_log_type_t v286 = v126;
        if ((*(unsigned char *)(v81 + 158) & 1) == 0)
        {
          if (*((unsigned char *)v126 + 3665))
          {
            long long v580 = __nwlog_obj();
            BOOL v581 = os_log_type_enabled(v580, OS_LOG_TYPE_DEBUG);
            os_log_type_t v286 = v126;
            if (v581)
            {
              uint64_t v582 = *(void *)(v81 + 488);
              int v583 = *(_DWORD *)(*(void *)(v81 + 480) + 372);
              int v584 = *(_DWORD *)(v81 + 860);
              if (v582) {
                LODWORD(v582) = *(_DWORD *)(v582 + 424);
              }
              int v585 = *(_DWORD *)(v9 + 340);
              *(_DWORD *)buf = 136448002;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v81 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v779 = (uint64_t)" ";
              *(_WORD *)int v780 = 1024;
              *(_DWORD *)&v780[2] = v583;
              *(_WORD *)&v780[6] = 1024;
              *(_DWORD *)&v780[8] = v584;
              *(_WORD *)&v780[12] = 1024;
              *(_DWORD *)&v780[14] = v582;
              *(_WORD *)&v780[18] = 2048;
              *(void *)&v780[20] = v81;
              *(_WORD *)&v780[28] = 1024;
              *(_DWORD *)&v780[30] = v585;
              _os_log_impl(&dword_1830D4000, v580, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed idle connection %p, now have %u idle connections", buf, 0x42u);
              os_log_type_t v286 = v126;
            }
          }
        }
        if (*(void *)(v81 + 784))
        {
          if ((*(unsigned char *)(v81 + 158) & 1) == 0)
          {
            if (*((unsigned char *)v286 + 3665))
            {
              uint64_t v600 = __nwlog_obj();
              if (os_log_type_enabled(v600, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v601 = *(void *)(v81 + 488);
                int v602 = *(_DWORD *)(*(void *)(v81 + 480) + 372);
                int v603 = *(_DWORD *)(v81 + 860);
                if (v601) {
                  LODWORD(v601) = *(_DWORD *)(v601 + 424);
                }
                *(_DWORD *)buf = 136447746;
                *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v81 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v779 = (uint64_t)" ";
                *(_WORD *)int v780 = 1024;
                *(_DWORD *)&v780[2] = v602;
                *(_WORD *)&v780[6] = 1024;
                *(_DWORD *)&v780[8] = v603;
                *(_WORD *)&v780[12] = 1024;
                *(_DWORD *)&v780[14] = v601;
                *(_WORD *)&v780[18] = 2048;
                *(void *)&v780[20] = v81;
                _os_log_impl(&dword_1830D4000, v600, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> deactivating destroy timer for connection %p", buf, 0x3Cu);
              }
            }
          }
          nw_queue_cancel_source(*(void *)(v81 + 784));
          *(void *)(v81 + 784) = 0;
        }
LABEL_439:
        if (*(void *)(v15 + 248))
        {
          if (!*(void *)(v81 + 488))
          {
            *(void *)(v15 + 256) = v81;
            *(void *)(v81 + 488) = v15;
            nw_protocol_set_output_handler(v15, *(void *)(v81 + 32));
            nw_protocol_set_input_handler(v81, *(void *)(v15 + 48));
            *(_OWORD *)uint64_t v15 = *(_OWORD *)v81;
            long long v293 = *(_OWORD *)(v15 + 144);
            long long v295 = *(_OWORD *)(v15 + 96);
            long long v294 = *(_OWORD *)(v15 + 112);
            *(_OWORD *)(v81 + 128) = *(_OWORD *)(v15 + 128);
            *(_OWORD *)(v81 + 144) = v293;
            *(_OWORD *)(v81 + 96) = v295;
            *(_OWORD *)(v81 + 112) = v294;
            long long v296 = *(_OWORD *)(v15 + 80);
            *(_OWORD *)(v81 + 64) = *v746;
            *(_OWORD *)(v81 + 80) = v296;
            nw_http_transaction_metadata_set_connection_metadata(*(void **)(v15 + 352), *(void **)(v81 + 768));
            *v89 &= 0xFFD7u;
            *(_DWORD *)(v81 + 864) = 1;
            if ((*(unsigned char *)(v81 + 158) & 1) == 0)
            {
              uint64_t v297 = __nwlog_obj();
              if (os_log_type_enabled(v297, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v298 = *(void *)(v81 + 488);
                int v299 = *(_DWORD *)(*(void *)(v81 + 480) + 372);
                int v300 = *(_DWORD *)(v81 + 860);
                if (v298) {
                  LODWORD(v298) = *(_DWORD *)(v298 + 424);
                }
                *(_DWORD *)buf = 136447490;
                *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v81 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v779 = (uint64_t)" ";
                *(_WORD *)int v780 = 1024;
                *(_DWORD *)&v780[2] = v299;
                *(_WORD *)&v780[6] = 1024;
                *(_DWORD *)&v780[8] = v300;
                *(_WORD *)&v780[12] = 1024;
                *(_DWORD *)&v780[14] = v298;
                _os_log_impl(&dword_1830D4000, v297, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
              }
            }
            if ((*(unsigned char *)(v15 + 158) & 1) == 0)
            {
              int v301 = __nwlog_obj();
              if (os_log_type_enabled(v301, OS_LOG_TYPE_INFO))
              {
                uint64_t v302 = *(void *)(v15 + 256);
                int v303 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
                if (v302) {
                  LODWORD(v302) = *(_DWORD *)(v302 + 860);
                }
                int v304 = *(_DWORD *)(v15 + 424);
                *(_DWORD *)buf = 136448002;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v15 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v779 = (uint64_t)" ";
                *(_WORD *)int v780 = 1024;
                *(_DWORD *)&v780[2] = v303;
                *(_WORD *)&v780[6] = 1024;
                *(_DWORD *)&v780[8] = v302;
                *(_WORD *)&v780[12] = 1024;
                *(_DWORD *)&v780[14] = v304;
                *(_WORD *)&v780[18] = 2048;
                *(void *)&v780[20] = v15;
                *(_WORD *)&v780[28] = 2048;
                *(void *)&v780[30] = v81;
                _os_log_impl(&dword_1830D4000, v301, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
              }
            }
            goto LABEL_469;
          }
          __nwlog_obj();
          uint64_t v287 = *(void *)(v81 + 488);
          *(_DWORD *)buf = 136446722;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v81;
          *(_WORD *)&buf[22] = 2048;
          uint64_t v779 = v287;
          uint64_t v288 = (char *)_os_log_send_and_compose_impl();
          type[0] = OS_LOG_TYPE_ERROR;
          LOBYTE(aBlock) = 0;
          if (__nwlog_fault(v288, type, &aBlock))
          {
            if (type[0] == OS_LOG_TYPE_FAULT)
            {
              uint64_t v289 = __nwlog_obj();
              os_log_type_t v290 = type[0];
              if (!os_log_type_enabled(v289, type[0])) {
                goto LABEL_467;
              }
              uint64_t v291 = *(void *)(v81 + 488);
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v81;
              *(_WORD *)&buf[22] = 2048;
              uint64_t v779 = v291;
              int v292 = "%{public}s Connection %p already has a stream (%p)";
              goto LABEL_465;
            }
            if (!(_BYTE)aBlock)
            {
              uint64_t v289 = __nwlog_obj();
              os_log_type_t v290 = type[0];
              if (!os_log_type_enabled(v289, type[0])) {
                goto LABEL_467;
              }
              uint64_t v308 = *(void *)(v81 + 488);
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v81;
              *(_WORD *)&buf[22] = 2048;
              uint64_t v779 = v308;
              int v292 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
              goto LABEL_465;
            }
            uint64_t v305 = (char *)__nw_create_backtrace_string();
            uint64_t v289 = __nwlog_obj();
            os_log_type_t v290 = type[0];
            BOOL v306 = os_log_type_enabled(v289, type[0]);
            if (v305)
            {
              if (v306)
              {
                uint64_t v307 = *(void *)(v81 + 488);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v81;
                *(_WORD *)&buf[22] = 2048;
                uint64_t v779 = v307;
                *(_WORD *)int v780 = 2082;
                *(void *)&v780[2] = v305;
                _os_log_impl(&dword_1830D4000, v289, v290, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
              }
              free(v305);
              if (!v288) {
                goto LABEL_469;
              }
              goto LABEL_468;
            }
            if (v306)
            {
              uint64_t v309 = *(void *)(v81 + 488);
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = v81;
              *(_WORD *)&buf[22] = 2048;
              uint64_t v779 = v309;
              int v292 = "%{public}s Connection %p already has a stream (%p), no backtrace";
LABEL_465:
              uint64_t v310 = v289;
              os_log_type_t v311 = v290;
              uint32_t v312 = 32;
LABEL_466:
              _os_log_impl(&dword_1830D4000, v310, v311, v292, buf, v312);
            }
          }
LABEL_467:
          if (!v288)
          {
LABEL_469:
            *(_WORD *)(v15 + 428) |= 0x4000u;
            unint64_t v30 = *(void **)(v15 + 352);
            v750[0] = MEMORY[0x1E4F143A8];
            v750[1] = 0x40000000;
            v750[2] = ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_32;
            v750[3] = &__block_descriptor_tmp_41_41504;
            v750[4] = v15;
            uint64_t v31 = v750;
LABEL_47:
            nw_http_transaction_metadata_set_event_handler(v30, v31);
            nw_protocol_connected(*(void **)(v15 + 48), v15);
            return 1;
          }
LABEL_468:
          free(v288);
          goto LABEL_469;
        }
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
        uint64_t v288 = (char *)_os_log_send_and_compose_impl();
        type[0] = OS_LOG_TYPE_ERROR;
        LOBYTE(aBlock) = 0;
        if (!__nwlog_fault(v288, type, &aBlock)) {
          goto LABEL_467;
        }
        if (type[0] == OS_LOG_TYPE_FAULT)
        {
          uint64_t v571 = __nwlog_obj();
          os_log_type_t v572 = type[0];
          if (!os_log_type_enabled(v571, type[0])) {
            goto LABEL_467;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
          int v292 = "%{public}s called with null http1_stream->protocol_http1";
        }
        else if ((_BYTE)aBlock)
        {
          int v586 = (char *)__nw_create_backtrace_string();
          uint64_t v571 = __nwlog_obj();
          os_log_type_t v572 = type[0];
          BOOL v587 = os_log_type_enabled(v571, type[0]);
          if (v586)
          {
            if (v587)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v586;
              _os_log_impl(&dword_1830D4000, v571, v572, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v586);
            goto LABEL_467;
          }
          if (!v587) {
            goto LABEL_467;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
          int v292 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
        }
        else
        {
          uint64_t v571 = __nwlog_obj();
          os_log_type_t v572 = type[0];
          if (!os_log_type_enabled(v571, type[0])) {
            goto LABEL_467;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
          int v292 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
        }
        uint64_t v310 = v571;
        os_log_type_t v311 = v572;
        uint32_t v312 = 12;
        goto LABEL_466;
      }
      unsigned __int32 v743 = a3.n128_u32[0];
      __nwlog_obj();
      uint64_t v169 = *(unsigned int *)(v9 + 340);
      *(_DWORD *)buf = 136446978;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = "http1->idle_connections_count";
      *(_WORD *)&buf[22] = 2048;
      uint64_t v779 = 1;
      *(_WORD *)int v780 = 2048;
      *(void *)&v780[2] = v169;
      int v170 = (char *)_os_log_send_and_compose_impl();
      type[0] = OS_LOG_TYPE_ERROR;
      LOBYTE(aBlock) = 0;
      if (__nwlog_fault(v170, type, &aBlock))
      {
        if (type[0] == OS_LOG_TYPE_FAULT)
        {
          int v171 = __nwlog_obj();
          os_log_type_t v172 = type[0];
          if (os_log_type_enabled(v171, type[0]))
          {
            uint64_t v173 = *(unsigned int *)(v9 + 340);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->idle_connections_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v779 = 1;
            *(_WORD *)int v780 = 2048;
            *(void *)&v780[2] = v173;
            uint64_t v174 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_429:
            _os_log_impl(&dword_1830D4000, v171, v172, v174, buf, 0x2Au);
          }
        }
        else if ((_BYTE)aBlock)
        {
          uint64_t v244 = (char *)__nw_create_backtrace_string();
          int v171 = __nwlog_obj();
          os_log_type_t v172 = type[0];
          BOOL v245 = os_log_type_enabled(v171, type[0]);
          if (v244)
          {
            if (v245)
            {
              uint64_t v246 = *(unsigned int *)(v9 + 340);
              *(_DWORD *)buf = v743;
              *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = "http1->idle_connections_count";
              *(_WORD *)&buf[22] = 2048;
              uint64_t v779 = 1;
              *(_WORD *)int v780 = 2048;
              *(void *)&v780[2] = v246;
              *(_WORD *)&v780[10] = 2082;
              *(void *)&v780[12] = v244;
              _os_log_impl(&dword_1830D4000, v171, v172, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
            }
            free(v244);
            goto LABEL_430;
          }
          if (v245)
          {
            uint64_t v284 = *(unsigned int *)(v9 + 340);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->idle_connections_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v779 = 1;
            *(_WORD *)int v780 = 2048;
            *(void *)&v780[2] = v284;
            uint64_t v174 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
            goto LABEL_429;
          }
        }
        else
        {
          int v171 = __nwlog_obj();
          os_log_type_t v172 = type[0];
          if (os_log_type_enabled(v171, type[0]))
          {
            uint64_t v274 = *(unsigned int *)(v9 + 340);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_idle_connection";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->idle_connections_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v779 = 1;
            *(_WORD *)int v780 = 2048;
            *(void *)&v780[2] = v274;
            uint64_t v174 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
            goto LABEL_429;
          }
        }
      }
LABEL_430:
      if (v170) {
        free(v170);
      }
      *(_DWORD *)(v9 + 340) = 0;
      goto LABEL_433;
    }
  }
  if ((*(unsigned char *)(v9 + 158) & 1) == 0)
  {
    if (*((unsigned char *)p_cache + 3665))
    {
      BOOL v563 = p_cache;
      os_log_type_t v564 = __nwlog_obj();
      BOOL v565 = os_log_type_enabled(v564, OS_LOG_TYPE_DEBUG);
      p_cache = v563;
      if (v565)
      {
        int v566 = *(_DWORD *)(v9 + 372);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_get_next_idle_connection";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v9 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v779 = (uint64_t)" ";
        *(_WORD *)int v780 = 1024;
        *(_DWORD *)&v780[2] = v566;
        _os_log_impl(&dword_1830D4000, v564, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> no idle connections", buf, 0x26u);
        p_cache = v563;
      }
    }
  }
  if (*(void *)(v15 + 256))
  {
    if ((*(unsigned char *)(v15 + 158) & 1) == 0)
    {
      uint64_t v94 = __nwlog_obj();
      if (os_log_type_enabled(v94, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v95 = *(void *)(v15 + 256);
        int v96 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
        if (v95) {
          LODWORD(v95) = *(_DWORD *)(v95 + 860);
        }
        int v97 = *(_DWORD *)(v15 + 424);
        *(_DWORD *)buf = 136447490;
        *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v15 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v779 = (uint64_t)" ";
        *(_WORD *)int v780 = 1024;
        *(_DWORD *)&v780[2] = v96;
        *(_WORD *)&v780[6] = 1024;
        *(_DWORD *)&v780[8] = v95;
        *(_WORD *)&v780[12] = 1024;
        *(_DWORD *)&v780[14] = v97;
        uint64_t v98 = "%{public}s %{public}s%s<i%u:c%u:s%u> stream already has current connection, ignoring";
        int v99 = v94;
        uint32_t v100 = 50;
LABEL_144:
        _os_log_impl(&dword_1830D4000, v99, OS_LOG_TYPE_DEBUG, v98, buf, v100);
        goto LABEL_145;
      }
    }
    goto LABEL_145;
  }
  if ((*(_WORD *)(v15 + 428) & 8) != 0)
  {
    if (!*(void *)(v15 + 32))
    {
      if (!(*(unsigned char *)(v15 + 158) & 1 | (*((unsigned char *)p_cache + 3665) == 0)))
      {
        os_log_type_t v240 = __nwlog_obj();
        if (os_log_type_enabled(v240, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v241 = *(void *)(v15 + 256);
          int v242 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
          if (v241) {
            LODWORD(v241) = *(_DWORD *)(v241 + 860);
          }
          int v243 = *(_DWORD *)(v15 + 424);
          *(_DWORD *)buf = 136447746;
          *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v15 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v779 = (uint64_t)" ";
          *(_WORD *)int v780 = 1024;
          *(_DWORD *)&v780[2] = v242;
          *(_WORD *)&v780[6] = 1024;
          *(_DWORD *)&v780[8] = v241;
          *(_WORD *)&v780[12] = 1024;
          *(_DWORD *)&v780[14] = v243;
          *(_WORD *)&v780[18] = 2048;
          *(void *)&v780[20] = v15;
          uint64_t v98 = "%{public}s %{public}s%s<i%u:c%u:s%u> Stream %p still awaiting new output handler";
          int v99 = v240;
          uint32_t v100 = 60;
          goto LABEL_144;
        }
      }
      goto LABEL_145;
    }
    if (!(*(unsigned char *)(v15 + 158) & 1 | (*((unsigned char *)p_cache + 3665) == 0)))
    {
      int v612 = __nwlog_obj();
      if (os_log_type_enabled(v612, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v613 = *(void *)(v15 + 256);
        int v614 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
        if (v613) {
          LODWORD(v613) = *(_DWORD *)(v613 + 860);
        }
        int v615 = *(_DWORD *)(v15 + 424);
        uint64_t v616 = *(void *)(v15 + 32);
        *(_DWORD *)buf = 136448002;
        *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v15 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v779 = (uint64_t)" ";
        *(_WORD *)int v780 = 1024;
        *(_DWORD *)&v780[2] = v614;
        *(_WORD *)&v780[6] = 1024;
        *(_DWORD *)&v780[8] = v613;
        *(_WORD *)&v780[12] = 1024;
        *(_DWORD *)&v780[14] = v615;
        *(_WORD *)&v780[18] = 2048;
        *(void *)&v780[20] = v15;
        *(_WORD *)&v780[28] = 2048;
        *(void *)&v780[30] = v616;
        _os_log_impl(&dword_1830D4000, v612, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> creating connection for stream %p with new output_handler %p", buf, 0x46u);
      }
    }
    int v748 = *(_OWORD **)(v15 + 32);
    if (v748)
    {
      uint64_t v132 = *(void **)(v15 + 336);
      if (v132)
      {
        uint64_t v133 = *(void **)(v15 + 320);
        if (v133)
        {
          uint64_t v134 = malloc_type_calloc(1uLL, 0x370uLL, 0xEAFB8F1AuLL);
          if (!v134)
          {
            BOOL v617 = __nwlog_obj();
            os_log_type_enabled(v617, OS_LOG_TYPE_ERROR);
            *(_DWORD *)buf = 136446722;
            *(void *)&uint8_t buf[4] = "strict_calloc";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = 1;
            *(_WORD *)&buf[22] = 2048;
            uint64_t v779 = 880;
            int v618 = (void *)_os_log_send_and_compose_impl();
            BOOL result = __nwlog_abort((uint64_t)v618);
            if (result) {
              goto LABEL_1395;
            }
            free(v618);
          }
          bzero(v134, 0x370uLL);
          if (nw_protocol_http1_identifier::onceToken != -1) {
            dispatch_once(&nw_protocol_http1_identifier::onceToken, &__block_literal_global_40283);
          }
          *((void *)v134 + 2) = &nw_protocol_http1_identifier::http1_protocol_identifier;
          if (nw_protocol_http1_get_callbacks(void)::onceToken != -1) {
            dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
          }
          *((void *)v134 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
          *((_DWORD *)v134 + 46) = 3;
          *((void *)v134 + 22) = v134;
          *((void *)v134 + 5) = v134 + 10;
          *((void *)v134 + 60) = v9;
          nw_protocol_set_output_handler((uint64_t)v134, (uint64_t)v748);
          *(void *)buf = os_retain(v132);
          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v134 + 47), buf);
          *(void *)buf = os_retain(v133);
          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v134 + 46), buf);
          *(void *)buf = nw_parameters_copy_context(v133);
          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v134 + 31), buf);
          *((void *)v134 + 24) = *(void *)(v9 + 192);
          uint64_t v135 = (void *)*((void *)v134 + 62);
          *(void *)os_log_type_t type = MEMORY[0x1E4F143A8];
          uint64_t v763 = 0x40000000;
          uint64_t v764 = (uint64_t)___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke;
          os_log_type_t v765 = (uint64_t (*)(uint64_t, uint64_t))&__block_descriptor_tmp_43_40284;
          BOOL v766 = (void (*)(uint64_t))v134;
          *(void *)buf = nw_http_connection_create_metadata(v135, type, 0);
          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v134 + 48), buf);
          nw_http_connection_metadata_set_version(*((void **)v134 + 96), 3);
          nw_http_connection_metadata_set_shared_connection_pool_metadata(*((void **)v134 + 96), *(void **)(v9 + 312));
          *((void *)v134 + 77) = 0;
          *((void *)v134 + 78) = (char *)v134 + 616;
          *((void *)v134 + 79) = 0;
          *((void *)v134 + 80) = (char *)v134 + 632;
          *((void *)v134 + 81) = 0;
          *((void *)v134 + 82) = (char *)v134 + 648;
          *((void *)v134 + 83) = 0;
          *((void *)v134 + 84) = (char *)v134 + 664;
          *((void *)v134 + 86) = (char *)v134 + 680;
          *((void *)v134 + 85) = 0;
          nw_frame_cache_init((uint64_t)v134 + 696, (uint64_t)v134, 256, 0x40000, 16);
          uint64_t v136 = *((void *)v134 + 60);
          if (v136)
          {
            *(_OWORD *)((char *)v134 + 360) = 0u;
            *(_OWORD *)((char *)v134 + 376) = 0u;
            *(_OWORD *)((char *)v134 + 392) = 0u;
            *(_OWORD *)((char *)v134 + 408) = 0u;
            *(_OWORD *)((char *)v134 + 424) = 0u;
            *(_OWORD *)((char *)v134 + 440) = 0u;
            *(_OWORD *)((char *)v134 + 328) = 0u;
            *(_OWORD *)((char *)v134 + 344) = 0u;
            *((void *)v134 + 37) = nw_http1_on_message_begin;
            *((void *)v134 + 48) = nw_http1_on_message_complete;
            *((void *)v134 + 46) = nw_http1_on_headers_complete;
            *((void *)v134 + 59) = nw_http1_on_reset;
            *((void *)v134 + 40) = nw_http1_on_method;
            *((void *)v134 + 51) = nw_http1_on_method_complete;
            *((void *)v134 + 38) = nw_http1_on_url;
            *((void *)v134 + 49) = nw_http1_on_url_complete;
            *((void *)v134 + 39) = nw_http1_on_status;
            *((void *)v134 + 50) = nw_http1_on_status_complete;
            *((void *)v134 + 42) = nw_http1_on_header_field;
            *((void *)v134 + 53) = nw_http1_on_header_field_complete;
            *((void *)v134 + 43) = nw_http1_on_header_value;
            *((void *)v134 + 54) = nw_http1_on_header_value_complete;
            *((void *)v134 + 47) = nw_http1_on_body;
            *((void *)v134 + 57) = nw_http1_on_chunk_header;
            *((void *)v134 + 58) = nw_http1_on_chunk_complete;
            char v137 = *(unsigned char *)(v136 + 376);
            *(_OWORD *)((char *)v134 + 248) = 0u;
            *(_OWORD *)((char *)v134 + 200) = 0u;
            *(_OWORD *)((char *)v134 + 264) = 0u;
            *(_OWORD *)((char *)v134 + 232) = 0u;
            *(_OWORD *)((char *)v134 + 216) = 0u;
            if (v137) {
              char v138 = 1;
            }
            else {
              char v138 = 2;
            }
            *((unsigned char *)v134 + 272) = v138;
            *((void *)v134 + 35) = 0;
            *((void *)v134 + 36) = (char *)v134 + 296;
            *((_WORD *)v134 + 139) = 16131;
            *((void *)v134 + 31) = v134;
            *((void *)v134 + 32) = 238;
            if ((*((unsigned char *)v134 + 158) & 1) == 0)
            {
              uint64_t v139 = __nwlog_obj();
              if (os_log_type_enabled(v139, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v140 = *((void *)v134 + 61);
                int v141 = *(_DWORD *)(*((void *)v134 + 60) + 372);
                int v142 = *((_DWORD *)v134 + 215);
                if (v140) {
                  LODWORD(v140) = *(_DWORD *)(v140 + 424);
                }
                *(_DWORD *)buf = 136448258;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_log_parser_version";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = (char *)v134 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v779 = (uint64_t)" ";
                *(_WORD *)int v780 = 1024;
                *(_DWORD *)&v780[2] = v141;
                *(_WORD *)&v780[6] = 1024;
                *(_DWORD *)&v780[8] = v142;
                *(_WORD *)&v780[12] = 1024;
                *(_DWORD *)&v780[14] = v140;
                *(_WORD *)&v780[18] = 1024;
                *(_DWORD *)&v780[20] = 9;
                *(_WORD *)&v780[24] = 1024;
                *(_DWORD *)&v780[26] = 2;
                *(_WORD *)&v780[30] = 1024;
                *(_DWORD *)&v780[32] = 1;
                _os_log_impl(&dword_1830D4000, v139, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using http parser v%u.%u.%u", buf, 0x44u);
              }
            }
            goto LABEL_208;
          }
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
          uint64_t v619 = (char *)_os_log_send_and_compose_impl();
          v773[0] = 16;
          LOBYTE(v754[0]) = 0;
          if (__nwlog_fault(v619, v773, v754))
          {
            if (v773[0] == 17)
            {
              id v620 = __nwlog_obj();
              os_log_type_t v621 = v773[0];
              if (!os_log_type_enabled(v620, (os_log_type_t)v773[0])) {
                goto LABEL_1303;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
              id v622 = "%{public}s called with null http1_connection->protocol_http1";
              goto LABEL_1302;
            }
            if (!LOBYTE(v754[0]))
            {
              id v620 = __nwlog_obj();
              os_log_type_t v621 = v773[0];
              if (!os_log_type_enabled(v620, (os_log_type_t)v773[0])) {
                goto LABEL_1303;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
              id v622 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
              goto LABEL_1302;
            }
            BOOL v689 = (char *)__nw_create_backtrace_string();
            id v620 = __nwlog_obj();
            os_log_type_t v621 = v773[0];
            BOOL v690 = os_log_type_enabled(v620, (os_log_type_t)v773[0]);
            if (v689)
            {
              if (v690)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v689;
                _os_log_impl(&dword_1830D4000, v620, v621, "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v689);
              goto LABEL_1303;
            }
            if (v690)
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
              id v622 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
LABEL_1302:
              _os_log_impl(&dword_1830D4000, v620, v621, v622, buf, 0xCu);
            }
          }
LABEL_1303:
          if (v619) {
            free(v619);
          }
LABEL_208:
          *(void *)buf = 0;
          *(void *)&buf[8] = buf;
          *(void *)&buf[16] = 0x2000000000;
          uint64_t v779 = (uint64_t)v134;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v756 = 0x40000000;
          os_log_type_t v757 = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke_2;
          int v758 = &unk_1E5241178;
          int v759 = (uint64_t *)buf;
          *((void *)v134 + 76) = _Block_copy(&aBlock);
          _Block_object_dispose(buf, 8);
          if ((*((unsigned char *)v134 + 158) & 1) == 0)
          {
            if (gLogDatapath)
            {
              uint64_t v631 = __nwlog_obj();
              if (os_log_type_enabled(v631, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v632 = *((void *)v134 + 61);
                int v633 = *(_DWORD *)(*((void *)v134 + 60) + 372);
                int v634 = *((_DWORD *)v134 + 215);
                if (v632) {
                  LODWORD(v632) = *(_DWORD *)(v632 + 424);
                }
                *(_DWORD *)buf = 136447746;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = (char *)v134 + 74;
                *(_WORD *)&buf[22] = 2080;
                uint64_t v779 = (uint64_t)" ";
                *(_WORD *)int v780 = 1024;
                *(_DWORD *)&v780[2] = v633;
                *(_WORD *)&v780[6] = 1024;
                *(_DWORD *)&v780[8] = v634;
                *(_WORD *)&v780[12] = 1024;
                *(_DWORD *)&v780[14] = v632;
                *(_WORD *)&v780[18] = 2048;
                *(void *)&v780[20] = v134;
                _os_log_impl(&dword_1830D4000, v631, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created %p", buf, 0x3Cu);
              }
            }
          }
          uint64_t v143 = (nw_path_t *)(v134 + 32);
          nw_protocol_replace_input_handler((uint64_t)v748, v15, (uint64_t)v134);
          *uint64_t v134 = *v748;
          uint64_t v144 = (void *)*((void *)v134 + 92);
          if (v144)
          {
            if (!*((void *)v134 + 66))
            {
              uint64_t v145 = (void **)(v134 + 35);
              id v146 = nw_parameters_copy_context(*((void **)v134 + 92));
              *(void *)buf = nw_path_copy_flow_registration(v146, (uint64_t)v134);
              nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v134 + 35), buf);
              uint64_t v147 = (void *)*((void *)v134 + 70);
              if (v147)
              {
                id v148 = nw_path_flow_registration_copy_endpoint(v147);
                id v149 = nw_path_flow_registration_copy_parameters(*v145);
                *(void *)buf = nw_endpoint_copy_association_with_evaluator(v148, v149, 0);
                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v134 + 33), buf);
                if (*((void *)v134 + 66))
                {
                  *(void *)buf = nw_protocol_instance_stub_create((nw_protocol *)v134);
                  nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v134 + 34), buf);
                  nw_association_register_internal(*((void **)v134 + 66), v144, *((void **)v134 + 68), 0, 0, &__block_literal_global_69);
                  id v150 = nw_association_copy_current_path(*((void **)v134 + 66), v149);
                  if (v150)
                  {
                    uint64_t v151 = v150;
                    nw_path_t v152 = (nw_path_t)nw_path_copy_for_flow_registration(v150, *v145);
                    if (v152)
                    {
                      int v153 = v152;
                      if (*v143 != v152)
                      {
                        *(void *)buf = os_retain(v152);
                        nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v134 + 32), buf);
                      }
                      if (nw_path_has_flows(v153)) {
                        __int16 v154 = 4096;
                      }
                      else {
                        __int16 v154 = 0;
                      }
                      int v155 = *((_WORD *)v134 + 436) & 0xEFFF | (*((unsigned __int8 *)v134 + 874) << 16);
                      *((_WORD *)v134 + 436) = *((_WORD *)v134 + 436) & 0xEFFF | v154;
                      *((unsigned char *)v134 + 874) = BYTE2(v155);
                      id v156 = nw_parameters_copy_effective_proxy_config(v144);
                      if (v156)
                      {
                        BOOL v157 = v156;
                        if (nw_path_has_proxy_config(v151, v156))
                        {
                          *(void *)buf = os_retain(v157);
                          nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v134 + 36), buf);
                        }
                        os_release(v157);
                      }
                      os_release(v153);
                    }
                    os_release(v151);
                  }
                }
                if (v149) {
                  os_release(v149);
                }
                if (v148) {
                  os_release(v148);
                }
              }
              if (v146) {
                os_release(v146);
              }
            }
            goto LABEL_233;
          }
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
          uint64_t v623 = (char *)_os_log_send_and_compose_impl();
          type[0] = OS_LOG_TYPE_ERROR;
          LOBYTE(aBlock) = 0;
          if (__nwlog_fault(v623, type, &aBlock))
          {
            if (type[0] == OS_LOG_TYPE_FAULT)
            {
              v624 = __nwlog_obj();
              os_log_type_t v625 = type[0];
              if (!os_log_type_enabled(v624, type[0])) {
                goto LABEL_1308;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              BOOL v626 = "%{public}s called with null parameters";
              goto LABEL_1307;
            }
            if (!(_BYTE)aBlock)
            {
              v624 = __nwlog_obj();
              os_log_type_t v625 = type[0];
              if (!os_log_type_enabled(v624, type[0])) {
                goto LABEL_1308;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              BOOL v626 = "%{public}s called with null parameters, backtrace limit exceeded";
              goto LABEL_1307;
            }
            BOOL v691 = (char *)__nw_create_backtrace_string();
            v624 = __nwlog_obj();
            os_log_type_t v625 = type[0];
            BOOL v692 = os_log_type_enabled(v624, type[0]);
            if (v691)
            {
              if (v692)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v691;
                _os_log_impl(&dword_1830D4000, v624, v625, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v691);
              goto LABEL_1308;
            }
            if (v692)
            {
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
              BOOL v626 = "%{public}s called with null parameters, no backtrace";
LABEL_1307:
              _os_log_impl(&dword_1830D4000, v624, v625, v626, buf, 0xCu);
            }
          }
LABEL_1308:
          if (v623) {
            free(v623);
          }
LABEL_233:
          if (*v143 && nw_path_uses_interface_type(*v143, nw_interface_type_cellular)) {
            *((void *)v134 + 24) = 1000;
          }
          uint64_t v158 = *(unsigned int *)(v9 + 336) + 1;
          uint64_t v159 = v158 << 31 >> 31;
          *(_DWORD *)(v9 + 336) = v158;
          if (v159 == v158 && (v159 & 0x8000000000000000) == 0)
          {
LABEL_511:
            uint64_t v328 = *(unsigned int *)(v9 + 360) + 1;
            uint64_t v329 = v328 << 31 >> 31;
            *(_DWORD *)(v9 + 360) = v328;
            if (v329 == v328 && (v329 & 0x8000000000000000) == 0) {
              goto LABEL_530;
            }
            __nwlog_obj();
            uint64_t v330 = *(unsigned int *)(v9 + 360);
            *(_DWORD *)buf = 136446978;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->next_connection_log_num";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v779 = 1;
            *(_WORD *)int v780 = 2048;
            *(void *)&v780[2] = v330;
            uint64_t v331 = (char *)_os_log_send_and_compose_impl();
            type[0] = OS_LOG_TYPE_ERROR;
            LOBYTE(aBlock) = 0;
            if (__nwlog_fault(v331, type, &aBlock))
            {
              if (type[0] == OS_LOG_TYPE_FAULT)
              {
                int v332 = __nwlog_obj();
                os_log_type_t v333 = type[0];
                if (os_log_type_enabled(v332, type[0]))
                {
                  uint64_t v334 = *(unsigned int *)(v9 + 360);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->next_connection_log_num";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v334;
                  uint64_t v335 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_526:
                  _os_log_impl(&dword_1830D4000, v332, v333, v335, buf, 0x2Au);
                }
              }
              else if ((_BYTE)aBlock)
              {
                char v336 = (char *)__nw_create_backtrace_string();
                int v332 = __nwlog_obj();
                os_log_type_t v333 = type[0];
                BOOL v337 = os_log_type_enabled(v332, type[0]);
                if (v336)
                {
                  if (v337)
                  {
                    uint64_t v338 = *(unsigned int *)(v9 + 360);
                    *(_DWORD *)buf = 136447234;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = "http1->next_connection_log_num";
                    *(_WORD *)&buf[22] = 2048;
                    uint64_t v779 = 1;
                    *(_WORD *)int v780 = 2048;
                    *(void *)&v780[2] = v338;
                    *(_WORD *)&v780[10] = 2082;
                    *(void *)&v780[12] = v336;
                    _os_log_impl(&dword_1830D4000, v332, v333, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                  }
                  free(v336);
                  goto LABEL_527;
                }
                if (v337)
                {
                  uint64_t v340 = *(unsigned int *)(v9 + 360);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->next_connection_log_num";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v340;
                  uint64_t v335 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                  goto LABEL_526;
                }
              }
              else
              {
                int v332 = __nwlog_obj();
                os_log_type_t v333 = type[0];
                if (os_log_type_enabled(v332, type[0]))
                {
                  uint64_t v339 = *(unsigned int *)(v9 + 360);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->next_connection_log_num";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v339;
                  uint64_t v335 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                  goto LABEL_526;
                }
              }
            }
LABEL_527:
            if (v331) {
              free(v331);
            }
            LODWORD(v328) = -1;
            *(_DWORD *)(v9 + 360) = -1;
LABEL_530:
            *((_DWORD *)v134 + 215) = v328;
            if ((*((unsigned char *)v134 + 158) & 1) == 0)
            {
              if (gLogDatapath)
              {
                size_t v635 = __nwlog_obj();
                if (os_log_type_enabled(v635, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v636 = *((void *)v134 + 61);
                  int v637 = *(_DWORD *)(*((void *)v134 + 60) + 372);
                  int v638 = *((_DWORD *)v134 + 215);
                  if (v636) {
                    LODWORD(v636) = *(_DWORD *)(v636 + 424);
                  }
                  int v639 = *(_DWORD *)(v9 + 336);
                  *(_DWORD *)buf = 136448002;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = (char *)v134 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v779 = (uint64_t)" ";
                  *(_WORD *)int v780 = 1024;
                  *(_DWORD *)&v780[2] = v637;
                  *(_WORD *)&v780[6] = 1024;
                  *(_DWORD *)&v780[8] = v638;
                  *(_WORD *)&v780[12] = 1024;
                  *(_DWORD *)&v780[14] = v636;
                  *(_WORD *)&v780[18] = 2048;
                  *(void *)&v780[20] = v134;
                  *(_WORD *)&v780[28] = 1024;
                  *(_DWORD *)&v780[30] = v639;
                  _os_log_impl(&dword_1830D4000, v635, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added connection %p, now have %u connections", buf, 0x42u);
                }
              }
            }
            if (*(void *)(v15 + 248))
            {
              if (*((void *)v134 + 61))
              {
                __nwlog_obj();
                uint64_t v341 = *((void *)v134 + 61);
                *(_DWORD *)buf = 136446722;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                *(_WORD *)&unsigned char buf[12] = 2048;
                *(void *)&buf[14] = v134;
                *(_WORD *)&buf[22] = 2048;
                uint64_t v779 = v341;
                int v342 = (char *)_os_log_send_and_compose_impl();
                type[0] = OS_LOG_TYPE_ERROR;
                LOBYTE(aBlock) = 0;
                if (!__nwlog_fault(v342, type, &aBlock)) {
                  goto LABEL_558;
                }
                if (type[0] == OS_LOG_TYPE_FAULT)
                {
                  BOOL v343 = __nwlog_obj();
                  os_log_type_t v344 = type[0];
                  if (!os_log_type_enabled(v343, type[0])) {
                    goto LABEL_558;
                  }
                  uint64_t v345 = *((void *)v134 + 61);
                  *(_DWORD *)buf = 136446722;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v134;
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = v345;
                  os_log_type_t v346 = "%{public}s Connection %p already has a stream (%p)";
                }
                else if ((_BYTE)aBlock)
                {
                  uint64_t v359 = (char *)__nw_create_backtrace_string();
                  BOOL v343 = __nwlog_obj();
                  os_log_type_t v344 = type[0];
                  BOOL v360 = os_log_type_enabled(v343, type[0]);
                  if (v359)
                  {
                    if (v360)
                    {
                      uint64_t v361 = *((void *)v134 + 61);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v134;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = v361;
                      *(_WORD *)int v780 = 2082;
                      *(void *)&v780[2] = v359;
                      _os_log_impl(&dword_1830D4000, v343, v344, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
                    }
                    free(v359);
                    goto LABEL_558;
                  }
                  if (!v360)
                  {
LABEL_558:
                    if (v342) {
                      free(v342);
                    }
                    goto LABEL_560;
                  }
                  uint64_t v363 = *((void *)v134 + 61);
                  *(_DWORD *)buf = 136446722;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v134;
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = v363;
                  os_log_type_t v346 = "%{public}s Connection %p already has a stream (%p), no backtrace";
                }
                else
                {
                  BOOL v343 = __nwlog_obj();
                  os_log_type_t v344 = type[0];
                  if (!os_log_type_enabled(v343, type[0])) {
                    goto LABEL_558;
                  }
                  uint64_t v362 = *((void *)v134 + 61);
                  *(_DWORD *)buf = 136446722;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2048;
                  *(void *)&buf[14] = v134;
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = v362;
                  os_log_type_t v346 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                }
                _os_log_impl(&dword_1830D4000, v343, v344, v346, buf, 0x20u);
                goto LABEL_558;
              }
              *(void *)(v15 + 256) = v134;
              *((void *)v134 + 61) = v15;
              nw_protocol_set_output_handler(v15, *((void *)v134 + 4));
              nw_protocol_set_input_handler((uint64_t)v134, *(void *)(v15 + 48));
              *(_OWORD *)uint64_t v15 = *v134;
              long long v347 = *(_OWORD *)(v15 + 144);
              long long v349 = *(_OWORD *)(v15 + 96);
              long long v348 = *(_OWORD *)(v15 + 112);
              v134[8] = *(_OWORD *)(v15 + 128);
              v134[9] = v347;
              v134[6] = v349;
              v134[7] = v348;
              long long v350 = *(_OWORD *)(v15 + 80);
              v134[4] = *v746;
              v134[5] = v350;
              nw_http_transaction_metadata_set_connection_metadata(*(void **)(v15 + 352), *((void **)v134 + 96));
              *((_WORD *)v134 + 436) &= 0xFFD7u;
              *((_DWORD *)v134 + 216) = 1;
              if ((*((unsigned char *)v134 + 158) & 1) == 0)
              {
                int v351 = __nwlog_obj();
                if (os_log_type_enabled(v351, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v352 = *((void *)v134 + 61);
                  int v353 = *(_DWORD *)(*((void *)v134 + 60) + 372);
                  int v354 = *((_DWORD *)v134 + 215);
                  if (v352) {
                    LODWORD(v352) = *(_DWORD *)(v352 + 424);
                  }
                  *(_DWORD *)buf = 136447490;
                  *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = (char *)v134 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v779 = (uint64_t)" ";
                  *(_WORD *)int v780 = 1024;
                  *(_DWORD *)&v780[2] = v353;
                  *(_WORD *)&v780[6] = 1024;
                  *(_DWORD *)&v780[8] = v354;
                  *(_WORD *)&v780[12] = 1024;
                  *(_DWORD *)&v780[14] = v352;
                  _os_log_impl(&dword_1830D4000, v351, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                }
              }
              if ((*(unsigned char *)(v15 + 158) & 1) == 0)
              {
                uint64_t v355 = __nwlog_obj();
                if (os_log_type_enabled(v355, OS_LOG_TYPE_INFO))
                {
                  uint64_t v356 = *(void *)(v15 + 256);
                  int v357 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
                  if (v356) {
                    LODWORD(v356) = *(_DWORD *)(v356 + 860);
                  }
                  int v358 = *(_DWORD *)(v15 + 424);
                  *(_DWORD *)buf = 136448002;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v15 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v779 = (uint64_t)" ";
                  *(_WORD *)int v780 = 1024;
                  *(_DWORD *)&v780[2] = v357;
                  *(_WORD *)&v780[6] = 1024;
                  *(_DWORD *)&v780[8] = v356;
                  *(_WORD *)&v780[12] = 1024;
                  *(_DWORD *)&v780[14] = v358;
                  *(_WORD *)&v780[18] = 2048;
                  *(void *)&v780[20] = v15;
                  *(_WORD *)&v780[28] = 2048;
                  *(void *)&v780[30] = v134;
                  _os_log_impl(&dword_1830D4000, v355, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
                }
              }
LABEL_560:
              if ((*(unsigned char *)(v15 + 158) & 1) == 0)
              {
                int v364 = __nwlog_obj();
                if (os_log_type_enabled(v364, OS_LOG_TYPE_DEBUG))
                {
                  uint64_t v365 = *(void *)(v15 + 256);
                  int v366 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
                  if (v365) {
                    LODWORD(v365) = *(_DWORD *)(v365 + 860);
                  }
                  int v367 = *(_DWORD *)(v15 + 424);
                  *(_DWORD *)buf = 136448258;
                  *(void *)&uint8_t buf[4] = "nw_http1_start_new_connection_for_stream";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v15 + 74;
                  *(_WORD *)&buf[22] = 2080;
                  uint64_t v779 = (uint64_t)" ";
                  *(_WORD *)int v780 = 1024;
                  *(_DWORD *)&v780[2] = v366;
                  *(_WORD *)&v780[6] = 1024;
                  *(_DWORD *)&v780[8] = v365;
                  *(_WORD *)&v780[12] = 1024;
                  *(_DWORD *)&v780[14] = v367;
                  *(_WORD *)&v780[18] = 2048;
                  *(void *)&v780[20] = v134;
                  *(_WORD *)&v780[28] = 1024;
                  *(_DWORD *)&v780[30] = v367;
                  *(_WORD *)&v780[34] = 2048;
                  *(void *)&v780[36] = v15;
                  _os_log_impl(&dword_1830D4000, v364, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created new connection %p for stream %u (%p)", buf, 0x4Cu);
                }
              }
              nw_http_transaction_metadata_set_first_on_connection(*(void **)(v15 + 352));
              uint64_t v368 = nw_protocol_copy_info((uint64_t)v748, 255);
              uint64_t v369 = (void *)v368;
              if (v368
                && (uint64_t v370 = *(void *)(v368 + 24), *(void *)(v368 + 16) != v370)
                && (BOOL v371 = *(void **)(v370 - 8)) != 0)
              {
                uint64_t v372 = os_retain(v371);
                uint64_t v373 = v372;
                if (v372 && nw_protocol_metadata_is_tls(v372))
                {
                  uint64_t v373 = v373;
                  nw_http_connection_metadata_set_sec_metadata(*((void **)v134 + 96), v373);
                  os_release(v373);
                  nw_protocol_connect((uint64_t)v748, (uint64_t)v134);
                  goto LABEL_574;
                }
              }
              else
              {
                uint64_t v373 = 0;
              }
              if (v134)
              {
                nw_protocol_connect((uint64_t)v748, (uint64_t)v134);
                if (!v373) {
                  goto LABEL_575;
                }
                goto LABEL_574;
              }
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
              uint64_t v604 = (char *)_os_log_send_and_compose_impl();
              type[0] = OS_LOG_TYPE_ERROR;
              LOBYTE(aBlock) = 0;
              if (__nwlog_fault(v604, type, &aBlock))
              {
                if (type[0] == OS_LOG_TYPE_FAULT)
                {
                  uint64_t v605 = __nwlog_obj();
                  os_log_type_t v606 = type[0];
                  if (!os_log_type_enabled(v605, type[0])) {
                    goto LABEL_1254;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                  uint64_t v607 = "%{public}s called with null connection";
LABEL_1253:
                  _os_log_impl(&dword_1830D4000, v605, v606, v607, buf, 0xCu);
                  goto LABEL_1254;
                }
                if (!(_BYTE)aBlock)
                {
                  uint64_t v605 = __nwlog_obj();
                  os_log_type_t v606 = type[0];
                  if (!os_log_type_enabled(v605, type[0])) {
                    goto LABEL_1254;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                  uint64_t v607 = "%{public}s called with null connection, backtrace limit exceeded";
                  goto LABEL_1253;
                }
                uint64_t v649 = (char *)__nw_create_backtrace_string();
                uint64_t v605 = __nwlog_obj();
                os_log_type_t v606 = type[0];
                BOOL v650 = os_log_type_enabled(v605, type[0]);
                if (!v649)
                {
                  if (!v650) {
                    goto LABEL_1254;
                  }
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                  uint64_t v607 = "%{public}s called with null connection, no backtrace";
                  goto LABEL_1253;
                }
                if (v650)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v649;
                  _os_log_impl(&dword_1830D4000, v605, v606, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v649);
              }
LABEL_1254:
              if (v604) {
                free(v604);
              }
              nw_protocol_connect((uint64_t)v748, 0);
              if (!v373)
              {
LABEL_575:
                if (v369) {
                  os_release(v369);
                }
                nw_protocol_set_output_handler(v9, 0);
                *(_WORD *)(v15 + 428) &= ~8u;
                int v374 = *(_DWORD *)(v9 + 352);
                *(_DWORD *)(v9 + 352) = v374 - 1;
                if (v374) {
                  return 1;
                }
                __nwlog_obj();
                uint64_t v375 = *(unsigned int *)(v9 + 352);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->pending_output_handler_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v779 = 1;
                *(_WORD *)int v780 = 2048;
                *(void *)&v780[2] = v375;
                BOOL v224 = (char *)_os_log_send_and_compose_impl();
                type[0] = OS_LOG_TYPE_ERROR;
                LOBYTE(aBlock) = 0;
                if (__nwlog_fault(v224, type, &aBlock))
                {
                  if (type[0] != OS_LOG_TYPE_FAULT)
                  {
                    if ((_BYTE)aBlock)
                    {
                      unsigned int v376 = (char *)__nw_create_backtrace_string();
                      BOOL v225 = __nwlog_obj();
                      os_log_type_t v226 = type[0];
                      BOOL v230 = os_log_type_enabled(v225, type[0]);
                      if (v376)
                      {
                        if (v230)
                        {
                          uint64_t v377 = *(unsigned int *)(v9 + 352);
                          *(_DWORD *)buf = 136447234;
                          *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->pending_output_handler_count";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v779 = 1;
                          *(_WORD *)int v780 = 2048;
                          *(void *)&v780[2] = v377;
                          *(_WORD *)&v780[10] = 2082;
                          *(void *)&v780[12] = v376;
                          _os_log_impl(&dword_1830D4000, v225, v226, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                        }
                        free(v376);
                        if (!v224) {
                          goto LABEL_593;
                        }
                        goto LABEL_592;
                      }
                      goto LABEL_588;
                    }
                    goto LABEL_586;
                  }
LABEL_330:
                  BOOL v225 = __nwlog_obj();
                  os_log_type_t v226 = type[0];
                  if (!os_log_type_enabled(v225, type[0])) {
                    goto LABEL_591;
                  }
                  uint64_t v227 = *(unsigned int *)(v9 + 352);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->pending_output_handler_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v227;
                  os_log_type_t v228 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_590:
                  _os_log_impl(&dword_1830D4000, v225, v226, v228, buf, 0x2Au);
                  goto LABEL_591;
                }
                goto LABEL_591;
              }
LABEL_574:
              os_release(v373);
              goto LABEL_575;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
            uint64_t v627 = (char *)_os_log_send_and_compose_impl();
            type[0] = OS_LOG_TYPE_ERROR;
            LOBYTE(aBlock) = 0;
            if (__nwlog_fault(v627, type, &aBlock))
            {
              if (type[0] == OS_LOG_TYPE_FAULT)
              {
                int v628 = __nwlog_obj();
                os_log_type_t v629 = type[0];
                if (!os_log_type_enabled(v628, type[0])) {
                  goto LABEL_1313;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                v630 = "%{public}s called with null http1_stream->protocol_http1";
                goto LABEL_1312;
              }
              if (!(_BYTE)aBlock)
              {
                int v628 = __nwlog_obj();
                os_log_type_t v629 = type[0];
                if (!os_log_type_enabled(v628, type[0])) {
                  goto LABEL_1313;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                v630 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                goto LABEL_1312;
              }
              os_log_type_t v693 = (char *)__nw_create_backtrace_string();
              int v628 = __nwlog_obj();
              os_log_type_t v629 = type[0];
              BOOL v694 = os_log_type_enabled(v628, type[0]);
              if (v693)
              {
                if (v694)
                {
                  *(_DWORD *)buf = 136446466;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = v693;
                  _os_log_impl(&dword_1830D4000, v628, v629, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                }
                free(v693);
                goto LABEL_1313;
              }
              if (v694)
              {
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                v630 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
LABEL_1312:
                _os_log_impl(&dword_1830D4000, v628, v629, v630, buf, 0xCu);
              }
            }
LABEL_1313:
            if (v627) {
              free(v627);
            }
            goto LABEL_560;
          }
          __nwlog_obj();
          uint64_t v160 = *(unsigned int *)(v9 + 336);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->connections_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v779 = 1;
          *(_WORD *)int v780 = 2048;
          *(void *)&v780[2] = v160;
          BOOL v161 = (char *)_os_log_send_and_compose_impl();
          type[0] = OS_LOG_TYPE_ERROR;
          LOBYTE(aBlock) = 0;
          if (__nwlog_fault(v161, type, &aBlock))
          {
            if (type[0] == OS_LOG_TYPE_FAULT)
            {
              uint64_t v162 = __nwlog_obj();
              os_log_type_t v163 = type[0];
              if (os_log_type_enabled(v162, type[0]))
              {
                uint64_t v164 = *(unsigned int *)(v9 + 336);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->connections_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v779 = 1;
                *(_WORD *)int v780 = 2048;
                *(void *)&v780[2] = v164;
                int v165 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_507:
                _os_log_impl(&dword_1830D4000, v162, v163, v165, buf, 0x2Au);
              }
            }
            else if ((_BYTE)aBlock)
            {
              uint64_t v252 = (char *)__nw_create_backtrace_string();
              uint64_t v162 = __nwlog_obj();
              os_log_type_t v163 = type[0];
              BOOL v253 = os_log_type_enabled(v162, type[0]);
              if (v252)
              {
                if (v253)
                {
                  uint64_t v254 = *(unsigned int *)(v9 + 336);
                  *(_DWORD *)buf = 136447234;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->connections_count";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v254;
                  *(_WORD *)&v780[10] = 2082;
                  *(void *)&v780[12] = v252;
                  _os_log_impl(&dword_1830D4000, v162, v163, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                }
                free(v252);
                goto LABEL_508;
              }
              if (v253)
              {
                uint64_t v327 = *(unsigned int *)(v9 + 336);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->connections_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v779 = 1;
                *(_WORD *)int v780 = 2048;
                *(void *)&v780[2] = v327;
                int v165 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                goto LABEL_507;
              }
            }
            else
            {
              uint64_t v162 = __nwlog_obj();
              os_log_type_t v163 = type[0];
              if (os_log_type_enabled(v162, type[0]))
              {
                uint64_t v319 = *(unsigned int *)(v9 + 336);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->connections_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v779 = 1;
                *(_WORD *)int v780 = 2048;
                *(void *)&v780[2] = v319;
                int v165 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                goto LABEL_507;
              }
            }
          }
LABEL_508:
          if (v161) {
            free(v161);
          }
          *(_DWORD *)(v9 + 336) = -1;
          goto LABEL_511;
        }
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
        char v608 = (char *)_os_log_send_and_compose_impl();
        v773[0] = 16;
        LOBYTE(v754[0]) = 0;
        if (__nwlog_fault(v608, v773, v754))
        {
          if (v773[0] == 17)
          {
            BOOL v609 = __nwlog_obj();
            os_log_type_t v610 = v773[0];
            if (!os_log_type_enabled(v609, (os_log_type_t)v773[0])) {
              goto LABEL_1265;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            uint64_t v611 = "%{public}s called with null parameters";
            goto LABEL_1264;
          }
          if (!LOBYTE(v754[0]))
          {
            BOOL v609 = __nwlog_obj();
            os_log_type_t v610 = v773[0];
            if (!os_log_type_enabled(v609, (os_log_type_t)v773[0])) {
              goto LABEL_1265;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            uint64_t v611 = "%{public}s called with null parameters, backtrace limit exceeded";
            goto LABEL_1264;
          }
          uint64_t v662 = (char *)__nw_create_backtrace_string();
          BOOL v609 = __nwlog_obj();
          os_log_type_t v610 = v773[0];
          BOOL v679 = os_log_type_enabled(v609, (os_log_type_t)v773[0]);
          if (!v662)
          {
            if (!v679) {
              goto LABEL_1265;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            uint64_t v611 = "%{public}s called with null parameters, no backtrace";
            goto LABEL_1264;
          }
          if (v679)
          {
            *(_DWORD *)buf = 136446466;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v662;
            uint64_t v664 = "%{public}s called with null parameters, dumping backtrace:%{public}s";
            goto LABEL_1169;
          }
          goto LABEL_1170;
        }
LABEL_1265:
        if (!v608) {
          goto LABEL_1267;
        }
        goto LABEL_1266;
      }
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      char v608 = (char *)_os_log_send_and_compose_impl();
      v773[0] = 16;
      LOBYTE(v754[0]) = 0;
      if (!__nwlog_fault(v608, v773, v754)) {
        goto LABEL_1265;
      }
      if (v773[0] != 17)
      {
        if (!LOBYTE(v754[0]))
        {
          BOOL v609 = __nwlog_obj();
          os_log_type_t v610 = v773[0];
          if (!os_log_type_enabled(v609, (os_log_type_t)v773[0])) {
            goto LABEL_1265;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          uint64_t v611 = "%{public}s called with null endpoint, backtrace limit exceeded";
          goto LABEL_1264;
        }
        uint64_t v662 = (char *)__nw_create_backtrace_string();
        BOOL v609 = __nwlog_obj();
        os_log_type_t v610 = v773[0];
        BOOL v663 = os_log_type_enabled(v609, (os_log_type_t)v773[0]);
        if (!v662)
        {
          if (!v663) {
            goto LABEL_1265;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          uint64_t v611 = "%{public}s called with null endpoint, no backtrace";
          goto LABEL_1264;
        }
        if (v663)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v662;
          uint64_t v664 = "%{public}s called with null endpoint, dumping backtrace:%{public}s";
LABEL_1169:
          _os_log_impl(&dword_1830D4000, v609, v610, v664, buf, 0x16u);
        }
LABEL_1170:
        free(v662);
        if (!v608)
        {
LABEL_1267:
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
          int v718 = (char *)_os_log_send_and_compose_impl();
          type[0] = OS_LOG_TYPE_ERROR;
          LOBYTE(aBlock) = 0;
          if (!__nwlog_fault(v718, type, &aBlock)) {
            goto LABEL_1281;
          }
          if (type[0] == OS_LOG_TYPE_FAULT)
          {
            v719 = __nwlog_obj();
            os_log_type_t v720 = type[0];
            if (!os_log_type_enabled(v719, type[0])) {
              goto LABEL_1281;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            uint64_t v721 = "%{public}s called with null http1_connection";
          }
          else if ((_BYTE)aBlock)
          {
            int v722 = (char *)__nw_create_backtrace_string();
            v719 = __nwlog_obj();
            os_log_type_t v720 = type[0];
            BOOL v723 = os_log_type_enabled(v719, type[0]);
            if (v722)
            {
              if (v723)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v722;
                _os_log_impl(&dword_1830D4000, v719, v720, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
              }
              free(v722);
LABEL_1281:
              if (v718) {
                free(v718);
              }
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
              int v724 = (char *)_os_log_send_and_compose_impl();
              type[0] = OS_LOG_TYPE_ERROR;
              LOBYTE(aBlock) = 0;
              if (!__nwlog_fault(v724, type, &aBlock)) {
                goto LABEL_1297;
              }
              if (type[0] == OS_LOG_TYPE_FAULT)
              {
                os_log_type_t v725 = __nwlog_obj();
                os_log_type_t v726 = type[0];
                if (os_log_type_enabled(v725, type[0]))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v727 = "%{public}s called with null http1_connection";
LABEL_1296:
                  _os_log_impl(&dword_1830D4000, v725, v726, v727, buf, 0xCu);
                }
              }
              else if ((_BYTE)aBlock)
              {
                uint64_t v728 = (char *)__nw_create_backtrace_string();
                os_log_type_t v725 = __nwlog_obj();
                os_log_type_t v726 = type[0];
                BOOL v729 = os_log_type_enabled(v725, type[0]);
                if (v728)
                {
                  if (v729)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v728;
                    _os_log_impl(&dword_1830D4000, v725, v726, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v728);
                  goto LABEL_1297;
                }
                if (v729)
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v727 = "%{public}s called with null http1_connection, no backtrace";
                  goto LABEL_1296;
                }
              }
              else
              {
                os_log_type_t v725 = __nwlog_obj();
                os_log_type_t v726 = type[0];
                if (os_log_type_enabled(v725, type[0]))
                {
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v727 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                  goto LABEL_1296;
                }
              }
LABEL_1297:
              if (v724) {
                free(v724);
              }
              uint64_t v134 = 0;
              goto LABEL_560;
            }
            if (!v723) {
              goto LABEL_1281;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            uint64_t v721 = "%{public}s called with null http1_connection, no backtrace";
          }
          else
          {
            v719 = __nwlog_obj();
            os_log_type_t v720 = type[0];
            if (!os_log_type_enabled(v719, type[0])) {
              goto LABEL_1281;
            }
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
            uint64_t v721 = "%{public}s called with null http1_connection, backtrace limit exceeded";
          }
          _os_log_impl(&dword_1830D4000, v719, v720, v721, buf, 0xCu);
          goto LABEL_1281;
        }
LABEL_1266:
        free(v608);
        goto LABEL_1267;
      }
      BOOL v609 = __nwlog_obj();
      os_log_type_t v610 = v773[0];
      if (!os_log_type_enabled(v609, (os_log_type_t)v773[0])) {
        goto LABEL_1265;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      uint64_t v611 = "%{public}s called with null endpoint";
    }
    else
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      char v608 = (char *)_os_log_send_and_compose_impl();
      v773[0] = 16;
      LOBYTE(v754[0]) = 0;
      if (!__nwlog_fault(v608, v773, v754)) {
        goto LABEL_1265;
      }
      if (v773[0] != 17)
      {
        if (!LOBYTE(v754[0]))
        {
          BOOL v609 = __nwlog_obj();
          os_log_type_t v610 = v773[0];
          if (!os_log_type_enabled(v609, (os_log_type_t)v773[0])) {
            goto LABEL_1265;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          uint64_t v611 = "%{public}s called with null output_handler, backtrace limit exceeded";
          goto LABEL_1264;
        }
        int v660 = (char *)__nw_create_backtrace_string();
        BOOL v609 = __nwlog_obj();
        os_log_type_t v610 = v773[0];
        BOOL v661 = os_log_type_enabled(v609, (os_log_type_t)v773[0]);
        if (!v660)
        {
          if (!v661) {
            goto LABEL_1265;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          uint64_t v611 = "%{public}s called with null output_handler, no backtrace";
          goto LABEL_1264;
        }
        if (v661)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v660;
          _os_log_impl(&dword_1830D4000, v609, v610, "%{public}s called with null output_handler, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v660);
        goto LABEL_1265;
      }
      BOOL v609 = __nwlog_obj();
      os_log_type_t v610 = v773[0];
      if (!os_log_type_enabled(v609, (os_log_type_t)v773[0])) {
        goto LABEL_1265;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
      uint64_t v611 = "%{public}s called with null output_handler";
    }
LABEL_1264:
    _os_log_impl(&dword_1830D4000, v609, v610, v611, buf, 0xCu);
    goto LABEL_1265;
  }
  if (*(_DWORD *)(v9 + 336) + *(_DWORD *)(v9 + 352) < (*(_DWORD *)(v9 + 368) + *(_DWORD *)(v9 + 364)))
  {
    os_log_type_t v121 = NWConcrete_nw_resolution_report.cache;
    if ((*(unsigned char *)(v15 + 158) & 1) == 0)
    {
      if (gLogDatapath)
      {
        long long v640 = __nwlog_obj();
        BOOL v641 = os_log_type_enabled(v640, OS_LOG_TYPE_DEBUG);
        os_log_type_t v121 = (void **)(NWConcrete_nw_resolution_report + 16);
        if (v641)
        {
          uint64_t v642 = *(void *)(v15 + 256);
          int v643 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
          if (v642) {
            LODWORD(v642) = *(_DWORD *)(v642 + 860);
          }
          int v644 = *(_DWORD *)(v15 + 424);
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v15 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v779 = (uint64_t)" ";
          *(_WORD *)int v780 = 1024;
          *(_DWORD *)&v780[2] = v643;
          *(_WORD *)&v780[6] = 1024;
          *(_DWORD *)&v780[8] = v642;
          *(_WORD *)&v780[12] = 1024;
          *(_DWORD *)&v780[14] = v644;
          _os_log_impl(&dword_1830D4000, v640, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> width allows new connection, creating", buf, 0x32u);
          os_log_type_t v121 = (void **)(NWConcrete_nw_resolution_report + 16);
        }
      }
    }
    if ((*(_WORD *)(v15 + 428) & 0x1000) == 0) {
      goto LABEL_668;
    }
    if ((*(unsigned char *)(v9 + 158) & 1) == 0)
    {
      if (*((unsigned char *)v121 + 3665))
      {
        uint64_t v695 = __nwlog_obj();
        if (os_log_type_enabled(v695, OS_LOG_TYPE_DEBUG))
        {
          int v696 = *(_DWORD *)(v9 + 372);
          int v697 = *(_DWORD *)(v15 + 424);
          *(_DWORD *)buf = 136447490;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = v9 + 74;
          *(_WORD *)&buf[22] = 2080;
          uint64_t v779 = (uint64_t)" ";
          *(_WORD *)int v780 = 1024;
          *(_DWORD *)&v780[2] = v696;
          *(_WORD *)&v780[6] = 1024;
          *(_DWORD *)&v780[8] = v697;
          *(_WORD *)&v780[12] = 2048;
          *(void *)&v780[14] = v15;
          _os_log_impl(&dword_1830D4000, v695, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u> called for stream %u (%p)", buf, 0x36u);
        }
      }
    }
    if ((*(_WORD *)(v15 + 428) & 0x1000) == 0)
    {
      __nwlog_obj();
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v15;
      uint64_t v122 = (char *)_os_log_send_and_compose_impl();
      type[0] = OS_LOG_TYPE_ERROR;
      LOBYTE(aBlock) = 0;
      if (!__nwlog_fault(v122, type, &aBlock)) {
        goto LABEL_638;
      }
      if (type[0] == OS_LOG_TYPE_FAULT)
      {
        int v123 = __nwlog_obj();
        os_log_type_t v124 = type[0];
        if (!os_log_type_enabled(v123, type[0])) {
          goto LABEL_638;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v15;
        BOOL v125 = "%{public}s stream %p not in pending list, cannot remove";
      }
      else if ((_BYTE)aBlock)
      {
        uint64_t v317 = (char *)__nw_create_backtrace_string();
        int v123 = __nwlog_obj();
        os_log_type_t v124 = type[0];
        BOOL v318 = os_log_type_enabled(v123, type[0]);
        if (v317)
        {
          if (v318)
          {
            *(_DWORD *)buf = 136446722;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2048;
            *(void *)&buf[14] = v15;
            *(_WORD *)&buf[22] = 2082;
            uint64_t v779 = (uint64_t)v317;
            _os_log_impl(&dword_1830D4000, v123, v124, "%{public}s stream %p not in pending list, cannot remove, dumping backtrace:%{public}s", buf, 0x20u);
          }
          free(v317);
          goto LABEL_638;
        }
        if (!v318)
        {
LABEL_638:
          if (v122) {
            free(v122);
          }
LABEL_640:
          os_log_type_t v121 = (void **)(NWConcrete_nw_resolution_report + 16);
          goto LABEL_668;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v15;
        BOOL v125 = "%{public}s stream %p not in pending list, cannot remove, no backtrace";
      }
      else
      {
        int v123 = __nwlog_obj();
        os_log_type_t v124 = type[0];
        if (!os_log_type_enabled(v123, type[0])) {
          goto LABEL_638;
        }
        *(_DWORD *)buf = 136446466;
        *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2048;
        *(void *)&buf[14] = v15;
        BOOL v125 = "%{public}s stream %p not in pending list, cannot remove, backtrace limit exceeded";
      }
      _os_log_impl(&dword_1830D4000, v123, v124, v125, buf, 0x16u);
      goto LABEL_638;
    }
    uint64_t v266 = *(void *)(v15 + 296);
    BOOL v267 = *(void **)(v15 + 304);
    if (v266)
    {
      *(void *)(v266 + 304) = v267;
      BOOL v267 = *(void **)(v15 + 304);
    }
    else
    {
      *(void *)(v9 + 256) = v267;
    }
    *BOOL v267 = v266;
    *(void *)(v15 + 296) = 0;
    *(void *)(v15 + 304) = 0;
    int v320 = *(_DWORD *)(v9 + 348);
    *(_DWORD *)(v9 + 348) = v320 - 1;
    if (v320)
    {
LABEL_666:
      *(_WORD *)(v15 + 428) &= ~0x1000u;
      os_log_type_t v121 = NWConcrete_nw_resolution_report.cache;
      if ((*(unsigned char *)(v15 + 158) & 1) == 0)
      {
        if (gLogDatapath)
        {
          BOOL v712 = __nwlog_obj();
          BOOL v713 = os_log_type_enabled(v712, OS_LOG_TYPE_DEBUG);
          os_log_type_t v121 = (void **)(NWConcrete_nw_resolution_report + 16);
          if (v713)
          {
            uint64_t v714 = *(void *)(v15 + 256);
            int v715 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
            if (v714) {
              LODWORD(v714) = *(_DWORD *)(v714 + 860);
            }
            int v716 = *(_DWORD *)(v15 + 424);
            int v717 = *(_DWORD *)(v9 + 348);
            *(_DWORD *)buf = 136448258;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = v15 + 74;
            *(_WORD *)&buf[22] = 2080;
            uint64_t v779 = (uint64_t)" ";
            *(_WORD *)int v780 = 1024;
            *(_DWORD *)&v780[2] = v715;
            *(_WORD *)&v780[6] = 1024;
            *(_DWORD *)&v780[8] = v714;
            *(_WORD *)&v780[12] = 1024;
            *(_DWORD *)&v780[14] = v716;
            *(_WORD *)&v780[18] = 1024;
            *(_DWORD *)&v780[20] = v716;
            *(_WORD *)&v780[24] = 2048;
            *(void *)&v780[26] = v15;
            *(_WORD *)&v780[34] = 1024;
            *(_DWORD *)&v780[36] = v717;
            _os_log_impl(&dword_1830D4000, v712, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> removed pending stream %u (%p), now have %u pending streams", buf, 0x48u);
            goto LABEL_640;
          }
        }
      }
LABEL_668:
      if (*(void *)(v15 + 32))
      {
        if ((*(unsigned char *)(v15 + 158) & 1) == 0)
        {
          if (*((unsigned char *)v121 + 3665))
          {
            BOOL v655 = __nwlog_obj();
            if (os_log_type_enabled(v655, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v656 = *(void *)(v15 + 256);
              int v657 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
              if (v656) {
                LODWORD(v656) = *(_DWORD *)(v656 + 860);
              }
              int v658 = *(_DWORD *)(v15 + 424);
              uint64_t v659 = *(void *)(v15 + 32);
              *(_DWORD *)buf = 136447746;
              *(void *)&uint8_t buf[4] = "nw_http1_establish_new_connection_for_stream";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v15 + 74;
              *(_WORD *)&buf[22] = 2080;
              uint64_t v779 = (uint64_t)" ";
              *(_WORD *)int v780 = 1024;
              *(_DWORD *)&v780[2] = v657;
              *(_WORD *)&v780[6] = 1024;
              *(_DWORD *)&v780[8] = v656;
              *(_WORD *)&v780[12] = 1024;
              *(_DWORD *)&v780[14] = v658;
              *(_WORD *)&v780[18] = 2048;
              *(void *)&v780[20] = v659;
              _os_log_impl(&dword_1830D4000, v655, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using already established output handler %p", buf, 0x3Cu);
            }
          }
        }
        int v749 = *(_OWORD **)(v15 + 32);
        if (v749)
        {
          uint64_t v403 = *(void **)(v15 + 336);
          if (v403)
          {
            long long v404 = *(void **)(v15 + 320);
            if (v404)
            {
              uint64_t v405 = malloc_type_calloc(1uLL, 0x370uLL, 0xEAFB8F1AuLL);
              if (v405) {
                goto LABEL_675;
              }
              int v665 = __nwlog_obj();
              os_log_type_enabled(v665, OS_LOG_TYPE_ERROR);
              *(_DWORD *)buf = 136446722;
              *(void *)&uint8_t buf[4] = "strict_calloc";
              *(_WORD *)&unsigned char buf[12] = 2048;
              *(void *)&buf[14] = 1;
              *(_WORD *)&buf[22] = 2048;
              uint64_t v779 = 880;
              int v666 = (void *)_os_log_send_and_compose_impl();
              BOOL result = __nwlog_abort((uint64_t)v666);
              if (!result)
              {
                free(v666);
LABEL_675:
                bzero(v405, 0x370uLL);
                if (nw_protocol_http1_identifier::onceToken != -1) {
                  dispatch_once(&nw_protocol_http1_identifier::onceToken, &__block_literal_global_40283);
                }
                *((void *)v405 + 2) = &nw_protocol_http1_identifier::http1_protocol_identifier;
                if (nw_protocol_http1_get_callbacks(void)::onceToken != -1) {
                  dispatch_once(&nw_protocol_http1_get_callbacks(void)::onceToken, &__block_literal_global_20_40084);
                }
                *((void *)v405 + 3) = &nw_protocol_http1_get_callbacks(void)::http1_protocol_callbacks;
                *((_DWORD *)v405 + 46) = 3;
                *((void *)v405 + 22) = v405;
                *((void *)v405 + 5) = v405 + 10;
                *((void *)v405 + 60) = v9;
                nw_protocol_set_output_handler((uint64_t)v405, (uint64_t)v749);
                *(void *)buf = os_retain(v403);
                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v405 + 47), buf);
                *(void *)buf = os_retain(v404);
                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v405 + 46), buf);
                *(void *)buf = nw_parameters_copy_context(v404);
                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v405 + 31), buf);
                *((void *)v405 + 24) = *(void *)(v9 + 192);
                long long v406 = (void *)*((void *)v405 + 62);
                *(void *)os_log_type_t type = MEMORY[0x1E4F143A8];
                uint64_t v763 = 0x40000000;
                uint64_t v764 = (uint64_t)___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke;
                os_log_type_t v765 = (uint64_t (*)(uint64_t, uint64_t))&__block_descriptor_tmp_43_40284;
                BOOL v766 = (void (*)(uint64_t))v405;
                *(void *)buf = nw_http_connection_create_metadata(v406, type, 0);
                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v405 + 48), buf);
                nw_http_connection_metadata_set_version(*((void **)v405 + 96), 3);
                nw_http_connection_metadata_set_shared_connection_pool_metadata(*((void **)v405 + 96), *(void **)(v9 + 312));
                *((void *)v405 + 77) = 0;
                *((void *)v405 + 78) = (char *)v405 + 616;
                *((void *)v405 + 79) = 0;
                *((void *)v405 + 80) = (char *)v405 + 632;
                *((void *)v405 + 81) = 0;
                *((void *)v405 + 82) = (char *)v405 + 648;
                *((void *)v405 + 83) = 0;
                *((void *)v405 + 84) = (char *)v405 + 664;
                *((void *)v405 + 86) = (char *)v405 + 680;
                *((void *)v405 + 85) = 0;
                nw_frame_cache_init((uint64_t)v405 + 696, (uint64_t)v405, 256, 0x40000, 16);
                uint64_t v407 = *((void *)v405 + 60);
                if (v407)
                {
                  *(_OWORD *)((char *)v405 + 360) = 0u;
                  *(_OWORD *)((char *)v405 + 376) = 0u;
                  *(_OWORD *)((char *)v405 + 392) = 0u;
                  *(_OWORD *)((char *)v405 + 408) = 0u;
                  *(_OWORD *)((char *)v405 + 424) = 0u;
                  *(_OWORD *)((char *)v405 + 440) = 0u;
                  *(_OWORD *)((char *)v405 + 328) = 0u;
                  *(_OWORD *)((char *)v405 + 344) = 0u;
                  *((void *)v405 + 37) = nw_http1_on_message_begin;
                  *((void *)v405 + 48) = nw_http1_on_message_complete;
                  *((void *)v405 + 46) = nw_http1_on_headers_complete;
                  *((void *)v405 + 59) = nw_http1_on_reset;
                  *((void *)v405 + 40) = nw_http1_on_method;
                  *((void *)v405 + 51) = nw_http1_on_method_complete;
                  *((void *)v405 + 38) = nw_http1_on_url;
                  *((void *)v405 + 49) = nw_http1_on_url_complete;
                  *((void *)v405 + 39) = nw_http1_on_status;
                  *((void *)v405 + 50) = nw_http1_on_status_complete;
                  *((void *)v405 + 42) = nw_http1_on_header_field;
                  *((void *)v405 + 53) = nw_http1_on_header_field_complete;
                  *((void *)v405 + 43) = nw_http1_on_header_value;
                  *((void *)v405 + 54) = nw_http1_on_header_value_complete;
                  *((void *)v405 + 47) = nw_http1_on_body;
                  *((void *)v405 + 57) = nw_http1_on_chunk_header;
                  *((void *)v405 + 58) = nw_http1_on_chunk_complete;
                  char v408 = *(unsigned char *)(v407 + 376);
                  *(_OWORD *)((char *)v405 + 248) = 0u;
                  *(_OWORD *)((char *)v405 + 200) = 0u;
                  *(_OWORD *)((char *)v405 + 264) = 0u;
                  *(_OWORD *)((char *)v405 + 232) = 0u;
                  *(_OWORD *)((char *)v405 + 216) = 0u;
                  if (v408) {
                    char v409 = 1;
                  }
                  else {
                    char v409 = 2;
                  }
                  *((unsigned char *)v405 + 272) = v409;
                  *((void *)v405 + 35) = 0;
                  *((void *)v405 + 36) = (char *)v405 + 296;
                  *((_WORD *)v405 + 139) = 16131;
                  *((void *)v405 + 31) = v405;
                  *((void *)v405 + 32) = 238;
                  if ((*((unsigned char *)v405 + 158) & 1) == 0)
                  {
                    uint64_t v410 = __nwlog_obj();
                    if (os_log_type_enabled(v410, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v411 = *((void *)v405 + 61);
                      int v412 = *(_DWORD *)(*((void *)v405 + 60) + 372);
                      int v413 = *((_DWORD *)v405 + 215);
                      if (v411) {
                        LODWORD(v411) = *(_DWORD *)(v411 + 424);
                      }
                      *(_DWORD *)buf = 136448258;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_log_parser_version";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = (char *)v405 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      uint64_t v779 = (uint64_t)" ";
                      *(_WORD *)int v780 = 1024;
                      *(_DWORD *)&v780[2] = v412;
                      *(_WORD *)&v780[6] = 1024;
                      *(_DWORD *)&v780[8] = v413;
                      *(_WORD *)&v780[12] = 1024;
                      *(_DWORD *)&v780[14] = v411;
                      *(_WORD *)&v780[18] = 1024;
                      *(_DWORD *)&v780[20] = 9;
                      *(_WORD *)&v780[24] = 1024;
                      *(_DWORD *)&v780[26] = 2;
                      *(_WORD *)&v780[30] = 1024;
                      *(_DWORD *)&v780[32] = 1;
                      _os_log_impl(&dword_1830D4000, v410, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> using http parser v%u.%u.%u", buf, 0x44u);
                    }
                  }
                  goto LABEL_688;
                }
                __nwlog_obj();
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                int v667 = (char *)_os_log_send_and_compose_impl();
                v773[0] = 16;
                LOBYTE(v754[0]) = 0;
                if (__nwlog_fault(v667, v773, v754))
                {
                  if (v773[0] == 17)
                  {
                    uint64_t v668 = __nwlog_obj();
                    os_log_type_t v669 = v773[0];
                    if (!os_log_type_enabled(v668, (os_log_type_t)v773[0])) {
                      goto LABEL_1382;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                    uint64_t v670 = "%{public}s called with null http1_connection->protocol_http1";
                    goto LABEL_1381;
                  }
                  if (!LOBYTE(v754[0]))
                  {
                    uint64_t v668 = __nwlog_obj();
                    os_log_type_t v669 = v773[0];
                    if (!os_log_type_enabled(v668, (os_log_type_t)v773[0])) {
                      goto LABEL_1382;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                    uint64_t v670 = "%{public}s called with null http1_connection->protocol_http1, backtrace limit exceeded";
                    goto LABEL_1381;
                  }
                  uint64_t v706 = (char *)__nw_create_backtrace_string();
                  uint64_t v668 = __nwlog_obj();
                  os_log_type_t v669 = v773[0];
                  BOOL v707 = os_log_type_enabled(v668, (os_log_type_t)v773[0]);
                  if (v706)
                  {
                    if (v707)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v706;
                      _os_log_impl(&dword_1830D4000, v668, v669, "%{public}s called with null http1_connection->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                    }
                    free(v706);
                    goto LABEL_1382;
                  }
                  if (v707)
                  {
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_connection_parser_init";
                    uint64_t v670 = "%{public}s called with null http1_connection->protocol_http1, no backtrace";
LABEL_1381:
                    _os_log_impl(&dword_1830D4000, v668, v669, v670, buf, 0xCu);
                  }
                }
LABEL_1382:
                if (v667) {
                  free(v667);
                }
LABEL_688:
                *(void *)buf = 0;
                *(void *)&buf[8] = buf;
                *(void *)&buf[16] = 0x2000000000;
                uint64_t v779 = (uint64_t)v405;
                uint64_t aBlock = MEMORY[0x1E4F143A8];
                uint64_t v756 = 0x40000000;
                os_log_type_t v757 = ___ZL26nw_http1_connection_createP11nw_protocolP17nw_protocol_http1P11nw_endpointP13nw_parameters_block_invoke_2;
                int v758 = &unk_1E5241178;
                int v759 = (uint64_t *)buf;
                *((void *)v405 + 76) = _Block_copy(&aBlock);
                _Block_object_dispose(buf, 8);
                if ((*((unsigned char *)v405 + 158) & 1) == 0)
                {
                  if (gLogDatapath)
                  {
                    uint64_t v680 = __nwlog_obj();
                    if (os_log_type_enabled(v680, OS_LOG_TYPE_DEBUG))
                    {
                      uint64_t v681 = *((void *)v405 + 61);
                      int v682 = *(_DWORD *)(*((void *)v405 + 60) + 372);
                      int v683 = *((_DWORD *)v405 + 215);
                      if (v681) {
                        LODWORD(v681) = *(_DWORD *)(v681 + 424);
                      }
                      *(_DWORD *)buf = 136447746;
                      *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = (char *)v405 + 74;
                      *(_WORD *)&buf[22] = 2080;
                      uint64_t v779 = (uint64_t)" ";
                      *(_WORD *)int v780 = 1024;
                      *(_DWORD *)&v780[2] = v682;
                      *(_WORD *)&v780[6] = 1024;
                      *(_DWORD *)&v780[8] = v683;
                      *(_WORD *)&v780[12] = 1024;
                      *(_DWORD *)&v780[14] = v681;
                      *(_WORD *)&v780[18] = 2048;
                      *(void *)&v780[20] = v405;
                      _os_log_impl(&dword_1830D4000, v680, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created %p", buf, 0x3Cu);
                    }
                  }
                }
                uint64_t v414 = (nw_path_t *)(v405 + 32);
                nw_protocol_replace_input_handler((uint64_t)v749, v15, (uint64_t)v405);
                _OWORD *v405 = *v749;
                os_log_type_t v415 = (void *)*((void *)v405 + 92);
                if (v415)
                {
                  if (!*((void *)v405 + 66))
                  {
                    BOOL v416 = (void **)(v405 + 35);
                    id v417 = nw_parameters_copy_context(*((void **)v405 + 92));
                    *(void *)buf = nw_path_copy_flow_registration(v417, (uint64_t)v405);
                    nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v405 + 35), buf);
                    uint64_t v418 = (void *)*((void *)v405 + 70);
                    if (v418)
                    {
                      id v419 = nw_path_flow_registration_copy_endpoint(v418);
                      id v420 = nw_path_flow_registration_copy_parameters(*v416);
                      *(void *)buf = nw_endpoint_copy_association_with_evaluator(v419, v420, 0);
                      nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v405 + 33), buf);
                      if (*((void *)v405 + 66))
                      {
                        *(void *)buf = nw_protocol_instance_stub_create((nw_protocol *)v405);
                        nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v405 + 34), buf);
                        nw_association_register_internal(*((void **)v405 + 66), v415, *((void **)v405 + 68), 0, 0, &__block_literal_global_69);
                        id v421 = nw_association_copy_current_path(*((void **)v405 + 66), v420);
                        if (v421)
                        {
                          uint64_t v422 = v421;
                          nw_path_t v423 = (nw_path_t)nw_path_copy_for_flow_registration(v421, *v416);
                          if (v423)
                          {
                            uint64_t v424 = v423;
                            if (*v414 != v423)
                            {
                              *(void *)buf = os_retain(v423);
                              nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v405 + 32), buf);
                            }
                            if (nw_path_has_flows(v424)) {
                              __int16 v425 = 4096;
                            }
                            else {
                              __int16 v425 = 0;
                            }
                            int v426 = *((_WORD *)v405 + 436) & 0xEFFF | (*((unsigned __int8 *)v405 + 874) << 16);
                            *((_WORD *)v405 + 436) = *((_WORD *)v405 + 436) & 0xEFFF | v425;
                            *((unsigned char *)v405 + 874) = BYTE2(v426);
                            id v427 = nw_parameters_copy_effective_proxy_config(v415);
                            if (v427)
                            {
                              int v428 = v427;
                              if (nw_path_has_proxy_config(v422, v427))
                              {
                                *(void *)buf = os_retain(v428);
                                nw::retained_ptr<nw_endpoint *>::operator=((uint64_t)(v405 + 36), buf);
                              }
                              os_release(v428);
                            }
                            os_release(v424);
                          }
                          os_release(v422);
                        }
                      }
                      if (v420) {
                        os_release(v420);
                      }
                      if (v419) {
                        os_release(v419);
                      }
                    }
                    if (v417) {
                      os_release(v417);
                    }
                  }
                  goto LABEL_713;
                }
                __nwlog_obj();
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                int v671 = (char *)_os_log_send_and_compose_impl();
                type[0] = OS_LOG_TYPE_ERROR;
                LOBYTE(aBlock) = 0;
                if (__nwlog_fault(v671, type, &aBlock))
                {
                  if (type[0] == OS_LOG_TYPE_FAULT)
                  {
                    int v672 = __nwlog_obj();
                    os_log_type_t v673 = type[0];
                    if (!os_log_type_enabled(v672, type[0])) {
                      goto LABEL_1387;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                    BOOL v674 = "%{public}s called with null parameters";
                    goto LABEL_1386;
                  }
                  if (!(_BYTE)aBlock)
                  {
                    int v672 = __nwlog_obj();
                    os_log_type_t v673 = type[0];
                    if (!os_log_type_enabled(v672, type[0])) {
                      goto LABEL_1387;
                    }
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                    BOOL v674 = "%{public}s called with null parameters, backtrace limit exceeded";
                    goto LABEL_1386;
                  }
                  int v708 = (char *)__nw_create_backtrace_string();
                  int v672 = __nwlog_obj();
                  os_log_type_t v673 = type[0];
                  BOOL v709 = os_log_type_enabled(v672, type[0]);
                  if (v708)
                  {
                    if (v709)
                    {
                      *(_DWORD *)buf = 136446466;
                      *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = v708;
                      _os_log_impl(&dword_1830D4000, v672, v673, "%{public}s called with null parameters, dumping backtrace:%{public}s", buf, 0x16u);
                    }
                    free(v708);
                    goto LABEL_1387;
                  }
                  if (v709)
                  {
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_protocol_http1_set_up_association";
                    BOOL v674 = "%{public}s called with null parameters, no backtrace";
LABEL_1386:
                    _os_log_impl(&dword_1830D4000, v672, v673, v674, buf, 0xCu);
                  }
                }
LABEL_1387:
                if (v671) {
                  free(v671);
                }
LABEL_713:
                if (*v414 && nw_path_uses_interface_type(*v414, nw_interface_type_cellular)) {
                  *((void *)v405 + 24) = 1000;
                }
                uint64_t v429 = *(unsigned int *)(v9 + 336) + 1;
                uint64_t v430 = v429 << 31 >> 31;
                *(_DWORD *)(v9 + 336) = v429;
                if (v430 == v429 && (v430 & 0x8000000000000000) == 0)
                {
LABEL_754:
                  uint64_t v460 = *(unsigned int *)(v9 + 360) + 1;
                  uint64_t v461 = v460 << 31 >> 31;
                  *(_DWORD *)(v9 + 360) = v460;
                  if (v461 == v460 && (v461 & 0x8000000000000000) == 0) {
                    goto LABEL_773;
                  }
                  __nwlog_obj();
                  uint64_t v462 = *(unsigned int *)(v9 + 360);
                  *(_DWORD *)buf = 136446978;
                  *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                  *(_WORD *)&unsigned char buf[12] = 2082;
                  *(void *)&buf[14] = "http1->next_connection_log_num";
                  *(_WORD *)&buf[22] = 2048;
                  uint64_t v779 = 1;
                  *(_WORD *)int v780 = 2048;
                  *(void *)&v780[2] = v462;
                  uint64_t v463 = (char *)_os_log_send_and_compose_impl();
                  type[0] = OS_LOG_TYPE_ERROR;
                  LOBYTE(aBlock) = 0;
                  if (__nwlog_fault(v463, type, &aBlock))
                  {
                    if (type[0] == OS_LOG_TYPE_FAULT)
                    {
                      uint64_t v464 = __nwlog_obj();
                      os_log_type_t v465 = type[0];
                      if (os_log_type_enabled(v464, type[0]))
                      {
                        uint64_t v466 = *(unsigned int *)(v9 + 360);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->next_connection_log_num";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v779 = 1;
                        *(_WORD *)int v780 = 2048;
                        *(void *)&v780[2] = v466;
                        long long v467 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_769:
                        _os_log_impl(&dword_1830D4000, v464, v465, v467, buf, 0x2Au);
                      }
                    }
                    else if ((_BYTE)aBlock)
                    {
                      long long v468 = (char *)__nw_create_backtrace_string();
                      uint64_t v464 = __nwlog_obj();
                      os_log_type_t v465 = type[0];
                      BOOL v469 = os_log_type_enabled(v464, type[0]);
                      if (v468)
                      {
                        if (v469)
                        {
                          uint64_t v470 = *(unsigned int *)(v9 + 360);
                          *(_DWORD *)buf = 136447234;
                          *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                          *(_WORD *)&unsigned char buf[12] = 2082;
                          *(void *)&buf[14] = "http1->next_connection_log_num";
                          *(_WORD *)&buf[22] = 2048;
                          uint64_t v779 = 1;
                          *(_WORD *)int v780 = 2048;
                          *(void *)&v780[2] = v470;
                          *(_WORD *)&v780[10] = 2082;
                          *(void *)&v780[12] = v468;
                          _os_log_impl(&dword_1830D4000, v464, v465, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                        }
                        free(v468);
                        goto LABEL_770;
                      }
                      if (v469)
                      {
                        uint64_t v472 = *(unsigned int *)(v9 + 360);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->next_connection_log_num";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v779 = 1;
                        *(_WORD *)int v780 = 2048;
                        *(void *)&v780[2] = v472;
                        long long v467 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                        goto LABEL_769;
                      }
                    }
                    else
                    {
                      uint64_t v464 = __nwlog_obj();
                      os_log_type_t v465 = type[0];
                      if (os_log_type_enabled(v464, type[0]))
                      {
                        uint64_t v471 = *(unsigned int *)(v9 + 360);
                        *(_DWORD *)buf = 136446978;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->next_connection_log_num";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v779 = 1;
                        *(_WORD *)int v780 = 2048;
                        *(void *)&v780[2] = v471;
                        long long v467 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                        goto LABEL_769;
                      }
                    }
                  }
LABEL_770:
                  if (v463) {
                    free(v463);
                  }
                  LODWORD(v460) = -1;
                  *(_DWORD *)(v9 + 360) = -1;
LABEL_773:
                  *((_DWORD *)v405 + 215) = v460;
                  if ((*((unsigned char *)v405 + 158) & 1) == 0)
                  {
                    if (gLogDatapath)
                    {
                      int v684 = __nwlog_obj();
                      if (os_log_type_enabled(v684, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v685 = *((void *)v405 + 61);
                        int v686 = *(_DWORD *)(*((void *)v405 + 60) + 372);
                        int v687 = *((_DWORD *)v405 + 215);
                        if (v685) {
                          LODWORD(v685) = *(_DWORD *)(v685 + 424);
                        }
                        int v688 = *(_DWORD *)(v9 + 336);
                        *(_DWORD *)buf = 136448002;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = (char *)v405 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v779 = (uint64_t)" ";
                        *(_WORD *)int v780 = 1024;
                        *(_DWORD *)&v780[2] = v686;
                        *(_WORD *)&v780[6] = 1024;
                        *(_DWORD *)&v780[8] = v687;
                        *(_WORD *)&v780[12] = 1024;
                        *(_DWORD *)&v780[14] = v685;
                        *(_WORD *)&v780[18] = 2048;
                        *(void *)&v780[20] = v405;
                        *(_WORD *)&v780[28] = 1024;
                        *(_DWORD *)&v780[30] = v688;
                        _os_log_impl(&dword_1830D4000, v684, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> added connection %p, now have %u connections", buf, 0x42u);
                      }
                    }
                  }
                  if (*(void *)(v15 + 248))
                  {
                    if (*((void *)v405 + 61))
                    {
                      __nwlog_obj();
                      uint64_t v473 = *((void *)v405 + 61);
                      *(_DWORD *)buf = 136446722;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      *(_WORD *)&unsigned char buf[12] = 2048;
                      *(void *)&buf[14] = v405;
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = v473;
                      uint64_t v474 = (char *)_os_log_send_and_compose_impl();
                      type[0] = OS_LOG_TYPE_ERROR;
                      LOBYTE(aBlock) = 0;
                      if (!__nwlog_fault(v474, type, &aBlock)) {
                        goto LABEL_801;
                      }
                      if (type[0] == OS_LOG_TYPE_FAULT)
                      {
                        __int16 v475 = __nwlog_obj();
                        os_log_type_t v476 = type[0];
                        if (!os_log_type_enabled(v475, type[0])) {
                          goto LABEL_801;
                        }
                        uint64_t v477 = *((void *)v405 + 61);
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v405;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v779 = v477;
                        int v478 = "%{public}s Connection %p already has a stream (%p)";
                      }
                      else if ((_BYTE)aBlock)
                      {
                        uint64_t v491 = (char *)__nw_create_backtrace_string();
                        __int16 v475 = __nwlog_obj();
                        os_log_type_t v476 = type[0];
                        BOOL v492 = os_log_type_enabled(v475, type[0]);
                        if (v491)
                        {
                          if (v492)
                          {
                            uint64_t v493 = *((void *)v405 + 61);
                            *(_DWORD *)buf = 136446978;
                            *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                            *(_WORD *)&unsigned char buf[12] = 2048;
                            *(void *)&buf[14] = v405;
                            *(_WORD *)&buf[22] = 2048;
                            uint64_t v779 = v493;
                            *(_WORD *)int v780 = 2082;
                            *(void *)&v780[2] = v491;
                            _os_log_impl(&dword_1830D4000, v475, v476, "%{public}s Connection %p already has a stream (%p), dumping backtrace:%{public}s", buf, 0x2Au);
                          }
                          free(v491);
                          goto LABEL_801;
                        }
                        if (!v492)
                        {
LABEL_801:
                          if (v474) {
                            free(v474);
                          }
                          goto LABEL_803;
                        }
                        uint64_t v495 = *((void *)v405 + 61);
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v405;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v779 = v495;
                        int v478 = "%{public}s Connection %p already has a stream (%p), no backtrace";
                      }
                      else
                      {
                        __int16 v475 = __nwlog_obj();
                        os_log_type_t v476 = type[0];
                        if (!os_log_type_enabled(v475, type[0])) {
                          goto LABEL_801;
                        }
                        uint64_t v494 = *((void *)v405 + 61);
                        *(_DWORD *)buf = 136446722;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2048;
                        *(void *)&buf[14] = v405;
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v779 = v494;
                        int v478 = "%{public}s Connection %p already has a stream (%p), backtrace limit exceeded";
                      }
                      _os_log_impl(&dword_1830D4000, v475, v476, v478, buf, 0x20u);
                      goto LABEL_801;
                    }
                    *(void *)(v15 + 256) = v405;
                    *((void *)v405 + 61) = v15;
                    nw_protocol_set_output_handler(v15, *((void *)v405 + 4));
                    nw_protocol_set_input_handler((uint64_t)v405, *(void *)(v15 + 48));
                    *(_OWORD *)uint64_t v15 = *v405;
                    long long v479 = *(_OWORD *)(v15 + 144);
                    long long v481 = *(_OWORD *)(v15 + 96);
                    long long v480 = *(_OWORD *)(v15 + 112);
                    v405[8] = *(_OWORD *)(v15 + 128);
                    v405[9] = v479;
                    v405[6] = v481;
                    v405[7] = v480;
                    long long v482 = *(_OWORD *)(v15 + 80);
                    v405[4] = *v746;
                    v405[5] = v482;
                    nw_http_transaction_metadata_set_connection_metadata(*(void **)(v15 + 352), *((void **)v405 + 96));
                    *((_WORD *)v405 + 436) &= 0xFFD7u;
                    *((_DWORD *)v405 + 216) = 1;
                    if ((*((unsigned char *)v405 + 158) & 1) == 0)
                    {
                      uint64_t v483 = __nwlog_obj();
                      if (os_log_type_enabled(v483, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v484 = *((void *)v405 + 61);
                        int v485 = *(_DWORD *)(*((void *)v405 + 60) + 372);
                        int v486 = *((_DWORD *)v405 + 215);
                        if (v484) {
                          LODWORD(v484) = *(_DWORD *)(v484 + 424);
                        }
                        *(_DWORD *)buf = 136447490;
                        *(void *)&uint8_t buf[4] = "nw_http1_update_connection_input_state";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = (char *)v405 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v779 = (uint64_t)" ";
                        *(_WORD *)int v780 = 1024;
                        *(_DWORD *)&v780[2] = v485;
                        *(_WORD *)&v780[6] = 1024;
                        *(_DWORD *)&v780[8] = v486;
                        *(_WORD *)&v780[12] = 1024;
                        *(_DWORD *)&v780[14] = v484;
                        _os_log_impl(&dword_1830D4000, v483, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> connection input state: reading", buf, 0x32u);
                      }
                    }
                    if ((*(unsigned char *)(v15 + 158) & 1) == 0)
                    {
                      uint64_t v487 = __nwlog_obj();
                      if (os_log_type_enabled(v487, OS_LOG_TYPE_INFO))
                      {
                        uint64_t v488 = *(void *)(v15 + 256);
                        int v489 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
                        if (v488) {
                          LODWORD(v488) = *(_DWORD *)(v488 + 860);
                        }
                        int v490 = *(_DWORD *)(v15 + 424);
                        *(_DWORD *)buf = 136448002;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v15 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v779 = (uint64_t)" ";
                        *(_WORD *)int v780 = 1024;
                        *(_DWORD *)&v780[2] = v489;
                        *(_WORD *)&v780[6] = 1024;
                        *(_DWORD *)&v780[8] = v488;
                        *(_WORD *)&v780[12] = 1024;
                        *(_DWORD *)&v780[14] = v490;
                        *(_WORD *)&v780[18] = 2048;
                        *(void *)&v780[20] = v15;
                        *(_WORD *)&v780[28] = 2048;
                        *(void *)&v780[30] = v405;
                        _os_log_impl(&dword_1830D4000, v487, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> stream (%p) now using connection %p", buf, 0x46u);
                      }
                    }
LABEL_803:
                    if ((*(unsigned char *)(v15 + 158) & 1) == 0)
                    {
                      uint64_t v496 = __nwlog_obj();
                      if (os_log_type_enabled(v496, OS_LOG_TYPE_DEBUG))
                      {
                        uint64_t v497 = *(void *)(v15 + 256);
                        int v498 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
                        if (v497) {
                          LODWORD(v497) = *(_DWORD *)(v497 + 860);
                        }
                        int v499 = *(_DWORD *)(v15 + 424);
                        *(_DWORD *)buf = 136448258;
                        *(void *)&uint8_t buf[4] = "nw_http1_start_new_connection_for_stream";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v15 + 74;
                        *(_WORD *)&buf[22] = 2080;
                        uint64_t v779 = (uint64_t)" ";
                        *(_WORD *)int v780 = 1024;
                        *(_DWORD *)&v780[2] = v498;
                        *(_WORD *)&v780[6] = 1024;
                        *(_DWORD *)&v780[8] = v497;
                        *(_WORD *)&v780[12] = 1024;
                        *(_DWORD *)&v780[14] = v499;
                        *(_WORD *)&v780[18] = 2048;
                        *(void *)&v780[20] = v405;
                        *(_WORD *)&v780[28] = 1024;
                        *(_DWORD *)&v780[30] = v499;
                        *(_WORD *)&v780[34] = 2048;
                        *(void *)&v780[36] = v15;
                        _os_log_impl(&dword_1830D4000, v496, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> created new connection %p for stream %u (%p)", buf, 0x4Cu);
                      }
                    }
                    nw_http_transaction_metadata_set_first_on_connection(*(void **)(v15 + 352));
                    uint64_t v500 = nw_protocol_copy_info((uint64_t)v749, 255);
                    v437 = v500;
                    if (v500
                      && (uint64_t v501 = *(void *)(v500 + 24), *(void *)(v500 + 16) != v501)
                      && (uint64_t v502 = *(void **)(v501 - 8)) != 0)
                    {
                      uint64_t v503 = os_retain(v502);
                      int v504 = v503;
                      if (v503 && nw_protocol_metadata_is_tls(v503))
                      {
                        int v504 = v504;
                        nw_http_connection_metadata_set_sec_metadata(*((void **)v405 + 96), v504);
                        os_release(v504);
                        nw_protocol_connect((uint64_t)v749, (uint64_t)v405);
                        goto LABEL_817;
                      }
                    }
                    else
                    {
                      int v504 = 0;
                    }
                    if (v405)
                    {
                      nw_protocol_connect((uint64_t)v749, (uint64_t)v405);
                      if (!v504) {
                        goto LABEL_818;
                      }
                      goto LABEL_817;
                    }
                    __nwlog_obj();
                    *(_DWORD *)buf = 136446210;
                    *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                    int v645 = (char *)_os_log_send_and_compose_impl();
                    type[0] = OS_LOG_TYPE_ERROR;
                    LOBYTE(aBlock) = 0;
                    if (__nwlog_fault(v645, type, &aBlock))
                    {
                      if (type[0] == OS_LOG_TYPE_FAULT)
                      {
                        int v646 = __nwlog_obj();
                        os_log_type_t v647 = type[0];
                        if (!os_log_type_enabled(v646, type[0])) {
                          goto LABEL_1333;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                        uint64_t v648 = "%{public}s called with null connection";
LABEL_1332:
                        _os_log_impl(&dword_1830D4000, v646, v647, v648, buf, 0xCu);
                        goto LABEL_1333;
                      }
                      if (!(_BYTE)aBlock)
                      {
                        int v646 = __nwlog_obj();
                        os_log_type_t v647 = type[0];
                        if (!os_log_type_enabled(v646, type[0])) {
                          goto LABEL_1333;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                        uint64_t v648 = "%{public}s called with null connection, backtrace limit exceeded";
                        goto LABEL_1332;
                      }
                      v698 = (char *)__nw_create_backtrace_string();
                      int v646 = __nwlog_obj();
                      os_log_type_t v647 = type[0];
                      BOOL v699 = os_log_type_enabled(v646, type[0]);
                      if (!v698)
                      {
                        if (!v699) {
                          goto LABEL_1333;
                        }
                        *(_DWORD *)buf = 136446210;
                        *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                        uint64_t v648 = "%{public}s called with null connection, no backtrace";
                        goto LABEL_1332;
                      }
                      if (v699)
                      {
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_get_output_protocol";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v698;
                        _os_log_impl(&dword_1830D4000, v646, v647, "%{public}s called with null connection, dumping backtrace:%{public}s", buf, 0x16u);
                      }
                      free(v698);
                    }
LABEL_1333:
                    if (v645) {
                      free(v645);
                    }
                    nw_protocol_connect((uint64_t)v749, 0);
                    if (!v504)
                    {
LABEL_818:
                      if (!v437) {
                        return 1;
                      }
                      goto LABEL_832;
                    }
LABEL_817:
                    os_release(v504);
                    goto LABEL_818;
                  }
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  int v675 = (char *)_os_log_send_and_compose_impl();
                  type[0] = OS_LOG_TYPE_ERROR;
                  LOBYTE(aBlock) = 0;
                  if (__nwlog_fault(v675, type, &aBlock))
                  {
                    if (type[0] == OS_LOG_TYPE_FAULT)
                    {
                      int v676 = __nwlog_obj();
                      os_log_type_t v677 = type[0];
                      if (!os_log_type_enabled(v676, type[0])) {
                        goto LABEL_1392;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      os_log_type_t v678 = "%{public}s called with null http1_stream->protocol_http1";
                      goto LABEL_1391;
                    }
                    if (!(_BYTE)aBlock)
                    {
                      int v676 = __nwlog_obj();
                      os_log_type_t v677 = type[0];
                      if (!os_log_type_enabled(v676, type[0])) {
                        goto LABEL_1392;
                      }
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      os_log_type_t v678 = "%{public}s called with null http1_stream->protocol_http1, backtrace limit exceeded";
                      goto LABEL_1391;
                    }
                    v710 = (char *)__nw_create_backtrace_string();
                    int v676 = __nwlog_obj();
                    os_log_type_t v677 = type[0];
                    BOOL v711 = os_log_type_enabled(v676, type[0]);
                    if (v710)
                    {
                      if (v711)
                      {
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v710;
                        _os_log_impl(&dword_1830D4000, v676, v677, "%{public}s called with null http1_stream->protocol_http1, dumping backtrace:%{public}s", buf, 0x16u);
                      }
                      free(v710);
                      goto LABEL_1392;
                    }
                    if (v711)
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      os_log_type_t v678 = "%{public}s called with null http1_stream->protocol_http1, no backtrace";
LABEL_1391:
                      _os_log_impl(&dword_1830D4000, v676, v677, v678, buf, 0xCu);
                    }
                  }
LABEL_1392:
                  if (v675) {
                    free(v675);
                  }
                  goto LABEL_803;
                }
                __nwlog_obj();
                uint64_t v431 = *(unsigned int *)(v9 + 336);
                *(_DWORD *)buf = 136446978;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = "http1->connections_count";
                *(_WORD *)&buf[22] = 2048;
                uint64_t v779 = 1;
                *(_WORD *)int v780 = 2048;
                *(void *)&v780[2] = v431;
                BOOL v432 = (char *)_os_log_send_and_compose_impl();
                type[0] = OS_LOG_TYPE_ERROR;
                LOBYTE(aBlock) = 0;
                if (__nwlog_fault(v432, type, &aBlock))
                {
                  if (type[0] == OS_LOG_TYPE_FAULT)
                  {
                    uint64_t v433 = __nwlog_obj();
                    os_log_type_t v434 = type[0];
                    if (os_log_type_enabled(v433, type[0]))
                    {
                      uint64_t v435 = *(unsigned int *)(v9 + 336);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->connections_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = 1;
                      *(_WORD *)int v780 = 2048;
                      *(void *)&v780[2] = v435;
                      uint64_t v436 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_750:
                      _os_log_impl(&dword_1830D4000, v433, v434, v436, buf, 0x2Au);
                    }
                  }
                  else if ((_BYTE)aBlock)
                  {
                    uint64_t v452 = (char *)__nw_create_backtrace_string();
                    uint64_t v433 = __nwlog_obj();
                    os_log_type_t v434 = type[0];
                    BOOL v453 = os_log_type_enabled(v433, type[0]);
                    if (v452)
                    {
                      if (v453)
                      {
                        uint64_t v454 = *(unsigned int *)(v9 + 336);
                        *(_DWORD *)buf = 136447234;
                        *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = "http1->connections_count";
                        *(_WORD *)&buf[22] = 2048;
                        uint64_t v779 = 1;
                        *(_WORD *)int v780 = 2048;
                        *(void *)&v780[2] = v454;
                        *(_WORD *)&v780[10] = 2082;
                        *(void *)&v780[12] = v452;
                        _os_log_impl(&dword_1830D4000, v433, v434, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
                      }
                      free(v452);
                      goto LABEL_751;
                    }
                    if (v453)
                    {
                      uint64_t v459 = *(unsigned int *)(v9 + 336);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->connections_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = 1;
                      *(_WORD *)int v780 = 2048;
                      *(void *)&v780[2] = v459;
                      uint64_t v436 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
                      goto LABEL_750;
                    }
                  }
                  else
                  {
                    uint64_t v433 = __nwlog_obj();
                    os_log_type_t v434 = type[0];
                    if (os_log_type_enabled(v433, type[0]))
                    {
                      uint64_t v458 = *(unsigned int *)(v9 + 336);
                      *(_DWORD *)buf = 136446978;
                      *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                      *(_WORD *)&unsigned char buf[12] = 2082;
                      *(void *)&buf[14] = "http1->connections_count";
                      *(_WORD *)&buf[22] = 2048;
                      uint64_t v779 = 1;
                      *(_WORD *)int v780 = 2048;
                      *(void *)&v780[2] = v458;
                      uint64_t v436 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
                      goto LABEL_750;
                    }
                  }
                }
LABEL_751:
                if (v432) {
                  free(v432);
                }
                *(_DWORD *)(v9 + 336) = -1;
                goto LABEL_754;
              }
LABEL_1395:
              __break(1u);
              return result;
            }
            __nwlog_obj();
            *(_DWORD *)buf = 136446210;
            *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
            os_log_type_t v651 = (char *)_os_log_send_and_compose_impl();
            v773[0] = 16;
            LOBYTE(v754[0]) = 0;
            if (__nwlog_fault(v651, v773, v754))
            {
              if (v773[0] == 17)
              {
                os_log_type_t v652 = __nwlog_obj();
                os_log_type_t v653 = v773[0];
                if (!os_log_type_enabled(v652, (os_log_type_t)v773[0])) {
                  goto LABEL_1344;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                v654 = "%{public}s called with null parameters";
                goto LABEL_1343;
              }
              if (!LOBYTE(v754[0]))
              {
                os_log_type_t v652 = __nwlog_obj();
                os_log_type_t v653 = v773[0];
                if (!os_log_type_enabled(v652, (os_log_type_t)v773[0])) {
                  goto LABEL_1344;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                v654 = "%{public}s called with null parameters, backtrace limit exceeded";
                goto LABEL_1343;
              }
              os_log_type_t v702 = (char *)__nw_create_backtrace_string();
              os_log_type_t v652 = __nwlog_obj();
              os_log_type_t v653 = v773[0];
              BOOL v705 = os_log_type_enabled(v652, (os_log_type_t)v773[0]);
              if (!v702)
              {
                if (!v705) {
                  goto LABEL_1344;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                v654 = "%{public}s called with null parameters, no backtrace";
                goto LABEL_1343;
              }
              if (v705)
              {
                *(_DWORD *)buf = 136446466;
                *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
                *(_WORD *)&unsigned char buf[12] = 2082;
                *(void *)&buf[14] = v702;
                v704 = "%{public}s called with null parameters, dumping backtrace:%{public}s";
                goto LABEL_1215;
              }
              goto LABEL_1216;
            }
LABEL_1344:
            if (!v651) {
              goto LABEL_1346;
            }
            goto LABEL_1345;
          }
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          os_log_type_t v651 = (char *)_os_log_send_and_compose_impl();
          v773[0] = 16;
          LOBYTE(v754[0]) = 0;
          if (!__nwlog_fault(v651, v773, v754)) {
            goto LABEL_1344;
          }
          if (v773[0] != 17)
          {
            if (!LOBYTE(v754[0]))
            {
              os_log_type_t v652 = __nwlog_obj();
              os_log_type_t v653 = v773[0];
              if (!os_log_type_enabled(v652, (os_log_type_t)v773[0])) {
                goto LABEL_1344;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              v654 = "%{public}s called with null endpoint, backtrace limit exceeded";
              goto LABEL_1343;
            }
            os_log_type_t v702 = (char *)__nw_create_backtrace_string();
            os_log_type_t v652 = __nwlog_obj();
            os_log_type_t v653 = v773[0];
            BOOL v703 = os_log_type_enabled(v652, (os_log_type_t)v773[0]);
            if (!v702)
            {
              if (!v703) {
                goto LABEL_1344;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              v654 = "%{public}s called with null endpoint, no backtrace";
              goto LABEL_1343;
            }
            if (v703)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v702;
              v704 = "%{public}s called with null endpoint, dumping backtrace:%{public}s";
LABEL_1215:
              _os_log_impl(&dword_1830D4000, v652, v653, v704, buf, 0x16u);
            }
LABEL_1216:
            free(v702);
            if (!v651)
            {
LABEL_1346:
              __nwlog_obj();
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
              int v730 = (char *)_os_log_send_and_compose_impl();
              type[0] = OS_LOG_TYPE_ERROR;
              LOBYTE(aBlock) = 0;
              if (!__nwlog_fault(v730, type, &aBlock)) {
                goto LABEL_1360;
              }
              if (type[0] == OS_LOG_TYPE_FAULT)
              {
                BOOL v731 = __nwlog_obj();
                os_log_type_t v732 = type[0];
                if (!os_log_type_enabled(v731, type[0])) {
                  goto LABEL_1360;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                int v733 = "%{public}s called with null http1_connection";
              }
              else if ((_BYTE)aBlock)
              {
                int v734 = (char *)__nw_create_backtrace_string();
                BOOL v731 = __nwlog_obj();
                os_log_type_t v732 = type[0];
                BOOL v735 = os_log_type_enabled(v731, type[0]);
                if (v734)
                {
                  if (v735)
                  {
                    *(_DWORD *)buf = 136446466;
                    *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                    *(_WORD *)&unsigned char buf[12] = 2082;
                    *(void *)&buf[14] = v734;
                    _os_log_impl(&dword_1830D4000, v731, v732, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                  }
                  free(v734);
LABEL_1360:
                  if (v730) {
                    free(v730);
                  }
                  __nwlog_obj();
                  *(_DWORD *)buf = 136446210;
                  *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                  v736 = (char *)_os_log_send_and_compose_impl();
                  type[0] = OS_LOG_TYPE_ERROR;
                  LOBYTE(aBlock) = 0;
                  if (!__nwlog_fault(v736, type, &aBlock)) {
                    goto LABEL_1376;
                  }
                  if (type[0] == OS_LOG_TYPE_FAULT)
                  {
                    uint64_t v737 = __nwlog_obj();
                    os_log_type_t v738 = type[0];
                    if (os_log_type_enabled(v737, type[0]))
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      int v739 = "%{public}s called with null http1_connection";
LABEL_1375:
                      _os_log_impl(&dword_1830D4000, v737, v738, v739, buf, 0xCu);
                    }
                  }
                  else if ((_BYTE)aBlock)
                  {
                    v740 = (char *)__nw_create_backtrace_string();
                    uint64_t v737 = __nwlog_obj();
                    os_log_type_t v738 = type[0];
                    BOOL v741 = os_log_type_enabled(v737, type[0]);
                    if (v740)
                    {
                      if (v741)
                      {
                        *(_DWORD *)buf = 136446466;
                        *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                        *(_WORD *)&unsigned char buf[12] = 2082;
                        *(void *)&buf[14] = v740;
                        _os_log_impl(&dword_1830D4000, v737, v738, "%{public}s called with null http1_connection, dumping backtrace:%{public}s", buf, 0x16u);
                      }
                      free(v740);
                      goto LABEL_1376;
                    }
                    if (v741)
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      int v739 = "%{public}s called with null http1_connection, no backtrace";
                      goto LABEL_1375;
                    }
                  }
                  else
                  {
                    uint64_t v737 = __nwlog_obj();
                    os_log_type_t v738 = type[0];
                    if (os_log_type_enabled(v737, type[0]))
                    {
                      *(_DWORD *)buf = 136446210;
                      *(void *)&uint8_t buf[4] = "nw_http1_stream_associate_with_connection";
                      int v739 = "%{public}s called with null http1_connection, backtrace limit exceeded";
                      goto LABEL_1375;
                    }
                  }
LABEL_1376:
                  if (v736) {
                    free(v736);
                  }
                  uint64_t v405 = 0;
                  goto LABEL_803;
                }
                if (!v735) {
                  goto LABEL_1360;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                int v733 = "%{public}s called with null http1_connection, no backtrace";
              }
              else
              {
                BOOL v731 = __nwlog_obj();
                os_log_type_t v732 = type[0];
                if (!os_log_type_enabled(v731, type[0])) {
                  goto LABEL_1360;
                }
                *(_DWORD *)buf = 136446210;
                *(void *)&uint8_t buf[4] = "nw_http1_add_connection_for_output_handler";
                int v733 = "%{public}s called with null http1_connection, backtrace limit exceeded";
              }
              _os_log_impl(&dword_1830D4000, v731, v732, v733, buf, 0xCu);
              goto LABEL_1360;
            }
LABEL_1345:
            free(v651);
            goto LABEL_1346;
          }
          os_log_type_t v652 = __nwlog_obj();
          os_log_type_t v653 = v773[0];
          if (!os_log_type_enabled(v652, (os_log_type_t)v773[0])) {
            goto LABEL_1344;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          v654 = "%{public}s called with null endpoint";
        }
        else
        {
          __nwlog_obj();
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          os_log_type_t v651 = (char *)_os_log_send_and_compose_impl();
          v773[0] = 16;
          LOBYTE(v754[0]) = 0;
          if (!__nwlog_fault(v651, v773, v754)) {
            goto LABEL_1344;
          }
          if (v773[0] != 17)
          {
            if (!LOBYTE(v754[0]))
            {
              os_log_type_t v652 = __nwlog_obj();
              os_log_type_t v653 = v773[0];
              if (!os_log_type_enabled(v652, (os_log_type_t)v773[0])) {
                goto LABEL_1344;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              v654 = "%{public}s called with null output_handler, backtrace limit exceeded";
              goto LABEL_1343;
            }
            int v700 = (char *)__nw_create_backtrace_string();
            os_log_type_t v652 = __nwlog_obj();
            os_log_type_t v653 = v773[0];
            BOOL v701 = os_log_type_enabled(v652, (os_log_type_t)v773[0]);
            if (!v700)
            {
              if (!v701) {
                goto LABEL_1344;
              }
              *(_DWORD *)buf = 136446210;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              v654 = "%{public}s called with null output_handler, no backtrace";
              goto LABEL_1343;
            }
            if (v701)
            {
              *(_DWORD *)buf = 136446466;
              *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
              *(_WORD *)&unsigned char buf[12] = 2082;
              *(void *)&buf[14] = v700;
              _os_log_impl(&dword_1830D4000, v652, v653, "%{public}s called with null output_handler, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v700);
            goto LABEL_1344;
          }
          os_log_type_t v652 = __nwlog_obj();
          os_log_type_t v653 = v773[0];
          if (!os_log_type_enabled(v652, (os_log_type_t)v773[0])) {
            goto LABEL_1344;
          }
          *(_DWORD *)buf = 136446210;
          *(void *)&uint8_t buf[4] = "nw_http1_connection_create";
          v654 = "%{public}s called with null output_handler";
        }
LABEL_1343:
        _os_log_impl(&dword_1830D4000, v652, v653, v654, buf, 0xCu);
        goto LABEL_1344;
      }
      v437 = nw_parameters_copy_default_protocol_stack(*(nw_parameters_t *)(v15 + 320));
      uint64_t v769 = 0;
      int v770 = &v769;
      uint64_t v771 = 0x2000000000;
      char v772 = 0;
      *(void *)os_log_type_t type = 0;
      uint64_t v763 = (uint64_t)type;
      uint64_t v764 = 0x3802000000;
      os_log_type_t v765 = __Block_byref_object_copy__40335;
      BOOL v766 = __Block_byref_object_dispose__40336;
      object = 0;
      v768 |= 1u;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v756 = 0x40000000;
      os_log_type_t v757 = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke;
      int v758 = &unk_1E5241318;
      int v759 = &v769;
      uint64_t v760 = type;
      uint64_t v761 = v15;
      nw_protocol_stack_iterate_application_protocols(v437, &aBlock);
      if (*(void *)(v763 + 40)) {
        goto LABEL_727;
      }
      os_log_type_t v438 = nw_protocol_stack_copy_transport_protocol(v437);
      BOOL is_quic = nw_protocol_options_is_quic(v438);
      if (v438) {
        os_release(v438);
      }
      if (!is_quic)
      {
LABEL_727:
        *(void *)buf = nw_parameters_shallow_copy(*(void **)(v15 + 320));
        nw::retained_ptr<nw_endpoint *>::operator=(v15 + 320, buf);
      }
      else
      {
        uint64_t v440 = *(void **)(v15 + 320);
        *(void *)buf = MEMORY[0x1E4F143A8];
        *(void *)&buf[8] = 0x40000000;
        *(void *)&buf[16] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_2;
        uint64_t v779 = (uint64_t)&unk_1E5241368;
        *(void *)int v780 = type;
        *(void *)&v780[8] = &v769;
        *(void *)&v780[16] = v15;
        *(void *)&v780[24] = v9;
        nw_parameters_enumerate_transformed_parameters(v440, buf);
      }
      int v441 = *(void **)(v763 + 40);
      if (v441)
      {
        BOOL v442 = v441;
        sec_protocol_options_clear_tls_application_protocols();
        sec_protocol_options_add_tls_application_protocol(v442, "http/1.1");
        os_release(v442);
      }
      *((unsigned char *)v770 + 24) = 0;
      os_log_type_t v443 = *(void **)(v15 + 320);
      v754[0] = MEMORY[0x1E4F143A8];
      v754[1] = 0x40000000;
      v754[2] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_77;
      v754[3] = &unk_1E5241390;
      v754[4] = &v769;
      v754[5] = v15;
      nw_parameters_remove_application_protocol_options_from_protocol_stack(v443, v754);
      *(_WORD *)(v15 + 428) |= 8u;
      uint64_t v444 = *(unsigned int *)(v9 + 352) + 1;
      uint64_t v445 = v444 << 31 >> 31;
      *(_DWORD *)(v9 + 352) = v444;
      if (v445 == v444 && (v445 & 0x8000000000000000) == 0)
      {
LABEL_828:
        uint64_t v507 = *(void *)(v15 + 312);
        uint64_t v508 = *(void **)(v15 + 264);
        *(void *)os_log_type_t v773 = MEMORY[0x1E4F143A8];
        *(void *)&v773[8] = 0x40000000;
        *(void *)&v773[16] = ___ZL44nw_http1_establish_new_connection_for_streamP17nw_protocol_http1P15nw_http1_stream_block_invoke_80;
        uint64_t v774 = (uint64_t)&unk_1E52413B8;
        *(void *)v775 = v507;
        nw_queue_context_async(v508, v773);
        _Block_object_dispose(type, 8);
        if ((v768 & 1) != 0 && object) {
          os_release(object);
        }
        _Block_object_dispose(&v769, 8);
        if (!v437) {
          return 1;
        }
LABEL_832:
        os_release(v437);
        return 1;
      }
      __nwlog_obj();
      uint64_t v446 = *(unsigned int *)(v9 + 352);
      *(_DWORD *)os_log_type_t v773 = 136446978;
      *(void *)&v773[4] = "nw_http1_establish_new_connection_for_stream";
      *(_WORD *)&v773[12] = 2082;
      *(void *)&v773[14] = "http1->pending_output_handler_count";
      *(_WORD *)&v773[22] = 2048;
      uint64_t v774 = 1;
      *(_WORD *)v775 = 2048;
      *(void *)&v775[2] = v446;
      uint64_t v447 = (char *)_os_log_send_and_compose_impl();
      os_log_type_t v753 = OS_LOG_TYPE_ERROR;
      char v752 = 0;
      if (__nwlog_fault(v447, &v753, &v752))
      {
        if (v753 == OS_LOG_TYPE_FAULT)
        {
          uint64_t v448 = __nwlog_obj();
          os_log_type_t v449 = v753;
          if (os_log_type_enabled(v448, v753))
          {
            uint64_t v450 = *(unsigned int *)(v9 + 352);
            *(_DWORD *)os_log_type_t v773 = 136446978;
            *(void *)&v773[4] = "nw_http1_establish_new_connection_for_stream";
            *(_WORD *)&v773[12] = 2082;
            *(void *)&v773[14] = "http1->pending_output_handler_count";
            *(_WORD *)&v773[22] = 2048;
            uint64_t v774 = 1;
            *(_WORD *)v775 = 2048;
            *(void *)&v775[2] = v450;
            uint64_t v451 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_824:
            _os_log_impl(&dword_1830D4000, v448, v449, v451, v773, 0x2Au);
          }
        }
        else if (v752)
        {
          uint64_t v455 = (char *)__nw_create_backtrace_string();
          uint64_t v448 = __nwlog_obj();
          os_log_type_t v449 = v753;
          BOOL v456 = os_log_type_enabled(v448, v753);
          if (v455)
          {
            if (v456)
            {
              uint64_t v457 = *(unsigned int *)(v9 + 352);
              *(_DWORD *)os_log_type_t v773 = 136447234;
              *(void *)&v773[4] = "nw_http1_establish_new_connection_for_stream";
              *(_WORD *)&v773[12] = 2082;
              *(void *)&v773[14] = "http1->pending_output_handler_count";
              *(_WORD *)&v773[22] = 2048;
              uint64_t v774 = 1;
              *(_WORD *)v775 = 2048;
              *(void *)&v775[2] = v457;
              __int16 v776 = 2082;
              int v777 = v455;
              _os_log_impl(&dword_1830D4000, v448, v449, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", v773, 0x34u);
            }
            free(v455);
            goto LABEL_825;
          }
          if (v456)
          {
            uint64_t v506 = *(unsigned int *)(v9 + 352);
            *(_DWORD *)os_log_type_t v773 = 136446978;
            *(void *)&v773[4] = "nw_http1_establish_new_connection_for_stream";
            *(_WORD *)&v773[12] = 2082;
            *(void *)&v773[14] = "http1->pending_output_handler_count";
            *(_WORD *)&v773[22] = 2048;
            uint64_t v774 = 1;
            *(_WORD *)v775 = 2048;
            *(void *)&v775[2] = v506;
            uint64_t v451 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
            goto LABEL_824;
          }
        }
        else
        {
          uint64_t v448 = __nwlog_obj();
          os_log_type_t v449 = v753;
          if (os_log_type_enabled(v448, v753))
          {
            uint64_t v505 = *(unsigned int *)(v9 + 352);
            *(_DWORD *)os_log_type_t v773 = 136446978;
            *(void *)&v773[4] = "nw_http1_establish_new_connection_for_stream";
            *(_WORD *)&v773[12] = 2082;
            *(void *)&v773[14] = "http1->pending_output_handler_count";
            *(_WORD *)&v773[22] = 2048;
            uint64_t v774 = 1;
            *(_WORD *)v775 = 2048;
            *(void *)&v775[2] = v505;
            uint64_t v451 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
            goto LABEL_824;
          }
        }
      }
LABEL_825:
      if (v447) {
        free(v447);
      }
      *(_DWORD *)(v9 + 352) = -1;
      goto LABEL_828;
    }
    __nwlog_obj();
    uint64_t v321 = *(unsigned int *)(v9 + 348);
    *(_DWORD *)buf = 136446978;
    *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = "http1->pending_stream_count";
    *(_WORD *)&buf[22] = 2048;
    uint64_t v779 = 1;
    *(_WORD *)int v780 = 2048;
    *(void *)&v780[2] = v321;
    int v322 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock) = 0;
    if (__nwlog_fault(v322, type, &aBlock))
    {
      if (type[0] == OS_LOG_TYPE_FAULT)
      {
        int v323 = __nwlog_obj();
        os_log_type_t v324 = type[0];
        if (os_log_type_enabled(v323, type[0]))
        {
          uint64_t v325 = *(unsigned int *)(v9 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v779 = 1;
          *(_WORD *)int v780 = 2048;
          *(void *)&v780[2] = v325;
          uint64_t v326 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu";
LABEL_662:
          _os_log_impl(&dword_1830D4000, v323, v324, v326, buf, 0x2Au);
        }
      }
      else if ((_BYTE)aBlock)
      {
        int v380 = (char *)__nw_create_backtrace_string();
        int v323 = __nwlog_obj();
        os_log_type_t v324 = type[0];
        BOOL v381 = os_log_type_enabled(v323, type[0]);
        if (v380)
        {
          if (v381)
          {
            uint64_t v382 = *(unsigned int *)(v9 + 348);
            *(_DWORD *)buf = 136447234;
            *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
            *(_WORD *)&unsigned char buf[12] = 2082;
            *(void *)&buf[14] = "http1->pending_stream_count";
            *(_WORD *)&buf[22] = 2048;
            uint64_t v779 = 1;
            *(_WORD *)int v780 = 2048;
            *(void *)&v780[2] = v382;
            *(_WORD *)&v780[10] = 2082;
            *(void *)&v780[12] = v380;
            _os_log_impl(&dword_1830D4000, v323, v324, "%{public}s Underflow: %{public}s, decrement %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
          }
          free(v380);
          goto LABEL_663;
        }
        if (v381)
        {
          uint64_t v402 = *(unsigned int *)(v9 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v779 = 1;
          *(_WORD *)int v780 = 2048;
          *(void *)&v780[2] = v402;
          uint64_t v326 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, no backtrace";
          goto LABEL_662;
        }
      }
      else
      {
        int v323 = __nwlog_obj();
        os_log_type_t v324 = type[0];
        if (os_log_type_enabled(v323, type[0]))
        {
          uint64_t v393 = *(unsigned int *)(v9 + 348);
          *(_DWORD *)buf = 136446978;
          *(void *)&uint8_t buf[4] = "nw_http1_remove_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v779 = 1;
          *(_WORD *)int v780 = 2048;
          *(void *)&v780[2] = v393;
          uint64_t v326 = "%{public}s Underflow: %{public}s, decrement %llu, result %llu, backtrace limit exceeded";
          goto LABEL_662;
        }
      }
    }
LABEL_663:
    if (v322) {
      free(v322);
    }
    *(_DWORD *)(v9 + 348) = 0;
    goto LABEL_666;
  }
  if ((*(unsigned char *)(v15 + 158) & 1) == 0)
  {
    BOOL v235 = __nwlog_obj();
    if (os_log_type_enabled(v235, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v236 = *(void *)(v15 + 256);
      int v237 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
      if (v236) {
        LODWORD(v236) = *(_DWORD *)(v236 + 860);
      }
      int v238 = *(_DWORD *)(v15 + 424);
      int v239 = *(_DWORD *)(v9 + 364);
      *(_DWORD *)buf = 136447746;
      *(void *)&uint8_t buf[4] = "nw_http1_create_connection_for_stream_if_allowed";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v15 + 74;
      *(_WORD *)&buf[22] = 2080;
      uint64_t v779 = (uint64_t)" ";
      *(_WORD *)int v780 = 1024;
      *(_DWORD *)&v780[2] = v237;
      *(_WORD *)&v780[6] = 1024;
      *(_DWORD *)&v780[8] = v236;
      *(_WORD *)&v780[12] = 1024;
      *(_DWORD *)&v780[14] = v238;
      *(_WORD *)&v780[18] = 1024;
      *(_DWORD *)&v780[20] = v239;
      uint64_t v98 = "%{public}s %{public}s%s<i%u:c%u:s%u> already at max connection width %u, cannot create new connection";
      int v99 = v235;
      uint32_t v100 = 56;
      goto LABEL_144;
    }
  }
LABEL_145:
  if ((*(unsigned char *)(v15 + 158) & 1) == 0)
  {
    int v101 = __nwlog_obj();
    if (os_log_type_enabled(v101, OS_LOG_TYPE_INFO))
    {
      uint64_t v102 = *(void *)(v15 + 256);
      int v103 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
      if (v102) {
        LODWORD(v102) = *(_DWORD *)(v102 + 860);
      }
      int v104 = *(_DWORD *)(v15 + 424);
      *(_DWORD *)buf = 136447490;
      *(void *)&uint8_t buf[4] = "nw_protocol_http1_connect";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v15 + 74;
      *(_WORD *)&buf[22] = 2080;
      uint64_t v779 = (uint64_t)" ";
      *(_WORD *)int v780 = 1024;
      *(_DWORD *)&v780[2] = v103;
      *(_WORD *)&v780[6] = 1024;
      *(_DWORD *)&v780[8] = v102;
      *(_WORD *)&v780[12] = 1024;
      *(_DWORD *)&v780[14] = v104;
      _os_log_impl(&dword_1830D4000, v101, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> no available connections, waiting", buf, 0x32u);
    }
  }
  if ((*(unsigned char *)(v15 + 158) & 1) == 0)
  {
    if (gLogDatapath)
    {
      int v567 = __nwlog_obj();
      if (os_log_type_enabled(v567, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v568 = *(void *)(v15 + 256);
        int v569 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
        if (v568) {
          LODWORD(v568) = *(_DWORD *)(v568 + 860);
        }
        int v570 = *(_DWORD *)(v15 + 424);
        *(_DWORD *)buf = 136447746;
        *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v15 + 74;
        *(_WORD *)&buf[22] = 2080;
        uint64_t v779 = (uint64_t)" ";
        *(_WORD *)int v780 = 1024;
        *(_DWORD *)&v780[2] = v569;
        *(_WORD *)&v780[6] = 1024;
        *(_DWORD *)&v780[8] = v568;
        *(_WORD *)&v780[12] = 1024;
        *(_DWORD *)&v780[14] = v570;
        *(_WORD *)&v780[18] = 2048;
        *(void *)&v780[20] = v15;
        _os_log_impl(&dword_1830D4000, v567, OS_LOG_TYPE_DEBUG, "%{public}s %{public}s%s<i%u:c%u:s%u> called for stream (%p)", buf, 0x3Cu);
      }
    }
  }
  if ((*(_WORD *)(v15 + 428) & 0x1000) != 0)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
    *(_WORD *)&unsigned char buf[12] = 2048;
    *(void *)&buf[14] = v15;
    int v117 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(aBlock) = 0;
    if (!__nwlog_fault(v117, type, &aBlock)) {
      goto LABEL_364;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      uint64_t v118 = __nwlog_obj();
      os_log_type_t v119 = type[0];
      if (!os_log_type_enabled(v118, type[0])) {
        goto LABEL_364;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v15;
      uint64_t v120 = "%{public}s stream %p already in pending list, cannot add again";
    }
    else if ((_BYTE)aBlock)
    {
      int v129 = (char *)__nw_create_backtrace_string();
      uint64_t v118 = __nwlog_obj();
      os_log_type_t v119 = type[0];
      BOOL v130 = os_log_type_enabled(v118, type[0]);
      if (v129)
      {
        if (v130)
        {
          *(_DWORD *)buf = 136446722;
          *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v15;
          *(_WORD *)&buf[22] = 2082;
          uint64_t v779 = (uint64_t)v129;
          _os_log_impl(&dword_1830D4000, v118, v119, "%{public}s stream %p already in pending list, cannot add again, dumping backtrace:%{public}s", buf, 0x20u);
        }
        free(v129);
        goto LABEL_364;
      }
      if (!v130)
      {
LABEL_364:
        if (v117) {
          free(v117);
        }
        return 1;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v15;
      uint64_t v120 = "%{public}s stream %p already in pending list, cannot add again, no backtrace";
    }
    else
    {
      uint64_t v118 = __nwlog_obj();
      os_log_type_t v119 = type[0];
      if (!os_log_type_enabled(v118, type[0])) {
        goto LABEL_364;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v15;
      uint64_t v120 = "%{public}s stream %p already in pending list, cannot add again, backtrace limit exceeded";
    }
    _os_log_impl(&dword_1830D4000, v118, v119, v120, buf, 0x16u);
    goto LABEL_364;
  }
  *(void *)(v15 + 296) = 0;
  uint64_t v105 = *(uint64_t **)(v9 + 256);
  *(void *)(v15 + 304) = v105;
  uint64_t *v105 = v15;
  *(void *)(v9 + 256) = v15 + 296;
  uint64_t v106 = *(unsigned int *)(v9 + 348) + 1;
  uint64_t v107 = v106 << 31 >> 31;
  *(_DWORD *)(v9 + 348) = v106;
  if (v107 == v106 && (v107 & 0x8000000000000000) == 0) {
    goto LABEL_404;
  }
  __nwlog_obj();
  uint64_t v108 = *(unsigned int *)(v9 + 348);
  *(_DWORD *)buf = 136446978;
  *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
  *(_WORD *)&unsigned char buf[12] = 2082;
  *(void *)&buf[14] = "http1->pending_stream_count";
  *(_WORD *)&buf[22] = 2048;
  uint64_t v779 = 1;
  *(_WORD *)int v780 = 2048;
  *(void *)&v780[2] = v108;
  int v109 = (char *)_os_log_send_and_compose_impl();
  type[0] = OS_LOG_TYPE_ERROR;
  LOBYTE(aBlock) = 0;
  if (__nwlog_fault(v109, type, &aBlock))
  {
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      uint64_t v110 = __nwlog_obj();
      os_log_type_t v111 = type[0];
      if (os_log_type_enabled(v110, type[0]))
      {
        uint64_t v112 = *(unsigned int *)(v9 + 348);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->pending_stream_count";
        *(_WORD *)&buf[22] = 2048;
        uint64_t v779 = 1;
        *(_WORD *)int v780 = 2048;
        *(void *)&v780[2] = v112;
        int v113 = "%{public}s Overflow: %{public}s, increment %llu, result %llu";
LABEL_400:
        _os_log_impl(&dword_1830D4000, v110, v111, v113, buf, 0x2Au);
      }
    }
    else if ((_BYTE)aBlock)
    {
      id v232 = (char *)__nw_create_backtrace_string();
      uint64_t v110 = __nwlog_obj();
      os_log_type_t v111 = type[0];
      BOOL v233 = os_log_type_enabled(v110, type[0]);
      if (v232)
      {
        if (v233)
        {
          uint64_t v234 = *(unsigned int *)(v9 + 348);
          *(_DWORD *)buf = 136447234;
          *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = "http1->pending_stream_count";
          *(_WORD *)&buf[22] = 2048;
          uint64_t v779 = 1;
          *(_WORD *)int v780 = 2048;
          *(void *)&v780[2] = v234;
          *(_WORD *)&v780[10] = 2082;
          *(void *)&v780[12] = v232;
          _os_log_impl(&dword_1830D4000, v110, v111, "%{public}s Overflow: %{public}s, increment %llu, result %llu, dumping backtrace:%{public}s", buf, 0x34u);
        }
        free(v232);
        goto LABEL_401;
      }
      if (v233)
      {
        uint64_t v268 = *(unsigned int *)(v9 + 348);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->pending_stream_count";
        *(_WORD *)&buf[22] = 2048;
        uint64_t v779 = 1;
        *(_WORD *)int v780 = 2048;
        *(void *)&v780[2] = v268;
        int v113 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, no backtrace";
        goto LABEL_400;
      }
    }
    else
    {
      uint64_t v110 = __nwlog_obj();
      os_log_type_t v111 = type[0];
      if (os_log_type_enabled(v110, type[0]))
      {
        uint64_t v247 = *(unsigned int *)(v9 + 348);
        *(_DWORD *)buf = 136446978;
        *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = "http1->pending_stream_count";
        *(_WORD *)&buf[22] = 2048;
        uint64_t v779 = 1;
        *(_WORD *)int v780 = 2048;
        *(void *)&v780[2] = v247;
        int v113 = "%{public}s Overflow: %{public}s, increment %llu, result %llu, backtrace limit exceeded";
        goto LABEL_400;
      }
    }
  }
LABEL_401:
  if (v109) {
    free(v109);
  }
  *(_DWORD *)(v9 + 348) = -1;
LABEL_404:
  *(_WORD *)(v15 + 428) |= 0x1000u;
  BOOL result = 1;
  if ((*(unsigned char *)(v15 + 158) & 1) == 0 && gLogDatapath)
  {
    os_log_type_t v269 = __nwlog_obj();
    if (!os_log_type_enabled(v269, OS_LOG_TYPE_DEBUG)) {
      return 1;
    }
    uint64_t v270 = *(void *)(v15 + 256);
    int v271 = *(_DWORD *)(*(void *)(v15 + 248) + 372);
    if (v270) {
      LODWORD(v270) = *(_DWORD *)(v270 + 860);
    }
    int v272 = *(_DWORD *)(v15 + 424);
    int v273 = *(_DWORD *)(v9 + 348);
    *(_DWORD *)buf = 136448258;
    *(void *)&uint8_t buf[4] = "nw_http1_add_pending_stream";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v15 + 74;
    *(_WORD *)&buf[22] = 2080;
    uint64_t v779 = (uint64_t)" ";
    *(_WORD *)int v780 = 1024;
    *(_DWORD *)&v780[2] = v271;
    *(_WORD *)&v780[6] = 1024;
    *(_DWORD *)&v780[8] = v270;
    *(_WORD *)&v780[12] = 1024;
    *(_DWORD *)&v780[14] = v272;
    *(_WORD *)&v780[18] = 1024;
    *(_DWORD *)&v780[20] = v272;
    *(_WORD *)&v780[24] = 2048;
    *(void *)&v780[26] = v15;
    *(_WORD *)&v780[34] = 1024;
    *(_DWORD *)&v780[36] = v273;
    int v24 = "%{public}s %{public}s%s<i%u:c%u:s%u> added stream %u (%p), now have %u pending streams";
    uint64_t v28 = v269;
    uint32_t v29 = 72;
    goto LABEL_43;
  }
  return result;
}

void ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke(uint64_t a1, void *a2, int a3)
{
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  switch(a3)
  {
    case 0:
      id outbound_message = nw_http_transaction_metadata_get_outbound_message(a2);
      id v6 = nw_http_metadata_copy_request(outbound_message);
      id v7 = nw_http_metadata_copy_response(outbound_message);
      if (v6)
      {
        v63[0] = MEMORY[0x1E4F143A8];
        v63[1] = 0x40000000;
        v63[2] = ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_2;
        v63[3] = &__block_descriptor_tmp_22_41529;
        v63[4] = *(void *)(a1 + 32);
        id v8 = v6;
        uint64_t v9 = v63;
        _nw_http_request_access_method((uint64_t)v8, v9);
      }
      if (!v7) {
        goto LABEL_31;
      }
      id v10 = v7;
      int status_code = _nw_http_response_get_status_code();

      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        goto LABEL_30;
      }
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      int v12 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        goto LABEL_30;
      }
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = v13 + 74;
      uint64_t v15 = *(void *)(v13 + 256);
      int v16 = *(_DWORD *)(*(void *)(v13 + 248) + 372);
      if (v15) {
        LODWORD(v15) = *(_DWORD *)(v15 + 860);
      }
      int v17 = *(_DWORD *)(v13 + 424);
      *(_DWORD *)buf = 136447746;
      __int16 v65 = "nw_protocol_http1_connect_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v14;
      __int16 v68 = 2080;
      id v69 = " ";
      __int16 v70 = 1024;
      int v71 = v16;
      __int16 v72 = 1024;
      int v73 = v15;
      __int16 v74 = 1024;
      int v75 = v17;
      __int16 v76 = 1024;
      LODWORD(v77) = status_code;
      uint64_t v18 = "%{public}s %{public}s%s<i%u:c%u:s%u> sending response header {status=%hu}";
      goto LABEL_29;
    case 1:
      uint64_t outbound_body_size = nw_http_transaction_metadata_get_outbound_body_size(a2);
      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        return;
      }
      uint64_t v20 = outbound_body_size;
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      uint64_t v21 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        return;
      }
      uint64_t v22 = *(void *)(a1 + 32);
      uint64_t v23 = v22 + 74;
      uint64_t v24 = *(void *)(v22 + 256);
      int v25 = *(_DWORD *)(*(void *)(v22 + 248) + 372);
      if (v24) {
        LODWORD(v24) = *(_DWORD *)(v24 + 860);
      }
      int v26 = *(_DWORD *)(v22 + 424);
      *(_DWORD *)buf = 136447746;
      __int16 v65 = "nw_protocol_http1_connect_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v23;
      __int16 v68 = 2080;
      id v69 = " ";
      __int16 v70 = 1024;
      int v71 = v25;
      __int16 v72 = 1024;
      int v73 = v24;
      __int16 v74 = 1024;
      int v75 = v26;
      __int16 v76 = 2048;
      uint64_t v77 = v20;
      int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> finished sending {body_bytes=%llu}";
      goto LABEL_42;
    case 2:
      id outbound_message = nw_http_transaction_metadata_get_inbound_message(a2);
      id v6 = nw_http_metadata_copy_request(outbound_message);
      id v28 = nw_http_metadata_copy_response(outbound_message);
      if (v6)
      {
        v62[0] = MEMORY[0x1E4F143A8];
        v62[1] = 0x40000000;
        v62[2] = ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_23;
        v62[3] = &__block_descriptor_tmp_24_41532;
        v62[4] = *(void *)(a1 + 32);
        id v29 = v6;
        unint64_t v30 = v62;
        _nw_http_request_access_method((uint64_t)v29, v30);
      }
      if (v28)
      {
        id v10 = v28;
        int v31 = _nw_http_response_get_status_code();

        if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
        {
          if (__nwlog_http_log::onceToken != -1) {
            dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
          }
          int v12 = ghttpLogObj;
          if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
          {
            uint64_t v32 = *(void *)(a1 + 32);
            uint64_t v33 = v32 + 74;
            uint64_t v34 = *(void *)(v32 + 256);
            int v35 = *(_DWORD *)(*(void *)(v32 + 248) + 372);
            if (v34) {
              LODWORD(v34) = *(_DWORD *)(v34 + 860);
            }
            int v36 = *(_DWORD *)(v32 + 424);
            *(_DWORD *)buf = 136447746;
            __int16 v65 = "nw_protocol_http1_connect_block_invoke";
            __int16 v66 = 2082;
            uint64_t v67 = v33;
            __int16 v68 = 2080;
            id v69 = " ";
            __int16 v70 = 1024;
            int v71 = v35;
            __int16 v72 = 1024;
            int v73 = v34;
            __int16 v74 = 1024;
            int v75 = v36;
            __int16 v76 = 1024;
            LODWORD(v77) = v31;
            uint64_t v18 = "%{public}s %{public}s%s<i%u:c%u:s%u> receiving response header {status=%hu}";
LABEL_29:
            _os_log_impl(&dword_1830D4000, v12, OS_LOG_TYPE_INFO, v18, buf, 0x38u);
          }
        }
LABEL_30:
        os_release(v10);
      }
LABEL_31:
      if (v6) {
        os_release(v6);
      }
      if (!outbound_message) {
        return;
      }
      char v37 = outbound_message;
      goto LABEL_64;
    case 3:
      uint64_t inbound_body_size = nw_http_transaction_metadata_get_inbound_body_size(a2);
      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        return;
      }
      uint64_t v39 = inbound_body_size;
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      uint64_t v21 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        return;
      }
      uint64_t v40 = *(void *)(a1 + 32);
      uint64_t v41 = v40 + 74;
      uint64_t v42 = *(void *)(v40 + 256);
      int v43 = *(_DWORD *)(*(void *)(v40 + 248) + 372);
      if (v42) {
        LODWORD(v42) = *(_DWORD *)(v42 + 860);
      }
      int v44 = *(_DWORD *)(v40 + 424);
      *(_DWORD *)buf = 136447746;
      __int16 v65 = "nw_protocol_http1_connect_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v41;
      __int16 v68 = 2080;
      id v69 = " ";
      __int16 v70 = 1024;
      int v71 = v43;
      __int16 v72 = 1024;
      int v73 = v42;
      __int16 v74 = 1024;
      int v75 = v44;
      __int16 v76 = 2048;
      uint64_t v77 = v39;
      int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> finished receiving {body_bytes=%llu}";
LABEL_42:
      _os_log_impl(&dword_1830D4000, v21, OS_LOG_TYPE_INFO, v27, buf, 0x3Cu);
      return;
    case 4:
      v57[0] = MEMORY[0x1E4F143A8];
      v57[1] = 0x40000000;
      int v58 = ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_25;
      id v59 = &__block_descriptor_tmp_27_41535;
      uint64_t v45 = *(void *)(a1 + 32);
      uint64_t v60 = a2;
      uint64_t v61 = v45;
      id v46 = nw_http_transaction_metadata_get_outbound_message(a2);
      char v47 = v46;
      if (v46)
      {
        id v48 = nw_http_metadata_copy_request(v46);
        id v49 = nw_http_metadata_copy_response(v47);
        id inbound_message = nw_http_transaction_metadata_get_inbound_message(a2);
        if (!inbound_message) {
          goto LABEL_52;
        }
        if (v48)
        {
          if (v49) {
            goto LABEL_53;
          }
          goto LABEL_51;
        }
      }
      else
      {
        id v51 = nw_http_transaction_metadata_get_inbound_message(a2);
        id v49 = 0;
        if (!v51)
        {
          uint64_t v52 = 0;
          id inbound_message = 0;
          goto LABEL_67;
        }
        id inbound_message = v51;
      }
      id v48 = nw_http_metadata_copy_request(inbound_message);
      if (v49) {
        goto LABEL_53;
      }
LABEL_51:
      id v49 = nw_http_metadata_copy_response(inbound_message);
LABEL_52:
      if (!v49)
      {
        uint64_t v52 = 0;
        if (!v48) {
          goto LABEL_67;
        }
LABEL_56:
        v55[0] = MEMORY[0x1E4F143A8];
        v55[1] = 0x40000000;
        v55[2] = ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_28;
        v55[3] = &unk_1E5241068;
        v55[4] = v57;
        __int16 v56 = v52;
        id v53 = v48;
        int v54 = v55;
        _nw_http_request_access_method((uint64_t)v53, v54);

        if (!inbound_message) {
          goto LABEL_58;
        }
        goto LABEL_57;
      }
LABEL_53:
      id v49 = v49;
      uint64_t v52 = _nw_http_response_get_status_code();

      if (v48) {
        goto LABEL_56;
      }
LABEL_67:
      v58((uint64_t)v57, (uint64_t)"", v52);
      id v53 = 0;
      if (inbound_message) {
LABEL_57:
      }
        os_release(inbound_message);
LABEL_58:
      if (v47) {
        os_release(v47);
      }
      if (v49) {
        os_release(v49);
      }
      if (v53)
      {
        char v37 = v53;
LABEL_64:
        os_release(v37);
      }
      return;
    default:
      return;
  }
}

void ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_32(uint64_t a1, void *a2, int a3)
{
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  switch(a3)
  {
    case 0:
      id outbound_message = nw_http_transaction_metadata_get_outbound_message(a2);
      id v6 = nw_http_metadata_copy_request(outbound_message);
      id v7 = nw_http_metadata_copy_response(outbound_message);
      if (v6)
      {
        v63[0] = MEMORY[0x1E4F143A8];
        v63[1] = 0x40000000;
        v63[2] = ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_2_33;
        v63[3] = &__block_descriptor_tmp_34_41518;
        v63[4] = *(void *)(a1 + 32);
        id v8 = v6;
        uint64_t v9 = v63;
        _nw_http_request_access_method((uint64_t)v8, v9);
      }
      if (!v7) {
        goto LABEL_31;
      }
      id v10 = v7;
      int status_code = _nw_http_response_get_status_code();

      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        goto LABEL_30;
      }
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      int v12 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        goto LABEL_30;
      }
      uint64_t v13 = *(void *)(a1 + 32);
      uint64_t v14 = v13 + 74;
      uint64_t v15 = *(void *)(v13 + 256);
      int v16 = *(_DWORD *)(*(void *)(v13 + 248) + 372);
      if (v15) {
        LODWORD(v15) = *(_DWORD *)(v15 + 860);
      }
      int v17 = *(_DWORD *)(v13 + 424);
      *(_DWORD *)buf = 136447746;
      __int16 v65 = "nw_protocol_http1_connect_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v14;
      __int16 v68 = 2080;
      id v69 = " ";
      __int16 v70 = 1024;
      int v71 = v16;
      __int16 v72 = 1024;
      int v73 = v15;
      __int16 v74 = 1024;
      int v75 = v17;
      __int16 v76 = 1024;
      LODWORD(v77) = status_code;
      uint64_t v18 = "%{public}s %{public}s%s<i%u:c%u:s%u> sending response header {status=%hu}";
      goto LABEL_29;
    case 1:
      uint64_t outbound_body_size = nw_http_transaction_metadata_get_outbound_body_size(a2);
      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        return;
      }
      uint64_t v20 = outbound_body_size;
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      uint64_t v21 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        return;
      }
      uint64_t v22 = *(void *)(a1 + 32);
      uint64_t v23 = v22 + 74;
      uint64_t v24 = *(void *)(v22 + 256);
      int v25 = *(_DWORD *)(*(void *)(v22 + 248) + 372);
      if (v24) {
        LODWORD(v24) = *(_DWORD *)(v24 + 860);
      }
      int v26 = *(_DWORD *)(v22 + 424);
      *(_DWORD *)buf = 136447746;
      __int16 v65 = "nw_protocol_http1_connect_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v23;
      __int16 v68 = 2080;
      id v69 = " ";
      __int16 v70 = 1024;
      int v71 = v25;
      __int16 v72 = 1024;
      int v73 = v24;
      __int16 v74 = 1024;
      int v75 = v26;
      __int16 v76 = 2048;
      uint64_t v77 = v20;
      int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> finished sending {body_bytes=%llu}";
      goto LABEL_42;
    case 2:
      id outbound_message = nw_http_transaction_metadata_get_inbound_message(a2);
      id v6 = nw_http_metadata_copy_request(outbound_message);
      id v28 = nw_http_metadata_copy_response(outbound_message);
      if (v6)
      {
        v62[0] = MEMORY[0x1E4F143A8];
        v62[1] = 0x40000000;
        v62[2] = ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_35;
        v62[3] = &__block_descriptor_tmp_36_41521;
        v62[4] = *(void *)(a1 + 32);
        id v29 = v6;
        unint64_t v30 = v62;
        _nw_http_request_access_method((uint64_t)v29, v30);
      }
      if (v28)
      {
        id v10 = v28;
        int v31 = _nw_http_response_get_status_code();

        if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
        {
          if (__nwlog_http_log::onceToken != -1) {
            dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
          }
          int v12 = ghttpLogObj;
          if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
          {
            uint64_t v32 = *(void *)(a1 + 32);
            uint64_t v33 = v32 + 74;
            uint64_t v34 = *(void *)(v32 + 256);
            int v35 = *(_DWORD *)(*(void *)(v32 + 248) + 372);
            if (v34) {
              LODWORD(v34) = *(_DWORD *)(v34 + 860);
            }
            int v36 = *(_DWORD *)(v32 + 424);
            *(_DWORD *)buf = 136447746;
            __int16 v65 = "nw_protocol_http1_connect_block_invoke";
            __int16 v66 = 2082;
            uint64_t v67 = v33;
            __int16 v68 = 2080;
            id v69 = " ";
            __int16 v70 = 1024;
            int v71 = v35;
            __int16 v72 = 1024;
            int v73 = v34;
            __int16 v74 = 1024;
            int v75 = v36;
            __int16 v76 = 1024;
            LODWORD(v77) = v31;
            uint64_t v18 = "%{public}s %{public}s%s<i%u:c%u:s%u> receiving response header {status=%hu}";
LABEL_29:
            _os_log_impl(&dword_1830D4000, v12, OS_LOG_TYPE_INFO, v18, buf, 0x38u);
          }
        }
LABEL_30:
        os_release(v10);
      }
LABEL_31:
      if (v6) {
        os_release(v6);
      }
      if (!outbound_message) {
        return;
      }
      char v37 = outbound_message;
      goto LABEL_64;
    case 3:
      uint64_t inbound_body_size = nw_http_transaction_metadata_get_inbound_body_size(a2);
      if (*(unsigned char *)(*(void *)(a1 + 32) + 158)) {
        return;
      }
      uint64_t v39 = inbound_body_size;
      if (__nwlog_http_log::onceToken != -1) {
        dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
      }
      uint64_t v21 = ghttpLogObj;
      if (!os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO)) {
        return;
      }
      uint64_t v40 = *(void *)(a1 + 32);
      uint64_t v41 = v40 + 74;
      uint64_t v42 = *(void *)(v40 + 256);
      int v43 = *(_DWORD *)(*(void *)(v40 + 248) + 372);
      if (v42) {
        LODWORD(v42) = *(_DWORD *)(v42 + 860);
      }
      int v44 = *(_DWORD *)(v40 + 424);
      *(_DWORD *)buf = 136447746;
      __int16 v65 = "nw_protocol_http1_connect_block_invoke";
      __int16 v66 = 2082;
      uint64_t v67 = v41;
      __int16 v68 = 2080;
      id v69 = " ";
      __int16 v70 = 1024;
      int v71 = v43;
      __int16 v72 = 1024;
      int v73 = v42;
      __int16 v74 = 1024;
      int v75 = v44;
      __int16 v76 = 2048;
      uint64_t v77 = v39;
      int v27 = "%{public}s %{public}s%s<i%u:c%u:s%u> finished receiving {body_bytes=%llu}";
LABEL_42:
      _os_log_impl(&dword_1830D4000, v21, OS_LOG_TYPE_INFO, v27, buf, 0x3Cu);
      return;
    case 4:
      v57[0] = MEMORY[0x1E4F143A8];
      v57[1] = 0x40000000;
      int v58 = ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_37;
      id v59 = &__block_descriptor_tmp_38_41524;
      uint64_t v45 = *(void *)(a1 + 32);
      uint64_t v60 = a2;
      uint64_t v61 = v45;
      id v46 = nw_http_transaction_metadata_get_outbound_message(a2);
      char v47 = v46;
      if (v46)
      {
        id v48 = nw_http_metadata_copy_request(v46);
        id v49 = nw_http_metadata_copy_response(v47);
        id inbound_message = nw_http_transaction_metadata_get_inbound_message(a2);
        if (!inbound_message) {
          goto LABEL_52;
        }
        if (v48)
        {
          if (v49) {
            goto LABEL_53;
          }
          goto LABEL_51;
        }
      }
      else
      {
        id v51 = nw_http_transaction_metadata_get_inbound_message(a2);
        id v49 = 0;
        if (!v51)
        {
          uint64_t v52 = 0;
          id inbound_message = 0;
          goto LABEL_67;
        }
        id inbound_message = v51;
      }
      id v48 = nw_http_metadata_copy_request(inbound_message);
      if (v49) {
        goto LABEL_53;
      }
LABEL_51:
      id v49 = nw_http_metadata_copy_response(inbound_message);
LABEL_52:
      if (!v49)
      {
        uint64_t v52 = 0;
        if (!v48) {
          goto LABEL_67;
        }
LABEL_56:
        v55[0] = MEMORY[0x1E4F143A8];
        v55[1] = 0x40000000;
        v55[2] = ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_39;
        v55[3] = &unk_1E5241110;
        v55[4] = v57;
        __int16 v56 = v52;
        id v53 = v48;
        int v54 = v55;
        _nw_http_request_access_method((uint64_t)v53, v54);

        if (!inbound_message) {
          goto LABEL_58;
        }
        goto LABEL_57;
      }
LABEL_53:
      id v49 = v49;
      uint64_t v52 = _nw_http_response_get_status_code();

      if (v48) {
        goto LABEL_56;
      }
LABEL_67:
      v58((uint64_t)v57, (uint64_t)"", v52);
      id v53 = 0;
      if (inbound_message) {
LABEL_57:
      }
        os_release(inbound_message);
LABEL_58:
      if (v47) {
        os_release(v47);
      }
      if (v49) {
        os_release(v49);
      }
      if (v53)
      {
        char v37 = v53;
LABEL_64:
        os_release(v37);
      }
      return;
    default:
      return;
  }
}

void ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_2_33(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    uint64_t v4 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = v5 + 74;
      uint64_t v7 = *(void *)(v5 + 256);
      int v8 = *(_DWORD *)(*(void *)(v5 + 248) + 372);
      if (v7) {
        LODWORD(v7) = *(_DWORD *)(v7 + 860);
      }
      int v9 = *(_DWORD *)(v5 + 424);
      int v10 = 136447746;
      uint64_t v11 = "nw_protocol_http1_connect_block_invoke_2";
      __int16 v12 = 2082;
      uint64_t v13 = v6;
      __int16 v14 = 2080;
      uint64_t v15 = " ";
      __int16 v16 = 1024;
      int v17 = v8;
      __int16 v18 = 1024;
      int v19 = v7;
      __int16 v20 = 1024;
      int v21 = v9;
      __int16 v22 = 2082;
      uint64_t v23 = a2;
      _os_log_impl(&dword_1830D4000, v4, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> sending request header {method=\"%{public}s\"}", (uint8_t *)&v10, 0x3Cu);
    }
  }
}

void ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_35(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    uint64_t v4 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = v5 + 74;
      uint64_t v7 = *(void *)(v5 + 256);
      int v8 = *(_DWORD *)(*(void *)(v5 + 248) + 372);
      if (v7) {
        LODWORD(v7) = *(_DWORD *)(v7 + 860);
      }
      int v9 = *(_DWORD *)(v5 + 424);
      int v10 = 136447746;
      uint64_t v11 = "nw_protocol_http1_connect_block_invoke";
      __int16 v12 = 2082;
      uint64_t v13 = v6;
      __int16 v14 = 2080;
      uint64_t v15 = " ";
      __int16 v16 = 1024;
      int v17 = v8;
      __int16 v18 = 1024;
      int v19 = v7;
      __int16 v20 = 1024;
      int v21 = v9;
      __int16 v22 = 2082;
      uint64_t v23 = a2;
      _os_log_impl(&dword_1830D4000, v4, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> receiving request header {method=\"%{public}s\"}", (uint8_t *)&v10, 0x3Cu);
    }
  }
}

void ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_37(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v75 = *MEMORY[0x1E4F143B8];
  int start_reason = nw_http_transaction_metadata_get_start_reason(*(void **)(a1 + 32));
  uint64_t start_time = nw_http_transaction_metadata_get_start_time(*(void **)(a1 + 32));
  uint64_t end_time = nw_http_transaction_metadata_get_end_time(*(void **)(a1 + 32));
  outbound_message_uint64_t start_time = nw_http_transaction_metadata_get_outbound_message_start_time(*(void **)(a1 + 32));
  outbound_message_uint64_t end_time = nw_http_transaction_metadata_get_outbound_message_end_time(*(void **)(a1 + 32));
  inbound_message_uint64_t start_time = nw_http_transaction_metadata_get_inbound_message_start_time(*(void **)(a1 + 32));
  inbound_message_uint64_t end_time = nw_http_transaction_metadata_get_inbound_message_end_time(*(void **)(a1 + 32));
  uint64_t outbound_body_size = nw_http_transaction_metadata_get_outbound_body_size(*(void **)(a1 + 32));
  uint64_t inbound_body_size = nw_http_transaction_metadata_get_inbound_body_size(*(void **)(a1 + 32));
  if ((*(unsigned char *)(*(void *)(a1 + 40) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    __int16 v12 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_DEFAULT))
    {
      int v39 = a3;
      uint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = *(void *)(v13 + 256);
      if (v14) {
        int v34 = *(_DWORD *)(v14 + 860);
      }
      else {
        int v34 = 0;
      }
      uint64_t v15 = inbound_message_end_time;
      if ((start_reason - 1) > 2) {
        __int16 v16 = "initial";
      }
      else {
        __int16 v16 = off_1E52492C0[start_reason - 1];
      }
      int v35 = v16;
      int v37 = *(_DWORD *)(*(void *)(v13 + 248) + 372);
      int v17 = *(_DWORD *)(v13 + 424);
      int v18 = -1;
      if (start_time && end_time)
      {
        unint64_t v19 = nw_delta_nanos(start_time, end_time);
        uint64_t v15 = inbound_message_end_time;
        if (v19 > 0xF423FFFFFFFFFLL) {
          int v18 = -1;
        }
        else {
          int v18 = v19 / 0xF4240;
        }
      }
      LODWORD(v20) = -1;
      int v38 = v17;
      if (start_time)
      {
        if (outbound_message_start_time)
        {
          unint64_t v21 = nw_delta_nanos(start_time, outbound_message_start_time);
          uint64_t v15 = inbound_message_end_time;
          unint64_t v20 = v21 / 0xF4240;
          if (v21 > 0xF423FFFFFFFFFLL) {
            LODWORD(v20) = -1;
          }
        }
      }
      int v22 = -1;
      int v36 = v20;
      if (outbound_message_start_time && outbound_message_end_time)
      {
        unint64_t v23 = nw_delta_nanos(outbound_message_start_time, outbound_message_end_time);
        uint64_t v15 = inbound_message_end_time;
        if (v23 > 0xF423FFFFFFFFFLL) {
          int v22 = -1;
        }
        else {
          int v22 = v23 / 0xF4240;
        }
      }
      int v24 = v18;
      uint64_t v25 = v13 + 74;
      int v26 = -1;
      if (start_time)
      {
        uint64_t v28 = outbound_body_size;
        uint64_t v27 = inbound_body_size;
        if (inbound_message_start_time)
        {
          unint64_t v29 = nw_delta_nanos(start_time, inbound_message_start_time);
          uint64_t v15 = inbound_message_end_time;
          if (v29 > 0xF423FFFFFFFFFLL) {
            int v26 = -1;
          }
          else {
            int v26 = v29 / 0xF4240;
          }
        }
        LODWORD(v30) = -1;
        if (inbound_message_start_time) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v28 = outbound_body_size;
        uint64_t v27 = inbound_body_size;
        LODWORD(v30) = -1;
        if (inbound_message_start_time)
        {
LABEL_31:
          uint64_t v31 = a2;
          int v32 = v34;
          if (v15)
          {
            unint64_t v33 = nw_delta_nanos(inbound_message_start_time, v15);
            unint64_t v30 = v33 / 0xF4240;
            if (v33 > 0xF423FFFFFFFFFLL) {
              LODWORD(v30) = -1;
            }
          }
          goto LABEL_36;
        }
      }
      uint64_t v31 = a2;
      int v32 = v34;
LABEL_36:
      *(_DWORD *)buf = 136450050;
      int v44 = "nw_protocol_http1_connect_block_invoke";
      __int16 v45 = 2082;
      uint64_t v46 = v25;
      __int16 v47 = 2080;
      id v48 = " ";
      __int16 v49 = 1024;
      int v50 = v37;
      __int16 v51 = 1024;
      int v52 = v32;
      __int16 v53 = 1024;
      int v54 = v38;
      __int16 v55 = 2080;
      __int16 v56 = v35;
      __int16 v57 = 1024;
      int v58 = v24;
      __int16 v59 = 2082;
      uint64_t v60 = v31;
      __int16 v61 = 1024;
      int v62 = v39;
      __int16 v63 = 1024;
      int v64 = v36;
      __int16 v65 = 1024;
      int v66 = v22;
      __int16 v67 = 1024;
      int v68 = v26;
      __int16 v69 = 1024;
      int v70 = v30;
      __int16 v71 = 2048;
      uint64_t v72 = v28;
      __int16 v73 = 2048;
      uint64_t v74 = v27;
      _os_log_impl(&dword_1830D4000, v12, OS_LOG_TYPE_DEFAULT, "%{public}s %{public}s%s<i%u:c%u:s%u> transaction summary {start_reason=\"%s\", duration_ms=%d, request_method=\"%{public}s\", response_status=%hu, outbound_start_ms=%d, outbound_duration_ms=%d, inbound_start_ms=%d, inbound_duration_ms=%d, outbound_body_bytes=%llu, inbound_body_bytes=%llu}", buf, 0x7Eu);
    }
  }
}

uint64_t ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_39(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2, *(unsigned __int16 *)(a1 + 40));
}

void ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    uint64_t v4 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = v5 + 74;
      uint64_t v7 = *(void *)(v5 + 256);
      int v8 = *(_DWORD *)(*(void *)(v5 + 248) + 372);
      if (v7) {
        LODWORD(v7) = *(_DWORD *)(v7 + 860);
      }
      int v9 = *(_DWORD *)(v5 + 424);
      int v10 = 136447746;
      uint64_t v11 = "nw_protocol_http1_connect_block_invoke_2";
      __int16 v12 = 2082;
      uint64_t v13 = v6;
      __int16 v14 = 2080;
      uint64_t v15 = " ";
      __int16 v16 = 1024;
      int v17 = v8;
      __int16 v18 = 1024;
      int v19 = v7;
      __int16 v20 = 1024;
      int v21 = v9;
      __int16 v22 = 2082;
      uint64_t v23 = a2;
      _os_log_impl(&dword_1830D4000, v4, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> sending request header {method=\"%{public}s\"}", (uint8_t *)&v10, 0x3Cu);
    }
  }
}

void ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_23(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(*(void *)(a1 + 32) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    uint64_t v4 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = v5 + 74;
      uint64_t v7 = *(void *)(v5 + 256);
      int v8 = *(_DWORD *)(*(void *)(v5 + 248) + 372);
      if (v7) {
        LODWORD(v7) = *(_DWORD *)(v7 + 860);
      }
      int v9 = *(_DWORD *)(v5 + 424);
      int v10 = 136447746;
      uint64_t v11 = "nw_protocol_http1_connect_block_invoke";
      __int16 v12 = 2082;
      uint64_t v13 = v6;
      __int16 v14 = 2080;
      uint64_t v15 = " ";
      __int16 v16 = 1024;
      int v17 = v8;
      __int16 v18 = 1024;
      int v19 = v7;
      __int16 v20 = 1024;
      int v21 = v9;
      __int16 v22 = 2082;
      uint64_t v23 = a2;
      _os_log_impl(&dword_1830D4000, v4, OS_LOG_TYPE_INFO, "%{public}s %{public}s%s<i%u:c%u:s%u> receiving request header {method=\"%{public}s\"}", (uint8_t *)&v10, 0x3Cu);
    }
  }
}

void ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_25(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v75 = *MEMORY[0x1E4F143B8];
  int start_reason = nw_http_transaction_metadata_get_start_reason(*(void **)(a1 + 32));
  uint64_t start_time = nw_http_transaction_metadata_get_start_time(*(void **)(a1 + 32));
  uint64_t end_time = nw_http_transaction_metadata_get_end_time(*(void **)(a1 + 32));
  outbound_message_uint64_t start_time = nw_http_transaction_metadata_get_outbound_message_start_time(*(void **)(a1 + 32));
  outbound_message_uint64_t end_time = nw_http_transaction_metadata_get_outbound_message_end_time(*(void **)(a1 + 32));
  inbound_message_uint64_t start_time = nw_http_transaction_metadata_get_inbound_message_start_time(*(void **)(a1 + 32));
  inbound_message_uint64_t end_time = nw_http_transaction_metadata_get_inbound_message_end_time(*(void **)(a1 + 32));
  uint64_t outbound_body_size = nw_http_transaction_metadata_get_outbound_body_size(*(void **)(a1 + 32));
  uint64_t inbound_body_size = nw_http_transaction_metadata_get_inbound_body_size(*(void **)(a1 + 32));
  if ((*(unsigned char *)(*(void *)(a1 + 40) + 158) & 1) == 0)
  {
    if (__nwlog_http_log::onceToken != -1) {
      dispatch_once(&__nwlog_http_log::onceToken, &__block_literal_global_36);
    }
    __int16 v12 = ghttpLogObj;
    if (os_log_type_enabled((os_log_t)ghttpLogObj, OS_LOG_TYPE_DEFAULT))
    {
      int v39 = a3;
      uint64_t v13 = *(void *)(a1 + 40);
      uint64_t v14 = *(void *)(v13 + 256);
      if (v14) {
        int v34 = *(_DWORD *)(v14 + 860);
      }
      else {
        int v34 = 0;
      }
      uint64_t v15 = inbound_message_end_time;
      if ((start_reason - 1) > 2) {
        __int16 v16 = "initial";
      }
      else {
        __int16 v16 = off_1E52492C0[start_reason - 1];
      }
      int v35 = v16;
      int v37 = *(_DWORD *)(*(void *)(v13 + 248) + 372);
      int v17 = *(_DWORD *)(v13 + 424);
      int v18 = -1;
      if (start_time && end_time)
      {
        unint64_t v19 = nw_delta_nanos(start_time, end_time);
        uint64_t v15 = inbound_message_end_time;
        if (v19 > 0xF423FFFFFFFFFLL) {
          int v18 = -1;
        }
        else {
          int v18 = v19 / 0xF4240;
        }
      }
      LODWORD(v20) = -1;
      int v38 = v17;
      if (start_time)
      {
        if (outbound_message_start_time)
        {
          unint64_t v21 = nw_delta_nanos(start_time, outbound_message_start_time);
          uint64_t v15 = inbound_message_end_time;
          unint64_t v20 = v21 / 0xF4240;
          if (v21 > 0xF423FFFFFFFFFLL) {
            LODWORD(v20) = -1;
          }
        }
      }
      int v22 = -1;
      int v36 = v20;
      if (outbound_message_start_time && outbound_message_end_time)
      {
        unint64_t v23 = nw_delta_nanos(outbound_message_start_time, outbound_message_end_time);
        uint64_t v15 = inbound_message_end_time;
        if (v23 > 0xF423FFFFFFFFFLL) {
          int v22 = -1;
        }
        else {
          int v22 = v23 / 0xF4240;
        }
      }
      int v24 = v18;
      uint64_t v25 = v13 + 74;
      int v26 = -1;
      if (start_time)
      {
        uint64_t v28 = outbound_body_size;
        uint64_t v27 = inbound_body_size;
        if (inbound_message_start_time)
        {
          unint64_t v29 = nw_delta_nanos(start_time, inbound_message_start_time);
          uint64_t v15 = inbound_message_end_time;
          if (v29 > 0xF423FFFFFFFFFLL) {
            int v26 = -1;
          }
          else {
            int v26 = v29 / 0xF4240;
          }
        }
        LODWORD(v30) = -1;
        if (inbound_message_start_time) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v28 = outbound_body_size;
        uint64_t v27 = inbound_body_size;
        LODWORD(v30) = -1;
        if (inbound_message_start_time)
        {
LABEL_31:
          uint64_t v31 = a2;
          int v32 = v34;
          if (v15)
          {
            unint64_t v33 = nw_delta_nanos(inbound_message_start_time, v15);
            unint64_t v30 = v33 / 0xF4240;
            if (v33 > 0xF423FFFFFFFFFLL) {
              LODWORD(v30) = -1;
            }
          }
          goto LABEL_36;
        }
      }
      uint64_t v31 = a2;
      int v32 = v34;
LABEL_36:
      *(_DWORD *)buf = 136450050;
      int v44 = "nw_protocol_http1_connect_block_invoke";
      __int16 v45 = 2082;
      uint64_t v46 = v25;
      __int16 v47 = 2080;
      id v48 = " ";
      __int16 v49 = 1024;
      int v50 = v37;
      __int16 v51 = 1024;
      int v52 = v32;
      __int16 v53 = 1024;
      int v54 = v38;
      __int16 v55 = 2080;
      __int16 v56 = v35;
      __int16 v57 = 1024;
      int v58 = v24;
      __int16 v59 = 2082;
      uint64_t v60 = v31;
      __int16 v61 = 1024;
      int v62 = v39;
      __int16 v63 = 1024;
      int v64 = v36;
      __int16 v65 = 1024;
      int v66 = v22;
      __int16 v67 = 1024;
      int v68 = v26;
      __int16 v69 = 1024;
      int v70 = v30;
      __int16 v71 = 2048;
      uint64_t v72 = v28;
      __int16 v73 = 2048;
      uint64_t v74 = v27;
      _os_log_impl(&dword_1830D4000, v12, OS_LOG_TYPE_DEFAULT, "%{public}s %{public}s%s<i%u:c%u:s%u> transaction summary {start_reason=\"%s\", duration_ms=%d, request_method=\"%{public}s\", response_status=%hu, outbound_start_ms=%d, outbound_duration_ms=%d, inbound_start_ms=%d, inbound_duration_ms=%d, outbound_body_bytes=%llu, inbound_body_bytes=%llu}", buf, 0x7Eu);
    }
  }
}

uint64_t ___ZL25nw_protocol_http1_connectP11nw_protocolS0__block_invoke_28(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, uint64_t, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2, *(unsigned __int16 *)(a1 + 40));
}

uint64_t nw_protocol_copy_replicate_definition()
{
  if (nw_protocol_copy_replicate_definition::onceToken != -1) {
    dispatch_once(&nw_protocol_copy_replicate_definition::onceToken, &__block_literal_global_41550);
  }
  return nw_protocol_copy_replicate_definition::definition;
}

void __nw_protocol_copy_replicate_definition_block_invoke()
{
  if (nw_protocol_replicate_identifier(void)::onceToken != -1) {
    dispatch_once(&nw_protocol_replicate_identifier(void)::onceToken, &__block_literal_global_27);
  }
  nw_protocol_copy_replicate_definition::definition = (uint64_t)nw_protocol_definition_create_with_identifier((long long *)&g_replicate_protocol_identifier);
  nw_protocol_definition_set_options_allocator((void *)nw_protocol_copy_replicate_definition::definition, (uint64_t)nw_replicate_allocate_options, (uint64_t)nw_replicate_copy_options, (uint64_t)nw_replicate_deallocate_options);
  nw_protocol_definition_set_options_equality_check((void *)nw_protocol_copy_replicate_definition::definition, (uint64_t)nw_replicate_option_is_equal);
  v0 = (void *)nw_protocol_copy_replicate_definition::definition;

  nw_protocol_definition_set_metadata_allocator(v0, (uint64_t)nw_replicate_allocate_metadata, (uint64_t)nw_replicate_deallocate_metadata);
}

void nw_replicate_deallocate_metadata(nw_protocol_definition *a1, unsigned char *a2)
{
  a2[20] = 1;
  int v3 = (void *)*((void *)a2 + 1);
  if (v3) {
    os_release(v3);
  }

  free(a2);
}

BOOL nw_replicate_allocate_metadata(nw_protocol_definition *a1)
{
  uint64_t v1 = malloc_type_calloc(1uLL, 0x18uLL, 0xEAFB8F1AuLL);
  if (v1) {
    goto LABEL_2;
  }
  int v3 = __nwlog_obj();
  os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);
  uint64_t v4 = (void *)_os_log_send_and_compose_impl();
  BOOL result = __nwlog_abort((uint64_t)v4);
  if (!result)
  {
    free(v4);
LABEL_2:
    v1[4] = 0;
    return (BOOL)v1;
  }
  __break(1u);
  return result;
}

uint64_t nw_replicate_option_is_equal(nw_protocol_definition *a1, void *a2, void *a3)
{
  if (!a2 || !a3) {
    return a2 == a3;
  }
  if (*a2 == *a3 && a2[1] == a3[1])
  {
    BOOL v3 = a2[2] == a3[2] && a2[3] == a3[3];
    BOOL v4 = v3 && a2[4] == a3[4];
    BOOL v5 = v4 && a2[5] == a3[5];
    BOOL v6 = v5 && a2[6] == a3[6];
    BOOL v7 = v6 && a2[7] == a3[7];
    BOOL v8 = v7 && a2[8] == a3[8];
    if (v8 && a2[9] == a3[9])
    {
      BOOL v10 = a2[10] == a3[10] && a2[11] == a3[11];
      BOOL v11 = v10 && a2[12] == a3[12];
      BOOL v12 = v11 && a2[13] == a3[13];
      BOOL v13 = v12 && a2[14] == a3[14];
      BOOL v14 = v13 && a2[15] == a3[15];
      BOOL v15 = v14 && a2[16] == a3[16];
      if (v15 && a2[17] == a3[17]) {
        return nw_array_is_equal(a2[18], a3[18]);
      }
    }
  }
  return 0;
}

void nw_replicate_deallocate_options(nw_protocol_definition *a1, void *a2)
{
  BOOL v3 = (void *)a2[18];
  if (v3) {
    os_release(v3);
  }

  free(a2);
}

uint64_t nw_replicate_copy_options(nw_protocol_definition *a1, _OWORD *a2)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  if (a2)
  {
    uint64_t v3 = nw_calloc_type<nw_protocol_replicate_options>();
    *(_OWORD *)uint64_t v3 = *a2;
    long long v4 = a2[1];
    long long v5 = a2[2];
    long long v6 = a2[4];
    *(_OWORD *)(v3 + 48) = a2[3];
    *(_OWORD *)(v3 + 64) = v6;
    *(_OWORD *)(v3 + 16) = v4;
    *(_OWORD *)(v3 + 32) = v5;
    long long v8 = a2[7];
    long long v7 = a2[8];
    long long v9 = a2[6];
    *(_OWORD *)(v3 + 80) = a2[5];
    *(_OWORD *)(v3 + 96) = v9;
    *(_OWORD *)(v3 + 112) = v8;
    *(_OWORD *)(v3 + 128) = v7;
    uint64_t v10 = *((void *)a2 + 18);
    uint64_t v11 = nw_array_create();
    uint64_t v12 = v11;
    if (v10)
    {
      if (v11 == v10) {
        uint64_t v12 = v10;
      }
      else {
        std::vector<nw_object_wrapper_t>::__assign_with_size[abi:nn180100]<nw_object_wrapper_t*,nw_object_wrapper_t*>(v11 + 16, *(void ***)(v10 + 16), *(void ***)(v10 + 24), (uint64_t)(*(void *)(v10 + 24) - *(void *)(v10 + 16)) >> 3);
      }
    }
    *(void *)(v3 + 144) = v12;
    return v3;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  unint64_t v23 = "nw_replicate_copy_options";
  BOOL v14 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v20 = 0;
  if (__nwlog_fault(v14, &type, &v20))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (os_log_type_enabled(v15, type))
      {
        *(_DWORD *)buf = 136446210;
        unint64_t v23 = "nw_replicate_copy_options";
        int v17 = "%{public}s called with null existing_handle";
LABEL_21:
        _os_log_impl(&dword_1830D4000, v15, v16, v17, buf, 0xCu);
      }
    }
    else if (v20)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      BOOL v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      BOOL v19 = os_log_type_enabled(v15, type);
      if (backtrace_string)
      {
        if (v19)
        {
          *(_DWORD *)buf = 136446466;
          unint64_t v23 = "nw_replicate_copy_options";
          __int16 v24 = 2082;
          uint64_t v25 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v15, v16, "%{public}s called with null existing_handle, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        goto LABEL_22;
      }
      if (v19)
      {
        *(_DWORD *)buf = 136446210;
        unint64_t v23 = "nw_replicate_copy_options";
        int v17 = "%{public}s called with null existing_handle, no backtrace";
        goto LABEL_21;
      }
    }
    else
    {
      BOOL v15 = __nwlog_obj();
      os_log_type_t v16 = type;
      if (os_log_type_enabled(v15, type))
      {
        *(_DWORD *)buf = 136446210;
        unint64_t v23 = "nw_replicate_copy_options";
        int v17 = "%{public}s called with null existing_handle, backtrace limit exceeded";
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  if (v14) {
    free(v14);
  }
  return 0;
}

BOOL nw_calloc_type<nw_protocol_replicate_options>()
{
  v0 = malloc_type_calloc(1uLL, 0x98uLL, 0xEAFB8F1AuLL);
  if (v0) {
    return (BOOL)v0;
  }
  uint64_t v2 = __nwlog_obj();
  os_log_type_enabled(v2, OS_LOG_TYPE_ERROR);
  uint64_t v3 = (void *)_os_log_send_and_compose_impl();
  BOOL result = __nwlog_abort((uint64_t)v3);
  if (!result)
  {
    free(v3);
    return (BOOL)v0;
  }
  __break(1u);
  return result;
}

uint64_t nw_replicate_allocate_options(nw_protocol_definition *a1)
{
  uint64_t v1 = nw_calloc_type<nw_protocol_replicate_options>();
  *(void *)(v1 + 144) = nw_array_create();
  return v1;
}

BOOL ___ZL32nw_protocol_replicate_identifierv_block_invoke()
{
  *(void *)&algn_1E8F79C72[8] = 0;
  *(void *)algn_1E8F79C72 = 0;
  qword_1E8F79C80 = 0;
  strcpy((char *)&g_replicate_protocol_identifier, "replicate");
  qword_1E8F79C88 = 0x100000000;
  qword_1E8F79CA0 = (uint64_t)nw_protocol_default_replace_input_handler;
  qword_1E8F79CD0 = (uint64_t)nw_protocol_default_input_available;
  qword_1E8F79CD8 = (uint64_t)nw_protocol_default_output_available;
  qword_1E8F79D48 = (uint64_t)nw_protocol_default_input_finished;
  qword_1E8F79D50 = (uint64_t)nw_protocol_default_output_finished;
  qword_1E8F79D98 = (uint64_t)nw_protocol_default_input_flush;
  qword_1E8F79D88 = (uint64_t)nw_protocol_default_get_message_properties;
  qword_1E8F79CF8 = (uint64_t)nw_protocol_default_link_state;
  qword_1E8F79D08 = (uint64_t)nw_protocol_default_get_path;
  qword_1E8F79D38 = (uint64_t)nw_protocol_default_updated_path;
  qword_1E8F79D58 = (uint64_t)nw_protocol_default_get_output_local;
  qword_1E8F79D60 = (uint64_t)nw_protocol_default_get_output_interface;
  qword_1E8F79CA8 = (uint64_t)nw_protocol_default_connect;
  qword_1E8F79CB0 = (uint64_t)nw_protocol_default_disconnect;
  qword_1E8F79CC0 = (uint64_t)nw_protocol_default_disconnected;
  qword_1E8F79CC8 = (uint64_t)nw_protocol_default_error;
  qword_1E8F79D90 = (uint64_t)nw_protocol_default_reset;
  qword_1E8F79D40 = (uint64_t)nw_protocol_default_supports_external_data;
  qword_1E8F79D68 = (uint64_t)nw_protocol_default_waiting_for_output;
  qword_1E8F79D20 = (uint64_t)nw_protocol_default_register_notification;
  qword_1E8F79D28 = (uint64_t)nw_protocol_default_unregister_notification;
  qword_1E8F79D30 = (uint64_t)nw_protocol_default_notify;
  qword_1E8F79D78 = (uint64_t)nw_protocol_default_add_listen_handler;
  qword_1E8F79D80 = (uint64_t)nw_protocol_default_remove_listen_handler;
  g_replicate_protocol_callbacks = (uint64_t)nw_protocol_replicate_add_input_handler;
  qword_1E8F79C98 = (uint64_t)nw_protocol_replicate_remove_input_handler;
  qword_1E8F79CB8 = (uint64_t)nw_protocol_replicate_connected;
  qword_1E8F79CE0 = (uint64_t)nw_protocol_replicate_get_input_frames;
  qword_1E8F79CE8 = (uint64_t)nw_protocol_replicate_get_output_frames;
  qword_1E8F79D18 = (uint64_t)nw_protocol_replicate_get_remote_endpoint;
  qword_1E8F79D10 = (uint64_t)nw_protocol_replicate_get_local_endpoint;
  qword_1E8F79D00 = (uint64_t)nw_protocol_replicate_get_parameters;
  qword_1E8F79CF0 = (uint64_t)nw_protocol_replicate_finalize_output_frames;
  qword_1E8F79D70 = (uint64_t)nw_protocol_replicate_copy_info;
  return nw_protocol_register_extended(&g_replicate_protocol_identifier, (uint64_t)nw_protocol_replicate_create);
}

uint64_t nw_protocol_replicate_create(const nw_protocol_identifier *a1, nw_endpoint *a2, nw_parameters *a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  memptr = 0;
  if (!malloc_type_posix_memalign(&memptr, 8uLL, 0x178uLL, 0x68FF3B34uLL))
  {
    uint64_t result = (uint64_t)memptr;
    if (memptr) {
      goto LABEL_3;
    }
  }
  long long v4 = __nwlog_obj();
  os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);
  int v7 = 136446722;
  long long v8 = "strict_memalign";
  __int16 v9 = 2048;
  uint64_t v10 = 8;
  __int16 v11 = 2048;
  uint64_t v12 = 376;
  long long v5 = (void *)_os_log_send_and_compose_impl();
  uint64_t result = __nwlog_abort((uint64_t)v5);
  if (!result)
  {
    free(v5);
    uint64_t result = (uint64_t)memptr;
LABEL_3:
    *(void *)(result + 368) = 0;
    *(_OWORD *)(result + 336) = 0u;
    *(_OWORD *)(result + 352) = 0u;
    *(_OWORD *)(result + 304) = 0u;
    *(_OWORD *)(result + 320) = 0u;
    *(_OWORD *)(result + 272) = 0u;
    *(_OWORD *)(result + 288) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(void *)(result + 16) = &g_replicate_protocol_identifier;
    *(void *)(result + 24) = &g_replicate_protocol_callbacks;
    *(void *)(result + 40) = result;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t nw_protocol_replicate_copy_info(uint64_t a1, int a2)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    char v20 = "nw_protocol_replicate_copy_info";
    __int16 v9 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v17 = 0;
    if (!__nwlog_fault(v9, &type, &v17)) {
      goto LABEL_40;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (os_log_type_enabled(v10, type))
      {
        *(_DWORD *)buf = 136446210;
        char v20 = "nw_protocol_replicate_copy_info";
        uint64_t v12 = "%{public}s called with null protocol";
LABEL_39:
        _os_log_impl(&dword_1830D4000, v10, v11, v12, buf, 0xCu);
      }
LABEL_40:
      if (v9) {
        free(v9);
      }
      return 0;
    }
    if (!v17)
    {
      uint64_t v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (os_log_type_enabled(v10, type))
      {
        *(_DWORD *)buf = 136446210;
        char v20 = "nw_protocol_replicate_copy_info";
        uint64_t v12 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_39;
      }
      goto LABEL_40;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v10 = __nwlog_obj();
    os_log_type_t v11 = type;
    BOOL v14 = os_log_type_enabled(v10, type);
    if (!backtrace_string)
    {
      if (v14)
      {
        *(_DWORD *)buf = 136446210;
        char v20 = "nw_protocol_replicate_copy_info";
        uint64_t v12 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_39;
      }
      goto LABEL_40;
    }
    if (v14)
    {
      *(_DWORD *)buf = 136446466;
      char v20 = "nw_protocol_replicate_copy_info";
      __int16 v21 = 2082;
      int v22 = backtrace_string;
      BOOL v15 = "%{public}s called with null protocol, dumping backtrace:%{public}s";
LABEL_29:
      _os_log_impl(&dword_1830D4000, v10, v11, v15, buf, 0x16u);
    }
LABEL_30:
    free(backtrace_string);
    goto LABEL_40;
  }
  uint64_t v2 = *(void *)(a1 + 40);
  if (!v2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    char v20 = "nw_protocol_replicate_copy_info";
    __int16 v9 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v17 = 0;
    if (!__nwlog_fault(v9, &type, &v17)) {
      goto LABEL_40;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (os_log_type_enabled(v10, type))
      {
        *(_DWORD *)buf = 136446210;
        char v20 = "nw_protocol_replicate_copy_info";
        uint64_t v12 = "%{public}s called with null replicate";
        goto LABEL_39;
      }
      goto LABEL_40;
    }
    if (!v17)
    {
      uint64_t v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (os_log_type_enabled(v10, type))
      {
        *(_DWORD *)buf = 136446210;
        char v20 = "nw_protocol_replicate_copy_info";
        uint64_t v12 = "%{public}s called with null replicate, backtrace limit exceeded";
        goto LABEL_39;
      }
      goto LABEL_40;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v10 = __nwlog_obj();
    os_log_type_t v11 = type;
    BOOL v16 = os_log_type_enabled(v10, type);
    if (!backtrace_string)
    {
      if (v16)
      {
        *(_DWORD *)buf = 136446210;
        char v20 = "nw_protocol_replicate_copy_info";
        uint64_t v12 = "%{public}s called with null replicate, no backtrace";
        goto LABEL_39;
      }
      goto LABEL_40;
    }
    if (v16)
    {
      *(_DWORD *)buf = 136446466;
      char v20 = "nw_protocol_replicate_copy_info";
      __int16 v21 = 2082;
      int v22 = backtrace_string;
      BOOL v15 = "%{public}s called with null replicate, dumping backtrace:%{public}s";
      goto LABEL_29;
    }
    goto LABEL_30;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4 && (long long v5 = *(uint64_t (**)(void))(*(void *)(v4 + 24) + 224)) != 0)
  {
    uint64_t v6 = v5();
    if (a2 != 255) {
      return v6;
    }
  }
  else
  {
    uint64_t v6 = 0;
    if (a2 != 255) {
      return v6;
    }
  }
  int v7 = *(void **)(v2 + 64);
  if (v7)
  {
    if (!v6)
    {
      uint64_t v6 = nw_array_create();
      int v7 = *(void **)(v2 + 64);
    }
    nw_array_append(v6, v7);
  }
  return v6;
}

uint64_t nw_protocol_replicate_finalize_output_frames(nw_protocol *a1, nw_frame_array_s *a2)
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    handle = a1->handle;
    if (handle)
    {
      if ((handle[372] & 8) != 0) {
        uint64_t v32 = mach_absolute_time();
      }
      else {
        uint64_t v32 = 0;
      }
      for (uint64_t i = 0; i != 8; ++i)
      {
        uint64_t v6 = &handle[8 * i];
        uint64_t v7 = v6[14];
        if (v7)
        {
          uint64_t v8 = v6[30];
          uint64_t v9 = v6[38];
          *(void *)buf = 0;
          *(void *)&buf[8] = buf;
          int v56 = 0;
          *(void *)&buf[16] = 0x2000000000;
          v51[0] = MEMORY[0x1E4F143A8];
          v51[1] = 0x40000000;
          int v52 = ___ZL44nw_protocol_replicate_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke;
          __int16 v53 = &unk_1E5241978;
          int v54 = buf;
          tqh_first = a2->tqh_first;
          do
          {
            if (!tqh_first) {
              break;
            }
            os_log_type_t v11 = (nw_frame *)*((void *)tqh_first + 4);
            char v12 = v52((uint64_t)v51);
            tqh_first = v11;
          }
          while ((v12 & 1) != 0);
          v50[0] = 0;
          v50[1] = v50;
          if ((*(unsigned int (**)(uint64_t, nw_protocol *, uint64_t, uint64_t, void, void *))(*(void *)(v7 + 24) + 88))(v7, a1, 1, 0xFFFFFFFFLL, *(unsigned int *)(*(void *)&buf[8] + 24), v50))
          {
            *(void *)os_log_type_t type = 0;
            __int16 v47 = type;
            uint64_t v48 = 0x2000000000;
            uint64_t v49 = v50[0];
            v38[0] = MEMORY[0x1E4F143A8];
            v38[1] = 0x40000000;
            int v39 = (uint64_t (*)(void *))___ZL44nw_protocol_replicate_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke_2;
            uint64_t v40 = &unk_1E52419A0;
            uint64_t v41 = type;
            uint64_t v42 = a1;
            uint64_t v43 = v32;
            uint64_t v44 = v8;
            uint64_t v45 = v9;
            uint64_t v13 = a2->tqh_first;
            do
            {
              if (!v13) {
                break;
              }
              BOOL v14 = (nw_frame *)*((void *)v13 + 4);
              char v15 = v39(v38);
              uint64_t v13 = v14;
            }
            while ((v15 & 1) != 0);
            (*(void (**)(uint64_t, void *))(*(void *)(v7 + 24) + 96))(v7, v50);
            _Block_object_dispose(type, 8);
          }
          _Block_object_dispose(buf, 8);
        }
      }
      if ((handle[372] & 4) != 0)
      {
        __int16 v21 = a2->tqh_first;
        do
        {
          if (!v21) {
            break;
          }
          int v22 = (nw_frame *)*((void *)v21 + 4);
          char v23 = ___ZL44nw_protocol_replicate_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke_3((uint64_t)&__block_literal_global_46, (uint64_t)v21);
          __int16 v21 = v22;
        }
        while ((v23 & 1) != 0);
        return 1;
      }
      else
      {
        uint64_t v16 = *((void *)handle + 4);
        if (*((void *)handle + 10) || *((void *)handle + 11))
        {
          v33[0] = MEMORY[0x1E4F143A8];
          v33[1] = 0x40000000;
          int v34 = ___ZL44nw_protocol_replicate_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke_4;
          int v35 = &__block_descriptor_tmp_47_41589;
          uint64_t v36 = v32;
          int v37 = handle;
          char v17 = a2->tqh_first;
          do
          {
            if (!v17) {
              break;
            }
            int v18 = (nw_frame *)*((void *)v17 + 4);
            char v19 = ((uint64_t (*)(void *))v34)(v33);
            char v17 = v18;
          }
          while ((v19 & 1) != 0);
        }
        return (*(uint64_t (**)(uint64_t, nw_frame_array_s *))(*(void *)(v16 + 24) + 96))(v16, a2);
      }
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_replicate_finalize_output_frames";
    __int16 v24 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    LOBYTE(v50[0]) = 0;
    if (!__nwlog_fault(v24, type, v50)) {
      goto LABEL_57;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      uint64_t v25 = __nwlog_obj();
      os_log_type_t v26 = type[0];
      if (os_log_type_enabled(v25, type[0]))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_replicate_finalize_output_frames";
        uint64_t v27 = "%{public}s called with null replicate";
        goto LABEL_56;
      }
      goto LABEL_57;
    }
    if (!LOBYTE(v50[0]))
    {
      uint64_t v25 = __nwlog_obj();
      os_log_type_t v26 = type[0];
      if (os_log_type_enabled(v25, type[0]))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_replicate_finalize_output_frames";
        uint64_t v27 = "%{public}s called with null replicate, backtrace limit exceeded";
        goto LABEL_56;
      }
      goto LABEL_57;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v25 = __nwlog_obj();
    os_log_type_t v26 = type[0];
    BOOL v31 = os_log_type_enabled(v25, type[0]);
    if (!backtrace_string)
    {
      if (v31)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_replicate_finalize_output_frames";
        uint64_t v27 = "%{public}s called with null replicate, no backtrace";
        goto LABEL_56;
      }
      goto LABEL_57;
    }
    if (v31)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_protocol_replicate_finalize_output_frames";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = backtrace_string;
      unint64_t v30 = "%{public}s called with null replicate, dumping backtrace:%{public}s";
      goto LABEL_46;
    }
    goto LABEL_47;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_protocol_replicate_finalize_output_frames";
  __int16 v24 = (char *)_os_log_send_and_compose_impl();
  type[0] = OS_LOG_TYPE_ERROR;
  LOBYTE(v50[0]) = 0;
  if (!__nwlog_fault(v24, type, v50)) {
    goto LABEL_57;
  }
  if (type[0] != OS_LOG_TYPE_FAULT)
  {
    if (!LOBYTE(v50[0]))
    {
      uint64_t v25 = __nwlog_obj();
      os_log_type_t v26 = type[0];
      if (os_log_type_enabled(v25, type[0]))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_replicate_finalize_output_frames";
        uint64_t v27 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_56;
      }
      goto LABEL_57;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v25 = __nwlog_obj();
    os_log_type_t v26 = type[0];
    BOOL v29 = os_log_type_enabled(v25, type[0]);
    if (!backtrace_string)
    {
      if (v29)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_replicate_finalize_output_frames";
        uint64_t v27 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_56;
      }
      goto LABEL_57;
    }
    if (v29)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_protocol_replicate_finalize_output_frames";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = backtrace_string;
      unint64_t v30 = "%{public}s called with null protocol, dumping backtrace:%{public}s";
LABEL_46:
      _os_log_impl(&dword_1830D4000, v25, v26, v30, buf, 0x16u);
    }
LABEL_47:
    free(backtrace_string);
    goto LABEL_57;
  }
  uint64_t v25 = __nwlog_obj();
  os_log_type_t v26 = type[0];
  if (os_log_type_enabled(v25, type[0]))
  {
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_replicate_finalize_output_frames";
    uint64_t v27 = "%{public}s called with null protocol";
LABEL_56:
    _os_log_impl(&dword_1830D4000, v25, v26, v27, buf, 0xCu);
  }
LABEL_57:
  if (v24) {
    free(v24);
  }
  return 0;
}

uint64_t ___ZL44nw_protocol_replicate_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke(uint64_t a1)
{
  return 1;
}

uint64_t ___ZL44nw_protocol_replicate_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke_2(void *a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(*(void *)(a1[4] + 8) + 24)) {
    return 1;
  }
  unsigned int v58 = 0;
  uint64_t v4 = (const void *)nw_frame_unclaimed_bytes(a2, &v58);
  unsigned int v57 = 0;
  long long v5 = (void *)nw_frame_unclaimed_bytes(*(void *)(*(void *)(a1[4] + 8) + 24), &v57);
  unsigned int v7 = v58;
  if (v57 < v58)
  {
    unsigned int v58 = v57;
    unsigned int v7 = v57;
  }
  if (v7)
  {
    memcpy(v5, v4, v7);
    int v8 = v58;
  }
  else
  {
    int v8 = 0;
  }
  nw_frame_claim(*(void *)(*(void *)(a1[4] + 8) + 24), v6, v8, 0);
  nw_frame_collapse(*(void *)(*(void *)(a1[4] + 8) + 24));
  nw_frame_unclaim(*(void *)(*(void *)(a1[4] + 8) + 24), v9, v58, 0);
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v62 = "__nw_frame_get_expire_time";
    uint64_t v32 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v59 = 0;
    if (!__nwlog_fault(v32, &type, &v59)) {
      goto LABEL_59;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      unint64_t v33 = __nwlog_obj();
      os_log_type_t v34 = type;
      if (!os_log_type_enabled(v33, type)) {
        goto LABEL_59;
      }
      *(_DWORD *)buf = 136446210;
      int v62 = "__nw_frame_get_expire_time";
      int v35 = "%{public}s called with null frame";
    }
    else if (v59)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      unint64_t v33 = __nwlog_obj();
      os_log_type_t v34 = type;
      BOOL v37 = os_log_type_enabled(v33, type);
      if (backtrace_string)
      {
        if (v37)
        {
          *(_DWORD *)buf = 136446466;
          int v62 = "__nw_frame_get_expire_time";
          __int16 v63 = 2082;
          int v64 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v33, v34, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_59:
        if (v32) {
          free(v32);
        }
        uint64_t v26 = *(void *)(*(void *)(a1[4] + 8) + 24);
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        int v62 = "__nw_frame_get_service_class";
        uint64_t v45 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v59 = 0;
        if (__nwlog_fault(v45, &type, &v59))
        {
          if (type == OS_LOG_TYPE_FAULT)
          {
            uint64_t v46 = __nwlog_obj();
            os_log_type_t v47 = type;
            if (!os_log_type_enabled(v46, type)) {
              goto LABEL_75;
            }
            *(_DWORD *)buf = 136446210;
            int v62 = "__nw_frame_get_service_class";
            uint64_t v48 = "%{public}s called with null frame";
LABEL_74:
            _os_log_impl(&dword_1830D4000, v46, v47, v48, buf, 0xCu);
            goto LABEL_75;
          }
          if (!v59)
          {
            uint64_t v46 = __nwlog_obj();
            os_log_type_t v47 = type;
            if (!os_log_type_enabled(v46, type)) {
              goto LABEL_75;
            }
            *(_DWORD *)buf = 136446210;
            int v62 = "__nw_frame_get_service_class";
            uint64_t v48 = "%{public}s called with null frame, backtrace limit exceeded";
            goto LABEL_74;
          }
          uint64_t v49 = (char *)__nw_create_backtrace_string();
          uint64_t v46 = __nwlog_obj();
          os_log_type_t v47 = type;
          BOOL v50 = os_log_type_enabled(v46, type);
          if (!v49)
          {
            if (!v50) {
              goto LABEL_75;
            }
            *(_DWORD *)buf = 136446210;
            int v62 = "__nw_frame_get_service_class";
            uint64_t v48 = "%{public}s called with null frame, no backtrace";
            goto LABEL_74;
          }
          if (v50)
          {
            *(_DWORD *)buf = 136446466;
            int v62 = "__nw_frame_get_service_class";
            __int16 v63 = 2082;
            int v64 = v49;
            _os_log_impl(&dword_1830D4000, v46, v47, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
          }
          free(v49);
        }
LABEL_75:
        if (v45) {
          free(v45);
        }
        int v27 = 0;
        if (v26) {
          goto LABEL_30;
        }
LABEL_78:
        __nwlog_obj();
        *(_DWORD *)buf = 136446210;
        int v62 = "__nw_frame_set_service_class";
        __int16 v51 = (char *)_os_log_send_and_compose_impl();
        os_log_type_t type = OS_LOG_TYPE_ERROR;
        char v59 = 0;
        if (!__nwlog_fault(v51, &type, &v59)) {
          goto LABEL_92;
        }
        if (type == OS_LOG_TYPE_FAULT)
        {
          int v52 = __nwlog_obj();
          os_log_type_t v53 = type;
          if (!os_log_type_enabled(v52, type)) {
            goto LABEL_92;
          }
          *(_DWORD *)buf = 136446210;
          int v62 = "__nw_frame_set_service_class";
          int v54 = "%{public}s called with null frame";
        }
        else if (v59)
        {
          __int16 v55 = (char *)__nw_create_backtrace_string();
          int v52 = __nwlog_obj();
          os_log_type_t v53 = type;
          BOOL v56 = os_log_type_enabled(v52, type);
          if (v55)
          {
            if (v56)
            {
              *(_DWORD *)buf = 136446466;
              int v62 = "__nw_frame_set_service_class";
              __int16 v63 = 2082;
              int v64 = v55;
              _os_log_impl(&dword_1830D4000, v52, v53, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
            }
            free(v55);
            goto LABEL_92;
          }
          if (!v56)
          {
LABEL_92:
            if (v51) {
              free(v51);
            }
            goto LABEL_31;
          }
          *(_DWORD *)buf = 136446210;
          int v62 = "__nw_frame_set_service_class";
          int v54 = "%{public}s called with null frame, no backtrace";
        }
        else
        {
          int v52 = __nwlog_obj();
          os_log_type_t v53 = type;
          if (!os_log_type_enabled(v52, type)) {
            goto LABEL_92;
          }
          *(_DWORD *)buf = 136446210;
          int v62 = "__nw_frame_set_service_class";
          int v54 = "%{public}s called with null frame, backtrace limit exceeded";
        }
        _os_log_impl(&dword_1830D4000, v52, v53, v54, buf, 0xCu);
        goto LABEL_92;
      }
      if (!v37) {
        goto LABEL_59;
      }
      *(_DWORD *)buf = 136446210;
      int v62 = "__nw_frame_get_expire_time";
      int v35 = "%{public}s called with null frame, no backtrace";
    }
    else
    {
      unint64_t v33 = __nwlog_obj();
      os_log_type_t v34 = type;
      if (!os_log_type_enabled(v33, type)) {
        goto LABEL_59;
      }
      *(_DWORD *)buf = 136446210;
      int v62 = "__nw_frame_get_expire_time";
      int v35 = "%{public}s called with null frame, backtrace limit exceeded";
    }
    _os_log_impl(&dword_1830D4000, v33, v34, v35, buf, 0xCu);
    goto LABEL_59;
  }
  if ((*(_WORD *)(a2 + 204) & 0x10) == 0) {
    goto LABEL_29;
  }
  unint64_t v10 = *(void *)(a2 + 152);
  if (!v10) {
    goto LABEL_29;
  }
  uint64_t v12 = a1[6];
  uint64_t v11 = a1[7];
  uint64_t v13 = a1[8];
  unsigned int v14 = dword_1EB267624;
  if (v11 < 0)
  {
    uint64_t v17 = -1000000 * v11;
    if (!dword_1EB267624)
    {
      mach_timebase_info((mach_timebase_info_t)&time_base);
      unsigned int v14 = dword_1EB267624;
    }
    unsigned int v16 = time_base;
    unint64_t v18 = v17 * (unint64_t)v14 / time_base;
    BOOL v19 = v10 >= v18;
    unint64_t v21 = v10 - v18;
    BOOL v20 = v21 != 0 && v19;
    if (!v19) {
      unint64_t v21 = 0;
    }
    if (v20) {
      unint64_t v10 = v21;
    }
    if (!v12) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v15 = 1000000 * v11;
    if (!dword_1EB267624)
    {
      mach_timebase_info((mach_timebase_info_t)&time_base);
      unsigned int v14 = dword_1EB267624;
    }
    v10 += v15 * (unint64_t)v14 / time_base;
    unsigned int v16 = time_base;
    if (!v12) {
      goto LABEL_26;
    }
  }
  if (!v13) {
    goto LABEL_26;
  }
  if (!v14)
  {
    mach_timebase_info((mach_timebase_info_t)&time_base);
    unsigned int v16 = time_base;
    unsigned int v14 = dword_1EB267624;
  }
  unint64_t v22 = 1000000 * v13 * (unint64_t)v14 / v16 + v12;
  if (v22 >= v10) {
LABEL_26:
  }
    unint64_t v22 = v10;
  uint64_t v23 = *(void *)(*(void *)(a1[4] + 8) + 24);
  if (v23)
  {
    __int16 v25 = *(_WORD *)(v23 + 204);
    __int16 v24 = (_WORD *)(v23 + 204);
    *__int16 v24 = v25 | 0x10;
    *(void *)(v24 - 26) = v22;
    goto LABEL_29;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  int v62 = "__nw_frame_set_expire_time";
  int v38 = (const char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v59 = 0;
  int v39 = (char *)v38;
  if (!__nwlog_fault(v38, &type, &v59)) {
    goto LABEL_99;
  }
  if (type == OS_LOG_TYPE_FAULT)
  {
    uint64_t v40 = __nwlog_obj();
    os_log_type_t v41 = type;
    if (!os_log_type_enabled(v40, type)) {
      goto LABEL_99;
    }
    *(_DWORD *)buf = 136446210;
    int v62 = "__nw_frame_set_expire_time";
    uint64_t v42 = "%{public}s called with null frame";
    goto LABEL_98;
  }
  if (!v59)
  {
    uint64_t v40 = __nwlog_obj();
    os_log_type_t v41 = type;
    if (!os_log_type_enabled(v40, type)) {
      goto LABEL_99;
    }
    *(_DWORD *)buf = 136446210;
    int v62 = "__nw_frame_set_expire_time";
    uint64_t v42 = "%{public}s called with null frame, backtrace limit exceeded";
    goto LABEL_98;
  }
  uint64_t v43 = (char *)__nw_create_backtrace_string();
  uint64_t v40 = __nwlog_obj();
  os_log_type_t v41 = type;
  BOOL v44 = os_log_type_enabled(v40, type);
  if (v43)
  {
    if (v44)
    {
      *(_DWORD *)buf = 136446466;
      int v62 = "__nw_frame_set_expire_time";
      __int16 v63 = 2082;
      int v64 = v43;
      _os_log_impl(&dword_1830D4000, v40, v41, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v43);
    goto LABEL_99;
  }
  if (v44)
  {
    *(_DWORD *)buf = 136446210;
    int v62 = "__nw_frame_set_expire_time";
    uint64_t v42 = "%{public}s called with null frame, no backtrace";
LABEL_98:
    _os_log_impl(&dword_1830D4000, v40, v41, v42, buf, 0xCu);
  }
LABEL_99:
  if (v39) {
    free(v39);
  }
LABEL_29:
  uint64_t v26 = *(void *)(*(void *)(a1[4] + 8) + 24);
  int v27 = *(_DWORD *)(a2 + 176);
  if (!v26) {
    goto LABEL_78;
  }
LABEL_30:
  *(_DWORD *)(v26 + 176) = v27;
LABEL_31:
  uint64_t v28 = *(void *)(a1[4] + 8);
  uint64_t v29 = *(void *)(v28 + 24);
  uint64_t v30 = *(void *)(v29 + 32);
  if (!v30 && !*(void *)(v29 + 40)) {
    uint64_t v30 = 0;
  }
  *(void *)(v28 + 24) = v30;
  return 1;
}

uint64_t ___ZL44nw_protocol_replicate_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke_4(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  if (!a2)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v29 = "__nw_frame_get_expire_time";
    BOOL v20 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v26 = 0;
    if (!__nwlog_fault(v20, &type, &v26)) {
      goto LABEL_37;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      unint64_t v21 = __nwlog_obj();
      os_log_type_t v22 = type;
      if (!os_log_type_enabled(v21, type)) {
        goto LABEL_37;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v29 = "__nw_frame_get_expire_time";
      uint64_t v23 = "%{public}s called with null frame";
    }
    else if (v26)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      unint64_t v21 = __nwlog_obj();
      os_log_type_t v22 = type;
      BOOL v25 = os_log_type_enabled(v21, type);
      if (backtrace_string)
      {
        if (v25)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v29 = "__nw_frame_get_expire_time";
          __int16 v30 = 2082;
          BOOL v31 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v21, v22, "%{public}s called with null frame, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        goto LABEL_37;
      }
      if (!v25)
      {
LABEL_37:
        if (v20) {
          free(v20);
        }
        return 1;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v29 = "__nw_frame_get_expire_time";
      uint64_t v23 = "%{public}s called with null frame, no backtrace";
    }
    else
    {
      unint64_t v21 = __nwlog_obj();
      os_log_type_t v22 = type;
      if (!os_log_type_enabled(v21, type)) {
        goto LABEL_37;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v29 = "__nw_frame_get_expire_time";
      uint64_t v23 = "%{public}s called with null frame, backtrace limit exceeded";
    }
    _os_log_impl(&dword_1830D4000, v21, v22, v23, buf, 0xCu);
    goto LABEL_37;
  }
  if ((*(_WORD *)(a2 + 204) & 0x10) != 0)
  {
    unint64_t v3 = *(void *)(a2 + 152);
    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v4 = *(void *)(a1 + 40);
      uint64_t v6 = *(void *)(v4 + 80);
      uint64_t v7 = *(void *)(v4 + 88);
      unsigned int v8 = dword_1EB267624;
      if (v6 < 0)
      {
        uint64_t v11 = -1000000 * v6;
        if (!dword_1EB267624)
        {
          mach_timebase_info((mach_timebase_info_t)&time_base);
          unsigned int v8 = dword_1EB267624;
        }
        unsigned int v10 = time_base;
        unint64_t v12 = v11 * (unint64_t)v8 / time_base;
        BOOL v13 = v3 >= v12;
        unint64_t v15 = v3 - v12;
        BOOL v14 = v15 != 0 && v13;
        if (!v13) {
          unint64_t v15 = 0;
        }
        if (v14) {
          unint64_t v3 = v15;
        }
        if (!v5) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v9 = 1000000 * v6;
        if (!dword_1EB267624)
        {
          mach_timebase_info((mach_timebase_info_t)&time_base);
          unsigned int v8 = dword_1EB267624;
        }
        v3 += v9 * (unint64_t)v8 / time_base;
        unsigned int v10 = time_base;
        if (!v5)
        {
LABEL_20:
          unint64_t v16 = v3;
LABEL_21:
          __int16 v18 = *(_WORD *)(a2 + 204);
          uint64_t v17 = (_WORD *)(a2 + 204);
          _WORD *v17 = v18 | 0x10;
          *(void *)(v17 - 26) = v16;
          return 1;
        }
      }
      if (v7)
      {
        if (!v8)
        {
          mach_timebase_info((mach_timebase_info_t)&time_base);
          unsigned int v10 = time_base;
          unsigned int v8 = dword_1EB267624;
        }
        unint64_t v16 = 1000000 * v7 * (unint64_t)v8 / v10 + v5;
        if (v16 < v3) {
          goto LABEL_21;
        }
      }
      goto LABEL_20;
    }
  }
  return 1;
}

uint64_t ___ZL44nw_protocol_replicate_finalize_output_framesP11nw_protocolP16nw_frame_array_s_block_invoke_3(uint64_t a1, uint64_t a2)
{
  return 1;
}

uint64_t nw_protocol_replicate_get_parameters(nw_protocol *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    handle = a1->handle;
    if (handle)
    {
      if ((*((unsigned char *)handle + 372) & 2) != 0) {
        return handle[13];
      }
      get_parameters = (uint64_t (*)(void))a1->default_input_handler->callbacks->get_parameters;
      return get_parameters();
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    unint64_t v15 = "nw_protocol_replicate_get_parameters";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v12 = 0;
    if (!__nwlog_fault(v4, &type, &v12)) {
      goto LABEL_36;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v5 = __nwlog_obj();
      os_log_type_t v6 = type;
      if (os_log_type_enabled(v5, type))
      {
        *(_DWORD *)buf = 136446210;
        unint64_t v15 = "nw_protocol_replicate_get_parameters";
        uint64_t v7 = "%{public}s called with null replicate";
        goto LABEL_35;
      }
      goto LABEL_36;
    }
    if (!v12)
    {
      uint64_t v5 = __nwlog_obj();
      os_log_type_t v6 = type;
      if (os_log_type_enabled(v5, type))
      {
        *(_DWORD *)buf = 136446210;
        unint64_t v15 = "nw_protocol_replicate_get_parameters";
        uint64_t v7 = "%{public}s called with null replicate, backtrace limit exceeded";
        goto LABEL_35;
      }
      goto LABEL_36;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v5 = __nwlog_obj();
    os_log_type_t v6 = type;
    BOOL v11 = os_log_type_enabled(v5, type);
    if (!backtrace_string)
    {
      if (v11)
      {
        *(_DWORD *)buf = 136446210;
        unint64_t v15 = "nw_protocol_replicate_get_parameters";
        uint64_t v7 = "%{public}s called with null replicate, no backtrace";
        goto LABEL_35;
      }
      goto LABEL_36;
    }
    if (v11)
    {
      *(_DWORD *)buf = 136446466;
      unint64_t v15 = "nw_protocol_replicate_get_parameters";
      __int16 v16 = 2082;
      uint64_t v17 = backtrace_string;
      unsigned int v10 = "%{public}s called with null replicate, dumping backtrace:%{public}s";
      goto LABEL_25;
    }
    goto LABEL_26;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  unint64_t v15 = "nw_protocol_replicate_get_parameters";
  uint64_t v4 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v12 = 0;
  if (!__nwlog_fault(v4, &type, &v12)) {
    goto LABEL_36;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v12)
    {
      uint64_t v5 = __nwlog_obj();
      os_log_type_t v6 = type;
      if (os_log_type_enabled(v5, type))
      {
        *(_DWORD *)buf = 136446210;
        unint64_t v15 = "nw_protocol_replicate_get_parameters";
        uint64_t v7 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_35;
      }
      goto LABEL_36;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v5 = __nwlog_obj();
    os_log_type_t v6 = type;
    BOOL v9 = os_log_type_enabled(v5, type);
    if (!backtrace_string)
    {
      if (v9)
      {
        *(_DWORD *)buf = 136446210;
        unint64_t v15 = "nw_protocol_replicate_get_parameters";
        uint64_t v7 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_35;
      }
      goto LABEL_36;
    }
    if (v9)
    {
      *(_DWORD *)buf = 136446466;
      unint64_t v15 = "nw_protocol_replicate_get_parameters";
      __int16 v16 = 2082;
      uint64_t v17 = backtrace_string;
      unsigned int v10 = "%{public}s called with null protocol, dumping backtrace:%{public}s";
LABEL_25:
      _os_log_impl(&dword_1830D4000, v5, v6, v10, buf, 0x16u);
    }
LABEL_26:
    free(backtrace_string);
    goto LABEL_36;
  }
  uint64_t v5 = __nwlog_obj();
  os_log_type_t v6 = type;
  if (os_log_type_enabled(v5, type))
  {
    *(_DWORD *)buf = 136446210;
    unint64_t v15 = "nw_protocol_replicate_get_parameters";
    uint64_t v7 = "%{public}s called with null protocol";
LABEL_35:
    _os_log_impl(&dword_1830D4000, v5, v6, v7, buf, 0xCu);
  }
LABEL_36:
  if (v4) {
    free(v4);
  }
  return 0;
}

uint64_t nw_protocol_replicate_get_local_endpoint(nw_protocol *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v14 = "nw_protocol_replicate_get_local_endpoint";
    unint64_t v3 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v11 = 0;
    if (!__nwlog_fault(v3, &type, &v11)) {
      goto LABEL_34;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (!os_log_type_enabled(v4, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v14 = "nw_protocol_replicate_get_local_endpoint";
      os_log_type_t v6 = "%{public}s called with null protocol";
      goto LABEL_33;
    }
    if (!v11)
    {
      uint64_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (!os_log_type_enabled(v4, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v14 = "nw_protocol_replicate_get_local_endpoint";
      os_log_type_t v6 = "%{public}s called with null protocol, backtrace limit exceeded";
      goto LABEL_33;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v4 = __nwlog_obj();
    os_log_type_t v5 = type;
    BOOL v8 = os_log_type_enabled(v4, type);
    if (!backtrace_string)
    {
      if (!v8) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v14 = "nw_protocol_replicate_get_local_endpoint";
      os_log_type_t v6 = "%{public}s called with null protocol, no backtrace";
      goto LABEL_33;
    }
    if (v8)
    {
      *(_DWORD *)buf = 136446466;
      BOOL v14 = "nw_protocol_replicate_get_local_endpoint";
      __int16 v15 = 2082;
      __int16 v16 = backtrace_string;
      _os_log_impl(&dword_1830D4000, v4, v5, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(backtrace_string);
LABEL_34:
    if (!v3) {
      return 0;
    }
LABEL_35:
    free(v3);
    return 0;
  }
  if (!a1->handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v14 = "nw_protocol_replicate_get_local_endpoint";
    unint64_t v3 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v11 = 0;
    if (!__nwlog_fault(v3, &type, &v11)) {
      goto LABEL_34;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (!os_log_type_enabled(v4, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v14 = "nw_protocol_replicate_get_local_endpoint";
      os_log_type_t v6 = "%{public}s called with null replicate";
      goto LABEL_33;
    }
    if (!v11)
    {
      uint64_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (!os_log_type_enabled(v4, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v14 = "nw_protocol_replicate_get_local_endpoint";
      os_log_type_t v6 = "%{public}s called with null replicate, backtrace limit exceeded";
      goto LABEL_33;
    }
    BOOL v9 = (char *)__nw_create_backtrace_string();
    uint64_t v4 = __nwlog_obj();
    os_log_type_t v5 = type;
    BOOL v10 = os_log_type_enabled(v4, type);
    if (v9)
    {
      if (v10)
      {
        *(_DWORD *)buf = 136446466;
        BOOL v14 = "nw_protocol_replicate_get_local_endpoint";
        __int16 v15 = 2082;
        __int16 v16 = v9;
        _os_log_impl(&dword_1830D4000, v4, v5, "%{public}s called with null replicate, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v9);
      if (!v3) {
        return 0;
      }
      goto LABEL_35;
    }
    if (v10)
    {
      *(_DWORD *)buf = 136446210;
      BOOL v14 = "nw_protocol_replicate_get_local_endpoint";
      os_log_type_t v6 = "%{public}s called with null replicate, no backtrace";
LABEL_33:
      _os_log_impl(&dword_1830D4000, v4, v5, v6, buf, 0xCu);
      goto LABEL_34;
    }
    goto LABEL_34;
  }
  get_local_endpoint = (uint64_t (*)(void))a1->default_input_handler->callbacks->get_local_endpoint;

  return get_local_endpoint();
}

uint64_t nw_protocol_replicate_get_remote_endpoint(nw_protocol *a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    handle = a1->handle;
    if (handle)
    {
      if ((*((unsigned char *)handle + 372) & 2) != 0) {
        return handle[12];
      }
      get_remote_endpoint = (uint64_t (*)(void))a1->default_input_handler->callbacks->get_remote_endpoint;
      return get_remote_endpoint();
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    __int16 v15 = "nw_protocol_replicate_get_remote_endpoint";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v12 = 0;
    if (!__nwlog_fault(v4, &type, &v12)) {
      goto LABEL_36;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v5 = __nwlog_obj();
      os_log_type_t v6 = type;
      if (os_log_type_enabled(v5, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_protocol_replicate_get_remote_endpoint";
        uint64_t v7 = "%{public}s called with null replicate";
        goto LABEL_35;
      }
      goto LABEL_36;
    }
    if (!v12)
    {
      os_log_type_t v5 = __nwlog_obj();
      os_log_type_t v6 = type;
      if (os_log_type_enabled(v5, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_protocol_replicate_get_remote_endpoint";
        uint64_t v7 = "%{public}s called with null replicate, backtrace limit exceeded";
        goto LABEL_35;
      }
      goto LABEL_36;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    os_log_type_t v5 = __nwlog_obj();
    os_log_type_t v6 = type;
    BOOL v11 = os_log_type_enabled(v5, type);
    if (!backtrace_string)
    {
      if (v11)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_protocol_replicate_get_remote_endpoint";
        uint64_t v7 = "%{public}s called with null replicate, no backtrace";
        goto LABEL_35;
      }
      goto LABEL_36;
    }
    if (v11)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v15 = "nw_protocol_replicate_get_remote_endpoint";
      __int16 v16 = 2082;
      uint64_t v17 = backtrace_string;
      BOOL v10 = "%{public}s called with null replicate, dumping backtrace:%{public}s";
      goto LABEL_25;
    }
    goto LABEL_26;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  __int16 v15 = "nw_protocol_replicate_get_remote_endpoint";
  uint64_t v4 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v12 = 0;
  if (!__nwlog_fault(v4, &type, &v12)) {
    goto LABEL_36;
  }
  if (type != OS_LOG_TYPE_FAULT)
  {
    if (!v12)
    {
      os_log_type_t v5 = __nwlog_obj();
      os_log_type_t v6 = type;
      if (os_log_type_enabled(v5, type))
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_protocol_replicate_get_remote_endpoint";
        uint64_t v7 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_35;
      }
      goto LABEL_36;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    os_log_type_t v5 = __nwlog_obj();
    os_log_type_t v6 = type;
    BOOL v9 = os_log_type_enabled(v5, type);
    if (!backtrace_string)
    {
      if (v9)
      {
        *(_DWORD *)buf = 136446210;
        __int16 v15 = "nw_protocol_replicate_get_remote_endpoint";
        uint64_t v7 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_35;
      }
      goto LABEL_36;
    }
    if (v9)
    {
      *(_DWORD *)buf = 136446466;
      __int16 v15 = "nw_protocol_replicate_get_remote_endpoint";
      __int16 v16 = 2082;
      uint64_t v17 = backtrace_string;
      BOOL v10 = "%{public}s called with null protocol, dumping backtrace:%{public}s";
LABEL_25:
      _os_log_impl(&dword_1830D4000, v5, v6, v10, buf, 0x16u);
    }
LABEL_26:
    free(backtrace_string);
    goto LABEL_36;
  }
  os_log_type_t v5 = __nwlog_obj();
  os_log_type_t v6 = type;
  if (os_log_type_enabled(v5, type))
  {
    *(_DWORD *)buf = 136446210;
    __int16 v15 = "nw_protocol_replicate_get_remote_endpoint";
    uint64_t v7 = "%{public}s called with null protocol";
LABEL_35:
    _os_log_impl(&dword_1830D4000, v5, v6, v7, buf, 0xCu);
  }
LABEL_36:
  if (v4) {
    free(v4);
  }
  return 0;
}

uint64_t nw_protocol_replicate_get_output_frames(nw_protocol *a1, nw_protocol *a2, unsigned int a3, unsigned int a4, unsigned int a5, nw_frame_array_s *a6)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v20 = "nw_protocol_replicate_get_output_frames";
    BOOL v9 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v17 = 0;
    if (!__nwlog_fault(v9, &type, &v17)) {
      goto LABEL_34;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (!os_log_type_enabled(v10, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_output_frames";
      char v12 = "%{public}s called with null protocol";
      goto LABEL_33;
    }
    if (!v17)
    {
      BOOL v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (!os_log_type_enabled(v10, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_output_frames";
      char v12 = "%{public}s called with null protocol, backtrace limit exceeded";
      goto LABEL_33;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    BOOL v10 = __nwlog_obj();
    os_log_type_t v11 = type;
    BOOL v14 = os_log_type_enabled(v10, type);
    if (!backtrace_string)
    {
      if (!v14) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_output_frames";
      char v12 = "%{public}s called with null protocol, no backtrace";
      goto LABEL_33;
    }
    if (v14)
    {
      *(_DWORD *)buf = 136446466;
      BOOL v20 = "nw_protocol_replicate_get_output_frames";
      __int16 v21 = 2082;
      os_log_type_t v22 = backtrace_string;
      _os_log_impl(&dword_1830D4000, v10, v11, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(backtrace_string);
LABEL_34:
    if (!v9) {
      return 0;
    }
LABEL_35:
    free(v9);
    return 0;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v20 = "nw_protocol_replicate_get_output_frames";
    BOOL v9 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v17 = 0;
    if (!__nwlog_fault(v9, &type, &v17)) {
      goto LABEL_34;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (!os_log_type_enabled(v10, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_output_frames";
      char v12 = "%{public}s called with null replicate";
      goto LABEL_33;
    }
    if (!v17)
    {
      BOOL v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (!os_log_type_enabled(v10, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_output_frames";
      char v12 = "%{public}s called with null replicate, backtrace limit exceeded";
      goto LABEL_33;
    }
    __int16 v15 = (char *)__nw_create_backtrace_string();
    BOOL v10 = __nwlog_obj();
    os_log_type_t v11 = type;
    BOOL v16 = os_log_type_enabled(v10, type);
    if (v15)
    {
      if (v16)
      {
        *(_DWORD *)buf = 136446466;
        BOOL v20 = "nw_protocol_replicate_get_output_frames";
        __int16 v21 = 2082;
        os_log_type_t v22 = v15;
        _os_log_impl(&dword_1830D4000, v10, v11, "%{public}s called with null replicate, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v15);
      if (!v9) {
        return 0;
      }
      goto LABEL_35;
    }
    if (v16)
    {
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_output_frames";
      char v12 = "%{public}s called with null replicate, no backtrace";
LABEL_33:
      _os_log_impl(&dword_1830D4000, v10, v11, v12, buf, 0xCu);
      goto LABEL_34;
    }
    goto LABEL_34;
  }
  uint64_t v7 = *(uint64_t (**)(void))(*(void *)(handle[4] + 24) + 88);

  return v7();
}

uint64_t nw_protocol_replicate_get_input_frames(nw_protocol *a1, nw_protocol *a2, unsigned int a3, unsigned int a4, unsigned int a5, nw_frame_array_s *a6)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v20 = "nw_protocol_replicate_get_input_frames";
    BOOL v9 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v17 = 0;
    if (!__nwlog_fault(v9, &type, &v17)) {
      goto LABEL_34;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (!os_log_type_enabled(v10, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_input_frames";
      char v12 = "%{public}s called with null protocol";
      goto LABEL_33;
    }
    if (!v17)
    {
      BOOL v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (!os_log_type_enabled(v10, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_input_frames";
      char v12 = "%{public}s called with null protocol, backtrace limit exceeded";
      goto LABEL_33;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    BOOL v10 = __nwlog_obj();
    os_log_type_t v11 = type;
    BOOL v14 = os_log_type_enabled(v10, type);
    if (!backtrace_string)
    {
      if (!v14) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_input_frames";
      char v12 = "%{public}s called with null protocol, no backtrace";
      goto LABEL_33;
    }
    if (v14)
    {
      *(_DWORD *)buf = 136446466;
      BOOL v20 = "nw_protocol_replicate_get_input_frames";
      __int16 v21 = 2082;
      os_log_type_t v22 = backtrace_string;
      _os_log_impl(&dword_1830D4000, v10, v11, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(backtrace_string);
LABEL_34:
    if (!v9) {
      return 0;
    }
LABEL_35:
    free(v9);
    return 0;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    BOOL v20 = "nw_protocol_replicate_get_input_frames";
    BOOL v9 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v17 = 0;
    if (!__nwlog_fault(v9, &type, &v17)) {
      goto LABEL_34;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      BOOL v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (!os_log_type_enabled(v10, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_input_frames";
      char v12 = "%{public}s called with null replicate";
      goto LABEL_33;
    }
    if (!v17)
    {
      BOOL v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (!os_log_type_enabled(v10, type)) {
        goto LABEL_34;
      }
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_input_frames";
      char v12 = "%{public}s called with null replicate, backtrace limit exceeded";
      goto LABEL_33;
    }
    __int16 v15 = (char *)__nw_create_backtrace_string();
    BOOL v10 = __nwlog_obj();
    os_log_type_t v11 = type;
    BOOL v16 = os_log_type_enabled(v10, type);
    if (v15)
    {
      if (v16)
      {
        *(_DWORD *)buf = 136446466;
        BOOL v20 = "nw_protocol_replicate_get_input_frames";
        __int16 v21 = 2082;
        os_log_type_t v22 = v15;
        _os_log_impl(&dword_1830D4000, v10, v11, "%{public}s called with null replicate, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(v15);
      if (!v9) {
        return 0;
      }
      goto LABEL_35;
    }
    if (v16)
    {
      *(_DWORD *)buf = 136446210;
      BOOL v20 = "nw_protocol_replicate_get_input_frames";
      char v12 = "%{public}s called with null replicate, no backtrace";
LABEL_33:
      _os_log_impl(&dword_1830D4000, v10, v11, v12, buf, 0xCu);
      goto LABEL_34;
    }
    goto LABEL_34;
  }
  uint64_t v7 = *(uint64_t (**)(void))(*(void *)(handle[4] + 24) + 80);

  return v7();
}

void nw_protocol_replicate_connected(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v52 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v49 = "nw_protocol_replicate_connected";
    int v38 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v46 = 0;
    if (!__nwlog_fault(v38, &type, &v46)) {
      goto LABEL_78;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      int v39 = __nwlog_obj();
      os_log_type_t v40 = type;
      if (!os_log_type_enabled(v39, type)) {
        goto LABEL_78;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v49 = "nw_protocol_replicate_connected";
      os_log_type_t v41 = "%{public}s called with null protocol";
    }
    else if (v46)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      int v39 = __nwlog_obj();
      os_log_type_t v40 = type;
      BOOL v43 = os_log_type_enabled(v39, type);
      if (backtrace_string)
      {
        if (v43)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v49 = "nw_protocol_replicate_connected";
          __int16 v50 = 2082;
          __int16 v51 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v39, v40, "%{public}s called with null protocol, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
LABEL_78:
        if (!v38) {
          return;
        }
        goto LABEL_79;
      }
      if (!v43) {
        goto LABEL_78;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v49 = "nw_protocol_replicate_connected";
      os_log_type_t v41 = "%{public}s called with null protocol, no backtrace";
    }
    else
    {
      int v39 = __nwlog_obj();
      os_log_type_t v40 = type;
      if (!os_log_type_enabled(v39, type)) {
        goto LABEL_78;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v49 = "nw_protocol_replicate_connected";
      os_log_type_t v41 = "%{public}s called with null protocol, backtrace limit exceeded";
    }
LABEL_77:
    _os_log_impl(&dword_1830D4000, v39, v40, v41, buf, 0xCu);
    goto LABEL_78;
  }
  handle = a1->handle;
  if (handle)
  {
    if ((*((unsigned char *)handle + 372) & 1) == 0)
    {
      uint64_t v4 = handle[14];
      if (v4)
      {
        output_handler = a1->output_handler;
        do
        {
          uint64_t v6 = (uint64_t)output_handler;
          output_handler = output_handler->output_handler;
        }
        while (output_handler);
        do
        {
          uint64_t v7 = v4;
          uint64_t v4 = *(void *)(v4 + 32);
        }
        while (v4);
        nw_protocol_set_output_handler(v7, v6);
      }
      uint64_t v8 = handle[15];
      if (v8)
      {
        BOOL v9 = a1->output_handler;
        do
        {
          uint64_t v10 = (uint64_t)v9;
          BOOL v9 = v9->output_handler;
        }
        while (v9);
        do
        {
          uint64_t v11 = v8;
          uint64_t v8 = *(void *)(v8 + 32);
        }
        while (v8);
        nw_protocol_set_output_handler(v11, v10);
      }
      uint64_t v12 = handle[16];
      if (v12)
      {
        BOOL v13 = a1->output_handler;
        do
        {
          uint64_t v14 = (uint64_t)v13;
          BOOL v13 = v13->output_handler;
        }
        while (v13);
        do
        {
          uint64_t v15 = v12;
          uint64_t v12 = *(void *)(v12 + 32);
        }
        while (v12);
        nw_protocol_set_output_handler(v15, v14);
      }
      uint64_t v16 = handle[17];
      if (v16)
      {
        char v17 = a1->output_handler;
        do
        {
          uint64_t v18 = (uint64_t)v17;
          char v17 = v17->output_handler;
        }
        while (v17);
        do
        {
          uint64_t v19 = v16;
          uint64_t v16 = *(void *)(v16 + 32);
        }
        while (v16);
        nw_protocol_set_output_handler(v19, v18);
      }
      uint64_t v20 = handle[18];
      if (v20)
      {
        __int16 v21 = a1->output_handler;
        do
        {
          uint64_t v22 = (uint64_t)v21;
          __int16 v21 = v21->output_handler;
        }
        while (v21);
        do
        {
          uint64_t v23 = v20;
          uint64_t v20 = *(void *)(v20 + 32);
        }
        while (v20);
        nw_protocol_set_output_handler(v23, v22);
      }
      uint64_t v24 = handle[19];
      if (v24)
      {
        BOOL v25 = a1->output_handler;
        do
        {
          uint64_t v26 = (uint64_t)v25;
          BOOL v25 = v25->output_handler;
        }
        while (v25);
        do
        {
          uint64_t v27 = v24;
          uint64_t v24 = *(void *)(v24 + 32);
        }
        while (v24);
        nw_protocol_set_output_handler(v27, v26);
      }
      uint64_t v28 = handle[20];
      if (v28)
      {
        uint64_t v29 = a1->output_handler;
        do
        {
          uint64_t v30 = (uint64_t)v29;
          uint64_t v29 = v29->output_handler;
        }
        while (v29);
        do
        {
          uint64_t v31 = v28;
          uint64_t v28 = *(void *)(v28 + 32);
        }
        while (v28);
        nw_protocol_set_output_handler(v31, v30);
      }
      uint64_t v32 = handle[21];
      if (v32)
      {
        unint64_t v33 = a1->output_handler;
        do
        {
          uint64_t v34 = (uint64_t)v33;
          unint64_t v33 = v33->output_handler;
        }
        while (v33);
        do
        {
          uint64_t v35 = v32;
          uint64_t v32 = *(void *)(v32 + 32);
        }
        while (v32);
        nw_protocol_set_output_handler(v35, v34);
      }
      *((unsigned char *)handle + 372) |= 1u;
    }
    default_input_handler = a1->default_input_handler;
    if (default_input_handler)
    {
      connected = (void (*)(void))default_input_handler->callbacks->connected;
      if (connected)
      {
        connected();
      }
    }
    return;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  uint64_t v49 = "nw_protocol_replicate_connected";
  int v38 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v46 = 0;
  if (!__nwlog_fault(v38, &type, &v46)) {
    goto LABEL_78;
  }
  if (type == OS_LOG_TYPE_FAULT)
  {
    int v39 = __nwlog_obj();
    os_log_type_t v40 = type;
    if (!os_log_type_enabled(v39, type)) {
      goto LABEL_78;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v49 = "nw_protocol_replicate_connected";
    os_log_type_t v41 = "%{public}s called with null replicate";
    goto LABEL_77;
  }
  if (!v46)
  {
    int v39 = __nwlog_obj();
    os_log_type_t v40 = type;
    if (!os_log_type_enabled(v39, type)) {
      goto LABEL_78;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v49 = "nw_protocol_replicate_connected";
    os_log_type_t v41 = "%{public}s called with null replicate, backtrace limit exceeded";
    goto LABEL_77;
  }
  BOOL v44 = (char *)__nw_create_backtrace_string();
  int v39 = __nwlog_obj();
  os_log_type_t v40 = type;
  BOOL v45 = os_log_type_enabled(v39, type);
  if (!v44)
  {
    if (!v45) {
      goto LABEL_78;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v49 = "nw_protocol_replicate_connected";
    os_log_type_t v41 = "%{public}s called with null replicate, no backtrace";
    goto LABEL_77;
  }
  if (v45)
  {
    *(_DWORD *)buf = 136446466;
    uint64_t v49 = "nw_protocol_replicate_connected";
    __int16 v50 = 2082;
    __int16 v51 = v44;
    _os_log_impl(&dword_1830D4000, v39, v40, "%{public}s called with null replicate, dumping backtrace:%{public}s", buf, 0x16u);
  }
  free(v44);
  if (v38) {
LABEL_79:
  }
    free(v38);
}

uint64_t nw_protocol_replicate_remove_input_handler(nw_protocol *a1, nw_protocol *a2, int a3)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  if (!a1)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v48 = "nw_protocol_replicate_remove_input_handler";
    uint64_t v31 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v45 = 0;
    if (!__nwlog_fault(v31, &type, &v45)) {
      goto LABEL_86;
    }
    if (type != OS_LOG_TYPE_FAULT)
    {
      if (!v45)
      {
        uint64_t v32 = __nwlog_obj();
        os_log_type_t v33 = type;
        if (!os_log_type_enabled(v32, type)) {
          goto LABEL_86;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v48 = "nw_protocol_replicate_remove_input_handler";
        uint64_t v34 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_85;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v32 = __nwlog_obj();
      os_log_type_t v33 = type;
      BOOL v36 = os_log_type_enabled(v32, type);
      if (!backtrace_string)
      {
        if (!v36) {
          goto LABEL_86;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v48 = "nw_protocol_replicate_remove_input_handler";
        uint64_t v34 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_85;
      }
      if (v36)
      {
        *(_DWORD *)buf = 136446466;
        uint64_t v48 = "nw_protocol_replicate_remove_input_handler";
        __int16 v49 = 2082;
        __int16 v50 = backtrace_string;
        BOOL v37 = "%{public}s called with null protocol, dumping backtrace:%{public}s";
LABEL_71:
        _os_log_impl(&dword_1830D4000, v32, v33, v37, buf, 0x16u);
      }
LABEL_72:
      free(backtrace_string);
      goto LABEL_86;
    }
    uint64_t v32 = __nwlog_obj();
    os_log_type_t v33 = type;
    if (!os_log_type_enabled(v32, type)) {
      goto LABEL_86;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v48 = "nw_protocol_replicate_remove_input_handler";
    uint64_t v34 = "%{public}s called with null protocol";
LABEL_85:
    _os_log_impl(&dword_1830D4000, v32, v33, v34, buf, 0xCu);
LABEL_86:
    if (v31) {
      free(v31);
    }
    return 0;
  }
  handle = a1->handle;
  if (!handle)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v48 = "nw_protocol_replicate_remove_input_handler";
    uint64_t v31 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v45 = 0;
    if (!__nwlog_fault(v31, &type, &v45)) {
      goto LABEL_86;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v32 = __nwlog_obj();
      os_log_type_t v33 = type;
      if (!os_log_type_enabled(v32, type)) {
        goto LABEL_86;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v48 = "nw_protocol_replicate_remove_input_handler";
      uint64_t v34 = "%{public}s called with null replicate";
      goto LABEL_85;
    }
    if (!v45)
    {
      uint64_t v32 = __nwlog_obj();
      os_log_type_t v33 = type;
      if (!os_log_type_enabled(v32, type)) {
        goto LABEL_86;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v48 = "nw_protocol_replicate_remove_input_handler";
      uint64_t v34 = "%{public}s called with null replicate, backtrace limit exceeded";
      goto LABEL_85;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v32 = __nwlog_obj();
    os_log_type_t v33 = type;
    BOOL v38 = os_log_type_enabled(v32, type);
    if (backtrace_string)
    {
      if (v38)
      {
        *(_DWORD *)buf = 136446466;
        uint64_t v48 = "nw_protocol_replicate_remove_input_handler";
        __int16 v49 = 2082;
        __int16 v50 = backtrace_string;
        BOOL v37 = "%{public}s called with null replicate, dumping backtrace:%{public}s";
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (!v38) {
      goto LABEL_86;
    }
    *(_DWORD *)buf = 136446210;
    uint64_t v48 = "nw_protocol_replicate_remove_input_handler";
    uint64_t v34 = "%{public}s called with null replicate, no backtrace";
    goto LABEL_85;
  }
  nw_protocol_set_output_handler((uint64_t)a2, 0);
  if (a1->default_input_handler != a2) {
    return 0;
  }
  nw_protocol_set_input_handler((uint64_t)a1, 0);
  output_handler = a1->output_handler;
  if (output_handler) {
    ((void (*)(void))output_handler->callbacks->remove_input_handler)();
  }
  uint64_t v9 = *((void *)handle + 14);
  if (v9)
  {
    (*(void (**)(void))(*(void *)(v9 + 24) + 8))();
    *((void *)handle + 14) = 0;
  }
  uint64_t v10 = (void *)*((void *)handle + 22);
  if (v10)
  {
    os_release(v10);
    *((void *)handle + 22) = 0;
  }
  uint64_t v11 = *((void *)handle + 15);
  if (v11)
  {
    (*(void (**)(void))(*(void *)(v11 + 24) + 8))();
    *((void *)handle + 15) = 0;
  }
  uint64_t v12 = (void *)*((void *)handle + 23);
  if (v12)
  {
    os_release(v12);
    *((void *)handle + 23) = 0;
  }
  uint64_t v13 = *((void *)handle + 16);
  if (v13)
  {
    (*(void (**)(void))(*(void *)(v13 + 24) + 8))();
    *((void *)handle + 16) = 0;
  }
  uint64_t v14 = (void *)*((void *)handle + 24);
  if (v14)
  {
    os_release(v14);
    *((void *)handle + 24) = 0;
  }
  uint64_t v15 = *((void *)handle + 17);
  if (v15)
  {
    (*(void (**)(void))(*(void *)(v15 + 24) + 8))();
    *((void *)handle + 17) = 0;
  }
  uint64_t v16 = (void *)*((void *)handle + 25);
  if (v16)
  {
    os_release(v16);
    *((void *)handle + 25) = 0;
  }
  uint64_t v17 = *((void *)handle + 18);
  if (v17)
  {
    (*(void (**)(void))(*(void *)(v17 + 24) + 8))();
    *((void *)handle + 18) = 0;
  }
  uint64_t v18 = (void *)*((void *)handle + 26);
  if (v18)
  {
    os_release(v18);
    *((void *)handle + 26) = 0;
  }
  uint64_t v19 = *((void *)handle + 19);
  if (v19)
  {
    (*(void (**)(void))(*(void *)(v19 + 24) + 8))();
    *((void *)handle + 19) = 0;
  }
  uint64_t v20 = (void *)*((void *)handle + 27);
  if (v20)
  {
    os_release(v20);
    *((void *)handle + 27) = 0;
  }
  uint64_t v21 = *((void *)handle + 20);
  if (v21)
  {
    (*(void (**)(void))(*(void *)(v21 + 24) + 8))();
    *((void *)handle + 20) = 0;
  }
  uint64_t v22 = (void *)*((void *)handle + 28);
  if (v22)
  {
    os_release(v22);
    *((void *)handle + 28) = 0;
  }
  uint64_t v23 = *((void *)handle + 21);
  if (v23)
  {
    (*(void (**)(void))(*(void *)(v23 + 24) + 8))();
    *((void *)handle + 21) = 0;
  }
  uint64_t v24 = (void *)*((void *)handle + 29);
  if (v24)
  {
    os_release(v24);
    *((void *)handle + 29) = 0;
  }
  if (a3)
  {
    uint64_t v25 = *((void *)handle + 8);
    if (!v25)
    {
LABEL_44:
      a1->handle = 0;
      uint64_t v27 = (void *)*((void *)handle + 9);
      if (v27)
      {
        os_release(v27);
        *((void *)handle + 9) = 0;
      }
      uint64_t v28 = (void *)*((void *)handle + 13);
      if (v28)
      {
        os_release(v28);
        *((void *)handle + 13) = 0;
      }
      uint64_t v29 = (void *)*((void *)handle + 12);
      if (v29)
      {
        os_release(v29);
        *((void *)handle + 12) = 0;
      }
      uint64_t v30 = (void *)*((void *)handle + 8);
      if (v30) {
        os_release(v30);
      }
      free(handle);
      return 1;
    }
    if (nw_protocol_metadata_is_replicate(*((nw_protocol_metadata **)handle + 8)))
    {
      uint64_t v26 = *(void *)(v25 + 32);
      if (v26) {
        ___ZL32nw_replicate_metadata_invalidateP20nw_protocol_metadata_block_invoke((uint64_t)&__block_literal_global_40_41688, v26);
      }
      goto LABEL_44;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v48 = "nw_replicate_metadata_invalidate";
    int v39 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v45 = 0;
    if (__nwlog_fault(v39, &type, &v45))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        os_log_type_t v40 = __nwlog_obj();
        os_log_type_t v41 = type;
        if (!os_log_type_enabled(v40, type)) {
          goto LABEL_98;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v48 = "nw_replicate_metadata_invalidate";
        uint64_t v42 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata)";
        goto LABEL_97;
      }
      if (!v45)
      {
        os_log_type_t v40 = __nwlog_obj();
        os_log_type_t v41 = type;
        if (!os_log_type_enabled(v40, type)) {
          goto LABEL_98;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v48 = "nw_replicate_metadata_invalidate";
        uint64_t v42 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), backtrace limit exceeded";
        goto LABEL_97;
      }
      BOOL v43 = (char *)__nw_create_backtrace_string();
      os_log_type_t v40 = __nwlog_obj();
      os_log_type_t v41 = type;
      BOOL v44 = os_log_type_enabled(v40, type);
      if (v43)
      {
        if (v44)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v48 = "nw_replicate_metadata_invalidate";
          __int16 v49 = 2082;
          __int16 v50 = v43;
          _os_log_impl(&dword_1830D4000, v40, v41, "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(v43);
        goto LABEL_98;
      }
      if (v44)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v48 = "nw_replicate_metadata_invalidate";
        uint64_t v42 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), no backtrace";
LABEL_97:
        _os_log_impl(&dword_1830D4000, v40, v41, v42, buf, 0xCu);
      }
    }
LABEL_98:
    if (v39) {
      free(v39);
    }
    goto LABEL_44;
  }
  return 1;
}

BOOL nw_protocol_metadata_is_replicate(nw_protocol_metadata *a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    uint64_t v1 = a1;
    id v2 = v1[1];

    if (nw_protocol_copy_replicate_definition::onceToken != -1) {
      dispatch_once(&nw_protocol_copy_replicate_definition::onceToken, &__block_literal_global_41550);
    }
    uint64_t v3 = nw_protocol_copy_replicate_definition::definition;
    return nw_protocol_definition_is_equal_unsafe((uint64_t)v2, v3);
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  uint64_t v14 = "nw_protocol_metadata_is_replicate";
  os_log_type_t v5 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v11 = 0;
  if (__nwlog_fault(v5, &type, &v11))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v6 = __nwlog_obj();
      os_log_type_t v7 = type;
      if (os_log_type_enabled(v6, type))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_protocol_metadata_is_replicate";
        uint64_t v8 = "%{public}s called with null metadata";
LABEL_20:
        _os_log_impl(&dword_1830D4000, v6, v7, v8, buf, 0xCu);
      }
    }
    else if (v11)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v6 = __nwlog_obj();
      os_log_type_t v7 = type;
      BOOL v10 = os_log_type_enabled(v6, type);
      if (backtrace_string)
      {
        if (v10)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v14 = "nw_protocol_metadata_is_replicate";
          __int16 v15 = 2082;
          uint64_t v16 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v6, v7, "%{public}s called with null metadata, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        goto LABEL_21;
      }
      if (v10)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_protocol_metadata_is_replicate";
        uint64_t v8 = "%{public}s called with null metadata, no backtrace";
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v6 = __nwlog_obj();
      os_log_type_t v7 = type;
      if (os_log_type_enabled(v6, type))
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_protocol_metadata_is_replicate";
        uint64_t v8 = "%{public}s called with null metadata, backtrace limit exceeded";
        goto LABEL_20;
      }
    }
  }
LABEL_21:
  if (v5) {
    free(v5);
  }
  return 0;
}

uint64_t ___ZL32nw_replicate_metadata_invalidateP20nw_protocol_metadata_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (os_unfair_lock_s *)(a2 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + 16));
  *(unsigned char *)(a2 + 20) = 1;
  os_unfair_lock_unlock(v3);
  return 1;
}

uint64_t nw_protocol_replicate_add_input_handler(nw_protocol *a1, nw_protocol *a2)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    handle = a1->handle;
    if (handle)
    {
      nw_protocol_set_input_handler((uint64_t)a1, (uint64_t)a2);
      *(_OWORD *)handle = *(_OWORD *)a2->flow_id;
      nw_protocol_set_output_handler((uint64_t)a2, (uint64_t)handle);
      uint64_t v4 = (void *)((uint64_t (*)(nw_protocol *))a2->callbacks->get_path)(a2);
      if (v4) {
        int nexus_protocol_level = nw_path_get_nexus_protocol_level(v4);
      }
      else {
        int nexus_protocol_level = 4;
      }
      handle[92] = nexus_protocol_level;
      uint64_t v6 = (void *)((uint64_t (*)(nw_protocol *))a2->callbacks->get_remote_endpoint)(a2);
      if (v6) {
        uint64_t v6 = os_retain(v6);
      }
      *((void *)handle + 9) = v6;
      os_log_type_t v7 = (void *)((uint64_t (*)(nw_protocol *))a2->callbacks->get_parameters)(a2);
      id v8 = nw_parameters_copy_context(v7);
      if (nw_protocol_copy_replicate_definition::onceToken != -1) {
        dispatch_once(&nw_protocol_copy_replicate_definition::onceToken, &__block_literal_global_41550);
      }
      singleton = nw_protocol_metadata_create_singleton((void *)nw_protocol_copy_replicate_definition::definition);
      *(void *)buf = MEMORY[0x1E4F143A8];
      *(void *)&buf[8] = 0x40000000;
      *(void *)&buf[16] = ___ZL28nw_replicate_create_metadataP11nw_protocolP10nw_context_block_invoke;
      uint64_t v30 = &__block_descriptor_tmp_31_41707;
      uint64_t v31 = (os_log_type_t *)handle;
      id v32 = v8;
      nw_protocol_metadata_access_handle((uint64_t)singleton, (uint64_t)buf);
      *((void *)handle + 8) = singleton;
      if (v8) {
        os_release(v8);
      }
      BOOL v10 = nw_parameters_copy_protocol_options_legacy(v7, (nw_protocol *)handle);
      if (v10)
      {
        char v11 = v10;
        *(void *)os_log_type_t type = 0;
        uint64_t v26 = type;
        uint64_t v27 = 0x2000000000;
        uint64_t v28 = 0;
        *(void *)buf = MEMORY[0x1E4F143A8];
        *(void *)&buf[8] = 0x40000000;
        *(void *)&buf[16] = __nw_replicate_options_get_primary_expiration_adjustment_block_invoke;
        uint64_t v30 = &unk_1E52417A8;
        uint64_t v31 = type;
        nw_protocol_options_access_handle(v10, buf);
        uint64_t v12 = *((void *)v26 + 3);
        _Block_object_dispose(type, 8);
        *((void *)handle + 10) = v12;
        *(void *)os_log_type_t type = 0;
        uint64_t v26 = type;
        uint64_t v27 = 0x2000000000;
        uint64_t v28 = 0;
        *(void *)buf = MEMORY[0x1E4F143A8];
        *(void *)&buf[8] = 0x40000000;
        *(void *)&buf[16] = __nw_replicate_options_get_primary_maximum_expiration_block_invoke;
        uint64_t v30 = &unk_1E52417D0;
        uint64_t v31 = type;
        nw_protocol_options_access_handle(v11, buf);
        uint64_t v13 = *((void *)v26 + 3);
        _Block_object_dispose(type, 8);
        *((void *)handle + 11) = v13;
        if (v13) {
          *((unsigned char *)handle + 372) |= 8u;
        }
        *(void *)os_log_type_t type = 0;
        uint64_t v26 = type;
        LODWORD(v28) = 0;
        uint64_t v27 = 0x2000000000;
        v23[0] = MEMORY[0x1E4F143A8];
        v23[1] = 0x40000000;
        v23[2] = ___ZL39nw_protocol_replicate_add_input_handlerP11nw_protocolS0__block_invoke;
        v23[3] = &unk_1E5241898;
        v23[4] = type;
        v23[5] = handle;
        *(void *)buf = MEMORY[0x1E4F143A8];
        *(void *)&buf[8] = 0x40000000;
        *(void *)&buf[16] = __nw_replicate_options_enumerate_endpoints_with_expiration_block_invoke;
        uint64_t v30 = &unk_1E5241780;
        uint64_t v31 = (os_log_type_t *)v23;
        nw_protocol_options_access_handle(v11, buf);
        os_release(v11);
        _Block_object_dispose(type, 8);
      }
      return 1;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_replicate_add_input_handler";
    __int16 v15 = (char *)_os_log_send_and_compose_impl();
    type[0] = OS_LOG_TYPE_ERROR;
    char v24 = 0;
    if (!__nwlog_fault(v15, type, &v24)) {
      goto LABEL_44;
    }
    if (type[0] == OS_LOG_TYPE_FAULT)
    {
      uint64_t v16 = __nwlog_obj();
      os_log_type_t v17 = type[0];
      if (os_log_type_enabled(v16, type[0]))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_replicate_add_input_handler";
        uint64_t v18 = "%{public}s called with null replicate";
        goto LABEL_43;
      }
      goto LABEL_44;
    }
    if (!v24)
    {
      uint64_t v16 = __nwlog_obj();
      os_log_type_t v17 = type[0];
      if (os_log_type_enabled(v16, type[0]))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_replicate_add_input_handler";
        uint64_t v18 = "%{public}s called with null replicate, backtrace limit exceeded";
        goto LABEL_43;
      }
      goto LABEL_44;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v16 = __nwlog_obj();
    os_log_type_t v17 = type[0];
    BOOL v22 = os_log_type_enabled(v16, type[0]);
    if (!backtrace_string)
    {
      if (v22)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_replicate_add_input_handler";
        uint64_t v18 = "%{public}s called with null replicate, no backtrace";
        goto LABEL_43;
      }
      goto LABEL_44;
    }
    if (v22)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_protocol_replicate_add_input_handler";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = backtrace_string;
      uint64_t v21 = "%{public}s called with null replicate, dumping backtrace:%{public}s";
      goto LABEL_33;
    }
    goto LABEL_34;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_protocol_replicate_add_input_handler";
  __int16 v15 = (char *)_os_log_send_and_compose_impl();
  type[0] = OS_LOG_TYPE_ERROR;
  char v24 = 0;
  if (!__nwlog_fault(v15, type, &v24)) {
    goto LABEL_44;
  }
  if (type[0] != OS_LOG_TYPE_FAULT)
  {
    if (!v24)
    {
      uint64_t v16 = __nwlog_obj();
      os_log_type_t v17 = type[0];
      if (os_log_type_enabled(v16, type[0]))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_replicate_add_input_handler";
        uint64_t v18 = "%{public}s called with null protocol, backtrace limit exceeded";
        goto LABEL_43;
      }
      goto LABEL_44;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v16 = __nwlog_obj();
    os_log_type_t v17 = type[0];
    BOOL v20 = os_log_type_enabled(v16, type[0]);
    if (!backtrace_string)
    {
      if (v20)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_protocol_replicate_add_input_handler";
        uint64_t v18 = "%{public}s called with null protocol, no backtrace";
        goto LABEL_43;
      }
      goto LABEL_44;
    }
    if (v20)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_protocol_replicate_add_input_handler";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = backtrace_string;
      uint64_t v21 = "%{public}s called with null protocol, dumping backtrace:%{public}s";
LABEL_33:
      _os_log_impl(&dword_1830D4000, v16, v17, v21, buf, 0x16u);
    }
LABEL_34:
    free(backtrace_string);
    goto LABEL_44;
  }
  uint64_t v16 = __nwlog_obj();
  os_log_type_t v17 = type[0];
  if (os_log_type_enabled(v16, type[0]))
  {
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_protocol_replicate_add_input_handler";
    uint64_t v18 = "%{public}s called with null protocol";
LABEL_43:
    _os_log_impl(&dword_1830D4000, v16, v17, v18, buf, 0xCu);
  }
LABEL_44:
  if (v15) {
    free(v15);
  }
  return 0;
}

uint64_t ___ZL28nw_replicate_create_metadataP11nw_protocolP10nw_context_block_invoke(uint64_t a1, void *a2)
{
  *a2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  if (v3) {
    uint64_t v3 = os_retain(v3);
  }
  a2[1] = v3;
  return 1;
}

uint64_t __nw_replicate_options_get_primary_expiration_adjustment_block_invoke(uint64_t a1, void *a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = *a2;
  return 1;
}

uint64_t __nw_replicate_options_get_primary_maximum_expiration_block_invoke(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = *(void *)(a2 + 8);
  return 1;
}

uint64_t ___ZL39nw_protocol_replicate_add_input_handlerP11nw_protocolS0__block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return 1;
}

uint64_t __nw_replicate_options_enumerate_endpoints_with_expiration_block_invoke(uint64_t a1, uint64_t a2)
{
  id v2 = *(atomic_uchar **)(a2 + 144);
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 0x40000000;
  v4[2] = __nw_replicate_options_enumerate_endpoints_with_expiration_block_invoke_2;
  v4[3] = &unk_1E5241758;
  v4[4] = *(void *)(a1 + 32);
  v4[5] = a2;
  nw_array_apply(v2, (uint64_t)v4);
  return 1;
}

uint64_t __nw_replicate_options_enumerate_endpoints_with_expiration_block_invoke_2(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 <= 7) {
    return (*(uint64_t (**)(void, uint64_t, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a3, *(void *)(*(void *)(a1 + 40) + 8 * a2 + 16), *(void *)(*(void *)(a1 + 40) + 8 * a2 + 80));
  }
  else {
    return 0;
  }
}

void nw_protocol_replicate_add_secondary_endpoint(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (a3 < 8)
    {
      uint64_t v10 = *(void *)(a1 + 48);
      uint64_t v11 = *(void *)(a1 + 32);
      *(unsigned char *)(a1 + 372) |= 2u;
      uint64_t v12 = (void *)(*(uint64_t (**)(void))(*(void *)(v10 + 24) + 112))();
      *(void *)(a1 + 96) = a2;
      id v13 = v12;
      uint64_t v14 = (void *)-[NWConcrete_nw_parameters initWithParameters:stripConnected:shallowCopy:]((id *)[NWConcrete_nw_parameters alloc], v13, 0, 0);

      *(void *)(a1 + 104) = v14;
      uint64_t v15 = a1 + 8 * a3;
      *(void *)(v15 + 240) = a4;
      *(void *)(v15 + 304) = a5;
      if (a5) {
        *(unsigned char *)(a1 + 372) |= 8u;
      }
      if (!*(void *)(a1 + 96) || !v14)
      {
LABEL_14:
        *(void *)(a1 + 96) = 0;
        if (!v14) {
          goto LABEL_18;
        }
        goto LABEL_17;
      }
      if ((*(_DWORD *)(a1 + 368) - 1) >= 3)
      {
        *(void *)(a1 + 96) = 0;
LABEL_17:
        os_release(v14);
        *(void *)(a1 + 104) = 0;
LABEL_18:
        *(unsigned char *)(a1 + 372) &= ~2u;
        nw_protocol_set_output_handler(a1, v11);
        return;
      }
      *(void *)uint64_t v42 = 0;
      *(void *)&v42[8] = v42;
      *(void *)&v42[16] = 0x2000000000;
      uint64_t v43 = a1;
      uint64_t v36 = 0;
      BOOL v37 = &v36;
      uint64_t v38 = 0x2000000000;
      char v39 = 0;
      v34[0] = MEMORY[0x1E4F143A8];
      v34[1] = 0x40000000;
      v34[2] = ___ZL44nw_protocol_replicate_add_secondary_endpointP21nw_protocol_replicateP11nw_endpointjxy_block_invoke;
      v34[3] = &unk_1E52418E0;
      v34[5] = &v36;
      v34[6] = a1;
      unsigned int v35 = a3;
      v34[4] = v42;
      nw_parameters_internal_iterate_protocol_stack(v14, 3, 0, v34);
      if (*((unsigned char *)v37 + 24))
      {
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v16 = gLogObj;
        if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
        {
LABEL_12:
          _Block_object_dispose(&v36, 8);
LABEL_13:
          _Block_object_dispose(v42, 8);
          uint64_t v14 = *(void **)(a1 + 104);
          goto LABEL_14;
        }
        *(_DWORD *)buf = 136446210;
        os_log_type_t v41 = "nw_protocol_replicate_add_secondary_endpoint";
        os_log_type_t v17 = "%{public}s Failed to attach transport protocol";
LABEL_11:
        _os_log_impl(&dword_1830D4000, v16, OS_LOG_TYPE_ERROR, v17, buf, 0xCu);
        goto LABEL_12;
      }
      _Block_object_dispose(&v36, 8);
      if ((*(_DWORD *)(a1 + 368) - 1) <= 1)
      {
        uint64_t v36 = 0;
        BOOL v37 = &v36;
        uint64_t v38 = 0x2000000000;
        char v39 = 0;
        uint64_t v18 = *(void **)(a1 + 104);
        v32[0] = MEMORY[0x1E4F143A8];
        v32[1] = 0x40000000;
        v32[2] = ___ZL44nw_protocol_replicate_add_secondary_endpointP21nw_protocol_replicateP11nw_endpointjxy_block_invoke_34;
        v32[3] = &unk_1E5241908;
        v32[5] = &v36;
        v32[6] = a1;
        unsigned int v33 = a3;
        v32[4] = v42;
        nw_parameters_internal_iterate_protocol_stack(v18, 2, 0, v32);
        if (*((unsigned char *)v37 + 24))
        {
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          uint64_t v16 = gLogObj;
          if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR)) {
            goto LABEL_12;
          }
          *(_DWORD *)buf = 136446210;
          os_log_type_t v41 = "nw_protocol_replicate_add_secondary_endpoint";
          os_log_type_t v17 = "%{public}s Failed to attach internet protocol";
          goto LABEL_11;
        }
        _Block_object_dispose(&v36, 8);
        if (*(_DWORD *)(a1 + 368) == 1)
        {
          uint64_t v36 = 0;
          BOOL v37 = &v36;
          uint64_t v38 = 0x2000000000;
          char v39 = 0;
          uint64_t v19 = *(void **)(a1 + 104);
          v30[0] = MEMORY[0x1E4F143A8];
          v30[1] = 0x40000000;
          v30[2] = ___ZL44nw_protocol_replicate_add_secondary_endpointP21nw_protocol_replicateP11nw_endpointjxy_block_invoke_36;
          v30[3] = &unk_1E5241930;
          v30[5] = &v36;
          v30[6] = a1;
          unsigned int v31 = a3;
          v30[4] = v42;
          nw_parameters_internal_iterate_protocol_stack(v19, 1, 0, v30);
          if (*((unsigned char *)v37 + 24))
          {
            uint64_t v16 = __nwlog_obj();
            if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
              goto LABEL_12;
            }
            *(_DWORD *)buf = 136446210;
            os_log_type_t v41 = "nw_protocol_replicate_add_secondary_endpoint";
            os_log_type_t v17 = "%{public}s Failed to attach link protocol";
            goto LABEL_11;
          }
          _Block_object_dispose(&v36, 8);
        }
      }
      if (*(unsigned char *)(a1 + 372))
      {
        uint64_t v20 = *(void *)(a1 + 32);
        do
        {
          uint64_t v21 = v20;
          uint64_t v20 = *(void *)(v20 + 32);
        }
        while (v20);
        nw_protocol_set_output_handler(*(void *)(*(void *)&v42[8] + 24), v21);
      }
      goto LABEL_13;
    }
    __nwlog_obj();
    *(_DWORD *)uint64_t v42 = 136446210;
    *(void *)&v42[4] = "nw_protocol_replicate_add_secondary_endpoint";
    BOOL v22 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(v36) = 16;
    buf[0] = 0;
    if (__nwlog_fault(v22, &v36, buf))
    {
      if (v36 == 17)
      {
        uint64_t v23 = __nwlog_obj();
        os_log_type_t v24 = v36;
        if (!os_log_type_enabled(v23, (os_log_type_t)v36)) {
          goto LABEL_61;
        }
        *(_DWORD *)uint64_t v42 = 136446210;
        *(void *)&v42[4] = "nw_protocol_replicate_add_secondary_endpoint";
        uint64_t v25 = "%{public}s called with null (index < NW_PROTOCOL_REPLICATE_MAX_ENDPOINTS)";
        goto LABEL_60;
      }
      if (!buf[0])
      {
        uint64_t v23 = __nwlog_obj();
        os_log_type_t v24 = v36;
        if (!os_log_type_enabled(v23, (os_log_type_t)v36)) {
          goto LABEL_61;
        }
        *(_DWORD *)uint64_t v42 = 136446210;
        *(void *)&v42[4] = "nw_protocol_replicate_add_secondary_endpoint";
        uint64_t v25 = "%{public}s called with null (index < NW_PROTOCOL_REPLICATE_MAX_ENDPOINTS), backtrace limit exceeded";
        goto LABEL_60;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v23 = __nwlog_obj();
      os_log_type_t v24 = v36;
      BOOL v29 = os_log_type_enabled(v23, (os_log_type_t)v36);
      if (backtrace_string)
      {
        if (v29)
        {
          *(_DWORD *)uint64_t v42 = 136446466;
          *(void *)&v42[4] = "nw_protocol_replicate_add_secondary_endpoint";
          *(_WORD *)&v42[12] = 2082;
          *(void *)&v42[14] = backtrace_string;
          _os_log_impl(&dword_1830D4000, v23, v24, "%{public}s called with null (index < NW_PROTOCOL_REPLICATE_MAX_ENDPOINTS), dumping backtrace:%{public}s", v42, 0x16u);
        }
        free(backtrace_string);
        if (v22) {
          goto LABEL_62;
        }
        return;
      }
      if (v29)
      {
        *(_DWORD *)uint64_t v42 = 136446210;
        *(void *)&v42[4] = "nw_protocol_replicate_add_secondary_endpoint";
        uint64_t v25 = "%{public}s called with null (index < NW_PROTOCOL_REPLICATE_MAX_ENDPOINTS), no backtrace";
LABEL_60:
        _os_log_impl(&dword_1830D4000, v23, v24, v25, v42, 0xCu);
      }
    }
  }
  else
  {
    __nwlog_obj();
    *(_DWORD *)uint64_t v42 = 136446210;
    *(void *)&v42[4] = "nw_protocol_replicate_add_secondary_endpoint";
    BOOL v22 = (char *)_os_log_send_and_compose_impl();
    LOBYTE(v36) = 16;
    buf[0] = 0;
    if (!__nwlog_fault(v22, &v36, buf)) {
      goto LABEL_61;
    }
    if (v36 == 17)
    {
      uint64_t v23 = __nwlog_obj();
      os_log_type_t v24 = v36;
      if (!os_log_type_enabled(v23, (os_log_type_t)v36)) {
        goto LABEL_61;
      }
      *(_DWORD *)uint64_t v42 = 136446210;
      *(void *)&v42[4] = "nw_protocol_replicate_add_secondary_endpoint";
      uint64_t v25 = "%{public}s called with null replicate";
      goto LABEL_60;
    }
    if (!buf[0])
    {
      uint64_t v23 = __nwlog_obj();
      os_log_type_t v24 = v36;
      if (!os_log_type_enabled(v23, (os_log_type_t)v36)) {
        goto LABEL_61;
      }
      *(_DWORD *)uint64_t v42 = 136446210;
      *(void *)&v42[4] = "nw_protocol_replicate_add_secondary_endpoint";
      uint64_t v25 = "%{public}s called with null replicate, backtrace limit exceeded";
      goto LABEL_60;
    }
    uint64_t v26 = (char *)__nw_create_backtrace_string();
    uint64_t v23 = __nwlog_obj();
    os_log_type_t v24 = v36;
    BOOL v27 = os_log_type_enabled(v23, (os_log_type_t)v36);
    if (!v26)
    {
      if (!v27) {
        goto LABEL_61;
      }
      *(_DWORD *)uint64_t v42 = 136446210;
      *(void *)&v42[4] = "nw_protocol_replicate_add_secondary_endpoint";
      uint64_t v25 = "%{public}s called with null replicate, no backtrace";
      goto LABEL_60;
    }
    if (v27)
    {
      *(_DWORD *)uint64_t v42 = 136446466;
      *(void *)&v42[4] = "nw_protocol_replicate_add_secondary_endpoint";
      *(_WORD *)&v42[12] = 2082;
      *(void *)&v42[14] = v26;
      _os_log_impl(&dword_1830D4000, v23, v24, "%{public}s called with null replicate, dumping backtrace:%{public}s", v42, 0x16u);
    }
    free(v26);
  }
LABEL_61:
  if (v22) {
LABEL_62:
  }
    free(v22);
}

void sub_1839E6264(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL ___ZL44nw_protocol_replicate_add_secondary_endpointP21nw_protocol_replicateP11nw_endpointjxy_block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = nw_protocol_replicate_attach_protocol(*(void *)(a1 + 48), a3, a4, *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24), *(_DWORD *)(a1 + 56));
  if (v5) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v5;
  }
  else {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
  return v5 != 0;
}

BOOL ___ZL44nw_protocol_replicate_add_secondary_endpointP21nw_protocol_replicateP11nw_endpointjxy_block_invoke_34(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = nw_protocol_replicate_attach_protocol(*(void *)(a1 + 48), a3, a4, *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24), *(_DWORD *)(a1 + 56));
  if (v5) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v5;
  }
  else {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
  return v5 != 0;
}

BOOL ___ZL44nw_protocol_replicate_add_secondary_endpointP21nw_protocol_replicateP11nw_endpointjxy_block_invoke_36(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = nw_protocol_replicate_attach_protocol(*(void *)(a1 + 48), a3, a4, *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24), *(_DWORD *)(a1 + 56));
  if (v5) {
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v5;
  }
  else {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
  return v5 != 0;
}

uint64_t nw_protocol_replicate_attach_protocol(uint64_t a1, void *a2, void *a3, uint64_t a4, unsigned int a5)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  if (a5 >= 8)
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v38 = "nw_protocol_replicate_attach_protocol";
    BOOL v29 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v35 = 0;
    if (!__nwlog_fault(v29, &type, &v35)) {
      goto LABEL_32;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v30 = __nwlog_obj();
      os_log_type_t v31 = type;
      if (!os_log_type_enabled(v30, type)) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v38 = "nw_protocol_replicate_attach_protocol";
      id v32 = "%{public}s called with null (index < 8)";
    }
    else if (v35)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v30 = __nwlog_obj();
      os_log_type_t v31 = type;
      BOOL v34 = os_log_type_enabled(v30, type);
      if (backtrace_string)
      {
        if (v34)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v38 = "nw_protocol_replicate_attach_protocol";
          __int16 v39 = 2082;
          os_log_type_t v40 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v30, v31, "%{public}s called with null (index < 8), dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        goto LABEL_32;
      }
      if (!v34)
      {
LABEL_32:
        if (v29) {
          free(v29);
        }
        return 0;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v38 = "nw_protocol_replicate_attach_protocol";
      id v32 = "%{public}s called with null (index < 8), no backtrace";
    }
    else
    {
      uint64_t v30 = __nwlog_obj();
      os_log_type_t v31 = type;
      if (!os_log_type_enabled(v30, type)) {
        goto LABEL_32;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v38 = "nw_protocol_replicate_attach_protocol";
      id v32 = "%{public}s called with null (index < 8), backtrace limit exceeded";
    }
    _os_log_impl(&dword_1830D4000, v30, v31, v32, buf, 0xCu);
    goto LABEL_32;
  }
  identifier = nw_protocol_definition_get_identifier(a2);
  uint64_t internal = nw_protocol_create_internal((uint64_t)identifier, *(void **)(a1 + 96), *(const char **)(a1 + 104), 1);
  if (!internal)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    uint64_t v24 = gLogObj;
    if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v38 = "nw_protocol_replicate_attach_protocol";
      __int16 v39 = 2114;
      os_log_type_t v40 = (char *)a2;
      uint64_t v25 = "%{public}s Replicate could not create protocol for %{public}@";
      uint64_t v26 = v24;
LABEL_15:
      _os_log_impl(&dword_1830D4000, v26, OS_LOG_TYPE_ERROR, v25, buf, 0x16u);
    }
    return 0;
  }
  uint64_t v13 = internal;
  nw_parameters_set_protocol_instance(a3, v12, internal);
  char v14 = (**(uint64_t (***)(uint64_t, uint64_t))(v13 + 24))(v13, a4);
  uint64_t v15 = a1 + 8 * a5;
  uint64_t v17 = *(void *)(v15 + 112);
  uint64_t v16 = (uint64_t *)(v15 + 112);
  if (!v17) {
    *uint64_t v16 = v13;
  }
  uint64_t v18 = a1 + 8 * a5;
  uint64_t v20 = *(void *)(v18 + 176);
  uint64_t v19 = (void **)(v18 + 176);
  if (!v20)
  {
    uint64_t v21 = *(void **)(a1 + 96);
    if (v21) {
      *uint64_t v19 = os_retain(v21);
    }
  }
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  BOOL v22 = gLogObj;
  if ((v14 & 1) == 0)
  {
    if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
    {
      BOOL v27 = *(char **)(a1 + 96);
      *(_DWORD *)buf = 136446466;
      uint64_t v38 = "nw_protocol_replicate_attach_protocol";
      __int16 v39 = 2112;
      os_log_type_t v40 = v27;
      uint64_t v25 = "%{public}s Replicate failed to add output handler for %@";
      uint64_t v26 = v22;
      goto LABEL_15;
    }
    return 0;
  }
  if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_INFO))
  {
    uint64_t v23 = *(void *)(a1 + 96);
    *(_DWORD *)buf = 136446722;
    uint64_t v38 = "nw_protocol_replicate_attach_protocol";
    __int16 v39 = 2112;
    os_log_type_t v40 = (char *)a2;
    __int16 v41 = 2112;
    uint64_t v42 = v23;
    _os_log_impl(&dword_1830D4000, v22, OS_LOG_TYPE_INFO, "%{public}s Replicate added output handler for %@ on %@", buf, 0x20u);
  }
  return v13;
}

NWConcrete_nw_protocol_options *nw_replicate_create_options()
{
  if (nw_protocol_copy_replicate_definition::onceToken != -1) {
    dispatch_once(&nw_protocol_copy_replicate_definition::onceToken, &__block_literal_global_41550);
  }
  v0 = (void *)nw_protocol_copy_replicate_definition::definition;

  return nw_protocol_create_options(v0);
}

void nw_replicate_options_set_primary_expiration(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 0x40000000;
    v9[2] = __nw_replicate_options_set_primary_expiration_block_invoke;
    v9[3] = &__block_descriptor_tmp_6_41745;
    v9[4] = a2;
    v9[5] = a3;
    nw_protocol_options_access_handle(a1, v9);
    return;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  uint64_t v13 = "nw_replicate_options_set_primary_expiration";
  uint64_t v3 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t v11 = OS_LOG_TYPE_ERROR;
  char v10 = 0;
  if (__nwlog_fault(v3, &v11, &v10))
  {
    if (v11 == OS_LOG_TYPE_FAULT)
    {
      uint64_t v4 = __nwlog_obj();
      os_log_type_t v5 = v11;
      if (!os_log_type_enabled(v4, v11)) {
        goto LABEL_18;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v13 = "nw_replicate_options_set_primary_expiration";
      uint64_t v6 = "%{public}s called with null options";
      goto LABEL_17;
    }
    if (!v10)
    {
      uint64_t v4 = __nwlog_obj();
      os_log_type_t v5 = v11;
      if (!os_log_type_enabled(v4, v11)) {
        goto LABEL_18;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v13 = "nw_replicate_options_set_primary_expiration";
      uint64_t v6 = "%{public}s called with null options, backtrace limit exceeded";
      goto LABEL_17;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v4 = __nwlog_obj();
    os_log_type_t v5 = v11;
    BOOL v8 = os_log_type_enabled(v4, v11);
    if (backtrace_string)
    {
      if (v8)
      {
        *(_DWORD *)buf = 136446466;
        uint64_t v13 = "nw_replicate_options_set_primary_expiration";
        __int16 v14 = 2082;
        uint64_t v15 = backtrace_string;
        _os_log_impl(&dword_1830D4000, v4, v5, "%{public}s called with null options, dumping backtrace:%{public}s", buf, 0x16u);
      }
      free(backtrace_string);
      goto LABEL_18;
    }
    if (v8)
    {
      *(_DWORD *)buf = 136446210;
      uint64_t v13 = "nw_replicate_options_set_primary_expiration";
      uint64_t v6 = "%{public}s called with null options, no backtrace";
LABEL_17:
      _os_log_impl(&dword_1830D4000, v4, v5, v6, buf, 0xCu);
    }
  }
LABEL_18:
  if (v3) {
    free(v3);
  }
}

uint64_t __nw_replicate_options_set_primary_expiration_block_invoke(uint64_t a1, void *a2)
{
  *a2 = *(void *)(a1 + 32);
  a2[1] = *(void *)(a1 + 40);
  return 1;
}

void nw_replicate_options_add_endpoint_with_expiration(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (a2)
    {
      v12[0] = MEMORY[0x1E4F143A8];
      v12[1] = 0x40000000;
      v12[2] = __nw_replicate_options_add_endpoint_with_expiration_block_invoke;
      v12[3] = &__block_descriptor_tmp_7_41756;
      v12[4] = a2;
      v12[5] = a3;
      v12[6] = a4;
      nw_protocol_options_access_handle(a1, v12);
      return;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v16 = "nw_replicate_options_add_endpoint_with_expiration";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v14 = OS_LOG_TYPE_ERROR;
    char v13 = 0;
    if (__nwlog_fault(v4, &v14, &v13))
    {
      if (v14 == OS_LOG_TYPE_FAULT)
      {
        os_log_type_t v5 = __nwlog_obj();
        os_log_type_t v6 = v14;
        if (!os_log_type_enabled(v5, v14)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v16 = "nw_replicate_options_add_endpoint_with_expiration";
        os_log_type_t v7 = "%{public}s called with null endpoint";
        goto LABEL_32;
      }
      if (!v13)
      {
        os_log_type_t v5 = __nwlog_obj();
        os_log_type_t v6 = v14;
        if (!os_log_type_enabled(v5, v14)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v16 = "nw_replicate_options_add_endpoint_with_expiration";
        os_log_type_t v7 = "%{public}s called with null endpoint, backtrace limit exceeded";
        goto LABEL_32;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v5 = __nwlog_obj();
      os_log_type_t v6 = v14;
      BOOL v11 = os_log_type_enabled(v5, v14);
      if (backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v16 = "nw_replicate_options_add_endpoint_with_expiration";
          __int16 v17 = 2082;
          uint64_t v18 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v5, v6, "%{public}s called with null endpoint, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        if (v4) {
          goto LABEL_34;
        }
        return;
      }
      if (v11)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v16 = "nw_replicate_options_add_endpoint_with_expiration";
        os_log_type_t v7 = "%{public}s called with null endpoint, no backtrace";
LABEL_32:
        _os_log_impl(&dword_1830D4000, v5, v6, v7, buf, 0xCu);
      }
    }
  }
  else
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v16 = "nw_replicate_options_add_endpoint_with_expiration";
    uint64_t v4 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v14 = OS_LOG_TYPE_ERROR;
    char v13 = 0;
    if (!__nwlog_fault(v4, &v14, &v13)) {
      goto LABEL_33;
    }
    if (v14 == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v5 = __nwlog_obj();
      os_log_type_t v6 = v14;
      if (!os_log_type_enabled(v5, v14)) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v16 = "nw_replicate_options_add_endpoint_with_expiration";
      os_log_type_t v7 = "%{public}s called with null options";
      goto LABEL_32;
    }
    if (!v13)
    {
      os_log_type_t v5 = __nwlog_obj();
      os_log_type_t v6 = v14;
      if (!os_log_type_enabled(v5, v14)) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v16 = "nw_replicate_options_add_endpoint_with_expiration";
      os_log_type_t v7 = "%{public}s called with null options, backtrace limit exceeded";
      goto LABEL_32;
    }
    BOOL v8 = (char *)__nw_create_backtrace_string();
    os_log_type_t v5 = __nwlog_obj();
    os_log_type_t v6 = v14;
    BOOL v9 = os_log_type_enabled(v5, v14);
    if (!v8)
    {
      if (!v9) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v16 = "nw_replicate_options_add_endpoint_with_expiration";
      os_log_type_t v7 = "%{public}s called with null options, no backtrace";
      goto LABEL_32;
    }
    if (v9)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v16 = "nw_replicate_options_add_endpoint_with_expiration";
      __int16 v17 = 2082;
      uint64_t v18 = v8;
      _os_log_impl(&dword_1830D4000, v5, v6, "%{public}s called with null options, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v8);
  }
LABEL_33:
  if (v4) {
LABEL_34:
  }
    free(v4);
}

uint64_t __nw_replicate_options_add_endpoint_with_expiration_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(a2 + 144);
  if (!v4)
  {
    uint64_t v6 = 0;
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(v4 + 24) - *(void *)(v4 + 16);
  if ((unint64_t)v5 <= 0x3F)
  {
    uint64_t v6 = v5 >> 3;
LABEL_5:
    nw_array_append(v4, *(void **)(a1 + 32));
    uint64_t v7 = a2 + 8 * v6;
    *(void *)(v7 + 16) = *(void *)(a1 + 40);
    *(void *)(v7 + 80) = *(void *)(a1 + 48);
    return 1;
  }
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  BOOL v9 = gLogObj;
  if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
  {
    int v10 = 136446466;
    BOOL v11 = "nw_replicate_options_add_endpoint_with_expiration_block_invoke";
    __int16 v12 = 1024;
    int v13 = 8;
    _os_log_impl(&dword_1830D4000, v9, OS_LOG_TYPE_ERROR, "%{public}s Cannot add more than %u endpoints to replicator", (uint8_t *)&v10, 0x12u);
  }
  return 1;
}

void nw_replicate_options_add_endpoint(void *a1, uint64_t a2)
{
}

void nw_replicate_options_enumerate_endpoints(void *a1, uint64_t a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (a2)
    {
      v10[0] = MEMORY[0x1E4F143A8];
      v10[1] = 0x40000000;
      v10[2] = __nw_replicate_options_enumerate_endpoints_block_invoke;
      v10[3] = &unk_1E5241730;
      v10[4] = a2;
      nw_protocol_options_access_handle(a1, v10);
      return;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v14 = "nw_replicate_options_enumerate_endpoints";
    id v2 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v12 = OS_LOG_TYPE_ERROR;
    char v11 = 0;
    if (__nwlog_fault(v2, &v12, &v11))
    {
      if (v12 == OS_LOG_TYPE_FAULT)
      {
        uint64_t v3 = __nwlog_obj();
        os_log_type_t v4 = v12;
        if (!os_log_type_enabled(v3, v12)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_replicate_options_enumerate_endpoints";
        uint64_t v5 = "%{public}s called with null enumerate_block";
        goto LABEL_32;
      }
      if (!v11)
      {
        uint64_t v3 = __nwlog_obj();
        os_log_type_t v4 = v12;
        if (!os_log_type_enabled(v3, v12)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_replicate_options_enumerate_endpoints";
        uint64_t v5 = "%{public}s called with null enumerate_block, backtrace limit exceeded";
        goto LABEL_32;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v3 = __nwlog_obj();
      os_log_type_t v4 = v12;
      BOOL v9 = os_log_type_enabled(v3, v12);
      if (backtrace_string)
      {
        if (v9)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v14 = "nw_replicate_options_enumerate_endpoints";
          __int16 v15 = 2082;
          uint64_t v16 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v3, v4, "%{public}s called with null enumerate_block, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        if (v2) {
          goto LABEL_34;
        }
        return;
      }
      if (v9)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_replicate_options_enumerate_endpoints";
        uint64_t v5 = "%{public}s called with null enumerate_block, no backtrace";
LABEL_32:
        _os_log_impl(&dword_1830D4000, v3, v4, v5, buf, 0xCu);
      }
    }
  }
  else
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v14 = "nw_replicate_options_enumerate_endpoints";
    id v2 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v12 = OS_LOG_TYPE_ERROR;
    char v11 = 0;
    if (!__nwlog_fault(v2, &v12, &v11)) {
      goto LABEL_33;
    }
    if (v12 == OS_LOG_TYPE_FAULT)
    {
      uint64_t v3 = __nwlog_obj();
      os_log_type_t v4 = v12;
      if (!os_log_type_enabled(v3, v12)) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v14 = "nw_replicate_options_enumerate_endpoints";
      uint64_t v5 = "%{public}s called with null options";
      goto LABEL_32;
    }
    if (!v11)
    {
      uint64_t v3 = __nwlog_obj();
      os_log_type_t v4 = v12;
      if (!os_log_type_enabled(v3, v12)) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v14 = "nw_replicate_options_enumerate_endpoints";
      uint64_t v5 = "%{public}s called with null options, backtrace limit exceeded";
      goto LABEL_32;
    }
    uint64_t v6 = (char *)__nw_create_backtrace_string();
    uint64_t v3 = __nwlog_obj();
    os_log_type_t v4 = v12;
    BOOL v7 = os_log_type_enabled(v3, v12);
    if (!v6)
    {
      if (!v7) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v14 = "nw_replicate_options_enumerate_endpoints";
      uint64_t v5 = "%{public}s called with null options, no backtrace";
      goto LABEL_32;
    }
    if (v7)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v14 = "nw_replicate_options_enumerate_endpoints";
      __int16 v15 = 2082;
      uint64_t v16 = v6;
      _os_log_impl(&dword_1830D4000, v3, v4, "%{public}s called with null options, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v6);
  }
LABEL_33:
  if (v2) {
LABEL_34:
  }
    free(v2);
}

uint64_t __nw_replicate_options_enumerate_endpoints_block_invoke(uint64_t a1, uint64_t a2)
{
  id v2 = *(atomic_uchar **)(a2 + 144);
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 0x40000000;
  v4[2] = __nw_replicate_options_enumerate_endpoints_block_invoke_2;
  v4[3] = &unk_1E5241708;
  v4[4] = *(void *)(a1 + 32);
  nw_array_apply(v2, (uint64_t)v4);
  return 1;
}

uint64_t __nw_replicate_options_enumerate_endpoints_block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void nw_replicate_options_enumerate_endpoints_with_expiration(void *a1, uint64_t a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (a2)
    {
      v10[0] = MEMORY[0x1E4F143A8];
      v10[1] = 0x40000000;
      v10[2] = __nw_replicate_options_enumerate_endpoints_with_expiration_block_invoke;
      v10[3] = &unk_1E5241780;
      v10[4] = a2;
      nw_protocol_options_access_handle(a1, v10);
      return;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v14 = "nw_replicate_options_enumerate_endpoints_with_expiration";
    id v2 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v12 = OS_LOG_TYPE_ERROR;
    char v11 = 0;
    if (__nwlog_fault(v2, &v12, &v11))
    {
      if (v12 == OS_LOG_TYPE_FAULT)
      {
        uint64_t v3 = __nwlog_obj();
        os_log_type_t v4 = v12;
        if (!os_log_type_enabled(v3, v12)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_replicate_options_enumerate_endpoints_with_expiration";
        uint64_t v5 = "%{public}s called with null enumerate_block";
        goto LABEL_32;
      }
      if (!v11)
      {
        uint64_t v3 = __nwlog_obj();
        os_log_type_t v4 = v12;
        if (!os_log_type_enabled(v3, v12)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_replicate_options_enumerate_endpoints_with_expiration";
        uint64_t v5 = "%{public}s called with null enumerate_block, backtrace limit exceeded";
        goto LABEL_32;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v3 = __nwlog_obj();
      os_log_type_t v4 = v12;
      BOOL v9 = os_log_type_enabled(v3, v12);
      if (backtrace_string)
      {
        if (v9)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v14 = "nw_replicate_options_enumerate_endpoints_with_expiration";
          __int16 v15 = 2082;
          uint64_t v16 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v3, v4, "%{public}s called with null enumerate_block, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        if (v2) {
          goto LABEL_34;
        }
        return;
      }
      if (v9)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v14 = "nw_replicate_options_enumerate_endpoints_with_expiration";
        uint64_t v5 = "%{public}s called with null enumerate_block, no backtrace";
LABEL_32:
        _os_log_impl(&dword_1830D4000, v3, v4, v5, buf, 0xCu);
      }
    }
  }
  else
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v14 = "nw_replicate_options_enumerate_endpoints_with_expiration";
    id v2 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v12 = OS_LOG_TYPE_ERROR;
    char v11 = 0;
    if (!__nwlog_fault(v2, &v12, &v11)) {
      goto LABEL_33;
    }
    if (v12 == OS_LOG_TYPE_FAULT)
    {
      uint64_t v3 = __nwlog_obj();
      os_log_type_t v4 = v12;
      if (!os_log_type_enabled(v3, v12)) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v14 = "nw_replicate_options_enumerate_endpoints_with_expiration";
      uint64_t v5 = "%{public}s called with null options";
      goto LABEL_32;
    }
    if (!v11)
    {
      uint64_t v3 = __nwlog_obj();
      os_log_type_t v4 = v12;
      if (!os_log_type_enabled(v3, v12)) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v14 = "nw_replicate_options_enumerate_endpoints_with_expiration";
      uint64_t v5 = "%{public}s called with null options, backtrace limit exceeded";
      goto LABEL_32;
    }
    uint64_t v6 = (char *)__nw_create_backtrace_string();
    uint64_t v3 = __nwlog_obj();
    os_log_type_t v4 = v12;
    BOOL v7 = os_log_type_enabled(v3, v12);
    if (!v6)
    {
      if (!v7) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v14 = "nw_replicate_options_enumerate_endpoints_with_expiration";
      uint64_t v5 = "%{public}s called with null options, no backtrace";
      goto LABEL_32;
    }
    if (v7)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v14 = "nw_replicate_options_enumerate_endpoints_with_expiration";
      __int16 v15 = 2082;
      uint64_t v16 = v6;
      _os_log_impl(&dword_1830D4000, v3, v4, "%{public}s called with null options, dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v6);
  }
LABEL_33:
  if (v2) {
LABEL_34:
  }
    free(v2);
}

uint64_t nw_replicate_options_get_primary_expiration_adjustment(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    *(void *)buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&buf[16] = 0x2000000000;
    uint64_t v13 = 0;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 0x40000000;
    v9[2] = __nw_replicate_options_get_primary_expiration_adjustment_block_invoke;
    v9[3] = &unk_1E52417A8;
    v9[4] = buf;
    nw_protocol_options_access_handle(a1, v9);
    uint64_t v1 = *(void *)(*(void *)&buf[8] + 24);
    _Block_object_dispose(buf, 8);
    return v1;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_replicate_options_get_primary_expiration_adjustment";
  uint64_t v3 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v10 = 0;
  if (__nwlog_fault(v3, &type, &v10))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (os_log_type_enabled(v4, type))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_replicate_options_get_primary_expiration_adjustment";
        uint64_t v6 = "%{public}s called with null options";
LABEL_17:
        _os_log_impl(&dword_1830D4000, v4, v5, v6, buf, 0xCu);
      }
    }
    else if (v10)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      BOOL v8 = os_log_type_enabled(v4, type);
      if (backtrace_string)
      {
        if (v8)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_replicate_options_get_primary_expiration_adjustment";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = backtrace_string;
          _os_log_impl(&dword_1830D4000, v4, v5, "%{public}s called with null options, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        goto LABEL_18;
      }
      if (v8)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_replicate_options_get_primary_expiration_adjustment";
        uint64_t v6 = "%{public}s called with null options, no backtrace";
        goto LABEL_17;
      }
    }
    else
    {
      os_log_type_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (os_log_type_enabled(v4, type))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_replicate_options_get_primary_expiration_adjustment";
        uint64_t v6 = "%{public}s called with null options, backtrace limit exceeded";
        goto LABEL_17;
      }
    }
  }
LABEL_18:
  if (v3) {
    free(v3);
  }
  return 0;
}

uint64_t nw_replicate_options_get_primary_maximum_expiration(void *a1)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    *(void *)buf = 0;
    *(void *)&buf[8] = buf;
    *(void *)&buf[16] = 0x2000000000;
    uint64_t v13 = 0;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 0x40000000;
    v9[2] = __nw_replicate_options_get_primary_maximum_expiration_block_invoke;
    v9[3] = &unk_1E52417D0;
    v9[4] = buf;
    nw_protocol_options_access_handle(a1, v9);
    uint64_t v1 = *(void *)(*(void *)&buf[8] + 24);
    _Block_object_dispose(buf, 8);
    return v1;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_replicate_options_get_primary_maximum_expiration";
  uint64_t v3 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v10 = 0;
  if (__nwlog_fault(v3, &type, &v10))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (os_log_type_enabled(v4, type))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_replicate_options_get_primary_maximum_expiration";
        uint64_t v6 = "%{public}s called with null options";
LABEL_17:
        _os_log_impl(&dword_1830D4000, v4, v5, v6, buf, 0xCu);
      }
    }
    else if (v10)
    {
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      BOOL v8 = os_log_type_enabled(v4, type);
      if (backtrace_string)
      {
        if (v8)
        {
          *(_DWORD *)buf = 136446466;
          *(void *)&uint8_t buf[4] = "nw_replicate_options_get_primary_maximum_expiration";
          *(_WORD *)&unsigned char buf[12] = 2082;
          *(void *)&buf[14] = backtrace_string;
          _os_log_impl(&dword_1830D4000, v4, v5, "%{public}s called with null options, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        goto LABEL_18;
      }
      if (v8)
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_replicate_options_get_primary_maximum_expiration";
        uint64_t v6 = "%{public}s called with null options, no backtrace";
        goto LABEL_17;
      }
    }
    else
    {
      os_log_type_t v4 = __nwlog_obj();
      os_log_type_t v5 = type;
      if (os_log_type_enabled(v4, type))
      {
        *(_DWORD *)buf = 136446210;
        *(void *)&uint8_t buf[4] = "nw_replicate_options_get_primary_maximum_expiration";
        uint64_t v6 = "%{public}s called with null options, backtrace limit exceeded";
        goto LABEL_17;
      }
    }
  }
LABEL_18:
  if (v3) {
    free(v3);
  }
  return 0;
}

void nw_replicate_metadata_add_endpoint_with_expiration(nw_protocol_metadata *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  if (nw_protocol_metadata_is_replicate(a1))
  {
    if (a2)
    {
      v16[0] = MEMORY[0x1E4F143A8];
      v16[1] = 0x40000000;
      v16[2] = __nw_replicate_metadata_add_endpoint_with_expiration_block_invoke;
      v16[3] = &__block_descriptor_tmp_16_41800;
      v16[4] = a1;
      v16[5] = a2;
      v16[6] = a3;
      v16[7] = a4;
      nw_protocol_metadata_access_handle((uint64_t)a1, (uint64_t)v16);
      return;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v20 = "nw_replicate_metadata_add_endpoint_with_expiration";
    BOOL v8 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v18 = OS_LOG_TYPE_ERROR;
    char v17 = 0;
    if (__nwlog_fault(v8, &v18, &v17))
    {
      if (v18 == OS_LOG_TYPE_FAULT)
      {
        BOOL v9 = __nwlog_obj();
        os_log_type_t v10 = v18;
        if (!os_log_type_enabled(v9, v18)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v20 = "nw_replicate_metadata_add_endpoint_with_expiration";
        char v11 = "%{public}s called with null endpoint";
        goto LABEL_32;
      }
      if (!v17)
      {
        BOOL v9 = __nwlog_obj();
        os_log_type_t v10 = v18;
        if (!os_log_type_enabled(v9, v18)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v20 = "nw_replicate_metadata_add_endpoint_with_expiration";
        char v11 = "%{public}s called with null endpoint, backtrace limit exceeded";
        goto LABEL_32;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      BOOL v9 = __nwlog_obj();
      os_log_type_t v10 = v18;
      BOOL v15 = os_log_type_enabled(v9, v18);
      if (backtrace_string)
      {
        if (v15)
        {
          *(_DWORD *)buf = 136446466;
          uint64_t v20 = "nw_replicate_metadata_add_endpoint_with_expiration";
          __int16 v21 = 2082;
          BOOL v22 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v9, v10, "%{public}s called with null endpoint, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        if (v8) {
          goto LABEL_34;
        }
        return;
      }
      if (v15)
      {
        *(_DWORD *)buf = 136446210;
        uint64_t v20 = "nw_replicate_metadata_add_endpoint_with_expiration";
        char v11 = "%{public}s called with null endpoint, no backtrace";
LABEL_32:
        _os_log_impl(&dword_1830D4000, v9, v10, v11, buf, 0xCu);
      }
    }
  }
  else
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    uint64_t v20 = "nw_replicate_metadata_add_endpoint_with_expiration";
    BOOL v8 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v18 = OS_LOG_TYPE_ERROR;
    char v17 = 0;
    if (!__nwlog_fault(v8, &v18, &v17)) {
      goto LABEL_33;
    }
    if (v18 == OS_LOG_TYPE_FAULT)
    {
      BOOL v9 = __nwlog_obj();
      os_log_type_t v10 = v18;
      if (!os_log_type_enabled(v9, v18)) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v20 = "nw_replicate_metadata_add_endpoint_with_expiration";
      char v11 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata)";
      goto LABEL_32;
    }
    if (!v17)
    {
      BOOL v9 = __nwlog_obj();
      os_log_type_t v10 = v18;
      if (!os_log_type_enabled(v9, v18)) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v20 = "nw_replicate_metadata_add_endpoint_with_expiration";
      char v11 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), backtrace limit exceeded";
      goto LABEL_32;
    }
    os_log_type_t v12 = (char *)__nw_create_backtrace_string();
    BOOL v9 = __nwlog_obj();
    os_log_type_t v10 = v18;
    BOOL v13 = os_log_type_enabled(v9, v18);
    if (!v12)
    {
      if (!v13) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      uint64_t v20 = "nw_replicate_metadata_add_endpoint_with_expiration";
      char v11 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), no backtrace";
      goto LABEL_32;
    }
    if (v13)
    {
      *(_DWORD *)buf = 136446466;
      uint64_t v20 = "nw_replicate_metadata_add_endpoint_with_expiration";
      __int16 v21 = 2082;
      BOOL v22 = v12;
      _os_log_impl(&dword_1830D4000, v9, v10, "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v12);
  }
LABEL_33:
  if (v8) {
LABEL_34:
  }
    free(v8);
}

uint64_t __nw_replicate_metadata_add_endpoint_with_expiration_block_invoke(uint64_t a1, uint64_t a2)
{
  os_log_type_t v4 = (os_unfair_lock_s *)(a2 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + 16));
  if (!*(unsigned char *)(a2 + 20) && *(void *)a2 && *(void *)(a2 + 8))
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6) {
      os_retain(v6);
    }
    BOOL v7 = *(void **)(a1 + 40);
    if (v7) {
      os_retain(v7);
    }
    BOOL is_inline = nw_context_is_inline(*(void **)(a2 + 8));
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 0x40000000;
    v10[2] = __nw_replicate_metadata_add_endpoint_with_expiration_block_invoke_2;
    v10[3] = &__block_descriptor_tmp_15_41801;
    BOOL v13 = is_inline;
    long long v9 = *(_OWORD *)(a1 + 48);
    long long v11 = *(_OWORD *)(a1 + 32);
    long long v12 = v9;
    if (is_inline) {
      __nw_replicate_metadata_add_endpoint_with_expiration_block_invoke_2((uint64_t)v10);
    }
    else {
      nw_queue_context_async(*(void **)(a2 + 8), v10);
    }
  }
  os_unfair_lock_unlock(v4);
  return 1;
}

void __nw_replicate_metadata_add_endpoint_with_expiration_block_invoke_2(uint64_t a1)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  id v2 = *(nw_protocol_metadata **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  if (!nw_protocol_metadata_is_replicate(v2))
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_replicate_metadata_add_endpoint_on_queue";
    long long v9 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v17 = 0;
    if (!__nwlog_fault(v9, &type, &v17)) {
      goto LABEL_37;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      os_log_type_t v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (!os_log_type_enabled(v10, type)) {
        goto LABEL_37;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_replicate_metadata_add_endpoint_on_queue";
      long long v12 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata)";
LABEL_36:
      _os_log_impl(&dword_1830D4000, v10, v11, v12, buf, 0xCu);
      goto LABEL_37;
    }
    if (!v17)
    {
      os_log_type_t v10 = __nwlog_obj();
      os_log_type_t v11 = type;
      if (!os_log_type_enabled(v10, type)) {
        goto LABEL_37;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_replicate_metadata_add_endpoint_on_queue";
      long long v12 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), backtrace limit exceeded";
      goto LABEL_36;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    os_log_type_t v10 = __nwlog_obj();
    os_log_type_t v11 = type;
    BOOL v14 = os_log_type_enabled(v10, type);
    if (!backtrace_string)
    {
      if (!v14) {
        goto LABEL_37;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_replicate_metadata_add_endpoint_on_queue";
      long long v12 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), no backtrace";
      goto LABEL_36;
    }
    if (v14)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_replicate_metadata_add_endpoint_on_queue";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = backtrace_string;
      _os_log_impl(&dword_1830D4000, v10, v11, "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(backtrace_string);
LABEL_37:
    if (!v9) {
      goto LABEL_4;
    }
    goto LABEL_38;
  }
  if (v3)
  {
    *(void *)buf = MEMORY[0x1E4F143A8];
    *(void *)&buf[8] = 0x40000000;
    *(void *)&buf[16] = ___ZL43nw_replicate_metadata_add_endpoint_on_queueP20nw_protocol_metadataP11nw_endpointbxy_block_invoke;
    uint64_t v20 = &__block_descriptor_tmp_48_41812;
    char v24 = v4 ^ 1;
    uint64_t v21 = v3;
    uint64_t v22 = v5;
    uint64_t v23 = v6;
    nw_protocol_metadata_access_handle((uint64_t)v2, (uint64_t)buf);
    goto LABEL_4;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_replicate_metadata_add_endpoint_on_queue";
  long long v9 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v17 = 0;
  if (!__nwlog_fault(v9, &type, &v17)) {
    goto LABEL_37;
  }
  if (type == OS_LOG_TYPE_FAULT)
  {
    os_log_type_t v10 = __nwlog_obj();
    os_log_type_t v11 = type;
    if (!os_log_type_enabled(v10, type)) {
      goto LABEL_37;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_replicate_metadata_add_endpoint_on_queue";
    long long v12 = "%{public}s called with null endpoint";
    goto LABEL_36;
  }
  if (!v17)
  {
    os_log_type_t v10 = __nwlog_obj();
    os_log_type_t v11 = type;
    if (!os_log_type_enabled(v10, type)) {
      goto LABEL_37;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_replicate_metadata_add_endpoint_on_queue";
    long long v12 = "%{public}s called with null endpoint, backtrace limit exceeded";
    goto LABEL_36;
  }
  BOOL v15 = (char *)__nw_create_backtrace_string();
  os_log_type_t v10 = __nwlog_obj();
  os_log_type_t v11 = type;
  BOOL v16 = os_log_type_enabled(v10, type);
  if (!v15)
  {
    if (!v16) {
      goto LABEL_37;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_replicate_metadata_add_endpoint_on_queue";
    long long v12 = "%{public}s called with null endpoint, no backtrace";
    goto LABEL_36;
  }
  if (v16)
  {
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_replicate_metadata_add_endpoint_on_queue";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v15;
    _os_log_impl(&dword_1830D4000, v10, v11, "%{public}s called with null endpoint, dumping backtrace:%{public}s", buf, 0x16u);
  }
  free(v15);
  if (v9) {
LABEL_38:
  }
    free(v9);
LABEL_4:
  BOOL v7 = *(void **)(a1 + 32);
  BOOL v8 = *(void **)(a1 + 40);
  if (v7) {
    os_release(v7);
  }
  if (v8) {
    os_release(v8);
  }
}

uint64_t ___ZL43nw_replicate_metadata_add_endpoint_on_queueP20nw_protocol_metadataP11nw_endpointbxy_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(a1 + 56)) {
    os_unfair_lock_lock((os_unfair_lock_t)(a2 + 16));
  }
  if (!*(unsigned char *)(a2 + 20))
  {
    if (*(void *)a2)
    {
      uint64_t v5 = *(void **)(a2 + 8);
      if (v5)
      {
        uint64_t v6 = v5;
        BOOL v7 = v6;
        if (((_BYTE)v6[17] & 8) == 0) {
          dispatch_assert_queue_V2(v6[1]);
        }

        uint64_t v8 = *(void *)(*(void *)a2 + 40);
        long long v9 = *(void **)(v8 + 72);
        if (v9 && nw_endpoint_is_equal(v9, *(void **)(a1 + 32), 0))
        {
          *(unsigned char *)(v8 + 372) &= ~4u;
          *(void *)(v8 + 80) = *(void *)(a1 + 40);
          *(void *)(v8 + 88) = *(void *)(a1 + 48);
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          os_log_type_t v10 = gLogObj;
          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v11 = *(void *)(a1 + 32);
            int v29 = 136446466;
            uint64_t v30 = "nw_replicate_metadata_add_endpoint_on_queue_block_invoke";
            __int16 v31 = 2112;
            uint64_t v32 = v11;
            _os_log_impl(&dword_1830D4000, v10, OS_LOG_TYPE_DEFAULT, "%{public}s Re-adding primary endpoint %@ for replication", (uint8_t *)&v29, 0x16u);
          }
          goto LABEL_35;
        }
        long long v12 = *(void **)(v8 + 176);
        BOOL v13 = v12 == 0;
        if (v12)
        {
          int is_equal = nw_endpoint_is_equal(v12, *(void **)(a1 + 32), 0);
          BOOL v15 = *(void **)(v8 + 184);
          if (v15) {
            goto LABEL_17;
          }
        }
        else
        {
          int is_equal = 0;
          BOOL v15 = *(void **)(v8 + 184);
          if (v15)
          {
LABEL_17:
            unsigned int v16 = 0;
            is_equal |= nw_endpoint_is_equal(v15, *(void **)(a1 + 32), 0);
            char v17 = *(void **)(v8 + 192);
            if (v17) {
              goto LABEL_18;
            }
            goto LABEL_29;
          }
        }
        BOOL v13 = 1;
        unsigned int v16 = 1;
        char v17 = *(void **)(v8 + 192);
        if (v17)
        {
LABEL_18:
          is_equal |= nw_endpoint_is_equal(v17, *(void **)(a1 + 32), 0);
          os_log_type_t v18 = *(void **)(v8 + 200);
          if (v18) {
            goto LABEL_19;
          }
          goto LABEL_30;
        }
LABEL_29:
        unsigned int v16 = 2;
        BOOL v13 = 1;
        os_log_type_t v18 = *(void **)(v8 + 200);
        if (v18)
        {
LABEL_19:
          is_equal |= nw_endpoint_is_equal(v18, *(void **)(a1 + 32), 0);
          uint64_t v19 = *(void **)(v8 + 208);
          if (v19) {
            goto LABEL_20;
          }
          goto LABEL_31;
        }
LABEL_30:
        unsigned int v16 = 3;
        BOOL v13 = 1;
        uint64_t v19 = *(void **)(v8 + 208);
        if (v19)
        {
LABEL_20:
          is_equal |= nw_endpoint_is_equal(v19, *(void **)(a1 + 32), 0);
          uint64_t v20 = *(void **)(v8 + 216);
          if (v20) {
            goto LABEL_21;
          }
          goto LABEL_32;
        }
LABEL_31:
        unsigned int v16 = 4;
        BOOL v13 = 1;
        uint64_t v20 = *(void **)(v8 + 216);
        if (v20)
        {
LABEL_21:
          is_equal |= nw_endpoint_is_equal(v20, *(void **)(a1 + 32), 0);
          uint64_t v21 = *(void **)(v8 + 224);
          if (v21) {
            goto LABEL_22;
          }
          goto LABEL_33;
        }
LABEL_32:
        unsigned int v16 = 5;
        BOOL v13 = 1;
        uint64_t v21 = *(void **)(v8 + 224);
        if (v21)
        {
LABEL_22:
          is_equal |= nw_endpoint_is_equal(v21, *(void **)(a1 + 32), 0);
          uint64_t v22 = *(void **)(v8 + 232);
          if (v22) {
            goto LABEL_23;
          }
          goto LABEL_34;
        }
LABEL_33:
        unsigned int v16 = 6;
        BOOL v13 = 1;
        uint64_t v22 = *(void **)(v8 + 232);
        if (v22)
        {
LABEL_23:
          if (((nw_endpoint_is_equal(v22, *(void **)(a1 + 32), 0) | is_equal) & 1) == 0)
          {
            if (!v13)
            {
              uint64_t v23 = __nwlog_obj();
              if (!os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
                goto LABEL_4;
              }
              uint64_t v24 = *(void *)(a1 + 32);
              int v29 = 136446466;
              uint64_t v30 = "nw_replicate_metadata_add_endpoint_on_queue_block_invoke";
              __int16 v31 = 2112;
              uint64_t v32 = v24;
              uint64_t v25 = "%{public}s Will not add endpoint %@ for replication, no room for more endpoints";
LABEL_37:
              _os_log_impl(&dword_1830D4000, v23, OS_LOG_TYPE_ERROR, v25, (uint8_t *)&v29, 0x16u);
              goto LABEL_4;
            }
            goto LABEL_39;
          }
          goto LABEL_35;
        }
LABEL_34:
        if (!is_equal)
        {
          unsigned int v16 = 7;
LABEL_39:
          pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
          networkd_settings_init();
          BOOL v27 = gLogObj;
          if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v28 = *(void *)(a1 + 32);
            int v29 = 136446466;
            uint64_t v30 = "nw_replicate_metadata_add_endpoint_on_queue_block_invoke";
            __int16 v31 = 2112;
            uint64_t v32 = v28;
            _os_log_impl(&dword_1830D4000, v27, OS_LOG_TYPE_DEFAULT, "%{public}s Adding endpoint %@ for replication", (uint8_t *)&v29, 0x16u);
          }
          nw_protocol_replicate_add_secondary_endpoint(v8, *(void *)(a1 + 32), v16, *(void *)(a1 + 40), *(void *)(a1 + 48));
          goto LABEL_4;
        }
LABEL_35:
        pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
        networkd_settings_init();
        uint64_t v23 = gLogObj;
        if (!os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR)) {
          goto LABEL_4;
        }
        uint64_t v26 = *(void *)(a1 + 32);
        int v29 = 136446466;
        uint64_t v30 = "nw_replicate_metadata_add_endpoint_on_queue_block_invoke";
        __int16 v31 = 2112;
        uint64_t v32 = v26;
        uint64_t v25 = "%{public}s Will not add endpoint %@ for replication, already covered";
        goto LABEL_37;
      }
    }
  }
LABEL_4:
  if (*(unsigned char *)(a1 + 56)) {
    os_unfair_lock_unlock((os_unfair_lock_t)(a2 + 16));
  }
  return 1;
}

void sub_1839E8C1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void nw_replicate_metadata_add_endpoint(nw_protocol_metadata *a1, uint64_t a2)
{
}

void nw_replicate_metadata_remove_endpoint(nw_protocol_metadata *a1, uint64_t a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  if (nw_protocol_metadata_is_replicate(a1))
  {
    if (a2)
    {
      v12[0] = MEMORY[0x1E4F143A8];
      v12[1] = 0x40000000;
      v12[2] = __nw_replicate_metadata_remove_endpoint_block_invoke;
      v12[3] = &__block_descriptor_tmp_18_41827;
      v12[4] = a1;
      v12[5] = a2;
      nw_protocol_metadata_access_handle((uint64_t)a1, (uint64_t)v12);
      return;
    }
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    unsigned int v16 = "nw_replicate_metadata_remove_endpoint";
    char v4 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v14 = OS_LOG_TYPE_ERROR;
    char v13 = 0;
    if (__nwlog_fault(v4, &v14, &v13))
    {
      if (v14 == OS_LOG_TYPE_FAULT)
      {
        uint64_t v5 = __nwlog_obj();
        os_log_type_t v6 = v14;
        if (!os_log_type_enabled(v5, v14)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136446210;
        unsigned int v16 = "nw_replicate_metadata_remove_endpoint";
        BOOL v7 = "%{public}s called with null endpoint";
        goto LABEL_32;
      }
      if (!v13)
      {
        uint64_t v5 = __nwlog_obj();
        os_log_type_t v6 = v14;
        if (!os_log_type_enabled(v5, v14)) {
          goto LABEL_33;
        }
        *(_DWORD *)buf = 136446210;
        unsigned int v16 = "nw_replicate_metadata_remove_endpoint";
        BOOL v7 = "%{public}s called with null endpoint, backtrace limit exceeded";
        goto LABEL_32;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      uint64_t v5 = __nwlog_obj();
      os_log_type_t v6 = v14;
      BOOL v11 = os_log_type_enabled(v5, v14);
      if (backtrace_string)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136446466;
          unsigned int v16 = "nw_replicate_metadata_remove_endpoint";
          __int16 v17 = 2082;
          os_log_type_t v18 = backtrace_string;
          _os_log_impl(&dword_1830D4000, v5, v6, "%{public}s called with null endpoint, dumping backtrace:%{public}s", buf, 0x16u);
        }
        free(backtrace_string);
        if (v4) {
          goto LABEL_34;
        }
        return;
      }
      if (v11)
      {
        *(_DWORD *)buf = 136446210;
        unsigned int v16 = "nw_replicate_metadata_remove_endpoint";
        BOOL v7 = "%{public}s called with null endpoint, no backtrace";
LABEL_32:
        _os_log_impl(&dword_1830D4000, v5, v6, v7, buf, 0xCu);
      }
    }
  }
  else
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    unsigned int v16 = "nw_replicate_metadata_remove_endpoint";
    char v4 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t v14 = OS_LOG_TYPE_ERROR;
    char v13 = 0;
    if (!__nwlog_fault(v4, &v14, &v13)) {
      goto LABEL_33;
    }
    if (v14 == OS_LOG_TYPE_FAULT)
    {
      uint64_t v5 = __nwlog_obj();
      os_log_type_t v6 = v14;
      if (!os_log_type_enabled(v5, v14)) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      unsigned int v16 = "nw_replicate_metadata_remove_endpoint";
      BOOL v7 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata)";
      goto LABEL_32;
    }
    if (!v13)
    {
      uint64_t v5 = __nwlog_obj();
      os_log_type_t v6 = v14;
      if (!os_log_type_enabled(v5, v14)) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      unsigned int v16 = "nw_replicate_metadata_remove_endpoint";
      BOOL v7 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), backtrace limit exceeded";
      goto LABEL_32;
    }
    uint64_t v8 = (char *)__nw_create_backtrace_string();
    uint64_t v5 = __nwlog_obj();
    os_log_type_t v6 = v14;
    BOOL v9 = os_log_type_enabled(v5, v14);
    if (!v8)
    {
      if (!v9) {
        goto LABEL_33;
      }
      *(_DWORD *)buf = 136446210;
      unsigned int v16 = "nw_replicate_metadata_remove_endpoint";
      BOOL v7 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), no backtrace";
      goto LABEL_32;
    }
    if (v9)
    {
      *(_DWORD *)buf = 136446466;
      unsigned int v16 = "nw_replicate_metadata_remove_endpoint";
      __int16 v17 = 2082;
      os_log_type_t v18 = v8;
      _os_log_impl(&dword_1830D4000, v5, v6, "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(v8);
  }
LABEL_33:
  if (v4) {
LABEL_34:
  }
    free(v4);
}

uint64_t __nw_replicate_metadata_remove_endpoint_block_invoke(uint64_t a1, uint64_t a2)
{
  char v4 = (os_unfair_lock_s *)(a2 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(a2 + 16));
  if (!*(unsigned char *)(a2 + 20) && *(void *)a2 && *(void *)(a2 + 8))
  {
    os_log_type_t v6 = *(void **)(a1 + 32);
    if (v6) {
      os_retain(v6);
    }
    BOOL v7 = *(void **)(a1 + 40);
    if (v7) {
      os_retain(v7);
    }
    BOOL is_inline = nw_context_is_inline(*(void **)(a2 + 8));
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 0x40000000;
    v9[2] = __nw_replicate_metadata_remove_endpoint_block_invoke_2;
    v9[3] = &__block_descriptor_tmp_17_41828;
    long long v10 = *(_OWORD *)(a1 + 32);
    BOOL v11 = is_inline;
    if (is_inline) {
      __nw_replicate_metadata_remove_endpoint_block_invoke_2((uint64_t)v9);
    }
    else {
      nw_queue_context_async(*(void **)(a2 + 8), v9);
    }
  }
  os_unfair_lock_unlock(v4);
  return 1;
}

void __nw_replicate_metadata_remove_endpoint_block_invoke_2(uint64_t a1)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  id v2 = *(nw_protocol_metadata **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 48);
  if (!nw_protocol_metadata_is_replicate(v2))
  {
    __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_replicate_metadata_remove_endpoint_on_queue";
    BOOL v7 = (char *)_os_log_send_and_compose_impl();
    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v15 = 0;
    if (!__nwlog_fault(v7, &type, &v15)) {
      goto LABEL_37;
    }
    if (type == OS_LOG_TYPE_FAULT)
    {
      uint64_t v8 = __nwlog_obj();
      os_log_type_t v9 = type;
      if (!os_log_type_enabled(v8, type)) {
        goto LABEL_37;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_replicate_metadata_remove_endpoint_on_queue";
      long long v10 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata)";
LABEL_36:
      _os_log_impl(&dword_1830D4000, v8, v9, v10, buf, 0xCu);
      goto LABEL_37;
    }
    if (!v15)
    {
      uint64_t v8 = __nwlog_obj();
      os_log_type_t v9 = type;
      if (!os_log_type_enabled(v8, type)) {
        goto LABEL_37;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_replicate_metadata_remove_endpoint_on_queue";
      long long v10 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), backtrace limit exceeded";
      goto LABEL_36;
    }
    backtrace_string = (char *)__nw_create_backtrace_string();
    uint64_t v8 = __nwlog_obj();
    os_log_type_t v9 = type;
    BOOL v12 = os_log_type_enabled(v8, type);
    if (!backtrace_string)
    {
      if (!v12) {
        goto LABEL_37;
      }
      *(_DWORD *)buf = 136446210;
      *(void *)&uint8_t buf[4] = "nw_replicate_metadata_remove_endpoint_on_queue";
      long long v10 = "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), no backtrace";
      goto LABEL_36;
    }
    if (v12)
    {
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = "nw_replicate_metadata_remove_endpoint_on_queue";
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = backtrace_string;
      _os_log_impl(&dword_1830D4000, v8, v9, "%{public}s called with null nw_protocol_metadata_is_replicate(metadata), dumping backtrace:%{public}s", buf, 0x16u);
    }
    free(backtrace_string);
LABEL_37:
    if (!v7) {
      goto LABEL_4;
    }
    goto LABEL_38;
  }
  if (v3)
  {
    *(void *)buf = MEMORY[0x1E4F143A8];
    *(void *)&buf[8] = 0x40000000;
    *(void *)&buf[16] = ___ZL46nw_replicate_metadata_remove_endpoint_on_queueP20nw_protocol_metadataP11nw_endpointb_block_invoke;
    os_log_type_t v18 = &__block_descriptor_tmp_49_41839;
    char v20 = v4 ^ 1;
    uint64_t v19 = v3;
    nw_protocol_metadata_access_handle((uint64_t)v2, (uint64_t)buf);
    goto LABEL_4;
  }
  __nwlog_obj();
  *(_DWORD *)buf = 136446210;
  *(void *)&uint8_t buf[4] = "nw_replicate_metadata_remove_endpoint_on_queue";
  BOOL v7 = (char *)_os_log_send_and_compose_impl();
  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v15 = 0;
  if (!__nwlog_fault(v7, &type, &v15)) {
    goto LABEL_37;
  }
  if (type == OS_LOG_TYPE_FAULT)
  {
    uint64_t v8 = __nwlog_obj();
    os_log_type_t v9 = type;
    if (!os_log_type_enabled(v8, type)) {
      goto LABEL_37;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_replicate_metadata_remove_endpoint_on_queue";
    long long v10 = "%{public}s called with null endpoint";
    goto LABEL_36;
  }
  if (!v15)
  {
    uint64_t v8 = __nwlog_obj();
    os_log_type_t v9 = type;
    if (!os_log_type_enabled(v8, type)) {
      goto LABEL_37;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_replicate_metadata_remove_endpoint_on_queue";
    long long v10 = "%{public}s called with null endpoint, backtrace limit exceeded";
    goto LABEL_36;
  }
  char v13 = (char *)__nw_create_backtrace_string();
  uint64_t v8 = __nwlog_obj();
  os_log_type_t v9 = type;
  BOOL v14 = os_log_type_enabled(v8, type);
  if (!v13)
  {
    if (!v14) {
      goto LABEL_37;
    }
    *(_DWORD *)buf = 136446210;
    *(void *)&uint8_t buf[4] = "nw_replicate_metadata_remove_endpoint_on_queue";
    long long v10 = "%{public}s called with null endpoint, no backtrace";
    goto LABEL_36;
  }
  if (v14)
  {
    *(_DWORD *)buf = 136446466;
    *(void *)&uint8_t buf[4] = "nw_replicate_metadata_remove_endpoint_on_queue";
    *(_WORD *)&unsigned char buf[12] = 2082;
    *(void *)&buf[14] = v13;
    _os_log_impl(&dword_1830D4000, v8, v9, "%{public}s called with null endpoint, dumping backtrace:%{public}s", buf, 0x16u);
  }
  free(v13);
  if (v7) {
LABEL_38:
  }
    free(v7);
LABEL_4:
  uint64_t v5 = *(void **)(a1 + 32);
  os_log_type_t v6 = *(void **)(a1 + 40);
  if (v5) {
    os_release(v5);
  }
  if (v6) {
    os_release(v6);
  }
}

uint64_t ___ZL46nw_replicate_metadata_remove_endpoint_on_queueP20nw_protocol_metadataP11nw_endpointb_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(a1 + 40)) {
    os_unfair_lock_lock((os_unfair_lock_t)(a2 + 16));
  }
  if (*(unsigned char *)(a2 + 20)) {
    goto LABEL_4;
  }
  if (!*(void *)a2) {
    goto LABEL_4;
  }
  uint64_t v5 = *(void **)(a2 + 8);
  if (!v5) {
    goto LABEL_4;
  }
  os_log_type_t v6 = v5;
  BOOL v7 = v6;
  if (((_BYTE)v6[17] & 8) == 0) {
    dispatch_assert_queue_V2(v6[1]);
  }

  uint64_t v8 = *(void *)(*(void *)a2 + 40);
  os_log_type_t v9 = *(void **)(v8 + 72);
  if (v9)
  {
    char v10 = 0;
    if (nw_endpoint_is_equal(v9, *(void **)(a1 + 32), 0))
    {
      *(unsigned char *)(v8 + 372) |= 4u;
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      BOOL v11 = gLogObj;
      if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        int v42 = 136446466;
        uint64_t v43 = "nw_replicate_metadata_remove_endpoint_on_queue_block_invoke";
        __int16 v44 = 2112;
        uint64_t v45 = v12;
        _os_log_impl(&dword_1830D4000, v11, OS_LOG_TYPE_DEFAULT, "%{public}s Removing primary endpoint %@ for replication", (uint8_t *)&v42, 0x16u);
      }
      char v10 = 1;
    }
    char v13 = *(void **)(v8 + 176);
    if (v13)
    {
LABEL_17:
      unsigned __int8 is_equal = nw_endpoint_is_equal(v13, *(void **)(a1 + 32), 0);
      char v15 = *(void **)(v8 + 184);
      if (v15) {
        goto LABEL_18;
      }
      goto LABEL_45;
    }
  }
  else
  {
    char v10 = 0;
    char v13 = *(void **)(v8 + 176);
    if (v13) {
      goto LABEL_17;
    }
  }
  unsigned __int8 is_equal = 0;
  char v15 = *(void **)(v8 + 184);
  if (v15)
  {
LABEL_18:
    unsigned int v16 = nw_endpoint_is_equal(v15, *(void **)(a1 + 32), 0);
    is_equal |= v16;
    __int16 v17 = *(void **)(v8 + 192);
    if (v17) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_45:
  unsigned int v16 = 0;
  __int16 v17 = *(void **)(v8 + 192);
  if (v17)
  {
LABEL_19:
    int v18 = nw_endpoint_is_equal(v17, *(void **)(a1 + 32), 0);
    is_equal |= v18;
    if (v18) {
      unsigned int v16 = 2;
    }
  }
LABEL_21:
  uint64_t v19 = *(void **)(v8 + 200);
  if (v19)
  {
    int v20 = nw_endpoint_is_equal(v19, *(void **)(a1 + 32), 0);
    is_equal |= v20;
    if (v20) {
      unsigned int v16 = 3;
    }
  }
  uint64_t v21 = *(void **)(v8 + 208);
  if (v21)
  {
    int v22 = nw_endpoint_is_equal(v21, *(void **)(a1 + 32), 0);
    is_equal |= v22;
    if (v22) {
      unsigned int v16 = 4;
    }
  }
  uint64_t v23 = *(void **)(v8 + 216);
  if (v23)
  {
    int v24 = nw_endpoint_is_equal(v23, *(void **)(a1 + 32), 0);
    is_equal |= v24;
    if (v24) {
      unsigned int v16 = 5;
    }
  }
  uint64_t v25 = *(void **)(v8 + 224);
  if (v25)
  {
    int v26 = nw_endpoint_is_equal(v25, *(void **)(a1 + 32), 0);
    is_equal |= v26;
    if (v26) {
      unsigned int v16 = 6;
    }
  }
  BOOL v27 = *(void **)(v8 + 232);
  if (v27)
  {
    int v28 = nw_endpoint_is_equal(v27, *(void **)(a1 + 32), 0);
    if (v28) {
      unsigned int v16 = 7;
    }
    if ((v28 | is_equal)) {
      goto LABEL_37;
    }
  }
  else if (is_equal)
  {
LABEL_37:
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    int v29 = gLogObj;
    if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v30 = *(void *)(a1 + 32);
      int v42 = 136446466;
      uint64_t v43 = "nw_replicate_metadata_remove_endpoint_on_queue_block_invoke";
      __int16 v44 = 2112;
      uint64_t v45 = v30;
      _os_log_impl(&dword_1830D4000, v29, OS_LOG_TYPE_DEFAULT, "%{public}s Removing endpoint %@ for replication", (uint8_t *)&v42, 0x16u);
    }
    uint64_t v31 = v16;
    uint64_t v32 = v8 + 8 * v16;
    uint64_t v35 = *(void *)(v32 + 112);
    BOOL v34 = (void *)(v32 + 112);
    uint64_t v33 = v35;
    if (v35)
    {
      (*(void (**)(void))(*(void *)(v33 + 24) + 8))();
      void *v34 = 0;
    }
    uint64_t v36 = v8 + 8 * v31;
    __int16 v39 = *(void **)(v36 + 176);
    uint64_t v38 = (void *)(v36 + 176);
    BOOL v37 = v39;
    if (v39)
    {
      os_release(v37);
      *uint64_t v38 = 0;
    }
    goto LABEL_4;
  }
  if ((v10 & 1) == 0)
  {
    pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
    networkd_settings_init();
    os_log_type_t v40 = gLogObj;
    if (os_log_type_enabled((os_log_t)gLogObj, OS_LOG_TYPE_ERROR))
    {
      uint64_t v41 = *(void *)(a1 + 32);
      int v42 = 136446466;
      uint64_t v43 = "nw_replicate_metadata_remove_endpoint_on_queue_block_invoke";
      __int16 v44 = 2112;
      uint64_t v45 = v41;
      _os_log_impl(&dword_1830D4000, v40, OS_LOG_TYPE_ERROR, "%{public}s Will not remove endpoint %@ for replication, not found", (uint8_t *)&v42, 0x16u);
    }
  }
LABEL_4:
  if (*(unsigned char *)(a1 + 40)) {
    os_unfair_lock_unlock((os_unfair_lock_t)(a2 + 16));
  }
  return 1;
}

void sub_1839E99C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t nw_endpoint_host_endpoint_matches_hostname(void *a1, const char *a2, int a3, int a4, int a5)
{
  *(void *)&v66[13] = *MEMORY[0x1E4F143B8];
  id v9 = a1;
  char v10 = v9;
  if (!v9)
  {
    uint64_t v38 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v64 = "nw_endpoint_host_endpoint_matches_hostname";
    __int16 v39 = (const char *)_os_log_send_and_compose_impl();

    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v61 = 0;
    if (__nwlog_fault(v39, &type, &v61))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        os_log_type_t v40 = __nwlog_obj();
        os_log_type_t v41 = type;
        if (os_log_type_enabled(v40, type))
        {
          *(_DWORD *)buf = 136446210;
          int v64 = "nw_endpoint_host_endpoint_matches_hostname";
          _os_log_impl(&dword_1830D4000, v40, v41, "%{public}s called with null endpoint", buf, 0xCu);
        }
        goto LABEL_78;
      }
      if (!v61)
      {
        os_log_type_t v40 = __nwlog_obj();
        os_log_type_t v56 = type;
        if (os_log_type_enabled(v40, type))
        {
          *(_DWORD *)buf = 136446210;
          int v64 = "nw_endpoint_host_endpoint_matches_hostname";
          _os_log_impl(&dword_1830D4000, v40, v56, "%{public}s called with null endpoint, backtrace limit exceeded", buf, 0xCu);
        }
        goto LABEL_78;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v40 = __nwlog_obj();
      os_log_type_t v45 = type;
      BOOL v46 = os_log_type_enabled(v40, type);
      if (!backtrace_string)
      {
        if (v46)
        {
          *(_DWORD *)buf = 136446210;
          int v64 = "nw_endpoint_host_endpoint_matches_hostname";
          _os_log_impl(&dword_1830D4000, v40, v45, "%{public}s called with null endpoint, no backtrace", buf, 0xCu);
        }
        goto LABEL_78;
      }
      if (v46)
      {
        *(_DWORD *)buf = 136446466;
        int v64 = "nw_endpoint_host_endpoint_matches_hostname";
        __int16 v65 = 2082;
        *(void *)int v66 = backtrace_string;
        _os_log_impl(&dword_1830D4000, v40, v45, "%{public}s called with null endpoint, dumping backtrace:%{public}s", buf, 0x16u);
      }
LABEL_61:

      free(backtrace_string);
    }
LABEL_79:
    if (!v39) {
      goto LABEL_36;
    }
    BOOL v37 = (char *)v39;
    goto LABEL_35;
  }
  if (!a2)
  {
    int v42 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v64 = "nw_endpoint_host_endpoint_matches_hostname";
    __int16 v39 = (const char *)_os_log_send_and_compose_impl();

    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v61 = 0;
    if (__nwlog_fault(v39, &type, &v61))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        os_log_type_t v40 = __nwlog_obj();
        os_log_type_t v43 = type;
        if (os_log_type_enabled(v40, type))
        {
          *(_DWORD *)buf = 136446210;
          int v64 = "nw_endpoint_host_endpoint_matches_hostname";
          _os_log_impl(&dword_1830D4000, v40, v43, "%{public}s called with null hostname", buf, 0xCu);
        }
LABEL_78:

        goto LABEL_79;
      }
      if (!v61)
      {
        os_log_type_t v40 = __nwlog_obj();
        os_log_type_t v57 = type;
        if (os_log_type_enabled(v40, type))
        {
          *(_DWORD *)buf = 136446210;
          int v64 = "nw_endpoint_host_endpoint_matches_hostname";
          _os_log_impl(&dword_1830D4000, v40, v57, "%{public}s called with null hostname, backtrace limit exceeded", buf, 0xCu);
        }
        goto LABEL_78;
      }
      backtrace_string = (char *)__nw_create_backtrace_string();
      os_log_type_t v40 = __nwlog_obj();
      os_log_type_t v51 = type;
      BOOL v52 = os_log_type_enabled(v40, type);
      if (!backtrace_string)
      {
        if (v52)
        {
          *(_DWORD *)buf = 136446210;
          int v64 = "nw_endpoint_host_endpoint_matches_hostname";
          _os_log_impl(&dword_1830D4000, v40, v51, "%{public}s called with null hostname, no backtrace", buf, 0xCu);
        }
        goto LABEL_78;
      }
      if (v52)
      {
        *(_DWORD *)buf = 136446466;
        int v64 = "nw_endpoint_host_endpoint_matches_hostname";
        __int16 v65 = 2082;
        *(void *)int v66 = backtrace_string;
        _os_log_impl(&dword_1830D4000, v40, v51, "%{public}s called with null hostname, dumping backtrace:%{public}s", buf, 0x16u);
      }
      goto LABEL_61;
    }
    goto LABEL_79;
  }
  id v11 = v9;
  int v12 = [v11 type];

  if (v12 == 2)
  {
    char v13 = (unsigned __int16 *)v11;
    BOOL v14 = (const char *)*((void *)v13 + 29);
    if (v14)
    {
      if (a5)
      {
        char v15 = v13;
        unsigned int v16 = *((id *)v15 + 2);

        if (v16) {
          int v17 = v16[2];
        }
        else {
          int v17 = 0;
        }

        BOOL v14 = (const char *)*((void *)v15 + 29);
      }
      else
      {
        int v17 = 0;
      }
      if (!strcmp(v14, a2) && v13[120] == a3)
      {
        if (v17 == a4) {
          uint64_t v31 = 1;
        }
        else {
          uint64_t v31 = a5 ^ 1u;
        }
        goto LABEL_90;
      }
LABEL_89:
      uint64_t v31 = 0;
LABEL_90:

      goto LABEL_91;
    }
    os_log_type_t v47 = __nwlog_obj();
    *(_DWORD *)buf = 136446210;
    int v64 = "nw_endpoint_host_endpoint_matches_hostname";
    uint64_t v48 = (char *)_os_log_send_and_compose_impl();

    os_log_type_t type = OS_LOG_TYPE_ERROR;
    char v61 = 0;
    if (__nwlog_fault(v48, &type, &v61))
    {
      if (type == OS_LOG_TYPE_FAULT)
      {
        __int16 v49 = __nwlog_obj();
        os_log_type_t v50 = type;
        if (os_log_type_enabled(v49, type))
        {
          *(_DWORD *)buf = 136446210;
          int v64 = "nw_endpoint_host_endpoint_matches_hostname";
          _os_log_impl(&dword_1830D4000, v49, v50, "%{public}s called with null self->hostname", buf, 0xCu);
        }
      }
      else if (v61)
      {
        os_log_type_t v53 = (char *)__nw_create_backtrace_string();
        __int16 v49 = __nwlog_obj();
        os_log_type_t v54 = type;
        BOOL v55 = os_log_type_enabled(v49, type);
        if (v53)
        {
          if (v55)
          {
            *(_DWORD *)buf = 136446466;
            int v64 = "nw_endpoint_host_endpoint_matches_hostname";
            __int16 v65 = 2082;
            *(void *)int v66 = v53;
            _os_log_impl(&dword_1830D4000, v49, v54, "%{public}s called with null self->hostname, dumping backtrace:%{public}s", buf, 0x16u);
          }

          free(v53);
          goto LABEL_87;
        }
        if (v55)
        {
          *(_DWORD *)buf = 136446210;
          int v64 = "nw_endpoint_host_endpoint_matches_hostname";
          _os_log_impl(&dword_1830D4000, v49, v54, "%{public}s called with null self->hostname, no backtrace", buf, 0xCu);
        }
      }
      else
      {
        __int16 v49 = __nwlog_obj();
        os_log_type_t v58 = type;
        if (os_log_type_enabled(v49, type))
        {
          *(_DWORD *)buf = 136446210;
          int v64 = "nw_endpoint_host_endpoint_matches_hostname";
          _os_log_impl(&dword_1830D4000, v49, v58, "%{public}s called with null self->hostname, backtrace limit exceeded", buf, 0xCu);
        }
      }
    }
LABEL_87:
    if (v48) {
      free(v48);
    }
    goto LABEL_89;
  }
  pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
  networkd_settings_init();
  id v18 = (id)gLogObj;
  id v19 = v11;
  int v20 = [v19 type];

  *(_DWORD *)buf = 136446466;
  int v64 = "nw_endpoint_host_endpoint_matches_hostname";
  __int16 v65 = 1024;
  *(_DWORD *)int v66 = v20;
  LODWORD(v60) = 18;
  uint64_t v21 = (const char *)_os_log_send_and_compose_impl();

  os_log_type_t type = OS_LOG_TYPE_ERROR;
  char v61 = 0;
  if (__nwlog_fault(v21, &type, &v61))
  {
    if (type == OS_LOG_TYPE_FAULT)
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v22 = (id)gLogObj;
      os_log_type_t v23 = type;
      if (os_log_type_enabled(v22, type))
      {
        id v24 = v19;
        int v25 = objc_msgSend(v24, "type", buf, v60);

        *(_DWORD *)buf = 136446466;
        int v64 = "nw_endpoint_host_endpoint_matches_hostname";
        __int16 v65 = 1024;
        *(_DWORD *)int v66 = v25;
        _os_log_impl(&dword_1830D4000, v22, v23, "%{public}s incorrect endpoint type %u", buf, 0x12u);
      }
    }
    else if (v61)
    {
      int v26 = (char *)__nw_create_backtrace_string();
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v22 = (id)gLogObj;
      os_log_type_t v27 = type;
      BOOL v28 = os_log_type_enabled(v22, type);
      if (v26)
      {
        if (v28)
        {
          id v29 = v19;
          int v30 = objc_msgSend(v29, "type", buf, v60);

          *(_DWORD *)buf = 136446722;
          int v64 = "nw_endpoint_host_endpoint_matches_hostname";
          __int16 v65 = 1024;
          *(_DWORD *)int v66 = v30;
          v66[2] = 2082;
          *(void *)&v66[3] = v26;
          _os_log_impl(&dword_1830D4000, v22, v27, "%{public}s incorrect endpoint type %u, dumping backtrace:%{public}s", buf, 0x1Cu);
        }

        free(v26);
        if (!v21) {
          goto LABEL_36;
        }
        goto LABEL_34;
      }
      if (v28)
      {
        id v35 = v19;
        int v36 = objc_msgSend(v35, "type", buf, v60);

        *(_DWORD *)buf = 136446466;
        int v64 = "nw_endpoint_host_endpoint_matches_hostname";
        __int16 v65 = 1024;
        *(_DWORD *)int v66 = v36;
        _os_log_impl(&dword_1830D4000, v22, v27, "%{public}s incorrect endpoint type %u, no backtrace", buf, 0x12u);
      }
    }
    else
    {
      pthread_once(&nwlog_legacy_init(void)::init_once, nwlog_legacy_init_once);
      networkd_settings_init();
      int v22 = (id)gLogObj;
      os_log_type_t v32 = type;
      if (os_log_type_enabled(v22, type))
      {
        id v33 = v19;
        int v34 = objc_msgSend(v33, "type", buf, v60);

        *(_DWORD *)buf = 136446466;
        int v64 = "nw_endpoint_host_endpoint_matches_hostname";
        __int16 v65 = 1024;
        *(_DWORD *)int v66 = v34;
        _os_log_impl(&dword_1830D4000, v22, v32, "%{public}s incorrect endpoint type %u, backtrace limit exceeded", buf, 0x12u);
      }
    }
  }
  if (v21)
  {
LABEL_34:
    BOOL v37 = (char *)v21;
LABEL_35:
    free(v37);
  }
LABEL_36:
  uint64_t v31 = 0;
LABEL_91:

  return v31;
}